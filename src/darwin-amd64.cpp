// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 3/8/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1b0522c58_comptimeRangeKind{};
struct _1b0567572_Importer{};
struct _1b0647300_Kind{};
struct _1b0667584_Lookup{};
struct _1b107e0ee_CommonFlag{};
struct _1aa201e26_Range16;
struct _1aa202454_Range32;
struct _1aa20290a_RangeTable;
struct _1aa30c570_acceptRange;
struct _1aa364275_StrBuilder;
struct _1aa36ee1d_lazyBuff;
struct _1ba100e58_DirEntry;
struct _1ba1011bc_Directory;
struct _1ba10bd87_File;
struct _1ba10e681_Status;
struct _1aa63cb8b_cmdAttrs;
struct _1aa3c3a21_Log;
struct _1aa49b1d1_Token;
struct _1aa4a199a_File;
struct _1aa4a3abd_kindPair;
struct _1aa4a9bd4_lex;
struct _1ad3548b1_floatInfo;
struct _1ad355560_decimalSlice;
struct _1ad36782a_leftCheat;
struct _1ad368353_decimal;
struct _1ad37cdb2_Const;
struct _1b0487184_Ast;
struct _1b0488163_Node;
struct _1b04884b5_Directive;
struct _1b04c1ba2_TypeDecl;
struct _1b04c22ac_IdentTypeDecl;
struct _1b04c25a9_SubIdentTypeDecl;
struct _1b04c2950_NamespaceTypeDecl;
struct _1b04c2c4c_SptrTypeDecl;
struct _1b04c30d2_SlcTypeDecl;
struct _1b04c33ce_TupleTypeDecl;
struct _1b04c36cb_PtrTypeDecl;
struct _1b04c3e6d_ArrTypeDecl;
struct _1b04c46bb_MapTypeDecl;
struct _1b04c4a95_RetTypeDecl;
struct _1b04c5ed6_Expr;
struct _1b04c62d3_RangeExpr;
struct _1b04c68aa_UseExpr;
struct _1b04c6ba7_TupleExpr;
struct _1b04c7081_LitExpr;
struct _1b04c745a_UnsafeExpr;
struct _1b04c7911_IdentExpr;
struct _1b04c8093_UnaryExpr;
struct _1b04c846c_VariadicExpr;
struct _1b04c8846_CastExpr;
struct _1b04c8c20_NsSelectionExpr;
struct _1b04c91c6_SubIdentExpr;
struct _1b04c967c_BinopExpr;
struct _1b04c9cdc_FnCallExpr;
struct _1b04ca7d2_FieldExprPair;
struct _1b04cb10c_StructLit;
struct _1b04cb5b3_BraceLit;
struct _1b04cbddd_KeyValPair;
struct _1b04cc5d6_SliceExpr;
struct _1b04cd076_IndexingExpr;
struct _1b04cd6d6_SlicingExpr;
struct _1b04cd9d3_Constraint;
struct _1b04cde89_GenericDecl;
struct _1b04ce363_LabelSt;
struct _1b04ce73c_GotoSt;
struct _1b04cea39_FallSt;
struct _1b04d0199_AssignLeft;
struct _1b04d072c_AssignSt;
struct _1b04d1640_Stmt;
struct _1b04d1ca0_ScopeTree;
struct _1b04d24dc_ParamDecl;
struct _1b04d393e_FnDecl;
struct _1b04d4a1c_VarDecl;
struct _1b04d4de6_RetSt;
struct _1b04d5589_Iter;
struct _1b04d5db4_WhileKind;
struct _1b04d67bb_RangeKind;
struct _1b04d6b95_BreakSt;
struct _1b04d706e_ContSt;
struct _1b04d7525_If;
struct _1b04d78ee_Else;
struct _1b04d7da5_Conditional;
struct _1b04d85e2_TypeAliasDecl;
struct _1b04d8a98_Case;
struct _1b04d92d5_MatchCase;
struct _1b04d9aee_UseDecl;
struct _1b04da0a5_EnumItemDecl;
struct _1b04dab66_EnumDecl;
struct _1b04db491_TypeEnumItemDecl;
struct _1b04dbb01_TypeEnumDecl;
struct _1b04dbdba_FieldDecl;
struct _1b04dc7b1_StructDecl;
struct _1b04dceed_TraitDecl;
struct _1b04dd65d_Impl;
struct _1b04de97d_Field;
struct _1b04e195d_Operators;
struct _1b04e2871_Struct;
struct _1b04e4da1_FieldIns;
struct _1b04e9a32_OperandExprModel;
struct _1b04ea02c_BinopExprModel;
struct _1b04ea406_UnaryExprModel;
struct _1b04ea934_StructArgExprModel;
struct _1b04eacca_StructLitExprModel;
struct _1b04eb0c7_AllocStructLitExprModel;
struct _1b04eb65a_CastingExprModel;
struct _1b04ec00c_FnCallExprModel;
struct _1b04ec3d6_SliceExprModel;
struct _1b04ec88c_IndexingExprModel;
struct _1b04ecc66_AnonFnExprModel;
struct _1b04ed140_KeyValPairExprModel;
struct _1b04ed5e6_MapExprModel;
struct _1b04edb79_SlicingExprModel;
struct _1b04ee20c_TraitSubIdentExprModel;
struct _1b04eea9d_StructSubIdentExprModel;
struct _1b0500054_StructStaticIdentExprModel;
struct _1b050042d_ArrayExprModel;
struct _1b050072a_CommonIdentExprModel;
struct _1b0500cad_CommonSubIdentExprModel;
struct _1b05010aa_TupleExprModel;
struct _1b0501484_BuiltinOutCallExprModel;
struct _1b050185d_BuiltinOutlnCallExprModel;
struct _1b0501b5a_BuiltinCloneCallExprModel;
struct _1b0502034_BuiltinNewCallExprModel;
struct _1b050240d_BuiltinPanicCallExprModel;
struct _1b05028b4_BuiltinAssertCallExprModel;
struct _1b0502d6a_BuiltinMakeCallExprModel;
struct _1b0503244_BuiltinAppendCallExprModel;
struct _1b0503541_BuiltinLenCallExprModel;
struct _1b050383d_BuiltinCapCallExprModel;
struct _1b0503eae_BuiltinDeleteCallExprModel;
struct _1b0504223_BuiltinCopyCallExprModel;
struct _1b05045ec_BuiltinErrorCallExprModel;
struct _1b05048e9_SizeofExprModel;
struct _1b0504be6_AlignofExprModel;
struct _1b0504ee3_RuneExprModel;
struct _1b05052e0_IntegratedToStrExprModel;
struct _1b05056b9_BackendEmitExprModel;
struct _1b05059b6_FreeExprModel;
struct _1b0506698_RetType;
struct _1b0506e29_Param;
struct _1b05088ed_Fn;
struct _1b050a856_ParamIns;
struct _1b050b802_FnIns;
struct _1b050e99d_ReferenceStack;
struct _1b0510ebb_Pass;
struct _1b0515a81_symbolBuilder;
struct _1b051bb97_Trait;
struct _1b051d825_EnumItem;
struct _1b051e392_Enum;
struct _1b05204c5_TypeEnumItem;
struct _1b0520a9c_TypeEnum;
struct _1b0522e45_comptimeRange;
struct _1b05239a1_comptimeStructField;
struct _1b0525651_comptimeStructFields;
struct _1b0526c5c_comptimeStatic;
struct _1b052891d_comptimeStatics;
struct _1b052a018_comptimeEnumField;
struct _1b052b327_comptimeEnumFields;
struct _1b052c9aa_comptimeParam;
struct _1b052ec21_comptimeParams;
struct _1b053131b_comptimeTypeInfos;
struct _1b0532916_comptimeTypeInfo;
struct _1b0538a1b_comptimeValue;
struct _1b053b36a_comptimeFiles;
struct _1b053c965_comptimeFile;
struct _1b0541ace_constraintChecker;
struct _1b0543b14_Impl;
struct _1b0549048_Scope;
struct _1b0549466_If;
struct _1b0549763_Else;
struct _1b0549b81_Conditional;
struct _1b0549e7d_InfIter;
struct _1b054a434_WhileIter;
struct _1b054ad80_RangeIter;
struct _1b054b215_ContSt;
struct _1b054b5de_BreakSt;
struct _1b054b8db_Label;
struct _1b054bcb5_GotoSt;
struct _1b054c18e_Postfix;
struct _1b054c645_Assign;
struct _1b054ca1e_MultiAssign;
struct _1b054d17e_Match;
struct _1b054dcb7_Case;
struct _1b054e3b1_FallSt;
struct _1b054e746_RetSt;
struct _1b054eda6_scopeLabel;
struct _1b0550439_scopeGoto;
struct _1b055134c_scopeChecker;
struct _1b0563c44_directiveChecker;
struct _1b056a487_ImportInfo;
struct _1b056d3ad_Package;
struct _1b058a8b4_commonSemaMeta;
struct _1b058b4db_Sema;
struct _1b05aab26_missingRetChecker;
struct _1b05ad013_IterRelation;
struct _1b05ae1bd_Var;
struct _1b05aeed2_FuncPattern;
struct _1b05e948e_typeCompatibilityChecker;
struct _1b05eb23d_assignTypeChecker;
struct _1b05ecdaa_dynamicTypeAnnotation;
struct _1b0602c17_fnCallArgChecker;
struct _1b0605b4e_structLitChecker;
struct _1b0607931_rangeChecker;
struct _1b060a192_retTypeChecker;
struct _1b060c44c_SymbolTable;
struct _1b0612672_Data;
struct _1b06137b6_Value;
struct _1b0614366_Eval;
struct _1b0637a60_unaryEval;
struct _1b06399eb_binaryEval;
struct _1b0645dc0_InsGeneric;
struct _1b06469b4_TypeAlias;
struct _1b06477a6_TypeKind;
struct _1b064ec20_TypeSymbol;
struct _1b0650627_Prim;
struct _1b0654153_Sptr;
struct _1b0654b26_Slc;
struct _1b065571a_Tuple;
struct _1b06562ba_Map;
struct _1b0656e47_Arr;
struct _1b065791a_Ptr;
struct _1b065891b_referencer;
struct _1b065990b_typeChecker;
struct _1b0662590_identTypeLookup;
struct _1b116c594_FileInfo;
struct _1b11b4102_stmt;
struct _1b11b4993_scopeParser;
struct _1b11c2066_exprBuilder;
struct _1b11ce4c4_assignInfo;
struct _1b11d2b6a_parser;
struct _1b11e49d4_typeBuilder;
struct _1b0849722_CompileInfo;
struct _1b084abc9_directiveEval;
struct _1b11e8b1a_JuleImporter;
struct _1b11edd2e_OrderedDefines;
struct _1b11ee093_defineOrderer;
struct _1b0b26a65_liveTable;
struct _1b1390d39_scopeDeadCode;
struct _1b1395091_exprDeadCode;
struct _1b073e11c_StrCompExprModel;
struct _1b073e6e4_MutSlicingExprModel;
struct _1b073e9e1_UnsafeBinopExprModel;
struct _1b073ecdd_UnsafeIndexingExprModel;
struct _1b0740173_PushToSliceExprModel;
struct _1b074054c_AppendToSliceExprModel;
struct _1b0740849_InlineStdInternalNosafeStobs;
struct _1b0741b69_scopeOptimizer;
struct _1b0747444_exprOptimizer;
struct _1b1200935_stdCacheData;
struct _1b139ca9e_Optimizer;
struct _1b13c5bc6_AnsiEscape;
struct _1b13c7304_Logger;
struct _1b0ee0cdb_AbsTime;
struct _1b0ee14b2_Time;
struct _1b1c64d06_scopeCoder;
struct _1b1c6db12_exprCoder;
struct _1b1c7e6e4_deriveCoder;
struct _1b1c812a6_TestCoder;
struct _1b1c83e46_identCoder;
struct _1b0ee8ec0_SerializationInfo;
struct _1b0ee9597_traitHash;
struct _1b0ee9971_traitCast;
struct _1b100a388_customType;
struct _1b100ae7c_typeCoder;
struct _1b1013c54_resultCoder;
struct _1b4c6d3e4_Flag;
struct _1b4c71c55_Flag;
struct _1b4c75451_Flag;
struct _1b4c78b91_Flag;
struct _1b4c7c38c_Flag;
struct _1b1080ba0_FlagSet;
struct _1b1083631_argParser;
struct _1b0eeaab5_ObjectCoder;
struct _1b0b9d180_ObjectDeadCode;
struct _1b11eb5ce_IR;
struct _1b04e5951_StructIns;
struct _1aa5dd257_Cmd;
struct _1aa201e26_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	inline bool operator==(_1aa201e26_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1aa201e26_Range16 _other) { return !this->operator==(_other); }


};
struct _1aa202454_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	inline bool operator==(_1aa202454_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_1aa202454_Range32 _other) { return !this->operator==(_other); }


};
struct _1aa20290a_RangeTable {
	jule::Slice<_1aa201e26_Range16> _field_R16;
	jule::Slice<_1aa202454_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	


};
struct _1aa30c570_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	inline bool operator==(_1aa30c570_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_1aa30c570_acceptRange _other) { return !this->operator==(_other); }


};
struct _1aa364275_StrBuilder {
	jule::Slice<jule::U8> _field_buf;
	


};
struct _1aa36ee1d_lazyBuff {
	jule::Slice<jule::U8> _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	


};
struct _1ba100e58_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_1ba10e681_Status> _field_Stat;
	

	inline bool operator==(_1ba100e58_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_1ba100e58_DirEntry _other) { return !this->operator==(_other); }


};
struct _1ba1011bc_Directory {
	

	inline bool operator==(_1ba1011bc_Directory _other) { return true; }

	inline bool operator!=(_1ba1011bc_Directory _other) { return !this->operator==(_other); }


};
struct _1ba10bd87_File {
	jule::Uintptr _field_handle = 0;
	

	inline bool operator==(_1ba10bd87_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_1ba10bd87_File _other) { return !this->operator==(_other); }


};
struct _1ba10e681_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	inline bool operator==(_1ba10e681_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_1ba10e681_Status _other) { return !this->operator==(_other); }


};
struct _1aa63cb8b_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	inline bool operator==(_1aa63cb8b_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_1aa63cb8b_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _1aa3c3a21_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	inline bool operator==(_1aa3c3a21_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_1aa3c3a21_Log _other) { return !this->operator==(_other); }


};
struct _1aa49b1d1_Token {
	jule::Ptr<_1aa4a199a_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	inline bool operator==(_1aa49b1d1_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_1aa49b1d1_Token _other) { return !this->operator==(_other); }


};
struct _1aa4a199a_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Tokens;
	


};
struct _1aa4a3abd_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	inline bool operator==(_1aa4a3abd_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_1aa4a3abd_kindPair _other) { return !this->operator==(_other); }


};
struct _1aa4a9bd4_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_tokens;
	jule::Ptr<_1aa4a199a_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_1aa3c3a21_Log> _field_errors;
	


};
struct _1ad3548b1_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	inline bool operator==(_1ad3548b1_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1ad3548b1_floatInfo _other) { return !this->operator==(_other); }


};
struct _1ad355560_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	


};
struct _1ad36782a_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	inline bool operator==(_1ad36782a_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1ad36782a_leftCheat _other) { return !this->operator==(_other); }


};
struct _1ad368353_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	inline bool operator==(_1ad368353_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1ad368353_decimal _other) { return !this->operator==(_other); }


};
inline jule::Bool _1ad383967_Eq(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad383ca8_Lt(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad3840e9_LtEq(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad38443a_Gt(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad38477b_GtEq(_1ad37cdb2_Const*, _1ad37cdb2_Const);
struct _1ad37cdb2_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	inline jule::Bool operator==(_1ad37cdb2_Const _other) { return _1ad383967_Eq(this, _other); }

	inline bool operator!=(_1ad37cdb2_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1ad37cdb2_Const _other) { return _1ad38443a_Gt(this, _other); }

	inline jule::Bool operator>=(_1ad37cdb2_Const _other) { return _1ad38477b_GtEq(this, _other); }

	inline jule::Bool operator<(_1ad37cdb2_Const _other) { return _1ad383ca8_Lt(this, _other); }

	inline jule::Bool operator<=(_1ad37cdb2_Const _other) { return _1ad3840e9_LtEq(this, _other); }


};
struct _1b0487184_Ast {
	jule::Ptr<_1aa4a199a_File> _field_File;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1b04d9aee_UseDecl>> _field_UseDecls;
	jule::Slice<_1b0488163_Node> _field_Nodes;
	


};
struct _1b0488163_Node {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1b0488163_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b0488163_Node _other) { return !this->operator==(_other); }


};
struct _1b04884b5_Directive {
	jule::Ptr<_1aa49b1d1_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Args;
	


};
struct _1b04c1ba2_TypeDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1b04c1ba2_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b04c1ba2_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1b04c22ac_IdentTypeDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _field_Generics;
	


};
struct _1b04c25a9_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1b04c22ac_IdentTypeDecl>> _field_Idents;
	


};
struct _1b04c2950_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Idents;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	


};
struct _1b04c2c4c_SptrTypeDecl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b04c2c4c_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b04c2c4c_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b04c30d2_SlcTypeDecl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b04c30d2_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b04c30d2_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b04c33ce_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _field_Types;
	


};
struct _1b04c36cb_PtrTypeDecl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Elem;
	

	inline bool operator==(_1b04c36cb_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b04c36cb_PtrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b04c3e6d_ArrTypeDecl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Elem;
	jule::Ptr<_1b04c5ed6_Expr> _field_Size;
	

	inline bool operator==(_1b04c3e6d_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1b04c3e6d_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b04c46bb_MapTypeDecl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Key;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Val;
	

	inline bool operator==(_1b04c46bb_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b04c46bb_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1b04c4a95_RetTypeDecl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Idents;
	


};
struct _1b04c5ed6_Expr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	inline bool operator==(_1b04c5ed6_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b04c5ed6_Expr _other) { return !this->operator==(_other); }


};
struct _1b04c62d3_RangeExpr {
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04c62d3_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04c62d3_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1b04c68aa_UseExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04c68aa_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04c68aa_UseExpr _other) { return !this->operator==(_other); }


};
struct _1b04c6ba7_TupleExpr {
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_Expr;
	


};
struct _1b04c7081_LitExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Value;
	

	inline bool operator==(_1b04c7081_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b04c7081_LitExpr _other) { return !this->operator==(_other); }


};
struct _1b04c745a_UnsafeExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04c745a_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04c745a_UnsafeExpr _other) { return !this->operator==(_other); }


};
struct _1b04c7911_IdentExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	inline bool operator==(_1b04c7911_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1b04c7911_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1b04c8093_UnaryExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Op;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04c8093_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04c8093_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1b04c846c_VariadicExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04c846c_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04c846c_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1b04c8846_CastExpr {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04c8846_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04c8846_CastExpr _other) { return !this->operator==(_other); }


};
struct _1b04c8c20_NsSelectionExpr {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Ns;
	jule::Ptr<_1aa49b1d1_Token> _field_Ident;
	


};
struct _1b04c91c6_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Ptr<_1aa49b1d1_Token> _field_Ident;
	

	inline bool operator==(_1b04c91c6_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b04c91c6_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1b04c967c_BinopExpr {
	jule::Ptr<_1b04c5ed6_Expr> _field_Left;
	jule::Ptr<_1b04c5ed6_Expr> _field_Right;
	jule::Ptr<_1aa49b1d1_Token> _field_Op;
	

	inline bool operator==(_1b04c967c_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b04c967c_BinopExpr _other) { return !this->operator==(_other); }


};
struct _1b04c9cdc_FnCallExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_Args;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	


};
struct _1b04ca7d2_FieldExprPair {
	jule::Ptr<_1aa49b1d1_Token> _field_Field;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04ca7d2_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04ca7d2_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1b04cb10c_StructLit {
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_Exprs;
	


};
struct _1b04cb5b3_BraceLit {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_Exprs;
	


};
struct _1b04cbddd_KeyValPair {
	jule::Ptr<_1b04c5ed6_Expr> _field_Key;
	jule::Ptr<_1b04c5ed6_Expr> _field_Val;
	jule::Ptr<_1aa49b1d1_Token> _field_Colon;
	

	inline bool operator==(_1b04cbddd_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1b04cbddd_KeyValPair _other) { return !this->operator==(_other); }


};
struct _1b04cc5d6_SliceExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_Exprs;
	


};
struct _1b04cd076_IndexingExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Ptr<_1b04c5ed6_Expr> _field_Index;
	

	inline bool operator==(_1b04cd076_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b04cd076_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1b04cd6d6_SlicingExpr {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Ptr<_1b04c5ed6_Expr> _field_Start;
	jule::Ptr<_1b04c5ed6_Expr> _field_To;
	

	inline bool operator==(_1b04cd6d6_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1b04cd6d6_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1b04cd9d3_Constraint {
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _field_Mask;
	


};
struct _1b04cde89_GenericDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b04cd9d3_Constraint> _field_Constraint;
	

	inline bool operator==(_1b04cde89_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1b04cde89_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1b04ce363_LabelSt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b04ce363_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b04ce363_LabelSt _other) { return !this->operator==(_other); }


};
struct _1b04ce73c_GotoSt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_Label;
	

	inline bool operator==(_1b04ce73c_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b04ce73c_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b04cea39_FallSt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	

	inline bool operator==(_1b04cea39_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1b04cea39_FallSt _other) { return !this->operator==(_other); }


};
struct _1b04d0199_AssignLeft {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04d0199_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04d0199_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1b04d072c_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_1aa49b1d1_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1b04d0199_AssignLeft>> _field_Left;
	jule::Ptr<_1b04c5ed6_Expr> _field_Right;
	


};
struct _1b04d1640_Stmt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	inline bool operator==(_1b04d1640_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b04d1640_Stmt _other) { return !this->operator==(_other); }


};
struct _1b04d1ca0_ScopeTree {
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1b04d1640_Stmt> _field_Stmts;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	


};
struct _1b04d24dc_ParamDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b04d24dc_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b04d24dc_ParamDecl _other) { return !this->operator==(_other); }


};
struct _1b04d393e_FnDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_Directives;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _field_Generics;
	jule::Ptr<_1b04c4a95_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>> _field_Params;
	


};
struct _1b04d4a1c_VarDecl {
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_Directives;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	


};
struct _1b04d4de6_RetSt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04d4de6_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04d4de6_RetSt _other) { return !this->operator==(_other); }


};
struct _1b04d5589_Iter {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b04d5589_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b04d5589_Iter _other) { return !this->operator==(_other); }


};
struct _1b04d5db4_WhileKind {
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1aa49b1d1_Token> _field_NextToken;
	

	inline bool operator==(_1b04d5db4_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1b04d5db4_WhileKind _other) { return !this->operator==(_other); }


};
struct _1b04d67bb_RangeKind {
	jule::Ptr<_1aa49b1d1_Token> _field_InToken;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Ptr<_1b04d4a1c_VarDecl> _field_KeyA;
	jule::Ptr<_1b04d4a1c_VarDecl> _field_KeyB;
	

	inline bool operator==(_1b04d67bb_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b04d67bb_RangeKind _other) { return !this->operator==(_other); }


};
struct _1b04d6b95_BreakSt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_Label;
	

	inline bool operator==(_1b04d6b95_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b04d6b95_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b04d706e_ContSt {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_Label;
	

	inline bool operator==(_1b04d706e_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b04d706e_ContSt _other) { return !this->operator==(_other); }


};
struct _1b04d7525_If {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b04d7525_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b04d7525_If _other) { return !this->operator==(_other); }


};
struct _1b04d78ee_Else {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	

	inline bool operator==(_1b04d78ee_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b04d78ee_Else _other) { return !this->operator==(_other); }


};
struct _1b04d7da5_Conditional {
	jule::Ptr<_1b04d7525_If> _field_Head;
	jule::Slice<jule::Ptr<_1b04d7525_If>> _field_Tail;
	jule::Ptr<_1b04d78ee_Else> _field_Default;
	


};
struct _1b04d85e2_TypeAliasDecl {
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	

	inline bool operator==(_1b04d85e2_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b04d85e2_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1b04d8a98_Case {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_Exprs;
	


};
struct _1b04d92d5_MatchCase {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1b04d8a98_Case>> _field_Cases;
	jule::Ptr<_1b04d78ee_Else> _field_Default;
	


};
struct _1b04d9aee_UseDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	


};
struct _1b04da0a5_EnumItemDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	

	inline bool operator==(_1b04da0a5_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04da0a5_EnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b04dab66_EnumDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>> _field_Items;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	


};
struct _1b04db491_TypeEnumItemDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	

	inline bool operator==(_1b04db491_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b04db491_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1b04dbb01_TypeEnumDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	


};
struct _1b04dbdba_FieldDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Kind;
	jule::Ptr<_1b04c5ed6_Expr> _field_Default;
	

	inline bool operator==(_1b04dbdba_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b04dbdba_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1b04dc7b1_StructDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _field_Generics;
	


};
struct _1b04dceed_TraitDecl {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b04d393e_FnDecl>> _field_Methods;
	


};
struct _1b04dd65d_Impl {
	jule::Ptr<_1aa49b1d1_Token> _field_End;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Base;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b04d393e_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> _field_Statics;
	


};
struct _1b04de97d_Field {
	jule::Ptr<_1b04e2871_Struct> _field_Owner;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	jule::Ptr<_1b04c5ed6_Expr> _field_Default;
	

	inline bool operator==(_1b04de97d_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b04de97d_Field _other) { return !this->operator==(_other); }


};
struct _1b04e195d_Operators {
	jule::Ptr<_1b050b802_FnIns> _field_Eq;
	jule::Ptr<_1b050b802_FnIns> _field_Gt;
	jule::Ptr<_1b050b802_FnIns> _field_GtEq;
	jule::Ptr<_1b050b802_FnIns> _field_Lt;
	jule::Ptr<_1b050b802_FnIns> _field_LtEq;
	jule::Ptr<_1b050b802_FnIns> _field_Shl;
	jule::Ptr<_1b050b802_FnIns> _field_Shr;
	jule::Ptr<_1b050b802_FnIns> _field_Add;
	jule::Ptr<_1b050b802_FnIns> _field_Sub;
	jule::Ptr<_1b050b802_FnIns> _field_Div;
	jule::Ptr<_1b050b802_FnIns> _field_Mul;
	jule::Ptr<_1b050b802_FnIns> _field_Mod;
	jule::Ptr<_1b050b802_FnIns> _field_BitAnd;
	jule::Ptr<_1b050b802_FnIns> _field_BitOr;
	jule::Ptr<_1b050b802_FnIns> _field_BitXor;
	jule::Ptr<_1b050b802_FnIns> _field_Neg;
	jule::Ptr<_1b050b802_FnIns> _field_Pos;
	jule::Ptr<_1b050b802_FnIns> _field_BitNot;
	jule::Ptr<_1b050b802_FnIns> _field_AddAssign;
	jule::Ptr<_1b050b802_FnIns> _field_SubAssign;
	jule::Ptr<_1b050b802_FnIns> _field_DivAssign;
	jule::Ptr<_1b050b802_FnIns> _field_MulAssign;
	jule::Ptr<_1b050b802_FnIns> _field_ModAssign;
	jule::Ptr<_1b050b802_FnIns> _field_ShlAssign;
	jule::Ptr<_1b050b802_FnIns> _field_ShrAssign;
	jule::Ptr<_1b050b802_FnIns> _field_BitOrAssign;
	jule::Ptr<_1b050b802_FnIns> _field_BitAndAssign;
	jule::Ptr<_1b050b802_FnIns> _field_BitXorAssign;
	

	inline bool operator==(_1b04e195d_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1b04e195d_Operators _other) { return !this->operator==(_other); }


};
struct _1b04e2871_Struct {
	jule::Ptr<_1b058b4db_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1b04e2871_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1b04e2871_Struct>> _field_Uses;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b04de97d_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1b05088ed_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1b051bb97_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1b04e5951_StructIns>> _field_Instances;
	


};
struct _1b04e4da1_FieldIns {
	jule::Ptr<_1b04de97d_Field> _field_Decl;
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Ptr<_1b0612672_Data> _field_Default;
	

	inline bool operator==(_1b04e4da1_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1b04e4da1_FieldIns _other) { return !this->operator==(_other); }


};
struct _1b04e9a32_OperandExprModel {
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	inline bool operator==(_1b04e9a32_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1b04e9a32_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ea02c_BinopExprModel {
	jule::Ptr<_1b04e9a32_OperandExprModel> _field_Left;
	jule::Ptr<_1b04e9a32_OperandExprModel> _field_Right;
	jule::Ptr<_1aa49b1d1_Token> _field_Op;
	

	inline bool operator==(_1b04ea02c_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b04ea02c_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ea406_UnaryExprModel {
	jule::Ptr<_1b0612672_Data> _field_Expr;
	jule::Ptr<_1aa49b1d1_Token> _field_Op;
	

	inline bool operator==(_1b04ea406_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b04ea406_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ea934_StructArgExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b04e4da1_FieldIns> _field_Field;
	jule::Ptr<_1b0612672_Data> _field_Expr;
	

	inline bool operator==(_1b04ea934_StructArgExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b04ea934_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1b04eacca_StructLitExprModel {
	jule::Ptr<_1b04e5951_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1b04ea934_StructArgExprModel>> _field_Args;
	


};
struct _1b04eb0c7_AllocStructLitExprModel {
	jule::Ptr<_1b04eacca_StructLitExprModel> _field_Lit;
	

	inline bool operator==(_1b04eb0c7_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1b04eb0c7_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1b04eb65a_CastingExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Ptr<_1b06477a6_TypeKind> _field_ExprKind;
	

	inline bool operator==(_1b04eb65a_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1b04eb65a_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ec00c_FnCallExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b050b802_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1b0549048_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	


};
struct _1b04ec3d6_SliceExprModel {
	jule::Ptr<_1b06477a6_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1b04ec88c_IndexingExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b0612672_Data> _field_Expr;
	jule::Ptr<_1b0612672_Data> _field_Index;
	

	inline bool operator==(_1b04ec88c_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1b04ec88c_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ecc66_AnonFnExprModel {
	jule::Ptr<_1b050b802_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	inline bool operator==(_1b04ecc66_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1b04ecc66_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ed140_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	inline bool operator==(_1b04ed140_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b04ed140_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ed5e6_MapExprModel {
	jule::Ptr<_1b06477a6_TypeKind> _field_KeyKind;
	jule::Ptr<_1b06477a6_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1b04ed140_KeyValPairExprModel>> _field_Entries;
	


};
struct _1b04edb79_SlicingExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1b04edb79_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b04edb79_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b04ee20c_TraitSubIdentExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b05088ed_Fn> _field_Method;
	jule::Ptr<_1b051bb97_Trait> _field_Trt;
	

	inline bool operator==(_1b04ee20c_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1b04ee20c_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b04eea9d_StructSubIdentExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Ptr<_1b0612672_Data> _field_Expr;
	jule::Ptr<_1b050b802_FnIns> _field_Method;
	jule::Ptr<_1b04e4da1_FieldIns> _field_Field;
	jule::Ptr<_1b04e5951_StructIns> _field_Owner;
	

	inline bool operator==(_1b04eea9d_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1b04eea9d_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b0500054_StructStaticIdentExprModel {
	jule::Ptr<_1b04e5951_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b050b802_FnIns> _field_Method;
	

	inline bool operator==(_1b0500054_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1b0500054_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b050042d_ArrayExprModel {
	jule::Ptr<_1b0656e47_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	


};
struct _1b050072a_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	inline bool operator==(_1b050072a_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b050072a_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b0500cad_CommonSubIdentExprModel {
	jule::Ptr<_1b06477a6_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b0500cad_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b0500cad_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1b05010aa_TupleExprModel {
	jule::Slice<jule::Ptr<_1b0612672_Data>> _field_Datas;
	


};
struct _1b0501484_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1b0501484_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b0501484_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b050185d_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	inline bool operator==(_1b050185d_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1b050185d_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0501b5a_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b0501b5a_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b0501b5a_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0502034_BuiltinNewCallExprModel {
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	inline bool operator==(_1b0502034_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1b0502034_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b050240d_BuiltinPanicCallExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b050240d_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b050240d_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b05028b4_BuiltinAssertCallExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	inline bool operator==(_1b05028b4_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1b05028b4_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0502d6a_BuiltinMakeCallExprModel {
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	inline bool operator==(_1b0502d6a_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1b0502d6a_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0503244_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	inline bool operator==(_1b0503244_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1b0503244_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0503541_BuiltinLenCallExprModel {
	jule::Ptr<_1b0612672_Data> _field_Expr;
	

	inline bool operator==(_1b0503541_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b0503541_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b050383d_BuiltinCapCallExprModel {
	jule::Ptr<_1b0612672_Data> _field_Expr;
	

	inline bool operator==(_1b050383d_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b050383d_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0503eae_BuiltinDeleteCallExprModel {
	jule::Ptr<_1b0612672_Data> _field_Dest;
	jule::Ptr<_1b0612672_Data> _field_Key;
	

	inline bool operator==(_1b0503eae_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1b0503eae_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b0504223_BuiltinCopyCallExprModel {
	jule::Ptr<_1b0612672_Data> _field_Dest;
	jule::Ptr<_1b0612672_Data> _field_Src;
	

	inline bool operator==(_1b0504223_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1b0504223_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b05045ec_BuiltinErrorCallExprModel {
	jule::Ptr<_1b050b802_FnIns> _field_Func;
	jule::Ptr<_1b0612672_Data> _field_Err;
	

	inline bool operator==(_1b05045ec_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1b05045ec_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1b05048e9_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b05048e9_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b05048e9_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1b0504be6_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b0504be6_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b0504be6_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1b0504ee3_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	inline bool operator==(_1b0504ee3_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1b0504ee3_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1b05052e0_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b05052e0_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b05052e0_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1b05056b9_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	


};
struct _1b05059b6_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b05059b6_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b05059b6_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1b0506698_RetType {
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Idents;
	


};
struct _1b0506e29_Param {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	inline bool operator==(_1b0506e29_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b0506e29_Param _other) { return !this->operator==(_other); }


};
struct _1b05088ed_Fn {
	jule::Ptr<_1b058b4db_Sema> _field_sema;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_Directives;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _field_Generics;
	jule::Ptr<_1b0506698_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1b0506e29_Param>> _field_Params;
	jule::Ptr<_1b04e2871_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1b050b802_FnIns>> _field_Instances;
	


};
struct _1b050a856_ParamIns {
	jule::Ptr<_1b0506e29_Param> _field_Decl;
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	

	inline bool operator==(_1b050a856_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b050a856_ParamIns _other) { return !this->operator==(_other); }


};
struct _1b050b802_FnIns {
	jule::Ptr<_1b04e5951_StructIns> _field_Owner;
	jule::Ptr<_1b05088ed_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b050a856_ParamIns>> _field_Params;
	jule::Ptr<_1b06477a6_TypeKind> _field_Result;
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	jule::Ptr<_1b050e99d_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	


};
struct _1b050e99d_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	


};
struct _1b0510ebb_Pass {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Text;
	

	inline bool operator==(_1b0510ebb_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1b0510ebb_Pass _other) { return !this->operator==(_other); }


};
struct _1b0515a81_symbolBuilder {
	jule::Ptr<_1b0515a81_symbolBuilder> _field_owner;
	jule::Trait<_1b0567572_Importer> _field_importer;
	jule::Slice<_1aa3c3a21_Log> _field_errors;
	jule::Ptr<_1b0487184_Ast> _field_ast;
	jule::Ptr<_1b060c44c_SymbolTable> _field_table;
	


};
struct _1b051bb97_Trait {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1b064ec20_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1b05088ed_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b04e2871_Struct>> _field_Implemented;
	


};
struct _1b051d825_EnumItem {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b06137b6_Value> _field_Value;
	

	inline bool operator==(_1b051d825_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1b051d825_EnumItem _other) { return !this->operator==(_other); }


};
struct _1b051e392_Enum {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1b051d825_EnumItem>> _field_Items;
	


};
struct _1b05204c5_TypeEnumItem {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	

	inline bool operator==(_1b05204c5_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b05204c5_TypeEnumItem _other) { return !this->operator==(_other); }


};
struct _1b0520a9c_TypeEnum {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>> _field_Items;
	


};
struct _1b0522e45_comptimeRange {
	jule::Trait<_1b0522c58_comptimeRangeKind> _field_kind;
	

	inline bool operator==(_1b0522e45_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b0522e45_comptimeRange _other) { return !this->operator==(_other); }


};
struct _1b05239a1_comptimeStructField {
	jule::Ptr<_1b04e4da1_FieldIns> _field_field;
	

	inline bool operator==(_1b05239a1_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b05239a1_comptimeStructField _other) { return !this->operator==(_other); }


};
struct _1b0525651_comptimeStructFields {
	jule::Slice<jule::Ptr<_1b04e4da1_FieldIns>> _field_fields;
	


};
struct _1b0526c5c_comptimeStatic {
	jule::Ptr<_1b05ae1bd_Var> _field_field;
	

	inline bool operator==(_1b0526c5c_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b0526c5c_comptimeStatic _other) { return !this->operator==(_other); }


};
struct _1b052891d_comptimeStatics {
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_fields;
	


};
struct _1b052a018_comptimeEnumField {
	jule::Ptr<_1b051d825_EnumItem> _field_field;
	

	inline bool operator==(_1b052a018_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1b052a018_comptimeEnumField _other) { return !this->operator==(_other); }


};
struct _1b052b327_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1b051d825_EnumItem>> _field_fields;
	


};
struct _1b052c9aa_comptimeParam {
	jule::Ptr<_1b050a856_ParamIns> _field_param;
	

	inline bool operator==(_1b052c9aa_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1b052c9aa_comptimeParam _other) { return !this->operator==(_other); }


};
struct _1b052ec21_comptimeParams {
	jule::Slice<jule::Ptr<_1b050a856_ParamIns>> _field_params;
	


};
struct _1b053131b_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1b0532916_comptimeTypeInfo>> _field_types;
	


};
struct _1b0532916_comptimeTypeInfo {
	jule::Ptr<_1b06477a6_TypeKind> _field_base;
	

	inline bool operator==(_1b0532916_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1b0532916_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
struct _1b0538a1b_comptimeValue {
	jule::Ptr<_1b0612672_Data> _field_data;
	

	inline bool operator==(_1b0538a1b_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b0538a1b_comptimeValue _other) { return !this->operator==(_other); }


};
struct _1b053b36a_comptimeFiles {
	jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>> _field_files;
	


};
struct _1b053c965_comptimeFile {
	jule::Ptr<_1b060c44c_SymbolTable> _field_file;
	

	inline bool operator==(_1b053c965_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1b053c965_comptimeFile _other) { return !this->operator==(_other); }


};
struct _1b0541ace_constraintChecker {
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _field_genericsA;
	jule::Ptr<_1b050b802_FnIns> _field_fi;
	jule::Ptr<_1b04e5951_StructIns> _field_si;
	jule::Ptr<_1aa49b1d1_Token> _field_et;
	jule::Bool _field_uniq = false;
	


};
struct _1b0543b14_Impl {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Base;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1b05088ed_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_Statics;
	


};
struct _1b0549048_Scope {
	jule::Ptr<_1b0549048_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	


};
struct _1b0549466_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	

	inline bool operator==(_1b0549466_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b0549466_If _other) { return !this->operator==(_other); }


};
struct _1b0549763_Else {
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	

	inline bool operator==(_1b0549763_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b0549763_Else _other) { return !this->operator==(_other); }


};
struct _1b0549b81_Conditional {
	jule::Slice<jule::Ptr<_1b0549466_If>> _field_Elifs;
	jule::Ptr<_1b0549763_Else> _field_Default;
	


};
struct _1b0549e7d_InfIter {
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	

	inline bool operator==(_1b0549e7d_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b0549e7d_InfIter _other) { return !this->operator==(_other); }


};
struct _1b054a434_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	

	inline bool operator==(_1b054a434_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1b054a434_WhileIter _other) { return !this->operator==(_other); }


};
struct _1b054ad80_RangeIter {
	jule::Ptr<_1b0612672_Data> _field_Expr;
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	jule::Ptr<_1b05ae1bd_Var> _field_KeyA;
	jule::Ptr<_1b05ae1bd_Var> _field_KeyB;
	

	inline bool operator==(_1b054ad80_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1b054ad80_RangeIter _other) { return !this->operator==(_other); }


};
struct _1b054b215_ContSt {
	jule::Uintptr _field_It = 0;
	

	inline bool operator==(_1b054b215_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1b054b215_ContSt _other) { return !this->operator==(_other); }


};
struct _1b054b5de_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	inline bool operator==(_1b054b5de_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1b054b5de_BreakSt _other) { return !this->operator==(_other); }


};
struct _1b054b8db_Label {
	jule::Str _field_Ident;
	

	inline bool operator==(_1b054b8db_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1b054b8db_Label _other) { return !this->operator==(_other); }


};
struct _1b054bcb5_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1b054b8db_Label> _field_Label;
	

	inline bool operator==(_1b054bcb5_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1b054bcb5_GotoSt _other) { return !this->operator==(_other); }


};
struct _1b054c18e_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	inline bool operator==(_1b054c18e_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b054c18e_Postfix _other) { return !this->operator==(_other); }


};
struct _1b054c645_Assign {
	jule::Ptr<_1b04e9a32_OperandExprModel> _field_L;
	jule::Ptr<_1b04e9a32_OperandExprModel> _field_R;
	jule::Ptr<_1aa49b1d1_Token> _field_Op;
	

	inline bool operator==(_1b054c645_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1b054c645_Assign _other) { return !this->operator==(_other); }


};
struct _1b054ca1e_MultiAssign {
	jule::Slice<jule::Ptr<_1b0612672_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	


};
struct _1b054d17e_Match {
	jule::Ptr<_1b0612672_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1b054dcb7_Case>> _field_Cases;
	jule::Ptr<_1b054dcb7_Case> _field_Default;
	


};
struct _1b054dcb7_Case {
	jule::Ptr<_1b054d17e_Match> _field_Owner;
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1b0612672_Data>> _field_Exprs;
	jule::Ptr<_1b054dcb7_Case> _field_Next;
	


};
struct _1b054e3b1_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	inline bool operator==(_1b054e3b1_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1b054e3b1_FallSt _other) { return !this->operator==(_other); }


};
struct _1b054e746_RetSt {
	jule::Ptr<_1b050b802_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	inline bool operator==(_1b054e746_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1b054e746_RetSt _other) { return !this->operator==(_other); }


};
struct _1b054eda6_scopeLabel {
	jule::Ptr<_1aa49b1d1_Token> _field_token;
	jule::Ptr<_1b054b8db_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1b055134c_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	inline bool operator==(_1b054eda6_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1b054eda6_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1b0550439_scopeGoto {
	jule::Ptr<_1b054bcb5_GotoSt> _field_st;
	jule::Ptr<_1b04ce73c_GotoSt> _field_gt;
	jule::Ptr<_1b055134c_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	inline bool operator==(_1b0550439_scopeGoto _other) {
		return 
			this->_field_st == _other._field_st &&
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1b0550439_scopeGoto _other) { return !this->operator==(_other); }


};
struct _1b055134c_scopeChecker {
	jule::Ptr<_1aa49b1d1_Token> _field_calledFrom;
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Ptr<_1b050b802_FnIns> _field_owner;
	jule::Ptr<_1b055134c_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1b060c44c_SymbolTable> _field_table;
	jule::Ptr<_1b0549048_Scope> _field_scope;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_tree;
	jule::Ptr<_1b050b802_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b054eda6_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b0550439_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1b055134c_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b055134c_scopeChecker _other) { return !this->operator==(_other); }


};
struct _1b0563c44_directiveChecker {
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1b04884b5_Directive>>> _field_d;
	jule::Any _field_o;
	

	inline bool operator==(_1b0563c44_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1b0563c44_directiveChecker _other) { return !this->operator==(_other); }


};
struct _1b056a487_ImportInfo {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_Selected;
	jule::Ptr<_1b056d3ad_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	


};
struct _1b056d3ad_Package {
	jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>> _field_Files;
	


};
struct _1b058a8b4_commonSemaMeta {
	jule::Slice<jule::Ptr<_1b0532916_comptimeTypeInfo>> _field_comptimeTypeInfos;
	


};
struct _1b058b4db_Sema {
	jule::Slice<_1aa3c3a21_Log> _field_errors;
	jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>> _field_files;
	jule::Ptr<_1b060c44c_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1b058a8b4_commonSemaMeta> _field_meta;
	


};
struct _1b05aab26_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	


};
struct _1b05ad013_IterRelation {
	jule::Ptr<_1b05ae1bd_Var> _field_Range;
	

	inline bool operator==(_1b05ad013_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1b05ad013_IterRelation _other) { return !this->operator==(_other); }


};
struct _1b05ae1bd_Var {
	jule::Ptr<_1b0549048_Scope> _field_Scope;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	jule::Ptr<_1b06137b6_Value> _field_Value;
	jule::Ptr<_1b050e99d_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_Directives;
	jule::Ptr<_1b05ad013_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_Depends;
	


};
struct _1b05aeed2_FuncPattern {
	


};
struct _1b05e948e_typeCompatibilityChecker {
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Ptr<_1b06477a6_TypeKind> _field_dest;
	jule::Ptr<_1b06477a6_TypeKind> _field_src;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	

	inline bool operator==(_1b05e948e_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b05e948e_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
struct _1b05eb23d_assignTypeChecker {
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Ptr<_1b06477a6_TypeKind> _field_dest;
	jule::Ptr<_1b0612672_Data> _field_d;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	

	inline bool operator==(_1b05eb23d_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1b05eb23d_assignTypeChecker _other) { return !this->operator==(_other); }


};
struct _1b05ecdaa_dynamicTypeAnnotation {
	jule::Ptr<_1b0614366_Eval> _field_e;
	jule::Ptr<_1b050b802_FnIns> _field_f;
	jule::Ptr<_1b050a856_ParamIns> _field_p;
	jule::Ptr<_1b0612672_Data> _field_a;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	jule::Ptr<_1b06477a6_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _field_ignored;
	


};
struct _1b0602c17_fnCallArgChecker {
	jule::Ptr<_1b0614366_Eval> _field_e;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_args;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	jule::Ptr<_1b050b802_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _field_ignored;
	


};
struct _1b0605b4e_structLitChecker {
	jule::Ptr<_1b0614366_Eval> _field_e;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	jule::Ptr<_1b04e5951_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1b04ea934_StructArgExprModel>> _field_args;
	


};
struct _1b0607931_rangeChecker {
	jule::Ptr<_1b055134c_scopeChecker> _field_sc;
	jule::Ptr<_1b04d67bb_RangeKind> _field_rang;
	jule::Ptr<_1b054ad80_RangeIter> _field_Kind;
	jule::Ptr<_1b0612672_Data> _field_d;
	

	inline bool operator==(_1b0607931_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1b0607931_rangeChecker _other) { return !this->operator==(_other); }


};
struct _1b060a192_retTypeChecker {
	jule::Ptr<_1b055134c_scopeChecker> _field_sc;
	jule::Ptr<_1b050b802_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _field_exprs;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	


};
struct _1b060c44c_SymbolTable {
	jule::Ptr<_1aa4a199a_File> _field_File;
	jule::Slice<_1b0510ebb_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1b04e2871_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b05088ed_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1b051bb97_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1b051e392_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1b0520a9c_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1b0543b14_Impl>> _field_Impls;
	


};
struct _1b0612672_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1ad37cdb2_Const> _field_Constant;
	

	inline bool operator==(_1b0612672_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1b0612672_Data _other) { return !this->operator==(_other); }


};
struct _1b06137b6_Value {
	jule::Ptr<_1b04c5ed6_Expr> _field_Expr;
	jule::Ptr<_1b0612672_Data> _field_Data;
	

	inline bool operator==(_1b06137b6_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1b06137b6_Value _other) { return !this->operator==(_other); }


};
struct _1b0614366_Eval {
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Trait<_1b0667584_Lookup> _field_lookup;
	jule::Ptr<_1b06477a6_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1b05ae1bd_Var> _field_owner;
	jule::Ptr<_1b04e4da1_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	inline bool operator==(_1b0614366_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1b0614366_Eval _other) { return !this->operator==(_other); }


};
struct _1b0637a60_unaryEval {
	jule::Ptr<_1b0614366_Eval> _field_e;
	jule::Ptr<_1b0612672_Data> _field_d;
	jule::Ptr<_1b04c8093_UnaryExpr> _field_u;
	

	inline bool operator==(_1b0637a60_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1b0637a60_unaryEval _other) { return !this->operator==(_other); }


};
struct _1b06399eb_binaryEval {
	jule::Ptr<_1b0614366_Eval> _field_e;
	jule::Ptr<_1b0612672_Data> _field_l;
	jule::Ptr<_1b0612672_Data> _field_r;
	jule::Ptr<_1aa49b1d1_Token> _field_op;
	

	inline bool operator==(_1b06399eb_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1b06399eb_binaryEval _other) { return !this->operator==(_other); }


};
struct _1b0645dc0_InsGeneric {
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _field_Constraint;
	


};
struct _1b06469b4_TypeAlias {
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1b064ec20_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _field_Generics;
	


};
struct _1b06477a6_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1b0647300_Kind> _field_Kind;
	

	inline bool operator==(_1b06477a6_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b06477a6_TypeKind _other) { return !this->operator==(_other); }


};
struct _1b064ec20_TypeSymbol {
	jule::Ptr<_1b04c1ba2_TypeDecl> _field_Decl;
	jule::Ptr<_1b06477a6_TypeKind> _field_Kind;
	

	inline bool operator==(_1b064ec20_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b064ec20_TypeSymbol _other) { return !this->operator==(_other); }


};
struct _1b0650627_Prim {
	jule::Str _field_Kind;
	

	inline bool operator==(_1b0650627_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1b0650627_Prim _other) { return !this->operator==(_other); }


};
struct _1b0654153_Sptr {
	jule::Ptr<_1b06477a6_TypeKind> _field_Elem;
	

	inline bool operator==(_1b0654153_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b0654153_Sptr _other) { return !this->operator==(_other); }


};
struct _1b0654b26_Slc {
	jule::Ptr<_1b06477a6_TypeKind> _field_Elem;
	

	inline bool operator==(_1b0654b26_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b0654b26_Slc _other) { return !this->operator==(_other); }


};
struct _1b065571a_Tuple {
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _field_Types;
	


};
struct _1b06562ba_Map {
	jule::Ptr<_1b06477a6_TypeKind> _field_Key;
	jule::Ptr<_1b06477a6_TypeKind> _field_Val;
	

	inline bool operator==(_1b06562ba_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1b06562ba_Map _other) { return !this->operator==(_other); }


};
struct _1b0656e47_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1b06477a6_TypeKind> _field_Elem;
	

	inline bool operator==(_1b0656e47_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b0656e47_Arr _other) { return !this->operator==(_other); }


};
struct _1b065791a_Ptr {
	jule::Ptr<_1b06477a6_TypeKind> _field_Elem;
	

	inline bool operator==(_1b065791a_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1b065791a_Ptr _other) { return !this->operator==(_other); }


};
struct _1b065891b_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	inline bool operator==(_1b065891b_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1b065891b_referencer _other) { return !this->operator==(_other); }


};
struct _1b065990b_typeChecker {
	jule::Ptr<_1b058b4db_Sema> _field_s;
	jule::Trait<_1b0667584_Lookup> _field_rootLookup;
	jule::Trait<_1b0667584_Lookup> _field_lookup;
	jule::Ptr<_1b065891b_referencer> _field_referencer;
	jule::Ptr<_1b050e99d_ReferenceStack> _field_refers;
	jule::Ptr<_1aa49b1d1_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk = true;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1b06469b4_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	


};
struct _1b0662590_identTypeLookup {
	

	inline bool operator==(_1b0662590_identTypeLookup _other) { return true; }

	inline bool operator!=(_1b0662590_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1b116c594_FileInfo {
	jule::Ptr<_1b0487184_Ast> _field_Ast;
	jule::Slice<_1aa3c3a21_Log> _field_Errors;
	


};
struct _1b11b4102_stmt {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	


};
struct _1b11b4993_scopeParser {
	jule::Ptr<_1b11d2b6a_parser> _field_p;
	jule::Ptr<_1b04d1ca0_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1b11b4102_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	


};
struct _1b11c2066_exprBuilder {
	jule::Ptr<_1b11d2b6a_parser> _field_p;
	

	inline bool operator==(_1b11c2066_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1b11c2066_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1b11ce4c4_assignInfo {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_l;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_r;
	jule::Ptr<_1aa49b1d1_Token> _field_setter;
	jule::Bool _field_ok = false;
	


};
struct _1b11d2b6a_parser {
	jule::Ptr<_1b0487184_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1b04884b5_Directive>> _field_directives;
	jule::Slice<_1aa3c3a21_Log> _field_errors;
	jule::Ptr<_1b11c2066_exprBuilder> _field_ep;
	


};
struct _1b11e49d4_typeBuilder {
	jule::Ptr<_1b11d2b6a_parser> _field_p;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	


};
struct _1b0849722_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	inline bool operator==(_1b0849722_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1b0849722_CompileInfo _other) { return !this->operator==(_other); }


};
struct _1b084abc9_directiveEval {
	jule::Slice<_1aa3c3a21_Log> _field_logs;
	jule::Ptr<_1b04884b5_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1b11e8b1a_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	


};
struct _1b11edd2e_OrderedDefines {
	jule::Slice<jule::Ptr<_1b04e2871_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_Globals;
	


};
struct _1b11ee093_defineOrderer {
	

	inline bool operator==(_1b11ee093_defineOrderer _other) { return true; }

	inline bool operator!=(_1b11ee093_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1b0b26a65_liveTable {
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1b050b802_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1b04e5951_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1b051bb97_Trait>> _field_traits;
	


};
struct _1b1390d39_scopeDeadCode {
	jule::Ptr<_1b1390d39_scopeDeadCode> _field_parent;
	jule::Ptr<_1b0549048_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1b054b8db_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1b054bcb5_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	inline bool operator==(_1b1390d39_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1b1390d39_scopeDeadCode _other) { return !this->operator==(_other); }


};
struct _1b1395091_exprDeadCode {
	jule::Ptr<_1b1390d39_scopeDeadCode> _field_s;
	

	inline bool operator==(_1b1395091_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1b1395091_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1b073e11c_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1ad37cdb2_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	inline bool operator==(_1b073e11c_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1b073e11c_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1b073e6e4_MutSlicingExprModel {
	jule::Ptr<_1aa49b1d1_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	inline bool operator==(_1b073e6e4_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1b073e6e4_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1b073e9e1_UnsafeBinopExprModel {
	jule::Ptr<_1b04ea02c_BinopExprModel> _field_Node;
	

	inline bool operator==(_1b073e9e1_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b073e9e1_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1b073ecdd_UnsafeIndexingExprModel {
	jule::Ptr<_1b04ec88c_IndexingExprModel> _field_Node;
	

	inline bool operator==(_1b073ecdd_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1b073ecdd_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1b0740173_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1b04ec3d6_SliceExprModel> _field_Elems;
	

	inline bool operator==(_1b0740173_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1b0740173_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b074054c_AppendToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Slice = jule::Any(nullptr);
	

	inline bool operator==(_1b074054c_AppendToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Slice == _other._field_Slice;
	}

	inline bool operator!=(_1b074054c_AppendToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1b0740849_InlineStdInternalNosafeStobs {
	jule::Any _field_Str = jule::Any(nullptr);
	

	inline bool operator==(_1b0740849_InlineStdInternalNosafeStobs _other) {
		return 
			this->_field_Str == _other._field_Str;
	}

	inline bool operator!=(_1b0740849_InlineStdInternalNosafeStobs _other) { return !this->operator==(_other); }


};
struct _1b0741b69_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1b0549048_Scope> _field_scope;
	

	inline bool operator==(_1b0741b69_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1b0741b69_scopeOptimizer _other) { return !this->operator==(_other); }


};
struct _1b0747444_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	inline bool operator==(_1b0747444_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1b0747444_exprOptimizer _other) { return !this->operator==(_other); }


};
struct _1b1200935_stdCacheData {
	jule::Ptr<_1b050b802_FnIns> _field_f;
	jule::Fn<void(_1b0747444_exprOptimizer*,_1b1200935_stdCacheData*,jule::Ptr<_1b04ec00c_FnCallExprModel>*)> _field_do;
	


};
struct _1b139ca9e_Optimizer {
	jule::Ptr<_1b11eb5ce_IR> _field_ir;
	

	inline bool operator==(_1b139ca9e_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1b139ca9e_Optimizer _other) { return !this->operator==(_other); }


};
struct _1b13c5bc6_AnsiEscape {
	

	inline bool operator==(_1b13c5bc6_AnsiEscape _other) { return true; }

	inline bool operator!=(_1b13c5bc6_AnsiEscape _other) { return !this->operator==(_other); }


};
struct _1b13c7304_Logger {
	

	inline bool operator==(_1b13c7304_Logger _other) { return true; }

	inline bool operator!=(_1b13c7304_Logger _other) { return !this->operator==(_other); }


};
struct _1b0ee0cdb_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	inline bool operator==(_1b0ee0cdb_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1b0ee0cdb_AbsTime _other) { return !this->operator==(_other); }


};
struct _1b0ee14b2_Time {
	jule::U64 _field_sec = 0;
	

	inline bool operator==(_1b0ee14b2_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1b0ee14b2_Time _other) { return !this->operator==(_other); }


};
struct _1b1c64d06_scopeCoder {
	jule::Ptr<_1b0eeaab5_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b1c64d06_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b1c64d06_scopeCoder _other) { return !this->operator==(_other); }


};
struct _1b1c6db12_exprCoder {
	jule::Ptr<_1b0eeaab5_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b1c6db12_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b1c6db12_exprCoder _other) { return !this->operator==(_other); }


};
struct _1b1c7e6e4_deriveCoder {
	jule::Ptr<_1b0eeaab5_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b1c7e6e4_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b1c7e6e4_deriveCoder _other) { return !this->operator==(_other); }


};
struct _1b1c812a6_TestCoder {
	jule::Ptr<_1b04e5951_StructIns> _field_t;
	jule::Ptr<_1b05088ed_Fn> _field_tmReset;
	jule::Ptr<_1b05088ed_Fn> _field_tmFailed;
	jule::Ptr<_1b05088ed_Fn> _field_tmSkipped;
	jule::Ptr<_1b0eeaab5_ObjectCoder> _field_oc;
	

	inline bool operator==(_1b1c812a6_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b1c812a6_TestCoder _other) { return !this->operator==(_other); }


};
struct _1b1c83e46_identCoder {
	

	inline bool operator==(_1b1c83e46_identCoder _other) { return true; }

	inline bool operator!=(_1b1c83e46_identCoder _other) { return !this->operator==(_other); }


};
struct _1b0ee8ec0_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	inline bool operator==(_1b0ee8ec0_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1b0ee8ec0_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1b0ee9597_traitHash {
	jule::Ptr<_1b051bb97_Trait> _field_t;
	jule::Str _field_ti;
	jule::Ptr<_1b04e5951_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	inline bool operator==(_1b0ee9597_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_ti == _other._field_ti &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b0ee9597_traitHash _other) { return !this->operator==(_other); }


};
struct _1b0ee9971_traitCast {
	jule::Ptr<_1b051bb97_Trait> _field_t1;
	jule::Ptr<_1b051bb97_Trait> _field_t2;
	

	inline bool operator==(_1b0ee9971_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1b0ee9971_traitCast _other) { return !this->operator==(_other); }


};
struct _1b100a388_customType {
	jule::Str _field_kind;
	

	inline bool operator==(_1b100a388_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b100a388_customType _other) { return !this->operator==(_other); }


};
struct _1b100ae7c_typeCoder {
	jule::Ptr<_1b0eeaab5_ObjectCoder> _field_oc;
	jule::Ptr<_1b1013c54_resultCoder> _field_rc;
	

	inline bool operator==(_1b100ae7c_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1b100ae7c_typeCoder _other) { return !this->operator==(_other); }


};
struct _1b1013c54_resultCoder {
	jule::Ptr<_1b100ae7c_typeCoder> _field_tc;
	

	inline bool operator==(_1b1013c54_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1b1013c54_resultCoder _other) { return !this->operator==(_other); }


};
struct _1b4c6d3e4_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	inline bool operator==(_1b4c6d3e4_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b4c6d3e4_Flag _other) { return !this->operator==(_other); }


};struct _1b4c71c55_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	inline bool operator==(_1b4c71c55_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b4c71c55_Flag _other) { return !this->operator==(_other); }


};struct _1b4c75451_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	inline bool operator==(_1b4c75451_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b4c75451_Flag _other) { return !this->operator==(_other); }


};struct _1b4c78b91_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	inline bool operator==(_1b4c78b91_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b4c78b91_Flag _other) { return !this->operator==(_other); }


};struct _1b4c7c38c_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	inline bool operator==(_1b4c7c38c_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b4c7c38c_Flag _other) { return !this->operator==(_other); }


};
struct _1b1080ba0_FlagSet {
	jule::Slice<jule::Trait<_1b107e0ee_CommonFlag>> _field_flags;
	


};
struct _1b1083631_argParser {
	_1b1080ba0_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	


};
struct _1b0eeaab5_ObjectCoder {
	_1aa364275_StrBuilder _field_Obj;
	_1aa364275_StrBuilder _field_resultDecls;
	_1aa364275_StrBuilder _field_anyObj;
	jule::Ptr<_1b11eb5ce_IR> _field_ir;
	_1b0ee8ec0_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1b0ee9597_traitHash>> _field_tmap;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1b0ee9971_traitCast> _field_traitCastMap;
	jule::Ptr<_1b1c6db12_exprCoder> _field_ec;
	jule::Ptr<_1b1c64d06_scopeCoder> _field_sc;
	jule::Ptr<_1b100ae7c_typeCoder> _field_tc;
	jule::Ptr<_1b1c7e6e4_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	


};
struct _1b0b9d180_ObjectDeadCode {
	_1b0b26a65_liveTable _field_live;
	jule::Ptr<_1b11eb5ce_IR> _field_ir;
	


};
struct _1b11eb5ce_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1b056d3ad_Package> _field_Main;
	jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> _field_Used;
	_1b11edd2e_OrderedDefines _field_Ordered;
	


};
struct _1b04e5951_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1b04e2871_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1b04e4da1_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1b05088ed_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1b050e99d_ReferenceStack> _field_Refers;
	_1b04e195d_Operators _field_Operators;
	


};
struct _1aa5dd257_Cmd {
	_1aa63cb8b_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	


};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b0612672_Data__jule_tuple_x_1b0612672_Data {
	jule::Ptr<_1b0612672_Data> __jule_result_arg0;
	jule::Ptr<_1b0612672_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1b04d8a98_Case__jule_tuple_bool {
	jule::Ptr<_1b04d8a98_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b04d8a98_Case__jule_tuple_x_1b04d78ee_Else {
	jule::Slice<jule::Ptr<_1b04d8a98_Case>> __jule_result_arg0;
	jule::Ptr<_1b04d78ee_Else> __jule_result_arg1;
};
struct __jule_tuple__1b04d13dc_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool {
	jule::Ptr<_1b04d072c_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1b04c1ba2_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1b04c4a95_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log {
	jule::Slice<jule::Ptr<_1b0487184_Ast>> __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1aa3c3a21_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b11eb5ce_IR__jule_tuple_s_1aa3c3a21_Log {
	jule::Ptr<_1b11eb5ce_IR> __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1abb9a8e0_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1abb9a8e0_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1b060c44c_SymbolTable__jule_tuple_s_1aa3c3a21_Log {
	jule::Ptr<_1b060c44c_SymbolTable> __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log {
	jule::Ptr<_1b056d3ad_Package> __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log {
	jule::Ptr<_1b0487184_Ast> __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> __jule_result_arg0;
	jule::Slice<_1aa3c3a21_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline _1aa364275_StrBuilder static__1aa364594_New(jule::I64);
inline void _1aa36cc84_Write(_1aa364275_StrBuilder*, jule::Slice<jule::U8>);
inline void _1aa36d03c_WriteStr(_1aa364275_StrBuilder*, jule::Str);
inline void _1aa36d2e5_WriteByte(_1aa364275_StrBuilder*, jule::U8);
inline jule::Str _1aa36d834_Str(_1aa364275_StrBuilder*);
inline void _1aa36da32_Clear(_1aa364275_StrBuilder*);
inline jule::I64 _1aa36dcb8_Len(_1aa364275_StrBuilder*);
inline jule::Slice<jule::U8> _1aa36e2d5_Buf(_1aa364275_StrBuilder*);
inline void _1aa36e58d_SetBuf(_1aa364275_StrBuilder*, jule::Slice<jule::U8>);
inline jule::U8 _1aa37036e_index(_1aa36ee1d_lazyBuff*, jule::I64);
inline void _1aa370627_append(_1aa36ee1d_lazyBuff*, jule::U8);
inline jule::Str _1aa3708ad_string(_1aa36ee1d_lazyBuff*);
inline jule::Exceptional<jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>> static__1aa3746c5_Read(jule::Str);
inline jule::VoidExceptional static__1aa374906_Create(jule::Str);
inline jule::VoidExceptional static__1aa374b37_Remove(jule::Str);
inline jule::Exceptional<jule::Ptr<_1ba10bd87_File>> static__1ba0eed7a_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__1ba1000ab_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _1ba100540_Write(_1ba10bd87_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _1ba100881_Read(_1ba10bd87_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_1ba10bd87_File> static__1ba10c2b6_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_1ba10bd87_File>> static__1ba10c580_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1ba10c849_Read(jule::Str);
inline jule::VoidExceptional static__1ba10cbe0_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional _1ba10db25_Close(_1ba10bd87_File*);
inline jule::Exceptional<jule::Ptr<_1ba10e681_Status>> static__1ba10193c_Of(jule::Str);
inline jule::Bool _1ba10ea5a_IsDir(_1ba10e681_Status*);
inline jule::Bool _1ba10ece1_IsReg(_1ba10e681_Status*);
inline jule::U64 _1ba110077_Size(_1ba10e681_Status*);
inline jule::U8 _1aa49b555_Prec(_1aa49b1d1_Token*);
inline void _1aa4a1d85_Fill(_1aa4a199a_File*, jule::Slice<jule::U8>);
inline jule::Str _1aa4a211b_Dir(_1aa4a199a_File*);
inline jule::Str _1aa4a23a2_Name(_1aa4a199a_File*);
inline jule::Str _1aa4a2979_GetRow(_1aa4a199a_File*, jule::I64);
inline void _1aa4aa267_pushErr(_1aa4a9bd4_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _1aa4aa7c8_lex(_1aa4a9bd4_lex*);
inline jule::Str _1aa4aab19_id(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _1aa4aada0_resume(_1aa4a9bd4_lex*);
inline void _1aa4ab158_lexLineComment(_1aa4a9bd4_lex*, jule::Ptr<_1aa49b1d1_Token>*);
inline void _1aa4ab411_lexRangeComment(_1aa4a9bd4_lex*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Str _1aa4ab752_num(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1aa4aba93_escapeSeq(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1aa4abe8e_getRune(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _1aa4ac2d0_lexRune(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*);
inline jule::Str _1aa4ac566_lexStr(_1aa4a9bd4_lex*);
inline void _1aa4ac9ea_newLine(_1aa4a9bd4_lex*);
inline jule::Bool _1aa4ad05b_isOp(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1aa4ad457_lexBasicOps(_1aa4a9bd4_lex*, jule::Slice<jule::U8>, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1aa4ad853_lexId(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1aa4adc4e_lexNum(_1aa4a9bd4_lex*, jule::Slice<jule::U8>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Ptr<_1aa49b1d1_Token> _1aa4aded5_token(_1aa4a9bd4_lex*);
inline jule::Bool _1ad35ec1d_set(_1ad368353_decimal*, jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_bool _1ad36005e_floatBits(_1ad368353_decimal*, _1ad3548b1_floatInfo*);
inline void _1ad36870a_assign(_1ad368353_decimal*, jule::U64);
inline void _1ad3689b3_shift(_1ad368353_decimal*, jule::I64);
inline void _1ad368c6b_roundDown(_1ad368353_decimal*, jule::I64);
inline void _1ad369024_roundUp(_1ad368353_decimal*, jule::I64);
inline void _1ad3692cc_round(_1ad368353_decimal*, jule::I64);
inline jule::U64 _1ad369563_roundedInteger(_1ad368353_decimal*);
inline jule::Ptr<_1ad37cdb2_Const> static__1ad37d302_NewI64(jule::I64);
inline jule::Ptr<_1ad37cdb2_Const> static__1ad37d5bb_NewU64(jule::U64);
inline jule::Ptr<_1ad37cdb2_Const> static__1ad37d885_NewBool(jule::Bool);
inline jule::Ptr<_1ad37cdb2_Const> static__1ad37db4e_NewStr(jule::Str);
inline jule::Ptr<_1ad37cdb2_Const> static__1ad37de18_NewF64(jule::F64);
inline jule::Ptr<_1ad37cdb2_Const> static__1ad37e127_NewNil(void);
inline jule::I64 _1ad37e787_ReadI64(_1ad37cdb2_Const*);
inline jule::U64 _1ad37ea1d_ReadU64(_1ad37cdb2_Const*);
inline jule::Bool _1ad37eca4_ReadBool(_1ad37cdb2_Const*);
inline jule::Str _1ad38003a_ReadStr(_1ad37cdb2_Const*);
inline jule::F64 _1ad3802c1_ReadF64(_1ad37cdb2_Const*);
inline jule::I64 _1ad380557_AsI64(_1ad37cdb2_Const*);
inline jule::U64 _1ad3807dd_AsU64(_1ad37cdb2_Const*);
inline jule::F64 _1ad380a74_AsF64(_1ad37cdb2_Const*);
inline void _1ad380d2c_SetI64(_1ad37cdb2_Const*, jule::I64);
inline void _1ad3810d5_SetU64(_1ad37cdb2_Const*, jule::U64);
inline void _1ad38138d_SetBool(_1ad37cdb2_Const*, jule::Bool);
inline void _1ad381646_SetStr(_1ad37cdb2_Const*, jule::Str);
inline void _1ad3818ee_SetF64(_1ad37cdb2_Const*, jule::F64);
inline jule::Bool _1ad381d83_IsI64(_1ad37cdb2_Const*);
inline jule::Bool _1ad382119_IsU64(_1ad37cdb2_Const*);
inline jule::Bool _1ad3823a0_IsBool(_1ad37cdb2_Const*);
inline jule::Bool _1ad382636_IsStr(_1ad37cdb2_Const*);
inline jule::Bool _1ad3828bc_IsF64(_1ad37cdb2_Const*);
inline jule::Bool _1ad382b53_IsNil(_1ad37cdb2_Const*);
inline jule::Bool _1ad3832d5_And(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad383626_Or(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad384abc_Add(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad384e0d_Sub(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad38524e_Mul(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad385590_Div(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad3858d1_Mod(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad385c22_BitwiseAnd(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad386063_BitwiseOr(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad3863a4_Xor(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad3866e5_Lshift(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1ad386a36_Rshift(_1ad37cdb2_Const*, _1ad37cdb2_Const);
inline jule::Bool _1b04c3a3e_IsUnsafe(_1b04c36cb_PtrTypeDecl*);
inline jule::Bool _1b04c42d1_AutoSized(_1b04c3e6d_ArrTypeDecl*);
inline jule::Bool _1b04ca161_Unhandled(_1b04c9cdc_FnCallExpr*);
inline jule::Bool _1b04ca3e7_Ignored(_1b04c9cdc_FnCallExpr*);
inline jule::Bool _1b04d2861_IsSelf(_1b04d24dc_ParamDecl*);
inline jule::Bool _1b04d3ca2_IsAnon(_1b04d393e_FnDecl*);
inline jule::Bool _1b04d58ec_IsInf(_1b04d5589_Iter*);
inline jule::Bool _1b04d6227_IsWhileNext(_1b04d5db4_WhileKind*);
inline jule::Ptr<_1b04e4da1_FieldIns> _1b04ded02_instance(jule::Ptr<_1b04de97d_Field>);
inline jule::Ptr<_1b04e5951_StructIns> _1b04e2ce4_instance(jule::Ptr<_1b04e2871_Struct>);
inline jule::Ptr<_1b04e5951_StructIns> _1b04e3102_appendInstance(_1b04e2871_Struct*, jule::Ptr<_1b04e5951_StructIns>*);
inline jule::Ptr<_1b05088ed_Fn> _1b04e34ed_FindMethod(_1b04e2871_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1b05ae1bd_Var> _1b04e383e_FindStatic(_1b04e2871_Struct*, jule::Str);
inline jule::Ptr<_1b04de97d_Field> _1b04e3b80_FindField(_1b04e2871_Struct*, jule::Str);
inline jule::Bool _1b04e3ec1_IsImplements(_1b04e2871_Struct*, jule::Ptr<_1b051bb97_Trait>);
inline jule::Bool _1b04e4312_IsDerives(_1b04e2871_Struct*, jule::Str);
inline jule::Bool _1b04e4653_IsUses(_1b04e2871_Struct*, jule::Ptr<_1b04e2871_Struct>);
inline jule::Ptr<_1b050a856_ParamIns> _1b05072ae_instance(jule::Ptr<_1b0506e29_Param>);
inline jule::Bool _1b0507545_IsSelf(_1b0506e29_Param*);
inline jule::Bool _1b05077cb_IsRef(_1b0506e29_Param*);
inline jule::Bool _1b0508d71_IsVoid(_1b05088ed_Fn*);
inline jule::Bool _1b0509107_IsMethod(_1b05088ed_Fn*);
inline jule::Bool _1b050938d_IsEntryPoint(_1b05088ed_Fn*);
inline jule::Bool _1b0509624_IsInit(_1b05088ed_Fn*);
inline jule::Bool _1b05098aa_IsAnon(_1b05088ed_Fn*);
inline jule::Bool _1b0509b41_AnyVar(_1b05088ed_Fn*);
inline jule::Ptr<_1b050b802_FnIns> _1b0509dc7_instanceForce(jule::Ptr<_1b05088ed_Fn>);
inline jule::Ptr<_1b050b802_FnIns> _1b050a15d_instance(jule::Ptr<_1b05088ed_Fn>);
inline jule::Ptr<_1b050b802_FnIns> _1b050a46b_appendInstance(_1b05088ed_Fn*, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Str _1b050abb9_Str(_1b050a856_ParamIns*);
inline jule::Str _1b050bb43_Str(_1b050b802_FnIns*);
inline jule::Bool _1b050be84_Equal(jule::Ptr<_1b050b802_FnIns>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Bool _1b050c429_EqualFn(jule::Ptr<_1b050b802_FnIns>, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Bool _1b050c76a_equalTrait(jule::Ptr<_1b050b802_FnIns>, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _1b050ca01_Types(_1b050b802_FnIns*);
inline jule::Bool _1b050cc87_IsBuiltin(_1b050b802_FnIns*);
inline jule::Bool _1b050d01d_IsAnon(_1b050b802_FnIns*);
inline jule::Bool _1b050d35e_Same(_1b050b802_FnIns*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Str _1b050d6a0_GetKindStr(_1b050b802_FnIns*, jule::Bool);
inline jule::Ptr<_1b050e99d_ReferenceStack> static__1b050ec9a_new(void);
inline jule::I64 _1b0510196_Len(_1b050e99d_ReferenceStack*);
inline jule::Any _1b05104d7_At(_1b050e99d_ReferenceStack*, jule::I64);
inline void _1b0510790_Push(_1b050e99d_ReferenceStack*, jule::Any);
inline jule::Bool _1b38abcd1_Exist(_1b050e99d_ReferenceStack*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Bool _1b38c1a3d_Exist(_1b050e99d_ReferenceStack*, jule::Ptr<_1b05ae1bd_Var>);
inline jule::Bool _1b395c700_Exist(_1b050e99d_ReferenceStack*, jule::Ptr<_1b04e5951_StructIns>);
inline jule::Bool _1b406ac53_Exist(_1b050e99d_ReferenceStack*, jule::Ptr<_1b051bb97_Trait>);
inline void _1b0516422_pushErr(_1b0515a81_symbolBuilder*, jule::Ptr<_1aa49b1d1_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1b0516ba3_pushSuggestion(_1b0515a81_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b051709e_checkCppUseDeclPath(_1b0515a81_symbolBuilder*, jule::Ptr<_1b04d9aee_UseDecl>*, jule::Str*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b05173ac_buildCppHeaderImport(_1b0515a81_symbolBuilder*, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b05176ed_buildStdImport(_1b0515a81_symbolBuilder*, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b0517a3e_buildIdentImport(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b0517d80_buildImport(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Bool _1b05181c1_checkDuplicateUseDecl(_1b0515a81_symbolBuilder*, jule::Ptr<_1b056a487_ImportInfo>*);
inline void _1b0518534_implImportSelections(_1b0515a81_symbolBuilder*, jule::Ptr<_1b056a487_ImportInfo>*, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Str _1b0518875_getAsLinkPath(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Str);
inline void _1b0518c93_pushCycleError(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b0515a81_symbolBuilder>*, jule::Str, _1aa364275_StrBuilder*);
inline void _1b05191b1_pushCrossCycleError(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b0515a81_symbolBuilder>*, jule::Ptr<_1b056a487_ImportInfo>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b05195ac_checkImportCycles(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b056a487_ImportInfo>, jule::Ptr<_1b04d9aee_UseDecl>*);
inline void _1b05199ca_checkPackageAccessibility(_1b0515a81_symbolBuilder*, jule::Ptr<_1b04d9aee_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1b0519dc6_importPackage(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b056a487_ImportInfo>*, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b051a217_importUseDecl(jule::Ptr<_1b0515a81_symbolBuilder>, jule::Ptr<_1b04d9aee_UseDecl>*);
inline void _1b051a415_importUseDecls(jule::Ptr<_1b0515a81_symbolBuilder>);
inline void _1b051a6bd_appendNode(_1b0515a81_symbolBuilder*, _1b0488163_Node*);
inline void _1b051a8bb_appendNodes(_1b0515a81_symbolBuilder*);
inline void _1b051ab74_pushDirectivePass(_1b0515a81_symbolBuilder*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b051ad72_appendTopDirectives(_1b0515a81_symbolBuilder*);
inline void _1b051b070_build(jule::Ptr<_1b0515a81_symbolBuilder>);
inline jule::Str _1b051c060_Str(_1b051bb97_Trait*);
inline jule::Bool _1b051c3a1_Equal(jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b05088ed_Fn> _1b051c846_FindMethod(_1b051bb97_Trait*, jule::Str);
inline jule::Ptr<_1b05088ed_Fn> _1b051cec8_findMethodInherit(_1b051bb97_Trait*, jule::Str*);
inline jule::Bool _1b051dbcc_AutoExpr(_1b051d825_EnumItem*);
inline jule::Str _1b051e716_Str(_1b051e392_Enum*);
inline jule::Bool _1b051ea57_Equal(jule::Ptr<_1b051e392_Enum>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b051d825_EnumItem> _1b051ee86_FindItem(_1b051e392_Enum*, jule::Str);
inline jule::Str _1b0520ddd_Str(_1b0520a9c_TypeEnum*);
inline jule::Bool _1b052122e_Equal(jule::Ptr<_1b0520a9c_TypeEnum>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b05204c5_TypeEnumItem> _1b052165d_FindItem(_1b0520a9c_TypeEnum*, jule::Str);
inline jule::Str _1b052330d_Str(_1b0522e45_comptimeRange*);
inline jule::Bool _1b052364e_Equal(jule::Ptr<_1b0522e45_comptimeRange>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b0523d25_Str(_1b05239a1_comptimeStructField*);
inline jule::Bool _1b0524166_Equal(jule::Ptr<_1b05239a1_comptimeStructField>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b0524683__Name(jule::Ptr<_1b05239a1_comptimeStructField>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0524a7e__Type(jule::Ptr<_1b05239a1_comptimeStructField>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0524e7a__Public(jule::Ptr<_1b05239a1_comptimeStructField>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05252bb_subIdent(jule::Ptr<_1b05239a1_comptimeStructField>, jule::Str*);
inline jule::Str _1b05259d6_Str(_1b0525651_comptimeStructFields*);
inline jule::Bool _1b0525d27_Equal(jule::Ptr<_1b0525651_comptimeStructFields>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b052629a_ready(_1b0525651_comptimeStructFields*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b05266b8_step(_1b0525651_comptimeStructFields*, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::I64 _1b052694e_len(_1b0525651_comptimeStructFields*);
inline jule::Str _1b05270d1_Str(_1b0526c5c_comptimeStatic*);
inline jule::Bool _1b0527422_Equal(jule::Ptr<_1b0526c5c_comptimeStatic>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b052793e__Name(jule::Ptr<_1b0526c5c_comptimeStatic>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0527d3a__Type(jule::Ptr<_1b0526c5c_comptimeStatic>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0528236__Public(jule::Ptr<_1b0526c5c_comptimeStatic>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0528577_subIdent(jule::Ptr<_1b0526c5c_comptimeStatic>, jule::Str*);
inline jule::Str _1b0528c92_Str(_1b052891d_comptimeStatics*);
inline jule::Bool _1b05290d3_Equal(jule::Ptr<_1b052891d_comptimeStatics>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b0529556_ready(_1b052891d_comptimeStatics*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b0529974_step(_1b052891d_comptimeStatics*, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::I64 _1b0529c0a_len(_1b052891d_comptimeStatics*);
inline jule::Str _1b052a38c_Str(_1b052a018_comptimeEnumField*);
inline jule::Bool _1b052a6cd_Equal(jule::Ptr<_1b052a018_comptimeEnumField>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b052abc8__Name(jule::Ptr<_1b052a018_comptimeEnumField>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b052b019_subIdent(jule::Ptr<_1b052a018_comptimeEnumField>, jule::Str*);
inline jule::Str _1b052b7ab_Str(_1b052b327_comptimeEnumFields*);
inline jule::Bool _1b052baec_Equal(jule::Ptr<_1b052b327_comptimeEnumFields>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b052bee8_ready(_1b052b327_comptimeEnumFields*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b052c416_step(_1b052b327_comptimeEnumFields*, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::I64 _1b052c69c_len(_1b052b327_comptimeEnumFields*);
inline jule::Str _1b052cd2e_Str(_1b052c9aa_comptimeParam*);
inline jule::Bool _1b052d170_Equal(jule::Ptr<_1b052c9aa_comptimeParam>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b052d69d__Name(jule::Ptr<_1b052c9aa_comptimeParam>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b052da99__Type(jule::Ptr<_1b052c9aa_comptimeParam>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b052de95__Variadic(jule::Ptr<_1b052c9aa_comptimeParam>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b052e391__Reference(jule::Ptr<_1b052c9aa_comptimeParam>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b052e6d2_subIdent(jule::Ptr<_1b052c9aa_comptimeParam>, jule::Str*);
inline jule::Str _1b0530095_Str(_1b052ec21_comptimeParams*);
inline jule::Bool _1b05303d6_Equal(jule::Ptr<_1b052ec21_comptimeParams>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b0530859_ready(_1b052ec21_comptimeParams*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b0530c77_step(_1b052ec21_comptimeParams*, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::I64 _1b053100d_len(_1b052ec21_comptimeParams*);
inline jule::Str _1b0531690_Str(_1b053131b_comptimeTypeInfos*);
inline jule::Bool _1b05319d1_Equal(jule::Ptr<_1b053131b_comptimeTypeInfos>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b0531e54_ready(_1b053131b_comptimeTypeInfos*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b0532372_step(_1b053131b_comptimeTypeInfos*, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::I64 _1b0532608_len(_1b053131b_comptimeTypeInfos*);
inline jule::Str _1b0532c8a_Str(_1b0532916_comptimeTypeInfo*);
inline jule::Bool _1b05330cb_Equal(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b0533719__Str(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0533b15__Kind(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0534011__Bits(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053440c__Elem(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0534808__Size(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0534c04__Key(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0535100__Value(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05354eb__Fields(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05358e7__Statics(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0535ce3__Public(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05361de__Binded(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05365da__Ordered(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05369d6__Comparable(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0536dd2__Mutable(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05372cd__Types(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05376c9__Exceptional(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0537ac5__CanNil(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0537ec1__Result(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b05383bc__Params(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053870d_subIdent(jule::Ptr<_1b0532916_comptimeTypeInfo>, jule::Str*);
inline jule::Str _1b0538d90_Str(_1b0538a1b_comptimeValue*);
inline jule::Bool _1b05391d1_Equal(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b0539731__Unwrap(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0539b2c__Type(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053a028__Lvalue(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053a424__Mutable(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053a820__Const(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053ac1b__Field(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053b05c_subIdent(jule::Ptr<_1b0538a1b_comptimeValue>, jule::Str*);
inline jule::Str _1b053b6de_Str(_1b053b36a_comptimeFiles*);
inline jule::Bool _1b053ba30_Equal(jule::Ptr<_1b053b36a_comptimeFiles>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b053bea3_ready(_1b053b36a_comptimeFiles*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b053c3c1_step(_1b053b36a_comptimeFiles*, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::I64 _1b053c657_len(_1b053b36a_comptimeFiles*);
inline jule::Str _1b053ccd9_Str(_1b053c965_comptimeFile*);
inline jule::Bool _1b053d12a_Equal(jule::Ptr<_1b053c965_comptimeFile>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0612672_Data> _1b053d647__Path(jule::Ptr<_1b053c965_comptimeFile>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053da43__Name(jule::Ptr<_1b053c965_comptimeFile>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053de3e__Dir(jule::Ptr<_1b053c965_comptimeFile>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b053e280_subIdent(jule::Ptr<_1b053c965_comptimeFile>, jule::Str*);
inline jule::Fn<jule::Bool(jule::Ptr<_1b058b4db_Sema>*,jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*)> _1b0541eca_readyFn(jule::Ptr<_1b0541ace_constraintChecker>);
inline jule::Bool _1b0542261_readyFi(jule::Ptr<_1b0541ace_constraintChecker>);
inline jule::Bool _1b05424e7_readySi(jule::Ptr<_1b0541ace_constraintChecker>);
inline jule::Bool _1b054277d_ready(jule::Ptr<_1b0541ace_constraintChecker>);
inline jule::Bool _1b0542a14_check(jule::Ptr<_1b0541ace_constraintChecker>);
inline jule::Bool _1b0543ecc_IsTraitImpl(_1b0543b14_Impl*);
inline jule::Bool _1b0544263_IsStructImpl(_1b0543b14_Impl*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b05517e2_SelectPackage(_1b055134c_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>);
inline jule::Ptr<_1b05ae1bd_Var> _1b0551bdd_FindVar(_1b055134c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b05520d9_FindTypeAlias(_1b055134c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b04e2871_Struct> _1b05524d5_FindStruct(_1b055134c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b05088ed_Fn> _1b05528d1_FindFn(_1b055134c_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1b051bb97_Trait> _1b0552c22_FindTrait(_1b055134c_scopeChecker*, jule::Str);
inline jule::Ptr<_1b051e392_Enum> _1b0553063_FindEnum(_1b055134c_scopeChecker*, jule::Str);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b05533a4_FindTypeEnum(_1b055134c_scopeChecker*, jule::Str);
inline jule::Bool _1b0553706_isUnsafe(jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Bool _1b055398c_isRoot(_1b055134c_scopeChecker*);
inline void _1b0553b8a_stop(_1b055134c_scopeChecker*);
inline jule::Bool _1b0553e21_stopped(_1b055134c_scopeChecker*);
inline jule::Bool _1b05541a7_isDeferred(jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Ptr<_1b055134c_scopeChecker> _1b055443d_getRoot(jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Ptr<_1b055134c_scopeChecker> _1b05546c4_getHardRoot(jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Ptr<_1b054b8db_Label> _1b0554a15_findLabel(_1b055134c_scopeChecker*, jule::Str*);
inline jule::Ptr<_1b054eda6_scopeLabel> _1b0554d56_findLabelScope(jule::Ptr<_1b055134c_scopeChecker>, jule::Str*);
inline jule::Ptr<_1b054eda6_scopeLabel> _1b0555197_findLabelAll(_1b055134c_scopeChecker*, jule::Str*);
inline jule::Bool _1b0555593_isDuplicatedIdent(_1b055134c_scopeChecker*, jule::Uintptr, jule::Str*);
inline void _1b055584b_checkVarDecl(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d4a1c_VarDecl>);
inline void _1b0555b04_checkTypeAliasDecl(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d85e2_TypeAliasDecl>);
inline jule::Ptr<_1b0549048_Scope> _1b0555d8a_getChild(_1b055134c_scopeChecker*);
inline void _1b05562a8_checkChildSsc(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d1ca0_ScopeTree>*, jule::Ptr<_1b0549048_Scope>*, jule::Ptr<_1b055134c_scopeChecker>*);
inline jule::Ptr<_1b0549048_Scope> _1b05566a4_checkChildSc(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d1ca0_ScopeTree>*, jule::Ptr<_1b055134c_scopeChecker>*);
inline jule::Ptr<_1b0549048_Scope> _1b05569e5_checkChild(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d1ca0_ScopeTree>*);
inline void _1b0556c9d_checkAnonScope(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d1ca0_ScopeTree>);
inline void _1b0557111_processErrorCall(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel>*, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b05573b9_checkExpr(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04c5ed6_Expr>);
inline jule::Ptr<_1b0549466_If> _1b055770a_checkIf(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d7525_If>);
inline jule::Ptr<_1b0549763_Else> _1b0557a4b_checkElse(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d78ee_Else>);
inline void _1b0557d04_checkConditional(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d7da5_Conditional>);
inline void _1b05582cc_checkIterScopeSsc(jule::Ptr<_1b055134c_scopeChecker>, jule::Uintptr, jule::Ptr<_1b04d1ca0_ScopeTree>, jule::Ptr<_1b0549048_Scope>*, jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Ptr<_1b0549048_Scope> _1b0558783_checkIterScopeSc(jule::Ptr<_1b055134c_scopeChecker>, jule::Uintptr, jule::Ptr<_1b04d1ca0_ScopeTree>, jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Ptr<_1b0549048_Scope> _1b0558b7e_checkIterScope(jule::Ptr<_1b055134c_scopeChecker>, jule::Uintptr, jule::Ptr<_1b04d1ca0_ScopeTree>*);
inline void _1b0558e37_checkInfIter(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d5589_Iter>*);
inline void _1b05591e0_checkWhileIter(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d5589_Iter>*);
inline void _1b055960d_checkComptimeRangeIter(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d5589_Iter>*, jule::Ptr<_1b054ad80_RangeIter>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b05598b6_checkRangeIter(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d5589_Iter>*);
inline void _1b0559b6e_checkIter(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d5589_Iter>);
inline jule::Bool _1b0559eb0_checkValidContLabel(jule::Ptr<_1b055134c_scopeChecker>, jule::Uintptr);
inline jule::Bool _1b055a301_checkValidBreakLabel(jule::Ptr<_1b055134c_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1b054b215_ContSt> _1b055a642_checkContValidScope(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d706e_ContSt>);
inline void _1b055a8ea_checkCont(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d706e_ContSt>);
inline void _1b055aba3_checkLabel(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04ce363_LabelSt>);
inline void _1b055ae5b_pushGoto(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04ce73c_GotoSt>);
inline void _1b055b214_checkPostfix(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d072c_AssignSt>);
inline jule::Bool _1b055b555_isNewAssignIdent(_1b055134c_scopeChecker*, jule::Str);
inline void _1b055b80d_removeInteriorMutRisk(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b055bcb4_checkStructureAssignOp(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1b04d072c_AssignSt>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b055c06c_checkSingleAssign(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d072c_AssignSt>*);
inline void _1b055c600_processEndPartOfMultiAssign(_1b055134c_scopeChecker*, jule::Ptr<_1b054ca1e_MultiAssign>*, jule::Ptr<_1b04d072c_AssignSt>*, jule::Ptr<_1b04d0199_AssignLeft>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b055c8a8_checkMultiAssign(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d072c_AssignSt>*);
inline void _1b055cb61_singleDeclAssign(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d072c_AssignSt>*);
inline void _1b055ce19_checkAssignSt(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d072c_AssignSt>);
inline jule::Ptr<_1b0549048_Scope> _1b055d315_checkCaseScope(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b054dcb7_Case>*, jule::Ptr<_1b04d1ca0_ScopeTree>*);
inline jule::Ptr<_1b054dcb7_Case> _1b055d876_checkCase(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b054d17e_Match>, jule::I64, jule::Ptr<_1b04d8a98_Case>, jule::Ptr<_1b0612672_Data>);
inline void _1b055dc94_checkCases(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d92d5_MatchCase>*, jule::Ptr<_1b054d17e_Match>, jule::Ptr<_1b0612672_Data>);
inline jule::Ptr<_1b054dcb7_Case> _1b055e190_checkDefault(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b054d17e_Match>, jule::Ptr<_1b04d78ee_Else>);
inline void _1b055e503_checkComptimePanic(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1aa49b1d1_Token>, jule::Ptr<_1b0549048_Scope>*);
inline void _1b055e866_processConstMatch(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b054d17e_Match>*, jule::Ptr<_1b04d92d5_MatchCase>*);
inline void _1b055eb1e_checkTypeMatch(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d92d5_MatchCase>*);
inline void _1b055edc7_checkCommonMatch(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d92d5_MatchCase>*);
inline void _1b0560180_checkMatch(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d92d5_MatchCase>);
inline void _1b0560438_checkFall(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04cea39_FallSt>);
inline jule::Ptr<_1b054b5de_BreakSt> _1b0560779_checkBreakWithLabel(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d6b95_BreakSt>);
inline jule::Ptr<_1b054b5de_BreakSt> _1b0560aba_checkPlainBreak(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d6b95_BreakSt>);
inline void _1b0560d73_checkBreak(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d6b95_BreakSt>);
inline void _1b056112b_checkRet(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d4de6_RetSt>);
inline void _1b05613d4_checkUseExpr(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04c68aa_UseExpr>);
inline void _1b056168c_checkNode(jule::Ptr<_1b055134c_scopeChecker>, jule::Any*);
inline void _1b056188a_checkResult(jule::Ptr<_1b055134c_scopeChecker>);
inline void _1b0561a88_checkTree(jule::Ptr<_1b055134c_scopeChecker>);
inline void _1b0561deb_checkGoto(_1b055134c_scopeChecker*, jule::Ptr<_1b0550439_scopeGoto>*, jule::Ptr<_1b054eda6_scopeLabel>*);
inline void _1b05620e9_checkGotos(_1b055134c_scopeChecker*);
inline void _1b05622e7_checkLabels(_1b055134c_scopeChecker*);
inline void _1b05624e5_checkVars(_1b055134c_scopeChecker*);
inline void _1b05626e3_checkAliases(_1b055134c_scopeChecker*);
inline void _1b0562a56_check(jule::Ptr<_1b055134c_scopeChecker>, jule::Ptr<_1b04d1ca0_ScopeTree>*, jule::Ptr<_1b0549048_Scope>*);
inline jule::Ptr<_1b055134c_scopeChecker> _1b0562cdc_newChildChecker(jule::Ptr<_1b055134c_scopeChecker>);
inline void _1b0564162_checkCdef(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b056441a_checkTypedef(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b05646c3_checkDerive(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b056497b_checkNamespace(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b0564c34_checkDeprecated(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b0564edc_checkTest(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b0565295_checkDirective(_1b0563c44_directiveChecker*, jule::Ptr<_1b04884b5_Directive>*);
inline void _1b0565493_check(_1b0563c44_directiveChecker*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b056a971_SelectPackage(_1b056a487_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>);
inline jule::Ptr<_1b05ae1bd_Var> _1b056ad6c_FindVar(_1b056a487_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b056b268_FindTypeAlias(_1b056a487_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b04e2871_Struct> _1b056b664_FindStruct(_1b056a487_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b05088ed_Fn> _1b056ba60_FindFn(_1b056a487_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1b051bb97_Trait> _1b056bda1_FindTrait(_1b056a487_ImportInfo*, jule::Str);
inline jule::Ptr<_1b051e392_Enum> _1b056c1e2_FindEnum(_1b056a487_ImportInfo*, jule::Str);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b056c533_FindTypeEnum(_1b056a487_ImportInfo*, jule::Str);
inline jule::Bool _1b056c9c8_isLookupable(_1b056a487_ImportInfo*, jule::Str*);
inline jule::Bool _1b056cd19_existIdent(_1b056a487_ImportInfo*, jule::Str);
inline jule::Bool _1b056d0a0_isAccessibleViaSelection(_1b056a487_ImportInfo*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b056d853_SelectPackage(_1b056d3ad_Package*, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>);
inline jule::Ptr<_1b05ae1bd_Var> _1b056dc4e_FindVar(_1b056d3ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b056e14a_FindTypeAlias(_1b056d3ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b04e2871_Struct> _1b056e546_FindStruct(_1b056d3ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b05088ed_Fn> _1b056e942_FindFn(_1b056d3ad_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1b051bb97_Trait> _1b056ec83_FindTrait(_1b056d3ad_Package*, jule::Str);
inline jule::Ptr<_1b051e392_Enum> _1b05700c4_FindEnum(_1b056d3ad_Package*, jule::Str);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0570415_FindTypeEnum(_1b056d3ad_Package*, jule::Str);
inline jule::Ptr<_1b0532916_comptimeTypeInfo> _1b058ad26_pushComptimeTypeInfo(_1b058a8b4_commonSemaMeta*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b058b981_SelectPackage(_1b058b4db_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>);
inline jule::Ptr<_1b05ae1bd_Var> _1b058bd7c_FindVar(_1b058b4db_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b058c278_FindTypeAlias(_1b058b4db_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b04e2871_Struct> _1b058c674_FindStruct(_1b058b4db_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b05088ed_Fn> _1b058ca70_FindFn(_1b058b4db_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1b051bb97_Trait> _1b058cdb1_FindTrait(_1b058b4db_Sema*, jule::Str);
inline jule::Ptr<_1b051e392_Enum> _1b058d202_FindEnum(_1b058b4db_Sema*, jule::Str);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b058d543_FindTypeEnum(_1b058b4db_Sema*, jule::Str);
inline jule::Bool _1b058d950_isFlag(_1b058b4db_Sema*, jule::I64);
inline void _1b058dc08_setCurrentFile(_1b058b4db_Sema*, jule::Ptr<_1b060c44c_SymbolTable>);
inline void _1b058e126_pushErr(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b058e489_pushSuggestion(_1b058b4db_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b058e885_isAccessibleDefine(_1b058b4db_Sema*, jule::Bool, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b058ed3b_isDuplicatedIdent(_1b058b4db_Sema*, jule::Uintptr, jule::Str*, jule::Bool);
inline void _1b059019e_checkDirectives(jule::Ptr<_1b058b4db_Sema>, jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Any);
inline jule::Bool _1b0590655_checkGenericQuantity(_1b058b4db_Sema*, jule::I64, jule::I64, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b0590a51_isDuplicatedImportSelection(_1b058b4db_Sema*, jule::Uintptr, jule::Str*);
inline jule::Any _1b0590e4c_getImportDef(_1b058b4db_Sema*, jule::Str*, jule::Ptr<_1b056a487_ImportInfo>*);
inline jule::Bool _1b369b1db_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::Bool _1b369ed27_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b06469b4_TypeAlias>*);
inline jule::Bool _1b36a38ec_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Bool _1b36a7659_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b397763d_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b051e392_Enum>*);
inline jule::Bool _1b397b213_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b0520a9c_TypeEnum>*);
inline jule::Bool _1b397ecd8_checkImportSelection(_1b058b4db_Sema*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b0591689_checkImportSelectedSelections(_1b058b4db_Sema*, jule::Ptr<_1b056a487_ImportInfo>*);
inline jule::Bool _1b3983c43_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b3984b67_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b39877a2_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b04e2871_Struct>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b398a343_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b05088ed_Fn>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b398ce8e_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b051bb97_Trait>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b3990a30_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b051e392_Enum>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b39935c1_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b0520a9c_TypeEnum>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b0591dc6_checkImportAllSelections(_1b058b4db_Sema*, jule::Ptr<_1b056a487_ImportInfo>*);
inline jule::Bool _1b0592217_checkImportSelections(_1b058b4db_Sema*, jule::Ptr<_1b056a487_ImportInfo>*);
inline jule::Bool _1b0592558_isUseAliasDuplication(_1b058b4db_Sema*, jule::Ptr<_1b056a487_ImportInfo>*);
inline jule::Bool _1b0592899_checkImport(_1b058b4db_Sema*, jule::Ptr<_1b056a487_ImportInfo>*);
inline void _1b0592a97_checkImports(_1b058b4db_Sema*);
inline void _1b0592c95_implFileImpls(jule::Ptr<_1b058b4db_Sema>);
inline void _1b0592e93_implImpls(jule::Ptr<_1b058b4db_Sema>);
inline void _1b0593191_checkEnums(jule::Ptr<_1b058b4db_Sema>);
inline void _1b059338e_checkFileInherits(jule::Ptr<_1b058b4db_Sema>);
inline void _1b059358c_checkInherits(jule::Ptr<_1b058b4db_Sema>);
inline _1b065990b_typeChecker _1b0593a43_typeChecker(jule::Ptr<_1b058b4db_Sema>, jule::Trait<_1b0667584_Lookup>, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>, jule::Ptr<_1b065891b_referencer>);
inline jule::Ptr<_1b06477a6_TypeKind> _1b05940a4_buildTypeWithRefers(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04c1ba2_TypeDecl>*, jule::Trait<_1b0667584_Lookup>, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>, jule::Ptr<_1b065891b_referencer>);
inline jule::Bool _1b0594615_checkTypeWithRefers(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b064ec20_TypeSymbol>*, jule::Trait<_1b0667584_Lookup>, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>, jule::Ptr<_1b065891b_referencer>);
inline jule::Ptr<_1b0541ace_constraintChecker> _1b059489b_constraintChecker(jule::Ptr<_1b058b4db_Sema>);
inline jule::Bool _1b0594c97_checkType(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b064ec20_TypeSymbol>*, jule::Trait<_1b0667584_Lookup>);
inline jule::Ptr<_1b06477a6_TypeKind> _1b059524d_buildTypeWithGenerics(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04c1ba2_TypeDecl>*, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>, jule::Ptr<_1b050e99d_ReferenceStack>);
inline jule::Ptr<_1b06477a6_TypeKind> _1b05958d0_selectType(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04c1ba2_TypeDecl>*);
inline jule::Ptr<_1b0614366_Eval> _1b0595d86_evalpd(jule::Ptr<_1b058b4db_Sema>, jule::Trait<_1b0667584_Lookup>, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b05ae1bd_Var>);
inline jule::Ptr<_1b0614366_Eval> _1b0596282_evalp(jule::Ptr<_1b058b4db_Sema>, jule::Trait<_1b0667584_Lookup>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b0614366_Eval> _1b05965c3_eval(jule::Ptr<_1b058b4db_Sema>, jule::Trait<_1b0667584_Lookup>);
inline jule::Bool _1b0596b34_checkAssignType(jule::Ptr<_1b058b4db_Sema>, jule::Bool, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b05970da_checkTypeCompatibility(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Ptr<_1b06477a6_TypeKind> _1b0597591_buildNonGenericTypeKind(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04c1ba2_TypeDecl>*, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>*, jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>*);
inline jule::Bool _1b059798c_buildFnNonGenericTypeKinds(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050b802_FnIns>*, jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>*);
inline jule::Ptr<_1b050b802_FnIns> _1b0597ccd_getTraitCheckFnKind(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b0598284_checkConstraintsFn(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Bool _1b059873a_checkConstraintsStruct(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b04e5951_StructIns>);
inline jule::Bool _1b0598b36_fnEnvironment(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050b802_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1b058b4db_Sema>*,jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*)>);
inline void _1b0598dde_checkFnParamKind(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050a856_ParamIns>*);
inline jule::Bool _1b0599230_reloadFnInsTypes(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050b802_FnIns>);
inline jule::Bool _1b05996d6_checkRefValidityForInitExpr(jule::Ptr<_1b058b4db_Sema>, jule::Bool, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b0599a27_isMutRiskyStruct(_1b058b4db_Sema*, jule::Ptr<_1b04e5951_StructIns>*);
inline jule::Bool _1b059a143_checkValidityForInitExpr(jule::Ptr<_1b058b4db_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b059a53e_checkTypeAliasDeclKind(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b06469b4_TypeAlias>*, jule::Trait<_1b0667584_Lookup>);
inline void _1b059a8a2_checkTypeAliasDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b06469b4_TypeAlias>*, jule::Trait<_1b0667584_Lookup>);
inline void _1b059ab5a_checkTypeAliasDeclDup(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b06469b4_TypeAlias>*);
inline jule::Bool _1b059ade1_checkTypeAliasDecls(jule::Ptr<_1b058b4db_Sema>);
inline void _1b3a24e7c_checkEnumItemsDup(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b051d825_EnumItem>>);
inline void _1b3a2e3b5_checkEnumItemsDup(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>>);
inline void _1b059b452_checkEnumItemsStr(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051e392_Enum>*);
inline void _1b3a0b34d_checkEnumItemInt(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b051e392_Enum>*, jule::Ptr<_1b0650627_Prim>*, jule::Ptr<_1b051d825_EnumItem>*, jule::U64*);
inline void _1b3a18b85_checkEnumItemInt(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b051e392_Enum>*, jule::Ptr<_1b0650627_Prim>*, jule::Ptr<_1b051d825_EnumItem>*, jule::I64*);
inline void _1b3a07943_checkEnumItemsInt1(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0650627_Prim>*, jule::Ptr<_1b051e392_Enum>*);
inline void _1b3a07bc9_checkEnumItemsInt1(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0650627_Prim>*, jule::Ptr<_1b051e392_Enum>*);
inline void _1b059c101_checkEnumItemsInt(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051e392_Enum>*);
inline void _1b059c3a9_checkEnumDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051e392_Enum>*);
inline void _1b059c662_checkTypeEnumDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0520a9c_TypeEnum>*);
inline jule::Bool _1b059c8e8_checkEnumDecls(jule::Ptr<_1b058b4db_Sema>);
inline jule::Bool _1b059cb7e_checkTypeEnumDecls(jule::Ptr<_1b058b4db_Sema>);
inline jule::Bool _1b059cec0_checkDeclGenerics(_1b058b4db_Sema*, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>*);
inline jule::Bool _1b059d311_checkFnDeclParamsDup(_1b058b4db_Sema*, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b059d652_checkFnDeclResultDup(_1b058b4db_Sema*, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b059d993_checkFnVariadicParam(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b059dc4b_checkFnDeclPrototype(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b059e202_catchTraitInheritCycle(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b051bb97_Trait>, _1aa364275_StrBuilder*);
inline jule::Bool _1b059e543__checkTraitDeclInherits(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b059e7eb_checkTraitDeclInherits(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b059eaa4_checkTraitDeclMethod(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b059ed5c_checkTraitDeclMethods(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b05a0115_checkTraitDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b05a039b_checkTraitDecls(jule::Ptr<_1b058b4db_Sema>);
inline jule::Bool _1b05a0797_checkTraitImplMethods(_1b058b4db_Sema*, jule::Ptr<_1b051bb97_Trait>*, jule::Ptr<_1b0543b14_Impl>*);
inline jule::Bool _1b05a0b93_implToStruct(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*, jule::Ptr<_1b0543b14_Impl>*);
inline void _1b05a0e4b_implTrait(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0543b14_Impl>*);
inline void _1b05a1204_implStruct(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0543b14_Impl>*);
inline void _1b05a14ac_implImpl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b0543b14_Impl>*);
inline void _1b05a1820_checkVarDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05ae1bd_Var>*, jule::Trait<_1b0667584_Lookup>);
inline void _1b05a1ac8_checkGlobalVarDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::Bool _1b05a1d5e_checkGlobalDecls(jule::Ptr<_1b058b4db_Sema>);
inline jule::Bool _1b05a225a_checkStructTraitImpl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*, jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b05a259b_checkStructImpls(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Bool _1b05a28dc_checkStructFields(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b05a2b95_checkStructDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Bool _1b05a2e2b_checkStructDecls(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05a31d4_checkAnonFuncDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b05a348c_checkFuncDecl(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b05a37cd_checkFuncDeclsBy(jule::Ptr<_1b058b4db_Sema>, jule::Slice<jule::Ptr<_1b05088ed_Fn>>*);
inline jule::Bool _1b05a3a64_checkFuncDecls(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05a3e82_pushCycleError(_1b058b4db_Sema*, jule::Str*, jule::Str*, _1aa364275_StrBuilder*);
inline jule::Bool _1b05a4438_checkCrossCycle(_1b058b4db_Sema*, jule::Ptr<_1b04e2871_Struct>*, jule::Ptr<_1b04e2871_Struct>*, _1aa364275_StrBuilder*);
inline jule::Bool _1b05a48de_checkStructDeriveIllegalCycles(_1b058b4db_Sema*, jule::Str, jule::Ptr<_1b04e2871_Struct>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05a4c30_checkStructInsDeriveClone(_1b058b4db_Sema*, jule::Ptr<_1b04e5951_StructIns>);
inline void _1b05a4e2d_checkPackageDecls(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05a5291_checkDataForTypeInference(_1b058b4db_Sema*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline void _1b05a5549_checkVarValue(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b05a58ac_evalVarValue(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05ae1bd_Var>*, jule::Trait<_1b0667584_Lookup>);
inline void _1b05a5c20_checkVar(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05ae1bd_Var>*, jule::Trait<_1b0667584_Lookup>);
inline void _1b05a5e1d_checkGlobals(jule::Ptr<_1b058b4db_Sema>);
inline jule::Ptr<_1b050b802_FnIns> _1b05a6319_readyToCheckFn(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b05a667c_checkTypeMethod(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1b05088ed_Fn>*);
inline jule::Ptr<_1b050b802_FnIns> _1b05a6b33_checkStructInsOp(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1b05088ed_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1b05088ed_Fn>)>);
inline jule::Bool _1b05a702e_checkStructEnv(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b05a742a_precheckStructIns(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b05a76d3_checkStructIns(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b05a798b_checkTypeStruct(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b05a7b89_checkStructTypes(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05a7e42_checkStructInsOperators(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e5951_StructIns>);
inline void _1b05a81ea_precheckStructType(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b05a83e8_precheckStructTypes(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05a86a1_checkRets(_1b058b4db_Sema*, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b05a8a14_checkFnInsSc(_1b058b4db_Sema*, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1b055134c_scopeChecker>*);
inline void _1b05a8d77_checkFnInsCaller(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b05a9130_checkFnIns(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b05a93d8_checkFunc(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b05a9691_checkTestFn(_1b058b4db_Sema*, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b05a9949_precheckFunc(jule::Ptr<_1b058b4db_Sema>, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b05a9b47_precheckFuncs(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05a9d45_checkFuncs(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05aa043_checkPackageTypes(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05aa241_setFileSemaFields(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05aa43e_setSemaFields(jule::Ptr<_1b058b4db_Sema>);
inline void _1b05aa6e7_check(jule::Ptr<_1b058b4db_Sema>, jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*);
inline _1b05aab26_missingRetChecker static__1b05aaede_new(void);
inline jule::Bool _1b05ab2ec_checkConditional(_1b05aab26_missingRetChecker*, jule::Ptr<_1b0549b81_Conditional>);
inline jule::Bool _1b05ab63d_checkMatch(_1b05aab26_missingRetChecker*, jule::Ptr<_1b054d17e_Match>);
inline jule::Bool _1b05ab97e_checkInfIter(_1b05aab26_missingRetChecker*, jule::Ptr<_1b0549e7d_InfIter>);
inline jule::Bool _1b05abcc0_checkScope(_1b05aab26_missingRetChecker*, jule::Ptr<_1b0549048_Scope>);
inline jule::Bool _1b05ac111_check(_1b05aab26_missingRetChecker*, jule::Ptr<_1b0549048_Scope>);
inline jule::Bool _1b05ae553_IsInitialized(_1b05ae1bd_Var*);
inline jule::Bool _1b05ae7d9_IsTypeInferred(_1b05ae1bd_Var*);
inline jule::Bool _1b05aea70_untypedConstant(_1b05ae1bd_Var*);
inline jule::Bool static__1b05b0620_Dispose(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b08d9_Str(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b0c5d_logical(jule::Ptr<_1b05088ed_Fn>*, jule::Str);
inline jule::Bool static__1b05b1027_Eq(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b12e1_Gt(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b15aa_GtEq(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b1874_Lt(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b1b3d_LtEq(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b1eb2_result(jule::Ptr<_1b05088ed_Fn>*, jule::Str);
inline jule::Bool static__1b05b227b_Shl(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b2545_Shr(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b280e_Add(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b2ac8_Sub(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b2d92_Div(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b315b_Mul(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b3425_Mod(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b36de_BitAnd(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b39a8_BitOr(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b3c72_BitXor(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b40e6_unary(jule::Ptr<_1b05088ed_Fn>*, jule::Str);
inline jule::Bool static__1b05b43b0_Neg(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b4679_Pos(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b4943_BitNot(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b4cb7_assign(jule::Ptr<_1b05088ed_Fn>*, jule::Str);
inline jule::Bool static__1b05b5081_AddAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b534a_SubAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b5614_DivAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b58cd_MulAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b5b97_ModAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b5e61_ShlAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b622a_ShrAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b64e4_BitOrAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b67ad_BitAndAssign(jule::Ptr<_1b05088ed_Fn>);
inline jule::Bool static__1b05b6a77_BitXorAssign(jule::Ptr<_1b05088ed_Fn>);
inline void _1b05e9989_pushErr(_1b05e948e_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b05e9c20_checkTrait(_1b05e948e_typeCompatibilityChecker*);
inline jule::Bool _1b05e9ea6_checkPtr(_1b05e948e_typeCompatibilityChecker*);
inline jule::Bool _1b05ea23c_checkPrim(_1b05e948e_typeCompatibilityChecker*);
inline jule::Bool _1b05ea638_typeEnum(_1b05e948e_typeCompatibilityChecker*, jule::Ptr<_1b0520a9c_TypeEnum>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05ea8be_checkTypeEnum(_1b05e948e_typeCompatibilityChecker*);
inline jule::Bool _1b05eab55_check(_1b05e948e_typeCompatibilityChecker*);
inline void _1b05eb6d3_pushErr(_1b05eb23d_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b05eb969_checkValidity(_1b05eb23d_assignTypeChecker*);
inline jule::Bool _1b05ebc00_checkConst(_1b05eb23d_assignTypeChecker*);
inline jule::Bool _1b05ebe86_isPrim(_1b05eb23d_assignTypeChecker*);
inline jule::Bool _1b05ec21c_checkCompatibility(_1b05eb23d_assignTypeChecker*);
inline jule::Bool _1b05ec4a3_check(_1b05eb23d_assignTypeChecker*);
inline jule::Bool _1b2b88674_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b2b87db0_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b37962a3_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b37959de_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05ed7a1_annotateConstraintMap(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05edae2_annotateConstraintTup(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05ede33_annotateConstraintFn(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05ee274_annotateConstraintIdent(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b05ee5b5_annotateConstraint(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b05ee928_pushGeneric(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*, jule::I64);
inline jule::Bool _1b05eec69_annotatePrim(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b06000aa_annotateArr(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b06003eb_annotateSlc(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b06007e7_checkMapKey(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b0600b38_annotateMap(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b0600e79_annotateFn(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b06012ba_annotatePtr(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b060160b_annotateSptr(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b060194c_annotateStruct(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b0601c8d_annotateAny(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b06020ce_annotateKind(_1b05ecdaa_dynamicTypeAnnotation*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b0602365_annotate(_1b05ecdaa_dynamicTypeAnnotation*);
inline void _1b06032ab_pushErrToken(_1b0602c17_fnCallArgChecker*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b060361e_pushErr(_1b0602c17_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1b050a856_ParamIns>> _1b06038a5_getParams(_1b0602c17_fnCallArgChecker*);
inline jule::Bool _1b0603bb3_checkCounts(_1b0602c17_fnCallArgChecker*, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>*);
inline jule::Bool _1b0604169_checkArg(_1b0602c17_fnCallArgChecker*, jule::Ptr<_1b050a856_ParamIns>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Bool _1b0604565_push(_1b0602c17_fnCallArgChecker*, jule::Ptr<_1b050a856_ParamIns>*, jule::Ptr<_1b04c5ed6_Expr>);
inline jule::Bool _1b0604961_pushVariadic(_1b0602c17_fnCallArgChecker*, jule::Ptr<_1b050a856_ParamIns>*, jule::I64);
inline jule::Bool _1b0604ca2_checkArgs(_1b0602c17_fnCallArgChecker*, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>*);
inline jule::Bool _1b0605038_checkDynamicTypeAnnotation(_1b0602c17_fnCallArgChecker*);
inline jule::Bool _1b06052be_check(_1b0602c17_fnCallArgChecker*);
inline void _1b060619e_pushErr(_1b0605b4e_structLitChecker*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b0606512_pushSuggestion(_1b0605b4e_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1b0606930_pushMatch(_1b0605b4e_structLitChecker*, jule::Ptr<_1b04e4da1_FieldIns>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline void _1b0606c93_checkPair(_1b0605b4e_structLitChecker*, jule::Ptr<_1b04ca7d2_FieldExprPair>*, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>*);
inline jule::Bool _1b06070d4_readyExprs(_1b0605b4e_structLitChecker*, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>*);
inline void _1b060738c_check(_1b0605b4e_structLitChecker*, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>*);
inline jule::Ptr<_1b05ae1bd_Var> _1b0607e1a_buildVar(_1b0607931_rangeChecker*, jule::Ptr<_1b04d4a1c_VarDecl>*);
inline void _1b0608118_setSizeKey(_1b0607931_rangeChecker*);
inline void _1b0608536_checkRangeExprValidity(_1b0607931_rangeChecker*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b0608734_checkSlice(_1b0607931_rangeChecker*);
inline void _1b0608932_checkArray(_1b0607931_rangeChecker*);
inline void _1b0608b30_checkMapKeyA(_1b0607931_rangeChecker*);
inline void _1b0608d2d_checkMapKeyB(_1b0607931_rangeChecker*);
inline void _1b060902b_checkMap(_1b0607931_rangeChecker*);
inline void _1b0609229_checkStr(_1b0607931_rangeChecker*);
inline void _1b0609427_checkComptime(_1b0607931_rangeChecker*);
inline jule::Bool _1b06096ad_checkComptimeRange(_1b0607931_rangeChecker*);
inline jule::Bool _1b0609944_check(_1b0607931_rangeChecker*);
inline void _1b060a5b0_prepareTypes(_1b060a192_retTypeChecker*);
inline void _1b060a868_prepareExprs(_1b060a192_retTypeChecker*, jule::Ptr<_1b04c5ed6_Expr>*);
inline void _1b060aa66_checkExprs(_1b060a192_retTypeChecker*);
inline jule::Bool _1b060ada7_check(_1b060a192_retTypeChecker*, jule::Ptr<_1b04c5ed6_Expr>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b060c936_SelectPackage(_1b060c44c_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>);
inline jule::Ptr<_1b05ae1bd_Var> _1b060cd32_FindVar(_1b060c44c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b060d22d_FindTypeAlias(_1b060c44c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b04e2871_Struct> _1b060d629_FindStruct(_1b060c44c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b05088ed_Fn> _1b060da25_FindFn(_1b060c44c_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1b051bb97_Trait> _1b060dd66_FindTrait(_1b060c44c_SymbolTable*, jule::Str);
inline jule::Ptr<_1b051e392_Enum> _1b060e1a7_FindEnum(_1b060c44c_SymbolTable*, jule::Str);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b060e4e8_FindTypeEnum(_1b060c44c_SymbolTable*, jule::Str);
inline jule::Ptr<_1b05ae1bd_Var> _1b060eb14_findVar(_1b060c44c_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b06100ba_findTypeAlias(_1b060c44c_SymbolTable*, jule::Str*, jule::Bool, jule::Bool);
inline jule::Any _1b06104b6_defByIdent(_1b060c44c_SymbolTable*, jule::Str*, jule::Bool);
inline jule::Bool _1b061096c_isDuplicatedIdent(_1b060c44c_SymbolTable*, jule::Uintptr, jule::Str*, jule::Bool);
inline jule::Bool _1b0612a29_IsNil(_1b0612672_Data*);
inline jule::Bool _1b0612cb0_IsVoid(_1b0612672_Data*);
inline jule::Bool _1b0613046_IsConst(_1b0612672_Data*);
inline jule::Bool _1b0613387_GoodOperand(_1b0612672_Data*, jule::Ptr<_1b0612672_Data>*);
inline void _1b06148b6_pushErr(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b0614c29_pushSuggestion(_1b0614366_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1b0614e27_allowBuiltin(_1b0614366_Eval*);
inline void _1b0615125_disallowBuiltin(_1b0614366_Eval*);
inline jule::Bool _1b06153ab_isUnsafe(_1b0614366_Eval*);
inline jule::Bool _1b0615642_isGlobal(_1b0614366_Eval*);
inline jule::Bool _1b0615950_applyNumericPrefix(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0615c91_litStr(_1b0614366_Eval*, jule::Ptr<_1b04c7081_LitExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b06160d2_litRune(_1b0614366_Eval*, jule::Ptr<_1b04c7081_LitExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0616423_litFloat(_1b0614366_Eval*, jule::Ptr<_1b04c7081_LitExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0616764_litInt(_1b0614366_Eval*, jule::Ptr<_1b04c7081_LitExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0616aa5_litNum(_1b0614366_Eval*, jule::Ptr<_1b04c7081_LitExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0616de6_evalLit(_1b0614366_Eval*, jule::Ptr<_1b04c7081_LitExpr>);
inline jule::Any _1b0617237_findBuiltins(_1b0614366_Eval*, jule::Str*);
inline jule::Any _1b0617633_getDef(_1b0614366_Eval*, jule::Str*, jule::Bool);
inline void _1b38a93c7_pushReference(_1b0614366_Eval*, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b38be178_pushReference(_1b0614366_Eval*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b3959d29_pushReference(_1b0614366_Eval*, jule::Ptr<_1b04e5951_StructIns>*);
inline jule::Ptr<_1b0612672_Data> _1b0617c2c__evalEnum(_1b0614366_Eval*, jule::Ptr<_1b051e392_Enum>);
inline jule::Ptr<_1b0612672_Data> _1b0618128_evalEnum(_1b0614366_Eval*, jule::Ptr<_1b051e392_Enum>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0618469__evalTypeEnum(_1b0614366_Eval*, jule::Ptr<_1b0520a9c_TypeEnum>);
inline jule::Ptr<_1b0612672_Data> _1b0618865_evalTypeEnum(_1b0614366_Eval*, jule::Ptr<_1b0520a9c_TypeEnum>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0618ba6__evalStruct(_1b0614366_Eval*, jule::Ptr<_1b04e5951_StructIns>);
inline jule::Ptr<_1b0612672_Data> _1b06190a2_evalStruct(_1b0614366_Eval*, jule::Ptr<_1b04e5951_StructIns>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b06193e3_evalFnIns(_1b0614366_Eval*, jule::Ptr<_1b050b802_FnIns>);
inline void _1b0619756_checkDeprecated(_1b0614366_Eval*, jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0619b52_evalFn(_1b0614366_Eval*, jule::Ptr<_1b05088ed_Fn>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b061a070_pushIllegalCycleError(_1b0614366_Eval*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*, _1aa364275_StrBuilder*);
inline jule::Bool _1b061a46b_checkCrossCycle(_1b0614366_Eval*, jule::Ptr<_1b05ae1bd_Var>*, _1aa364275_StrBuilder*);
inline jule::Bool _1b061a867_checkIllegalCycles(_1b0614366_Eval*, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b061ac63_evalVar(_1b0614366_Eval*, jule::Ptr<_1b05ae1bd_Var>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b061b15e_evalTypeAlias(_1b0614366_Eval*, jule::Ptr<_1b06469b4_TypeAlias>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b061b55a_evalDef(_1b0614366_Eval*, jule::Any*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b061b89b_evalIdent(_1b0614366_Eval*, jule::Ptr<_1b04c7911_IdentExpr>);
inline jule::Ptr<_1b0612672_Data> _1b061bbdc_evalUnary(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c8093_UnaryExpr>);
inline jule::Ptr<_1b0612672_Data> _1b061c02d_evalVariadic(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c846c_VariadicExpr>);
inline jule::Ptr<_1b0612672_Data> _1b061c36e_evalUnsafe(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c745a_UnsafeExpr>);
inline jule::Ptr<_1b0612672_Data> _1b061c6b0_evalArr(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cc5d6_SliceExpr>);
inline jule::Ptr<_1b0612672_Data> _1b061cb66_evalExpSlc(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cc5d6_SliceExpr>, jule::Ptr<_1b06477a6_TypeKind>, jule::Any);
inline jule::Ptr<_1b0612672_Data> _1b061cea7_evalSliceExpr(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cc5d6_SliceExpr>);
inline void _1b061d31a_checkIntegerIndexingByData(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b061d738_indexingPtr(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline void _1b061db56_indexingArr(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline void _1b061e074_indexingSlc(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline void _1b061e492_indexingMap(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline void _1b061e8b0_indexingStr(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline void _1b061eccd_toIndexing(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline jule::Bool _1b0620284_pushGenericsFromExprSubIdent(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c91c6_SubIdentExpr>*, jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>*, jule::Ptr<_1b04c5ed6_Expr>*);
inline jule::Bool _1b0620680_pushGenericsFromData(jule::Ptr<_1b0614366_Eval>, jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>*, jule::Ptr<_1b04c5ed6_Expr>*);
inline void _1b06209e3_evalIdentDeclFromIndexing(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline jule::Bool _1b0620e99_checkGenericFn(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1aa49b1d1_Token>*, jule::Any*);
inline void _1b062130c_evalFnGenericFromIndexing(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd076_IndexingExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b062164d_evalIndexing(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cd076_IndexingExpr>);
inline __jule_tuple_x_1b0612672_Data__jule_tuple_x_1b0612672_Data _1b062198e_evalSlicingExprs(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cd6d6_SlicingExpr>*);
inline void _1b0621c47_slicingArr(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*);
inline void _1b0622165_slicingStr(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b062263d_checkSlicing(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04cd6d6_SlicingExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b062297e_evalSlicing(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cd6d6_SlicingExpr>);
inline void _1b0627c09_castPtr(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0628127_castStruct(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0628545_castRef(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0628963_castSlc(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0628cc6_castStr(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b06291e4_castInt(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0629612_castNum(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0629a30_castPrim(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b0629d93_castConstant(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b062a2b1_castTypeEnum(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline void _1b062a6ce_castTypeEnumT(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Ptr<_1b0612672_Data> _1b062ab85_evalCastByTypeNData(_1b0614366_Eval*, jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b062b13b_evalCastT(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b04c5ed6_Expr>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Ptr<_1b0612672_Data> _1b062b47c_evalCast(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c8846_CastExpr>);
inline jule::Ptr<_1b0612672_Data> _1b062b7bd_evalNsSelection(_1b0614366_Eval*, jule::Ptr<_1b04c8c20_NsSelectionExpr>);
inline jule::Ptr<_1b0612672_Data> _1b062bc74_evalStructLitExplicit(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04e5951_StructIns>, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b062c0b5_evalStructLit(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cb10c_StructLit>);
inline _1b065990b_typeChecker _1b062c34b_typeChecker(_1b0614366_Eval*);
inline jule::Ptr<_1b0612672_Data> _1b062c68c_evalType(_1b0614366_Eval*, jule::Ptr<_1b04c1ba2_TypeDecl>);
inline void _1b062ca00_callTypeFn(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b062cd63_callBuiltinFn(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b062d1c6_checkFnOfConcurrentCall(_1b0614366_Eval*, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1aa49b1d1_Token>);
inline void _1b062d5e4_processExceptionalHandler(_1b0614366_Eval*, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b062d957_callFn(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b062dc98_evalFnCall(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c9cdc_FnCallExpr>);
inline jule::Ptr<_1b0612672_Data> _1b062e194_evalEnumStatic(_1b0614366_Eval*, jule::Ptr<_1b051e392_Enum>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b062e590_evalTypeEnumStatic(_1b0614366_Eval*, jule::Ptr<_1b0520a9c_TypeEnum>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b062e98b_evalStructStatic(_1b0614366_Eval*, jule::Ptr<_1b04e5951_StructIns>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b062ee42_evalTraitSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b06304a3_evalStructSubIdentField(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b04e4da1_FieldIns>*);
inline jule::Ptr<_1b0612672_Data> _1b0630a14_evalStructSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1b04e5951_StructIns>, jule::Ptr<_1b04c91c6_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1b0612672_Data> _1b0630e10_evalSliceSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b063130b_evalArraySubIdent(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b063164c_evalIntTypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b063198d_evalUintTypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0631cce_evalI8TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0632120_evalI16TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0632461_evalI32TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b06327a2_evalI64TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0632ae3_evalU8TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0632e34_evalU16TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0633275_evalU32TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b06335b6_evalU64TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0633907_evalF32TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0633c48_evalF64TypeStatic(_1b0614366_Eval*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0634144_evalPrimStatic(_1b0614366_Eval*, jule::Str, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b0612672_Data> _1b0634540_evalTypeStatic(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1b04c91c6_SubIdentExpr>);
inline jule::Ptr<_1b0612672_Data> _1b2b9a345_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0532916_comptimeTypeInfo>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b2b9d9a8_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b05239a1_comptimeStructField>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b2ba2083_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b052a018_comptimeEnumField>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b2ba5927_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b052c9aa_comptimeParam>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b2ba9002_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0526c5c_comptimeStatic>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b2bac5cc_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0538a1b_comptimeValue>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b2bb0ba7_comptimeObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b053c965_comptimeFile>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04c91c6_SubIdentExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0634de2_evalObjSubIdent(_1b0614366_Eval*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1b04c91c6_SubIdentExpr>);
inline jule::Ptr<_1b0612672_Data> _1b0635233_evalSubIdent(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c91c6_SubIdentExpr>);
inline jule::Ptr<_1b0612672_Data> _1b0635574_evalTuple(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c6ba7_TupleExpr>);
inline jule::Ptr<_1b0612672_Data> _1b0635970_evalMap(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b06562ba_Map>, jule::Ptr<_1b04cb5b3_BraceLit>);
inline jule::Ptr<_1b0612672_Data> _1b0635cb1_evalBraceLit(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04cb5b3_BraceLit>);
inline jule::Ptr<_1b0612672_Data> _1b0636102_evalAnonFunc(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04d393e_FnDecl>);
inline jule::Ptr<_1b0612672_Data> _1b0636443_evalBinop(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c967c_BinopExpr>);
inline jule::Ptr<_1b0612672_Data> _1b0636784_evalExprKind(jule::Ptr<_1b0614366_Eval>, jule::Any);
inline jule::Ptr<_1b0612672_Data> _1b0636ac5_eval1(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c5ed6_Expr>);
inline jule::Ptr<_1b0612672_Data> _1b0636e16_eval(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c5ed6_Expr>);
inline jule::Ptr<_1b0612672_Data> _1b0637257_evalExpr1(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c5ed6_Expr>);
inline jule::Ptr<_1b0612672_Data> _1b0637598_evalExpr(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1b04c5ed6_Expr>);
inline _1b0637a60_unaryEval static__1b0637ea0_new(jule::Ptr<_1b0614366_Eval>);
inline void _1b063819d_minus(_1b0637a60_unaryEval*);
inline void _1b063839b_plus(_1b0637a60_unaryEval*);
inline void _1b0638599_caret(_1b0637a60_unaryEval*);
inline void _1b0638797_excl(_1b0637a60_unaryEval*);
inline void _1b0638995_star(_1b0637a60_unaryEval*);
inline void _1b0638b93_amper(_1b0637a60_unaryEval*);
inline void _1b0638d91_typeDecl(_1b0637a60_unaryEval*);
inline void _1b063908e_evalData(_1b0637a60_unaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b06393d0_eval(_1b0637a60_unaryEval*, jule::Ptr<_1b04c8093_UnaryExpr>);
inline _1b06399eb_binaryEval static__1b063a0d4_newPlain(jule::Ptr<_1b0614366_Eval>);
inline _1b06399eb_binaryEval static__1b063a425_new(jule::Ptr<_1b0614366_Eval>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b063a6ab_checkTypeCompatibility(_1b06399eb_binaryEval*);
inline jule::Bool _1b063a942_checkStructCommonOperatorCompatibility(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063abc8_evalComptimeTypeInfo(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063ae5e_evalNil(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063b1e5_evalEnum(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063b47b_evalTypeEnum(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063b712_evalSptr(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063b998_evalPtr(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063bc2e_evalArr(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063beb5_evalSlc(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063c24b_evalStruct(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063c4d2_evalTrait(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063c768_evalAny(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063c9ee_evalBool(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063cc85_evalStr(_1b06399eb_binaryEval*);
inline void _1b063ce83_setTypeToGreater(_1b06399eb_binaryEval*);
inline void _1b063d23b_checkModData(_1b06399eb_binaryEval*, jule::Ptr<_1b0612672_Data>*);
inline void _1b063d439_mod(_1b06399eb_binaryEval*);
inline jule::Bool _1b063d835_numbersAreCompatibile(_1b06399eb_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1b0612672_Data> _1b063dabb_evalFloat(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063dd52_evalInt(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063e0d8_evalPrim(_1b06399eb_binaryEval*);
inline void _1b063e2d6_checkSpecialCases(_1b06399eb_binaryEval*);
inline jule::Ptr<_1b0612672_Data> _1b063e56c_evalOp(_1b06399eb_binaryEval*);
inline void _1b063e825_evalConst(_1b06399eb_binaryEval*, jule::Ptr<_1b0612672_Data>*);
inline void _1b063eacd_checkData(_1b06399eb_binaryEval*, jule::Ptr<_1b0612672_Data>*);
inline void _1b063eccb_checkDatas(_1b06399eb_binaryEval*);
inline void _1b0640084_setModel(_1b06399eb_binaryEval*, jule::Ptr<_1b0612672_Data>*);
inline void _1b064033c_postEval(_1b06399eb_binaryEval*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0640738_solveExplicit(_1b06399eb_binaryEval*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0640a79_eval(_1b06399eb_binaryEval*, jule::Ptr<_1b04c967c_BinopExpr>*);
inline jule::Str _1b0647b6e_Str(_1b06477a6_TypeKind*);
inline jule::Bool _1b0647eb0_Equal(jule::Ptr<_1b06477a6_TypeKind>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Bool _1b064860e_Binded(_1b06477a6_TypeKind*);
inline jule::Bool _1b0648895_IsNil(_1b06477a6_TypeKind*);
inline jule::Bool _1b0648b2b_Void(_1b06477a6_TypeKind*);
inline jule::Bool _1b0648db2_Comparable(_1b06477a6_TypeKind*);
inline jule::Bool _1b0649148_Mutable(_1b06477a6_TypeKind*);
inline jule::Bool _1b06493ce_Ordered(_1b06477a6_TypeKind*);
inline jule::Bool _1b0649665_NilCompatible(_1b06477a6_TypeKind*);
inline jule::Bool _1b06498eb_PerformsRC(_1b06477a6_TypeKind*);
inline jule::Bool _1b0649b82_SupportsCloning(_1b06477a6_TypeKind*);
inline jule::Bool _1b0649e18_Variadicable(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0650627_Prim> _1b064a19e_Prim(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0654153_Sptr> _1b064a435_Sptr(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b065791a_Ptr> _1b064a6bb_Ptr(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b051e392_Enum> _1b064a952_Enum(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b064abd8_TypeEnum(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0656e47_Arr> _1b064ae6e_Arr(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0654b26_Slc> _1b064b205_Slc(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b050b802_FnIns> _1b064b48b_Fn(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b04e5951_StructIns> _1b064b722_Struct(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b051bb97_Trait> _1b064b9a8_Trait(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b06562ba_Map> _1b064bc3e_Map(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b065571a_Tuple> _1b064bec5_Tup(_1b06477a6_TypeKind*);
inline jule::Bool _1b064c25b_comptime(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0525651_comptimeStructFields> _1b064c4e2_comptimeStructFields(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b05239a1_comptimeStructField> _1b064c778_comptimeStructField(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b052b327_comptimeEnumFields> _1b064ca0e_comptimeEnumFields(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b052a018_comptimeEnumField> _1b064cc95_comptimeEnumField(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b052ec21_comptimeParams> _1b064d02b_comptimeParams(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b052c9aa_comptimeParam> _1b064d2b2_comptimeParam(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0522e45_comptimeRange> _1b064d548_comptimeRange(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b053131b_comptimeTypeInfos> _1b064d7ce_comptimeTypeInfos(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0532916_comptimeTypeInfo> _1b064da65_comptimeTypeInfo(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b052891d_comptimeStatics> _1b064dceb_comptimeStatics(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0526c5c_comptimeStatic> _1b064e082_comptimeStatic(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b0538a1b_comptimeValue> _1b064e318_comptimeValue(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b053c965_comptimeFile> _1b064e59e_comptimeFile(_1b06477a6_TypeKind*);
inline jule::Ptr<_1b053b36a_comptimeFiles> _1b064e835_comptimeFiles(_1b06477a6_TypeKind*);
inline jule::Bool _1b0650094_checked(_1b064ec20_TypeSymbol*);
inline jule::Str _1b0650968_Str(_1b0650627_Prim*);
inline jule::Bool _1b0650ca9_Equal(jule::Ptr<_1b0650627_Prim>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Bool _1b065124e_IsConstraint(_1b0650627_Prim*);
inline jule::Bool _1b06514d5_IsI8(_1b0650627_Prim*);
inline jule::Bool _1b065176b_IsI16(_1b0650627_Prim*);
inline jule::Bool _1b0651a02_IsI32(_1b0650627_Prim*);
inline jule::Bool _1b0651c88_IsI64(_1b0650627_Prim*);
inline jule::Bool _1b065201e_IsU8(_1b0650627_Prim*);
inline jule::Bool _1b06522a5_IsU16(_1b0650627_Prim*);
inline jule::Bool _1b065253b_IsU32(_1b0650627_Prim*);
inline jule::Bool _1b06527c2_IsU64(_1b0650627_Prim*);
inline jule::Bool _1b0652a58_IsF32(_1b0650627_Prim*);
inline jule::Bool _1b0652cde_IsF64(_1b0650627_Prim*);
inline jule::Bool _1b0653075_IsInt(_1b0650627_Prim*);
inline jule::Bool _1b065330b_IsUint(_1b0650627_Prim*);
inline jule::Bool _1b0653592_IsUintptr(_1b0650627_Prim*);
inline jule::Bool _1b0653828_IsBool(_1b0650627_Prim*);
inline jule::Bool _1b0653aae_IsStr(_1b0650627_Prim*);
inline jule::Bool _1b0653d45_IsAny(_1b0650627_Prim*);
inline jule::Str _1b06544c7_Str(_1b0654153_Sptr*);
inline jule::Bool _1b0654818_Equal(jule::Ptr<_1b0654153_Sptr>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b06550aa_Str(_1b0654b26_Slc*);
inline jule::Bool _1b06553eb_Equal(jule::Ptr<_1b0654b26_Slc>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b0655a8e_Str(_1b065571a_Tuple*);
inline jule::Bool _1b0655dd0_Equal(jule::Ptr<_1b065571a_Tuple>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b065663e_Str(_1b06562ba_Map*);
inline jule::Bool _1b0656980_Equal(jule::Ptr<_1b06562ba_Map>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b06572bb_Str(_1b0656e47_Arr*);
inline jule::Bool _1b065760c_Equal(jule::Ptr<_1b0656e47_Arr>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b0657c8e_Str(_1b065791a_Ptr*);
inline jule::Bool _1b06580d0_Equal(jule::Ptr<_1b065791a_Ptr>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Bool _1b0658454_IsUnsafe(_1b065791a_Ptr*);
inline void _1b065a148_pushErr(_1b065990b_typeChecker*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b065a346_allowBuiltin(_1b065990b_typeChecker*);
inline void _1b065a544_disallowBuiltin(_1b065990b_typeChecker*);
inline void _1b40665bc_pushReference(_1b065990b_typeChecker*, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b406912a_pushReference(_1b065990b_typeChecker*, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b065aaa5_pushReferenceByKind(_1b065990b_typeChecker*, jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b065aec3_pushCycleError(_1b065990b_typeChecker*, jule::Any, jule::Any, _1aa364275_StrBuilder*);
inline jule::Bool _1b065b3be_checkCrossCycle(_1b065990b_typeChecker*, jule::Any, _1aa364275_StrBuilder*);
inline jule::Bool _1b065b7ba_checkIllegalCycles(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1b0647300_Kind> _1b065bbb6_fromTypeAlias(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Ptr<_1b06469b4_TypeAlias>*);
inline jule::Ptr<_1b051e392_Enum> _1b065c0b2_fromEnum(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Ptr<_1b051e392_Enum>*);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b065c4ad_fromTypeEnum(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Ptr<_1b0520a9c_TypeEnum>*);
inline jule::Ptr<_1b051bb97_Trait> _1b065c8a9_fromTrait(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b065cca5_checkStructIns(_1b065990b_typeChecker*, jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1aa49b1d1_Token>*);
inline void _1b065d05d_appendUsedStructReference(_1b065990b_typeChecker*, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Ptr<_1b04e5951_StructIns> _1b065d459_buildStructInstance(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Ptr<_1b04e5951_StructIns> _1b065d855_fromStruct(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Trait<_1b0647300_Kind> _1b065db96_getDef(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>*);
inline jule::Trait<_1b0647300_Kind> _1b065ded7_buildIdent(_1b065990b_typeChecker*, jule::Ptr<_1b04c22ac_IdentTypeDecl>);
inline jule::Trait<_1b0647300_Kind> _1b065e328_buildSubIdent(_1b065990b_typeChecker*, jule::Ptr<_1b04c25a9_SubIdentTypeDecl>);
inline jule::Ptr<_1b0654153_Sptr> _1b065e669_buildSptrFromType(_1b065990b_typeChecker*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Ptr<_1b0654153_Sptr> _1b065e9aa_buildSptr(_1b065990b_typeChecker*, jule::Ptr<_1b04c2c4c_SptrTypeDecl>);
inline jule::Ptr<_1b065791a_Ptr> _1b065eceb_buildPtrFromType(_1b065990b_typeChecker*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Ptr<_1b065791a_Ptr> _1b066013c_buildPtr(_1b065990b_typeChecker*, jule::Ptr<_1b04c36cb_PtrTypeDecl>);
inline jule::Ptr<_1b0654b26_Slc> _1b066047d_buildSlc(_1b065990b_typeChecker*, jule::Ptr<_1b04c30d2_SlcTypeDecl>);
inline jule::Ptr<_1b0656e47_Arr> _1b06607be_buildArr(_1b065990b_typeChecker*, jule::Ptr<_1b04c3e6d_ArrTypeDecl>);
inline jule::Ptr<_1b06562ba_Map> _1b0660b10_buildMap(_1b065990b_typeChecker*, jule::Ptr<_1b04c46bb_MapTypeDecl>);
inline jule::Ptr<_1b065571a_Tuple> _1b0660e51_buildTuple(_1b065990b_typeChecker*, jule::Ptr<_1b04c33ce_TupleTypeDecl>);
inline jule::Bool _1b0661292_checkFuncTypes(_1b065990b_typeChecker*, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Ptr<_1b050b802_FnIns> _1b06615d3_buildFunc(_1b065990b_typeChecker*, jule::Ptr<_1b04d393e_FnDecl>);
inline jule::Trait<_1b0647300_Kind> _1b0661924_buildByNamespace(_1b065990b_typeChecker*, jule::Ptr<_1b04c2950_NamespaceTypeDecl>);
inline jule::Ptr<_1b06477a6_TypeKind> _1b0661c65_build(_1b065990b_typeChecker*, jule::Any*);
inline jule::Ptr<_1b06477a6_TypeKind> _1b06620a6_checkDecl(_1b065990b_typeChecker*, jule::Ptr<_1b04c1ba2_TypeDecl>*);
inline jule::Bool static__1b0662a02_prim(jule::Str*, jule::Ptr<_1b0650627_Prim>);
inline jule::Bool static__1b0662d76_exist(jule::Str*, jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b11b5103_stop(_1b11b4993_scopeParser*);
inline jule::Bool _1b11b5389_stopped(_1b11b4993_scopeParser*);
inline jule::Bool _1b11b5620_finished(_1b11b4993_scopeParser*);
inline jule::Bool _1b11b58a6_isLastSt(_1b11b4993_scopeParser*);
inline void _1b11b5c19_pushErr(_1b11b4993_scopeParser*, jule::Ptr<_1aa49b1d1_Token>, jule::Str);
inline void _1b11b607c_pushSuggestion(_1b11b4993_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1b11b6335_insertAsNext(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b11b4102_stmt> _1b11b65bb_next(_1b11b4993_scopeParser*);
inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11b69b7_buildScope(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11b6d08_buildVarSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d4de6_RetSt> _1b11b7149_buildRetSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d5589_Iter> _1b11b748a_buildWhileNextIter(_1b11b4993_scopeParser*, jule::Ptr<_1b11b4102_stmt>*);
inline jule::Ptr<_1b04d5db4_WhileKind> _1b11b77cb_buildWhileIterKind(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11b7b1c_getRangeKindKeysTokens(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11b7e5d_buildRangeKindKey(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> _1b11b829e_buildRangeKindKeys(_1b11b4993_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>*);
inline void _1b11b8612_setupRangeKindKeysPlain(_1b11b4993_scopeParser*, jule::Ptr<_1b04d67bb_RangeKind>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11b8975_setupRangeKindKeysExplicit(_1b11b4993_scopeParser*, jule::Ptr<_1b04d67bb_RangeKind>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11b8cd8_setupRangeKindKeys(_1b11b4993_scopeParser*, jule::Ptr<_1b04d67bb_RangeKind>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d67bb_RangeKind> _1b11b928e_buildRangeIterKind(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Any _1b11b968a_buildCommonIterKind(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Ptr<_1b04d5589_Iter> _1b11b99cb_buildCommonIter(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d5589_Iter> _1b11b9d1c_buildIterSt(_1b11b4993_scopeParser*, jule::Ptr<_1b11b4102_stmt>*);
inline jule::Ptr<_1b04d6b95_BreakSt> _1b11ba15d_buildBreakSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d706e_ContSt> _1b11ba49e_buildContSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d7525_If> _1b11ba7e0_buildIf(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d78ee_Else> _1b11bab31_buildElse(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d7da5_Conditional> _1b11bae72_buildIfElseChain(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c5ed6_Expr> _1b11bb2b3_buildCoCallSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04ce73c_GotoSt> _1b11bb604_buildGotoSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04cea39_FallSt> _1b11bb945_buildFallSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d85e2_TypeAliasDecl> _1b11bbc86_buildTypeAliasSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11bc25e_pushCaseExpr(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Ptr<_1aa49b1d1_Token>, jule::Bool, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>*);
inline jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _1b11bc715_buildCaseExprs(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>*, jule::Bool);
inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11bca56_buildCaseScope(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline __jule_tuple_x_1b04d8a98_Case__jule_tuple_bool _1b11bce52_buildCase(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Bool);
inline __jule_tuple_sx_1b04d8a98_Case__jule_tuple_x_1b04d78ee_Else _1b11bd34d_buildCases(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Bool);
inline jule::Ptr<_1b04d92d5_MatchCase> _1b11bd68e_buildMatchCase(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11bd9d0_buildScopeSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04ce363_LabelSt> _1b11bdd21_buildLabelSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline __jule_tuple__1b04d13dc_StmtData__jule_tuple_bool _1b11be162_buildIdSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b11ce4c4_assignInfo> _1b11be4a3_buildAssignInfo(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d0199_AssignLeft> _1b11be7e4_buildAssignL(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1b04d0199_AssignLeft>> _1b11beb35_buildAssignLs(_1b11b4993_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>*);
inline __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool _1b11bee76_buildPlainAssign(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Bool _1b11c0372_buildDeclAssign1(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1b04d072c_AssignSt>*);
inline __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool _1b11c06b3_buildDeclAssign(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool _1b11c0a04_buildAssignSt(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c68aa_UseExpr> _1b11c0d45_buildUseExpr(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11c1186_buildSt(_1b11b4993_scopeParser*, jule::Ptr<_1b11b4102_stmt>*);
inline void _1b11c14e9_build(_1b11b4993_scopeParser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1b04d1ca0_ScopeTree>*);
inline void _1b11c282a_pushErr(_1b11c2066_exprBuilder*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b11c2b8d_pushSuggestion(_1b11c2066_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b04c6ba7_TupleExpr> _1b11c2ece_buildTuple(_1b11c2066_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>*);
inline jule::Ptr<_1b04c7081_LitExpr> _1b11c3320_buildLit(_1b11c2066_exprBuilder*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Any _1b11c39a2_buildSingle(_1b11c2066_exprBuilder*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b04c7911_IdentExpr> _1b11c3ce3_buildBindIdent(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c8093_UnaryExpr> _1b11c4134_buildUnary(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c91c6_SubIdentExpr> _1b11c4475_buildObjSubIdent(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c8c20_NsSelectionExpr> _1b11c47b6_buildNsSubIdent(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11c4b07_buildType(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11c4e48_buildSubIdent(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c846c_VariadicExpr> _1b11c5289_buildVariadic(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c62d3_RangeExpr> _1b11c55ca_buildBetweenParentheses(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c8846_CastExpr> _1b11c591b_tryBuildCast(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11c5d39_pushArg(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _1b11c617a_buildArgs(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c9cdc_FnCallExpr> _1b11c6972_buildFnCall(_1b11c2066_exprBuilder*, jule::Ptr<_1aa49b1d1_Token>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11c6cb3_buildParenthesesRange(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c745a_UnsafeExpr> _1b11c7104_buildUnsafeExpr(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d393e_FnDecl> _1b11c7445_buildAnonFn(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11c7786_buildUnsafe(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11c7ba4_pushRangeLitPart(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Ptr<_1aa49b1d1_Token>, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11c7ee5_getBraceRangeLitExprParts(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04ca7d2_FieldExprPair> _1b11c8336_buildFieldExprPair(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c5ed6_Expr> _1b11c8677_buildStructLitExpr(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _1b11c89b8_buildStructLitExprs(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04cb10c_StructLit> _1b11c8d09_buildTypedStructLiteral(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04c5ed6_Expr> _1b11c914a_buildBraceLitPart(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04cb5b3_BraceLit> _1b11c948b_buildBraceLit(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11c97cc_buildBraceRange(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11c9b1d_getEnumerableParts(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04cc5d6_SliceExpr> _1b11c9e5e_buildSlice(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04cd076_IndexingExpr> _1b11ca415_buildIndexing(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Ptr<_1b04cd6d6_SlicingExpr> _1b11caa31_buildSlicing(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Any _1b11cad72_buildBracketRange(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Any _1b11cb1b3_buildExclRight(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11cb504_buildData(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11cb900_buildBinop(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64);
inline jule::Any _1b11cbc41_build(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11cc082_buildKind(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c5ed6_Expr> _1b11cc3c3_buildFromTokens(_1b11c2066_exprBuilder*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11d2e67_stop(_1b11d2b6a_parser*);
inline jule::Bool _1b11d31ed_stopped(_1b11d2b6a_parser*);
inline void _1b11d361b_pushErr(_1b11d2b6a_parser*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1b11d397e_pushSuggestion(_1b11d2b6a_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b04c5ed6_Expr> _1b11d3cc0_buildExpr(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04884b5_Directive> _1b11d4111_buildDirective(_1b11d2b6a_parser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11d43b9_pushDirective(_1b11d2b6a_parser*, jule::Ptr<_1b04884b5_Directive>);
inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11d47b5_buildScope(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>);
inline __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool _1b11d4c6b__buildType(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool _1b11d5222_buildType(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1b04d85e2_TypeAliasDecl> _1b11d5563_buildTypeAliasDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11d58c6_buildVarTypeAndExpr(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04d4a1c_VarDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11d5c39_buildVarCommon(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04d4a1c_VarDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11d6157_buildVarBegin(_1b11d2b6a_parser*, jule::Ptr<_1b04d4a1c_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11d6498_buildVar(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04cde89_GenericDecl> _1b11d67d9_buildGeneric(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _1b11d6bd5_buildGenerics(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Ptr<_1aa49b1d1_Token>*);
inline jule::Ptr<_1b04d24dc_ParamDecl> _1b11d7026_buildSelfParam(_1b11d2b6a_parser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11d7444_paramTypeBegin(_1b11d2b6a_parser*, jule::Ptr<_1b04d24dc_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11d77a7_buildParamType(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04d24dc_ParamDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11d7b1a_buildParamBody(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04d24dc_ParamDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d24dc_ParamDecl> _1b11d7e5b_buildParam(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11d8214_checkParams(_1b11d2b6a_parser*, jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>> _1b11d8610_buildParams(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Bool);
inline __jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool _1b11d8a0b_buildMultiRetType(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64*);
inline __jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool _1b11d8e07_buildRetType(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64*);
inline jule::Ptr<_1b04d393e_FnDecl> _1b11d93ad_buildFnPrototype(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1b04d393e_FnDecl> _1b11d9864_buildFn(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _1b11d9ba5_getUseDeclSelectors(_1b11d2b6a_parser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11da018_buildBindUseDecl(_1b11d2b6a_parser*, jule::Ptr<_1b04d9aee_UseDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11da37b_buildStdUseDecl(_1b11d2b6a_parser*, jule::Ptr<_1b04d9aee_UseDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11da6de_buildIdentUseDecl(_1b11d2b6a_parser*, jule::Ptr<_1b04d9aee_UseDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline void _1b11daa52_parseUseDecl(_1b11d2b6a_parser*, jule::Ptr<_1b04d9aee_UseDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d9aee_UseDecl> _1b11dae4d_buildUseDecl(_1b11d2b6a_parser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>, jule::Bool);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11db349_buildTypeEnumItemKind(jule::Ptr<_1b11d2b6a_parser>, jule::I64*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>> _1b11db68a_buildTypeEnumItems(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04dbb01_TypeEnumDecl> _1b11db9cb_buildTypeEnumDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c5ed6_Expr> _1b11dbdc7_buildEnumItemExpr(jule::Ptr<_1b11d2b6a_parser>, jule::I64*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>> _1b11dc218_buildEnumItems(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04dab66_EnumDecl> _1b11dc559_buildEnumDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Any _1b11dc89a_buildNodeEnumDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04dbdba_FieldDecl> _1b11dcbdb_buildField(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>> _1b11dd02c_buildStructDeclFields(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04dc7b1_StructDecl> _1b11dd36d_buildStructDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11dd626_checkMethodReceiver(_1b11d2b6a_parser*, jule::Ptr<_1b04d393e_FnDecl>*);
inline void _1b11dd989_buildTraitBody(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04dceed_TraitDecl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04dceed_TraitDecl> _1b11ddcca_buildTraitDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d393e_FnDecl> _1b11de11b_buildBindFn(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11de45c_buildBindVar(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04dc7b1_StructDecl> _1b11de79d_buildBindStruct(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d85e2_TypeAliasDecl> _1b11deade_buildBindTypeAlias(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Ptr<_1b04d9aee_UseDecl> _1b11dee30_buildBindUse(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Any _1b11e0271_buildBind(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04d393e_FnDecl> _1b11e05b2_getMethod(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11e0925_parseImplBody(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04dd65d_Impl>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04dd65d_Impl> _1b11e0c66_buildImpl(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Any _1b11e10a7_buildNodeData(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11e1360_applyFnMeta(_1b11d2b6a_parser*, jule::Ptr<_1b04d393e_FnDecl>*);
inline void _1b11e1618_applyMeta(_1b11d2b6a_parser*, _1b0488163_Node*);
inline void _1b11e18c1_pushUseDecl(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1b04d9aee_UseDecl>*);
inline jule::Bool _1b11e1c12_pushMetaNodes(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline _1b0488163_Node _1b11e2053_parseNode(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11e230b_appendNode(jule::Ptr<_1b11d2b6a_parser>, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11e27d4_removeRange(_1b11d2b6a_parser*, jule::I64, jule::U64, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::I64>*);
inline void _1b11e2c02_pushWrongOrderCloseErr(_1b11d2b6a_parser*, jule::Ptr<_1aa49b1d1_Token>*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::I64>*);
inline void _1b11e31ca_pushRangeClose(_1b11d2b6a_parser*, jule::Ptr<_1aa49b1d1_Token>, jule::U64, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::Slice<jule::I64>*);
inline void _1b11e3483_checkRanges(_1b11d2b6a_parser*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline void _1b11e373b_parse(jule::Ptr<_1b11d2b6a_parser>, jule::Ptr<_1aa4a199a_File>*);
inline void _1b11e5078_pushErr(_1b11e49d4_typeBuilder*, jule::Ptr<_1aa49b1d1_Token>, jule::Str);
inline void _1b11e53db_pushSuggestion(_1b11e49d4_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e5672_buildNamespace(_1b11e49d4_typeBuilder*);
inline jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _1b11e5908_buildGenerics(_1b11e49d4_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11e5b8e_identGenerics(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e5e25_buildIdent(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e61ab_buildCppLink(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e6442_buildFn(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e66c8_buildPtr(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e695e_buildSptr(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e6be5_buildSlc(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e6e7b_buildArr(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e7212_buildMap(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e7498_buildEnumerable(_1b11e49d4_typeBuilder*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e772e_step(_1b11e49d4_typeBuilder*);
inline __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool _1b11e79b5_build(_1b11e49d4_typeBuilder*);
inline void _1b084b229_pushErr(_1b084abc9_directiveEval*, jule::Ptr<_1aa49b1d1_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b084b625_splitOperans(_1b084abc9_directiveEval*, jule::U64, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Bool _1b084b966_evalDirectiveIdent(_1b084abc9_directiveEval*, jule::Str);
inline jule::Bool _1b084bca7_evalDirectivePart(_1b084abc9_directiveEval*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Bool _1b084c03d_eval(_1b084abc9_directiveEval*);
inline jule::Ptr<_1b11e8b1a_JuleImporter> static__1b11e9016_New(_1b0849722_CompileInfo);
inline jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> _1b11e929c_AllPackages(_1b11e8b1a_JuleImporter*);
inline void _1b11e96dc_SetModPath(_1b11e8b1a_JuleImporter*, jule::Str);
inline jule::Str _1b11e9973_GetModPath(_1b11e8b1a_JuleImporter*);
inline jule::Str _1b11e9cb4_ModById(_1b11e8b1a_JuleImporter*, jule::I64);
inline jule::Ptr<_1b056a487_ImportInfo> _1b11ea105_GetImport(_1b11e8b1a_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log _1b11ea501_ImportPackage(_1b11e8b1a_JuleImporter*, jule::Str, jule::Bool);
inline void _1b11ea7a9_Imported(_1b11e8b1a_JuleImporter*, jule::Ptr<_1b056a487_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_1aa3c3a21_Log _1b11eabd8_isPassBuildDirectives(_1b11e8b1a_JuleImporter*, jule::Ptr<_1b0487184_Ast>*);
inline jule::Bool _1b448726d_isCommonOrdered(jule::Slice<jule::Ptr<_1b04e2871_Struct>>, jule::Ptr<_1b04e2871_Struct>);
inline jule::Bool _1b448bbac_isCommonOrdered(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>, jule::Ptr<_1b05ae1bd_Var>);
inline void _1b4483d4c_orderCommon(jule::Slice<jule::Ptr<_1b04e2871_Struct>>*);
inline void _1b4487b0e_orderCommon(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*);
inline void static__1b11ee989_orderStructures(jule::Slice<jule::Ptr<_1b04e2871_Struct>>*);
inline void static__1b11eebba_orderVars(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*);
inline void _1b13912e0_optimizeChild(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b0549048_Scope>*);
inline void _1b1391598_optimizeBodyChildExceptional(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b0549048_Scope>*);
inline void _1b1391851_optimizeBodyChild(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b0549048_Scope>*);
inline void _1b1391b09_optimizeExprModel(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Any*);
inline void _1b1391d07_eliminateFollowed(_1b1390d39_scopeDeadCode*);
inline void _1b13920b0_pushGoto(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054bcb5_GotoSt>);
inline void _1b1392368_pushLabel(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054b8db_Label>);
inline void _1b1392621_optimizeRangeIter(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054ad80_RangeIter>);
inline void _1b13928c9_optimizeWhileIter(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054a434_WhileIter>);
inline void _1b1392b82_optimizeInfIter(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b0549e7d_InfIter>);
inline void _1b1392e3a_optimizeConditional(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b0549b81_Conditional>);
inline void _1b13931e3_optimizeMatch(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054d17e_Match>);
inline void _1b139349b_optimizeAssign(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054c645_Assign>);
inline void _1b1393754_optimizeMultiAssign(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Ptr<_1b054ca1e_MultiAssign>);
inline void _1b1393a0c_optimizeStmt(jule::Ptr<_1b1390d39_scopeDeadCode>, jule::Any);
inline void _1b1393c0a_optimizeStmts(jule::Ptr<_1b1390d39_scopeDeadCode>);
inline _1b1395091_exprDeadCode static__1b1395701_new(jule::Ptr<_1b1390d39_scopeDeadCode>*);
inline void _1b13959a9_binary(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ea02c_BinopExprModel>);
inline void _1b1395c62_unary(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ea406_UnaryExprModel>);
inline void _1b139601a_structureLit(_1b1395091_exprDeadCode*, jule::Ptr<_1b04eacca_StructLitExprModel>);
inline void _1b13962c3_allocStructure(_1b1395091_exprDeadCode*, jule::Ptr<_1b04eb0c7_AllocStructLitExprModel>);
inline void _1b139657b_casting(_1b1395091_exprDeadCode*, jule::Ptr<_1b04eb65a_CastingExprModel>);
inline void _1b1396834_args(_1b1395091_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1b1396adc_funcCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ec00c_FnCallExprModel>);
inline void _1b1396d95_slice(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ec3d6_SliceExprModel>);
inline void _1b139714d_array(_1b1395091_exprDeadCode*, jule::Ptr<_1b050042d_ArrayExprModel>);
inline void _1b1397406_indexing(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ec88c_IndexingExprModel>);
inline void _1b13976ae_anonFunc(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ecc66_AnonFnExprModel>);
inline void _1b1397967_mapExpr(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ed5e6_MapExprModel>);
inline void _1b1397c20_slicing(_1b1395091_exprDeadCode*, jule::Ptr<_1b04edb79_SlicingExprModel>);
inline void _1b1397ec8_traitSub(_1b1395091_exprDeadCode*, jule::Ptr<_1b04ee20c_TraitSubIdentExprModel>);
inline void _1b1398281_structureSub(_1b1395091_exprDeadCode*, jule::Ptr<_1b04eea9d_StructSubIdentExprModel>);
inline void _1b1398539_commonSub(_1b1395091_exprDeadCode*, jule::Ptr<_1b0500cad_CommonSubIdentExprModel>);
inline void _1b13987e2_tuple(_1b1395091_exprDeadCode*, jule::Ptr<_1b05010aa_TupleExprModel>);
inline void _1b1398a9a_newCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0502034_BuiltinNewCallExprModel>);
inline void _1b1398d53_outCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0501484_BuiltinOutCallExprModel>);
inline void _1b139910b_outlnCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel>);
inline void _1b13993b4_panicCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b050240d_BuiltinPanicCallExprModel>);
inline void _1b139966c_assertCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel>);
inline void _1b1399925_errorCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel>);
inline void _1b1399bcd_makeCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>);
inline void _1b1399e86_appendCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0503244_BuiltinAppendCallExprModel>);
inline void _1b139a23e_lenCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0503541_BuiltinLenCallExprModel>);
inline void _1b139a4e7_capCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b050383d_BuiltinCapCallExprModel>);
inline void _1b139a7a0_cloneCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel>);
inline void _1b139aa58_deleteCall(_1b1395091_exprDeadCode*, jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel>);
inline void _1b139ad11_sizeof(_1b1395091_exprDeadCode*, jule::Ptr<_1b05048e9_SizeofExprModel>);
inline void _1b139b0b9_alignof(_1b1395091_exprDeadCode*, jule::Ptr<_1b0504be6_AlignofExprModel>);
inline void _1b139b372_integratedToStr(_1b1395091_exprDeadCode*, jule::Ptr<_1b05052e0_IntegratedToStrExprModel>);
inline void _1b139b62a_free(_1b1395091_exprDeadCode*, jule::Ptr<_1b05059b6_FreeExprModel>);
inline void _1b139b8d3_backendEmit(_1b1395091_exprDeadCode*, jule::Ptr<_1b05056b9_BackendEmitExprModel>);
inline void _1b139bb8b_optimize(_1b1395091_exprDeadCode*, jule::Any*);
inline jule::Ptr<_1b0741b69_scopeOptimizer> static__1b0742175_new(jule::Ptr<_1b0549048_Scope>);
inline void _1b074242d_setCurrentStmt(_1b0741b69_scopeOptimizer*, jule::Any);
inline void _1b07426d6_optimizeData(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b0612672_Data>);
inline void _1b074298e_optimizeVar(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b05ae1bd_Var>);
inline void _1b0742c47_optimizeConditional(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b0549b81_Conditional>);
inline void _1b0743165_buildDefaultConstantTrueCase(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054dcb7_Case>, jule::I64*, jule::Ptr<_1b054d17e_Match>*);
inline void _1b074341d_optimizeMatch(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054d17e_Match>);
inline void _1b07436c6_optimizeRangeIter(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054ad80_RangeIter>);
inline void _1b074397e_optimizeWhileIter(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054a434_WhileIter>);
inline jule::Bool _1b0743cc0_substr(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054c645_Assign>);
inline jule::Bool _1b0744111_strAssign(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054c645_Assign>);
inline void _1b07443b9_optimizeAssign(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054c645_Assign>);
inline void _1b0744672_optimizeMultiAssign(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054ca1e_MultiAssign>);
inline void _1b074492a_optimizeRet(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b054e746_RetSt>);
inline void _1b0744bd3_optimizeStmt(_1b0741b69_scopeOptimizer*, jule::Any);
inline void _1b0744e8b_optimizeChild(_1b0741b69_scopeOptimizer*, jule::Ptr<_1b0549048_Scope>);
inline void _1b0745189_optimize(_1b0741b69_scopeOptimizer*);
inline void static__1b07479b6_optimize(jule::Any*);
inline jule::Bool _1b0747d07_strCond(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ea02c_BinopExprModel>);
inline void _1b07480b0_binary(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ea02c_BinopExprModel>);
inline void _1b0748368_unary(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ea406_UnaryExprModel>);
inline void _1b0748621_structureLit(_1b0747444_exprOptimizer*, jule::Ptr<_1b04eacca_StructLitExprModel>);
inline void _1b07488c9_allocStructure(_1b0747444_exprOptimizer*, jule::Ptr<_1b04eb0c7_AllocStructLitExprModel>);
inline void _1b0748b82_casting(_1b0747444_exprOptimizer*, jule::Ptr<_1b04eb65a_CastingExprModel>);
inline void _1b0748e3a_args(_1b0747444_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1b07491e3_scope(_1b0747444_exprOptimizer*, jule::Ptr<_1b0549048_Scope>*);
inline jule::Bool _1b0749534_optimizeSpecialFuncCalls(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline void _1b07497dc_funcCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ec00c_FnCallExprModel>);
inline void _1b0749a95_slice(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ec3d6_SliceExprModel>);
inline void _1b0749d4d_array(_1b0747444_exprOptimizer*, jule::Ptr<_1b050042d_ArrayExprModel>);
inline void _1b074a106_indexing(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ec88c_IndexingExprModel>);
inline void _1b074a3ae_anonFunc(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ecc66_AnonFnExprModel>);
inline void _1b074a667_mapExpr(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ed5e6_MapExprModel>);
inline void _1b074a920_slicing(_1b0747444_exprOptimizer*, jule::Ptr<_1b04edb79_SlicingExprModel>);
inline void _1b074abc8_traitSub(_1b0747444_exprOptimizer*, jule::Ptr<_1b04ee20c_TraitSubIdentExprModel>);
inline void _1b074ae81_structureSub(_1b0747444_exprOptimizer*, jule::Ptr<_1b04eea9d_StructSubIdentExprModel>);
inline void _1b074b239_commonSub(_1b0747444_exprOptimizer*, jule::Ptr<_1b0500cad_CommonSubIdentExprModel>);
inline void _1b074b4e2_tuple(_1b0747444_exprOptimizer*, jule::Ptr<_1b05010aa_TupleExprModel>);
inline void _1b074b79a_newCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0502034_BuiltinNewCallExprModel>);
inline void _1b074ba53_outCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0501484_BuiltinOutCallExprModel>);
inline void _1b074bd0b_outlnCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel>);
inline void _1b074c0b4_panicCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b050240d_BuiltinPanicCallExprModel>);
inline void _1b074c36c_assertCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel>);
inline void _1b074c625_errorCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel>);
inline void _1b074c8cd_makeCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>);
inline void _1b074cb86_appendCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0503244_BuiltinAppendCallExprModel>);
inline void _1b074ce3e_lenCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0503541_BuiltinLenCallExprModel>);
inline void _1b074d1e7_capCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b050383d_BuiltinCapCallExprModel>);
inline void _1b074d4a0_cloneCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel>);
inline void _1b074d758_deleteCall(_1b0747444_exprOptimizer*, jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel>);
inline void _1b074da11_sizeof(_1b0747444_exprOptimizer*, jule::Ptr<_1b05048e9_SizeofExprModel>);
inline void _1b074dcb9_alignof(_1b0747444_exprOptimizer*, jule::Ptr<_1b0504be6_AlignofExprModel>);
inline void _1b074e072_integratedToStr(_1b0747444_exprOptimizer*, jule::Ptr<_1b05052e0_IntegratedToStrExprModel>);
inline void _1b074e32a_free(_1b0747444_exprOptimizer*, jule::Ptr<_1b05059b6_FreeExprModel>);
inline void _1b074e5d3_backendEmit(_1b0747444_exprOptimizer*, jule::Ptr<_1b05056b9_BackendEmitExprModel>);
inline void _1b074e7d1_do(_1b0747444_exprOptimizer*);
inline jule::Ptr<_1b139ca9e_Optimizer> static__1b139cede_New(jule::Ptr<_1b11eb5ce_IR>*);
inline void _1b139d297_optimizeGlobal(_1b139ca9e_Optimizer*, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b139d550_optimizeFunction(_1b139ca9e_Optimizer*, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b139d808_optimizeStruct(_1b139ca9e_Optimizer*, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b139dab1_optimizeGlobals(_1b139ca9e_Optimizer*, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b139dd69_optimizeFunctions(_1b139ca9e_Optimizer*, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b139e122_optimizeStructs(_1b139ca9e_Optimizer*, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b139e3ca_optimizePackage(_1b139ca9e_Optimizer*, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b139e5c8_Optimize(_1b139ca9e_Optimizer*);
inline void static__1b139edc0_Reset(void);
inline void static__1b13c4ab5_Print(jule::Str, jule::Str);
inline void static__1b13c75bd_LogFlat(_1aa3c3a21_Log*);
inline void static__1b13c77ee_LogError(_1aa3c3a21_Log*);
inline void static__1b13c7a30_Log(_1aa3c3a21_Log*);
inline void static__1b13c7c61_PrintLogs(jule::Slice<_1aa3c3a21_Log>*);
inline _1b0ee14b2_Time static__1b0ee1869_Unix(jule::U64);
inline _1b0ee14b2_Time static__1b0ee1a78_Now(void);
inline _1b0ee0cdb_AbsTime _1b0ee3261_Abs(_1b0ee14b2_Time*);
inline jule::Ptr<_1b1c64d06_scopeCoder> static__1b1c65411_new(jule::Ptr<_1b0eeaab5_ObjectCoder>*);
inline void _1b47d4576_iterHead(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ad80_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1b1c65ad7_rangeIndexIter(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ad80_RangeIter>*);
inline void _1b1c65d90_rangeHashmapIter(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ad80_RangeIter>*);
inline void _1b1c66148_ifCase(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b0549466_If>);
inline void _1b1c66401_conditional(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b0549b81_Conditional>);
inline void _1b1c666a9_infIter(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b0549e7d_InfIter>);
inline void _1b1c66962_whileIter(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054a434_WhileIter>);
inline void _1b1c66c1a_rangeIter(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ad80_RangeIter>);
inline void _1b1c66ec3_cont(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054b215_ContSt>);
inline void _1b1c6727b_label(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054b8db_Label>);
inline void _1b1c67534_gotoSt(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054bcb5_GotoSt>);
inline void _1b1c677dc_postfix(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054c18e_Postfix>);
inline void _1b1c67a95_assign(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054c645_Assign>);
inline void _1b1c67d4d_mapLookupAssign(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ca1e_MultiAssign>*);
inline void _1b1c68106_multiAssignTup(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ca1e_MultiAssign>*);
inline void _1b1c683ae_multiAssignFn(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ca1e_MultiAssign>*);
inline void _1b1c68667_multiAssign(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054ca1e_MultiAssign>);
inline jule::Fn<void(void)> _1b1c689a8_matchExpr(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054d17e_Match>);
inline void _1b1c68d1b_case(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054d17e_Match>, jule::Ptr<_1b054dcb7_Case>);
inline void _1b1c690c4_matchSt(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054d17e_Match>);
inline void _1b1c6937c_fallSt(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054e3b1_FallSt>);
inline void _1b1c69635_breakSt(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054b5de_BreakSt>);
inline void _1b1c698dd_setResult(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054e746_RetSt>);
inline void _1b1c69b96_retSt(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b054e746_RetSt>);
inline void _1b1c69e4e_var(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b05ae1bd_Var>);
inline void _1b1c6a207_mutSlicing(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b073e6e4_MutSlicingExprModel>);
inline void _1b1c6a4b0_st(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Any);
inline void _1b1c6a768_scopeStmts(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b0549048_Scope>*);
inline void _1b1c6aa21_scope(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b0549048_Scope>);
inline void _1b1c6acc9_funcScope(jule::Ptr<_1b1c64d06_scopeCoder>, jule::Ptr<_1b050b802_FnIns>);
inline jule::Ptr<_1b1c6db12_exprCoder> static__1b1c6deca_new(jule::Ptr<_1b0eeaab5_ObjectCoder>*);
inline void _1b1c6e283_string(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1ad37cdb2_Const>*);
inline void _1b1c6e53b_boolean(jule::Ptr<_1b1c6db12_exprCoder>, jule::Bool);
inline void _1b1c6e739_nilLit(jule::Ptr<_1b1c6db12_exprCoder>);
inline jule::Bool _1b1c6ea7a_ftoaSpecialCases(jule::Ptr<_1b1c6db12_exprCoder>, jule::F64*);
inline void _1b1c6ed33_float32(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1ad37cdb2_Const>*);
inline void _1b1c700db_float64(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1ad37cdb2_Const>*);
inline void _1b1c70394_constant(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1ad37cdb2_Const>);
inline void _1b1c707b2_divByZeroBinary(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1aa49b1d1_Token>*, jule::Ptr<_1b04e9a32_OperandExprModel>*, jule::Ptr<_1b04e9a32_OperandExprModel>*);
inline void _1b1c70a6a_unsafeBinary(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ea02c_BinopExprModel>);
inline void _1b1c70d23_binary(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ea02c_BinopExprModel>);
inline void _1b1c710cb_var(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05ae1bd_Var>);
inline void _1b1c71384_structureIns(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04e5951_StructIns>);
inline void _1b1c7163c_unary(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ea406_UnaryExprModel>);
inline void _1b1c718e5_structureLit(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04eacca_StructLitExprModel>);
inline void _1b1c71b9d_allocStructure(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04eb0c7_AllocStructLitExprModel>);
inline void _1b1c71e56_possibleRefExpr(jule::Ptr<_1b1c6db12_exprCoder>, jule::Any);
inline void _1b1c72374_castTraitFromTrait(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04eb65a_CastingExprModel>*, jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b051bb97_Trait>);
inline void _1b1c7262c_casting(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04eb65a_CastingExprModel>);
inline void _1b1c728d5_models(jule::Ptr<_1b1c6db12_exprCoder>, jule::Slice<jule::Any>);
inline void _1b1c72b8d_args(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline void _1b1c72e46_modelForCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Any);
inline void _1b1c731ee_pushCallInf(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline jule::Bool _1b1c73540_isWrapped(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline void _1b1c737e8_pureFuncCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline void _1b1c73aa1_coFuncCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline void _1b1c73e14_writeUseExpr(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050b802_FnIns>*, jule::Ptr<_1b0612672_Data>);
inline void _1b1c741bc_funcCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec00c_FnCallExprModel>);
inline void _1b1c74475_slice(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec3d6_SliceExprModel>);
inline void _1b1c7472d_indexing(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ec88c_IndexingExprModel>);
inline void _1b1c749d6_unsafeIndexing(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b073ecdd_UnsafeIndexingExprModel>);
inline void _1b1c74c8e_anonFunc(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ecc66_AnonFnExprModel>);
inline void _1b1c75047_mapExpr(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ed5e6_MapExprModel>);
inline void _1b1c75300_slicing(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04edb79_SlicingExprModel>);
inline void _1b1c755a8_traitSub(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04ee20c_TraitSubIdentExprModel>);
inline void _1b1c75861_structureSub(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b04eea9d_StructSubIdentExprModel>);
inline void _1b1c75b19_commonIdent(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050072a_CommonIdentExprModel>);
inline void _1b1c75dc2_commonSub(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0500cad_CommonSubIdentExprModel>);
inline void _1b1c7617a_array(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050042d_ArrayExprModel>);
inline void _1b1c76433_funcInsCommon(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050b802_FnIns>);
inline void _1b1c766db_funcIns(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050b802_FnIns>);
inline void _1b1c76994_tuple(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05010aa_TupleExprModel>);
inline void _1b1c76c4c_newCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0502034_BuiltinNewCallExprModel>);
inline void _1b1c77005_outCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0501484_BuiltinOutCallExprModel>);
inline void _1b1c772ad_outlnCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel>);
inline void _1b1c77566_panicCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050240d_BuiltinPanicCallExprModel>);
inline void _1b1c7781e_assertCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel>);
inline void _1b1c77ac7_errorCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel>);
inline void _1b1c77d80_copyCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0504223_BuiltinCopyCallExprModel>);
inline void _1b1c78138_lenCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0503541_BuiltinLenCallExprModel>);
inline void _1b1c783e1_capCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b050383d_BuiltinCapCallExprModel>);
inline void _1b1c78699_deleteCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel>);
inline void _1b1c78952_makeCallSlice(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>*);
inline void _1b1c78c0a_makeCallStr(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>*);
inline void _1b1c78eb3_makeCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>);
inline void _1b1c7926b_pushToSlice(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0740173_PushToSliceExprModel>);
inline void _1b1c79524_appendToSlice(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b074054c_AppendToSliceExprModel>);
inline void _1b1c797cc_appendCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0503244_BuiltinAppendCallExprModel>);
inline void _1b1c79a85_cloneCall(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel>);
inline void _1b1c79d3d_sizeof(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05048e9_SizeofExprModel>);
inline void _1b1c7a0e6_alignof(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0504be6_AlignofExprModel>);
inline void _1b1c7a39e_runeLit(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0504ee3_RuneExprModel>);
inline void _1b1c7a657_structureStatic(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0500054_StructStaticIdentExprModel>);
inline void _1b1c7a910_integratedToStr(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05052e0_IntegratedToStrExprModel>);
inline void _1b1c7abb8_backendEmit(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05056b9_BackendEmitExprModel>);
inline void _1b1c7ae71_free(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b05059b6_FreeExprModel>);
inline void _1b1c7b229_strComp(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b073e11c_StrCompExprModel>);
inline void _1b1c7b4d2_inlineStdInternalNosafeStobs(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b0740849_InlineStdInternalNosafeStobs>);
inline void _1b1c7b78a_model(jule::Ptr<_1b1c6db12_exprCoder>, jule::Any);
inline void _1b1c7ba43_initExpr(jule::Ptr<_1b1c6db12_exprCoder>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b1c7e6e4_deriveCoder> static__1b1c7eaac_new(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline jule::Str _1b1c7eded_cloneFuncDecl(_1b1c7e6e4_deriveCoder*, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Str _1b1c8023e_cloneFuncDef(_1b1c7e6e4_deriveCoder*, jule::Ptr<_1b04e2871_Struct>*);
inline jule::Ptr<_1b1c812a6_TestCoder> static__1b1c816e6_New(jule::Ptr<_1b0eeaab5_ObjectCoder>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b1c8197c_findTestingPackage(jule::Ptr<_1b1c812a6_TestCoder>);
inline void _1b1c81c35_appendTest(jule::Ptr<_1b1c812a6_TestCoder>, jule::Ptr<_1b050b802_FnIns>);
inline void _1b1c81edd_appendPackageTests(jule::Ptr<_1b1c812a6_TestCoder>, jule::Ptr<_1b056d3ad_Package>*);
inline jule::Bool _1b1c82274_readyTestingPackage(jule::Ptr<_1b1c812a6_TestCoder>);
inline void _1b1c82472_callTmReset(jule::Ptr<_1b1c812a6_TestCoder>);
inline void _1b1c82670_callTmFailed(jule::Ptr<_1b1c812a6_TestCoder>);
inline void _1b1c8286d_callTmSkipped(jule::Ptr<_1b1c812a6_TestCoder>);
inline void _1b1c82a6b_Serialize(jule::Ptr<_1b1c812a6_TestCoder>);
inline void static__1b1c84474_writeIdentTo(_1aa364275_StrBuilder*, jule::Str*);
inline jule::Str static__1b1c847e8_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1b1c84c27_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1b1c84ee1_func(jule::Ptr<_1b05088ed_Fn>*);
inline jule::Str static__1b1c852aa_funcIns(jule::Ptr<_1b050b802_FnIns>*);
inline jule::Str static__1b1c85574_traitDecl(jule::Ptr<_1b051bb97_Trait>);
inline jule::Str static__1b1c8583d_param(jule::Ptr<_1b0506e29_Param>*);
inline jule::Str static__1b1c85b07_structure(jule::Ptr<_1b04e2871_Struct>*);
inline jule::Str static__1b1c85dc1_structureIns(jule::Ptr<_1b04e5951_StructIns>*);
inline jule::Str static__1b1c8618a_field(jule::Ptr<_1b04de97d_Field>*);
inline jule::Str static__1b1c86454_var(jule::Ptr<_1b05ae1bd_Var>);
inline jule::Str static__1b1c8671d_iterBegin(jule::Uintptr);
inline jule::Str static__1b1c869d7_iterEnd(jule::Uintptr);
inline jule::Str static__1b1c86ca1_iterNext(jule::Uintptr);
inline jule::Str static__1b1c8706a_label(jule::Uintptr);
inline jule::Str static__1b1c87334_matchEnd(jule::Uintptr);
inline jule::Str static__1b1c875ed_caseBegin(jule::Uintptr);
inline jule::Str _1b100a70c_Str(_1b100a388_customType*);
inline jule::Bool _1b100aa4d_Equal(jule::Ptr<_1b100a388_customType>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b100ae7c_typeCoder> static__1b100b4bb_new(jule::Ptr<_1b0eeaab5_ObjectCoder>*);
inline jule::Str _1b100b80c_toType(_1b100ae7c_typeCoder*, jule::Str);
inline jule::Str _1b100bb4d_prim(_1b100ae7c_typeCoder*, jule::Ptr<_1b0650627_Prim>);
inline jule::Str _1b100be8e_tuple(_1b100ae7c_typeCoder*, jule::Ptr<_1b065571a_Tuple>);
inline jule::Str _1b100c2d0_asSptr(_1b100ae7c_typeCoder*, jule::Str);
inline jule::Str _1b100c621_sptr(_1b100ae7c_typeCoder*, jule::Ptr<_1b0654153_Sptr>);
inline jule::Str _1b100c962_ptr(_1b100ae7c_typeCoder*, jule::Ptr<_1b065791a_Ptr>);
inline jule::Str _1b100cca3_enumDecl(_1b100ae7c_typeCoder*, jule::Ptr<_1b051e392_Enum>);
inline jule::Str _1b100d0e4_typeEnumDecl(_1b100ae7c_typeCoder*, jule::Ptr<_1b0520a9c_TypeEnum>);
inline jule::Str _1b100d435_asSlice(_1b100ae7c_typeCoder*, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Str _1b100d776_slice(_1b100ae7c_typeCoder*, jule::Ptr<_1b0654b26_Slc>);
inline jule::Str _1b100dab7_mapType(_1b100ae7c_typeCoder*, jule::Ptr<_1b06562ba_Map>);
inline jule::Str _1b100de08_traitIdent(_1b100ae7c_typeCoder*, jule::Str);
inline jule::Str _1b100e249_traitDecl(_1b100ae7c_typeCoder*, jule::Ptr<_1b051bb97_Trait>);
inline jule::Str _1b100e58a_structure(_1b100ae7c_typeCoder*, jule::Ptr<_1b04e2871_Struct>);
inline jule::Str _1b100e8cb_structureIns(_1b100ae7c_typeCoder*, jule::Ptr<_1b04e5951_StructIns>);
inline jule::Str _1b100ec1c_array(_1b100ae7c_typeCoder*, jule::Ptr<_1b0656e47_Arr>);
inline jule::Str _1b101039e_paramIns(_1b100ae7c_typeCoder*, jule::Ptr<_1b050a856_ParamIns>*);
inline void _1b1010a53_funcInsResult(_1b100ae7c_typeCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Str _1b1010d94_anonFunc(_1b100ae7c_typeCoder*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Str _1b10111d5_func(_1b100ae7c_typeCoder*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Str _1b1011526_kind(_1b100ae7c_typeCoder*, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Ptr<_1b1013c54_resultCoder> static__1b101422c_new(jule::Ptr<_1b100ae7c_typeCoder>*);
inline void _1b1014590_ptr(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b065791a_Ptr>);
inline void _1b1014903_sptr(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b0654153_Sptr>);
inline void _1b1014c66_mapType(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b06562ba_Map>);
inline void _1b10150c9_slice(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b0654b26_Slc>);
inline void _1b101543c_arr(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b0656e47_Arr>);
inline void _1b10157a0_func(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b050b802_FnIns>);
inline void _1b1015b13_tup(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b065571a_Tuple>);
inline void _1b1015e76_codeMut(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b10162d9_codeMut1(_1b1013c54_resultCoder*, _1aa364275_StrBuilder*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Str _1b10165e7_code(_1b1013c54_resultCoder*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Str _1b4c6d23a_Name(_1b4c6d3e4_Flag*);
inline jule::Str _1b4c6d6d0_What(_1b4c6d3e4_Flag*);
inline void _1b4c6d823_Reset(_1b4c6d3e4_Flag*);
inline jule::I32 _1b4c6d966_Short(_1b4c6d3e4_Flag*);
inline jule::Str _1b4c7188c_Name(_1b4c71c55_Flag*);
inline jule::Str _1b4c719d0_What(_1b4c71c55_Flag*);
inline void _1b4c72041_Reset(_1b4c71c55_Flag*);
inline jule::I32 _1b4c72184_Short(_1b4c71c55_Flag*);
inline jule::Str _1b4c75088_Name(_1b4c75451_Flag*);
inline jule::Str _1b4c751cb_What(_1b4c75451_Flag*);
inline void _1b4c7573c_Reset(_1b4c75451_Flag*);
inline jule::I32 _1b4c75880_Short(_1b4c75451_Flag*);
inline jule::Str _1b4c787c8_Name(_1b4c78b91_Flag*);
inline jule::Str _1b4c7891b_What(_1b4c78b91_Flag*);
inline void _1b4c78e7c_Reset(_1b4c78b91_Flag*);
inline jule::I32 _1b4c790c0_Short(_1b4c78b91_Flag*);
inline jule::Str _1b4c7bec4_Name(_1b4c7c38c_Flag*);
inline jule::Str _1b4c7c117_What(_1b4c7c38c_Flag*);
inline void _1b4c7c678_Reset(_1b4c7c38c_Flag*);
inline jule::I32 _1b4c7c7bb_Short(_1b4c7c38c_Flag*);
inline jule::Ptr<_1b1080ba0_FlagSet> static__1b1080e8b_New(void);
inline jule::Trait<_1b107e0ee_CommonFlag> _1b108140e_FindFlag(_1b1080ba0_FlagSet*, jule::Str);
inline jule::Trait<_1b107e0ee_CommonFlag> _1b1081750_FindFlagShort(_1b1080ba0_FlagSet*, jule::I32);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b1081d27_Parse(_1b1080ba0_FlagSet*, jule::Slice<jule::Str>);
inline jule::Ptr<_1b4c7c38c_Flag> _1b48ab20d_addFlagCommon(_1b1080ba0_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b4c78b91_Flag> _1b48b42c1_addFlagCommon(_1b1080ba0_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b48a9195_AddVar(_1b1080ba0_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b48b228b_AddVar(_1b1080ba0_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
inline __jule_tuple_i64__jule_tuple_bool _1b4c90119_parseInteger(_1b1083631_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1b4c978b3_parseInteger(_1b1083631_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1b1083e4a_getData(_1b1083631_argParser*);
inline jule::VoidExceptional _1b10841c0_processFlag(_1b1083631_argParser*, jule::Trait<_1b107e0ee_CommonFlag>*);
inline jule::VoidExceptional _1b1084478_singleDash(_1b1083631_argParser*, jule::Str*);
inline jule::VoidExceptional _1b1084731_doubleDash(_1b1083631_argParser*, jule::Str*);
inline jule::VoidExceptional _1b108492e_tryArg(_1b1083631_argParser*);
inline jule::VoidExceptional _1b1084b2c_parse(_1b1083631_argParser*);
inline jule::Ptr<_1b0eeaab5_ObjectCoder> static__1b0eeaeb1_New(jule::Ptr<_1b11eb5ce_IR>*, _1b0ee8ec0_SerializationInfo);
inline void _1b0eeb269_write(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Str);
inline void _1b0eeb467_addIndent(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eeb665_doneIndent(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eeb863_indent(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline jule::I64 _1b0eebba4_findAnyType(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::I64 _1b0eebee5_pushAnyType(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b0eec29d_pushResultIns(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b0eec556_pushResult(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b05088ed_Fn>*);
inline jule::I64 _1b0eec952_findTypeOffsetS(_1b0eeaab5_ObjectCoder*, jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b04e5951_StructIns>);
inline jule::I64 _1b0eecd4d_findTypeOffset(_1b0eeaab5_ObjectCoder*, jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b0eed1b1_pushAndWriteMaskMapper(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b051bb97_Trait>);
inline void _1b0eed469_locInfo(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1aa49b1d1_Token>*);
inline void _1b0eed667_head(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eed865_links(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eedb1d_prepareStructure(_1b0eeaab5_ObjectCoder*, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b0eedd1b_prepareStructures(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eee0c4_iterPackages(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>);
inline void _1b0eee2c2_buildTraitMap(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eee4c0_traitDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eee778_structurePlainDecl(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b0eee976_structurePlainDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b0eeec2e_fieldDecl(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e4da1_FieldIns>*);
inline void _1b0eeeed7_structureDestructor(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b1000290_structureDeriveDefsDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b1000603_structureOperatorEq(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Str*, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b1000966_structureOperatorNotEq(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Str*, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b1000d84_structureOperator(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Str*, jule::Ptr<_1b050b802_FnIns>*, jule::Str);
inline void _1b100113c_structureOperators(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b10013e5_structureInsDecl(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b100169d_structureDecl(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b100189b_structureDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1001a99_structureMethodDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1001d52_paramsDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>*);
inline void _1b10021b5_funcHead(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b050b802_FnIns>*, jule::Bool);
inline void _1b1002528_funcDeclIns(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b050b802_FnIns>*, jule::Bool);
inline void _1b100288b_funcDecl(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b05088ed_Fn>*, jule::Bool);
inline void _1b1002ca9_funcDeclTrait(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b051bb97_Trait>*, jule::Ptr<_1b05088ed_Fn>*, jule::Bool);
inline void _1b1002ea7_funcDecls(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b100331a_traitDataTypeMethods(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b051bb97_Trait>*, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b1003518_traitDataTypes(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b10037c1_paramIns(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b050a856_ParamIns>*);
inline void _1b1003a79_paramsIns(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>*);
inline void _1b1003ddc_varInitExpr(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b05ae1bd_Var>*, jule::Fn<void(void)>);
inline void _1b1004195_var(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b05ae1bd_Var>);
inline void _1b100444d_funcIns(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b1004706_func(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b1004a69_funcTrait(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b0ee9597_traitHash>*, jule::Ptr<_1b05088ed_Fn>*);
inline void _1b1004dcc_traitWrapper(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b05088ed_Fn>*, jule::Ptr<_1b0ee9597_traitHash>*);
inline void _1b10050ca_traitWrappers(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b100543d_traitDataMethods(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b051bb97_Trait>*, jule::Ptr<_1b0ee9597_traitHash>*);
inline void _1b10057a1_traitData(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b0ee9597_traitHash>*, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b100599e_traitDatas(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1005b9c_globals(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1005d9a_decls(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1006153_structureMethods(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b100640b_structureDeriveDefs(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b10066b4_structureOstream(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b100696c_structureIns(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e5951_StructIns>*);
inline void _1b1006c25_structure(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b1006e23_structures(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1007121_funcs(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b10073c9_pushInit(jule::Ptr<_1b0eeaab5_ObjectCoder>, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b10075c7_initCaller(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b10077c5_end(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b10079c3_serializeHead(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline void _1b1007bc1_Serialize(jule::Ptr<_1b0eeaab5_ObjectCoder>);
inline jule::Ptr<_1b0b9d180_ObjectDeadCode> static__1b0b9d49e_new(jule::Ptr<_1b11eb5ce_IR>*);
inline jule::Bool _1b44b5037_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b44b9e82_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Bool _1b44c23a7_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b04e5951_StructIns>*);
inline jule::Bool _1b44c77a8_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b05ae1bd_Var>*);
inline void _1b44b5433_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b051bb97_Trait>);
inline void _1b44ba59d_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b050b802_FnIns>);
inline void _1b44c161a_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b04e5951_StructIns>);
inline void _1b44c7ba4_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b05ae1bd_Var>);
inline void _1b0b9dd51_setReferencesAsLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b050e99d_ReferenceStack>*);
inline void _1b0b9e109_inits(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b0b9e3b2_collectLivePackage(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b0b9e5b0_collectLive(jule::Ptr<_1b0b9d180_ObjectDeadCode>);
inline void _1b0b9e868_removeDeadGlobals(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*);
inline void _1b0b9eb21_removeDeadFns(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b05088ed_Fn>>*);
inline void _1b0b9edc9_removeDeadStructs(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b04e2871_Struct>>*);
inline void _1b0ba0182_removeDeadTraits(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Slice<jule::Ptr<_1b051bb97_Trait>>*);
inline void _1b0ba043a_removeDeadsFile(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b060c44c_SymbolTable>*);
inline void _1b0ba06e3_removeDeadsPackage(jule::Ptr<_1b0b9d180_ObjectDeadCode>, jule::Ptr<_1b056d3ad_Package>*);
inline void _1b138de03_removeDeads(jule::Ptr<_1b0b9d180_ObjectDeadCode>);
inline void _1b138e101_elimanate(jule::Ptr<_1b0b9d180_ObjectDeadCode>);
inline __jule_tuple_x_1b11eb5ce_IR__jule_tuple_s_1aa3c3a21_Log static__1b11eba41_Build(jule::Str, jule::I64);
inline void _1b11ec02a_appendStructs(_1b11eb5ce_IR*, jule::Ptr<_1b056d3ad_Package>*, jule::Slice<jule::Ptr<_1b04e2871_Struct>>*);
inline jule::Slice<jule::Ptr<_1b04e2871_Struct>> _1b11ec2b1_GetAllStructures(_1b11eb5ce_IR*);
inline void _1b11ec624_appendGlobals(_1b11eb5ce_IR*, jule::Ptr<_1b056d3ad_Package>*, jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*);
inline jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _1b11ec8aa_GetAllGlobals(_1b11eb5ce_IR*);
inline void _1b11ecaa8_Order(_1b11eb5ce_IR*);
inline jule::Str _1b04e5cc5_Str(_1b04e5951_StructIns*);
inline jule::Bool _1b04e6116_Equal(jule::Ptr<_1b04e5951_StructIns>, jule::Ptr<_1b06477a6_TypeKind>);
inline jule::Bool _1b04e65bc_Same(_1b04e5951_StructIns*, jule::Ptr<_1b04e5951_StructIns>);
inline jule::Ptr<_1b05088ed_Fn> _1b04e69b8_FindMethod(_1b04e5951_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1b04e4da1_FieldIns> _1b04e6d09_FindField(_1b04e5951_StructIns*, jule::Str);
inline jule::Ptr<_1b05ae1bd_Var> _1b04e714a_FindStatic(_1b04e5951_StructIns*, jule::Str);
inline jule::Ptr<_1aa5dd257_Cmd> static__1aa5dd675_New(jule::Str);
inline jule::VoidExceptional _1aa5dd873_Spawn(_1aa5dd257_Cmd*);
inline jule::Exceptional<jule::I64> _1aa5ddd07_Wait(_1aa5dd257_Cmd*);
inline jule::VoidExceptional _1aa63d84b_spawn(_1aa5dd257_Cmd*);
inline jule::Exceptional<jule::I64> _1aa63dcd0_wait(_1aa5dd257_Cmd*);
inline void _1ba08038d_Free(void*);
inline jule::Str _1ba0b11b0_BytePtrToStr(jule::U8*);
inline jule::I64 _1ba02b647_GetLastErrno(void);
inline jule::I64 _1ba0c09c7_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _1ba0c0d4b_Stat(jule::U8*, struct stat*);
inline jule::I64 _1ba0c127a_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _1ba0c15ee_Getcwd(jule::U8*, jule::U64);
inline DIR* _1ba0c1ae9_Opendir(jule::U8*);
inline struct dirent* _1ba0c1db3_Readdir(DIR*);
inline jule::I64 _1ba0c217c_Closedir(DIR*);
inline jule::I64 _1ba0c2a84_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _1ba0c2d4d_Rmdir(jule::U8*);
inline jule::I64 _1ba0c3117_Unlink(jule::U8*);
inline jule::I64 _1ba0dd671_Read(jule::I64, void*, jule::U64);
inline jule::I64 _1ba0dda17_Close(jule::I64);
inline jule::I64 _1ba0dde46_Write(jule::I64, void*, jule::U64);
inline void _1ba0de177_Exit(jule::I64);
inline jule::Slice<jule::U8> _1ba10714b_Stobs(jule::Str*);
inline jule::I64 _1ba1d0eb1_getLastOsError(void);
inline jule::Slice<jule::Str> _1ba1d1a0b_Args(void);
inline jule::Exceptional<jule::Str> _1ba1d1ea1_WorkingDir(void);
inline jule::Exceptional<jule::Str> _1ba1d2e2a_getwd(void);
inline jule::Bool _1aa18b102_IsLetter(jule::I32);
inline jule::Bool _1aa203bb4_is16(jule::Slice<_1aa201e26_Range16>, jule::U16);
inline jule::Bool _1aa204038_is32(jule::Slice<_1aa202454_Range32>, jule::U32);
inline jule::Bool _1aa204841_isExcludingLatin(jule::Ptr<_1aa20290a_RangeTable>, jule::I32);
inline jule::Bool _1aa204b0a_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _1aa30d186_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _1aa30d791_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _1aa30e5e9_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _1aa30e96d_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _1aa310001_RuneCountStr(jule::Str);
inline jule::Bool _1aa3102ba_RuneStart(jule::U8);
inline jule::I64 _1aa33a867_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1aa34ce95_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _1aa34d34c_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _1aa34d6c1_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _1aa34db33_Repeat(jule::Str, jule::I64);
inline jule::Bool _1aa34e0a6_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1aa34e42a_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _1aa34e8d1_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _1aa34ec22_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _1aa350151_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1aa350a14_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _1aa350d88_FindLast(jule::Str, jule::Str);
inline jule::I64 _1aa352263_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _1aa352b15_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _1aa353a06_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _1aa3542a9_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _1aa35462d_Contains(jule::Str, jule::Str);
inline jule::Bool _1aa35519a_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _1aa35551e_Count(jule::Str, jule::Str);
inline jule::Str _1aa355a08_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _1aa3527a2_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1aa356ba2_TrimLeft(jule::Str, jule::Str);
inline void _1aa356e8d_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _1aa357686_Trim(jule::Str, jule::Str);
inline jule::Str _1aa357a0a_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _1aa370c76_Clean(jule::Str);
inline jule::Str _1aa37134d_FromSlash(jule::Str);
inline jule::Str _1aa37168e_Join(jule::Slice<jule::Str>);
inline jule::Str _1aa371958_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1aa371c22_Abs(jule::Str);
inline jule::Str _1aa371edb_Base(jule::Str);
inline jule::Str _1aa372382_Dir(jule::Str);
inline jule::Str _1aa37264b_VolumeName(jule::Str);
inline jule::Bool _1aa373493_IsPathSep(jule::U8);
inline jule::Bool _1aa3737a1_IsAbs(jule::Str);
inline jule::I64 _1aa373a6a_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _1aa373dab_abs(jule::Str);
inline jule::Str _1aa374175_join(jule::Slice<jule::Str>);
inline jule::I64 _1ba0ee4c8_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _1aa5deb0a_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _1aa6396d2_Itoa(jule::I64);
inline jule::Str _1aa6399e0_Utoa(jule::U64);
inline jule::Slice<char*> _1aa63d043_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _1aa63d3b7_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _1aa63d5e8_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _1aa63e572_processErrorFromCode(jule::I64);
inline jule::I64 _1aa63e7c5_getLastProcessError(void);
inline void _1aa6400de_Exit(jule::I64);
inline jule::Str _1aa6402ed_Executable(void);
inline jule::Bool _1aa3b6706_IsStdHeaderPath(jule::Str);
inline jule::Bool _1aa3b69ae_IsValidHeaderExt(jule::Str);
inline jule::Bool _1aa3b6c78_IsValidCppExt(jule::Str);
inline jule::Str _1aa3c3e83_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1aa534c4d_argToStr(jule::Any);
inline jule::I64 _1aa534e18_findNextFmt(jule::Str);
inline jule::Str _1aa5352d1_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa53637b_IsTopDirective(jule::Str);
inline jule::Bool _1aa5377cd_IsWindows(jule::Str);
inline jule::Bool _1aa537aa8_IsDarwin(jule::Str);
inline jule::Bool _1aa537d72_IsLinux(jule::Str);
inline jule::Bool _1aa5381b3_IsI386(jule::Str);
inline jule::Bool _1aa53847c_IsAmd64(jule::Str);
inline jule::Bool _1aa538746_IsArm64(jule::Str);
inline jule::Bool _1aa538a10_IsUnix(jule::Str);
inline jule::Bool _1aa538da6_Is32Bit(jule::Str);
inline jule::Bool _1aa539170_Is64Bit(jule::Str);
inline void _1aa6415c9_init(void);
inline jule::Bool _1aa49b91d_IsUnaryOp(jule::U64);
inline jule::Bool _1aa49bc2b_IsBinOp(jule::U64);
inline jule::Bool _1aa49c336_IsStr(jule::Str);
inline jule::Bool _1aa49c600_IsRawStr(jule::Str);
inline jule::Bool _1aa49c8b9_IsRune(jule::Str);
inline jule::Bool _1aa49d2e3_IsFloat(jule::Str);
inline jule::Bool _1aa49d5ac_IsNum(jule::Str);
inline jule::Bool _1aa49db40_IsIgnoreIdent(jule::Str);
inline jule::Bool _1aa49de09_IsAnonIdent(jule::Str);
inline jule::Bool _1aa49e48c_IsSpace(jule::I32);
inline jule::Bool _1aa49e910_IsLetter(jule::I32);
inline jule::Bool _1aa49ee93_IsDecimal(jule::U8);
inline jule::Bool _1aa4a025c_IsBinary(jule::U8);
inline jule::Bool _1aa4a0526_IsOctal(jule::U8);
inline jule::Bool _1aa4a07e0_IsHex(jule::U8);
inline jule::Bool _1aa4a0aa9_IsAssign(jule::U64);
inline jule::Bool _1aa4a0d73_IsPostfixOp(jule::U64);
inline jule::Bool _1aa4a113c_IsAssignOp(jule::U64);
inline jule::Ptr<_1aa4a199a_File> _1aa4a2d42_NewFileSet(jule::Str);
inline _1aa3c3a21_Log _1aa4a488d_makeErr(jule::I64, jule::I64, jule::Ptr<_1aa4a199a_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1aa4a4c56_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _1aa4a50ca_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a5493_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a5817_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a5b8b_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a6010_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a6494_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a675d_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _1aa4a6a27_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _1aa4a6d9b_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _1aa4a7220_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _1aa4a7594_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1aa4a7918_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _1aa4a7c8c_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a8210_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _1aa4a84c9_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _1aa4a884d_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _1aa4a8b17_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1aa4a8dd1_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _1aa4a919a_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _1aa4a9464_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_1aa3c3a21_Log> _1aa4ae458_Lex(jule::Ptr<_1aa4a199a_File>, jule::I64);
inline jule::I64 _1ad30d5b2_LeadingZeros64(jule::U64);
inline jule::I64 _1ad30e519_TrailingZeros(jule::U64);
inline jule::I64 _1ad30ee76_TrailingZeros32(jule::U32);
inline jule::I64 _1ad310240_TrailingZeros64(jule::U64);
inline jule::I64 _1ad315be6_Len32(jule::U32);
inline jule::I64 _1ad315eb0_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1ad316c4c_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1ad318556_Mul64(jule::U64, jule::U64);
inline jule::U32 _1ad1c8108_F32Bits(jule::F32);
inline jule::F32 _1ad1c8416_F32FromBits(jule::U32);
inline jule::U64 _1ad1c86d0_F64Bits(jule::F64);
inline jule::F64 _1ad1c8a21_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _1ad1cb0c8_Frexp(jule::F64);
inline jule::F64 _1ad320dee_NaN(void);
inline jule::Bool _1ad32120c_IsNaN(jule::F64);
inline jule::F64 _1ad3214c6_Inf(jule::I64);
inline jule::Bool _1ad321817_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1ad321ad1_normalize(jule::F64);
inline jule::F64 _1ad3235b6_Log(jule::F64);
inline jule::F64 _1ad3240ab_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1ad32aca5_Modf(jule::F64);
inline jule::F64 _1ad32b5ad_Log2(jule::F64);
inline jule::Str _1ad355ae3_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1ad3561cb_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1ad35684c_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1ad3548b1_floatInfo*);
inline jule::Slice<jule::U8> _1ad357023_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1ad355560_decimalSlice, jule::I64, jule::U8);
inline void _1ad357474_roundShortest(_1ad368353_decimal*, jule::U64, jule::I64, _1ad3548b1_floatInfo*);
inline jule::Slice<jule::U8> _1ad357a18_fmtE(jule::Slice<jule::U8>, jule::Bool, _1ad355560_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1ad358002_fmtF(jule::Slice<jule::U8>, jule::Bool, _1ad355560_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1ad358673_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1ad3548b1_floatInfo*);
inline jule::Slice<jule::U8> _1ad358d7c_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1ad3548b1_floatInfo*);
inline jule::I64 _1ad359201_min(jule::I64, jule::I64);
inline jule::I64 _1ad359575_max(jule::I64, jule::I64);
inline jule::U8 _1ad35a1ad_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__1abb9a8e0_ConvError _1ad35a631_parseUint(jule::Str*, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1ad35aa60_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1ad35b016_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1ad35bc09_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ad35c149_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1ad35dea3_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>*, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ad35e2b1_special(jule::Slice<jule::U8>);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ad35e57a_readFloat(jule::Str*);
inline __jule_tuple_f64__jule_tuple_bool _1ad361109_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1ad361538_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__1abb9a8e0_ConvError _1ad361acc_atofHex(_1ad3548b1_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError _1ad361ea6_atof32(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError _1ad362270_atof64(jule::Str*);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError _1ad3625e4_parseFloatPrefix(jule::Str*, jule::I64);
inline jule::Exceptional<jule::F64> _1ad362968_ParseFloat(jule::Str, jule::I64);
inline void _1ad363271_ryuFtoaFixed32(_1ad355560_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1ad363716_ryuFtoaFixed64(_1ad355560_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1ad364063_formatDecimal(_1ad355560_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1ad36453b_ryuFtoaShortest(_1ad355560_decimalSlice*, jule::U64, jule::I64, _1ad3548b1_floatInfo*);
inline jule::I64 _1ad364805_mulByLog2Log10(jule::I64);
inline jule::I64 _1ad364abe_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ad364eed_computeBounds(jule::U64, jule::I64, _1ad3548b1_floatInfo*);
inline void _1ad365619_ryuDigits(_1ad355560_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1ad365c8a_ryuDigits32(_1ad355560_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ad3661b9_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ad3665e8_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1ad36696c_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1ad366c36_divmod1e9(jule::U64);
inline void _1ad369ba1_trim(_1ad368353_decimal*);
inline void _1ad369e8c_rightShift(_1ad368353_decimal*, jule::U64);
inline jule::Bool _1ad36a443_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str*);
inline void _1ad36a6eb_leftShift(_1ad368353_decimal*, jule::U64);
inline jule::Bool _1ad36aa70_shouldRoundUp(_1ad368353_decimal*, jule::I64);
inline jule::Str _1ad36c203_FmtUint(jule::U64, jule::I64);
inline jule::Str _1ad36c5bb_FmtInt(jule::I64, jule::I64);
inline jule::Str _1ad36c885_Itoa(jule::I64);
inline jule::Str _1ad36cbc6_small(jule::I64);
inline jule::Bool _1ad36ce90_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1ad36d534_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1ad36ea30_RealKindOf(jule::Str);
inline jule::I64 _1ad36ece9_BitsizeOf(jule::Str);
inline jule::Str _1ad37013a_IntFromBits(jule::I64);
inline jule::Str _1ad370404_UintFromBits(jule::I64);
inline jule::Str _1ad3706bd_FloatFromBits(jule::I64);
inline jule::Bool _1ad371317_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1ad3715d1_BitsizeOfFloat(jule::F64);
inline jule::I64 _1ad37189a_BitsizeOfInt(jule::I64);
inline jule::I64 _1ad371b64_BitsizeOfUint(jule::U64);
inline void _1ad371cda_UpdateTarget(void);
inline void _1ad371e61_init(void);
inline jule::I64 _1ad375cbc_MinI(jule::Str);
inline jule::I64 _1ad3760ca_MaxI(jule::Str);
inline jule::U64 _1ad376394_MaxU(jule::Str);
inline jule::F64 _1ad3765c5_Min(jule::Str);
inline jule::F64 _1ad37688e_Max(jule::Str);
inline jule::Bool _1ad376d12_IsI8Compatible(jule::Str);
inline jule::Bool _1ad377120_IsI16Compatible(jule::Str);
inline jule::Bool _1ad3773d9_IsI32Compatible(jule::Str);
inline jule::Bool _1ad37772a_IsI64Compatible(jule::Str);
inline jule::Bool _1ad3779e4_IsU8Compatible(jule::Str);
inline jule::Bool _1ad377cad_IsU16Compatible(jule::Str);
inline jule::Bool _1ad378077_IsU32Compatible(jule::Str);
inline jule::Bool _1ad37841d_IsU64Compatible(jule::Str);
inline jule::Bool _1ad3786d7_IsF32Compatible(jule::Str);
inline jule::Bool _1ad3789a1_IsF64Compatible(jule::Str);
inline jule::Bool _1ad378d25_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1ad3790de_IsI16Greater(jule::Str);
inline jule::Bool _1ad3793a8_IsI32Greater(jule::Str);
inline jule::Bool _1ad379672_IsI64Greater(jule::Str);
inline jule::Bool _1ad37993b_IsU16Greater(jule::Str);
inline jule::Bool _1ad379dae_IsU32Greater(jule::Str);
inline jule::Bool _1ad37a178_IsU64Greater(jule::Str);
inline jule::Bool _1ad37a442_IsF32Greater(jule::Str);
inline jule::Bool _1ad37a70b_IsF64Greater(jule::Str);
inline jule::Bool _1ad37aa80_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1ad37bad6_IsSigInt(jule::Str);
inline jule::Bool _1ad37bde4_IsUnsigInt(jule::Str);
inline jule::Bool _1ad37c1ad_IsInt(jule::Str);
inline jule::Bool _1ad37c4ee_IsFloat(jule::Str);
inline jule::Bool _1ad37c7b8_IsNum(jule::Str);
inline jule::Bool _1ad37ca82_IsSigNum(jule::Str);
inline void _1ad386dcc_lshiftUnsig(_1ad37cdb2_Const*, _1ad37cdb2_Const*);
inline void _1ad38720c_rshiftUnsig(_1ad37cdb2_Const*, _1ad37cdb2_Const*);
inline jule::Bool _1b0587509_FindModuleFile(jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>*);
inline jule::Str _1b05877d4_FindModuleFileDeep(jule::Str);
inline jule::Slice<_1aa3c3a21_Log> _1b0587a9d_CheckModuleFile(jule::Str*);
inline jule::Bool _1b05885d7_IsPub(jule::Str*);
inline jule::Bool _1b05cdeac_IsAscii(jule::I32);
inline jule::I32 _1b05e6843_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1b05e69ec_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1b05e6d3d_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1b05e7107_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1b05e7448_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1b05e77bc_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1b07292a0_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1b0729668_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1b0729954_FmtByDefault(_1aa364275_StrBuilder*, jule::Any*);
inline void _1b0729d72_applyFmtByDefault(_1aa364275_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline void _1b072a2c3_applyFmt(jule::Slice<jule::U8>*, _1aa364275_StrBuilder*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1b072a614_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1b072c68d_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b050dace_parameterUsesGenerics(jule::Ptr<_1b050a856_ParamIns>*, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>*);
inline jule::Ptr<_1b064ec20_TypeSymbol> _1b051132e_buildType(jule::Ptr<_1b04c1ba2_TypeDecl>);
inline jule::Ptr<_1b06137b6_Value> _1b051163c_buildExpr(jule::Ptr<_1b04c5ed6_Expr>);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0511906_buildTypeAlias(jule::Ptr<_1b04d85e2_TypeAliasDecl>);
inline jule::Ptr<_1b04de97d_Field> _1b0511c47_buildField(jule::Ptr<_1b04dbdba_FieldDecl>);
inline jule::Slice<jule::Ptr<_1b04de97d_Field>> _1b0512011_buildFields(jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>>*);
inline jule::Ptr<_1b04e2871_Struct> _1b05122ca_buildStruct(jule::Ptr<_1b04dc7b1_StructDecl>);
inline jule::Ptr<_1b0506e29_Param> _1b0512594_buildParam(jule::Ptr<_1b04d24dc_ParamDecl>);
inline jule::Slice<jule::Ptr<_1b0506e29_Param>> _1b051293a_buildParams(jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>>*);
inline jule::Ptr<_1b0506698_RetType> _1b0512c04_buildRetType(jule::Ptr<_1b04c4a95_RetTypeDecl>);
inline jule::Ptr<_1b05088ed_Fn> _1b0512ebd_buildFunc(jule::Ptr<_1b04d393e_FnDecl>);
inline jule::Slice<jule::Ptr<_1b05088ed_Fn>> _1b0513287_buildMethods(jule::Slice<jule::Ptr<_1b04d393e_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1b064ec20_TypeSymbol>> _1b0513551_buildTraitInherits(jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>*);
inline jule::Ptr<_1b051bb97_Trait> _1b051381a_buildTrait(jule::Ptr<_1b04dceed_TraitDecl>);
inline jule::Ptr<_1b051d825_EnumItem> _1b0513ad4_buildEnumItem(jule::Ptr<_1b04da0a5_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b051d825_EnumItem>> _1b0513d9d_buildEnumItems(jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>>*);
inline jule::Ptr<_1b051e392_Enum> _1b0514321_buildEnum(jule::Ptr<_1b04dab66_EnumDecl>);
inline jule::Ptr<_1b05204c5_TypeEnumItem> _1b05145da_buildTypeEnumItem(jule::Ptr<_1b04db491_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>> _1b05148a4_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>>*);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0514b6d_buildTypeEnum(jule::Ptr<_1b04dbb01_TypeEnumDecl>);
inline jule::Ptr<_1b05ae1bd_Var> _1b0514e37_buildVar(jule::Ptr<_1b04d4a1c_VarDecl>);
inline jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _1b0515201_buildVars(jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>>);
inline jule::Ptr<_1b0543b14_Impl> _1b05154ba_buildImpl(jule::Ptr<_1b04dd65d_Impl>);
inline jule::Ptr<_1b0612672_Data> _1b053e604_buildAsComptimeMethodData(jule::Ptr<_1b050b802_FnIns>*);
inline jule::Ptr<_1b056a487_ImportInfo> _1b053e912_findComptimePackage(jule::Ptr<_1b058b4db_Sema>*);
inline jule::Ptr<_1b0612672_Data> _1b053ec86_buildComptimeTypeInfoData(jule::Ptr<_1b058b4db_Sema>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Ptr<_1b0612672_Data> _1b053eeb7_buildComptimeValue(jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b0542e87_matchConstraint(jule::Str*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b0543295_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1b055134c_scopeChecker> _1b0545d25_newScopeCheckerBase(jule::Ptr<_1b058b4db_Sema>*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Ptr<_1b055134c_scopeChecker> _1b05461dd_newScopeChecker(jule::Ptr<_1b058b4db_Sema>*, jule::Ptr<_1b050b802_FnIns>);
inline jule::Ptr<_1b054eda6_scopeLabel> _1b0546562_findLabelParent(jule::Str*, jule::Ptr<_1b055134c_scopeChecker>);
inline jule::Bool _1b054692a_modelIsGotoScope(jule::Any, jule::Ptr<_1b0549048_Scope>*);
inline jule::Bool _1b0546c9e_stmtIsGotoScope(jule::Any*, jule::Ptr<_1b0549048_Scope>*);
inline jule::I64 _1b0547123_countMatchType(jule::Ptr<_1b054d17e_Match>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Slice<jule::Ptr<_1b0612672_Data>> _1b05473dc_getDatasFromTupleData(jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b0547ca0_checkMut(jule::Ptr<_1b058b4db_Sema>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b0548289_checkAssign(jule::Ptr<_1b058b4db_Sema>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b0548553_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1b054881c_isValidStForNextSt(jule::Any*);
inline jule::Bool _1b0548ad6_stmtIsDef(jule::Any*);
inline jule::U64 _1b0563161_removeEqFromOp(jule::U64);
inline jule::Ptr<_1b05ae1bd_Var> _1b056796d_findVarInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0567de1_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b04e2871_Struct> _1b0568320_findStructInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b05088ed_Fn> _1b05687c6_findFnInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Ptr<_1b051bb97_Trait> _1b0568b17_findTraitInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1b051e392_Enum> _1b0568e8b_findEnumInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*);
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0569310_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*);
inline jule::Any _1b056984e_defByIdentPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1b0570888_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1b0588b7b_isValidModelForRef(jule::Any*);
inline _1aa3c3a21_Log _1b05891a9_compilerErr(jule::Ptr<_1aa49b1d1_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1b058952d_impIsLookupable(jule::Ptr<_1b056a487_ImportInfo>*, jule::Str*);
inline void _1b05897d6_appendRetVars(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b0589ac2_appendParamVars(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>*, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b0589dad_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Ptr<_1b060c44c_SymbolTable> _1b058a232_findFile(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>*, jule::Ptr<_1aa4a199a_File>*);
inline void _1b058a6d8_pushSuggestion(_1aa3c3a21_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1b05ac4a7_pushImplemented(jule::Ptr<_1b051bb97_Trait>, jule::Ptr<_1b04e2871_Struct>*);
inline void _1b05ac793_pushImplements(jule::Ptr<_1b04e2871_Struct>*, jule::Ptr<_1b051bb97_Trait>);
inline jule::Bool _1b05e805e_traitHasReferenceReceiver(jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b05e83e4_floatAssignable(jule::Str*, jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b05e8768_sigAssignable(jule::Str, jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b05e8b31_unsigAssignable(jule::Str, jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b05e8ea5_intAssignable(jule::Str, jule::Ptr<_1b0612672_Data>*);
inline void _1b0605665_checkMutRiskOfStructLit(jule::Ptr<_1b058b4db_Sema>*, jule::Ptr<_1b04eacca_StructLitExprModel>*);
inline jule::Ptr<_1b06477a6_TypeKind> _1b060b209_lenKind(void);
inline jule::Bool _1b060b55b_isGoodValueToInfer(jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b04884b5_Directive> _1b0640ea8_findDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Str);
inline jule::Any _1b0641371_findBuiltinsImport(jule::Str*, jule::Ptr<_1b056a487_ImportInfo>);
inline void _1b06415a2_fitBitsize(jule::Ptr<_1b0612672_Data>*);
inline void _1b06418d2_makeStructLitAlloc(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b04eacca_StructLitExprModel>*);
inline jule::Ptr<_1b05ae1bd_Var> _1b0641c56_buildErrorVar(jule::Ptr<_1b0549048_Scope>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Any _1b06420ca_findBuiltinsSema(jule::Str*, jule::Ptr<_1b058b4db_Sema>);
inline jule::Bool _1b0642394_isOkForShifting(jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b064276d_isInstancedStruct(jule::Ptr<_1b04e5951_StructIns>);
inline jule::Bool _1b0642ae2_isPtrArithmeticCompatible(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline void _1b0642dcd_applyCastKindModel(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b06431b9_applyCastKind(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Ptr<_1b0612672_Data> _1b06433c8_buildVoidData(void);
inline jule::Str _1b0643692_checkDataForIntegerIndexing(jule::Ptr<_1b0612672_Data>*);
inline void _1b064397d_applyCastModelByEnum(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b051e392_Enum>);
inline void _1b0643c69_castConstByType(jule::Str*, jule::Ptr<_1b0612672_Data>*);
inline void _1b064420e_updateModelToGenericIns(jule::Any*, jule::Ptr<_1b050b802_FnIns>*);
inline jule::Bool _1b0644583_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1b04c25a9_SubIdentTypeDecl>*);
inline jule::Str _1b064484c_constoa(jule::Ptr<_1ad37cdb2_Const>*);
inline jule::Ptr<_1b0612672_Data> _1b0644bc1_evalEnumStatic(jule::Ptr<_1b051e392_Enum>*, jule::Ptr<_1b051d825_EnumItem>*);
inline jule::Ptr<_1b04eacca_StructLitExprModel> _1b0644e8a_isLitBased(jule::Any*);
inline jule::Bool _1b06632a5_kindUsesGenerics(jule::Ptr<_1b06477a6_TypeKind>*, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>*);
inline jule::Bool _1b066366d_hasDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Str);
inline jule::Bool _1b0663937_canGetPtr(jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b0663c78_isValidForSptrType(jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b0664042_isValidForRef(jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Bool _1b066430b_isBuiltinStrConvertable(jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Str _1b06645c5_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b0650627_Prim> _1b066496b_buildPrimType(jule::Str);
inline jule::Ptr<_1b04e2871_Struct> _1b0664c35_getStructFromKind(jule::Ptr<_1b06477a6_TypeKind>);
inline void _1b0665021_applyImplicitCast(jule::Ptr<_1b06477a6_TypeKind>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b06652da_validTypeForXof(jule::Ptr<_1b06477a6_TypeKind>*);
inline __jule_tuple_x_1b060c44c_SymbolTable__jule_tuple_s_1aa3c3a21_Log _1b0668376_buildSymbols(jule::Ptr<_1b0487184_Ast>*, jule::Trait<_1b0567572_Importer>*, jule::Ptr<_1b0515a81_symbolBuilder>);
inline __jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log _1b06687e9_analyzePackage(jule::Slice<jule::Ptr<_1b0487184_Ast>>*, jule::Trait<_1b0567572_Importer>*, jule::I64*);
inline __jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log _1b0668c28_AnalyzePackage(jule::Slice<jule::Ptr<_1b0487184_Ast>>, jule::Trait<_1b0567572_Importer>, jule::I64);
inline jule::Ptr<_1b050b802_FnIns> _1b072cea7_findBuiltinFunc(jule::Str*);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b072d2b5_primTypeAlias(jule::Ptr<_1b06477a6_TypeKind>*);
inline jule::Ptr<_1b05ae1bd_Var> _1b0731dbd_findBuiltinVar(jule::Str*);
inline jule::Ptr<_1b06469b4_TypeAlias> _1b07320ee_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1b07323b8_findBuiltinDef(jule::Str*);
inline jule::Any _1b0732682_findBuiltinDefStdDebug(jule::Str*);
inline jule::Any _1b073294b_findBuiltinDefStdMem(jule::Str*);
inline jule::Any _1b0732ce2_findBuiltinDefStdComptime(jule::Str*);
inline jule::Any _1b07330ab_findBuiltinDefStdJuleIntegrated(jule::Str*);
inline jule::Any _1b0733430_findPackageBuiltinDef(jule::Str*, jule::Str*);
inline jule::Ptr<_1b0612672_Data> _1b073385e_builtinCallerCommonPlain(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0733c8d_builtinCallerCommon(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b07341bc_builtinCallerCommonMut(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0734541_builtinCallerError(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*);
inline jule::Ptr<_1b0612672_Data> _1b0734970_builtinCallerOut(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0735058_builtinCallerOutln(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0735487_builtinCallerNew(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b07358b6_builtinCallerPanic(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0735ce5_builtinCallerMake(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0736224_builtinCallerAppend(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073670d_callerCopySlice(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0736b3c_builtinCallerCopy(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0736eb1_callerLenSlice(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0737335_callerLenMap(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b07376a9_callerLenArr(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0737a2d_callerLenStr(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0737da2_callerLenComptime(jule::Ptr<_1b0612672_Data>*, jule::I64);
inline jule::Ptr<_1b0612672_Data> _1b07382d1_builtinCallerLen(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0738655_callerCapSlice(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0738a84_builtinCallerCap(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073906d_callerDeleteMap(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0739645_builtinCallerDelete(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0739a0d_builtinCallerClone(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b0739e3c_builtinCallerAssert(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073a36b_builtinCallerStdComptimeTypeOf(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073a79a_builtinCallerStdComptimeValueOf(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>);
inline jule::Ptr<_1b0612672_Data> _1b073ae93_builtinCallerStdComptimeRange(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073b3c2_builtinCallerStdComptimeLine(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073b801_builtinCallerStdComptimeFile(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073bc30_builtinCallerStdComptimeFiles(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073c15e_builtinCallerStdMemSizeOf(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073c58d_builtinCallerStdMemAlignOf(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073c9bc_builtinCallerStdMemFree(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073cdeb_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073d32a_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073d759_builtinCallerStdDebugOut(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b0612672_Data> _1b073db88_builtinCallerStdDebugOutln(jule::Ptr<_1b0614366_Eval>*, jule::Ptr<_1b04c9cdc_FnCallExpr>*, jule::Ptr<_1b0612672_Data>*);
inline jule::Ptr<_1b116c594_FileInfo> _1b11b1d36_ParseFile(jule::Ptr<_1aa4a199a_File>);
inline __jule_tuple_x_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log _1b11b240d_parseFileset(jule::Ptr<_1aa4a199a_File>);
inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11b2d8c_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1b11b3211_isSt(jule::Ptr<_1aa49b1d1_Token>, jule::Ptr<_1aa49b1d1_Token>);
inline jule::Bool _1b11b3585_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1b11b394d_nextStPos(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::I64);
inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool _1b11b3cc2_skipSt(jule::I64*, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Slice<jule::Ptr<_1b11b4102_stmt>> _1b11b44a9_splitStmts(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Bool _1b11cc78b_isTypeOp(jule::U64*);
inline jule::Bool _1b11cca99_isTypeRange(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _1b11ccd63_getBlockExpr(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token _1b11cd22b_splitDelim(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::U64);
inline jule::I64 _1b11cd4e5_findLowestPrecOp(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c7911_IdentExpr> _1b11cd7ae_buildIdentExpr(jule::Ptr<_1aa49b1d1_Token>*);
inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_int _1b11cda78_getRangeExprTokens(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Bool _1b11ce87b_checkAssignTokens(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline _1aa3c3a21_Log _1b11d0a58_makeErr(jule::I64, jule::I64, jule::Ptr<_1aa4a199a_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _1b11d1053_range(jule::I64*, jule::U64, jule::U64, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token _1b11d131c_rangeLast(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline __jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log _1b11d17c3_parts(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*, jule::U64, jule::Bool);
inline jule::U64 _1b11d1a8c_getCloseOfBrace(jule::U64);
inline _1aa3c3a21_Log _1b11d1ebb_compilerErr(jule::Ptr<_1aa49b1d1_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1b11d2362_pushSuggestion(_1aa3c3a21_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1b11d2708_tokstoa(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>*);
inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e4231_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1b082dbbd_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1b082dd11_checkArch(jule::Str);
inline jule::Bool _1b08488b9_isPassFileAnnotation(jule::Str);
inline void _1b0849a41_setOsVars(jule::Slice<jule::Str>*);
inline void _1b0849cb6_setArchVars(jule::Slice<jule::Str>*);
inline void _1b084a0a2_initVars(jule::Slice<jule::Str>*, _1b0849722_CompileInfo*);
inline jule::Slice<jule::U8> _1b11e8356_readBuff(jule::Str);
inline _1aa3c3a21_Log _1b11e8631_flatCompilerErr(jule::Str);
inline void _1b11ece4e_pushPasses(jule::Ptr<_1b056d3ad_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1b11ed317_getAllUniquePasses(jule::Ptr<_1b056d3ad_Package>*, jule::Slice<jule::Ptr<_1b056a487_ImportInfo>>);
inline _1b0849722_CompileInfo _1b11ed526_buildCompileInfo(void);
inline void _1b138e431_EliminateDefines(jule::Ptr<_1b11eb5ce_IR>*);
inline jule::Ptr<_1b04884b5_Directive> _1b138e7e9_findDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Str);
inline jule::Bool _1b138eb6d_hasDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Str);
inline jule::Bool _1b1390036_isTraitMethod(jule::Ptr<_1b04e5951_StructIns>*, jule::Ptr<_1b050b802_FnIns>*);
inline void _1b139403a_eliminateDeadCodeOfScope(jule::Ptr<_1b0549048_Scope>);
inline void _1b13942b0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b05088ed_Fn>>*);
inline void _1b13944e1_eliminateFunctionsScopePackage(jule::Ptr<_1b056d3ad_Package>*);
inline void _1b1394799_eliminateScopePackage(jule::Ptr<_1b056d3ad_Package>*);
inline void _1b13949ca_EliminateScopes(jule::Ptr<_1b11eb5ce_IR>*);
inline jule::Bool _1b074560c_isStdPackage(jule::Str*, jule::Str);
inline jule::Bool _1b074591a_isConstantValidConditionalCase(jule::Ptr<_1b0549466_If>*);
inline jule::Bool _1b0745bd4_isUnreachableExpr(jule::Any*);
inline jule::Bool _1b0746025_isConstantValidMatchCase(jule::Ptr<_1b054dcb7_Case>*);
inline jule::Bool _1b07462de_isUnreachableConditionalCase(jule::Ptr<_1b0549466_If>*);
inline jule::Bool _1b07465a8_isUnreachableMatchCase(jule::Ptr<_1b054dcb7_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1b074ec54_checkForBitShiftOpt(jule::Ptr<_1b04e9a32_OperandExprModel>*, jule::Ptr<_1b04e9a32_OperandExprModel>*);
inline jule::Bool _1b075011c_areSameLvalueExprModel(jule::Any*, jule::Any*);
inline void _1b075089d_doInternalNosafeStobs(_1b0747444_exprOptimizer*, _1b1200935_stdCacheData*, jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline void _1b12010c8_buildCache(jule::Ptr<_1b11eb5ce_IR>*);
inline void _1b120131a_buildStdInternalNosafeCache(jule::Ptr<_1b11eb5ce_IR>*);
inline void _1b12016b1_pushCache(jule::Ptr<_1b056d3ad_Package>*, jule::Str, jule::Fn<void(_1b0747444_exprOptimizer*,_1b1200935_stdCacheData*,jule::Ptr<_1b04ec00c_FnCallExprModel>*)>);
inline jule::Ptr<_1b050b802_FnIns> _1b1201a79_getFunc(jule::Ptr<_1b056d3ad_Package>*, jule::Str*);
inline jule::Ptr<_1b056d3ad_Package> _1b1201ded_getPackage(jule::Ptr<_1b11eb5ce_IR>*, jule::Str*);
inline void _1b1204560_PushOptLevel(jule::I64);
inline void _1b139e84d_detectEnabled(void);
inline void _1b13c8734_Throw(jule::Str);
inline jule::U64 _1b0ee35a2_unix(void);
inline jule::Bool _1b1c6b192_isCopyOptimizable(jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b1c6b55a_isIterCopyOptimizable(jule::Ptr<_1b0612672_Data>*, jule::Ptr<_1b05ae1bd_Var>*);
inline jule::Str _1b1c7be0b_decomposeCommonEsq(jule::U8);
inline jule::Str _1b1c7c219_sbtoa(jule::U8);
inline void _1b1c7c505_cstrBytes(_1aa364275_StrBuilder*, jule::Str);
inline void _1b1c7c835_cstrLit(_1aa364275_StrBuilder*, jule::Str);
inline void _1b1c7cbcb_ftoa(_1aa364275_StrBuilder*, jule::F64, jule::I64);
inline void _1b1c7ceb7_itoa(_1aa364275_StrBuilder*, jule::I64);
inline void _1b1c7d2a3_utoa(_1aa364275_StrBuilder*, jule::U64);
inline jule::Bool _1b1c7d67c_isForwarded(jule::Ptr<_1b0549048_Scope>*);
inline jule::Bool _1b1c7d946_isBuiltinCallHasDebuginf(jule::Ptr<_1b04ec00c_FnCallExprModel>*);
inline jule::Bool _1b1c7dc10_isExprComesFromBind(jule::Ptr<_1b0612672_Data>*);
inline jule::Bool _1b1c7dec9_isAny(jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1b10080ab_iterFiles(jule::Ptr<_1b056d3ad_Package>*, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>);
inline jule::Str _1b10083b9_concatAllParts(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>);
inline jule::Bool _1b100873d_containsTraitMethod(jule::Ptr<_1b051bb97_Trait>*, jule::Str*);
inline void _1b1008a6d_pushMethodsFromInherit(jule::Ptr<_1b051bb97_Trait>*, jule::Ptr<_1b051bb97_Trait>*);
inline void _1b1008d59_pushMethodsFromInherits(jule::Ptr<_1b051bb97_Trait>*, jule::Ptr<_1b051bb97_Trait>*);
inline jule::Bool _1b1009123_isOpMethod(jule::Ptr<_1b05088ed_Fn>*);
inline jule::Bool _1b10093dc_isHeadDecl(jule::Ptr<_1b05088ed_Fn>*);
inline jule::Ptr<_1b04884b5_Directive> _1b1018055_findDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Str);
inline jule::Bool _1b101841d_hasDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>*, jule::Str);
inline jule::Bool _1b10186d7_shouldInitialized(jule::Ptr<_1b06477a6_TypeKind>*);
inline void _1aa6445dd_printErrorMessage(jule::Str);
inline void _1aa644863_help(jule::Slice<jule::Str>*);
inline void _1aa644a94_version(jule::Slice<jule::Str>*);
inline void _1aa644c92_toolDistos(void);
inline void _1aa644e18_toolDistarch(void);
inline void _1aa645149_tool(jule::Slice<jule::Str>*);
inline void _1aa64537a_julenv(jule::Slice<jule::Str>*);
inline void _1aa645688_mod(jule::Slice<jule::Str>*);
inline jule::Bool _1aa645952_processCommand(jule::Slice<jule::Str>*);
inline void _1aa645ac8_showInfo(void);
void entry_point(void);
inline void _1b1086403_init(void);
inline jule::Ptr<_1ba10bd87_File> _1b10866cd_openOutput(jule::Str*);
inline void _1b1086854_clearObjects(void);
inline void _1b1086b84_compileIr(jule::Str, jule::Str);
inline jule::Bool _1b1086e4d_isCppSourceFile(jule::Str);
inline void _1b108717e_pushCompCmdClang(_1aa364275_StrBuilder*);
inline void _1b10873b0_pushCompCmdGcc(_1aa364275_StrBuilder*);
inline __jule_tuple_str__jule_tuple_str _1b1087844_genCompileCmd(jule::Str, jule::Ptr<_1b11eb5ce_IR>*);
inline jule::Str _1b1087a53_getCompilePath(void);
inline void _1b1087c84_applyTargetIndependentOptimizations(jule::Ptr<_1b11eb5ce_IR>*);
inline void _1b1087e0a_checkCompilerFlag(void);
inline void _1b108813b_checkTargetArch(jule::Str);
inline void _1b108836c_checkTargetOs(jule::Str);
inline void _1b108859d_checkTargetFlag(jule::Str*);
inline void _1b10887ce_checkOptFlag(jule::Str*);
inline void _1b1088b64_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b1088dc8_checkFlags(jule::Slice<jule::Str>*);
inline void _1b1089109_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1b11eb5ce_IR> _1b10893c3_buildIr(jule::Slice<jule::Str>*);
inline void _1b1089604_compileCommand(jule::Slice<jule::Str>*);


struct _1b0522c58_comptimeRangeKindMptrData {
	void(*_1b0522450_ready)(jule::Trait<_1b0522c58_comptimeRangeKind>, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
	void(*_1b052286d_step)(jule::Trait<_1b0522c58_comptimeRangeKind>, jule::I64, jule::Ptr<_1b05ae1bd_Var>*, jule::Ptr<_1b05ae1bd_Var>*);
	jule::I64(*_1b0522b04_len)(jule::Trait<_1b0522c58_comptimeRangeKind>);
};

struct _1b0567572_ImporterMptrData {
	void(*_1b0566351_SetModPath)(jule::Trait<_1b0567572_Importer>, jule::Str);
	jule::Str(*_1b05665d7_GetModPath)(jule::Trait<_1b0567572_Importer>);
	jule::Str(*_1b0566928_ModById)(jule::Trait<_1b0567572_Importer>, jule::I64);
	jule::Ptr<_1b056a487_ImportInfo>(*_1b0566c69_GetImport)(jule::Trait<_1b0567572_Importer>, jule::Str);
	__jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log(*_1b0567165_ImportPackage)(jule::Trait<_1b0567572_Importer>, jule::Str, jule::Bool);
	void(*_1b056741d_Imported)(jule::Trait<_1b0567572_Importer>, jule::Ptr<_1b056a487_ImportInfo>);
};

struct _1b0647300_KindMptrData {
	jule::Str(*_1b0646d5a_Str)(jule::Trait<_1b0647300_Kind>);
	jule::Bool(*_1b064719b_Equal)(jule::Trait<_1b0647300_Kind>, jule::Ptr<_1b06477a6_TypeKind>);
};

struct _1b0667584_LookupMptrData {
	jule::Ptr<_1b056a487_ImportInfo>(*_1b066586d_SelectPackage)(jule::Trait<_1b0667584_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>);
	jule::Ptr<_1b05ae1bd_Var>(*_1b0665c69_FindVar)(jule::Trait<_1b0667584_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b06469b4_TypeAlias>(*_1b0666165_FindTypeAlias)(jule::Trait<_1b0667584_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b04e2871_Struct>(*_1b0666561_FindStruct)(jule::Trait<_1b0667584_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b05088ed_Fn>(*_1b066695c_FindFn)(jule::Trait<_1b0667584_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1b051bb97_Trait>(*_1b0666c9d_FindTrait)(jule::Trait<_1b0667584_Lookup>, jule::Str);
	jule::Ptr<_1b051e392_Enum>(*_1b06670de_FindEnum)(jule::Trait<_1b0667584_Lookup>, jule::Str);
	jule::Ptr<_1b0520a9c_TypeEnum>(*_1b0667430_FindTypeEnum)(jule::Trait<_1b0667584_Lookup>, jule::Str);
};

struct _1b107e0ee_CommonFlagMptrData {
	jule::Str(*_1b104ca5c_Name)(jule::Trait<_1b107e0ee_CommonFlag>);
	jule::I32(*_1b104cc05_Short)(jule::Trait<_1b107e0ee_CommonFlag>);
	jule::Str(*_1b107dd68_What)(jule::Trait<_1b107e0ee_CommonFlag>);
	void(*_1b107deab_Reset)(jule::Trait<_1b107e0ee_CommonFlag>);
};



inline void _1b0522450_ready_comptimeRangeKind_0(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::Ptr<_1b05ae1bd_Var>* _1329_keyA, jule::Ptr<_1b05ae1bd_Var>* _1346_keyB) {
	_1b052629a_ready(_self_.safe_ptr<_1b0525651_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1b052286d_step_comptimeRangeKind_0(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1b05ae1bd_Var>* _1436_keyA, jule::Ptr<_1b05ae1bd_Var>* _1453_keyB) {
	_1b05266b8_step(_self_.safe_ptr<_1b0525651_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1b0522b04_len_comptimeRangeKind_0(jule::Trait<_1b0522c58_comptimeRangeKind> _self_) {
	return _1b052694e_len(_self_.safe_ptr<_1b0525651_comptimeStructFields>());
}
inline void _1b0522450_ready_comptimeRangeKind_1(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::Ptr<_1b05ae1bd_Var>* _1329_keyA, jule::Ptr<_1b05ae1bd_Var>* _1346_keyB) {
	_1b0529556_ready(_self_.safe_ptr<_1b052891d_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1b052286d_step_comptimeRangeKind_1(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1b05ae1bd_Var>* _1436_keyA, jule::Ptr<_1b05ae1bd_Var>* _1453_keyB) {
	_1b0529974_step(_self_.safe_ptr<_1b052891d_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1b0522b04_len_comptimeRangeKind_1(jule::Trait<_1b0522c58_comptimeRangeKind> _self_) {
	return _1b0529c0a_len(_self_.safe_ptr<_1b052891d_comptimeStatics>());
}
inline void _1b0522450_ready_comptimeRangeKind_2(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::Ptr<_1b05ae1bd_Var>* _1329_keyA, jule::Ptr<_1b05ae1bd_Var>* _1346_keyB) {
	_1b052bee8_ready(_self_.safe_ptr<_1b052b327_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1b052286d_step_comptimeRangeKind_2(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1b05ae1bd_Var>* _1436_keyA, jule::Ptr<_1b05ae1bd_Var>* _1453_keyB) {
	_1b052c416_step(_self_.safe_ptr<_1b052b327_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1b0522b04_len_comptimeRangeKind_2(jule::Trait<_1b0522c58_comptimeRangeKind> _self_) {
	return _1b052c69c_len(_self_.safe_ptr<_1b052b327_comptimeEnumFields>());
}
inline void _1b0522450_ready_comptimeRangeKind_3(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::Ptr<_1b05ae1bd_Var>* _1329_keyA, jule::Ptr<_1b05ae1bd_Var>* _1346_keyB) {
	_1b0530859_ready(_self_.safe_ptr<_1b052ec21_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1b052286d_step_comptimeRangeKind_3(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1b05ae1bd_Var>* _1436_keyA, jule::Ptr<_1b05ae1bd_Var>* _1453_keyB) {
	_1b0530c77_step(_self_.safe_ptr<_1b052ec21_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1b0522b04_len_comptimeRangeKind_3(jule::Trait<_1b0522c58_comptimeRangeKind> _self_) {
	return _1b053100d_len(_self_.safe_ptr<_1b052ec21_comptimeParams>());
}
inline void _1b0522450_ready_comptimeRangeKind_4(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::Ptr<_1b05ae1bd_Var>* _1329_keyA, jule::Ptr<_1b05ae1bd_Var>* _1346_keyB) {
	_1b0531e54_ready(_self_.safe_ptr<_1b053131b_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1b052286d_step_comptimeRangeKind_4(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1b05ae1bd_Var>* _1436_keyA, jule::Ptr<_1b05ae1bd_Var>* _1453_keyB) {
	_1b0532372_step(_self_.safe_ptr<_1b053131b_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1b0522b04_len_comptimeRangeKind_4(jule::Trait<_1b0522c58_comptimeRangeKind> _self_) {
	return _1b0532608_len(_self_.safe_ptr<_1b053131b_comptimeTypeInfos>());
}
inline void _1b0522450_ready_comptimeRangeKind_5(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::Ptr<_1b05ae1bd_Var>* _1329_keyA, jule::Ptr<_1b05ae1bd_Var>* _1346_keyB) {
	_1b053bea3_ready(_self_.safe_ptr<_1b053b36a_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1b052286d_step_comptimeRangeKind_5(jule::Trait<_1b0522c58_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1b05ae1bd_Var>* _1436_keyA, jule::Ptr<_1b05ae1bd_Var>* _1453_keyB) {
	_1b053c3c1_step(_self_.safe_ptr<_1b053b36a_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1b0522b04_len_comptimeRangeKind_5(jule::Trait<_1b0522c58_comptimeRangeKind> _self_) {
	return _1b053c657_len(_self_.safe_ptr<_1b053b36a_comptimeFiles>());
}
inline void _1b0566351_SetModPath_Importer_0(jule::Trait<_1b0567572_Importer> _self_, jule::Str _1729_path) {
	_1b11e96dc_SetModPath(_self_.safe_ptr<_1b11e8b1a_JuleImporter>(), _1729_path);
}
inline jule::Str _1b05665d7_GetModPath_Importer_0(jule::Trait<_1b0567572_Importer> _self_) {
	return _1b11e9973_GetModPath(_self_.safe_ptr<_1b11e8b1a_JuleImporter>());
}
inline jule::Str _1b0566928_ModById_Importer_0(jule::Trait<_1b0567572_Importer> _self_, jule::I64 _2522_id) {
	return _1b11e9cb4_ModById(_self_.safe_ptr<_1b11e8b1a_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1b056a487_ImportInfo> _1b0566c69_GetImport_Importer_0(jule::Trait<_1b0567572_Importer> _self_, jule::Str _3128_path) {
	return _1b11ea105_GetImport(_self_.safe_ptr<_1b11e8b1a_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log _1b0567165_ImportPackage_Importer_0(jule::Trait<_1b0567572_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1b11ea501_ImportPackage(_self_.safe_ptr<_1b11e8b1a_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1b056741d_Imported_Importer_0(jule::Trait<_1b0567572_Importer> _self_, jule::Ptr<_1b056a487_ImportInfo> _4131__0) {
	_1b11ea7a9_Imported(_self_.safe_ptr<_1b11e8b1a_JuleImporter>(), _4131__0);
}
inline jule::Str _1b0646d5a_Str_Kind_0(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b04e5cc5_Str(_self_.safe_ptr<_1b04e5951_StructIns>());
}
inline jule::Bool _1b064719b_Equal_Kind_0(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b04e6116_Equal(_self_.data.as<_1b04e5951_StructIns>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_1(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b050bb43_Str(_self_.safe_ptr<_1b050b802_FnIns>());
}
inline jule::Bool _1b064719b_Equal_Kind_1(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b050be84_Equal(_self_.data.as<_1b050b802_FnIns>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_2(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b051c060_Str(_self_.safe_ptr<_1b051bb97_Trait>());
}
inline jule::Bool _1b064719b_Equal_Kind_2(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b051c3a1_Equal(_self_.data.as<_1b051bb97_Trait>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_3(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b051e716_Str(_self_.safe_ptr<_1b051e392_Enum>());
}
inline jule::Bool _1b064719b_Equal_Kind_3(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b051ea57_Equal(_self_.data.as<_1b051e392_Enum>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_4(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0520ddd_Str(_self_.safe_ptr<_1b0520a9c_TypeEnum>());
}
inline jule::Bool _1b064719b_Equal_Kind_4(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b052122e_Equal(_self_.data.as<_1b0520a9c_TypeEnum>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_5(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b052330d_Str(_self_.safe_ptr<_1b0522e45_comptimeRange>());
}
inline jule::Bool _1b064719b_Equal_Kind_5(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b052364e_Equal(_self_.data.as<_1b0522e45_comptimeRange>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_6(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0523d25_Str(_self_.safe_ptr<_1b05239a1_comptimeStructField>());
}
inline jule::Bool _1b064719b_Equal_Kind_6(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0524166_Equal(_self_.data.as<_1b05239a1_comptimeStructField>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_7(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b05259d6_Str(_self_.safe_ptr<_1b0525651_comptimeStructFields>());
}
inline jule::Bool _1b064719b_Equal_Kind_7(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0525d27_Equal(_self_.data.as<_1b0525651_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_8(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b05270d1_Str(_self_.safe_ptr<_1b0526c5c_comptimeStatic>());
}
inline jule::Bool _1b064719b_Equal_Kind_8(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0527422_Equal(_self_.data.as<_1b0526c5c_comptimeStatic>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_9(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0528c92_Str(_self_.safe_ptr<_1b052891d_comptimeStatics>());
}
inline jule::Bool _1b064719b_Equal_Kind_9(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b05290d3_Equal(_self_.data.as<_1b052891d_comptimeStatics>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_10(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b052a38c_Str(_self_.safe_ptr<_1b052a018_comptimeEnumField>());
}
inline jule::Bool _1b064719b_Equal_Kind_10(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b052a6cd_Equal(_self_.data.as<_1b052a018_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_11(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b052b7ab_Str(_self_.safe_ptr<_1b052b327_comptimeEnumFields>());
}
inline jule::Bool _1b064719b_Equal_Kind_11(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b052baec_Equal(_self_.data.as<_1b052b327_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_12(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b052cd2e_Str(_self_.safe_ptr<_1b052c9aa_comptimeParam>());
}
inline jule::Bool _1b064719b_Equal_Kind_12(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b052d170_Equal(_self_.data.as<_1b052c9aa_comptimeParam>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_13(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0530095_Str(_self_.safe_ptr<_1b052ec21_comptimeParams>());
}
inline jule::Bool _1b064719b_Equal_Kind_13(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b05303d6_Equal(_self_.data.as<_1b052ec21_comptimeParams>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_14(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0531690_Str(_self_.safe_ptr<_1b053131b_comptimeTypeInfos>());
}
inline jule::Bool _1b064719b_Equal_Kind_14(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b05319d1_Equal(_self_.data.as<_1b053131b_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_15(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0532c8a_Str(_self_.safe_ptr<_1b0532916_comptimeTypeInfo>());
}
inline jule::Bool _1b064719b_Equal_Kind_15(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b05330cb_Equal(_self_.data.as<_1b0532916_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_16(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0538d90_Str(_self_.safe_ptr<_1b0538a1b_comptimeValue>());
}
inline jule::Bool _1b064719b_Equal_Kind_16(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b05391d1_Equal(_self_.data.as<_1b0538a1b_comptimeValue>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_17(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b053b6de_Str(_self_.safe_ptr<_1b053b36a_comptimeFiles>());
}
inline jule::Bool _1b064719b_Equal_Kind_17(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b053ba30_Equal(_self_.data.as<_1b053b36a_comptimeFiles>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_18(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b053ccd9_Str(_self_.safe_ptr<_1b053c965_comptimeFile>());
}
inline jule::Bool _1b064719b_Equal_Kind_18(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b053d12a_Equal(_self_.data.as<_1b053c965_comptimeFile>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_19(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0647b6e_Str(_self_.safe_ptr<_1b06477a6_TypeKind>());
}
inline jule::Bool _1b064719b_Equal_Kind_19(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0647eb0_Equal(_self_.data.as<_1b06477a6_TypeKind>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_20(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0650968_Str(_self_.safe_ptr<_1b0650627_Prim>());
}
inline jule::Bool _1b064719b_Equal_Kind_20(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0650ca9_Equal(_self_.data.as<_1b0650627_Prim>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_21(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b06544c7_Str(_self_.safe_ptr<_1b0654153_Sptr>());
}
inline jule::Bool _1b064719b_Equal_Kind_21(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0654818_Equal(_self_.data.as<_1b0654153_Sptr>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_22(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b06550aa_Str(_self_.safe_ptr<_1b0654b26_Slc>());
}
inline jule::Bool _1b064719b_Equal_Kind_22(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b06553eb_Equal(_self_.data.as<_1b0654b26_Slc>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_23(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0655a8e_Str(_self_.safe_ptr<_1b065571a_Tuple>());
}
inline jule::Bool _1b064719b_Equal_Kind_23(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0655dd0_Equal(_self_.data.as<_1b065571a_Tuple>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_24(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b065663e_Str(_self_.safe_ptr<_1b06562ba_Map>());
}
inline jule::Bool _1b064719b_Equal_Kind_24(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b0656980_Equal(_self_.data.as<_1b06562ba_Map>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_25(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b06572bb_Str(_self_.safe_ptr<_1b0656e47_Arr>());
}
inline jule::Bool _1b064719b_Equal_Kind_25(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b065760c_Equal(_self_.data.as<_1b0656e47_Arr>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_26(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b0657c8e_Str(_self_.safe_ptr<_1b065791a_Ptr>());
}
inline jule::Bool _1b064719b_Equal_Kind_26(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b06580d0_Equal(_self_.data.as<_1b065791a_Ptr>(), _5621_other);
}
inline jule::Str _1b0646d5a_Str_Kind_27(jule::Trait<_1b0647300_Kind> _self_) {
	return _1b100a70c_Str(_self_.safe_ptr<_1b100a388_customType>());
}
inline jule::Bool _1b064719b_Equal_Kind_27(jule::Trait<_1b0647300_Kind> _self_, jule::Ptr<_1b06477a6_TypeKind> _5621_other) {
	return _1b100aa4d_Equal(_self_.data.as<_1b100a388_customType>(), _5621_other);
}
inline jule::Ptr<_1b056a487_ImportInfo> _1b066586d_SelectPackage_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _932_selector) {
	return _1b05517e2_SelectPackage(_self_.safe_ptr<_1b055134c_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1b05ae1bd_Var> _1b0665c69_FindVar_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b0551bdd_FindVar(_self_.safe_ptr<_1b055134c_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0666165_FindTypeAlias_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b05520d9_FindTypeAlias(_self_.safe_ptr<_1b055134c_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b04e2871_Struct> _1b0666561_FindStruct_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b05524d5_FindStruct(_self_.safe_ptr<_1b055134c_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b05088ed_Fn> _1b066695c_FindFn_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b05528d1_FindFn(_self_.safe_ptr<_1b055134c_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b051bb97_Trait> _1b0666c9d_FindTrait_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2928_ident) {
	return _1b0552c22_FindTrait(_self_.safe_ptr<_1b055134c_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1b051e392_Enum> _1b06670de_FindEnum_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3327_ident) {
	return _1b0553063_FindEnum(_self_.safe_ptr<_1b055134c_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0667430_FindTypeEnum_Lookup_0(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3731_ident) {
	return _1b05533a4_FindTypeEnum(_self_.safe_ptr<_1b055134c_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1b056a487_ImportInfo> _1b066586d_SelectPackage_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _932_selector) {
	return _1b056a971_SelectPackage(_self_.safe_ptr<_1b056a487_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1b05ae1bd_Var> _1b0665c69_FindVar_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b056ad6c_FindVar(_self_.safe_ptr<_1b056a487_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0666165_FindTypeAlias_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b056b268_FindTypeAlias(_self_.safe_ptr<_1b056a487_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b04e2871_Struct> _1b0666561_FindStruct_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b056b664_FindStruct(_self_.safe_ptr<_1b056a487_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b05088ed_Fn> _1b066695c_FindFn_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b056ba60_FindFn(_self_.safe_ptr<_1b056a487_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b051bb97_Trait> _1b0666c9d_FindTrait_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2928_ident) {
	return _1b056bda1_FindTrait(_self_.safe_ptr<_1b056a487_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1b051e392_Enum> _1b06670de_FindEnum_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3327_ident) {
	return _1b056c1e2_FindEnum(_self_.safe_ptr<_1b056a487_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0667430_FindTypeEnum_Lookup_1(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3731_ident) {
	return _1b056c533_FindTypeEnum(_self_.safe_ptr<_1b056a487_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1b056a487_ImportInfo> _1b066586d_SelectPackage_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _932_selector) {
	return _1b056d853_SelectPackage(_self_.safe_ptr<_1b056d3ad_Package>(), _932_selector);
}
inline jule::Ptr<_1b05ae1bd_Var> _1b0665c69_FindVar_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b056dc4e_FindVar(_self_.safe_ptr<_1b056d3ad_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0666165_FindTypeAlias_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b056e14a_FindTypeAlias(_self_.safe_ptr<_1b056d3ad_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b04e2871_Struct> _1b0666561_FindStruct_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b056e546_FindStruct(_self_.safe_ptr<_1b056d3ad_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b05088ed_Fn> _1b066695c_FindFn_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b056e942_FindFn(_self_.safe_ptr<_1b056d3ad_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b051bb97_Trait> _1b0666c9d_FindTrait_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2928_ident) {
	return _1b056ec83_FindTrait(_self_.safe_ptr<_1b056d3ad_Package>(), _2928_ident);
}
inline jule::Ptr<_1b051e392_Enum> _1b06670de_FindEnum_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3327_ident) {
	return _1b05700c4_FindEnum(_self_.safe_ptr<_1b056d3ad_Package>(), _3327_ident);
}
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0667430_FindTypeEnum_Lookup_2(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3731_ident) {
	return _1b0570415_FindTypeEnum(_self_.safe_ptr<_1b056d3ad_Package>(), _3731_ident);
}
inline jule::Ptr<_1b056a487_ImportInfo> _1b066586d_SelectPackage_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _932_selector) {
	return _1b058b981_SelectPackage(_self_.safe_ptr<_1b058b4db_Sema>(), _932_selector);
}
inline jule::Ptr<_1b05ae1bd_Var> _1b0665c69_FindVar_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b058bd7c_FindVar(_self_.safe_ptr<_1b058b4db_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0666165_FindTypeAlias_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b058c278_FindTypeAlias(_self_.safe_ptr<_1b058b4db_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b04e2871_Struct> _1b0666561_FindStruct_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b058c674_FindStruct(_self_.safe_ptr<_1b058b4db_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b05088ed_Fn> _1b066695c_FindFn_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b058ca70_FindFn(_self_.safe_ptr<_1b058b4db_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b051bb97_Trait> _1b0666c9d_FindTrait_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2928_ident) {
	return _1b058cdb1_FindTrait(_self_.safe_ptr<_1b058b4db_Sema>(), _2928_ident);
}
inline jule::Ptr<_1b051e392_Enum> _1b06670de_FindEnum_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3327_ident) {
	return _1b058d202_FindEnum(_self_.safe_ptr<_1b058b4db_Sema>(), _3327_ident);
}
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0667430_FindTypeEnum_Lookup_3(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3731_ident) {
	return _1b058d543_FindTypeEnum(_self_.safe_ptr<_1b058b4db_Sema>(), _3731_ident);
}
inline jule::Ptr<_1b056a487_ImportInfo> _1b066586d_SelectPackage_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _932_selector) {
	return _1b060c936_SelectPackage(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1b05ae1bd_Var> _1b0665c69_FindVar_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1b060cd32_FindVar(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1b06469b4_TypeAlias> _1b0666165_FindTypeAlias_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1b060d22d_FindTypeAlias(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1b04e2871_Struct> _1b0666561_FindStruct_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1b060d629_FindStruct(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1b05088ed_Fn> _1b066695c_FindFn_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1b060da25_FindFn(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1b051bb97_Trait> _1b0666c9d_FindTrait_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _2928_ident) {
	return _1b060dd66_FindTrait(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1b051e392_Enum> _1b06670de_FindEnum_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3327_ident) {
	return _1b060e1a7_FindEnum(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0667430_FindTypeEnum_Lookup_4(jule::Trait<_1b0667584_Lookup> _self_, jule::Str _3731_ident) {
	return _1b060e4e8_FindTypeEnum(_self_.safe_ptr<_1b060c44c_SymbolTable>(), _3731_ident);
}
inline jule::Str _1b104ca5c_Name_CommonFlag_0(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c6d23a_Name(_self_.safe_ptr<_1b4c6d3e4_Flag>());
}
inline jule::I32 _1b104cc05_Short_CommonFlag_0(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c6d966_Short(_self_.safe_ptr<_1b4c6d3e4_Flag>());
}
inline jule::Str _1b107dd68_What_CommonFlag_0(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c6d6d0_What(_self_.safe_ptr<_1b4c6d3e4_Flag>());
}
inline void _1b107deab_Reset_CommonFlag_0(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	_1b4c6d823_Reset(_self_.safe_ptr<_1b4c6d3e4_Flag>());
}
inline jule::Str _1b104ca5c_Name_CommonFlag_1(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c7188c_Name(_self_.safe_ptr<_1b4c71c55_Flag>());
}
inline jule::I32 _1b104cc05_Short_CommonFlag_1(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c72184_Short(_self_.safe_ptr<_1b4c71c55_Flag>());
}
inline jule::Str _1b107dd68_What_CommonFlag_1(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c719d0_What(_self_.safe_ptr<_1b4c71c55_Flag>());
}
inline void _1b107deab_Reset_CommonFlag_1(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	_1b4c72041_Reset(_self_.safe_ptr<_1b4c71c55_Flag>());
}
inline jule::Str _1b104ca5c_Name_CommonFlag_2(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c75088_Name(_self_.safe_ptr<_1b4c75451_Flag>());
}
inline jule::I32 _1b104cc05_Short_CommonFlag_2(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c75880_Short(_self_.safe_ptr<_1b4c75451_Flag>());
}
inline jule::Str _1b107dd68_What_CommonFlag_2(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c751cb_What(_self_.safe_ptr<_1b4c75451_Flag>());
}
inline void _1b107deab_Reset_CommonFlag_2(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	_1b4c7573c_Reset(_self_.safe_ptr<_1b4c75451_Flag>());
}
inline jule::Str _1b104ca5c_Name_CommonFlag_3(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c787c8_Name(_self_.safe_ptr<_1b4c78b91_Flag>());
}
inline jule::I32 _1b104cc05_Short_CommonFlag_3(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c790c0_Short(_self_.safe_ptr<_1b4c78b91_Flag>());
}
inline jule::Str _1b107dd68_What_CommonFlag_3(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c7891b_What(_self_.safe_ptr<_1b4c78b91_Flag>());
}
inline void _1b107deab_Reset_CommonFlag_3(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	_1b4c78e7c_Reset(_self_.safe_ptr<_1b4c78b91_Flag>());
}
inline jule::Str _1b104ca5c_Name_CommonFlag_4(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c7bec4_Name(_self_.safe_ptr<_1b4c7c38c_Flag>());
}
inline jule::I32 _1b104cc05_Short_CommonFlag_4(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c7c7bb_Short(_self_.safe_ptr<_1b4c7c38c_Flag>());
}
inline jule::Str _1b107dd68_What_CommonFlag_4(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	return _1b4c7c117_What(_self_.safe_ptr<_1b4c7c38c_Flag>());
}
inline void _1b107deab_Reset_CommonFlag_4(jule::Trait<_1b107e0ee_CommonFlag> _self_) {
	_1b4c7c678_Reset(_self_.safe_ptr<_1b4c7c38c_Flag>());
}


static _1b0522c58_comptimeRangeKindMptrData _1b0522c58_comptimeRangeKind_mptr_data[] = {
	{
		._1b0522450_ready=_1b0522450_ready_comptimeRangeKind_0,
		._1b052286d_step=_1b052286d_step_comptimeRangeKind_0,
		._1b0522b04_len=_1b0522b04_len_comptimeRangeKind_0,
	},
	{
		._1b0522450_ready=_1b0522450_ready_comptimeRangeKind_1,
		._1b052286d_step=_1b052286d_step_comptimeRangeKind_1,
		._1b0522b04_len=_1b0522b04_len_comptimeRangeKind_1,
	},
	{
		._1b0522450_ready=_1b0522450_ready_comptimeRangeKind_2,
		._1b052286d_step=_1b052286d_step_comptimeRangeKind_2,
		._1b0522b04_len=_1b0522b04_len_comptimeRangeKind_2,
	},
	{
		._1b0522450_ready=_1b0522450_ready_comptimeRangeKind_3,
		._1b052286d_step=_1b052286d_step_comptimeRangeKind_3,
		._1b0522b04_len=_1b0522b04_len_comptimeRangeKind_3,
	},
	{
		._1b0522450_ready=_1b0522450_ready_comptimeRangeKind_4,
		._1b052286d_step=_1b052286d_step_comptimeRangeKind_4,
		._1b0522b04_len=_1b0522b04_len_comptimeRangeKind_4,
	},
	{
		._1b0522450_ready=_1b0522450_ready_comptimeRangeKind_5,
		._1b052286d_step=_1b052286d_step_comptimeRangeKind_5,
		._1b0522b04_len=_1b0522b04_len_comptimeRangeKind_5,
	},
};
static _1b0567572_ImporterMptrData _1b0567572_Importer_mptr_data[] = {
	{
		._1b0566351_SetModPath=_1b0566351_SetModPath_Importer_0,
		._1b05665d7_GetModPath=_1b05665d7_GetModPath_Importer_0,
		._1b0566928_ModById=_1b0566928_ModById_Importer_0,
		._1b0566c69_GetImport=_1b0566c69_GetImport_Importer_0,
		._1b0567165_ImportPackage=_1b0567165_ImportPackage_Importer_0,
		._1b056741d_Imported=_1b056741d_Imported_Importer_0,
	},
};
static _1b0647300_KindMptrData _1b0647300_Kind_mptr_data[] = {
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_0,
		._1b064719b_Equal=_1b064719b_Equal_Kind_0,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_1,
		._1b064719b_Equal=_1b064719b_Equal_Kind_1,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_2,
		._1b064719b_Equal=_1b064719b_Equal_Kind_2,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_3,
		._1b064719b_Equal=_1b064719b_Equal_Kind_3,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_4,
		._1b064719b_Equal=_1b064719b_Equal_Kind_4,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_5,
		._1b064719b_Equal=_1b064719b_Equal_Kind_5,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_6,
		._1b064719b_Equal=_1b064719b_Equal_Kind_6,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_7,
		._1b064719b_Equal=_1b064719b_Equal_Kind_7,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_8,
		._1b064719b_Equal=_1b064719b_Equal_Kind_8,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_9,
		._1b064719b_Equal=_1b064719b_Equal_Kind_9,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_10,
		._1b064719b_Equal=_1b064719b_Equal_Kind_10,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_11,
		._1b064719b_Equal=_1b064719b_Equal_Kind_11,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_12,
		._1b064719b_Equal=_1b064719b_Equal_Kind_12,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_13,
		._1b064719b_Equal=_1b064719b_Equal_Kind_13,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_14,
		._1b064719b_Equal=_1b064719b_Equal_Kind_14,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_15,
		._1b064719b_Equal=_1b064719b_Equal_Kind_15,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_16,
		._1b064719b_Equal=_1b064719b_Equal_Kind_16,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_17,
		._1b064719b_Equal=_1b064719b_Equal_Kind_17,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_18,
		._1b064719b_Equal=_1b064719b_Equal_Kind_18,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_19,
		._1b064719b_Equal=_1b064719b_Equal_Kind_19,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_20,
		._1b064719b_Equal=_1b064719b_Equal_Kind_20,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_21,
		._1b064719b_Equal=_1b064719b_Equal_Kind_21,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_22,
		._1b064719b_Equal=_1b064719b_Equal_Kind_22,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_23,
		._1b064719b_Equal=_1b064719b_Equal_Kind_23,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_24,
		._1b064719b_Equal=_1b064719b_Equal_Kind_24,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_25,
		._1b064719b_Equal=_1b064719b_Equal_Kind_25,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_26,
		._1b064719b_Equal=_1b064719b_Equal_Kind_26,
	},
	{
		._1b0646d5a_Str=_1b0646d5a_Str_Kind_27,
		._1b064719b_Equal=_1b064719b_Equal_Kind_27,
	},
};
static _1b0667584_LookupMptrData _1b0667584_Lookup_mptr_data[] = {
	{
		._1b066586d_SelectPackage=_1b066586d_SelectPackage_Lookup_0,
		._1b0665c69_FindVar=_1b0665c69_FindVar_Lookup_0,
		._1b0666165_FindTypeAlias=_1b0666165_FindTypeAlias_Lookup_0,
		._1b0666561_FindStruct=_1b0666561_FindStruct_Lookup_0,
		._1b066695c_FindFn=_1b066695c_FindFn_Lookup_0,
		._1b0666c9d_FindTrait=_1b0666c9d_FindTrait_Lookup_0,
		._1b06670de_FindEnum=_1b06670de_FindEnum_Lookup_0,
		._1b0667430_FindTypeEnum=_1b0667430_FindTypeEnum_Lookup_0,
	},
	{
		._1b066586d_SelectPackage=_1b066586d_SelectPackage_Lookup_1,
		._1b0665c69_FindVar=_1b0665c69_FindVar_Lookup_1,
		._1b0666165_FindTypeAlias=_1b0666165_FindTypeAlias_Lookup_1,
		._1b0666561_FindStruct=_1b0666561_FindStruct_Lookup_1,
		._1b066695c_FindFn=_1b066695c_FindFn_Lookup_1,
		._1b0666c9d_FindTrait=_1b0666c9d_FindTrait_Lookup_1,
		._1b06670de_FindEnum=_1b06670de_FindEnum_Lookup_1,
		._1b0667430_FindTypeEnum=_1b0667430_FindTypeEnum_Lookup_1,
	},
	{
		._1b066586d_SelectPackage=_1b066586d_SelectPackage_Lookup_2,
		._1b0665c69_FindVar=_1b0665c69_FindVar_Lookup_2,
		._1b0666165_FindTypeAlias=_1b0666165_FindTypeAlias_Lookup_2,
		._1b0666561_FindStruct=_1b0666561_FindStruct_Lookup_2,
		._1b066695c_FindFn=_1b066695c_FindFn_Lookup_2,
		._1b0666c9d_FindTrait=_1b0666c9d_FindTrait_Lookup_2,
		._1b06670de_FindEnum=_1b06670de_FindEnum_Lookup_2,
		._1b0667430_FindTypeEnum=_1b0667430_FindTypeEnum_Lookup_2,
	},
	{
		._1b066586d_SelectPackage=_1b066586d_SelectPackage_Lookup_3,
		._1b0665c69_FindVar=_1b0665c69_FindVar_Lookup_3,
		._1b0666165_FindTypeAlias=_1b0666165_FindTypeAlias_Lookup_3,
		._1b0666561_FindStruct=_1b0666561_FindStruct_Lookup_3,
		._1b066695c_FindFn=_1b066695c_FindFn_Lookup_3,
		._1b0666c9d_FindTrait=_1b0666c9d_FindTrait_Lookup_3,
		._1b06670de_FindEnum=_1b06670de_FindEnum_Lookup_3,
		._1b0667430_FindTypeEnum=_1b0667430_FindTypeEnum_Lookup_3,
	},
	{
		._1b066586d_SelectPackage=_1b066586d_SelectPackage_Lookup_4,
		._1b0665c69_FindVar=_1b0665c69_FindVar_Lookup_4,
		._1b0666165_FindTypeAlias=_1b0666165_FindTypeAlias_Lookup_4,
		._1b0666561_FindStruct=_1b0666561_FindStruct_Lookup_4,
		._1b066695c_FindFn=_1b066695c_FindFn_Lookup_4,
		._1b0666c9d_FindTrait=_1b0666c9d_FindTrait_Lookup_4,
		._1b06670de_FindEnum=_1b06670de_FindEnum_Lookup_4,
		._1b0667430_FindTypeEnum=_1b0667430_FindTypeEnum_Lookup_4,
	},
};
static _1b107e0ee_CommonFlagMptrData _1b107e0ee_CommonFlag_mptr_data[] = {
	{
		._1b104ca5c_Name=_1b104ca5c_Name_CommonFlag_0,
		._1b104cc05_Short=_1b104cc05_Short_CommonFlag_0,
		._1b107dd68_What=_1b107dd68_What_CommonFlag_0,
		._1b107deab_Reset=_1b107deab_Reset_CommonFlag_0,
	},
	{
		._1b104ca5c_Name=_1b104ca5c_Name_CommonFlag_1,
		._1b104cc05_Short=_1b104cc05_Short_CommonFlag_1,
		._1b107dd68_What=_1b107dd68_What_CommonFlag_1,
		._1b107deab_Reset=_1b107deab_Reset_CommonFlag_1,
	},
	{
		._1b104ca5c_Name=_1b104ca5c_Name_CommonFlag_2,
		._1b104cc05_Short=_1b104cc05_Short_CommonFlag_2,
		._1b107dd68_What=_1b107dd68_What_CommonFlag_2,
		._1b107deab_Reset=_1b107deab_Reset_CommonFlag_2,
	},
	{
		._1b104ca5c_Name=_1b104ca5c_Name_CommonFlag_3,
		._1b104cc05_Short=_1b104cc05_Short_CommonFlag_3,
		._1b107dd68_What=_1b107dd68_What_CommonFlag_3,
		._1b107deab_Reset=_1b107deab_Reset_CommonFlag_3,
	},
	{
		._1b104ca5c_Name=_1b104ca5c_Name_CommonFlag_4,
		._1b104cc05_Short=_1b104cc05_Short_CommonFlag_4,
		._1b107dd68_What=_1b107dd68_What_CommonFlag_4,
		._1b107deab_Reset=_1b107deab_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b050b802_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1b050b802_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05ae1bd_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1b05ae1bd_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04e5951_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1b04e5951_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b051bb97_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1b051bb97_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04dd65d_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1b04dd65d_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d85e2_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1b04d85e2_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04dc7b1_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1b04dc7b1_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d393e_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1b04d393e_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04dceed_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1b04dceed_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d4a1c_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1b04d4a1c_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04dab66_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1b04dab66_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04dbb01_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1b04dbb01_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1ad37cdb2_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1ad37cdb2_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c22ac_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1b04c22ac_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054b8db_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1b054b8db_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0549048_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1b0549048_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05045ec_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0612672_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1b0612672_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05056b9_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1b05056b9_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0503244_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1b0503244_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0501b5a_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0501484_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1b0501484_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b050185d_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b050240d_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1b050240d_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05028b4_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0504223_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1b0504223_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0503eae_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05059b6_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1b05059b6_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ec00c_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1b04ec00c_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0549b81_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1b0549b81_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0549e7d_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1b0549e7d_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d5db4_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1b04d5db4_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054a434_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1b054a434_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d67bb_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1b04d67bb_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054ad80_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1b054ad80_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054b215_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1b054b215_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054bcb5_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1b054bcb5_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054c18e_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1b054c18e_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054c645_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1b054c645_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ec88c_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1b04ec88c_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054ca1e_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1b054ca1e_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054d17e_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1b054d17e_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054e3b1_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1b054e3b1_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054b5de_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1b054b5de_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b054e746_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1b054e746_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d1ca0_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1b04d1ca0_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c5ed6_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1b04c5ed6_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d7da5_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1b04d7da5_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d5589_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1b04d5589_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d706e_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1b04d706e_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ce363_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1b04ce363_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ce73c_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1b04ce73c_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d072c_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1b04d072c_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d92d5_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1b04d92d5_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cea39_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1b04cea39_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d6b95_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1b04d6b95_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04d4de6_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1b04d4de6_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c68aa_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1b04c68aa_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05088ed_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1b05088ed_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04e2871_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1b04e2871_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b06469b4_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1b06469b4_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b051e392_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1b051e392_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0520a9c_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1b0520a9c_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ee20c_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1b04ee20c_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04eea9d_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1b04eea9d_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b050072a_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1b050072a_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0500cad_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1b0500cad_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ea406_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1b04ea406_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c3e6d_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1b04c3e6d_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c30d2_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1b04c30d2_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c36cb_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1b04c36cb_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c2c4c_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1b04c2c4c_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c46bb_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1b04c46bb_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c33ce_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1b04c33ce_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1aa364275_StrBuilder>().dealloc(); }
jule::Str __jule_any_type81_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const _1aa364275_StrBuilder*>(alloc)); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .to_str=__jule_any_type81_to_str};
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c846c_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1b04c846c_VariadicExpr> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ec3d6_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1b04ec3d6_SliceExprModel> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ca7d2_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1b04ca7d2_FieldExprPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cbddd_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1b04cbddd_KeyValPair> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c7911_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1b04c7911_IdentExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c6ba7_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1b04c6ba7_TupleExpr> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05010aa_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1b05010aa_TupleExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0504ee3_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1b0504ee3_RuneExprModel> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b06477a6_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1b06477a6_TypeKind> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b050042d_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1b050042d_ArrayExprModel> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c91c6_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1b04c91c6_SubIdentExpr> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c25a9_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1b04c25a9_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c8093_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1b04c8093_UnaryExpr> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c1ba2_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1b04c1ba2_TypeDecl> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c8c20_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1b04c8c20_NsSelectionExpr> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c2950_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1b04c2950_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04edb79_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1b04edb79_SlicingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04eb65a_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1b04eb65a_CastingExprModel> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cc5d6_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1b04cc5d6_SliceExpr> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04eacca_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1b04eacca_StructLitExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0500054_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1b0500054_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ed5e6_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1b04ed5e6_MapExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ecc66_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1b04ecc66_AnonFnExprModel> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c62d3_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1b04c62d3_RangeExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c7081_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1b04c7081_LitExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c745a_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1b04c745a_UnsafeExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cd076_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1b04cd076_IndexingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cd6d6_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1b04cd6d6_SlicingExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c8846_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1b04c8846_CastExpr> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cb10c_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1b04cb10c_StructLit> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c9cdc_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1b04c9cdc_FnCallExpr> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04cb5b3_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1b04cb5b3_BraceLit> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04c967c_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1b04c967c_BinopExpr> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04ea02c_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1b04ea02c_BinopExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b04eb0c7_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1b04eb0c7_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0502034_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1b0502034_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0502d6a_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0503541_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1b0503541_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b050383d_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1b050383d_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05048e9_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1b05048e9_SizeofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0504be6_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1b0504be6_AlignofExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b05052e0_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1b05052e0_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b073e6e4_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1b073e6e4_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0740173_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1b0740173_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b074054c_AppendToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1b074054c_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b073e11c_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1b073e11c_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b073e9e1_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1b073e9e1_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b073ecdd_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1b073ecdd_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1b0740849_InlineStdInternalNosafeStobs>().dealloc(); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1b0740849_InlineStdInternalNosafeStobs> &other) { return any.type == &__jule_any_type130 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
void __jule_any_type136_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type136_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type136_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_any_type136_dealloc, .eq=__jule_any_type136_eq, .to_str=__jule_any_type136_to_str};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type136 && __jule_any_type136_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _1aa644401_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1b1085ba5_OutDir = jule::Str("dist", 4);
jule::Str _1b1085e80_OutName = jule::Str("ir.cpp", 6);
jule::Str _1b1086249_Out = jule::Str();
jule::Str _1d36457e7_Compiler = jule::Str();
jule::Str _1d3646ad4_CompilerPath = jule::Str();
jule::Str _1d3646d37_CppStd = jule::Str("cpp17", 5);
jule::Bool _1d36470bd_Shadowing = false;
jule::Bool _1d3647387_Transpilation = false;
jule::Bool _1d3647651_Test = false;
jule::Bool _1d364791a_RC = true;
jule::Bool _1d3647ce4_Safety = true;
jule::Bool _1d36480ad_Production = false;
jule::Ptr<_1aa20290a_RangeTable> _1aa18d1c0__L = jule::new_ptr<_1aa20290a_RangeTable>(_1aa20290a_RangeTable{._field_R16=jule::Slice<_1aa201e26_Range16>::make({_1aa201e26_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_1aa201e26_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_1aa201e26_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_1aa201e26_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_1aa201e26_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_1aa201e26_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_1aa201e26_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_1aa201e26_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_1aa201e26_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_1aa201e26_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_1aa201e26_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_1aa201e26_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_1aa201e26_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_1aa201e26_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_1aa201e26_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_1aa201e26_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_1aa201e26_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_1aa201e26_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_1aa201e26_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_1aa201e26_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_1aa201e26_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_1aa201e26_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_1aa201e26_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_1aa201e26_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_1aa201e26_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_1aa201e26_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_1aa201e26_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_1aa201e26_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_1aa201e26_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_1aa201e26_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_1aa201e26_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_1aa201e26_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_1aa201e26_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_1aa201e26_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1aa201e26_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_1aa201e26_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_1aa201e26_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_1aa201e26_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_1aa201e26_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_1aa201e26_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_1aa201e26_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_1aa201e26_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1aa202454_Range32>::make({_1aa202454_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_1aa202454_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_1aa202454_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_1aa202454_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_1aa202454_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_1aa202454_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_1aa202454_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_1aa202454_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_1aa202454_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_1aa202454_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_1aa202454_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_1aa202454_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_1aa202454_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_1aa202454_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_1aa202454_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_1aa202454_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_1aa202454_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_1aa202454_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_1aa202454_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_1aa202454_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1aa202454_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_1aa202454_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_1aa202454_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_1aa202454_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_1aa20290a_RangeTable> _1aa18e1b0__LU = jule::new_ptr<_1aa20290a_RangeTable>(_1aa20290a_RangeTable{._field_R16=jule::Slice<_1aa201e26_Range16>::make({_1aa201e26_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_1aa201e26_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_1aa201e26_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_1aa201e26_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_1aa201e26_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_1aa201e26_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_1aa201e26_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_1aa201e26_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_1aa201e26_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_1aa201e26_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_1aa201e26_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_1aa201e26_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_1aa202454_Range32>::make({_1aa202454_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_1aa202454_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_1aa202454_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_1aa202454_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_1aa202454_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_1aa202454_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _1aa1eb23e__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _1aa30bedc_first = jule::Array<jule::U8,256>({});
jule::Array<_1aa30c570_acceptRange,16> _1aa30c87d_acceptRanges = jule::Array<_1aa30c570_acceptRange,16>({_1aa30c570_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_1aa30c570_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_1aa30c570_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_1aa30c570_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_1aa30c570_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _1aa3b533c_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _1aa3b4968_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _1aa3b6607_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _1aa6405ea_PathStdlib = jule::Str();
jule::Str _1aa64084d_PathExec = jule::Str();
jule::Str _1aa640b06_PathWd = jule::Str();
jule::Str _1aa640e14_PathApi = jule::Str();
jule::Str _1aa6411cd_Os = jule::Str("darwin", 6);
jule::Str _1aa641497_Arch = jule::Str("amd64", 5);
jule::Array<jule::I32,5> _1aa400454_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::U64,6> _1aa400751_UnaryOps = jule::Array<jule::U64,6>({static_cast<jule::U64>(61LLU),static_cast<jule::U64>(60LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(68LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(65LLU)});
jule::Array<jule::U64,18> _1aa495098_BinOps = jule::Array<jule::U64,18>({static_cast<jule::U64>(60LLU),static_cast<jule::U64>(61LLU),static_cast<jule::U64>(62LLU),static_cast<jule::U64>(63LLU),static_cast<jule::U64>(64LLU),static_cast<jule::U64>(65LLU),static_cast<jule::U64>(66LLU),static_cast<jule::U64>(67LLU),static_cast<jule::U64>(56LLU),static_cast<jule::U64>(57LLU),static_cast<jule::U64>(69LLU),static_cast<jule::U64>(70LLU),static_cast<jule::U64>(53LLU),static_cast<jule::U64>(52LLU),static_cast<jule::U64>(54LLU),static_cast<jule::U64>(55LLU),static_cast<jule::U64>(50LLU),static_cast<jule::U64>(51LLU)});
jule::Array<jule::U64,2> _1aa495692_PostfixOps = jule::Array<jule::U64,2>({static_cast<jule::U64>(58LLU),static_cast<jule::U64>(59LLU)});
jule::Array<jule::U64,11> _1aa49598e_AssignOps = jule::Array<jule::U64,11>({static_cast<jule::U64>(71LLU),static_cast<jule::U64>(40LLU),static_cast<jule::U64>(41LLU),static_cast<jule::U64>(43LLU),static_cast<jule::U64>(42LLU),static_cast<jule::U64>(44LLU),static_cast<jule::U64>(46LLU),static_cast<jule::U64>(45LLU),static_cast<jule::U64>(49LLU),static_cast<jule::U64>(48LLU),static_cast<jule::U64>(47LLU)});
jule::Array<_1aa4a3abd_kindPair,28> _1aa4a3eec_keywords = jule::Array<_1aa4a3abd_kindPair,28>({_1aa4a3abd_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(6LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(2LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(7LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(9LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(10LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(11LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(12LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(13LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(14LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(16LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(18LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(20LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(21LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(22LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(23LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(24LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(25LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(26LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(27LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(28LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(29LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(30LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(31LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(32LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(33LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(34LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(36LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<_1aa4a3abd_kindPair,46> _1aa4a433d_basicOps = jule::Array<_1aa4a3abd_kindPair,46>({_1aa4a3abd_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(19LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(":=", 2), ._field_id=static_cast<jule::U64>(38LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(8LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(3LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(5LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(39LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(17LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(40LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(41LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(42LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(43LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(44LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(45LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(46LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(47LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(48LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(49LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(50LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(51LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(52LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(53LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(54LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(55LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(56LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(57LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(58LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(59LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(60LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(61LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(62LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(63LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(64LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(65LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(66LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(67LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(68LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(69LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(70LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(71LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(35LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("{", 1), ._field_id=static_cast<jule::U64>(72LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("}", 1), ._field_id=static_cast<jule::U64>(73LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("[", 1), ._field_id=static_cast<jule::U64>(76LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("]", 1), ._field_id=static_cast<jule::U64>(77LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str("(", 1), ._field_id=static_cast<jule::U64>(74LLU)},_1aa4a3abd_kindPair{._field_kind=jule::Str(")", 1), ._field_id=static_cast<jule::U64>(75LLU)}});
jule::Array<jule::U8,32> _1ad30dbcd__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1ad30e294__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1ad3548b1_floatInfo _1ad354cac_f32info = _1ad3548b1_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1ad3548b1_floatInfo _1ad3550ba_f64info = _1ad3548b1_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1ad35ca62_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1ad35e8cc_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1ad36049e_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1ad3607e0_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1ad363a57_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1ad36782a_leftCheat> _1ad367c59_leftCheats = jule::Slice<_1ad36782a_leftCheat>::make({_1ad36782a_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1ad36782a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1ad36782a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1ad36782a_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1ad36782a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1ad36782a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1ad36782a_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1ad36782a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1ad36782a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1ad36782a_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1ad36782a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1ad36782a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1ad36782a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1ad36782a_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1ad36782a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1ad36782a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1ad36782a_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1ad36782a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1ad36782a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1ad36782a_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1ad36782a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1ad36782a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1ad36782a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1ad36782a_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1ad36782a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1ad36782a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1ad36782a_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1ad36782a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1ad36782a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1ad36782a_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1ad36782a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1ad36782a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1ad36782a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1ad36782a_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1ad36782a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1ad36782a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1ad36782a_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1ad36782a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1ad36782a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1ad36782a_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1ad36782a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1ad36782a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1ad36782a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1ad36782a_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1ad36782a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1ad36782a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1ad36782a_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1ad36782a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1ad36782a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1ad36782a_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1ad36782a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1ad36782a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1ad36782a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1ad36782a_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1ad36782a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1ad36782a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1ad36782a_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1ad36782a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1ad36782a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1ad36782a_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1ad36782a_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1ad36dc1b_BitSize = 0LL;
jule::Str _1ad36e029_SysInt = jule::Str();
jule::Str _1ad36e2e3_SysUint = jule::Str();
jule::Slice<jule::Str> _1b0541282_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1b06477a6_TypeKind> _1b072d5c3_primNil = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=nullptr});
jule::Ptr<_1b06477a6_TypeKind> _1b072d8d1_primVoid = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072db9a_primAny = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072dea8_primStr = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072e272_primBool = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072e53b_primUintptr = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072e805_primUint = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072ebce_primInt = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b072ee98_primI8 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b0730262_primI16 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b073052b_primI32 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b07307e5_primI64 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b0730aae_primU8 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b0730d78_primU16 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b0731142_primU32 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b07315b5_primU64 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b073187e_primF32 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1b06477a6_TypeKind> _1b0731b48_primF64 = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Str _1b12004e5_stdPackageInternalNosafe = jule::Str("std::internal::nosafe", 21);
jule::Map<jule::Uintptr,_1b1200935_stdCacheData> _1b1200d64_stdCache = nullptr;
jule::Bool _1b12026d4_Copy = false;
jule::Bool _1b12029e2_Deadcode = false;
jule::Bool _1b1202cab_Append = false;
jule::Bool _1b12030b9_Math = false;
jule::Bool _1b1203383_Access = false;
jule::Bool _1b120364c_Inline = false;
jule::Bool _1b1203916_Ptr = false;
jule::Bool _1b1203ce0_Cond = false;
jule::Bool _1b12040a9_Str = false;
jule::Bool _1b1204373_StdInternalNosafe = false;
jule::Bool _1b139c296_exprEnabled = false;
jule::Bool _1b139c54e_scopeEnabled = false;
jule::Bool _1b139c818_stdEnabled = false;
jule::Array<jule::U64,12> _1b0ee02b3_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1b1c64773_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_1aa20290a_RangeTable> _1aa19b8b5_Upper = _1aa18e1b0__LU;
jule::Ptr<_1aa20290a_RangeTable> _1aa19535e_Letter = _1aa18d1c0__L;





std::ostream &operator<<(std::ostream &_Stream, _1aa201e26_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa202454_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa20290a_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa30c570_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline _1aa364275_StrBuilder static__1aa364594_New(jule::I64 _1519_cap) {
	if ((_1519_cap < 0LL)) {
		jule::panic(jule::Str("std::strings: StrBuilder.New: cap < 0", 37) + jule::Str("\nlocation: std/internal/strings/builder.jule:17:13"));;
	};
	return _1aa364275_StrBuilder{._field_buf=jule::Slice<jule::U8>::alloc(0LL, _1519_cap, 0)};;
}



inline void _1aa36cc84_Write(_1aa364275_StrBuilder* _self_, jule::Slice<jule::U8> _2524_b) {
	((*(_self_))._field_buf).append(_2524_b);;
}



inline void _1aa36d03c_WriteStr(_1aa364275_StrBuilder* _self_, jule::Str _3027_s) {
	((*(_self_))._field_buf).append(_1ba10714b_Stobs(&(_3027_s)));;
}



inline void _1aa36d2e5_WriteByte(_1aa364275_StrBuilder* _self_, jule::U8 _3528_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_3528_b); };
}



inline jule::Str _1aa36d834_Str(_1aa364275_StrBuilder* _self_) {
	return static_cast<jule::Str>((*(_self_))._field_buf);;
}



inline void _1aa36da32_Clear(_1aa364275_StrBuilder* _self_) {
	(*(_self_))._field_buf=(*(_self_))._field_buf.slice(0LL, 0LL);
}



inline jule::I64 _1aa36dcb8_Len(_1aa364275_StrBuilder* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buf.len());;
}



inline jule::Slice<jule::U8> _1aa36e2d5_Buf(_1aa364275_StrBuilder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1aa36e58d_SetBuf(_1aa364275_StrBuilder* _self_, jule::Slice<jule::U8> _7536_buf) {
	(*(_self_))._field_buf=_7536_buf;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa364275_StrBuilder _Src) {
	_Stream << _1aa36d834_Str(&_Src);
	return _Stream;
}



inline jule::U8 _1aa37036e_index(_1aa36ee1d_lazyBuff* _self_, jule::I64 _5524_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5524_i];;
	};
	return (*(_self_))._field_path[_5524_i];;
}



inline void _1aa370627_append(_1aa36ee1d_lazyBuff* _self_, jule::U8 _6225_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6225_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), ((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w)));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6225_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1aa3708ad_string(_1aa36ee1d_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa36ee1d_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba100e58_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>> static__1aa3746c5_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_1ba100e58_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _1ba0c1ae9_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>>(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _1ba0c1db3_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1b134d5aa;
			};
			jule::Str _2517_name = _1ba0b11b0_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_1ba10e681_Status> _2621_stat = ({
				auto except = static__1ba10193c_Of(_1aa37168e_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>>(except.error);
				} jule::Ptr<_1ba10e681_Status>(nullptr);});
			});;
			{ jule::Slice<jule::Ptr<_1ba100e58_DirEntry>> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(jule::new_ptr<_1ba100e58_DirEntry>(_1ba100e58_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat})); };
		}
	_iter_next_1b134d5aa:;
	}
	_iter_end_1b134d5aa:;;
	_1ba0c217c_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__1aa374906_Create(jule::Str _3922_path) {
	if ((_1ba0c2a84_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__1aa374b37_Remove(jule::Str _5122_path) {
	if ((_1ba0c2d4d_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ba1011bc_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1ba10bd87_File>> static__1ba0eed7a_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _1ba0c127a_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ba10bd87_File>>(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_1ba10bd87_File>>(jule::Any(), static__1ba10c2b6_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__1ba1000ab_Remove(jule::Str _3022_path) {
	if ((_1ba0c3117_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1ba100540_Write(_1ba10bd87_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1ba0dde46_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _1ba100881_Read(_1ba10bd87_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_1ba0dd671_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_1ba10bd87_File> static__1ba10c2b6_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_1ba10bd87_File>(_1ba10bd87_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_1ba10bd87_File>> static__1ba10c580_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_1ba10bd87_File>>(jule::Any(), ({
		auto except = static__1ba0eed7a_Open(_5622_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_1ba10bd87_File>>(except.error);
		} jule::Ptr<_1ba10bd87_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1ba10c849_Read(jule::Str _6820_path) {
	jule::Ptr<_1ba10e681_Status> _6913_s = ({
		auto except = static__1ba10193c_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1ba10e681_Status>(nullptr);});
	});;
	if ((!(_1ba10ece1_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_1ba110077_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_1ba10bd87_File> _7917_f = ({
		auto except = static__1ba0eed7a_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_1ba10bd87_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _1ba10db25_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_1ba110077_Size(_6913_s.ptr())), static_cast<jule::I64>(_1ba110077_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _1ba100881_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__1ba10cbe0_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_1ba10bd87_File> _9317_f = ({
		auto except = static__1ba0eed7a_Open(_9221_path, static_cast<jule::I64>(1537LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_1ba10bd87_File>(nullptr);});
	});;
	({
		auto except = _1ba100540_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _1ba10db25_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1ba10db25_Close(_1ba10bd87_File* _self_) {
	if ((_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1ba10bd87_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_1ba10e681_Status>> static__1ba10193c_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_1ba10e681_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _1ba0c0d4b_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1ba10e681_Status>>(jule::Any(_1ba0ee4c8_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_1ba10e681_Status> _2017_stat = jule::new_ptr<_1ba10e681_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_1ba10e681_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _1ba10ea5a_IsDir(_1ba10e681_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _1ba10ece1_IsReg(_1ba10e681_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _1ba110077_Size(_1ba10e681_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ba10e681_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa63cb8b_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa3c3a21_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _1aa49b555_Prec(_1aa49b1d1_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(57LLU) || _match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1ad569862:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1ad5699e9:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(71LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1ad569a60:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1ad569ad7:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1ad569b5e:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1ad5691e1:;
			{
				return 0LLU;;
			}
		}
		_match_end_1ad569147:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1aa49b1d1_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4a1d85_Fill(_1aa4a199a_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _1aa4a211b_Dir(_1aa4a199a_File* _self_) {
	return _1aa372382_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1aa4a23a2_Name(_1aa4a199a_File* _self_) {
	return _1aa371edb_Base((*(_self_))._field_Path);;
}



inline jule::Str _1aa4a2979_GetRow(_1aa4a199a_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1ad56ecda;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_1ad56ecda:;
	}
	_iter_end_1ad56ecda:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4a199a_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4a3abd_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _1aa4aa267_pushErr(_1aa4a9bd4_lex* _self_, jule::Str _44726_fmt, jule::Slice<jule::Any> _44739_args) {
	{ jule::Slice<_1aa3c3a21_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1aa4a488d_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44726_fmt, _44739_args)); };
}



inline void _1aa4aa7c8_lex(_1aa4a9bd4_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1aa4ac9ea_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_1aa49b1d1_Token> _46221_token = _1aa4aded5_token(_self_);;
			if ((_46221_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1aa49b1d1_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_46221_token); };
			};
		}
	_iter_next_1ad59dbb5:;
	}
	_iter_end_1ad59dbb5:;;
}



inline jule::Str _1aa4aab19_id(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _47122_ln) {
	if (((*(_47122_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47514_r = 0;;
	jule::I64 _47521_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_47122_ln)));
		_47514_r = __jule_assign_result.__jule_result_arg0;
		_47521_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47514_r != '_') && (!(_1aa49e910_IsLetter(_47514_r))))) {
		return jule::Str();;
	};
	while ((_47521_i < (*(_47122_ln)).len())) {
		{
			jule::I32 _48118_pr = 0;;
			jule::I64 _48122_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_47122_ln)).slice(_47521_i));
				_48118_pr = __jule_assign_result.__jule_result_arg0;
				_48122_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_48118_pr != '_') && (!(_1aa49ee93_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_48118_pr)))))) && (!(_1aa49e910_IsLetter(_48118_pr))))) {
				(*(_self_))._field_pos+=_47521_i;
				return static_cast<jule::Str>((*(_47122_ln)).slice(0LL, _47521_i));;
			};
			_47521_i+=_48122_n;
		}
	_iter_next_1ad5a1d2d:;
	}
	_iter_end_1ad5a1d2d:;;
	(*(_self_))._field_pos+=(*(_47122_ln)).len();
	return static_cast<jule::Str>((*(_47122_ln)));;
}



inline jule::Slice<jule::U8> _1aa4aada0_resume(_1aa4a9bd4_lex* _self_) {
	jule::I64 _49617_i = (*(_self_))._field_pos;;
	for (; (_49617_i < (*(_self_))._field_file.get()._field_Data.len()); (_49617_i)++) {
		{
			jule::I32 _49817_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49617_i]);;
			if (_1aa49e48c_IsSpace(_49817_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49817_r };
					
					if (_match_expr == '\n') {
						_case_begin_1ad5a5d65:;
						{
							_1aa4ac9ea_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1ad5a5dcb:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1ad5a5738:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1ad5a57c1:;
				};
				goto _iter_next_1ad5a1a53;
			};
			jule::I64 _51321_j = _49617_i;;
			for (; (_51321_j < (*(_self_))._field_file.get()._field_Data.len()); (_51321_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_51321_j] == '\n')) {
						goto _iter_end_1ad5a49ac;
					};
				}
			_iter_next_1ad5a49ac:;
			}
			_iter_end_1ad5a49ac:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49617_i, _51321_j);;
		}
	_iter_next_1ad5a1a53:;
	}
	_iter_end_1ad5a1a53:;;
	return nullptr;;
}



inline void _1aa4ab158_lexLineComment(_1aa4a9bd4_lex* _self_, jule::Ptr<_1aa49b1d1_Token>* _52438_token) {
	jule::I64 _52513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52817_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_52817_r == '\n') || (_52817_r == '\r'))) {
				goto _iter_end_1ad5a84a5;
			};
		}
	_iter_next_1ad5a84a5:;
	}
	_iter_end_1ad5a84a5:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_52438_token)).get()._field_Id=static_cast<jule::U64>(15LLU);
		(*(_52438_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52513_start, (*(_self_))._field_pos));
	};
}



inline void _1aa4ab411_lexRangeComment(_1aa4a9bd4_lex* _self_, jule::Ptr<_1aa49b1d1_Token>* _53939_token) {
	jule::I64 _54013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _54317_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_54317_r == '\r')) {
				goto _iter_next_1ad5ab497;
			};
			if ((_54317_r == '\n')) {
				_1aa4ac9ea_newLine(_self_);
				goto _iter_next_1ad5ab497;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_54317_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_53939_token)).get()._field_Id=static_cast<jule::U64>(15LLU);
					(*(_53939_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_54013_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1ad5ab497:;
	}
	_iter_end_1ad5ab497:;;
	_1aa4aa267_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _1aa4ab752_num(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _56723_txt) {
	jule::Str __jule_func_result;
	if (((*(_56723_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1aa4a84c9_hexNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_1ad5b34e3;
	};
	__jule_func_result=_1aa4a8210_octalNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_1ad5b34e3;
	};
	__jule_func_result=_1aa4a6a27_binaryNum(_56723_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_1ad5b34e3;
	};
	__jule_func_result=_1aa4a675d_commonNum(_56723_txt);
	_julec_label_1ad5b34e3:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1aa4aba93_escapeSeq(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _58929_txt) {
	jule::Str _59017_seq = jule::Str();;
	if (((*(_58929_txt)).len() < 2LL)) {
		goto _julec_label_1ad5b656d;
	};
	{
		auto &_match_expr{ (*(_58929_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1ad5b54c3:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58929_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1ad5b5539:;
			{
				_59017_seq=_1aa4a8b17_bigUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1ad5b55b1:;
			{
				_59017_seq=_1aa4a8dd1_littleUnicodePointEscape(_58929_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1ad5b521a:;
			{
				_59017_seq=_1aa4a919a_hexByteEscape(_58929_txt);
			}
		}
		else {
			_case_begin_1ad5b4a99:;
			{
				_59017_seq=_1aa4a9464_byteEscape(_58929_txt);
			}
		}
		_match_end_1ad5b510a:;
	};
	_julec_label_1ad5b656d:;
	if (_59017_seq.empty()) {
		((*(_self_))._field_pos)++;
		_1aa4aa267_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_59017_seq.len();
	return _59017_seq;;
}



inline jule::Str _1aa4abe8e_getRune(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _61927_txt, jule::Bool _61940_raw) {
	if (((!(_61940_raw)) && ((*(_61927_txt))[0LL] == '\\'))) {
		return _1aa4aba93_escapeSeq(_self_, _61927_txt);;
	};
	jule::I32 _62314_r = 0;;
	jule::I64 _62317_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_61927_txt)));
		_62314_r = __jule_assign_result.__jule_result_arg0;
		_62317_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_62317_n;
	return jule::Str::from_rune(_62314_r);;
}



inline jule::Str _1aa4ac2d0_lexRune(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _62827_txt) {
	_1aa364275_StrBuilder _62917_run = static__1aa364594_New(8LL);;
	_1aa36d2e5_WriteByte(&_62917_run, '\'');
	((*(_self_))._field_column)++;
	jule::I64 _63217_n = 0LL;;
	jule::I64 _63317_i = 1LL;;
	for (; (_63317_i < (*(_62827_txt)).len()); (_63317_i)++) {
		{
			if (((*(_62827_txt))[_63317_i] == '\r')) {
				goto _iter_next_1b2c14700;
			};
			if (((*(_62827_txt))[_63317_i] == '\n')) {
				_1aa4aa267_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1aa4ac9ea_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _64517_part = (*(_62827_txt)).slice(_63317_i);;
			jule::Str _64617_r = _1aa4abe8e_getRune(_self_, &(_64517_part), false);;
			_1aa36d03c_WriteStr(&_62917_run, _64617_r);
			(*(_self_))._field_column+=_1aa310001_RuneCountStr(_64617_r);
			if (_64617_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b2c14700;
			};
			if ((_64617_r.len() > 1LL)) {
				_63317_i+=(_64617_r.len() - 1LL);
			};
			(_63217_n)++;
		}
	_iter_next_1b2c14700:;
	}
	_iter_end_1b2c14700:;;
	if ((_63217_n == 0LL)) {
		_1aa4aa267_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_63217_n > 1LL)) {
		_1aa4aa267_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _1aa36d834_Str(&_62917_run);;
}



inline jule::Str _1aa4ac566_lexStr(_1aa4a9bd4_lex* _self_) {
	_1aa364275_StrBuilder _66917_s = static__1aa364594_New(16LL);;
	jule::U8 _67013_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _67213_raw = (_67013_mark == '`');;
	_1aa36d2e5_WriteByte(&_66917_s, _67013_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67717_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67717_ch == '\r')) {
				goto _iter_next_1b2c19b9a;
			};
			if ((_67717_ch == '\n')) {
				_1aa4ac9ea_newLine(_self_);
				if ((!(_67213_raw))) {
					_1aa4aa267_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68921_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _69017_r = _1aa4abe8e_getRune(_self_, &(_68921_part), _67213_raw);;
			_1aa36d03c_WriteStr(&_66917_s, _69017_r);
			(*(_self_))._field_column+=_1aa310001_RuneCountStr(_69017_r);
			if ((_67717_ch == _67013_mark)) {
				goto _iter_end_1b2c19b9a;
			};
		}
	_iter_next_1b2c19b9a:;
	}
	_iter_end_1b2c19b9a:;;
	return _1aa36d834_Str(&_66917_s);;
}



inline void _1aa4ac9ea_newLine(_1aa4a9bd4_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1aa4ad05b_isOp(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _71024_txt, jule::Str _71037_kind, jule::U64 _71048_id, jule::Ptr<_1aa49b1d1_Token>* _71066_t) {
	if ((!(_1aa4a4c56_bytesHasPrefix(_71024_txt, _71037_kind)))) {
		return false;;
	};
	(*(_71066_t)).get()._field_Kind=_71037_kind;
	(*(_71066_t)).get()._field_Id=_71048_id;
	(*(_self_))._field_pos+=_71037_kind.len();
	return true;;
}



inline jule::Bool _1aa4ad457_lexBasicOps(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8> _72030_txt, jule::Ptr<_1aa49b1d1_Token>* _72048_tok) {
	{
		auto expr = &(_1aa4a433d_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2c21201:;
		if (it != expr_end) {
			_1aa4a3abd_kindPair *_72116_pair = it;
			{
				if (_1aa4ad05b_isOp(_self_, &(_72030_txt), (*(_72116_pair))._field_kind, (*(_72116_pair))._field_id, _72048_tok)) {
					return true;;
				};
			}
			_iter_next_1b2c21201:;
			++it;
			goto _iter_begin_1b2c21201;
		}
		_iter_end_1b2c21201:;
	};
	return false;;
}



inline jule::Bool _1aa4ad853_lexId(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _72925_txt, jule::Ptr<_1aa49b1d1_Token>* _72943_t) {
	jule::Str _73013_lex = _1aa4aab19_id(_self_, _72925_txt);;
	if (_73013_lex.empty()) {
		return false;;
	};
	(*(_72943_t)).get()._field_Kind=_73013_lex;
	(*(_72943_t)).get()._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _1aa4adc4e_lexNum(_1aa4a9bd4_lex* _self_, jule::Slice<jule::U8>* _73926_txt, jule::Ptr<_1aa49b1d1_Token>* _73944_t) {
	jule::Str _74013_lex = _1aa4ab752_num(_self_, _73926_txt);;
	if (_74013_lex.empty()) {
		return false;;
	};
	(*(_73944_t)).get()._field_Kind=_74013_lex;
	(*(_73944_t)).get()._field_Id=static_cast<jule::U64>(4LLU);
	return true;;
}



inline jule::Ptr<_1aa49b1d1_Token> _1aa4aded5_token(_1aa4a9bd4_lex* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _75117_t = jule::new_ptr<_1aa49b1d1_Token>(_1aa49b1d1_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75613_txt = _1aa4aada0_resume(_self_);;
	if ((_75613_txt == nullptr)) {
		return _75117_t;;
	};
	_75117_t.get()._field_Column=(*(_self_))._field_column;
	_75117_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_1aa4adc4e_lexNum(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_1b2c27b20:;
			{
				goto _match_end_1b2c25c50;
			}
		}
		else if ((_75613_txt[0LL] == '\'')) {
			_case_begin_1b2c271c4:;
			{
				_75117_t.get()._field_Kind=_1aa4ac2d0_lexRune(_self_, &(_75613_txt));
				_75117_t.get()._field_Id=static_cast<jule::U64>(4LLU);
				return _75117_t;;
			}
		}
		else if (((_75613_txt[0LL] == '\"') || (_75613_txt[0LL] == '`'))) {
			_case_begin_1b2c2723a:;
			{
				_75117_t.get()._field_Kind=_1aa4ac566_lexStr(_self_);
				_75117_t.get()._field_Id=static_cast<jule::U64>(4LLU);
				return _75117_t;;
			}
		}
		else if (_1aa4a4c56_bytesHasPrefix(&(_75613_txt), jule::Str("//", 2))) {
			_case_begin_1b2c272a1:;
			{
				_1aa4ab158_lexLineComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_1aa4a4c56_bytesHasPrefix(&(_75613_txt), jule::Str("/*", 2))) {
			_case_begin_1b2c26646:;
			{
				_1aa4ab411_lexRangeComment(_self_, &(_75117_t));
				return _75117_t;;
			}
		}
		else if (_1aa4ad457_lexBasicOps(_self_, _75613_txt, &(_75117_t))) {
			_case_begin_1b2c266ac:;
			{
				goto _match_end_1b2c25c50;
			}
		}
		else if (_1aa4ad853_lexId(_self_, &(_75613_txt), &(_75117_t))) {
			_case_begin_1b2c26723:;
			{
				{
					auto expr = &(_1aa4a3eec_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2c294b2:;
					if (it != expr_end) {
						_1aa4a3abd_kindPair *_78820_pair = it;
						{
							if (((*(_78820_pair))._field_kind == _75117_t.get()._field_Kind)) {
								_75117_t.get()._field_Id=(*(_78820_pair))._field_id;
								goto _iter_end_1b2c294b2;
							};
						}
						_iter_next_1b2c294b2:;
						++it;
						goto _iter_begin_1b2c294b2;
					}
					_iter_end_1b2c294b2:;
				};
			}
		}
		else {
			_case_begin_1b2c265d0:;
			{
				jule::I32 _79518_r = 0;;
				jule::I64 _79521_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune(_75613_txt);
					_79518_r = __jule_assign_result.__jule_result_arg0;
					_79521_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1aa4aa267_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79518_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79521_sz;
				return _75117_t;;
			}
		}
		_match_end_1b2c25c50:;
	};
	(*(_self_))._field_column+=_1aa310001_RuneCountStr(_75117_t.get()._field_Kind);
	return _75117_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa4a9bd4_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad3548b1_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad355560_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad36782a_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1ad35ec1d_set(_1ad368353_decimal* _self_, jule::Slice<jule::U8> _23822_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23917_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23917_i >= _23822_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23822_s[_23917_i] == '+')) {
			_case_begin_1b3384d2b:;
			{
				(_23917_i)++;
			}
		}
		else if ((_23822_s[_23917_i] == '-')) {
			_case_begin_1b3385029:;
			{
				(*(_self_))._field_neg=true;
				(_23917_i)++;
			}
		}
		_match_end_1b3384e3b:;
	};
	jule::Bool _25617_sawdot = false;;
	jule::Bool _25717_sawdigits = false;;
	for (; (_23917_i < _23822_s.len()); (_23917_i)++) {
		{
			{
				
				if ((_23822_s[_23917_i] == '_')) {
					_case_begin_1b33869cb:;
					{
						goto _iter_next_1b3386338;
					}
				}
				else if ((_23822_s[_23917_i] == '.')) {
					_case_begin_1b3386a53:;
					{
						if (_25617_sawdot) {
							return __jule_func_result;;
						};
						_25617_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b3386338;
					}
				}
				else if ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9'))) {
					_case_begin_1b3386aca:;
					{
						_25717_sawdigits=true;
						if (((_23822_s[_23917_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b3386338;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23822_s[_23917_i];
							((*(_self_))._field_nd)++;
						} else if ((_23822_s[_23917_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b3386338;
					}
				}
				_match_end_1b33868aa:;
			};
			goto _iter_end_1b3386338;
		}
	_iter_next_1b3386338:;
	}
	_iter_end_1b3386338:;;
	if ((!(_25717_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25617_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23917_i < _23822_s.len()) && (_1ad35a1ad_lower(_23822_s[_23917_i]) == 'e'))) {
		(_23917_i)++;
		if ((_23917_i >= _23822_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _30221_esign = 1LL;;
		if ((_23822_s[_23917_i] == '+')) {
			(_23917_i)++;
		} else if ((_23822_s[_23917_i] == '-')) {
			(_23917_i)++;
			_30221_esign=-1LL;
		};
		if ((((_23917_i >= _23822_s.len()) || (_23822_s[_23917_i] < '0')) || (_23822_s[_23917_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _31221_e = 0LL;;
		for (; ((_23917_i < _23822_s.len()) && ((('0' <= _23822_s[_23917_i]) && (_23822_s[_23917_i] <= '9')) || (_23822_s[_23917_i] == '_'))); (_23917_i)++) {
			{
				if ((_23822_s[_23917_i] == '_')) {
					goto _iter_next_1b338c790;
				};
				if ((_31221_e < 10000LL)) {
					_31221_e=static_cast<jule::I64>((((_31221_e * 10LL) + static_cast<jule::I64>(_23822_s[_23917_i])) - '0'));
				};
			}
		_iter_next_1b338c790:;
		}
		_iter_end_1b338c790:;;
		(*(_self_))._field_dp+=(_31221_e * _30221_esign);
	};
	if ((_23917_i != _23822_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1ad36005e_floatBits(_1ad368353_decimal* _self_, _1ad3548b1_floatInfo* _33229_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _33317_exp = 0LL;;
	jule::U64 _33417_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1b339c151;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1b3393785;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_33417_mant=0LLU;
		_33317_exp=(*(_33229_flt))._field_bias;
		goto _julec_label_1b339c151;
	};
	_33317_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35921_n = 0LL;;
			if (((*(_self_))._field_dp >= _1ad35e8cc_powtab.len())) {
				_35921_n=27LL;
			} else {
				_35921_n=_1ad35e8cc_powtab[(*(_self_))._field_dp];
			};
			_1ad3689b3_shift(_self_, static_cast<jule::I64>((-(_35921_n))));
			_33317_exp+=_35921_n;
		}
	_iter_next_1b33932bd:;
	}
	_iter_end_1b33932bd:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36921_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1ad35e8cc_powtab.len())) {
				_36921_n=27LL;
			} else {
				_36921_n=_1ad35e8cc_powtab[(-((*(_self_))._field_dp))];
			};
			_1ad3689b3_shift(_self_, _36921_n);
			_33317_exp-=_36921_n;
		}
	_iter_next_1b339481e:;
	}
	_iter_end_1b339481e:;;
	(_33317_exp)--;
	if ((_33317_exp < ((*(_33229_flt))._field_bias + 1LL))) {
		jule::I64 _38617_n = (((*(_33229_flt))._field_bias + 1LL) - _33317_exp);;
		_1ad3689b3_shift(_self_, static_cast<jule::I64>((-(_38617_n))));
		_33317_exp+=_38617_n;
	};
	if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_1b3393785;
	};
	_1ad3689b3_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_33229_flt))._field_mantbits))));
	_33417_mant=static_cast<jule::U64>(_1ad369563_roundedInteger(_self_));
	if ((_33417_mant == (2LLU << (*(_33229_flt))._field_mantbits))) {
		_33417_mant>>=1LLU;
		(_33317_exp)++;
		if (((_33317_exp - (*(_33229_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_1b3393785;
		};
	};
	if (((_33417_mant & (1LLU << (*(_33229_flt))._field_mantbits)) == 0LLU)) {
		_33317_exp=(*(_33229_flt))._field_bias;
	};
	goto _julec_label_1b339c151;
	_julec_label_1b3393785:;
	_33417_mant=0LLU;
	_33317_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_33229_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_33229_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1b339c151:;
	jule::U64 _42217_bits = (_33417_mant & ((1LLU << (*(_33229_flt))._field_mantbits) - 1LLU));;
	_42217_bits|=(static_cast<jule::U64>(((_33317_exp - (*(_33229_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_33229_flt))._field_expbits) - 1LL)))) << (*(_33229_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_42217_bits|=((1LLU << (*(_33229_flt))._field_mantbits) << (*(_33229_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _42217_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1ad36870a_assign(_1ad368353_decimal* _self_, jule::U64 _15129_v) {
	jule::Array<jule::U8,24> _15217_buf = jule::Array<jule::U8,24>();;
	jule::I64 _15517_n = 0LL;;
	while ((_15129_v > 0LLU)) {
		{
			jule::U64 _15717_v1 = (_15129_v / 10LLU);;
			_15129_v-=(10LLU * _15717_v1);
			_15217_buf[_15517_n]=static_cast<jule::U8>(static_cast<jule::U8>((_15129_v + '0')));
			(_15517_n)++;
			_15129_v=_15717_v1;
		}
	_iter_next_1b33a0c9d:;
	}
	_iter_end_1b33a0c9d:;;
	(*(_self_))._field_nd=0LL;
	(_15517_n)--;
	for (; (_15517_n >= 0LL); (_15517_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15217_buf[_15517_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b33a170a:;
	}
	_iter_end_1b33a170a:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1ad369ba1_trim(_self_);
}



inline void _1ad3689b3_shift(_1ad368353_decimal* _self_, jule::I64 _17628_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b33a36b8:;
		}
		else if ((_17628_k > 0LL)) {
			_case_begin_1b33a3740:;
			{
				while ((_17628_k > 60LL)) {
					{
						_1ad36a6eb_leftShift(_self_, 60LLU);
						_17628_k-=60LL;
					}
				_iter_next_1b33a4389:;
				}
				_iter_end_1b33a4389:;;
				_1ad36a6eb_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_17628_k)));
			}
		}
		else if ((_17628_k < 0LL)) {
			_case_begin_1b33a37b7:;
			{
				while ((_17628_k < -60LL)) {
					{
						_1ad369e8c_rightShift(_self_, 60LLU);
						_17628_k+=60LL;
					}
				_iter_next_1b33a4312:;
				}
				_iter_end_1b33a4312:;;
				_1ad369e8c_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_17628_k)))));
			}
		}
		_match_end_1b33a3597:;
	};
}



inline void _1ad368c6b_roundDown(_1ad368353_decimal* _self_, jule::I64 _19628_nd) {
	if (((_19628_nd < 0LL) || (_19628_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19628_nd;
	_1ad369ba1_trim(_self_);
}



inline void _1ad369024_roundUp(_1ad368353_decimal* _self_, jule::I64 _20526_nd) {
	if (((_20526_nd < 0LL) || (_20526_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _21117_i = (_20526_nd - 1LL);;
	for (; (_21117_i >= 0LL); (_21117_i)--) {
		{
			jule::U8 _21317_c = (*(_self_))._field_d[_21117_i];;
			if ((_21317_c < '9')) {
				((*(_self_))._field_d[_21117_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_21117_i + 1LL));
				return;;
			};
		}
	_iter_next_1b33a7865:;
	}
	_iter_end_1b33a7865:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1ad3692cc_round(_1ad368353_decimal* _self_, jule::I64 _23224_nd) {
	if (((_23224_nd < 0LL) || (_23224_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1ad36aa70_shouldRoundUp(_self_, _23224_nd)) {
		_1ad369024_roundUp(_self_, _23224_nd);
	} else {
		_1ad368c6b_roundDown(_self_, _23224_nd);
	};
}



inline jule::U64 _1ad369563_roundedInteger(_1ad368353_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _24917_i = 0LL;;
	jule::U64 _25017_n = 0LLU;;
	for (; ((_24917_i < (*(_self_))._field_dp) && (_24917_i < (*(_self_))._field_nd)); (_24917_i)++) {
		{
			_25017_n=static_cast<jule::U64>(((_25017_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_24917_i] - '0'))));
		}
	_iter_next_1b33aa78b:;
	}
	_iter_end_1b33aa78b:;;
	for (; (_24917_i < (*(_self_))._field_dp); (_24917_i)++) {
		{
			_25017_n*=10LLU;
		}
	_iter_next_1b33abc43:;
	}
	_iter_end_1b33abc43:;;
	if (_1ad36aa70_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_25017_n)++;
	};
	return _25017_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad368353_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1ad37cdb2_Const> static__1ad37d302_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1ad37cdb2_Const>(_1ad37cdb2_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1ad37cdb2_Const> static__1ad37d5bb_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1ad37cdb2_Const>(_1ad37cdb2_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1ad37cdb2_Const> static__1ad37d885_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1ad37cdb2_Const>(_1ad37cdb2_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1ad37cdb2_Const> static__1ad37db4e_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1ad37cdb2_Const>(_1ad37cdb2_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1ad37cdb2_Const> static__1ad37de18_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1ad37cdb2_Const>(_1ad37cdb2_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1ad37cdb2_Const> static__1ad37e127_NewNil(void) {
	return jule::new_ptr<_1ad37cdb2_Const>(_1ad37cdb2_Const{._field_data=nullptr});;
}



inline jule::I64 _1ad37e787_ReadI64(_1ad37cdb2_Const* _self_) {
	if ((!(_1ad381d83_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1ad37ea1d_ReadU64(_1ad37cdb2_Const* _self_) {
	if ((!(_1ad382119_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1ad37eca4_ReadBool(_1ad37cdb2_Const* _self_) {
	if ((!(_1ad3823a0_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1ad38003a_ReadStr(_1ad37cdb2_Const* _self_) {
	if ((!(_1ad382636_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1ad3802c1_ReadF64(_1ad37cdb2_Const* _self_) {
	if ((!(_1ad3828bc_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1ad380557_AsI64(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b2acc310:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b2accec0:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b2acd036:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b2acce59:;
			{
				return 0LL;;
			}
		}
		_match_end_1b2acce04:;
	};
}



inline jule::U64 _1ad3807dd_AsU64(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b2acd8c7:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b2ace7da:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b2ace851:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b2acd6da:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b2acd685:;
	};
}



inline jule::F64 _1ad380a74_AsF64(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b2ad15ab:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b2ad0159:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b2ad106c:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1b2acee6c:;
			{
				return 0LL;;
			}
		}
		_match_end_1b2acee17:;
	};
}



inline void _1ad380d2c_SetI64(_1ad37cdb2_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1ad3810d5_SetU64(_1ad37cdb2_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1ad38138d_SetBool(_1ad37cdb2_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1ad381646_SetStr(_1ad37cdb2_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1ad3818ee_SetF64(_1ad37cdb2_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline jule::Bool _1ad381d83_IsI64(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b2ad4ceb:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2ad5082:;
			{
				return false;;
			}
		}
		_match_end_1b2ad502c:;
	};
}



inline jule::Bool _1ad382119_IsU64(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b2ad56e2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2ad5945:;
			{
				return false;;
			}
		}
		_match_end_1b2ad58e0:;
	};
}



inline jule::Bool _1ad3823a0_IsBool(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b2ad614e:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2ad63a2:;
			{
				return false;;
			}
		}
		_match_end_1b2ad634c:;
	};
}



inline jule::Bool _1ad382636_IsStr(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b2ad6aab:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2ad6d0e:;
			{
				return false;;
			}
		}
		_match_end_1b2ad6ca9:;
	};
}



inline jule::Bool _1ad3828bc_IsF64(_1ad37cdb2_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b2ad7518:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2ad776b:;
			{
				return false;;
			}
		}
		_match_end_1b2ad7716:;
	};
}



inline jule::Bool _1ad382b53_IsNil(_1ad37cdb2_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1ad3832d5_And(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _23818_x) {
	{
		
		if ((_1ad3823a0_IsBool(_self_) && _1ad3823a0_IsBool(&_23818_x))) {
			_case_begin_1b2adba6c:;
			{
				return (_1ad37eca4_ReadBool(_self_) && _1ad37eca4_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1b2adb9b2:;
			{
				return false;;
			}
		}
		_match_end_1b2adb5c7:;
	};
}



inline jule::Bool _1ad383626_Or(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _24917_x) {
	{
		
		if ((_1ad3823a0_IsBool(_self_) && _1ad3823a0_IsBool(&_24917_x))) {
			_case_begin_1b2adcd7b:;
			{
				return (_1ad37eca4_ReadBool(_self_) || _1ad37eca4_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1b2adc51d:;
			{
				return false;;
			}
		}
		_match_end_1b2adc474:;
	};
}



inline jule::Bool _1ad383967_Eq(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _26017_x) {
	{
		
		if (_1ad382b53_IsNil(_self_)) {
			_case_begin_1b2ade1ac:;
			{
				return _1ad382b53_IsNil(&_26017_x);;
			}
		}
		else if (_1ad3823a0_IsBool(_self_)) {
			_case_begin_1b2ade234:;
			{
				return (_1ad3823a0_IsBool(&_26017_x) && (_1ad37eca4_ReadBool(_self_) == _1ad37eca4_ReadBool(&_26017_x)));;
			}
		}
		else if (_1ad382636_IsStr(_self_)) {
			_case_begin_1b2ade4a9:;
			{
				return (_1ad382636_IsStr(&_26017_x) && (_1ad38003a_ReadStr(_self_) == _1ad38003a_ReadStr(&_26017_x)));;
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2ade520:;
			{
				return (_1ad37e787_ReadI64(_self_) == _1ad380557_AsI64(&_26017_x));;
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2ade586:;
			{
				return (_1ad37ea1d_ReadU64(_self_) == _1ad3807dd_AsU64(&_26017_x));;
			}
		}
		else if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2ade5ec:;
			{
				return (_1ad3802c1_ReadF64(_self_) == _1ad380a74_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1b2add7e9:;
			{
				return false;;
			}
		}
		_match_end_1b2add750:;
	};
}



inline jule::Bool _1ad383ca8_Lt(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _28717_x) {
	{
		
		if (_1ad382636_IsStr(_self_)) {
			_case_begin_1b2ae2d70:;
			{
				return (_1ad382636_IsStr(&_28717_x) && (_1ad38003a_ReadStr(_self_) < _1ad38003a_ReadStr(&_28717_x)));;
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2ae2dd6:;
			{
				return (_1ad37e787_ReadI64(_self_) < _1ad380557_AsI64(&_28717_x));;
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2ae2e5d:;
			{
				return (_1ad37ea1d_ReadU64(_self_) < _1ad3807dd_AsU64(&_28717_x));;
			}
		}
		else if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2ae318e:;
			{
				return (_1ad3802c1_ReadF64(_self_) < _1ad380a74_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1b2adea92:;
			{
				return false;;
			}
		}
		_match_end_1b2ade9c6:;
	};
}



inline jule::Bool _1ad3840e9_LtEq(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _31019_x) {
	{
		
		if (_1ad382636_IsStr(_self_)) {
			_case_begin_1b2ae5a32:;
			{
				return (_1ad382636_IsStr(&_31019_x) && (_1ad38003a_ReadStr(_self_) <= _1ad38003a_ReadStr(&_31019_x)));;
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2ae5a98:;
			{
				return (_1ad37e787_ReadI64(_self_) <= _1ad380557_AsI64(&_31019_x));;
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2ae5b20:;
			{
				return (_1ad37ea1d_ReadU64(_self_) <= _1ad3807dd_AsU64(&_31019_x));;
			}
		}
		else if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2ae5d51:;
			{
				return (_1ad3802c1_ReadF64(_self_) <= _1ad380a74_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1b2ae36cd:;
			{
				return false;;
			}
		}
		_match_end_1b2ae3612:;
	};
}



inline jule::Bool _1ad38443a_Gt(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _33317_x) {
	{
		
		if (_1ad382636_IsStr(_self_)) {
			_case_begin_1b2ae86e4:;
			{
				return (_1ad382636_IsStr(&_33317_x) && (_1ad38003a_ReadStr(_self_) > _1ad38003a_ReadStr(&_33317_x)));;
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2ae875a:;
			{
				return (_1ad37e787_ReadI64(_self_) > _1ad380557_AsI64(&_33317_x));;
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2ae87d2:;
			{
				return (_1ad37ea1d_ReadU64(_self_) > _1ad3807dd_AsU64(&_33317_x));;
			}
		}
		else if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2ae8a13:;
			{
				return (_1ad3802c1_ReadF64(_self_) > _1ad380a74_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1b2ae6390:;
			{
				return false;;
			}
		}
		_match_end_1b2ae62c4:;
	};
}



inline jule::Bool _1ad38477b_GtEq(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _35619_x) {
	{
		
		if (_1ad382636_IsStr(_self_)) {
			_case_begin_1b2aeb3a6:;
			{
				return (_1ad382636_IsStr(&_35619_x) && (_1ad38003a_ReadStr(_self_) >= _1ad38003a_ReadStr(&_35619_x)));;
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2aeb41c:;
			{
				return (_1ad37e787_ReadI64(_self_) >= _1ad380557_AsI64(&_35619_x));;
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2aeb494:;
			{
				return (_1ad37ea1d_ReadU64(_self_) >= _1ad3807dd_AsU64(&_35619_x));;
			}
		}
		else if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2aeb6c5:;
			{
				return (_1ad3802c1_ReadF64(_self_) >= _1ad380a74_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1b2ae9052:;
			{
				return false;;
			}
		}
		_match_end_1b2ae8e86:;
	};
}



inline jule::Bool _1ad384abc_Add(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _37722_x) {
	{
		
		if (_1ad382636_IsStr(_self_)) {
			_case_begin_1b2aee068:;
			{
				if ((!(_1ad382636_IsStr(&_37722_x)))) {
					return false;;
				};
				_1ad381646_SetStr(_self_, (_1ad38003a_ReadStr(_self_) + _1ad38003a_ReadStr(&_37722_x)));
			}
		}
		else if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2aee0ce:;
			{
				_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad3802c1_ReadF64(_self_) + _1ad380a74_AsF64(&_37722_x))));
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2aee156:;
			{
				if (_1ad3828bc_IsF64(&_37722_x)) {
					_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad380a74_AsF64(_self_) + _1ad3802c1_ReadF64(&_37722_x))));
				} else {
					_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_1ad37e787_ReadI64(_self_) + _1ad380557_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2aee387:;
			{
				if (_1ad3828bc_IsF64(&_37722_x)) {
					_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad380a74_AsF64(_self_) + _1ad3802c1_ReadF64(&_37722_x))));
				} else {
					_1ad3810d5_SetU64(_self_, static_cast<jule::U64>((_1ad37ea1d_ReadU64(_self_) + _1ad3807dd_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1b2aebc14:;
			{
				return false;;
			}
		}
		_match_end_1b2aebb48:;
	};
	return true;;
}



inline jule::Bool _1ad384e0d_Sub(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _40622_x) {
	{
		
		if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2b03e91:;
			{
				_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad3802c1_ReadF64(_self_) - _1ad380a74_AsF64(&_40622_x))));
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b04018:;
			{
				if (_1ad3828bc_IsF64(&_40622_x)) {
					_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad380a74_AsF64(_self_) - _1ad3802c1_ReadF64(&_40622_x))));
				} else {
					_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_1ad37e787_ReadI64(_self_) - _1ad380557_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b04090:;
			{
				if (_1ad3828bc_IsF64(&_40622_x)) {
					_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad380a74_AsF64(_self_) - _1ad3802c1_ReadF64(&_40622_x))));
				} else {
					_1ad3810d5_SetU64(_self_, static_cast<jule::U64>((_1ad37ea1d_ReadU64(_self_) - _1ad3807dd_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1b2b03765:;
			{
				return false;;
			}
		}
		_match_end_1b2b03699:;
	};
	return true;;
}



inline jule::Bool _1ad38524e_Mul(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _43022_x) {
	{
		
		if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2b0803e:;
			{
				_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad3802c1_ReadF64(_self_) * _1ad380a74_AsF64(&_43022_x))));
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b080b6:;
			{
				if (_1ad3828bc_IsF64(&_43022_x)) {
					_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad380a74_AsF64(_self_) * _1ad3802c1_ReadF64(&_43022_x))));
				} else {
					_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_1ad37e787_ReadI64(_self_) * _1ad380557_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b0813d:;
			{
				if (_1ad3828bc_IsF64(&_43022_x)) {
					_1ad3818ee_SetF64(_self_, static_cast<jule::F64>((_1ad380a74_AsF64(_self_) * _1ad3802c1_ReadF64(&_43022_x))));
				} else {
					_1ad3810d5_SetU64(_self_, static_cast<jule::U64>((_1ad37ea1d_ReadU64(_self_) * _1ad3807dd_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1b2b076c0:;
			{
				return false;;
			}
		}
		_match_end_1b2b07604:;
	};
	return true;;
}



inline jule::Bool _1ad385590_Div(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _45822_x) {
	{
		
		if (_1ad3828bc_IsF64(_self_)) {
			_case_begin_1b2b0c0dc:;
			{
				jule::F64 _46117_l = _1ad380a74_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1ad3818ee_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ad3802c1_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b0c164:;
			{
				jule::F64 _46717_l = _1ad380a74_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1ad3818ee_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ad380a74_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b0c1db:;
			{
				jule::F64 _47317_l = _1ad380a74_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1ad3818ee_SetF64(_self_, static_cast<jule::F64>(jule::div(_1ad380a74_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1b2b0b76d:;
			{
				return false;;
			}
		}
		_match_end_1b2b0b6a2:;
	};
	return true;;
}



inline jule::Bool _1ad3858d1_Mod(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _48722_x) {
	{
		
		if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b112bc:;
			{
				jule::I64 _49017_l = _1ad380557_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1ad380d2c_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1ad37e787_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b11344:;
			{
				jule::U64 _49617_l = _1ad3807dd_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1ad3810d5_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1ad37ea1d_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1b2b11212:;
			{
				return false;;
			}
		}
		_match_end_1b2b0edd1:;
	};
	return true;;
}



inline jule::Bool _1ad385c22_BitwiseAnd(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _50929_x) {
	{
		
		if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b141e3:;
			{
				_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_1ad37e787_ReadI64(_self_) & _1ad380557_AsI64(&_50929_x))));
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b1426a:;
			{
				_1ad3810d5_SetU64(_self_, static_cast<jule::U64>((_1ad37ea1d_ReadU64(_self_) & _1ad3807dd_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1b2b14138:;
			{
				return false;;
			}
		}
		_match_end_1b2b12d07:;
	};
	return true;;
}



inline jule::Bool _1ad386063_BitwiseOr(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _52328_x) {
	{
		
		if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b1606e:;
			{
				_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_1ad37e787_ReadI64(_self_) | _1ad380557_AsI64(&_52328_x))));
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b160e6:;
			{
				_1ad3810d5_SetU64(_self_, static_cast<jule::U64>((_1ad37ea1d_ReadU64(_self_) | _1ad3807dd_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1b2b15ea3:;
			{
				return false;;
			}
		}
		_match_end_1b2b15dd7:;
	};
	return true;;
}



inline jule::Bool _1ad3863a4_Xor(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _53722_x) {
	{
		
		if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b17dea:;
			{
				_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_1ad37e787_ReadI64(_self_) ^ _1ad380557_AsI64(&_53722_x))));
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b17e72:;
			{
				_1ad3810d5_SetU64(_self_, static_cast<jule::U64>((_1ad37ea1d_ReadU64(_self_) ^ _1ad3807dd_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1b2b17d2e:;
			{
				return false;;
			}
		}
		_match_end_1b2b17c63:;
	};
	return true;;
}



inline jule::Bool _1ad3866e5_Lshift(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _55125_x) {
	{
		
		if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b19c76:;
			{
				jule::I64 _55417_l = _1ad380557_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1ad3807dd_AsU64(&_55125_x);;
					_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1ad386dcc_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b19ced:;
			{
				_1ad386dcc_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1b2b19baa:;
			{
				return false;;
			}
		}
		_match_end_1b2b19ade:;
	};
	return true;;
}



inline jule::Bool _1ad386a36_Rshift(_1ad37cdb2_Const* _self_, _1ad37cdb2_Const _57125_x) {
	{
		
		if (_1ad381d83_IsI64(_self_)) {
			_case_begin_1b2b1c350:;
			{
				jule::I64 _57417_l = _1ad380557_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1ad3807dd_AsU64(&_57125_x);;
					_1ad380d2c_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1ad38720c_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1ad382119_IsU64(_self_)) {
			_case_begin_1b2b1c3c7:;
			{
				_1ad38720c_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1b2b1c284:;
			{
				return false;;
			}
		}
		_match_end_1b2b1c1b8:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1ad37cdb2_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0487184_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0488163_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04884b5_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c1ba2_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c22ac_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c25a9_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c2950_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c2c4c_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c30d2_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c33ce_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04c3a3e_IsUnsafe(_1b04c36cb_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c36cb_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04c42d1_AutoSized(_1b04c3e6d_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c3e6d_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c46bb_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c4a95_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c5ed6_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c62d3_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c68aa_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c6ba7_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c7081_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c745a_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c7911_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c8093_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c846c_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c8846_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c8c20_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c91c6_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c967c_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04ca161_Unhandled(_1b04c9cdc_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1b04ca3e7_Ignored(_1b04c9cdc_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04c9cdc_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ca7d2_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cb10c_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cb5b3_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cbddd_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cc5d6_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cd076_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cd6d6_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cd9d3_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cde89_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ce363_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ce73c_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04cea39_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d0199_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d072c_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d1640_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d1ca0_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04d2861_IsSelf(_1b04d24dc_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d24dc_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04d3ca2_IsAnon(_1b04d393e_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d393e_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d4a1c_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d4de6_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04d58ec_IsInf(_1b04d5589_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d5589_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b04d6227_IsWhileNext(_1b04d5db4_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d5db4_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d67bb_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d6b95_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d706e_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d7525_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d78ee_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d7da5_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d85e2_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d8a98_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d92d5_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04d9aee_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04da0a5_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04dab66_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04db491_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04dbb01_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04dbdba_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04dc7b1_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04dceed_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04dd65d_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b04e4da1_FieldIns> _1b04ded02_instance(jule::Ptr<_1b04de97d_Field> _self_) {
	return jule::new_ptr<_1b04e4da1_FieldIns>(_1b04e4da1_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04de97d_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04e195d_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b04e5951_StructIns> _1b04e2ce4_instance(jule::Ptr<_1b04e2871_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1b04e5951_StructIns> _10017_ins = jule::new_ptr<_1b04e5951_StructIns>(_1b04e5951_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1b04e4da1_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1b05ae1bd_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1b050ec9a_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3038bcd:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _10721_s = *it;
			{
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _10017_ins.get()._field_Statics; __jule_push_dest.push(jule::new_ptr<_1b05ae1bd_Var>((*(_10721_s)))); };
			}
			_iter_next_1b3038bcd:;
			++it;
			goto _iter_begin_1b3038bcd;
		}
		_iter_end_1b3038bcd:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b303ab14:;
		if (it != expr_end) {
			jule::Ptr<_1b04de97d_Field> _11121_f = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04e4da1_FieldIns>> &__jule_push_dest = _10017_ins.get()._field_Fields; __jule_push_dest.push(_1b04ded02_instance(_11121_f)); };
				if ((((!(_11121_f.get()._field_Mutable)) && (_11121_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1b0649148_Mutable(_11121_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_10017_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1b303ab14:;
			++it;
			goto _iter_begin_1b303ab14;
		}
		_iter_end_1b303ab14:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_10017_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_10017_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1b05088ed_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b303cc04:;
			if (it != expr_end) {
				jule::Ptr<_1b05088ed_Fn> _12225_f = *it;
				{
					jule::Ptr<_1b05088ed_Fn> _12325_fins = jule::new_ptr<_1b05088ed_Fn>((*(_12225_f)));;
					_12325_fins.get()._field_Instances=nullptr;
					{ jule::Slice<jule::Ptr<_1b05088ed_Fn>> &__jule_push_dest = _10017_ins.get()._field_Methods; __jule_push_dest.push(_12325_fins); };
				}
				_iter_next_1b303cc04:;
				++it;
				goto _iter_begin_1b303cc04;
			}
			_iter_end_1b303cc04:;
		};
	};
	return _10017_ins;;
}



inline jule::Ptr<_1b04e5951_StructIns> _1b04e3102_appendInstance(_1b04e2871_Struct* _self_, jule::Ptr<_1b04e5951_StructIns>* _13438_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b303e82c:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _14021_ains = *it;
			{
				if (_1b04e65bc_Same(_14021_ains.ptr(), (*(_13438_ins)))) {
					return _14021_ains;;
				};
			}
			_iter_next_1b303e82c:;
			++it;
			goto _iter_begin_1b303e82c;
		}
		_iter_end_1b303e82c:;
	};
	{ jule::Slice<jule::Ptr<_1b04e5951_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13438_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1b05088ed_Fn> _1b04e34ed_FindMethod(_1b04e2871_Struct* _self_, jule::Str _15229_ident, jule::Bool _15241_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30413ab:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _15321_f = *it;
			{
				if (((_15321_f.get()._field_Statically == _15241_statically) && (_15321_f.get()._field_Ident == _15229_ident))) {
					return _15321_f;;
				};
			}
			_iter_next_1b30413ab:;
			++it;
			goto _iter_begin_1b30413ab;
		}
		_iter_end_1b30413ab:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b04e383e_FindStatic(_1b04e2871_Struct* _self_, jule::Str _16329_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30412bd:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _16421_v = *it;
			{
				if ((_16421_v.get()._field_Ident == _16329_ident)) {
					return _16421_v;;
				};
			}
			_iter_next_1b30412bd:;
			++it;
			goto _iter_begin_1b30412bd;
		}
		_iter_end_1b30412bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b04de97d_Field> _1b04e3b80_FindField(_1b04e2871_Struct* _self_, jule::Str _17428_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30433ad:;
		if (it != expr_end) {
			jule::Ptr<_1b04de97d_Field> _17521_f = *it;
			{
				if ((_17521_f.get()._field_Ident == _17428_ident)) {
					return _17521_f;;
				};
			}
			_iter_next_1b30433ad:;
			++it;
			goto _iter_begin_1b30433ad;
		}
		_iter_end_1b30433ad:;
	};
	return nullptr;;
}



inline jule::Bool _1b04e3ec1_IsImplements(_1b04e2871_Struct* _self_, jule::Ptr<_1b051bb97_Trait> _18427_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b304429e:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> *_18516_it = it;
			{
				if ((_18427_t == (*(_18516_it)))) {
					return true;;
				};
			}
			_iter_next_1b304429e:;
			++it;
			goto _iter_begin_1b304429e;
		}
		_iter_end_1b304429e:;
	};
	return false;;
}



inline jule::Bool _1b04e4312_IsDerives(_1b04e2871_Struct* _self_, jule::Str _19424_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3045080:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> *_19516_d = it;
			{
				if ((*(_19516_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19516_d)).get()._field_Args.len() == 1LL) && ((*(_19516_d)).get()._field_Args[0LL].get()._field_Kind == _19424_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1b3045080:;
			++it;
			goto _iter_begin_1b3045080;
		}
		_iter_end_1b3045080:;
	};
	return false;;
}



inline jule::Bool _1b04e4653_IsUses(_1b04e2871_Struct* _self_, jule::Ptr<_1b04e2871_Struct> _20621_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30457ab:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> *_20716_u = it;
			{
				while ((_20621_s == (*(_20716_u)))) {
					{
						return true;;
					}
				_iter_next_1b3047439:;
				}
				_iter_end_1b3047439:;;
			}
			_iter_next_1b30457ab:;
			++it;
			goto _iter_begin_1b30457ab;
		}
		_iter_end_1b30457ab:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04e2871_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04e4da1_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04e9a32_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ea02c_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ea406_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ea934_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04eacca_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04eb0c7_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04eb65a_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ec00c_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ec3d6_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ec88c_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ecc66_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ed140_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ed5e6_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04edb79_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04ee20c_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04eea9d_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0500054_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050042d_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050072a_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0500cad_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05010aa_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0501484_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050185d_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0501b5a_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0502034_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050240d_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05028b4_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0502d6a_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0503244_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0503541_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050383d_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0503eae_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0504223_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05045ec_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05048e9_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0504be6_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0504ee3_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05052e0_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05056b9_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05059b6_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0506698_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b050a856_ParamIns> _1b05072ae_instance(jule::Ptr<_1b0506e29_Param> _self_) {
	return jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1b0507545_IsSelf(_1b0506e29_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1b05077cb_IsRef(_1b0506e29_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0506e29_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b0508d71_IsVoid(_1b05088ed_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1b0509107_IsMethod(_1b05088ed_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1b050938d_IsEntryPoint(_1b05088ed_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1b0509624_IsInit(_1b05088ed_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1b05098aa_IsAnon(_1b05088ed_Fn* _self_) {
	return _1aa49de09_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1b0509b41_AnyVar(_1b05088ed_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1b050b802_FnIns> _1b0509dc7_instanceForce(jule::Ptr<_1b05088ed_Fn> _self_) {
	jule::Ptr<_1b050b802_FnIns> _10117_ins = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1b0549048_Scope>(), ._field_Refers=static__1b050ec9a_new(), });;
	_10117_ins.get()._field_Params=jule::Slice<jule::Ptr<_1b050a856_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b305b371:;
		if (it != expr_end) {
			jule::Ptr<_1b0506e29_Param> _10821_p = *it;
			{
				{ jule::Slice<jule::Ptr<_1b050a856_ParamIns>> &__jule_push_dest = _10117_ins.get()._field_Params; __jule_push_dest.push(_1b05072ae_instance(_10821_p)); };
			}
			_iter_next_1b305b371:;
			++it;
			goto _iter_begin_1b305b371;
		}
		_iter_end_1b305b371:;
	};
	if ((_10117_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10117_ins.get()._field_Result=_10117_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10117_ins;;
}



inline jule::Ptr<_1b050b802_FnIns> _1b050a15d_instance(jule::Ptr<_1b05088ed_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1b0509dc7_instanceForce(_self_);;
}



inline jule::Ptr<_1b050b802_FnIns> _1b050a46b_appendInstance(_1b05088ed_Fn* _self_, jule::Ptr<_1b050b802_FnIns>* _12938_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3060919:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _14521_ains = *it;
			{
				if (_1b050d35e_Same(_14521_ains.ptr(), (*(_12938_ins)))) {
					return _14521_ains;;
				};
			}
			_iter_next_1b3060919:;
			++it;
			goto _iter_begin_1b3060919;
		}
		_iter_end_1b3060919:;
	};
	{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_12938_ins))); };
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05088ed_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b050abb9_Str(_1b050a856_ParamIns* _self_) {
	_1aa364275_StrBuilder _16717_s = static__1aa364594_New(32LL);;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		_1aa36d03c_WriteStr(&_16717_s, jule::Str("mut ", 4));
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		_1aa36d03c_WriteStr(&_16717_s, jule::Str("&_:", 3));
	};
	if (_1b0507545_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1b05077cb_IsRef((*(_self_))._field_Decl.ptr())) {
			_1aa36d2e5_WriteByte(&_16717_s, '&');
		};
		_1aa36d03c_WriteStr(&_16717_s, jule::Str("self", 4));
		return _1aa36d834_Str(&_16717_s);;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		_1aa36d03c_WriteStr(&_16717_s, jule::Str("...", 3));
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_1aa36d03c_WriteStr(&_16717_s, _1b0647b6e_Str((*(_self_))._field_Kind.ptr()));
	};
	return _1aa36d834_Str(&_16717_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050a856_ParamIns _Src) {
	_Stream << _1b050abb9_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b050bb43_Str(_1b050b802_FnIns* _self_) {
	;
	return _1b050d6a0_GetKindStr(_self_, false);;
}



inline jule::Bool _1b050be84_Equal(jule::Ptr<_1b050b802_FnIns> _self_, jule::Ptr<_1b06477a6_TypeKind> _21821_other) {
	jule::Ptr<_1b050b802_FnIns> _21913_f = _1b064b48b_Fn(_21821_other.ptr());;
	if ((_21913_f == nullptr)) {
		return false;;
	};
	return _1b050c429_EqualFn(_self_, &(_21913_f));;
}



inline jule::Bool _1b050c429_EqualFn(jule::Ptr<_1b050b802_FnIns> _self_, jule::Ptr<_1b050b802_FnIns>* _22924_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22924_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22924_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1b0508d71_IsVoid(_self_.get()._field_Decl.ptr()) != _1b0508d71_IsVoid((*(_22924_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1b050a856_ParamIns>,jule::Ptr<_1b050a856_ParamIns>)> _23913_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1b050a856_ParamIns>,jule::Ptr<_1b050a856_ParamIns>)>([=](jule::Ptr<_1b050a856_ParamIns> _23930_p1, jule::Ptr<_1b050a856_ParamIns> _23945_p2) mutable -> jule::Bool {
		if ((_23930_p1.get()._field_Decl.get()._field_Mutable != _23945_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1b0507545_IsSelf(_23930_p1.get()._field_Decl.ptr())) {
			if ((!(_1b0507545_IsSelf(_23945_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1b05077cb_IsRef(_23930_p1.get()._field_Decl.ptr()) != _1b05077cb_IsRef(_23945_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23930_p1.get()._field_Decl.get()._field_Reference != _23945_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23930_p1.get()._field_Decl.get()._field_Variadic != _23945_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1b0647eb0_Equal(_23930_p1.get()._field_Kind, _23945_p2.get()._field_Kind);;
	});;
	if (((*(_22924_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27117_i = 0LL;;
	for (; (_27117_i < _self_.get()._field_Params.len()); (_27117_i)++) {
		{
			if ((!(_23913_checkParams(_self_.get()._field_Params[_27117_i], (*(_22924_f)).get()._field_Params[_27117_i])))) {
				return false;;
			};
		}
	_iter_next_1b306d65d:;
	}
	_iter_end_1b306d65d:;;
	if ((!(_1b0508d71_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1b0647eb0_Equal(_self_.get()._field_Result, (*(_22924_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1b050c76a_equalTrait(jule::Ptr<_1b050b802_FnIns> _self_, jule::Ptr<_1b050b802_FnIns>* _28827_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28827_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28827_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1b050c429_EqualFn(_self_, _28827_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28827_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _1b050ca01_Types(_1b050b802_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b30725b8:;
			{
				return nullptr;;
			}
		}
		else if ((_1b064bec5_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b307262e:;
			{
				return jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1b3072552:;
			{
				return _1b064bec5_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1b3072486:;
	};
}



inline jule::Bool _1b050cc87_IsBuiltin(_1b050b802_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1b050d01d_IsAnon(_1b050b802_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1b05098aa_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1b050d35e_Same(_1b050b802_FnIns* _self_, jule::Ptr<_1b050b802_FnIns> _33119_f) {
	if ((((*(_self_))._field_Decl != _33119_f.get()._field_Decl) || (_33119_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3074e5b:;
		if (it != expr_end) {
			jule::I64 _33613_i = it - expr->begin();
			jule::Ptr<_1b0645dc0_InsGeneric> *_33616_g = it;
			{
				jule::Ptr<_1b0645dc0_InsGeneric> _33717_g2 = _33119_f.get()._field_Generics[_33613_i];;
				if ((((*(_33616_g)).get()._field_Kind.get()._field_BindIdent != _33717_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1b0647eb0_Equal((*(_33616_g)).get()._field_Kind, _33717_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b3074e5b:;
			++it;
			_33613_i++;
			goto _iter_begin_1b3074e5b;
		}
		_iter_end_1b3074e5b:;
	};
	return true;;
}



inline jule::Str _1b050d6a0_GetKindStr(_1b050b802_FnIns* _self_, jule::Bool _34825_ident) {
	_1aa364275_StrBuilder _34917_s = static__1aa364594_New(32LL);;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		_1aa36d03c_WriteStr(&_34917_s, jule::Str("unsafe ", 7));
	};
	_1aa36d03c_WriteStr(&_34917_s, jule::Str("fn", 2));
	if ((_34825_ident && ((*(_self_))._field_Decl != nullptr))) {
		_1aa36d2e5_WriteByte(&_34917_s, ' ');
		_1aa36d03c_WriteStr(&_34917_s, (*(_self_))._field_Decl.get()._field_Ident);
	};
	_1aa36d2e5_WriteByte(&_34917_s, '(');
	jule::I64 _36313_n = (*(_self_))._field_Params.len();;
	if ((_36313_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b307a093:;
			if (it != expr_end) {
				jule::I64 _36517_i = it - expr->begin();
				jule::Ptr<_1b050a856_ParamIns> *_36520_p = it;
				{
					_1aa36d03c_WriteStr(&_34917_s, _1b050abb9_Str((*(_36520_p)).ptr()));
					if ((_36517_i < ((*(_self_))._field_Params.len() - 1LL))) {
						_1aa36d2e5_WriteByte(&_34917_s, ',');
					};
				}
				_iter_next_1b307a093:;
				++it;
				_36517_i++;
				goto _iter_begin_1b307a093;
			}
			_iter_end_1b307a093:;
		};
	};
	_1aa36d2e5_WriteByte(&_34917_s, ')');
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		_1aa36d2e5_WriteByte(&_34917_s, '!');
	};
	if ((!(_1b0508d71_IsVoid((*(_self_))._field_Decl.ptr())))) {
		_1aa36d2e5_WriteByte(&_34917_s, ':');
		_1aa36d03c_WriteStr(&_34917_s, _1b0647b6e_Str((*(_self_))._field_Result.ptr()));
	};
	return _1aa36d834_Str(&_34917_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050b802_FnIns _Src) {
	_Stream << _1b050bb43_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b050e99d_ReferenceStack> static__1b050ec9a_new(void) {
	return jule::new_ptr<_1b050e99d_ReferenceStack>(_1b050e99d_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1b0510196_Len(_1b050e99d_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1b05104d7_At(_1b050e99d_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1b0510790_Push(_1b050e99d_ReferenceStack* _self_, jule::Any _7327_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_7327_ref); };
}



inline jule::Bool _1b38abcd1_Exist(_1b050e99d_ReferenceStack* _self_, jule::Ptr<_1b050b802_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b38aced0:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b38aced0:;
			++it;
			goto _iter_begin_1b38aced0;
		}
		_iter_end_1b38aced0:;
	};
	return false;;
}

inline jule::Bool _1b38c1a3d_Exist(_1b050e99d_ReferenceStack* _self_, jule::Ptr<_1b05ae1bd_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b38c2be8:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b38c2be8:;
			++it;
			goto _iter_begin_1b38c2be8;
		}
		_iter_end_1b38c2be8:;
	};
	return false;;
}

inline jule::Bool _1b395c700_Exist(_1b050e99d_ReferenceStack* _self_, jule::Ptr<_1b04e5951_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b395d8ee:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b395d8ee:;
			++it;
			goto _iter_begin_1b395d8ee;
		}
		_iter_end_1b395d8ee:;
	};
	return false;;
}

inline jule::Bool _1b406ac53_Exist(_1b050e99d_ReferenceStack* _self_, jule::Ptr<_1b051bb97_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b406bddb:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b406bddb:;
			++it;
			goto _iter_begin_1b406bddb;
		}
		_iter_end_1b406bddb:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b050e99d_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0510ebb_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline void _1b0516422_pushErr(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1aa49b1d1_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	{ jule::Slice<_1aa3c3a21_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b05891a9_compilerErr(_33227_token, true, _33242_fmt, _33255_args)); };
}



inline void _1b0516ba3_pushSuggestion(_1b0515a81_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1b058a6d8_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1b051709e_checkCppUseDeclPath(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _34539_decl, jule::Str* _34556_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _1aa371958_Ext((*(_34556_path)));;
	if (((!(_1aa3b69ae_IsValidHeaderExt(_34613_ext))) && (!(_1aa3b6c78_IsValidCppExt(_34613_ext))))) {
		_1b0516422_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1ba10e681_Status> _35313_info = ({
		auto except = static__1ba10193c_Of((*(_34556_path)));
		(except.ok()) ? (except.result) : ({{
			_1b0516422_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_1ba10e681_Status>(nullptr);});
	});;
	if (_1ba10ea5a_IsDir(_35313_info.ptr())) {
		_1b0516422_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b05173ac_buildCppHeaderImport(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_1aa3b6706_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_1aa37168e_Join(jule::Slice<jule::Str>::make({_1aa4a211b_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1b051709e_checkCppUseDeclPath(_self_, _36544_decl, &(_36617_path));;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1aa371c22_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1b0516422_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1b056a487_ImportInfo>(_1b056a487_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b05176ed_buildStdImport(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_1aa355a08_Replace(_39417_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_39417_path=_1aa37168e_Join(jule::Slice<jule::Str>::make({_1aa6405ea_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1aa371c22_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1b0516422_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ba10e681_Status> _40413_info = ({
		auto except = static__1ba10193c_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1b0516422_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_1ba10e681_Status>(nullptr);});
	});;
	if ((!(_1ba10ea5a_IsDir(_40413_info.ptr())))) {
		_1b0516422_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_1aa350d88_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1b056a487_ImportInfo>(_1b056a487_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1b056d3ad_Package>(_1b056d3ad_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b0517a3e_buildIdentImport(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b04d9aee_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b05665d7_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1b0516422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1b0516ba3_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_1aa355a08_Replace(_44017_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_44017_path=_1aa37168e_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1aa371c22_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1b0516422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ba10e681_Status> _45113_info = ({
		auto except = static__1ba10193c_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1b0516422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_1ba10e681_Status>(nullptr);});
	});;
	if ((!(_1ba10ea5a_IsDir(_45113_info.ptr())))) {
		_1b0516422_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_1aa350d88_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1b056a487_ImportInfo>(_1b056a487_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1b056d3ad_Package>(_1b056d3ad_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b0517d80_buildImport(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b04d9aee_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1b30ae10a:;
			{
				return _1b05173ac_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1b30ad9bc:;
			{
				return _1b05176ed_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1b30ad956:;
			{
				return _1b0517a3e_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1b30ad88a:;
	};
}



inline jule::Bool _1b05181c1_checkDuplicateUseDecl(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b056a487_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b056a487_ImportInfo> _49213_lpkg = _1b060c936_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>([=](jule::Ptr<_1b056a487_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1b0516422_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1b0516ba3_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1b0518534_implImportSelections(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b056a487_ImportInfo>* _50444_imp, jule::Ptr<_1b04d9aee_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30b2839:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b30b3285:;
					if (it != expr_end) {
						jule::Ptr<_1aa49b1d1_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1b30b3285;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1b0516422_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1b0516ba3_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1b30b3285;
							};
						}
						_iter_next_1b30b3285:;
						++it;
						goto _iter_begin_1b30b3285;
					}
					_iter_end_1b30b3285:;
				};
			}
			_iter_next_1b30b2839:;
			++it;
			goto _iter_begin_1b30b2839;
		}
		_iter_end_1b30b2839:;
	};
}



inline jule::Str _1b0518875_getAsLinkPath(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_1aa34e42a_HasPrefix(_51937_path, _1aa6405ea_PathStdlib)) {
		(_51937_path).mut_slice(_1aa6405ea_PathStdlib.len());;
		return (jule::Str("std", 3) + _1aa355a08_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1aa371c22_Abs(_1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b05665d7_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _1aa355a08_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL);;
}



inline void _1b0518c93_pushCycleError(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b0515a81_symbolBuilder>* _53335_sb, jule::Str _53355_path, _1aa364275_StrBuilder* _53371_message) {
	;
	jule::Str _53513_refersTo = _1aa3c3e83_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1b0518875_getAsLinkPath(_self_, _1aa4a211b_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1b0518875_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	jule::Slice<jule::U8> _53913_buf = _1aa36e2d5_Buf(_53371_message);;
	_1aa36d03c_WriteStr(_53371_message, _1aa34db33_Repeat(jule::Str(" ", 1), 7LL));
	_1aa36d03c_WriteStr(_53371_message, _53513_refersTo);
	_1aa36d2e5_WriteByte(_53371_message, '\n');
	_1aa36cc84_Write(_53371_message, _53913_buf);
}



inline void _1b05191b1_pushCrossCycleError(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b0515a81_symbolBuilder>* _54640_target, jule::Ptr<_1b056a487_ImportInfo>* _54665_imp, jule::Ptr<_1aa49b1d1_Token>* _54684_errorToken) {
	_1aa364275_StrBuilder _54717_message = static__1aa364594_New(32LL);;
	_1b0518c93_pushCycleError(_self_, &(_self_), (*(_54665_imp)).get()._field_Path, &(_54717_message));
	jule::Ptr<_1b0515a81_symbolBuilder> _55117_owner = _self_.get()._field_owner;;
	jule::Ptr<_1b0515a81_symbolBuilder> _55217_old = _self_;;
	while ((_55117_owner.get()._field_owner != nullptr)) {
		{
			_1b0518c93_pushCycleError(_self_, &(_55217_old.get()._field_owner), _1aa4a211b_Dir(_55217_old.get()._field_table.get()._field_File.ptr()), &(_54717_message));
			if ((_55117_owner.get()._field_owner == (*(_54640_target)))) {
				_1b0518c93_pushCycleError(_self_, _54640_target, _1aa4a211b_Dir(_55117_owner.get()._field_table.get()._field_File.ptr()), &(_54717_message));
				goto _iter_end_1b30ba468;
			};
			_55217_old=_55117_owner;
			_55117_owner=_55117_owner.get()._field_owner;
		}
	_iter_next_1b30ba468:;
	}
	_iter_end_1b30ba468:;;
	_1b0516422_pushErr(_self_.ptr(), _54684_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_1aa36d834_Str(&_54717_message), &__jule_any_type5)}));
}



inline jule::Bool _1b05195ac_checkImportCycles(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b056a487_ImportInfo> _56937_imp, jule::Ptr<_1b04d9aee_UseDecl>* _56956_decl) {
	if ((_56937_imp.get()._field_Path == _1aa4a211b_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1b0516422_pushErr(_self_.ptr(), &((*(_56956_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1b0518875_getAsLinkPath(_self_, _56937_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_1aa4a211b_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56937_imp.get()._field_Path)) {
		_1b05191b1_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56937_imp), &((*(_56956_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1b0515a81_symbolBuilder> _58417_owner = _self_.get()._field_owner;;
	_julec_label_1b30be769:;
	if ((_1aa4a211b_Dir(_58417_owner.get()._field_table.get()._field_File.ptr()) == _56937_imp.get()._field_Path)) {
		_1b05191b1_pushCrossCycleError(_self_, &(_58417_owner), &(_56937_imp), &((*(_56956_decl)).get()._field_Token));
		return false;;
	};
	if ((_58417_owner.get()._field_owner != nullptr)) {
		_58417_owner=_58417_owner.get()._field_owner;
		goto _julec_label_1b30be769;
	};
	return true;;
}



inline void _1b05199ca_checkPackageAccessibility(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _60545_decl, jule::Str* _60562_mod, jule::Str* _60573_path) {
	if (((_1b0567572_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1b05665d7_GetModPath((*(_self_))._field_importer) != (*(_60562_mod))) && _1aa35462d_Contains((*(_60573_path)), jule::Str("internal", 8)))) {
		_1b0516422_pushErr(_self_, &((*(_60545_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b0519dc6_importPackage(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b056a487_ImportInfo>* _61138_imp, jule::Ptr<_1b04d9aee_UseDecl>* _61161_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_61138_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b056a487_ImportInfo> _61617_port = _1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0566c69_GetImport(_self_.get()._field_importer, (*(_61138_imp)).get()._field_Path);;
	if ((_61617_port != nullptr)) {
		(*(_61138_imp)).get()._field_Package=_61617_port.get()._field_Package;
		(*(_61138_imp)).get()._field_Duplicate=true;
		jule::Str _62117_oldMod = _1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b05665d7_GetModPath(_self_.get()._field_importer);;
		_1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0566351_SetModPath(_self_.get()._field_importer, _1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0566928_ModById(_self_.get()._field_importer, (*(_61138_imp)).get()._field_ModId));
		_1b05199ca_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_62117_oldMod), &(_61617_port.get()._field_Path));
		_1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0566351_SetModPath(_self_.get()._field_importer, _62117_oldMod);
	} else {
		if ((!(_1b05195ac_checkImportCycles(_self_, (*(_61138_imp)), _61161_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _63017_oldMod = _1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b05665d7_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0566351_SetModPath(_self_.get()._field_importer, _63017_oldMod);
		});;
		if ((*(_61138_imp)).get()._field_Std) {
			_1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0566351_SetModPath(_self_.get()._field_importer, _1aa6405ea_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1b0487184_Ast>> _63522_asts;;
		jule::Slice<_1aa3c3a21_Log> _63532_errors;;
		({
			__jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b0567165_ImportPackage(_self_.get()._field_importer, (*(_61138_imp)).get()._field_Path, (!((*(_61138_imp)).get()._field_Std)));
			_63522_asts = __jule_assign_result.__jule_result_arg0;
			_63532_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63532_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_63532_errors);;
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1b05199ca_checkPackageAccessibility(_self_.ptr(), _61161_decl, &(_63017_oldMod), &((*(_61138_imp)).get()._field_Path));
		{
			auto expr = &(_63522_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b30c970d:;
			if (it != expr_end) {
				jule::Ptr<_1b0487184_Ast> _64325_ast = *it;
				{
					jule::Ptr<_1b060c44c_SymbolTable> _64425_table = nullptr;;
					({
						__jule_tuple_x_1b060c44c_SymbolTable__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b0668376_buildSymbols(&(_64325_ast), &(_self_.get()._field_importer), _self_);
						_64425_table = __jule_assign_result.__jule_result_arg0;
						_63532_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63532_errors.len() > 0LL)) {
						(_self_.get()._field_errors).append(_63532_errors);;
						__jule_func_result = false;
						return __jule_func_result;;
					};
					{ jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>> &__jule_push_dest = (*(_61138_imp)).get()._field_Package.get()._field_Files; __jule_push_dest.push(_64425_table); };
				}
				_iter_next_1b30c970d:;
				++it;
				goto _iter_begin_1b30c970d;
			}
			_iter_end_1b30c970d:;
		};
	};
	_1b0518534_implImportSelections(_self_.ptr(), _61138_imp, _61161_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b051a217_importUseDecl(jule::Ptr<_1b0515a81_symbolBuilder> _self_, jule::Ptr<_1b04d9aee_UseDecl>* _65838_decl) {
	jule::Ptr<_1b056a487_ImportInfo> _65917_imp = _1b0517d80_buildImport(_self_, _65838_decl);;
	if ((_65917_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66517_ok = _1b05181c1_checkDuplicateUseDecl(_self_.ptr(), &(_65917_imp));;
	if ((!(_66517_ok))) {
		return nullptr;;
	};
	_66517_ok=_1b0519dc6_importPackage(_self_, &(_65917_imp), _65838_decl);
	{ jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> &__jule_push_dest = _self_.get()._field_table.get()._field_Imports; __jule_push_dest.push(_65917_imp); };
	if (_66517_ok) {
		_1b0567572_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1b056741d_Imported(_self_.get()._field_importer, _65917_imp);
		return _65917_imp;;
	};
	return nullptr;;
}



inline void _1b051a415_importUseDecls(jule::Ptr<_1b0515a81_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30cd5e1:;
		if (it != expr_end) {
			jule::Ptr<_1b04d9aee_UseDecl> _68021_decl = *it;
			{
				_1b051a217_importUseDecl(_self_, &(_68021_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1b30cd5e1;
				};
			}
			_iter_next_1b30cd5e1:;
			++it;
			goto _iter_begin_1b30cd5e1;
		}
		_iter_end_1b30cd5e1:;
	};
}



inline void _1b051a6bd_appendNode(_1b0515a81_symbolBuilder* _self_, _1b0488163_Node* _68934_node) {
	{
		auto &_match_expr{ (*(_68934_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b30d01a3:;
			{
				{ jule::Slice<jule::Ptr<_1b0543b14_Impl>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Impls; __jule_push_dest.push(_1b05154ba_buildImpl((*(_68934_node))._field_Data.cast_ptr<_1b04dd65d_Impl>(&__jule_any_type11))); };
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b30d0406:;
			{
				jule::Ptr<_1b06469b4_TypeAlias> _69421_ta = _1b0511906_buildTypeAlias((*(_68934_node))._field_Data.cast_ptr<_1b04d85e2_TypeAliasDecl>(&__jule_any_type12));;
				{ jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeAliases; __jule_push_dest.push(_69421_ta); };
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b30d046c:;
			{
				jule::Ptr<_1b04e2871_Struct> _69721_srct = _1b05122ca_buildStruct((*(_68934_node))._field_Data.cast_ptr<_1b04dc7b1_StructDecl>(&__jule_any_type13));;
				{ jule::Slice<jule::Ptr<_1b04e2871_Struct>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Structs; __jule_push_dest.push(_69721_srct); };
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b30d04d3:;
			{
				jule::Ptr<_1b05088ed_Fn> _70021_f = _1b0512ebd_buildFunc((*(_68934_node))._field_Data.cast_ptr<_1b04d393e_FnDecl>(&__jule_any_type14));;
				{ jule::Slice<jule::Ptr<_1b05088ed_Fn>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Funcs; __jule_push_dest.push(_70021_f); };
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b30d0549:;
			{
				jule::Ptr<_1b051bb97_Trait> _70321_t = _1b051381a_buildTrait((*(_68934_node))._field_Data.cast_ptr<_1b04dceed_TraitDecl>(&__jule_any_type15));;
				{ jule::Slice<jule::Ptr<_1b051bb97_Trait>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Traits; __jule_push_dest.push(_70321_t); };
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b30d0cb9:;
			{
				jule::Ptr<_1b05ae1bd_Var> _70621_v = _1b0514e37_buildVar((*(_68934_node))._field_Data.cast_ptr<_1b04d4a1c_VarDecl>(&__jule_any_type16));;
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_70621_v); };
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b30d0d30:;
			{
				jule::Ptr<_1b051e392_Enum> _70921_e = _1b0514321_buildEnum((*(_68934_node))._field_Data.cast_ptr<_1b04dab66_EnumDecl>(&__jule_any_type17));;
				{ jule::Slice<jule::Ptr<_1b051e392_Enum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Enums; __jule_push_dest.push(_70921_e); };
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b30d0d96:;
			{
				jule::Ptr<_1b0520a9c_TypeEnum> _71221_e = _1b0514b6d_buildTypeEnum((*(_68934_node))._field_Data.cast_ptr<_1b04dbb01_TypeEnumDecl>(&__jule_any_type18));;
				{ jule::Slice<jule::Ptr<_1b0520a9c_TypeEnum>> &__jule_push_dest = (*(_self_))._field_table.get()._field_TypeEnums; __jule_push_dest.push(_71221_e); };
			}
		}
		else {
			_case_begin_1b30d0390:;
			{
				_1b0516422_pushErr(_self_, &((*(_68934_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b30ce702:;
	};
}



inline void _1b051a8bb_appendNodes(_1b0515a81_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30d7d37:;
		if (it != expr_end) {
			_1b0488163_Node _72021_node = *it;
			{
				_1b051a6bd_appendNode(_self_, &(_72021_node));
			}
			_iter_next_1b30d7d37:;
			++it;
			goto _iter_begin_1b30d7d37;
		}
		_iter_end_1b30d7d37:;
	};
}



inline void _1b051ab74_pushDirectivePass(_1b0515a81_symbolBuilder* _self_, jule::Ptr<_1b04884b5_Directive>* _72541_d) {
	if (((*(_72541_d)).get()._field_Args.len() == 0LL)) {
		_1b0516422_pushErr(_self_, &((*(_72541_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72541_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_1aa49b1d1_Token> _73017_arg = (*(_72541_d)).get()._field_Args[1LL];;
		_1b0516422_pushErr(_self_, &(_73017_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72541_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1aa49b1d1_Token> _73413_arg = (*(_72541_d)).get()._field_Args[0LL];;
	if ((_73413_arg.get()._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b0516422_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73413_arg.get()._field_Kind[0LL] != '\"')) {
		_1b0516422_pushErr(_self_, &(_73413_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<_1b0510ebb_Pass> &__jule_push_dest = (*(_self_))._field_table.get()._field_Passes; __jule_push_dest.push(_1b0510ebb_Pass{._field_Token=(*(_72541_d)).get()._field_Tag, ._field_Text=_73413_arg.get()._field_Kind.slice(1LL, (_73413_arg.get()._field_Kind.len() - 1LL))}); };
}



inline void _1b051ad72_appendTopDirectives(_1b0515a81_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30dc7dc:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _75221_d = *it;
			{
				{
					auto &_match_expr{ _75221_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1b30dea97:;
						{
							_1b051ab74_pushDirectivePass(_self_, &(_75221_d));
						}
					}
					_match_end_1b30de9ed:;
				};
			}
			_iter_next_1b30dc7dc:;
			++it;
			goto _iter_begin_1b30dc7dc;
		}
		_iter_end_1b30dc7dc:;
	};
}



inline void _1b051b070_build(jule::Ptr<_1b0515a81_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1b060c44c_SymbolTable>(_1b060c44c_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1b051ad72_appendTopDirectives(_self_.ptr());
	_1b051a415_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1b051a8bb_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0515a81_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b051c060_Str(_1b051bb97_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b051c3a1_Equal(jule::Ptr<_1b051bb97_Trait> _self_, jule::Ptr<_1b06477a6_TypeKind> _2521_other) {
	jule::Ptr<_1b051bb97_Trait> _2613_trt = _1b064b9a8_Trait(_2521_other.ptr());;
	return (_self_ == _2613_trt);;
}



inline jule::Ptr<_1b05088ed_Fn> _1b051c846_FindMethod(_1b051bb97_Trait* _self_, jule::Str _3429_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30e2e1e:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _3521_f = *it;
			{
				if ((_3521_f.get()._field_Ident == _3429_ident)) {
					return _3521_f;;
				};
			}
			_iter_next_1b30e2e1e:;
			++it;
			goto _iter_begin_1b30e2e1e;
		}
		_iter_end_1b30e2e1e:;
	};
	return _1b051cec8_findMethodInherit(_self_, &(_3429_ident));;
}



inline jule::Ptr<_1b05088ed_Fn> _1b051cec8_findMethodInherit(_1b051bb97_Trait* _self_, jule::Str* _5537_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30e554d:;
		if (it != expr_end) {
			jule::Ptr<_1b064ec20_TypeSymbol> _5621_i = *it;
			{
				if ((_5621_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1b30e554d;
				};
				jule::Ptr<_1b051bb97_Trait> _6021_t = _1b064b9a8_Trait(_5621_i.get()._field_Kind.ptr());;
				if ((_6021_t != nullptr)) {
					jule::Ptr<_1b05088ed_Fn> _6225_f2 = _1b051c846_FindMethod(_6021_t.ptr(), (*(_5537_ident)));;
					if ((_6225_f2 != nullptr)) {
						return _6225_f2;;
					};
				};
			}
			_iter_next_1b30e554d:;
			++it;
			goto _iter_begin_1b30e554d;
		}
		_iter_end_1b30e554d:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b051bb97_Trait _Src) {
	_Stream << _1b051c060_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b051dbcc_AutoExpr(_1b051d825_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b051d825_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b051e716_Str(_1b051e392_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b051ea57_Equal(jule::Ptr<_1b051e392_Enum> _self_, jule::Ptr<_1b06477a6_TypeKind> _3821_other) {
	jule::Ptr<_1b051e392_Enum> _3913_enm = _1b064a952_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1b051d825_EnumItem> _1b051ee86_FindItem(_1b051e392_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30e8dc0:;
		if (it != expr_end) {
			jule::Ptr<_1b051d825_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1b30e8dc0:;
			++it;
			goto _iter_begin_1b30e8dc0;
		}
		_iter_end_1b30e8dc0:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b051e392_Enum _Src) {
	_Stream << _1b051e716_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05204c5_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b0520ddd_Str(_1b0520a9c_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1b052122e_Equal(jule::Ptr<_1b0520a9c_TypeEnum> _self_, jule::Ptr<_1b06477a6_TypeKind> _8021_other) {
	jule::Ptr<_1b0520a9c_TypeEnum> _8113_tenm = _1b064abd8_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1b05204c5_TypeEnumItem> _1b052165d_FindItem(_1b0520a9c_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30eae9e:;
		if (it != expr_end) {
			jule::Ptr<_1b05204c5_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1b30eae9e:;
			++it;
			goto _iter_begin_1b30eae9e;
		}
		_iter_end_1b30eae9e:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0520a9c_TypeEnum _Src) {
	_Stream << _1b0520ddd_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b052330d_Str(_1b0522e45_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1b052364e_Equal(jule::Ptr<_1b0522e45_comptimeRange> _self_, jule::Ptr<_1b06477a6_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0522e45_comptimeRange _Src) {
	_Stream << _1b052330d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0523d25_Str(_1b05239a1_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1b0524166_Equal(jule::Ptr<_1b05239a1_comptimeStructField> _self_, jule::Ptr<_1b06477a6_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b0524683__Name(jule::Ptr<_1b05239a1_comptimeStructField> _self_, jule::Ptr<_1b0614366_Eval>* _3926_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _4417_constant = static__1ad37db4e_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0524a7e__Type(jule::Ptr<_1b05239a1_comptimeStructField> _self_, jule::Ptr<_1b0614366_Eval>* _5230_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_1b0612672_Data> _1b0524e7a__Public(jule::Ptr<_1b05239a1_comptimeStructField> _self_, jule::Ptr<_1b0614366_Eval>* _6032_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _6517_constant = static__1ad37d885_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b05252bb_subIdent(jule::Ptr<_1b05239a1_comptimeStructField> _self_, jule::Str* _7329_ident) {
	{
		auto &_match_expr{ (*(_7329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b310653c:;
			{
				jule::Ptr<_1b050b802_FnIns> _7621_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _7733_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _7748_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0524683__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b31065a3:;
			{
				jule::Ptr<_1b050b802_FnIns> _8321_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _8433_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _8448_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0524e7a__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b3106619:;
			{
				jule::Ptr<_1b050b802_FnIns> _9021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _9133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _9148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0524a7e__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1b31064c6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b310644e:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b05239a1_comptimeStructField _Src) {
	_Stream << _1b0523d25_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b05259d6_Str(_1b0525651_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1b0525d27_Equal(jule::Ptr<_1b0525651_comptimeStructFields> _self_, jule::Ptr<_1b06477a6_TypeKind> _10921_other) {
	return false;;
}



inline void _1b052629a_ready(_1b0525651_comptimeStructFields* _self_, jule::Ptr<_1b05ae1bd_Var>* _11329_keyA, jule::Ptr<_1b05ae1bd_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b05239a1_comptimeStructField>(), 6)})});
	};
}



inline void _1b05266b8_step(_1b0525651_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1b05ae1bd_Var>* _13536_keyA, jule::Ptr<_1b05ae1bd_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_1b064c778_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1b052694e_len(_1b0525651_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0525651_comptimeStructFields _Src) {
	_Stream << _1b05259d6_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b05270d1_Str(_1b0526c5c_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1b0527422_Equal(jule::Ptr<_1b0526c5c_comptimeStatic> _self_, jule::Ptr<_1b06477a6_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b052793e__Name(jule::Ptr<_1b0526c5c_comptimeStatic> _self_, jule::Ptr<_1b0614366_Eval>* _16326_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _16817_constant = static__1ad37db4e_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0527d3a__Type(jule::Ptr<_1b0526c5c_comptimeStatic> _self_, jule::Ptr<_1b0614366_Eval>* _17630_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_1b0612672_Data> _1b0528236__Public(jule::Ptr<_1b0526c5c_comptimeStatic> _self_, jule::Ptr<_1b0614366_Eval>* _18432_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _18917_constant = static__1ad37d885_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0528577_subIdent(jule::Ptr<_1b0526c5c_comptimeStatic> _self_, jule::Str* _19729_ident) {
	{
		auto &_match_expr{ (*(_19729_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b3119330:;
			{
				jule::Ptr<_1b050b802_FnIns> _20021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _20133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _20148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b052793e__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b3119396:;
			{
				jule::Ptr<_1b050b802_FnIns> _20721_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _20833_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _20848_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0528236__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b311940c:;
			{
				jule::Ptr<_1b050b802_FnIns> _21421_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _21533_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _21548_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0527d3a__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1b31192b9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3119242:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0526c5c_comptimeStatic _Src) {
	_Stream << _1b05270d1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0528c92_Str(_1b052891d_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1b05290d3_Equal(jule::Ptr<_1b052891d_comptimeStatics> _self_, jule::Ptr<_1b06477a6_TypeKind> _23321_other) {
	return false;;
}



inline void _1b0529556_ready(_1b052891d_comptimeStatics* _self_, jule::Ptr<_1b05ae1bd_Var>* _23729_keyA, jule::Ptr<_1b05ae1bd_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0526c5c_comptimeStatic>(), 8)})});
	};
}



inline void _1b0529974_step(_1b052891d_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1b05ae1bd_Var>* _25936_keyA, jule::Ptr<_1b05ae1bd_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_1b064e082_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1b0529c0a_len(_1b052891d_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1b052891d_comptimeStatics _Src) {
	_Stream << _1b0528c92_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b052a38c_Str(_1b052a018_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1b052a6cd_Equal(jule::Ptr<_1b052a018_comptimeEnumField> _self_, jule::Ptr<_1b06477a6_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b052abc8__Name(jule::Ptr<_1b052a018_comptimeEnumField> _self_, jule::Ptr<_1b0614366_Eval>* _28726_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _29217_constant = static__1ad37db4e_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b052b019_subIdent(jule::Ptr<_1b052a018_comptimeEnumField> _self_, jule::Str* _30029_ident) {
	{
		auto &_match_expr{ (*(_30029_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b312841b:;
			{
				jule::Ptr<_1b050b802_FnIns> _30321_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _30433_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _30448_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b052abc8__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1b31283a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b312832d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b052a018_comptimeEnumField _Src) {
	_Stream << _1b052a38c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b052b7ab_Str(_1b052b327_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1b052baec_Equal(jule::Ptr<_1b052b327_comptimeEnumFields> _self_, jule::Ptr<_1b06477a6_TypeKind> _32221_other) {
	return false;;
}



inline void _1b052bee8_ready(_1b052b327_comptimeEnumFields* _self_, jule::Ptr<_1b05ae1bd_Var>* _32629_keyA, jule::Ptr<_1b05ae1bd_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b052a018_comptimeEnumField>(), 10)})});
	};
}



inline void _1b052c416_step(_1b052b327_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1b05ae1bd_Var>* _34836_keyA, jule::Ptr<_1b05ae1bd_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_1b064cc95_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1b052c69c_len(_1b052b327_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1b052b327_comptimeEnumFields _Src) {
	_Stream << _1b052b7ab_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b052cd2e_Str(_1b052c9aa_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1b052d170_Equal(jule::Ptr<_1b052c9aa_comptimeParam> _self_, jule::Ptr<_1b06477a6_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b052d69d__Name(jule::Ptr<_1b052c9aa_comptimeParam> _self_, jule::Ptr<_1b0614366_Eval>* _37626_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _38117_constant = static__1ad37db4e_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b052da99__Type(jule::Ptr<_1b052c9aa_comptimeParam> _self_, jule::Ptr<_1b0614366_Eval>* _38930_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_1b0612672_Data> _1b052de95__Variadic(jule::Ptr<_1b052c9aa_comptimeParam> _self_, jule::Ptr<_1b0614366_Eval>* _39734_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _40217_constant = static__1ad37d885_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b052e391__Reference(jule::Ptr<_1b052c9aa_comptimeParam> _self_, jule::Ptr<_1b0614366_Eval>* _41035_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _41517_constant = static__1ad37d885_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b052e6d2_subIdent(jule::Ptr<_1b052c9aa_comptimeParam> _self_, jule::Str* _42329_ident) {
	{
		auto &_match_expr{ (*(_42329_ident)) };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b36bc251:;
			{
				jule::Ptr<_1b050b802_FnIns> _42621_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _42733_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _42748_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b052d69d__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1b36bc2b7:;
			{
				jule::Ptr<_1b050b802_FnIns> _43321_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _43433_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _43448_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b052de95__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1b36bc33e:;
			{
				jule::Ptr<_1b050b802_FnIns> _44021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _44133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _44148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b052e391__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b36bc3b6:;
			{
				jule::Ptr<_1b050b802_FnIns> _44721_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _44833_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _44848_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b052da99__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1b36bc1da:;
			{
				return nullptr;;
			}
		}
		_match_end_1b36bc163:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b052c9aa_comptimeParam _Src) {
	_Stream << _1b052cd2e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0530095_Str(_1b052ec21_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1b05303d6_Equal(jule::Ptr<_1b052ec21_comptimeParams> _self_, jule::Ptr<_1b06477a6_TypeKind> _46621_other) {
	return false;;
}



inline void _1b0530859_ready(_1b052ec21_comptimeParams* _self_, jule::Ptr<_1b05ae1bd_Var>* _47029_keyA, jule::Ptr<_1b05ae1bd_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b052c9aa_comptimeParam>(), 12)})});
	};
}



inline void _1b0530c77_step(_1b052ec21_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1b05ae1bd_Var>* _49236_keyA, jule::Ptr<_1b05ae1bd_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_1b064d2b2_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1b053100d_len(_1b052ec21_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1b052ec21_comptimeParams _Src) {
	_Stream << _1b0530095_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0531690_Str(_1b053131b_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1b05319d1_Equal(jule::Ptr<_1b053131b_comptimeTypeInfos> _self_, jule::Ptr<_1b06477a6_TypeKind> _51621_other) {
	return false;;
}



inline void _1b0531e54_ready(_1b053131b_comptimeTypeInfos* _self_, jule::Ptr<_1b05ae1bd_Var>* _52029_keyA, jule::Ptr<_1b05ae1bd_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0532916_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1b0532372_step(_1b053131b_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1b05ae1bd_Var>* _54236_keyA, jule::Ptr<_1b05ae1bd_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1b0647300_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1b0532608_len(_1b053131b_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1b053131b_comptimeTypeInfos _Src) {
	_Stream << _1b0531690_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0532c8a_Str(_1b0532916_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1b0647b6e_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1b05330cb_Equal(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b06477a6_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b0533719__Str(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _57025_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _57517_constant = static__1ad37db4e_NewStr(_1b0647b6e_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0533b15__Kind(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _58330_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b051e392_Enum> _58817_enm = _1b056c1e2_FindEnum(_1b053e912_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1b051d825_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1b0648b2b_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1b36d6435:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1b064b722_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d604a:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1b064b9a8_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d60b1:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1b064a6bb_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6127:;
			{
				if (_1b0658454_IsUnsafe(_1b064a6bb_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1b064a435_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d618d:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1b064a952_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6a0c:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1b064bc3e_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6a73:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1b064b205_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6ad9:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1b064ae6e_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6b50:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1b064b48b_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6bc7:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1b064bec5_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6c4e:;
			{
				_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1b064a19e_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b36d6cc6:;
			{
				jule::Ptr<_1b0650627_Prim> _61817_prim = _1b064a19e_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_1b0653d45_IsAny(_61817_prim.ptr())) {
						_case_begin_1b36deb25:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1b0653828_IsBool(_61817_prim.ptr())) {
						_case_begin_1b36deb8b:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1b0653aae_IsStr(_61817_prim.ptr())) {
						_case_begin_1b36dec02:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1b0652a58_IsF32(_61817_prim.ptr())) {
						_case_begin_1b36dec68:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1b0652cde_IsF64(_61817_prim.ptr())) {
						_case_begin_1b36e063c:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1b06514d5_IsI8(_61817_prim.ptr())) {
						_case_begin_1b36e06a3:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1b065176b_IsI16(_61817_prim.ptr())) {
						_case_begin_1b36e0719:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1b0651a02_IsI32(_61817_prim.ptr())) {
						_case_begin_1b36e0780:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1b0651c88_IsI64(_61817_prim.ptr())) {
						_case_begin_1b36e07e6:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1b065201e_IsU8(_61817_prim.ptr())) {
						_case_begin_1b36e085c:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1b06522a5_IsU16(_61817_prim.ptr())) {
						_case_begin_1b36e08c3:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1b065253b_IsU32(_61817_prim.ptr())) {
						_case_begin_1b36e094a:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1b06527c2_IsU64(_61817_prim.ptr())) {
						_case_begin_1b36e09c2:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1b0653075_IsInt(_61817_prim.ptr())) {
						_case_begin_1b36e0a49:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1b065330b_IsUint(_61817_prim.ptr())) {
						_case_begin_1b36e0ac1:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1b0653592_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1b36e0b48:;
						{
							_58917_item=_1b051ee86_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b36deaae:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1b0647b6e_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1b36dea48:;
				};
			}
		}
		else {
			_case_begin_1b36d5ed4:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1b0647b6e_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1b36d5b60:;
	};
	return _1b0644bc1_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1b0612672_Data> _1b0534011__Bits(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _66130_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0650627_Prim> _66613_prim = _1b064a19e_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1b06148b6_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _1ad36ece9_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1b06148b6_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _67617_constant = static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053440c__Elem(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _68430_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b065791a_Ptr> _68917_ptr = _1b064a6bb_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1b0658454_IsUnsafe(_68917_ptr.ptr())) {
			_1b06148b6_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1b053ec86_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1b0654153_Sptr> _69717_sptr = _1b064a435_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1b053ec86_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1b0654b26_Slc> _70117_slice = _1b064b205_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1b053ec86_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_1b0656e47_Arr> _70517_array = _1b064ae6e_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1b053ec86_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_1b051e392_Enum> _70917_enm = _1b064a952_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1b053ec86_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_1b06148b6_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b0612672_Data> _1b0534808__Size(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _71730_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0656e47_Arr> _72217_arr = _1b064ae6e_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1b06148b6_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _72717_constant = static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ebce_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0534c04__Key(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _73529_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b06562ba_Map> _74017_m = _1b064bc3e_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1b06148b6_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_1b0612672_Data> _1b0535100__Value(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _74831_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b06562ba_Map> _75317_m = _1b064bc3e_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1b06148b6_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_1b0612672_Data> _1b05354eb__Fields(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _76132_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b04e5951_StructIns> _76617_s = _1b064b722_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0525651_comptimeStructFields>(_1b0525651_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1b051e392_Enum> _77617_enm = _1b064a952_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b052b327_comptimeEnumFields>(_1b052b327_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_1b06148b6_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b0612672_Data> _1b05358e7__Statics(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _79033_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b04e5951_StructIns> _79517_s = _1b064b722_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1b06148b6_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b052891d_comptimeStatics>(_1b052891d_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b0535ce3__Public(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _80932_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1b064b722_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b371791c:;
			{
				_81417_public=_1b064b722_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_1b064b9a8_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b3716d39:;
			{
				_81417_public=_1b064b9a8_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1b064a952_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b3716da0:;
			{
				_81417_public=_1b064a952_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1b064abd8_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b3716e16:;
			{
				_81417_public=_1b064abd8_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1b37169c6:;
			{
				_1b06148b6_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b37168a5:;
	};
	jule::Ptr<_1ad37cdb2_Const> _82817_constant = static__1ad37d885_NewBool(_81417_public);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b05361de__Binded(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _83632_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _84117_constant = static__1ad37d885_NewBool(_1b064860e_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b05365da__Ordered(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _84929_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _85417_constant = static__1ad37d885_NewBool(_1b06493ce_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b05369d6__Comparable(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _86232_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _86717_constant = static__1ad37d885_NewBool(_1b0648db2_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0536dd2__Mutable(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _87529_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _88017_constant = static__1ad37d885_NewBool(_1b0649148_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b05372cd__Types(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _88831_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b065571a_Tuple> _89317_tup = _1b064bec5_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1b06148b6_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b053131b_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1b053131b_comptimeTypeInfos>(_1b053131b_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1b0532916_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3727762:;
		if (it != expr_end) {
			jule::Ptr<_1b06477a6_TypeKind> _90121_t = *it;
			{
				{ jule::Slice<jule::Ptr<_1b0532916_comptimeTypeInfo>> &__jule_push_dest = _89817_infos.get()._field_types; __jule_push_dest.push(_1b058ad26_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t))); };
			}
			_iter_next_1b3727762:;
			++it;
			goto _iter_begin_1b3727762;
		}
		_iter_end_1b3727762:;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b05376c9__Exceptional(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _91137_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b050b802_FnIns> _91617_f = _1b064b48b_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1b06148b6_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _92117_constant = static__1ad37d885_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0537ac5__CanNil(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _92932_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _93417_constant = static__1ad37d885_NewBool(_1b0649665_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0537ec1__Result(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _94232_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b050b802_FnIns> _94717_f = _1b064b48b_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_1b06148b6_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _1b053ec86_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_1b072d8d1_primVoid));;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_1b0612672_Data> _1b05383bc__Params(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Ptr<_1b0614366_Eval>* _95832_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b050b802_FnIns> _96317_f = _1b064b48b_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_1b06148b6_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b052ec21_comptimeParams>(_1b052ec21_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b053870d_subIdent(jule::Ptr<_1b0532916_comptimeTypeInfo> _self_, jule::Str* _97529_ident) {
	{
		auto &_match_expr{ (*(_97529_ident)) };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1b3736254:;
			{
				jule::Ptr<_1b050b802_FnIns> _97821_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _97933_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _97948_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0533719__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1b3735e24:;
			{
				jule::Ptr<_1b050b802_FnIns> _98521_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _98633_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _98648_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0534011__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1b3736496:;
			{
				jule::Ptr<_1b050b802_FnIns> _99221_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _99333_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _99348_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053440c__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1b373651d:;
			{
				jule::Ptr<_1b050b802_FnIns> _99921_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _100033_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _100048_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0534808__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1b3736595:;
			{
				jule::Ptr<_1b050b802_FnIns> _100621_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _100733_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _100748_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0534c04__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1b373661c:;
			{
				jule::Ptr<_1b050b802_FnIns> _101321_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _101433_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _101448_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0535100__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1b37366e9:;
			{
				jule::Ptr<_1b050b802_FnIns> _102021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _102133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _102148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05354eb__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1b3736771:;
			{
				jule::Ptr<_1b050b802_FnIns> _102721_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _102833_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _102848_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05358e7__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1b37367e8:;
			{
				jule::Ptr<_1b050b802_FnIns> _103421_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _103533_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _103548_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05383bc__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1b3736870:;
			{
				jule::Ptr<_1b050b802_FnIns> _104121_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _104233_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _104248_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05372cd__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b37368e7:;
			{
				jule::Ptr<_1b050b802_FnIns> _104821_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _104933_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _104948_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0535ce3__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1b373696e:;
			{
				jule::Ptr<_1b050b802_FnIns> _105521_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _105633_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _105648_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05361de__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1b37369e6:;
			{
				jule::Ptr<_1b050b802_FnIns> _106221_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _106333_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _106348_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05365da__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1b3736a6d:;
			{
				jule::Ptr<_1b050b802_FnIns> _106921_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _107033_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _107048_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05369d6__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1b3736ae5:;
			{
				jule::Ptr<_1b050b802_FnIns> _107621_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _107733_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _107748_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0536dd2__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1b3736b6c:;
			{
				jule::Ptr<_1b050b802_FnIns> _108321_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _108433_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _108448_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b05376c9__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1b3736be4:;
			{
				jule::Ptr<_1b050b802_FnIns> _109021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _109133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _109148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0537ac5__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1b3736c6b:;
			{
				jule::Ptr<_1b050b802_FnIns> _109721_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _109833_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _109848_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0537ec1__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1b3736ce3:;
			{
				jule::Ptr<_1b050b802_FnIns> _110421_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _110533_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _110548_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0533b15__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1b3736078:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3735c59:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0532916_comptimeTypeInfo _Src) {
	_Stream << _1b0532c8a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0538d90_Str(_1b0538a1b_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1b05391d1_Equal(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b06477a6_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b0539731__Unwrap(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b0614366_Eval>* _112732_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_1b0612672_Data> _1b0539b2c__Type(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b0614366_Eval>* _113530_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_1b0612672_Data> _1b053a028__Lvalue(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b0614366_Eval>* _114332_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _114817_constant = static__1ad37d885_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053a424__Mutable(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b0614366_Eval>* _115633_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _116117_constant = static__1ad37d885_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053a820__Const(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b0614366_Eval>* _116931_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _117417_constant = static__1ad37d885_NewBool(_1b0613046_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053ac1b__Field(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Ptr<_1b0614366_Eval>* _118231_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b04e5951_StructIns> _118717_s = _1b064b722_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_1b06148b6_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b04c5ed6_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_1b0612672_Data> _119317_d = _1b0637598_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b0613046_IsConst(_119317_d.ptr())))) {
		_1b06148b6_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b0650627_Prim> _120113_prim = _1b064a19e_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_1b0653aae_IsStr(_120113_prim.ptr()))))) {
		_1b06148b6_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _1ad38003a_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_1b04e4da1_FieldIns> _120717_f = _1b04e6d09_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_1b06148b6_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_1b0612672_Data>((*(_self_.get()._field_data)));
	_119317_d=_1b06304a3_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _1b053eeb7_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b053b05c_subIdent(jule::Ptr<_1b0538a1b_comptimeValue> _self_, jule::Str* _121729_ident) {
	{
		auto &_match_expr{ (*(_121729_ident)) };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1b3770e3c:;
			{
				jule::Ptr<_1b050b802_FnIns> _122021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _122133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _122148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0539731__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b3770eb4:;
			{
				jule::Ptr<_1b050b802_FnIns> _122721_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _122833_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _122848_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b0539b2c__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1b377103b:;
			{
				jule::Ptr<_1b050b802_FnIns> _123421_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _123533_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _123548_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053a028__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1b37710b3:;
			{
				jule::Ptr<_1b050b802_FnIns> _124121_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _124233_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _124248_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053a424__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1b3771316:;
			{
				jule::Ptr<_1b050b802_FnIns> _124821_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _124933_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _124948_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053a820__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1b377138d:;
			{
				jule::Ptr<_1b050b802_FnIns> _125521_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _125633_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _125648_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053ac1b__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1b3770db5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3770d3d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0538a1b_comptimeValue _Src) {
	_Stream << _1b0538d90_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b053b6de_Str(_1b053b36a_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1b053ba30_Equal(jule::Ptr<_1b053b36a_comptimeFiles> _self_, jule::Ptr<_1b06477a6_TypeKind> _127421_other) {
	return false;;
}



inline void _1b053bea3_ready(_1b053b36a_comptimeFiles* _self_, jule::Ptr<_1b05ae1bd_Var>* _127829_keyA, jule::Ptr<_1b05ae1bd_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b053c965_comptimeFile>(), 18)})});
	};
}



inline void _1b053c3c1_step(_1b053b36a_comptimeFiles* _self_, jule::I64 _130023_i, jule::Ptr<_1b05ae1bd_Var>* _130036_keyA, jule::Ptr<_1b05ae1bd_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_1b053c965_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I64 _1b053c657_len(_1b053b36a_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1b053b36a_comptimeFiles _Src) {
	_Stream << _1b053b6de_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b053ccd9_Str(_1b053c965_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1b053d12a_Equal(jule::Ptr<_1b053c965_comptimeFile> _self_, jule::Ptr<_1b06477a6_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_1b0612672_Data> _1b053d647__Path(jule::Ptr<_1b053c965_comptimeFile> _self_, jule::Ptr<_1b0614366_Eval>* _132830_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _133317_constant = static__1ad37db4e_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053da43__Name(jule::Ptr<_1b053c965_comptimeFile> _self_, jule::Ptr<_1b0614366_Eval>* _134130_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _134617_constant = static__1ad37db4e_NewStr(_1aa4a23a2_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053de3e__Dir(jule::Ptr<_1b053c965_comptimeFile> _self_, jule::Ptr<_1b0614366_Eval>* _135429_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1ad37cdb2_Const> _135917_constant = static__1ad37db4e_NewStr(_1aa4a211b_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b053e280_subIdent(jule::Ptr<_1b053c965_comptimeFile> _self_, jule::Str* _136729_ident) {
	{
		auto &_match_expr{ (*(_136729_ident)) };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1b378a4b7:;
			{
				jule::Ptr<_1b050b802_FnIns> _137021_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _137133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _137148_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053d647__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b378a52d:;
			{
				jule::Ptr<_1b050b802_FnIns> _137721_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _137833_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _137848_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053da43__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1b378a594:;
			{
				jule::Ptr<_1b050b802_FnIns> _138421_method = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>([=](jule::Ptr<_1b0614366_Eval>* _138533_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _138548_fc, jule::Ptr<_1b0612672_Data>* ) mutable -> jule::Ptr<_1b0612672_Data> {
					return _1b053de3e__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _1b053e604_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1b378a451:;
			{
				return nullptr;;
			}
		}
		_match_end_1b378a3eb:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b053c965_comptimeFile _Src) {
	_Stream << _1b053ccd9_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1b058b4db_Sema>*,jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*)> _1b0541eca_readyFn(jule::Ptr<_1b0541ace_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1b058b4db_Sema>*,jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*)>([=](jule::Ptr<_1b058b4db_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2a09d75:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1b04cde89_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1b0645dc0_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1b2a09d75;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2a0aeca:;
						if (it != expr_end) {
							jule::Ptr<_1b04c1ba2_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1b06477a6_TypeKind> _7229_kind = _1b05940a4_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1b0667584_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1b2a0dd02:;
											{
												jule::Ptr<_1b04c22ac_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1b04c22ac_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1b0543295_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_1b2a0ed8b;
												};
											}
										}
										_match_end_1b2a0dc9c:;
									};
									return false;;
								};
								_julec_label_1b2a0ed8b:;
								{ jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> &__jule_push_dest = _6525_generic.get()._field_Constraint; __jule_push_dest.push(_7229_kind); };
							}
							_iter_next_1b2a0aeca:;
							++it;
							goto _iter_begin_1b2a0aeca;
						}
						_iter_end_1b2a0aeca:;
					};
				}
				_iter_next_1b2a09d75:;
				++it;
				_6418_i++;
				goto _iter_begin_1b2a09d75;
			}
			_iter_end_1b2a09d75:;
		};
		return true;;
	});;
}



inline jule::Bool _1b0542261_readyFi(jule::Ptr<_1b0541ace_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1b0598b36_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1b0541eca_readyFn(_self_)));;
}



inline jule::Bool _1b05424e7_readySi(jule::Ptr<_1b0541ace_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1b0541eca_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1b054277d_ready(jule::Ptr<_1b0541ace_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1b0542261_readyFi(_self_);;
	};
	return _1b05424e7_readySi(_self_);;
}



inline jule::Bool _1b0542a14_check(jule::Ptr<_1b0541ace_constraintChecker> _self_) {
	if ((!(_1b054277d_ready(_self_)))) {
		return false;;
	};
	_julec_label_1b2a151b0:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a15633:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1b0645dc0_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1b2a15633;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a1648b:;
					if (it != expr_end) {
						jule::Ptr<_1b06477a6_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1b0650627_Prim> _12425_prim = _1b064a19e_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1b065124e_IsConstraint(_12425_prim.ptr()))) {
								if (_1b0542e87_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1b2a15633;
								};
								goto _iter_next_1b2a1648b;
							};
							if (_1b0647eb0_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1b2a15633;
							};
						}
						_iter_next_1b2a1648b:;
						++it;
						goto _iter_begin_1b2a1648b;
					}
					_iter_end_1b2a1648b:;
				};
				_1b058e126_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1b2a15633:;
			++it;
			_11914_i++;
			goto _iter_begin_1b2a15633;
		}
		_iter_end_1b2a15633:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0541ace_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b0543ecc_IsTraitImpl(_1b0543b14_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1b0544263_IsStructImpl(_1b0543b14_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0543b14_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0549048_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0549466_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0549763_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0549b81_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0549e7d_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054a434_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054ad80_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054b215_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054b5de_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054b8db_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054bcb5_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054c18e_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054c645_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054ca1e_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054d17e_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054dcb7_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054e3b1_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054e746_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b054eda6_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0550439_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "st:" << _Src._field_st << ", ";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b05517e2_SelectPackage(_1b055134c_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _45832_selector) {
	return _1b058b981_SelectPackage((*(_self_))._field_s.ptr(), _45832_selector);;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b0551bdd_FindVar(_1b055134c_scopeChecker* _self_, jule::Str _46926_ident, jule::Bool _46938_binded) {
	;
	jule::Ptr<_1b05ae1bd_Var> _47217_v = _1b060eb14_findVar((*(_self_))._field_table.ptr(), &(_46926_ident), _46938_binded, true);;
	if ((_47217_v != nullptr)) {
		return _47217_v;;
	};
	jule::Ptr<_1b055134c_scopeChecker> _47717_parent = (*(_self_))._field_parent;;
	while ((_47717_parent != nullptr)) {
		{
			_47217_v=_1b060eb14_findVar(_47717_parent.get()._field_table.ptr(), &(_46926_ident), _46938_binded, true);
			if ((_47217_v != nullptr)) {
				return _47217_v;;
			};
			_47717_parent=_47717_parent.get()._field_parent;
		}
	_iter_next_1b2a41cbe:;
	}
	_iter_end_1b2a41cbe:;;
	return _1b058bd7c_FindVar((*(_self_))._field_s.ptr(), _46926_ident, _46938_binded);;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b05520d9_FindTypeAlias(_1b055134c_scopeChecker* _self_, jule::Str _49632_ident, jule::Bool _49644_binded) {
	;
	jule::Ptr<_1b06469b4_TypeAlias> _49917_ta = _1b06100ba_findTypeAlias((*(_self_))._field_table.ptr(), &(_49632_ident), _49644_binded, true);;
	if ((_49917_ta != nullptr)) {
		return _49917_ta;;
	};
	jule::Ptr<_1b055134c_scopeChecker> _50417_parent = (*(_self_))._field_parent;;
	while ((_50417_parent != nullptr)) {
		{
			_49917_ta=_1b06100ba_findTypeAlias(_50417_parent.get()._field_table.ptr(), &(_49632_ident), _49644_binded, true);
			if ((_49917_ta != nullptr)) {
				return _49917_ta;;
			};
			_50417_parent=_50417_parent.get()._field_parent;
		}
	_iter_next_1b2a44783:;
	}
	_iter_end_1b2a44783:;;
	return _1b058c278_FindTypeAlias((*(_self_))._field_s.ptr(), _49632_ident, _49644_binded);;
}



inline jule::Ptr<_1b04e2871_Struct> _1b05524d5_FindStruct(_1b055134c_scopeChecker* _self_, jule::Str _52129_ident, jule::Bool _52141_binded) {
	return _1b058c674_FindStruct((*(_self_))._field_s.ptr(), _52129_ident, _52141_binded);;
}



inline jule::Ptr<_1b05088ed_Fn> _1b05528d1_FindFn(_1b055134c_scopeChecker* _self_, jule::Str _53025_ident, jule::Bool _53037_binded) {
	return _1b058ca70_FindFn((*(_self_))._field_s.ptr(), _53025_ident, _53037_binded);;
}



inline jule::Ptr<_1b051bb97_Trait> _1b0552c22_FindTrait(_1b055134c_scopeChecker* _self_, jule::Str _53928_ident) {
	return _1b058cdb1_FindTrait((*(_self_))._field_s.ptr(), _53928_ident);;
}



inline jule::Ptr<_1b051e392_Enum> _1b0553063_FindEnum(_1b055134c_scopeChecker* _self_, jule::Str _54827_ident) {
	return _1b058d202_FindEnum((*(_self_))._field_s.ptr(), _54827_ident);;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b05533a4_FindTypeEnum(_1b055134c_scopeChecker* _self_, jule::Str _55731_ident) {
	return _1b058d543_FindTypeEnum((*(_self_))._field_s.ptr(), _55731_ident);;
}



inline jule::Bool _1b0553706_isUnsafe(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	jule::Ptr<_1b055134c_scopeChecker> _56517_scope = _self_;;
	_julec_label_1b2a48a2e:;
	if (_56517_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56517_scope.get()._field_parent != nullptr)) {
		_56517_scope=_56517_scope.get()._field_parent;
		goto _julec_label_1b2a48a2e;
	};
	return false;;
}



inline jule::Bool _1b055398c_isRoot(_1b055134c_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1b0553b8a_stop(_1b055134c_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1b0553e21_stopped(_1b055134c_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1b05541a7_isDeferred(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	jule::Ptr<_1b055134c_scopeChecker> _59817_scope = _self_;;
	_julec_label_1b2a4b966:;
	if (_59817_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59817_scope.get()._field_parent != nullptr)) {
		_59817_scope=_59817_scope.get()._field_parent;
		goto _julec_label_1b2a4b966;
	};
	return false;;
}



inline jule::Ptr<_1b055134c_scopeChecker> _1b055443d_getRoot(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	jule::Ptr<_1b055134c_scopeChecker> _61617_root = _self_;;
	while (((_61617_root.get()._field_parent != nullptr) && (_61617_root.get()._field_owner == nullptr))) {
		{
			_61617_root=_61617_root.get()._field_parent;
		}
	_iter_next_1b2a4d4b2:;
	}
	_iter_end_1b2a4d4b2:;;
	return _61617_root;;
}



inline jule::Ptr<_1b055134c_scopeChecker> _1b05546c4_getHardRoot(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	jule::Ptr<_1b055134c_scopeChecker> _62617_root = _self_;;
	while ((_62617_root.get()._field_parent != nullptr)) {
		{
			_62617_root=_62617_root.get()._field_parent;
		}
	_iter_next_1b2a4e4d5:;
	}
	_iter_end_1b2a4e4d5:;;
	return _62617_root;;
}



inline jule::Ptr<_1b054b8db_Label> _1b0554a15_findLabel(_1b055134c_scopeChecker* _self_, jule::Str* _63629_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a4ee42:;
		if (it != expr_end) {
			jule::Any _63721_st = *it;
			{
				{
					auto &_match_expr{ _63721_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b2a50b68:;
						{
							jule::Ptr<_1b054b8db_Label> _64025_label = _63721_st.cast_ptr<_1b054b8db_Label>(&__jule_any_type21);;
							if ((_64025_label.get()._field_Ident == (*(_63629_ident)))) {
								return _64025_label;;
							};
						}
					}
					_match_end_1b2a50b13:;
				};
			}
			_iter_next_1b2a4ee42:;
			++it;
			goto _iter_begin_1b2a4ee42;
		}
		_iter_end_1b2a4ee42:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b054eda6_scopeLabel> _1b0554d56_findLabelScope(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Str* _65235_ident) {
	jule::Ptr<_1b054eda6_scopeLabel> _65317_label = _1b0555197_findLabelAll(_self_.ptr(), _65235_ident);;
	if (((_65317_label != nullptr) && (_65317_label.get()._field_scope == _self_))) {
		return _65317_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1b054eda6_scopeLabel> _1b0555197_findLabelAll(_1b055134c_scopeChecker* _self_, jule::Str* _66432_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a52c14:;
		if (it != expr_end) {
			jule::Ptr<_1b054eda6_scopeLabel> _66521_lbl = *it;
			{
				if ((_66521_lbl.get()._field_label.get()._field_Ident == (*(_66432_ident)))) {
					return _66521_lbl;;
				};
			}
			_iter_next_1b2a52c14:;
			++it;
			goto _iter_begin_1b2a52c14;
		}
		_iter_end_1b2a52c14:;
	};
	return nullptr;;
}



inline jule::Bool _1b0555593_isDuplicatedIdent(_1b055134c_scopeChecker* _self_, jule::Uintptr _67636_itself, jule::Str* _67654_ident) {
	jule::Ptr<_1b05ae1bd_Var> _67713_v = _1b0551bdd_FindVar(_self_, (*(_67654_ident)), false);;
	if (((_67713_v != nullptr) && (static_cast<jule::Uintptr>(_67713_v) != _67636_itself))) {
		if ((_67713_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67713_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1b058d950_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1b06469b4_TypeAlias> _68513_ta = _1b05520d9_FindTypeAlias(_self_, (*(_67654_ident)), false);;
	if (((_68513_ta != nullptr) && (static_cast<jule::Uintptr>(_68513_ta) != _67636_itself))) {
		if ((_68513_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68513_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1b058d950_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1b055584b_checkVarDecl(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d4a1c_VarDecl> _69636_decl) {
	jule::Ptr<_1b05ae1bd_Var> _69717_v = _1b0514e37_buildVar(_69636_decl);;
	_69717_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_69717_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_69717_v, &__jule_any_type8)); };
	});;
	if (_1b0555593_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69717_v)), &(_69717_v.get()._field_Ident))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _69717_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69717_v.get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b0553b8a_stop(_self_.ptr());
		return;;
	};
	_1b05a1820_checkVarDecl(_self_.get()._field_s, &(_69717_v), jule::Trait<_1b0667584_Lookup>(_self_, 0));
	if (((!(_1b05ae7d9_IsTypeInferred(_69717_v.ptr()))) && ((_69717_v.get()._field_Kind == nullptr) || (_69717_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1b05a58ac_evalVarValue(_self_.get()._field_s, &(_69717_v), jule::Trait<_1b0667584_Lookup>(_self_, 0));
	if (((!(_1b05ae553_IsInitialized(_69717_v.ptr()))) || (_69717_v.get()._field_Value.get()._field_Data == nullptr))) {
		return;;
	};
	_1b055b80d_removeInteriorMutRisk(_self_, &(_69717_v.get()._field_Value.get()._field_Data));
	_1b05a5549_checkVarValue(_self_.get()._field_s, &(_69717_v));
}



inline void _1b0555b04_checkTypeAliasDecl(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d85e2_TypeAliasDecl> _72742_decl) {
	jule::Ptr<_1b06469b4_TypeAlias> _72817_ta = _1b0511906_buildTypeAlias(_72742_decl);;
	if (_1b0555593_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_72817_ta)), &(_72817_ta.get()._field_Ident))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _72817_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_72817_ta.get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b0553b8a_stop(_self_.ptr());
		return;;
	};
	_1b059a8a2_checkTypeAliasDecl(_self_.get()._field_s, &(_72817_ta), jule::Trait<_1b0667584_Lookup>(_self_, 0));
	{ jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> &__jule_push_dest = _self_.get()._field_table.get()._field_TypeAliases; __jule_push_dest.push(_72817_ta); };
	if ((_72817_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1b0553b8a_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1b0549048_Scope> _1b0555d8a_getChild(_1b055134c_scopeChecker* _self_) {
	return jule::new_ptr<_1b0549048_Scope>(_1b0549048_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1b05562a8_checkChildSsc(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d1ca0_ScopeTree>* _75138_tree, jule::Ptr<_1b0549048_Scope>* _75161_s, jule::Ptr<_1b055134c_scopeChecker>* _75177_ssc) {
	(*(_75177_ssc)).get()._field_parent=_self_;
	_1b0562a56_check((*(_75177_ssc)), _75138_tree, _75161_s);
}



inline jule::Ptr<_1b0549048_Scope> _1b05566a4_checkChildSc(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d1ca0_ScopeTree>* _75637_tree, jule::Ptr<_1b055134c_scopeChecker>* _75660_ssc) {
	jule::Ptr<_1b0549048_Scope> _75717_s = _1b0555d8a_getChild(_self_.ptr());;
	_1b05562a8_checkChildSsc(_self_, _75637_tree, &(_75717_s), _75660_ssc);
	return _75717_s;;
}



inline jule::Ptr<_1b0549048_Scope> _1b05569e5_checkChild(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d1ca0_ScopeTree>* _76235_tree) {
	jule::Ptr<_1b055134c_scopeChecker> _76317_ssc = _1b0562cdc_newChildChecker(_self_);;
	return _1b05566a4_checkChildSc(_self_, _76235_tree, &(_76317_ssc));;
}



inline void _1b0556c9d_checkAnonScope(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d1ca0_ScopeTree> _76738_tree) {
	jule::Ptr<_1b0549048_Scope> _76817_s = _1b05569e5_checkChild(_self_, &(_76738_tree));;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_76817_s, &__jule_any_type22)); };
}



inline void _1b0557111_processErrorCall(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel>* _77241_m, jule::Ptr<_1aa49b1d1_Token> _77272_err) {
	if (_1b05541a7_isDeferred(_self_)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _77272_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b055134c_scopeChecker> _77717_root = _1b055443d_getRoot(_self_);;
	if ((!(_77717_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _77272_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_77241_m)).get()._field_Func=_77717_root.get()._field_owner;
}



inline void _1b05573b9_checkExpr(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04c5ed6_Expr> _78533_expr) {
	jule::Ptr<_1b0614366_Eval> _78617_eval = _1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0));;
	_78617_eval.get()._field_ignored=true;
	jule::Ptr<_1b0612672_Data> _78817_d = _1b0637598_evalExpr(_78617_eval, _78533_expr);;
	if ((_78817_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _78817_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b2a68455:;
			{
				jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel> _79521_m = _78817_d.get()._field_Model.cast_ptr<_1b05045ec_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1b0557111_processErrorCall(_self_, &(_79521_m), _78533_expr.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_78817_d, &__jule_any_type24)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1b2a68b4d:;
			{
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_78817_d, &__jule_any_type24)); };
			}
		}
		else {
			_case_begin_1b2a6882e:;
			{
				_1b058e126_pushErr(_self_.get()._field_s.ptr(), _78533_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b2a687c9:;
	};
}



inline jule::Ptr<_1b0549466_If> _1b055770a_checkIf(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d7525_If> _81531_i) {
	jule::Ptr<_1b0549048_Scope> _81617_s = _1b05569e5_checkChild(_self_, &(_81531_i.get()._field_Scope));;
	jule::Ptr<_1b0612672_Data> _81817_d = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _81531_i.get()._field_Expr);;
	if ((_81817_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b0650627_Prim> _82317_prim = _1b064a19e_Prim(_81817_d.get()._field_Kind.ptr());;
	if (((_82317_prim == nullptr) || (!(_1b0653828_IsBool(_82317_prim.ptr()))))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _81531_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b0549466_If>(_1b0549466_If{._field_Expr=_81817_d.get()._field_Model, ._field_Scope=_81617_s});;
}



inline jule::Ptr<_1b0549763_Else> _1b0557a4b_checkElse(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d78ee_Else> _83533_e) {
	return jule::new_ptr<_1b0549763_Else>(_1b0549763_Else{._field_Scope=_1b05569e5_checkChild(_self_, &(_83533_e.get()._field_Scope))});;
}



inline void _1b0557d04_checkConditional(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d7da5_Conditional> _84140_conditional) {
	jule::Ptr<_1b0549b81_Conditional> _84217_c = jule::new_ptr<_1b0549b81_Conditional>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_84217_c, &__jule_any_type36)); };
	_84217_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1b0549466_If>>::alloc(0LL, (_84140_conditional.get()._field_Tail.len() + 1LL));
	{ jule::Slice<jule::Ptr<_1b0549466_If>> &__jule_push_dest = _84217_c.get()._field_Elifs; __jule_push_dest.push(_1b055770a_checkIf(_self_, _84140_conditional.get()._field_Head)); };
	{
		auto expr = &(_84140_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a725a2:;
		if (it != expr_end) {
			jule::Ptr<_1b04d7525_If> _84821_elif = *it;
			{
				{ jule::Slice<jule::Ptr<_1b0549466_If>> &__jule_push_dest = _84217_c.get()._field_Elifs; __jule_push_dest.push(_1b055770a_checkIf(_self_, _84821_elif)); };
			}
			_iter_next_1b2a725a2:;
			++it;
			goto _iter_begin_1b2a725a2;
		}
		_iter_end_1b2a725a2:;
	};
	if ((_84140_conditional.get()._field_Default != nullptr)) {
		_84217_c.get()._field_Default=_1b0557a4b_checkElse(_self_, _84140_conditional.get()._field_Default);
	};
}



inline void _1b05582cc_checkIterScopeSsc(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Uintptr _85737_it, jule::Ptr<_1b04d1ca0_ScopeTree> _85754_tree, jule::Ptr<_1b0549048_Scope>* _85777_s, jule::Ptr<_1b055134c_scopeChecker> _85792_ssc) {
	_85792_ssc.get()._field_it=_85737_it;
	_1b05562a8_checkChildSsc(_self_, &(_85754_tree), _85777_s, &(_85792_ssc));
}



inline jule::Ptr<_1b0549048_Scope> _1b0558783_checkIterScopeSc(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Uintptr _86236_it, jule::Ptr<_1b04d1ca0_ScopeTree> _86253_tree, jule::Ptr<_1b055134c_scopeChecker> _86275_ssc) {
	jule::Ptr<_1b0549048_Scope> _86317_scope = _1b0555d8a_getChild(_self_.ptr());;
	_1b05582cc_checkIterScopeSsc(_self_, _86236_it, _86253_tree, &(_86317_scope), _86275_ssc);
	return _86317_scope;;
}



inline jule::Ptr<_1b0549048_Scope> _1b0558b7e_checkIterScope(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Uintptr _86834_it, jule::Ptr<_1b04d1ca0_ScopeTree>* _86852_tree) {
	jule::Ptr<_1b055134c_scopeChecker> _86917_ssc = _1b0562cdc_newChildChecker(_self_);;
	return _1b0558783_checkIterScopeSc(_self_, _86834_it, (*(_86852_tree)), _86917_ssc);;
}



inline void _1b0558e37_checkInfIter(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d5589_Iter>* _87337_it) {
	jule::Ptr<_1b0549e7d_InfIter> _87417_kind = jule::new_ptr<_1b0549e7d_InfIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_87417_kind, &__jule_any_type37)); };
	_87417_kind.get()._field_Scope=_1b0558b7e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87417_kind)), &((*(_87337_it)).get()._field_Scope));
}



inline void _1b05591e0_checkWhileIter(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d5589_Iter>* _87939_it) {
	jule::Ptr<_1b04d5db4_WhileKind> _88017_wh = (*(_87939_it)).get()._field_Kind.cast_ptr<_1b04d5db4_WhileKind>(&__jule_any_type38);;
	if (((_88017_wh.get()._field_Expr == nullptr) && (_88017_wh.get()._field_Next == nullptr))) {
		_1b0558e37_checkInfIter(_self_, _87939_it);
		return;;
	};
	jule::Ptr<_1b054a434_WhileIter> _88617_kind = jule::new_ptr<_1b054a434_WhileIter>();;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_88617_kind, &__jule_any_type39)); };
	_88617_kind.get()._field_Scope=_1b0558b7e_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_88617_kind)), &((*(_87939_it)).get()._field_Scope));
	if ((_88017_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1b0612672_Data> _89121_d = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _88017_wh.get()._field_Expr);;
		if ((_89121_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1b0650627_Prim> _89617_prim = _1b064a19e_Prim(_89121_d.get()._field_Kind.ptr());;
		if ((_89617_prim == nullptr)) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_87939_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1b0653828_IsBool(_89617_prim.ptr())))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_87939_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_88617_kind.get()._field_Expr=_89121_d.get()._field_Model;
	};
	if (_1b04d6227_IsWhileNext(_88017_wh.ptr())) {
		if ((!(_1b0548553_isValidAstStForNextSt(&(_88017_wh.get()._field_Next))))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _91617_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1b056168c_checkNode(_self_, &(_88017_wh.get()._field_Next));
		if ((_91617_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91925_st = _self_.get()._field_scope.get()._field_Stmts[_91617_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _91617_n);
			if ((!(_1b054881c_isValidStForNextSt(&(_91925_st))))) {
				_1b058e126_pushErr(_self_.get()._field_s.ptr(), _88017_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_88617_kind.get()._field_Next=_91925_st;
		};
	};
}



inline void _1b055960d_checkComptimeRangeIter(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d5589_Iter>* _92947_it, jule::Ptr<_1b054ad80_RangeIter>* _92963_kind, jule::Ptr<_1b0612672_Data>* _92986_d) {
	if (((*(_92963_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1b058d950_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1b0555593_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_92963_kind)).get()._field_KeyA.get()._field_Ident)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_92963_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92963_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92963_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1b058d950_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1b0555593_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*(_92963_kind)).get()._field_KeyB.get()._field_Ident)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_92963_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92963_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1b0522e45_comptimeRange> _94317_comptime = _1b064d548_comptimeRange((*(_92986_d)).get()._field_Kind.ptr());;
	_1b0522c58_comptimeRangeKind_mptr_data[(_94317_comptime.get()._field_kind).type_offset]._1b0522450_ready(_94317_comptime.get()._field_kind, &((*(_92963_kind)).get()._field_KeyA), &((*(_92963_kind)).get()._field_KeyB));
	jule::I64 _94517_i = 0LL;;
	jule::I64 _94613_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_94517_i < _1b0522c58_comptimeRangeKind_mptr_data[(_94317_comptime.get()._field_kind).type_offset]._1b0522b04_len(_94317_comptime.get()._field_kind)); (_94517_i)++) {
		{
			jule::Ptr<_1b055134c_scopeChecker> _94821_ssc = _1b0562cdc_newChildChecker(_self_);;
			jule::Ptr<_1b0549048_Scope> _94921_scope = _1b0555d8a_getChild(_self_.ptr());;
			if (((*(_92963_kind)).get()._field_KeyA != nullptr)) {
				(*(_92963_kind)).get()._field_KeyA.get()._field_Scope=_94921_scope;
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _94821_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92963_kind)).get()._field_KeyA); };
			};
			if (((*(_92963_kind)).get()._field_KeyB != nullptr)) {
				(*(_92963_kind)).get()._field_KeyB.get()._field_Scope=_94921_scope;
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _94821_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push((*(_92963_kind)).get()._field_KeyB); };
			};
			_1b0522c58_comptimeRangeKind_mptr_data[(_94317_comptime.get()._field_kind).type_offset]._1b052286d_step(_94317_comptime.get()._field_kind, _94517_i, &((*(_92963_kind)).get()._field_KeyA), &((*(_92963_kind)).get()._field_KeyB));
			_1b05562a8_checkChildSsc(_self_, &((*(_92947_it)).get()._field_Scope), &(_94921_scope), &(_94821_ssc));
			if ((_94613_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1b2a87551;
			};
			{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_94921_scope, &__jule_any_type22)); };
		}
	_iter_next_1b2a87551:;
	}
	_iter_end_1b2a87551:;;
}



inline void _1b05598b6_checkRangeIter(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d5589_Iter>* _96839_it) {
	jule::Ptr<_1b04d67bb_RangeKind> _96917_rang = (*(_96839_it)).get()._field_Kind.cast_ptr<_1b04d67bb_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1b0612672_Data> _97117_d = _1b0637257_evalExpr1(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _96917_rang.get()._field_Expr);;
	if ((_97117_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1b054ad80_RangeIter> _97617_kind = jule::new_ptr<_1b054ad80_RangeIter>(_1b054ad80_RangeIter{._field_Expr=_97117_d, });;
	_1b0607931_rangeChecker _98017_rc = _1b0607931_rangeChecker{._field_sc=_self_, ._field_rang=_96917_rang, ._field_Kind=_97617_kind, ._field_d=_97117_d};;
	jule::Bool _98613_ok = _1b0609944_check(&_98017_rc);;
	if ((!(_98613_ok))) {
		return;;
	};
	jule::Ptr<_1b0522e45_comptimeRange> _99117_comptimeRange = _1b064d548_comptimeRange(_97117_d.get()._field_Kind.ptr());;
	if ((_99117_comptimeRange != nullptr)) {
		_1b055960d_checkComptimeRangeIter(_self_, _96839_it, &(_97617_kind), &(_97117_d));
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_97617_kind, &__jule_any_type41)); };
	jule::Ptr<_1b055134c_scopeChecker> _99917_ssc = _1b0562cdc_newChildChecker(_self_);;
	jule::Ptr<_1b0549048_Scope> _100017_scope = _1b0555d8a_getChild(_self_.ptr());;
	if ((_97617_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1b058d950_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1b0555593_isDuplicatedIdent(_self_.ptr(), 0LLU, &(_97617_kind.get()._field_KeyA.get()._field_Ident)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _97617_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_97617_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_97617_kind.get()._field_KeyA.get()._field_Scope=_100017_scope;
		{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _99917_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_97617_kind.get()._field_KeyA); };
	};
	if ((_97617_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1b058d950_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1b0555593_isDuplicatedIdent(_self_.ptr(), 0LLU, &(_97617_kind.get()._field_KeyB.get()._field_Ident)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _97617_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_97617_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_97617_kind.get()._field_KeyB.get()._field_Scope=_100017_scope;
		{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _99917_ssc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_97617_kind.get()._field_KeyB); };
	};
	_1b05582cc_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_97617_kind)), (*(_96839_it)).get()._field_Scope, &(_100017_scope), _99917_ssc);
	_97617_kind.get()._field_Scope=_100017_scope;
}



inline void _1b0559b6e_checkIter(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d5589_Iter> _102433_it) {
	if (_1b04d58ec_IsInf(_102433_it.ptr())) {
		_1b0558e37_checkInfIter(_self_, &(_102433_it));
		return;;
	};
	{
		auto &_match_expr{ _102433_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b2a97bc1:;
			{
				_1b05591e0_checkWhileIter(_self_, &(_102433_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b2a985a6:;
			{
				_1b05598b6_checkRangeIter(_self_, &(_102433_it));
			}
		}
		else {
			_case_begin_1b2a98166:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b2a97ab1:;
	};
}



inline jule::Bool _1b0559eb0_checkValidContLabel(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Uintptr _104039_it) {
	jule::Ptr<_1b055134c_scopeChecker> _104117_scope = _self_;;
	_julec_label_1b2a997e9:;
	if ((_104117_scope.get()._field_it == _104039_it)) {
		return true;;
	};
	if ((_104117_scope.get()._field_parent != nullptr)) {
		_104117_scope=_104117_scope.get()._field_parent;
		goto _julec_label_1b2a997e9;
	};
	return false;;
}



inline jule::Bool _1b055a301_checkValidBreakLabel(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Uintptr _105640_ptr) {
	jule::Ptr<_1b055134c_scopeChecker> _105717_scope = _self_;;
	_julec_label_1b2a9b576:;
	if ((_105717_scope.get()._field_it == _105640_ptr)) {
		return true;;
	};
	if ((_105717_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _106517_mtch = static_cast<jule::Uintptr>(((_1b054dcb7_Case*)(_105717_scope.get()._field_cse))->_field_Owner);;
		if ((_106517_mtch == _105640_ptr)) {
			return true;;
		};
	};
	if ((_105717_scope.get()._field_parent != nullptr)) {
		_105717_scope=_105717_scope.get()._field_parent;
		goto _julec_label_1b2a9b576;
	};
	return false;;
}



inline jule::Ptr<_1b054b215_ContSt> _1b055a642_checkContValidScope(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d706e_ContSt> _107939_c) {
	if (_1b05541a7_isDeferred(_self_)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _107939_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107939_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1b054b215_ContSt>();;
	};
	jule::Ptr<_1b055134c_scopeChecker> _108917_scope = _self_;;
	_julec_label_1b2a9e27c:;
	{
		
		if ((((_108917_scope.get()._field_it == 0LLU) && (_108917_scope.get()._field_parent != nullptr)) && (_108917_scope.get()._field_owner == nullptr))) {
			_case_begin_1b381b625:;
			{
				_108917_scope=_108917_scope.get()._field_parent;
				goto _julec_label_1b2a9e27c;
			}
		}
		else if ((_108917_scope.get()._field_it != 0LLU)) {
			_case_begin_1b381b69c:;
			{
				return jule::new_ptr<_1b054b215_ContSt>(_1b054b215_ContSt{._field_It=_108917_scope.get()._field_it});;
			}
		}
		_match_end_1b381b56a:;
	};
	_1b058e126_pushErr(_self_.get()._field_s.ptr(), _107939_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b055a8ea_checkCont(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d706e_ContSt> _110329_c) {
	jule::Ptr<_1b054b215_ContSt> _110417_cont = _1b055a642_checkContValidScope(_self_, _110329_c);;
	if ((_110417_cont == nullptr)) {
		return;;
	};
	if ((_110329_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1b054eda6_scopeLabel> _111021_label = _1b0546562_findLabelParent(&(_110329_c.get()._field_Label.get()._field_Kind), _self_.get()._field_parent);;
		if ((_111021_label == nullptr)) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_111021_label.get()._field_used=true;
		if (((_111021_label.get()._field_pos + 1LL) >= _111021_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _112317_i = (_111021_label.get()._field_pos + 1LL);;
		if ((_112317_i >= _111021_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _112725_st = _111021_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_112317_i];;
			{
				auto &_match_expr{ _112725_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1b382470a:;
					{
						_110417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112725_st.cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1b382440d:;
					{
						_110417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112725_st.cast_ptr<_1b054ad80_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1b3824474:;
					{
						_110417_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_112725_st.cast_ptr<_1b054a434_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1b3824397:;
					{
						_1b058e126_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1b3824342:;
			};
		};
	};
	if ((_110417_cont.get()._field_It != 0LLU)) {
		if ((!(_1b0559eb0_checkValidContLabel(_self_, _110417_cont.get()._field_It)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _110329_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_110329_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_110417_cont, &__jule_any_type42)); };
}



inline void _1b055aba3_checkLabel(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04ce363_LabelSt> _115034_l) {
	if ((_1b0554a15_findLabel(_self_.ptr(), &(_115034_l.get()._field_Ident)) != nullptr)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _115034_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_115034_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1b054b8db_Label> _115617_label = jule::new_ptr<_1b054b8db_Label>(_1b054b8db_Label{._field_Ident=_115034_l.get()._field_Ident});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_115617_label, &__jule_any_type21)); };
	{ jule::Slice<jule::Ptr<_1b054eda6_scopeLabel>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(jule::new_ptr<_1b054eda6_scopeLabel>(_1b054eda6_scopeLabel{._field_token=_115034_l.get()._field_Token, ._field_label=_115617_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })); };
}



inline void _1b055ae5b_pushGoto(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04ce73c_GotoSt> _116932_gt) {
	jule::Ptr<_1b054bcb5_GotoSt> _117017_st = jule::new_ptr<_1b054bcb5_GotoSt>(_1b054bcb5_GotoSt{._field_Ident=_116932_gt.get()._field_Label.get()._field_Kind, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_117017_st, &__jule_any_type43)); };
	{ jule::Slice<jule::Ptr<_1b0550439_scopeGoto>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(jule::new_ptr<_1b0550439_scopeGoto>(_1b0550439_scopeGoto{._field_st=_117017_st, ._field_gt=_116932_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})); };
}



inline void _1b055b214_checkPostfix(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d072c_AssignSt> _118336_a) {
	if ((_118336_a.get()._field_Left.len() > 1LL)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _118336_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b04c5ed6_Expr> _118917_expr = _118336_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1b0612672_Data> _119017_d = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _118917_expr);;
	if ((_119017_d == nullptr)) {
		return;;
	};
	_1b0548289_checkAssign(&(_self_.get()._field_s), &(_119017_d), nullptr, _118336_a.get()._field_Setter);
	if ((_1b064a6bb_Ptr(_119017_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b065791a_Ptr> _119821_ptr = _1b064a6bb_Ptr(_119017_d.get()._field_Kind.ptr());;
		if (_1b0658454_IsUnsafe(_119821_ptr.ptr())) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _118336_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_118336_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str(_119017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1b064a19e_Prim(_119017_d.get()._field_Kind.ptr()) == nullptr) || (!(_1ad37c7b8_IsNum(_1b064a19e_Prim(_119017_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _118336_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_118336_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str(_119017_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1b054c18e_Postfix>(_1b054c18e_Postfix{._field_Expr=_119017_d.get()._field_Model, ._field_Op=_118336_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44)); };
}



inline jule::Bool _1b055b555_isNewAssignIdent(_1b055134c_scopeChecker* _self_, jule::Str _121635_ident) {
	if ((_1aa49db40_IsIgnoreIdent(_121635_ident) || _121635_ident.empty())) {
		return false;;
	};
	return (_1b06104b6_defByIdent((*(_self_))._field_table.ptr(), &(_121635_ident), false) == nullptr);;
}



inline void _1b055b80d_removeInteriorMutRisk(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b0612672_Data>* _122946_d) {
	jule::Ptr<_1b04e5951_StructIns> _123013_s = _1b064b722_Struct((*(_122946_d)).get()._field_Kind.ptr());;
	if ((_123013_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1b055134c_scopeChecker> _123413_root = _1b05546c4_getHardRoot(_self_);;
	if ((_123413_root.get()._field_owner.get()._field_Owner != _123013_s)) {
		return;;
	};
	(*(_122946_d)).get()._field_Mutable=true;
}



inline jule::Bool _1b055bcb4_checkStructureAssignOp(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04e5951_StructIns>* _124347_s, jule::Ptr<_1b04d072c_AssignSt>* _124367_a, jule::Ptr<_1b0612672_Data>* _124386_r) {
	jule::Ptr<_1b050b802_FnIns> _124617_overload = nullptr;;
	{
		auto &_match_expr{ (*(_124367_a)).get()._field_Setter.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b3837ce5:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b3839104:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b383917b:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b38381be:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b3838235:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b383829b:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b3838323:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b383927a:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b38392e1:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b3839357:;
			{
				_124617_overload=(*(_124347_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b3838158:;
			{
				_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_124367_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_124367_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b04e5cc5_Str((*(_124347_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b3837b80:;
	};
	if ((_124617_overload == nullptr)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_124367_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_124367_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1b04e5cc5_Str((*(_124347_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1b050a856_ParamIns> _127817_p = _124617_overload.get()._field_Params[1LL];;
	return _1b0596b34_checkAssignType(_self_.get()._field_s, _127817_p.get()._field_Decl.get()._field_Reference, &(_127817_p.get()._field_Kind), _124386_r, (*(_124367_a)).get()._field_Setter);;
}



inline void _1b055c06c_checkSingleAssign(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d072c_AssignSt>* _128242_a) {
	jule::Ptr<_1b0612672_Data> _128317_l = nullptr;;
	if ((!(_1aa49db40_IsIgnoreIdent((*(_128242_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1b04c5ed6_Expr> _128621_expr = (*(_128242_a)).get()._field_Left[0LL].get()._field_Expr;;
		_128317_l=_1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _128621_expr);
		if ((_128317_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b0614366_Eval> _129317_eval = nullptr;;
	if ((_128317_l != nullptr)) {
		_129317_eval=_1b0596282_evalp(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0), _128317_l.get()._field_Kind);
	} else {
		_129317_eval=_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0));
	};
	_129317_eval.get()._field_unsafety=_1b0553706_isUnsafe(_self_);
	jule::Ptr<_1b0612672_Data> _130017_r = _1b0637598_evalExpr(_129317_eval, (*(_128242_a)).get()._field_Right);;
	if ((_130017_r == nullptr)) {
		return;;
	};
	_1b055b80d_removeInteriorMutRisk(_self_, &(_130017_r));
	if ((_128317_l == nullptr)) {
		if (_1b0648b2b_Void(_130017_r.get()._field_Kind.ptr())) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_128242_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_130017_r, &__jule_any_type24)); };
		return;;
	};
	if ((!(_1b0548289_checkAssign(&(_self_.get()._field_s), &(_128317_l), _130017_r, (*(_128242_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1b064bec5_Tup(_130017_r.get()._field_Kind.ptr()) != nullptr)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_128242_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b04e9a32_OperandExprModel> _132417_lm = jule::new_ptr<_1b04e9a32_OperandExprModel>(_1b04e9a32_OperandExprModel{._field_Kind=_128317_l.get()._field_Kind, ._field_Model=_128317_l.get()._field_Model});;
	jule::Ptr<_1b04e9a32_OperandExprModel> _132817_rm = jule::new_ptr<_1b04e9a32_OperandExprModel>(_1b04e9a32_OperandExprModel{._field_Kind=_130017_r.get()._field_Kind, ._field_Model=_130017_r.get()._field_Model});;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1b054c645_Assign>(_1b054c645_Assign{._field_L=_132417_lm, ._field_R=_132817_rm, ._field_Op=(*(_128242_a)).get()._field_Setter}), &__jule_any_type45)); };
	if (((*(_128242_a)).get()._field_Setter.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		jule::Ptr<_1b04e5951_StructIns> _133521_strct = _1b064b722_Struct(_128317_l.get()._field_Kind.ptr());;
		if ((_133521_strct != nullptr)) {
			_1b055bcb4_checkStructureAssignOp(_self_, &(_133521_strct), _128242_a, &(_130017_r));
			return;;
		};
		jule::U64 _134017_id = (*(_128242_a)).get()._field_Setter.get()._field_Id;;
		(*(_128242_a)).get()._field_Setter.get()._field_Id=_1b0563161_removeEqFromOp((*(_128242_a)).get()._field_Setter.get()._field_Id);
		_1b06399eb_binaryEval _134221_solver = static__1b063a425_new(_129317_eval, (*(_128242_a)).get()._field_Setter);;
		_130017_r=_1b0640738_solveExplicit(&_134221_solver, &(_128317_l), &(_130017_r));
		(*(_128242_a)).get()._field_Setter.get()._field_Id=_134017_id;
		if ((_130017_r == nullptr)) {
			return;;
		};
		return;;
	};
	_1b05eb23d_assignTypeChecker _135117_checker = _1b05eb23d_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_128317_l.get()._field_Kind, ._field_d=_130017_r, ._field_errorToken=(*(_128242_a)).get()._field_Setter};;
	if (_1b05ec4a3_check(&_135117_checker)) {
		_132817_rm.get()._field_Model=_130017_r.get()._field_Model;
		_132417_lm.get()._field_Model=_128317_l.get()._field_Model;
	};
}



inline void _1b055c600_processEndPartOfMultiAssign(_1b055134c_scopeChecker* _self_, jule::Ptr<_1b054ca1e_MultiAssign>* _136351_st, jule::Ptr<_1b04d072c_AssignSt>* _136414_a, jule::Ptr<_1b04d0199_AssignLeft>* _136433_lexpr, jule::Ptr<_1b0612672_Data>* _136458_l, jule::Ptr<_1b0612672_Data>* _136473_r) {
	if (((!((*(_136433_lexpr)).get()._field_Reference)) && _1aa49db40_IsIgnoreIdent((*(_136433_lexpr)).get()._field_Ident))) {
		if (_1b0648b2b_Void((*(_136473_r)).get()._field_Kind.ptr())) {
			_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_136414_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = (*(_136351_st)).get()._field_L; __jule_push_dest.push(nullptr); };
		return;;
	};
	if (((*(_136414_a)).get()._field_Declarative && ((*(_136433_lexpr)).get()._field_Reference || _1b055b555_isNewAssignIdent(_self_, (*(_136433_lexpr)).get()._field_Ident)))) {
		if (_1b0555593_isDuplicatedIdent(_self_, 0LLU, &((*(_136433_lexpr)).get()._field_Ident))) {
			_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_136433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_136433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1b058e489_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1b0553b8a_stop(_self_);
			return;;
		};
		if (_1aa49db40_IsIgnoreIdent((*(_136433_lexpr)).get()._field_Ident)) {
			_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_136433_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b05ae1bd_Var> _138521_v = jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_136433_lexpr)).get()._field_Token, ._field_Ident=(*(_136433_lexpr)).get()._field_Ident, ._field_Mutable=(*(_136433_lexpr)).get()._field_Mutable, ._field_Reference=(*(_136433_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Expr=(*(_136414_a)).get()._field_Right, ._field_Data=(*(_136473_r))}), });;
		_1b05a5549_checkVarValue((*(_self_))._field_s, &(_138521_v));
		_138521_v.get()._field_Value=nullptr;
		{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = (*(_136351_st)).get()._field_L; __jule_push_dest.push(jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_138521_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_138521_v.get()._field_Mutable, ._field_Reference=_138521_v.get()._field_Reference, ._field_Lvalue=(!(_138521_v.get()._field_Constant)), ._field_Model=jule::Any(_138521_v, &__jule_any_type8), })); };
		{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_self_))._field_table.get()._field_Vars; __jule_push_dest.push(_138521_v); };
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_138521_v, &__jule_any_type8)); };
		return;;
	};
	if (((*(_136433_lexpr)).get()._field_Mutable || (*(_136433_lexpr)).get()._field_Reference)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_136433_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_136433_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1b0548289_checkAssign(&((*(_self_))._field_s), _136458_l, (*(_136473_r)), (*(_136433_lexpr)).get()._field_Token)))) {
		return;;
	};
	;
	_1b059a143_checkValidityForInitExpr((*(_self_))._field_s, (*(_136458_l)).get()._field_Mutable, false, &((*(_136458_l)).get()._field_Kind), _136473_r, &((*(_136414_a)).get()._field_Setter));
	_1b05eb23d_assignTypeChecker _142817_checker = _1b05eb23d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_136458_l)).get()._field_Kind, ._field_d=(*(_136473_r)), ._field_errorToken=(*(_136414_a)).get()._field_Setter};;
	_1b05ec4a3_check(&_142817_checker);
	{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = (*(_136351_st)).get()._field_L; __jule_push_dest.push((*(_136458_l))); };
}



inline void _1b055c8a8_checkMultiAssign(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d072c_AssignSt>* _143841_a) {
	jule::Ptr<_1b0612672_Data> _143917_rd = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), (*(_143841_a)).get()._field_Right);;
	if ((_143917_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b0612672_Data>> _144317_right = _1b05473dc_getDatasFromTupleData(&(_143917_rd));;
	if ((_144317_right.len() == 1LL)) {
		{
			auto &_match_expr{ _144317_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1b385a587:;
				{
					jule::Ptr<_1b04ec88c_IndexingExprModel> _144725_iem = _144317_right[0LL].get()._field_Model.cast_ptr<_1b04ec88c_IndexingExprModel>(&__jule_any_type46);;
					if ((_1b064bc3e_Map(_144725_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_144317_right=jule::Slice<jule::Ptr<_1b0612672_Data>>::make({jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b064bc3e_Map(_144725_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, })});
					};
				}
			}
			_match_end_1b385a4dd:;
		};
	};
	{
		
		if (((*(_143841_a)).get()._field_Left.len() > _144317_right.len())) {
			_case_begin_1b3859e8d:;
			{
				_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_143841_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_143841_a)).get()._field_Left.len() < _144317_right.len())) {
			_case_begin_1b385a015:;
			{
				_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_143841_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b385a17a:;
	};
	jule::Ptr<_1b054ca1e_MultiAssign> _146617_st = jule::new_ptr<_1b054ca1e_MultiAssign>(_1b054ca1e_MultiAssign{._field_R=_143917_rd.get()._field_Model});;
	{
		auto expr = &((*(_143841_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b385dd82:;
		if (it != expr_end) {
			jule::I64 _146913_i = it - expr->begin();
			{
				jule::Ptr<_1b04d0199_AssignLeft> _147021_lexpr = (*(_143841_a)).get()._field_Left[_146913_i];;
				jule::Ptr<_1b0612672_Data> _147121_l = nullptr;;
				if (((!(_1aa49db40_IsIgnoreIdent(_147021_lexpr.get()._field_Ident))) && ((!((*(_143841_a)).get()._field_Declarative)) || (!(_1b055b555_isNewAssignIdent(_self_.ptr(), _147021_lexpr.get()._field_Ident)))))) {
					_147121_l=_1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _147021_lexpr.get()._field_Expr);
					if ((_147121_l == nullptr)) {
						goto _iter_next_1b385dd82;
					};
				};
				jule::Ptr<_1b0612672_Data> _147921_r = _144317_right[_146913_i];;
				_1b055b80d_removeInteriorMutRisk(_self_, &(_147921_r));
				_1b055c600_processEndPartOfMultiAssign(_self_.ptr(), &(_146617_st), _143841_a, &(_147021_lexpr), &(_147121_l), &(_147921_r));
			}
			_iter_next_1b385dd82:;
			++it;
			_146913_i++;
			goto _iter_begin_1b385dd82;
		}
		_iter_end_1b385dd82:;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_146617_st, &__jule_any_type47)); };
}



inline void _1b055cb61_singleDeclAssign(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d072c_AssignSt>* _148641_a) {
	jule::Ptr<_1b04d0199_AssignLeft> _148717_lexpr = (*(_148641_a)).get()._field_Left[0LL];;
	if (_1b0555593_isDuplicatedIdent(_self_.ptr(), 0LLU, &(_148717_lexpr.get()._field_Ident))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _148717_lexpr.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_148717_lexpr.get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1b0553b8a_stop(_self_.ptr());
		return;;
	};
	if (_1aa49db40_IsIgnoreIdent(_148717_lexpr.get()._field_Ident)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _148717_lexpr.get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b0612672_Data> _149817_r = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), (*(_148641_a)).get()._field_Right);;
	if ((_149817_r == nullptr)) {
		return;;
	};
	_1b055b80d_removeInteriorMutRisk(_self_, &(_149817_r));
	jule::Ptr<_1b05ae1bd_Var> _150617_v = jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Scope=_self_.get()._field_scope, ._field_Token=_148717_lexpr.get()._field_Token, ._field_Ident=_148717_lexpr.get()._field_Ident, ._field_Mutable=_148717_lexpr.get()._field_Mutable, ._field_Reference=_148717_lexpr.get()._field_Reference, ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Expr=(*(_148641_a)).get()._field_Right, ._field_Data=_149817_r}), });;
	_1b05a5549_checkVarValue(_self_.get()._field_s, &(_150617_v));
	{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _self_.get()._field_table.get()._field_Vars; __jule_push_dest.push(_150617_v); };
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_150617_v, &__jule_any_type8)); };
}



inline void _1b055ce19_checkAssignSt(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d072c_AssignSt> _152237_a) {
	{
		
		if (_1aa4a0d73_IsPostfixOp(_152237_a.get()._field_Setter.get()._field_Id)) {
			_case_begin_1b2d7619c:;
			{
				_1b055b214_checkPostfix(_self_, _152237_a);
			}
		}
		else if ((_152237_a.get()._field_Left.len() == 1LL)) {
			_case_begin_1b2d760c0:;
			{
				if (_152237_a.get()._field_Declarative) {
					_1b055cb61_singleDeclAssign(_self_, &(_152237_a));
				} else {
					_1b055c06c_checkSingleAssign(_self_, &(_152237_a));
				};
			}
		}
		else {
			_case_begin_1b2d75333:;
			{
				_1b055c8a8_checkMultiAssign(_self_, &(_152237_a));
			}
		}
		_match_end_1b2d75278:;
	};
}



inline jule::Ptr<_1b0549048_Scope> _1b055d315_checkCaseScope(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b054dcb7_Case>* _153735_c, jule::Ptr<_1b04d1ca0_ScopeTree>* _153750_tree) {
	jule::Ptr<_1b055134c_scopeChecker> _153817_ssc = _1b0562cdc_newChildChecker(_self_);;
	_153817_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_153735_c))));
	return _1b05566a4_checkChildSc(_self_, _153750_tree, &(_153817_ssc));;
}



inline jule::Ptr<_1b054dcb7_Case> _1b055d876_checkCase(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b054d17e_Match> _154333_m, jule::I64 _154344_i, jule::Ptr<_1b04d8a98_Case> _154356_c, jule::Ptr<_1b0612672_Data> _154375_expr) {
	jule::Ptr<_1b054dcb7_Case> _154417_case = _154333_m.get()._field_Cases[_154344_i];;
	_154417_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1b0612672_Data>>::alloc(0LL, _154356_c.get()._field_Exprs.len());
	jule::Bool _154617_constMatched = false;;
	jule::Ptr<_1b0614366_Eval> _154717_eval = _1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0));;
	{
		auto expr = &(_154356_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2d7ac84:;
		if (it != expr_end) {
			jule::Ptr<_1b04c5ed6_Expr> _154821_e = *it;
			{
				jule::Ptr<_1b0612672_Data> _154921_d = _1b0636784_evalExprKind(_154717_eval, _154821_e.get()._field_Kind);;
				if ((_154921_d == nullptr)) {
					goto _iter_next_1b2d7ac84;
				};
				if (_154333_m.get()._field_TypeMatch) {
					{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = _154417_case.get()._field_Exprs; __jule_push_dest.push(_154921_d); };
					if ((_1b0547123_countMatchType(&(_154333_m), &(_154921_d.get()._field_Kind)) > 1LL)) {
						_1b058e126_pushErr(_self_.get()._field_s.ptr(), _154821_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_154921_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_154375_expr.get()._field_Kind.get()._field_Generic) {
						_154617_constMatched=(_154617_constMatched || _1b0647eb0_Equal(_154375_expr.get()._field_Kind, _154921_d.get()._field_Kind));
					} else {
						if ((_1b064abd8_TypeEnum(_154375_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1b05970da_checkTypeCompatibility(_self_.get()._field_s, &(_154375_expr.get()._field_Kind), &(_154921_d.get()._field_Kind), &(_154821_e.get()._field_Token));
						} else {
							jule::Ptr<_1b051bb97_Trait> _156429_trt = _1b064b9a8_Trait(_154375_expr.get()._field_Kind.ptr());;
							if ((_156429_trt != nullptr)) {
								_1b05970da_checkTypeCompatibility(_self_.get()._field_s, &(_154375_expr.get()._field_Kind), &(_154921_d.get()._field_Kind), &(_154821_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1b2d7ac84;
				} else if (_154333_m.get()._field_Comptime) {
					if ((!(_1b0613046_IsConst(_154921_d.ptr())))) {
						_1b058e126_pushErr(_self_.get()._field_s.ptr(), _154821_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_154617_constMatched=(_154617_constMatched || _1ad37eca4_ReadBool(_154921_d.get()._field_Constant.ptr()));
					};
				};
				if (_154921_d.get()._field_Decl) {
					_1b058e126_pushErr(_self_.get()._field_s.ptr(), _154821_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1b2d7ac84;
				};
				{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = _154417_case.get()._field_Exprs; __jule_push_dest.push(_154921_d); };
				_1b05eb23d_assignTypeChecker _158721_checker = _1b05eb23d_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_154375_expr.get()._field_Kind, ._field_d=_154921_d, ._field_errorToken=_154821_e.get()._field_Token};;
				_1b05ec4a3_check(&_158721_checker);
			}
			_iter_next_1b2d7ac84:;
			++it;
			goto _iter_begin_1b2d7ac84;
		}
		_iter_end_1b2d7ac84:;
	};
	if (((!(_154333_m.get()._field_Comptime)) || _154617_constMatched)) {
		_154417_case.get()._field_Scope=_1b055d315_checkCaseScope(_self_, &(_154417_case), &(_154356_c.get()._field_Scope));
	};
	return _154417_case;;
}



inline void _1b055dc94_checkCases(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d92d5_MatchCase>* _160135_m, jule::Ptr<_1b054d17e_Match> _160154_rm, jule::Ptr<_1b0612672_Data> _160170_expr) {
	_160154_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1b054dcb7_Case>>::alloc(0LL, (*(_160135_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_160135_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2d85244:;
		if (it != expr_end) {
			jule::I64 _160313_i = it - expr->begin();
			{
				jule::Ptr<_1b054dcb7_Case> _160421_case = jule::new_ptr<_1b054dcb7_Case>(_1b054dcb7_Case{._field_Owner=_160154_rm, });;
				if ((_160313_i > 0LL)) {
					_160154_rm.get()._field_Cases[(_160313_i - 1LL)].get()._field_Next=_160421_case;
				};
				{ jule::Slice<jule::Ptr<_1b054dcb7_Case>> &__jule_push_dest = _160154_rm.get()._field_Cases; __jule_push_dest.push(_160421_case); };
			}
			_iter_next_1b2d85244:;
			++it;
			_160313_i++;
			goto _iter_begin_1b2d85244;
		}
		_iter_end_1b2d85244:;
	};
	if (((_160154_rm.get()._field_Default != nullptr) && ((*(_160135_m)).get()._field_Cases.len() > 0LL))) {
		_160154_rm.get()._field_Cases[(_160154_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_160154_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_160135_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2d85882:;
		if (it != expr_end) {
			jule::I64 _161714_i = it - expr->begin();
			jule::Ptr<_1b04d8a98_Case> _161721_c = *it;
			{
				_1b055d876_checkCase(_self_, _160154_rm, _161714_i, _161721_c, _160170_expr);
			}
			_iter_next_1b2d85882:;
			++it;
			_161714_i++;
			goto _iter_begin_1b2d85882;
		}
		_iter_end_1b2d85882:;
	};
}



inline jule::Ptr<_1b054dcb7_Case> _1b055e190_checkDefault(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b054d17e_Match> _162236_m, jule::Ptr<_1b04d78ee_Else> _162251_d) {
	jule::Ptr<_1b054dcb7_Case> _162317_def = jule::new_ptr<_1b054dcb7_Case>(_1b054dcb7_Case{._field_Owner=_162236_m, });;
	_162317_def.get()._field_Scope=_1b055d315_checkCaseScope(_self_, &(_162317_def), &(_162251_d.get()._field_Scope));
	return _162317_def;;
}



inline void _1b055e503_checkComptimePanic(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1aa49b1d1_Token> _163038_callToken, jule::Ptr<_1b0549048_Scope>* _163058_s) {
	if (((*(_163058_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _163413_stmt = (*(_163058_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _163413_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b2d8b06e:;
			{
				jule::Ptr<_1b0612672_Data> _163717_d = _163413_stmt.cast_ptr<_1b0612672_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _163717_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b2d8be0a:;
						{
							jule::Ptr<_1b050240d_BuiltinPanicCallExprModel> _164021_m = _163717_d.get()._field_Model.cast_ptr<_1b050240d_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _164021_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1b2d8cd62:;
									{
										jule::Ptr<_1ad37cdb2_Const> _164325_c = _164021_m.get()._field_Expr.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
										if (_1ad382636_IsStr(_164325_c.ptr())) {
											if ((_163038_callToken == nullptr)) {
												jule::Ptr<_1b055134c_scopeChecker> _164637_root = _1b05546c4_getHardRoot(_self_);;
												_1b058e126_pushErr(_self_.get()._field_s.ptr(), _164637_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ad38003a_ReadStr(_164325_c.ptr()), &__jule_any_type5)}));
											} else {
												_1b058e126_pushErr(_self_.get()._field_s.ptr(), _163038_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1ad38003a_ReadStr(_164325_c.ptr()), &__jule_any_type5)}));
											};
											_1b0553b8a_stop(_self_.ptr());
										};
									}
								}
								_match_end_1b2d8cd0c:;
							};
						}
					}
					_match_end_1b2d8bda5:;
				};
			}
		}
		_match_end_1b2d8b019:;
	};
}



inline void _1b055e866_processConstMatch(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b054d17e_Match>* _165842_tm, jule::Ptr<_1b04d92d5_MatchCase>* _165859_m) {
	{
		auto expr = &((*(_165842_tm)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2d8cadc:;
		if (it != expr_end) {
			jule::I64 _165914_i = it - expr->begin();
			jule::Ptr<_1b054dcb7_Case> _165921_c = *it;
			{
				if ((_165921_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_1aa49b1d1_Token> _166125_token = nullptr;;
					if (((!((*(_165842_tm)).get()._field_TypeMatch)) && (_165921_c.get()._field_Scope.get()._field_Stmts.len() > 0LL))) {
						_166125_token=(*(_165859_m)).get()._field_Cases[_165914_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1b055e503_checkComptimePanic(_self_, _166125_token, &(_165921_c.get()._field_Scope));
					(*(_165842_tm)).get()._field_Default=_165921_c;
					(*(_165842_tm)).get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b2d8cadc:;
			++it;
			_165914_i++;
			goto _iter_begin_1b2d8cadc;
		}
		_iter_end_1b2d8cadc:;
	};
	if (((*(_165859_m)).get()._field_Default != nullptr)) {
		(*(_165842_tm)).get()._field_Cases=nullptr;
		(*(_165842_tm)).get()._field_Default=_1b055e190_checkDefault(_self_, (*(_165842_tm)), (*(_165859_m)).get()._field_Default);
		if (((*(_165842_tm)).get()._field_Default != nullptr)) {
			jule::Ptr<_1aa49b1d1_Token> _167525_token = nullptr;;
			if ((!((*(_165842_tm)).get()._field_TypeMatch))) {
				_167525_token=(*(_165859_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1b055e503_checkComptimePanic(_self_, _167525_token, &((*(_165842_tm)).get()._field_Default.get()._field_Scope));
		};
	} else {
		(*(_165842_tm)).get()._field_Cases=nullptr;
	};
}



inline void _1b055eb1e_checkTypeMatch(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d92d5_MatchCase>* _168739_m) {
	jule::Ptr<_1b0612672_Data> _168817_d = _1b0636e16_eval(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), (*(_168739_m)).get()._field_Expr);;
	if ((_168817_d == nullptr)) {
		return;;
	};
	if (((!(_168817_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1b064a19e_Prim(_168817_d.get()._field_Kind.ptr()) != nullptr) && _1b0653d45_IsAny(_1b064a19e_Prim(_168817_d.get()._field_Kind.ptr()).ptr())) || (_1b064b9a8_Trait(_168817_d.get()._field_Kind.ptr()) != nullptr)) || (_1b064abd8_TypeEnum(_168817_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_168739_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b054d17e_Match> _169917_tm = jule::new_ptr<_1b054d17e_Match>(_1b054d17e_Match{._field_Expr=_168817_d, ._field_TypeMatch=true, });;
	_169917_tm.get()._field_Comptime=_169917_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_169917_tm.get()._field_Comptime)) && ((*(_168739_m)).get()._field_Default != nullptr))) {
		_169917_tm.get()._field_Default=_1b055e190_checkDefault(_self_, _169917_tm, (*(_168739_m)).get()._field_Default);
	};
	_1b055dc94_checkCases(_self_, _168739_m, _169917_tm, _168817_d);
	if (_169917_tm.get()._field_Comptime) {
		_1b055e866_processConstMatch(_self_, &(_169917_tm), _168739_m);
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_169917_tm, &__jule_any_type48)); };
}



inline void _1b055edc7_checkCommonMatch(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d92d5_MatchCase>* _172041_m) {
	jule::Ptr<_1b0612672_Data> _172117_d = nullptr;;
	if (((*(_172041_m)).get()._field_Expr == nullptr)) {
		_172117_d=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Constant=static__1ad37d885_NewBool(true)});
		_172117_d.get()._field_Model=jule::Any(_172117_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_172117_d=_1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), (*(_172041_m)).get()._field_Expr);
		if ((_172117_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1b054d17e_Match> _173517_mc = jule::new_ptr<_1b054d17e_Match>(_1b054d17e_Match{._field_Expr=_172117_d, ._field_Comptime=(((((*(_172041_m)).get()._field_Expr != nullptr) && _1b0613046_IsConst(_172117_d.ptr())) && _1ad3823a0_IsBool(_172117_d.get()._field_Constant.ptr())) && _1ad37eca4_ReadBool(_172117_d.get()._field_Constant.ptr())), });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_173517_mc, &__jule_any_type48)); };
	if (((!(_173517_mc.get()._field_Comptime)) && ((*(_172041_m)).get()._field_Default != nullptr))) {
		_173517_mc.get()._field_Default=_1b055e190_checkDefault(_self_, _173517_mc, (*(_172041_m)).get()._field_Default);
	};
	_1b055dc94_checkCases(_self_, _172041_m, _173517_mc, _172117_d);
	if (_173517_mc.get()._field_Comptime) {
		_1b055e866_processConstMatch(_self_, &(_173517_mc), _172041_m);
	};
}



inline void _1b0560180_checkMatch(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d92d5_MatchCase> _175834_m) {
	if (_175834_m.get()._field_TypeMatch) {
		_1b055eb1e_checkTypeMatch(_self_, &(_175834_m));
		return;;
	};
	_1b055edc7_checkCommonMatch(_self_, &(_175834_m));
}



inline void _1b0560438_checkFall(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04cea39_FallSt> _176629_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1b05541a7_isDeferred(_self_))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _176629_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1b054dcb7_Case* _177417_case = ((_1b054dcb7_Case*)(_self_.get()._field_cse));;
	if (_177417_case->_field_Owner.get()._field_Comptime) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _176629_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_177417_case->_field_Next == nullptr)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _176629_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(jule::new_ptr<_1b054e3b1_FallSt>(_1b054e3b1_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_177417_case->_field_Next))}), &__jule_any_type49)); };
}



inline jule::Ptr<_1b054b5de_BreakSt> _1b0560779_checkBreakWithLabel(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d6b95_BreakSt> _178939_b) {
	jule::Ptr<_1b054b5de_BreakSt> _179017_brk = _1b0560aba_checkPlainBreak(_self_, _178939_b);;
	if ((_179017_brk == nullptr)) {
		return nullptr;;
	};
	_179017_brk.get()._field_It=0LLU;
	_179017_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1b054eda6_scopeLabel> _180017_label = _1b0546562_findLabelParent(&(_178939_b.get()._field_Label.get()._field_Kind), _self_.get()._field_parent);;
	if ((_180017_label == nullptr)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_180017_label.get()._field_used=true;
	if (((_180017_label.get()._field_pos + 1LL) >= _180017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _181313_i = (_180017_label.get()._field_pos + 1LL);;
	if ((_181313_i >= _180017_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _181721_st = _180017_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_181313_i];;
		{
			auto &_match_expr{ _181721_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1b2dac2e3:;
				{
					_179017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b2dabee6:;
				{
					_179017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1b054ad80_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1b2dac05c:;
				{
					_179017_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1b054a434_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1b2dac0c3:;
				{
					_179017_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_181721_st.cast_ptr<_1b054d17e_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1b2dabe80:;
				{
					_1b058e126_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1b2dabe2a:;
		};
	};
	if ((_179017_brk.get()._field_It != 0LLU)) {
		if ((!(_1b055a301_checkValidBreakLabel(_self_, _179017_brk.get()._field_It)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_179017_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1b055a301_checkValidBreakLabel(_self_, _179017_brk.get()._field_Mtch)))) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), _178939_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_178939_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _179017_brk;;
}



inline jule::Ptr<_1b054b5de_BreakSt> _1b0560aba_checkPlainBreak(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d6b95_BreakSt> _184735_b) {
	if (_1b05541a7_isDeferred(_self_)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _184735_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b055134c_scopeChecker> _185317_scope = _self_;;
	_julec_label_1b2db20c8:;
	{
		
		if (((((_185317_scope.get()._field_it == 0LLU) && (_185317_scope.get()._field_cse == 0LLU)) && (_185317_scope.get()._field_parent != nullptr)) && (_185317_scope.get()._field_owner == nullptr))) {
			_case_begin_1b2db2d87:;
			{
				_185317_scope=_185317_scope.get()._field_parent;
				goto _julec_label_1b2db20c8;
			}
		}
		else if ((_185317_scope.get()._field_it != 0LLU)) {
			_case_begin_1b2db2e0e:;
			{
				return jule::new_ptr<_1b054b5de_BreakSt>(_1b054b5de_BreakSt{._field_It=_185317_scope.get()._field_it, });;
			}
		}
		else if ((_185317_scope.get()._field_cse != 0LLU)) {
			_case_begin_1b2db2e86:;
			{
				return jule::new_ptr<_1b054b5de_BreakSt>(_1b054b5de_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1b054dcb7_Case*)(_185317_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1b2db2cbb:;
	};
	_1b058e126_pushErr(_self_.get()._field_s.ptr(), _184735_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1b0560d73_checkBreak(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d6b95_BreakSt> _186930_b) {
	if ((_186930_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1b054b5de_BreakSt> _187121_brk = _1b0560779_checkBreakWithLabel(_self_, _186930_b);;
		{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_187121_brk, &__jule_any_type50)); };
		return;;
	};
	jule::Ptr<_1b054b5de_BreakSt> _187617_brk = _1b0560aba_checkPlainBreak(_self_, _186930_b);;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_187617_brk, &__jule_any_type50)); };
}



inline void _1b056112b_checkRet(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d4de6_RetSt> _188032_r) {
	if (_1b05541a7_isDeferred(_self_)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _188032_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b054e746_RetSt> _188517_rt = jule::new_ptr<_1b054e746_RetSt>(_1b054e746_RetSt{._field_Func=_1b055443d_getRoot(_self_).get()._field_owner, });;
	{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_188517_rt, &__jule_any_type51)); };
	jule::Ptr<_1b060a192_retTypeChecker> _189017_rtc = jule::new_ptr<_1b060a192_retTypeChecker>(_1b060a192_retTypeChecker{._field_sc=_self_, ._field_f=_188517_rt.get()._field_Func, ._field_errorToken=_188032_r.get()._field_Token, });;
	jule::Bool _189513_ok = _1b060ada7_check(_189017_rtc.ptr(), &(_188032_r.get()._field_Expr));;
	if ((!(_189513_ok))) {
		return;;
	};
	if ((_188032_r.get()._field_Expr != nullptr)) {
		_188517_rt.get()._field_Expr=_189017_rtc.get()._field_model;
	};
}



inline void _1b05613d4_checkUseExpr(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04c68aa_UseExpr> _190532_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _190532_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1b05541a7_isDeferred(_self_)) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _190532_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _190532_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1b056168c_checkNode(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Any* _192134_node) {
	{
		auto &_match_expr{ (*(_192134_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b2dbe525:;
			{
				_1b0556c9d_checkAnonScope(_self_, (*(_192134_node)).cast_ptr<_1b04d1ca0_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b2dbea86:;
			{
				_1b055584b_checkVarDecl(_self_, (*(_192134_node)).cast_ptr<_1b04d4a1c_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b2dbe855:;
			{
				_1b0555b04_checkTypeAliasDecl(_self_, (*(_192134_node)).cast_ptr<_1b04d85e2_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b2dbed0b:;
			{
				_1b05573b9_checkExpr(_self_, (*(_192134_node)).cast_ptr<_1b04c5ed6_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b2dbed72:;
			{
				_1b0557d04_checkConditional(_self_, (*(_192134_node)).cast_ptr<_1b04d7da5_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b2dbedd8:;
			{
				_1b0559b6e_checkIter(_self_, (*(_192134_node)).cast_ptr<_1b04d5589_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b2dbee4e:;
			{
				_1b055a8ea_checkCont(_self_, (*(_192134_node)).cast_ptr<_1b04d706e_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b2dbeeb5:;
			{
				_1b055aba3_checkLabel(_self_, (*(_192134_node)).cast_ptr<_1b04ce363_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b2dc002b:;
			{
				_1b055ae5b_pushGoto(_self_, (*(_192134_node)).cast_ptr<_1b04ce73c_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b2dc0092:;
			{
				_1b055ce19_checkAssignSt(_self_, (*(_192134_node)).cast_ptr<_1b04d072c_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b2dc0108:;
			{
				_1b0560180_checkMatch(_self_, (*(_192134_node)).cast_ptr<_1b04d92d5_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b2dc016e:;
			{
				_1b0560438_checkFall(_self_, (*(_192134_node)).cast_ptr<_1b04cea39_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b2dc01d5:;
			{
				_1b0560d73_checkBreak(_self_, (*(_192134_node)).cast_ptr<_1b04d6b95_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b2dc024b:;
			{
				_1b056112b_checkRet(_self_, (*(_192134_node)).cast_ptr<_1b04d4de6_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b2dc02b2:;
			{
				_1b05613d4_checkUseExpr(_self_, (*(_192134_node)).cast_ptr<_1b04c68aa_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1b2dbe6bd:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b2dbe668:;
	};
}



inline void _1b056188a_checkResult(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	_1b04d1640_Stmt _195917_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _195917_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b2dc7e35:;
			{
				jule::Ptr<_1b04c68aa_UseExpr> _196221_ue = _195917_stmt._field_Data.cast_ptr<_1b04c68aa_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1b0612672_Data> _196321_d = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _196221_ue.get()._field_Expr);;
				if ((_196321_d == nullptr)) {
					return;;
				};
				{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_196321_d, &__jule_any_type24)); };
				jule::Ptr<_1b060a192_retTypeChecker> _196821_rtc = jule::new_ptr<_1b060a192_retTypeChecker>(_1b060a192_retTypeChecker{._field_sc=_self_, ._field_types=_1b050ca01_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_196221_ue.get()._field_Expr.get()._field_Token, });;
				_1b060ada7_check(_196821_rtc.ptr(), &(_196221_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b2dc76e8:;
			{
				jule::Ptr<_1b04c5ed6_Expr> _197521_expr = _195917_stmt._field_Data.cast_ptr<_1b04c5ed6_Expr>(&__jule_any_type53);;
				jule::Ptr<_1b0612672_Data> _197621_d = _1b0637598_evalExpr(_1b05965c3_eval(_self_.get()._field_s, jule::Trait<_1b0667584_Lookup>(_self_, 0)), _197521_expr);;
				if ((_197621_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _197621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b2dcc3ce:;
						{
							jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel> _198225_m = _197621_d.get()._field_Model.cast_ptr<_1b05045ec_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1b0557111_processErrorCall(_self_, &(_198225_m), _197521_expr.get()._field_Token);
							{ jule::Slice<jule::Any> &__jule_push_dest = _self_.get()._field_scope.get()._field_Stmts; __jule_push_dest.push(jule::Any(_197621_d, &__jule_any_type24)); };
						}
					}
					else {
						_case_begin_1b2dcc4bc:;
						{
							return;;
						}
					}
					_match_end_1b2dcc467:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1b2dc775e:;
			{
				_1b056168c_checkNode(_self_, &(_195917_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b2dc7682:;
			{
				_1b056168c_checkNode(_self_, &(_195917_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b2dc6593:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1b0561a88_checkTree(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _200417_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_200417_n)--;
	};
	for (; (_self_.get()._field_i < _200417_n); (_self_.get()._field_i)++) {
		{
			_1b04d1640_Stmt _201221_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1b056168c_checkNode(_self_, &(_201221_stmt._field_Data));
			if (_1b0553e21_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1b2dd0437:;
	}
	_iter_end_1b2dd0437:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1b056188a_checkResult(_self_);
	};
}



inline void _1b0561deb_checkGoto(_1b055134c_scopeChecker* _self_, jule::Ptr<_1b0550439_scopeGoto>* _202333_gt, jule::Ptr<_1b054eda6_scopeLabel>* _202354_label) {
	jule::Ptr<_1b055134c_scopeChecker> _202417_gtsc = (*(_202333_gt)).get()._field_scope;;
	while (((_202417_gtsc.get()._field_childIndex - 1LL) > (*(_202354_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_202417_gtsc=_202417_gtsc.get()._field_parent;
		}
	_iter_next_1b2dd2d74:;
	}
	_iter_end_1b2dd2d74:;;
	jule::I64 _202917_n = 0LL;;
	if ((_202417_gtsc.get()._field_scope == (*(_202354_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_202333_gt)).get()._field_pos > (*(_202354_label)).get()._field_pos)) {
			return;;
		};
		_202917_n=(*(_202333_gt)).get()._field_pos;
	};
	jule::I64 _204217_i = ((*(_202354_label)).get()._field_pos - 1LL);;
	if ((_202917_n == 0LL)) {
		{
			auto expr = &((*(_202354_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2dd541a:;
			if (it != expr_end) {
				jule::I64 _204517_j = it - expr->begin();
				jule::Any _204520_stmt = *it;
				{
					if (_1b0546c9e_stmtIsGotoScope(&(_204520_stmt), &(_202417_gtsc.get()._field_scope))) {
						_202917_n=_204517_j;
						goto _iter_end_1b2dd541a;
					};
				}
				_iter_next_1b2dd541a:;
				++it;
				_204517_j++;
				goto _iter_begin_1b2dd541a;
			}
			_iter_end_1b2dd541a:;
		};
	};
	for (; (_204217_i >= _202917_n); (_204217_i)--) {
		{
			jule::Any _205521_stmt = (*(_202354_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_204217_i];;
			if (_1b0548ad6_stmtIsDef(&(_205521_stmt))) {
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_202333_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_202333_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1b2dd61da:;
	}
	_iter_end_1b2dd61da:;;
}



inline void _1b05620e9_checkGotos(_1b055134c_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2dd5e98:;
		if (it != expr_end) {
			jule::Ptr<_1b0550439_scopeGoto> _206421_gt = *it;
			{
				jule::Ptr<_1b054eda6_scopeLabel> _206521_label = _1b0555197_findLabelAll(_self_, &(_206421_gt.get()._field_gt.get()._field_Label.get()._field_Kind));;
				if ((_206521_label == nullptr)) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), _206421_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_206421_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1b2dd5e98;
				};
				_206421_gt.get()._field_st.get()._field_Label=_206521_label.get()._field_label;
				_206521_label.get()._field_used=true;
				_1b0561deb_checkGoto(_self_, &(_206421_gt), &(_206521_label));
			}
			_iter_next_1b2dd5e98:;
			++it;
			goto _iter_begin_1b2dd5e98;
		}
		_iter_end_1b2dd5e98:;
	};
}



inline void _1b05622e7_checkLabels(_1b055134c_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2dd9243:;
		if (it != expr_end) {
			jule::Ptr<_1b054eda6_scopeLabel> _207716_l = *it;
			{
				if ((!(_207716_l.get()._field_used))) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), _207716_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_207716_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b2dd9243:;
			++it;
			goto _iter_begin_1b2dd9243;
		}
		_iter_end_1b2dd9243:;
	};
}



inline void _1b05624e5_checkVars(_1b055134c_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2ddb135:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _208516_v = *it;
			{
				if (((((!(_208516_v.get()._field_Used)) && (!(_208516_v.get()._field_Constant))) && (!(_1aa49db40_IsIgnoreIdent(_208516_v.get()._field_Ident)))) && (!(_1aa49de09_IsAnonIdent(_208516_v.get()._field_Ident))))) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), _208516_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_208516_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b2ddb135:;
			++it;
			goto _iter_begin_1b2ddb135;
		}
		_iter_end_1b2ddb135:;
	};
}



inline void _1b05626e3_checkAliases(_1b055134c_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2ddbed2:;
		if (it != expr_end) {
			jule::Ptr<_1b06469b4_TypeAlias> _209316_a = *it;
			{
				if ((((!(_209316_a.get()._field_Used)) && (!(_1aa49db40_IsIgnoreIdent(_209316_a.get()._field_Ident)))) && (!(_1aa49de09_IsAnonIdent(_209316_a.get()._field_Ident))))) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), _209316_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_209316_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b2ddbed2:;
			++it;
			goto _iter_begin_1b2ddbed2;
		}
		_iter_end_1b2ddbed2:;
	};
}



inline void _1b0562a56_check(jule::Ptr<_1b055134c_scopeChecker> _self_, jule::Ptr<_1b04d1ca0_ScopeTree>* _210130_tree, jule::Ptr<_1b0549048_Scope>* _210153_s) {
	(*(_210153_s)).get()._field_Deferred=(*(_210130_tree)).get()._field_Deferred;
	(*(_210153_s)).get()._field_Unsafety=(*(_210130_tree)).get()._field_Unsafety;
	jule::I64 _210513_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_210130_tree));
	_self_.get()._field_scope=(*(_210153_s));
	_1b0561a88_checkTree(_self_);
	if ((_210513_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1b05624e5_checkVars(_self_.ptr());
		_1b05626e3_checkAliases(_self_.ptr());
		if (_1b055398c_isRoot(_self_.ptr())) {
			_1b05620e9_checkGotos(_self_.ptr());
			_1b05622e7_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1b055134c_scopeChecker> _1b0562cdc_newChildChecker(jule::Ptr<_1b055134c_scopeChecker> _self_) {
	jule::Ptr<_1b055134c_scopeChecker> _212517_base = _1b0545d25_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_212517_base.get()._field_parent=_self_;
	_212517_base.get()._field_labels=_self_.get()._field_labels;
	_212517_base.get()._field_gotos=_self_.get()._field_gotos;
	_212517_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _212517_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b055134c_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1b0564162_checkCdef(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b2de4380:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b05088ed_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1b2de45c2;
				};
				goto _case_begin_1b2de4627;
			}
		}
		else {
			_case_begin_1b2de4627:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2de45c2:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b056441a_checkTypedef(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b2de685a:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1b2de6a9c;
				};
				goto _case_begin_1b2de6b02;
			}
		}
		else {
			_case_begin_1b2de6b02:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2de6a9c:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b05646c3_checkDerive(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b2de8d13:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1b2de9077;
				};
				goto _case_begin_1b2de90cc;
			}
		}
		else {
			_case_begin_1b2de90cc:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b2de9077:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1b2dec553:;
		}
		else {
			_case_begin_1b2de940c:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2dec168:;
	};
}



inline void _1b056497b_checkNamespace(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b2dedb70:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b2ded840:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b05088ed_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b2ded8a6:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8).get()._field_Binded))) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b2ded7c9:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2dec2de:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1aa49b1d1_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b2e06518:;
			{
				if ((_1b0640ea8_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1b04884b5_Directive> _11625_typedef = jule::new_ptr<_1b04884b5_Directive>(_1b04884b5_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					{ jule::Slice<jule::Ptr<_1b04884b5_Directive>> &__jule_push_dest = (*((*(_self_))._field_d)); __jule_push_dest.push(_11625_typedef); };
				};
			}
		}
		_match_end_1b2e064b3:;
	};
}



inline void _1b0564c34_checkDeprecated(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b2e08729:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66).get()._field_Binded) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b2e08790:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b05088ed_Fn>(&__jule_any_type65).get()._field_Binded) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b2e08806:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8).get()._field_Binded) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b2e08273:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2e0821d:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_1aa49b1d1_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(4LLU))) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1b0564edc_checkTest(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b2e0c695:;
			{
				jule::Ptr<_1b05088ed_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1b05088ed_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_1b0509624_IsInit(_16717_f.ptr())))) && (!(_1b050938d_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1b2e1107d;
				};
				if (_1b0509107_IsMethod(_16717_f.ptr())) {
					_1b058e126_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1b2e1107d;
				};
				goto _case_begin_1b2e110d3;
			}
		}
		else {
			_case_begin_1b2e110d3:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2e1107d:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b0565295_checkDirective(_1b0563c44_directiveChecker* _self_, jule::Ptr<_1b04884b5_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1b2e14dc8:;
			{
				_1b0564162_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1b2e14a76:;
			{
				_1b056441a_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1b2e14adc:;
			{
				_1b05646c3_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1b2e14b53:;
			{
				_1b056497b_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1b2e14bca:;
			{
				_1b0564c34_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1b2e15769:;
			{
				_1b0564edc_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1b2e157d0:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b2e14a10:;
			{
				_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b2e14999:;
	};
}



inline void _1b0565493_check(_1b0563c44_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e1799c:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _20821_d = *it;
			{
				_1b0565295_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1b2e1799c:;
			++it;
			goto _iter_begin_1b2e1799c;
		}
		_iter_end_1b2e1799c:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0563c44_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b056a971_SelectPackage(_1b056a487_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b056ad6c_FindVar(_1b056a487_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_18926_ident))))) {
		return nullptr;;
	};
	return _1b056796d_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_18926_ident), false);;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b056b268_FindTypeAlias(_1b056a487_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_20132_ident))))) {
		return nullptr;;
	};
	return _1b0567de1_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_20132_ident), false);;
}



inline jule::Ptr<_1b04e2871_Struct> _1b056b664_FindStruct(_1b056a487_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_21329_ident))))) {
		return nullptr;;
	};
	return _1b0568320_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_21329_ident), false);;
}



inline jule::Ptr<_1b05088ed_Fn> _1b056ba60_FindFn(_1b056a487_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_22525_ident))))) {
		return nullptr;;
	};
	return _1b05687c6_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_22525_ident), false);;
}



inline jule::Ptr<_1b051bb97_Trait> _1b056bda1_FindTrait(_1b056a487_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_23628_ident))))) {
		return nullptr;;
	};
	return _1b0568b17_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_23628_ident));;
}



inline jule::Ptr<_1b051e392_Enum> _1b056c1e2_FindEnum(_1b056a487_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_24727_ident))))) {
		return nullptr;;
	};
	return _1b0568e8b_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_24727_ident));;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b056c533_FindTypeEnum(_1b056a487_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1b056c9c8_isLookupable(_self_, &(_25831_ident))))) {
		return nullptr;;
	};
	return _1b0569310_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), &(_25831_ident));;
}



inline jule::Bool _1b056c9c8_isLookupable(_1b056a487_ImportInfo* _self_, jule::Str* _26728_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1b056cd19_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1b056cd19_existIdent(_self_, (*(_26728_ident)))))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1b056cd19_existIdent(_1b056a487_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e2c693:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1b2e2c693:;
			++it;
			goto _iter_begin_1b2e2c693;
		}
		_iter_end_1b2e2c693:;
	};
	return false;;
}



inline jule::Bool _1b056d0a0_isAccessibleViaSelection(_1b056a487_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1b056cd19_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b056a487_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b056d853_SelectPackage(_1b056d3ad_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b056dc4e_FindVar(_1b056d3ad_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1b056796d_findVarInPackage(&((*(_self_))._field_Files), &(_31426_ident), _31438_binded);;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b056e14a_FindTypeAlias(_1b056d3ad_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1b0567de1_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_32032_ident), _32044_binded);;
}



inline jule::Ptr<_1b04e2871_Struct> _1b056e546_FindStruct(_1b056d3ad_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1b0568320_findStructInPackage(&((*(_self_))._field_Files), &(_32629_ident), _32641_binded);;
}



inline jule::Ptr<_1b05088ed_Fn> _1b056e942_FindFn(_1b056d3ad_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1b05687c6_findFnInPackage(&((*(_self_))._field_Files), &(_33225_ident), _33237_binded);;
}



inline jule::Ptr<_1b051bb97_Trait> _1b056ec83_FindTrait(_1b056d3ad_Package* _self_, jule::Str _33828_ident) {
	return _1b0568b17_findTraitInPackage(&((*(_self_))._field_Files), &(_33828_ident));;
}



inline jule::Ptr<_1b051e392_Enum> _1b05700c4_FindEnum(_1b056d3ad_Package* _self_, jule::Str _34427_ident) {
	return _1b0568e8b_findEnumInPackage(&((*(_self_))._field_Files), &(_34427_ident));;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0570415_FindTypeEnum(_1b056d3ad_Package* _self_, jule::Str _35031_ident) {
	return _1b0569310_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_35031_ident));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b056d3ad_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b0532916_comptimeTypeInfo> _1b058ad26_pushComptimeTypeInfo(_1b058a8b4_commonSemaMeta* _self_, jule::Ptr<_1b06477a6_TypeKind>* _21444_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e549ea:;
		if (it != expr_end) {
			jule::Ptr<_1b0532916_comptimeTypeInfo> _21521_t2 = *it;
			{
				if (((_21521_t2.get()._field_base.get()._field_BindIdent == (*(_21444_t)).get()._field_BindIdent) && _1b0647eb0_Equal(_21521_t2.get()._field_base, (*(_21444_t))))) {
					return _21521_t2;;
				};
			}
			_iter_next_1b2e549ea:;
			++it;
			goto _iter_begin_1b2e549ea;
		}
		_iter_end_1b2e549ea:;
	};
	jule::Ptr<_1b0532916_comptimeTypeInfo> _22017_t1 = jule::new_ptr<_1b0532916_comptimeTypeInfo>(_1b0532916_comptimeTypeInfo{._field_base=(*(_21444_t))});;
	{ jule::Slice<jule::Ptr<_1b0532916_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_22017_t1); };
	return _22017_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b058a8b4_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b058b981_SelectPackage(_1b058b4db_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _24332_selector) {
	return _1b060c936_SelectPackage((*(_self_))._field_file.ptr(), _24332_selector);;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b058bd7c_FindVar(_1b058b4db_Sema* _self_, jule::Str _25326_ident, jule::Bool _25338_binded) {
	jule::Ptr<_1b05ae1bd_Var> _25517_v = _1b056796d_findVarInPackage(&((*(_self_))._field_files), &(_25326_ident), _25338_binded);;
	if ((_25517_v != nullptr)) {
		return _25517_v;;
	};
	if ((!(_1b05885d7_IsPub(&(_25326_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e58207:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _26621_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_26621_imp), &(_25326_ident))))) {
					goto _iter_next_1b2e58207;
				};
				_25517_v=_1b056ad6c_FindVar(_26621_imp.ptr(), _25326_ident, _25338_binded);
				if (((_25517_v != nullptr) && _1b058e885_isAccessibleDefine(_self_, _25517_v.get()._field_Public, _25517_v.get()._field_Token))) {
					return _25517_v;;
				};
			}
			_iter_next_1b2e58207:;
			++it;
			goto _iter_begin_1b2e58207;
		}
		_iter_end_1b2e58207:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b058c278_FindTypeAlias(_1b058b4db_Sema* _self_, jule::Str _28532_ident, jule::Bool _28544_binded) {
	jule::Ptr<_1b06469b4_TypeAlias> _28717_ta = _1b0567de1_findTypeAliasInPackage(&((*(_self_))._field_files), &(_28532_ident), _28544_binded);;
	if ((_28717_ta != nullptr)) {
		return _28717_ta;;
	};
	if ((!(_1b05885d7_IsPub(&(_28532_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e5ac21:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _29821_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_29821_imp), &(_28532_ident))))) {
					goto _iter_next_1b2e5ac21;
				};
				_28717_ta=_1b056b268_FindTypeAlias(_29821_imp.ptr(), _28532_ident, _28544_binded);
				if (((_28717_ta != nullptr) && _1b058e885_isAccessibleDefine(_self_, _28717_ta.get()._field_Public, _28717_ta.get()._field_Token))) {
					return _28717_ta;;
				};
			}
			_iter_next_1b2e5ac21:;
			++it;
			goto _iter_begin_1b2e5ac21;
		}
		_iter_end_1b2e5ac21:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b04e2871_Struct> _1b058c674_FindStruct(_1b058b4db_Sema* _self_, jule::Str _31729_ident, jule::Bool _31741_binded) {
	jule::Ptr<_1b04e2871_Struct> _31917_s = _1b0568320_findStructInPackage(&((*(_self_))._field_files), &(_31729_ident), _31741_binded);;
	if ((_31917_s != nullptr)) {
		return _31917_s;;
	};
	if ((!(_1b05885d7_IsPub(&(_31729_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e5d73a:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _33021_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_33021_imp), &(_31729_ident))))) {
					goto _iter_next_1b2e5d73a;
				};
				_31917_s=_1b056b664_FindStruct(_33021_imp.ptr(), _31729_ident, _31741_binded);
				if (((_31917_s != nullptr) && _1b058e885_isAccessibleDefine(_self_, _31917_s.get()._field_Public, _31917_s.get()._field_Token))) {
					return _31917_s;;
				};
			}
			_iter_next_1b2e5d73a:;
			++it;
			goto _iter_begin_1b2e5d73a;
		}
		_iter_end_1b2e5d73a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05088ed_Fn> _1b058ca70_FindFn(_1b058b4db_Sema* _self_, jule::Str _34825_ident, jule::Bool _34837_binded) {
	jule::Ptr<_1b05088ed_Fn> _35017_f = _1b05687c6_findFnInPackage(&((*(_self_))._field_files), &(_34825_ident), _34837_binded);;
	if ((_35017_f != nullptr)) {
		return _35017_f;;
	};
	if ((!(_1b05885d7_IsPub(&(_34825_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e61254:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _36121_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_36121_imp), &(_34825_ident))))) {
					goto _iter_next_1b2e61254;
				};
				_35017_f=_1b056ba60_FindFn(_36121_imp.ptr(), _34825_ident, _34837_binded);
				if (((_35017_f != nullptr) && _1b058e885_isAccessibleDefine(_self_, _35017_f.get()._field_Public, _35017_f.get()._field_Token))) {
					return _35017_f;;
				};
			}
			_iter_next_1b2e61254:;
			++it;
			goto _iter_begin_1b2e61254;
		}
		_iter_end_1b2e61254:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b051bb97_Trait> _1b058cdb1_FindTrait(_1b058b4db_Sema* _self_, jule::Str _38028_ident) {
	jule::Ptr<_1b051bb97_Trait> _38217_t = _1b0568b17_findTraitInPackage(&((*(_self_))._field_files), &(_38028_ident));;
	if ((_38217_t != nullptr)) {
		return _38217_t;;
	};
	if ((!(_1b05885d7_IsPub(&(_38028_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e63a1a:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_39321_imp), &(_38028_ident))))) {
					goto _iter_next_1b2e63a1a;
				};
				_38217_t=_1b056bda1_FindTrait(_39321_imp.ptr(), _38028_ident);
				if (((_38217_t != nullptr) && _1b058e885_isAccessibleDefine(_self_, _38217_t.get()._field_Public, _38217_t.get()._field_Token))) {
					return _38217_t;;
				};
			}
			_iter_next_1b2e63a1a:;
			++it;
			goto _iter_begin_1b2e63a1a;
		}
		_iter_end_1b2e63a1a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b051e392_Enum> _1b058d202_FindEnum(_1b058b4db_Sema* _self_, jule::Str _41227_ident) {
	jule::Ptr<_1b051e392_Enum> _41417_e = _1b0568e8b_findEnumInPackage(&((*(_self_))._field_files), &(_41227_ident));;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	if ((!(_1b05885d7_IsPub(&(_41227_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b378d91b:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _42521_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_42521_imp), &(_41227_ident))))) {
					goto _iter_next_1b378d91b;
				};
				_41417_e=_1b056c1e2_FindEnum(_42521_imp.ptr(), _41227_ident);
				if (((_41417_e != nullptr) && _1b058e885_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1b378d91b:;
			++it;
			goto _iter_begin_1b378d91b;
		}
		_iter_end_1b378d91b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b058d543_FindTypeEnum(_1b058b4db_Sema* _self_, jule::Str _44431_ident) {
	jule::Ptr<_1b0520a9c_TypeEnum> _44617_e = _1b0569310_findTypeEnumInPackage(&((*(_self_))._field_files), &(_44431_ident));;
	if ((_44617_e != nullptr)) {
		return _44617_e;;
	};
	if ((!(_1b05885d7_IsPub(&(_44431_ident))))) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37911d2:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _45721_imp = *it;
			{
				if ((!(_1b058952d_impIsLookupable(&(_45721_imp), &(_44431_ident))))) {
					goto _iter_next_1b37911d2;
				};
				_44617_e=_1b056c533_FindTypeEnum(_45721_imp.ptr(), _44431_ident);
				if (((_44617_e != nullptr) && _1b058e885_isAccessibleDefine(_self_, _44617_e.get()._field_Public, _44617_e.get()._field_Token))) {
					return _44617_e;;
				};
			}
			_iter_next_1b37911d2:;
			++it;
			goto _iter_begin_1b37911d2;
		}
		_iter_end_1b37911d2:;
	};
	return nullptr;;
}



inline jule::Bool _1b058d950_isFlag(_1b058b4db_Sema* _self_, jule::I64 _47321_flags) {
	return (((*(_self_))._field_flags & _47321_flags) == _47321_flags);;
}



inline void _1b058dc08_setCurrentFile(_1b058b4db_Sema* _self_, jule::Ptr<_1b060c44c_SymbolTable> _47537_f) {
	(*(_self_))._field_file=_47537_f;
}



inline void _1b058e126_pushErr(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token> _47726_token, jule::Str _47741_fmt, jule::Slice<jule::Any> _47754_args) {
	{ jule::Slice<_1aa3c3a21_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b05891a9_compilerErr(&(_47726_token), true, _47741_fmt, _47754_args)); };
}



inline void _1b058e489_pushSuggestion(_1b058b4db_Sema* _self_, jule::Str _48233_fmt, jule::Slice<jule::Any> _48246_args) {
	{
		_1b058a6d8_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _48233_fmt, _48246_args);
	};
}



inline jule::Bool _1b058e885_isAccessibleDefine(_1b058b4db_Sema* _self_, jule::Bool _48733_public, jule::Ptr<_1aa49b1d1_Token> _48747_token) {
	return ((_48733_public || (_48747_token.get()._field_File == nullptr)) || (_1aa4a211b_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _1aa4a211b_Dir(_48747_token.get()._field_File.ptr())));;
}



inline jule::Bool _1b058ed3b_isDuplicatedIdent(_1b058b4db_Sema* _self_, jule::Uintptr _49432_itself, jule::Str* _49450_ident, jule::Bool _49462_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b368cad4:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> *_49516_f = it;
			{
				if (_1b061096c_isDuplicatedIdent((*(_49516_f)).ptr(), _49432_itself, _49450_ident, _49462_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_49516_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b368d310:;
					if (it != expr_end) {
						jule::Ptr<_1b056a487_ImportInfo> *_50020_imp = it;
						{
							{
								auto expr = &((*(_50020_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b368d4ec:;
								if (it != expr_end) {
									jule::Ptr<_1aa49b1d1_Token> *_50124_selected = it;
									{
										if (((*(_50124_selected)).get()._field_Kind == (*(_49450_ident)))) {
											return true;;
										};
									}
									_iter_next_1b368d4ec:;
									++it;
									goto _iter_begin_1b368d4ec;
								}
								_iter_end_1b368d4ec:;
							};
						}
						_iter_next_1b368d310:;
						++it;
						goto _iter_begin_1b368d310;
					}
					_iter_end_1b368d310:;
				};
			}
			_iter_next_1b368cad4:;
			++it;
			goto _iter_begin_1b368cad4;
		}
		_iter_end_1b368cad4:;
	};
	return false;;
}



inline void _1b059019e_checkDirectives(jule::Ptr<_1b058b4db_Sema> _self_, jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _51140_d, jule::Any _51166_o) {
	_1b0563c44_directiveChecker _51217_dc = _1b0563c44_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1b04884b5_Directive>>>)((&((*(_51140_d)))))), ._field_o=_51166_o};;
	_1b0565493_check(&_51217_dc);
}



inline jule::Bool _1b0590655_checkGenericQuantity(_1b058b4db_Sema* _self_, jule::I64 _52039_required, jule::I64 _52054_given, jule::Ptr<_1aa49b1d1_Token> _52066_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_52039_required == 0LL) && (_52054_given > 0LL))) {
			_case_begin_1b3690ac6:;
			{
				_1b058e126_pushErr(_self_, _52066_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_52039_required > 0LL) && (_52054_given == 0LL))) {
			_case_begin_1b3690b4d:;
			{
				_1b058e126_pushErr(_self_, _52066_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required < _52054_given)) {
			_case_begin_1b3690bc5:;
			{
				_1b058e126_pushErr(_self_, _52066_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_52039_required > _52054_given)) {
			_case_begin_1b3690de5:;
			{
				_1b058e126_pushErr(_self_, _52066_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b36909d8:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b369091c:;
	};
}



inline jule::Bool _1b0590a51_isDuplicatedImportSelection(_1b058b4db_Sema* _self_, jule::Uintptr _53942_itself, jule::Str* _53960_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b369316c:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> *_54016_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_54016_imp))) == _53942_itself)) {
					goto _iter_end_1b369316c;
				};
				if (_1b056cd19_existIdent((*(_54016_imp)).ptr(), (*(_53960_ident)))) {
					return true;;
				};
			}
			_iter_next_1b369316c:;
			++it;
			goto _iter_begin_1b369316c;
		}
		_iter_end_1b369316c:;
	};
	return false;;
}



inline jule::Any _1b0590e4c_getImportDef(_1b058b4db_Sema* _self_, jule::Str* _55228_ident, jule::Ptr<_1b056a487_ImportInfo>* _55245_imp) {
	if ((_1b0733430_findPackageBuiltinDef(&((*(_55245_imp)).get()._field_LinkPath), _55228_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_55245_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3694d0b:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _55621_f = *it;
			{
				;
				jule::Any _55921_def = _1b06104b6_defByIdent(_55621_f.ptr(), _55228_ident, false);;
				if ((_55921_def != nullptr)) {
					return _55921_def;;
				};
			}
			_iter_next_1b3694d0b:;
			++it;
			goto _iter_begin_1b3694d0b;
		}
		_iter_end_1b3694d0b:;
	};
	return nullptr;;
}



inline jule::Bool _1b369b1db_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b05ae1bd_Var>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b369ed27_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b06469b4_TypeAlias>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b36a38ec_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b04e2871_Struct>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b36a7659_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b051bb97_Trait>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b397763d_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b051e392_Enum>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b397b213_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b0520a9c_TypeEnum>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b397ecd8_checkImportSelection(_1b058b4db_Sema* _self_, jule::Ptr<_1aa49b1d1_Token>* _56743_ident, jule::Ptr<_1b05088ed_Fn>* _56759_s) {
	if ((!(_1b058e885_isAccessibleDefine(_self_, (*(_56759_s)).get()._field_Public, (*(_56759_s)).get()._field_Token)))) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_56743_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1b056984e_defByIdentPackage(&((*(_self_))._field_files), &((*(_56759_s)).get()._field_Ident), false) != nullptr)) {
		_1b058e126_pushErr(_self_, (*(_56743_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_56759_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1b0591689_checkImportSelectedSelections(_1b058b4db_Sema* _self_, jule::Ptr<_1b056a487_ImportInfo>* _58153_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_58153_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3696c42:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> _58316_ident = *it;
			{
				if (_58316_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1b3696c42;
				};
				if (_1b0590a51_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_58153_imp)))), &(_58316_ident.get()._field_Kind))) {
					_1b058e126_pushErr(_self_, _58316_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_58316_ident.get()._field_Kind, &__jule_any_type5)}));
					_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b3696c42;
				};
				jule::Any _59521_def = _1b0590e4c_getImportDef(_self_, &(_58316_ident.get()._field_Kind), _58153_imp);;
				{
					auto &_match_expr{ _59521_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1b3698dba:;
						{
							goto _iter_next_1b3696c42;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b36993b5:;
						{
							jule::Ptr<_1b05ae1bd_Var> _60125_v = _59521_def.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
							__jule_func_result=(_1b369b1db_checkImportSelection(_self_, &(_58316_ident), &(_60125_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1b369942b:;
						{
							jule::Ptr<_1b06469b4_TypeAlias> _60425_ta = _59521_def.cast_ptr<_1b06469b4_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1b369ed27_checkImportSelection(_self_, &(_58316_ident), &(_60425_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b3699492:;
						{
							jule::Ptr<_1b04e2871_Struct> _60725_s = _59521_def.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1b36a38ec_checkImportSelection(_self_, &(_58316_ident), &(_60725_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b3699508:;
						{
							jule::Ptr<_1b051bb97_Trait> _61025_t = _59521_def.cast_ptr<_1b051bb97_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1b36a7659_checkImportSelection(_self_, &(_58316_ident), &(_61025_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1b3699eed:;
						{
							jule::Ptr<_1b051e392_Enum> _61325_e = _59521_def.cast_ptr<_1b051e392_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1b397763d_checkImportSelection(_self_, &(_58316_ident), &(_61325_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1b369a064:;
						{
							jule::Ptr<_1b0520a9c_TypeEnum> _61625_e = _59521_def.cast_ptr<_1b0520a9c_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1b397b213_checkImportSelection(_self_, &(_58316_ident), &(_61625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b369a0ca:;
						{
							jule::Ptr<_1b05088ed_Fn> _61925_f = _59521_def.cast_ptr<_1b05088ed_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1b397ecd8_checkImportSelection(_self_, &(_58316_ident), &(_61925_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b369934e:;
						{
							_1b058e126_pushErr(_self_, _58316_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_58316_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1b3696c42;
						}
					}
					_match_end_1b36990a7:;
				};
			}
			_iter_next_1b3696c42:;
			++it;
			goto _iter_begin_1b3696c42;
		}
		_iter_end_1b3696c42:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b3983c43_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3985618:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b369b1db_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b3985618:;
			++it;
			goto _iter_begin_1b3985618;
		}
		_iter_end_1b3985618:;
	};
	return _63117_ok;;
}

inline jule::Bool _1b3984b67_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b398820e:;
		if (it != expr_end) {
			jule::Ptr<_1b06469b4_TypeAlias> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b369ed27_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b398820e:;
			++it;
			goto _iter_begin_1b398820e;
		}
		_iter_end_1b398820e:;
	};
	return _63117_ok;;
}

inline jule::Bool _1b39877a2_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b04e2871_Struct>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b398ace4:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b36a38ec_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b398ace4:;
			++it;
			goto _iter_begin_1b398ace4;
		}
		_iter_end_1b398ace4:;
	};
	return _63117_ok;;
}

inline jule::Bool _1b398a343_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b05088ed_Fn>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b398d8eb:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b397ecd8_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b398d8eb:;
			++it;
			goto _iter_begin_1b398d8eb;
		}
		_iter_end_1b398d8eb:;
	};
	return _63117_ok;;
}

inline jule::Bool _1b398ce8e_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b051bb97_Trait>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b399148c:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b36a7659_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b399148c:;
			++it;
			goto _iter_begin_1b399148c;
		}
		_iter_end_1b399148c:;
	};
	return _63117_ok;;
}

inline jule::Bool _1b3990a30_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b051e392_Enum>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b399402d:;
		if (it != expr_end) {
			jule::Ptr<_1b051e392_Enum> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b397763d_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b399402d:;
			++it;
			goto _iter_begin_1b399402d;
		}
		_iter_end_1b399402d:;
	};
	return _63117_ok;;
}

inline jule::Bool _1b39935c1_checkImportsAllSelectionsFromCollection(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b0520a9c_TypeEnum>>* _63062_s, jule::Ptr<_1aa49b1d1_Token>* _63071_et) {
	jule::Bool _63117_ok = true;;
	{
		auto expr = _63062_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3996b57:;
		if (it != expr_end) {
			jule::Ptr<_1b0520a9c_TypeEnum> *_63216_d = it;
			{
				if ((*(_63216_d)).get()._field_Public) {
					_63117_ok=(_1b397b213_checkImportSelection(_self_, _63071_et, _63216_d) && _63117_ok);
				};
			}
			_iter_next_1b3996b57:;
			++it;
			goto _iter_begin_1b3996b57;
		}
		_iter_end_1b3996b57:;
	};
	return _63117_ok;;
}



inline jule::Bool _1b0591dc6_checkImportAllSelections(_1b058b4db_Sema* _self_, jule::Ptr<_1b056a487_ImportInfo>* _64044_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_64044_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b369e8b5:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> *_64216_file = it;
			{
				__jule_func_result=(_1b3983c43_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Vars), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b3984b67_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_TypeAliases), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b39877a2_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Structs), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b398a343_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Funcs), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b398ce8e_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Traits), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b3990a30_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_Enums), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b39935c1_checkImportsAllSelectionsFromCollection(_self_, &((*(_64216_file)).get()._field_TypeEnums), &((*(_64044_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1b369e8b5:;
			++it;
			goto _iter_begin_1b369e8b5;
		}
		_iter_end_1b369e8b5:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b0592217_checkImportSelections(_1b058b4db_Sema* _self_, jule::Ptr<_1b056a487_ImportInfo>* _65445_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_65445_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1b0591689_checkImportSelectedSelections(_self_, _65445_imp);
		return __jule_func_result;;
	} else if ((*(_65445_imp)).get()._field_ImportAll) {
		__jule_func_result = _1b0591dc6_checkImportAllSelections(_self_, _65445_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b0592558_isUseAliasDuplication(_1b058b4db_Sema* _self_, jule::Ptr<_1b056a487_ImportInfo>* _66341_imp) {
	if (((*(_66341_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39990ee:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _66821_imp2 = *it;
			{
				if ((_66821_imp2 == (*(_66341_imp)))) {
					goto _iter_end_1b39990ee;
				};
				if ((_66821_imp2.get()._field_Alias == (*(_66341_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_66821_imp2.get()._field_Ident == _66821_imp2.get()._field_LinkPath) && (_66821_imp2.get()._field_Ident == (*(_66341_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1b39990ee:;
			++it;
			goto _iter_begin_1b39990ee;
		}
		_iter_end_1b39990ee:;
	};
	return false;;
}



inline jule::Bool _1b0592899_checkImport(_1b058b4db_Sema* _self_, jule::Ptr<_1b056a487_ImportInfo>* _68335_imp) {
	if (((*(_68335_imp)).get()._field_Binded || ((*(_68335_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1b0592558_isUseAliasDuplication(_self_, _68335_imp)) {
		_1b058e126_pushErr(_self_, (*(_68335_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_68335_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_68335_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1b058b4db_Sema> _69421_sema = jule::new_ptr<_1b058b4db_Sema>(_1b058b4db_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1b05aa6e7_check(_69421_sema, &((*(_68335_imp)).get()._field_Package.get()._field_Files));
		if ((_69421_sema.get()._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append(_69421_sema.get()._field_errors);;
			_69421_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1b0592217_checkImportSelections(_self_, _68335_imp);;
}



inline void _1b0592a97_checkImports(_1b058b4db_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b399e566:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _70921_file = *it;
			{
				_1b058dc08_setCurrentFile(_self_, _70921_file);
				{
					auto expr = &(_70921_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b39a038b:;
					if (it != expr_end) {
						jule::Ptr<_1b056a487_ImportInfo> _71125_imp = *it;
						{
							jule::Bool _71221_ok = _1b0592899_checkImport(_self_, &(_71125_imp));;
							if ((!(_71221_ok))) {
								return;;
							};
						}
						_iter_next_1b39a038b:;
						++it;
						goto _iter_begin_1b39a038b;
					}
					_iter_end_1b39a038b:;
				};
			}
			_iter_next_1b399e566:;
			++it;
			goto _iter_begin_1b399e566;
		}
		_iter_end_1b399e566:;
	};
}



inline void _1b0592c95_implFileImpls(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39a02d1:;
		if (it != expr_end) {
			jule::Ptr<_1b0543b14_Impl> _72221_imp = *it;
			{
				_1b05a14ac_implImpl(_self_, &(_72221_imp));
			}
			_iter_next_1b39a02d1:;
			++it;
			goto _iter_begin_1b39a02d1;
		}
		_iter_end_1b39a02d1:;
	};
}



inline void _1b0592e93_implImpls(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39a1bb7:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _72821_file = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _72821_file);
				_1b0592c95_implFileImpls(_self_);
			}
			_iter_next_1b39a1bb7:;
			++it;
			goto _iter_begin_1b39a1bb7;
		}
		_iter_end_1b39a1bb7:;
	};
}



inline void _1b0593191_checkEnums(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39a26e0:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _73521_file = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _73521_file);
				{
					
					if ((!(_1b059c8e8_checkEnumDecls(_self_)))) {
						_case_begin_1b39a3a32:;
					}
					else if ((!(_1b059cb7e_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b39a3aa9:;
					}
					_match_end_1b39a3999:;
				};
			}
			_iter_next_1b39a26e0:;
			++it;
			goto _iter_begin_1b39a26e0;
		}
		_iter_end_1b39a26e0:;
	};
}



inline void _1b059338e_checkFileInherits(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39a325c:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _74521_t = *it;
			{
				jule::Bool _74617_ok = _1b059e543__checkTraitDeclInherits(_self_, &(_74521_t));;
				if ((!(_74617_ok))) {
					return;;
				};
			}
			_iter_next_1b39a325c:;
			++it;
			goto _iter_begin_1b39a325c;
		}
		_iter_end_1b39a325c:;
	};
}



inline void _1b059358c_checkInherits(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39a4868:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _75421_file = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _75421_file);
				_1b059338e_checkFileInherits(_self_);
			}
			_iter_next_1b39a4868:;
			++it;
			goto _iter_begin_1b39a4868;
		}
		_iter_end_1b39a4868:;
	};
}



inline _1b065990b_typeChecker _1b0593a43_typeChecker(jule::Ptr<_1b058b4db_Sema> _self_, jule::Trait<_1b0667584_Lookup> _76035_l, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _76050_generics, jule::Ptr<_1b065891b_referencer> _76113_referencer) {
	_1b065990b_typeChecker _76217_tc = _1b065990b_typeChecker{._field_s=_self_, ._field_rootLookup=_76035_l, ._field_lookup=_76035_l, ._field_referencer=_76113_referencer, ._field_useGenerics=_76050_generics, };;
	{
		auto &_match_expr{ _76035_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b39a7294:;
			{
				jule::Ptr<_1b055134c_scopeChecker> _77121_hard = _1b05546c4_getHardRoot(_76035_l.cast_ptr<_1b055134c_scopeChecker>(0));;
				_76217_tc._field_refers=_77121_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1b39a723e:;
	};
	if (((_76113_referencer != nullptr) && (_76113_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _76113_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b39a86c4:;
				{
					_76217_tc._field_ownerAlias=_76113_referencer.get()._field_owner.cast_ptr<_1b06469b4_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1b39a866e:;
		};
	};
	return _76217_tc;;
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b05940a4_buildTypeWithRefers(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04c1ba2_TypeDecl>* _78744_t, jule::Trait<_1b0667584_Lookup> _78767_l, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _78813_generics, jule::Ptr<_1b065891b_referencer> _78841_referencer) {
	return ({ auto _wrap_copy = _1b0593a43_typeChecker(_self_, _78767_l, _78813_generics, _78841_referencer); _1b06620a6_checkDecl(&_wrap_copy, _78744_t); });;
}



inline jule::Bool _1b0594615_checkTypeWithRefers(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b064ec20_TypeSymbol>* _79444_t, jule::Trait<_1b0667584_Lookup> _79464_l, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _79513_generics, jule::Ptr<_1b065891b_referencer> _79541_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1b0650094_checked((*(_79444_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_79444_t)).get()._field_Kind=_1b05940a4_buildTypeWithRefers(_self_, &((*(_79444_t)).get()._field_Decl), _79464_l, _79513_generics, _79541_referencer);
	__jule_func_result = _1b0650094_checked((*(_79444_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1b0541ace_constraintChecker> _1b059489b_constraintChecker(jule::Ptr<_1b058b4db_Sema> _self_) {
	return jule::new_ptr<_1b0541ace_constraintChecker>(_1b0541ace_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1b0594c97_checkType(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b064ec20_TypeSymbol>* _80934_t, jule::Trait<_1b0667584_Lookup> _80954_l) {
	return _1b0594615_checkTypeWithRefers(_self_, _80934_t, _80954_l, nullptr, nullptr);;
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b059524d_buildTypeWithGenerics(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04c1ba2_TypeDecl>* _81546_t, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _81613_generics, jule::Ptr<_1b050e99d_ReferenceStack> _81641_refers) {
	jule::Ptr<_1b065990b_typeChecker> _81717_tc = jule::new_ptr<_1b065990b_typeChecker>(_1b065990b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_refers=_81641_refers, ._field_useGenerics=_81613_generics, });;
	return _1b06620a6_checkDecl(_81717_tc.ptr(), _81546_t);;
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b05958d0_selectType(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04c1ba2_TypeDecl>* _83335_t) {
	jule::Ptr<_1b065990b_typeChecker> _83417_tc = jule::new_ptr<_1b065990b_typeChecker>(_1b065990b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1b06620a6_checkDecl(_83417_tc.ptr(), _83335_t);;
}



inline jule::Ptr<_1b0614366_Eval> _1b0595d86_evalpd(jule::Ptr<_1b058b4db_Sema> _self_, jule::Trait<_1b0667584_Lookup> _84530_l, jule::Ptr<_1b06477a6_TypeKind> _84545_p, jule::Ptr<_1b05ae1bd_Var> _84563_owner) {
	jule::Ptr<_1b0614366_Eval> _84617_e = jule::new_ptr<_1b0614366_Eval>(_1b0614366_Eval{._field_s=_self_, ._field_lookup=_84530_l, ._field_owner=_84563_owner, });;
	{
		auto &_match_expr{ _84530_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b39b1c2c:;
			{
				_84617_e.get()._field_unsafety=_1b0553706_isUnsafe(_84530_l.cast_ptr<_1b055134c_scopeChecker>(0));
			}
		}
		_match_end_1b39b1bc7:;
	};
	_84617_e.get()._field_prefix=_84545_p;
	return _84617_e;;
}



inline jule::Ptr<_1b0614366_Eval> _1b0596282_evalp(jule::Ptr<_1b058b4db_Sema> _self_, jule::Trait<_1b0667584_Lookup> _86029_l, jule::Ptr<_1b06477a6_TypeKind> _86044_p) {
	return _1b0595d86_evalpd(_self_, _86029_l, _86044_p, nullptr);;
}



inline jule::Ptr<_1b0614366_Eval> _1b05965c3_eval(jule::Ptr<_1b058b4db_Sema> _self_, jule::Trait<_1b0667584_Lookup> _86528_l) {
	return _1b0596282_evalp(_self_, _86528_l, nullptr);;
}



inline jule::Bool _1b0596b34_checkAssignType(jule::Ptr<_1b058b4db_Sema> _self_, jule::Bool _86935_destIsRef, jule::Ptr<_1b06477a6_TypeKind>* _86957_dest, jule::Ptr<_1b0612672_Data>* _87014_d, jule::Ptr<_1aa49b1d1_Token> _87028_errorToken) {
	if ((*(_87014_d)).get()._field_Decl) {
		_1b058e126_pushErr(_self_.ptr(), _87028_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_86935_destIsRef) {
		if ((!(_1b0647eb0_Equal((*(_86957_dest)), (*(_87014_d)).get()._field_Kind)))) {
			_1b058e126_pushErr(_self_.ptr(), _87028_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_86957_dest)).ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_87014_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1b05eb23d_assignTypeChecker> _88121_atc = jule::new_ptr<_1b05eb23d_assignTypeChecker>(_1b05eb23d_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_86957_dest)), ._field_d=(*(_87014_d)), ._field_errorToken=_87028_errorToken});;
		jule::Bool _88717_ok = _1b05ec4a3_check(_88121_atc.ptr());;
		if ((!(_88717_ok))) {
			return false;;
		};
	};
	if (((!(_1b0613046_IsConst((*(_87014_d)).ptr()))) || (_1b064a19e_Prim((*(_86957_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _89717_kind = _1b064a19e_Prim((*(_86957_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1ad37bad6_IsSigInt(_89717_kind)) {
			_case_begin_1b39b8074:;
			{
				_1ad380d2c_SetI64((*(_87014_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64((*(_87014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1ad37bde4_IsUnsigInt(_89717_kind)) {
			_case_begin_1b39b80eb:;
			{
				_1ad3810d5_SetU64((*(_87014_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64((*(_87014_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1ad37c4ee_IsFloat(_89717_kind)) {
			_case_begin_1b39b8173:;
			{
				_1ad3818ee_SetF64((*(_87014_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ad380a74_AsF64((*(_87014_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1b39b7ea8:;
	};
	return true;;
}



inline jule::Bool _1b05970da_checkTypeCompatibility(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b06477a6_TypeKind>* _91147_dest, jule::Ptr<_1b06477a6_TypeKind>* _91214_src, jule::Ptr<_1aa49b1d1_Token>* _91235_errorToken) {
	if (((*(_91214_src)) == nullptr)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_91147_dest)).ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_91214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1b064bec5_Tup((*(_91214_src)).ptr()) != nullptr)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_91147_dest)).ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_91214_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1b05e948e_typeCompatibilityChecker _92617_tcc = _1b05e948e_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_91147_dest)), ._field_src=(*(_91214_src)), ._field_errorToken=(*(_91235_errorToken))};;
	if (_1b05eab55_check(&_92617_tcc)) {
		return true;;
	};
	_1b058e126_pushErr(_self_.ptr(), (*(_91235_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_91147_dest)).ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_91214_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b0597591_buildNonGenericTypeKind(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04c1ba2_TypeDecl>* _94748_ast, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>* _94814_generics, jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>* _94850_ignored) {
	jule::Ptr<_1b065990b_typeChecker> _94917_tc = jule::new_ptr<_1b065990b_typeChecker>(_1b065990b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_94814_generics)), ._field_ignoredGenerics=(&((*(_94850_ignored)))), });;
	return _1b06620a6_checkDecl(_94917_tc.ptr(), _94748_ast);;
}



inline jule::Bool _1b059798c_buildFnNonGenericTypeKinds(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050b802_FnIns>* _95951_f, jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>* _95967_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _96117_generics = nullptr;;
	if (_1b0509107_IsMethod((*(_95951_f)).get()._field_Decl.ptr())) {
		_96117_generics=jule::append((*(_95951_f)).get()._field_Decl.get()._field_Generics,(*(_95951_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_96117_generics=(*(_95951_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_95951_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c16dc:;
		if (it != expr_end) {
			jule::Ptr<_1b050a856_ParamIns> _96821_p = *it;
			{
				if ((!(_1b0507545_IsSelf(_96821_p.get()._field_Decl.ptr())))) {
					_96821_p.get()._field_Kind=_1b0597591_buildNonGenericTypeKind(_self_, &(_96821_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_96117_generics), _95967_ignored);
					__jule_func_result=(__jule_func_result && (_96821_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1b39c16dc:;
			++it;
			goto _iter_begin_1b39c16dc;
		}
		_iter_end_1b39c16dc:;
	};
	if ((!(_1b0508d71_IsVoid((*(_95951_f)).get()._field_Decl.ptr())))) {
		(*(_95951_f)).get()._field_Result=_1b0597591_buildNonGenericTypeKind(_self_, &((*(_95951_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_96117_generics), _95967_ignored);
		__jule_func_result=(__jule_func_result && ((*(_95951_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b050b802_FnIns> _1b0597ccd_getTraitCheckFnKind(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _98144_f) {
	if (((*(_98144_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_98144_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1b050b802_FnIns> _98517_ins = _1b0509dc7_instanceForce((*(_98144_f)));;
	jule::Ptr<_1b065990b_typeChecker> _98717_tc = jule::new_ptr<_1b065990b_typeChecker>(_1b065990b_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1b0667584_Lookup>(_self_, 3), });;
	{
		auto expr = &(_98517_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39c4844:;
		if (it != expr_end) {
			jule::Ptr<_1b050a856_ParamIns> _99221_p = *it;
			{
				if ((!(_1b0507545_IsSelf(_99221_p.get()._field_Decl.ptr())))) {
					_99221_p.get()._field_Kind=_1b06620a6_checkDecl(_98717_tc.ptr(), &(_99221_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1b39c4844:;
			++it;
			goto _iter_begin_1b39c4844;
		}
		_iter_end_1b39c4844:;
	};
	if ((!(_1b0508d71_IsVoid((*(_98144_f)).ptr())))) {
		_98517_ins.get()._field_Result=_1b06620a6_checkDecl(_98717_tc.ptr(), &((*(_98144_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _98517_ins;;
}



inline jule::Bool _1b0598284_checkConstraintsFn(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050b802_FnIns>* _100443_f, jule::Ptr<_1aa49b1d1_Token>* _100459_et, jule::Ptr<_1b050b802_FnIns> _100475_exist) {
	jule::Ptr<_1b0541ace_constraintChecker> _100517_cc = _1b059489b_constraintChecker(_self_);;
	_100517_cc.get()._field_et=(*(_100459_et));
	_100517_cc.get()._field_fi=(*(_100443_f));
	if ((_100475_exist != nullptr)) {
		{
			auto expr = &(_100475_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b39c9360:;
			if (it != expr_end) {
				jule::I64 _100918_i = it - expr->begin();
				jule::Ptr<_1b0645dc0_InsGeneric> _100925_g = *it;
				{
					(*(_100443_f)).get()._field_Generics[_100918_i].get()._field_Constraint=_100925_g.get()._field_Constraint;
				}
				_iter_next_1b39c9360:;
				++it;
				_100918_i++;
				goto _iter_begin_1b39c9360;
			}
			_iter_end_1b39c9360:;
		};
	} else {
		_100517_cc.get()._field_uniq=true;
	};
	return _1b0542a14_check(_100517_cc);;
}



inline jule::Bool _1b059873a_checkConstraintsStruct(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _101847_s, jule::Ptr<_1aa49b1d1_Token>* _101867_et, jule::Ptr<_1b04e5951_StructIns> _101883_exist) {
	jule::Ptr<_1b0541ace_constraintChecker> _101917_cc = _1b059489b_constraintChecker(_self_);;
	_101917_cc.get()._field_et=(*(_101867_et));
	_101917_cc.get()._field_si=(*(_101847_s));
	if ((_101883_exist != nullptr)) {
		{
			auto expr = &(_101883_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b39cbad2:;
			if (it != expr_end) {
				jule::I64 _102318_i = it - expr->begin();
				jule::Ptr<_1b0645dc0_InsGeneric> _102325_g = *it;
				{
					(*(_101847_s)).get()._field_Generics[_102318_i].get()._field_Constraint=_102325_g.get()._field_Constraint;
				}
				_iter_next_1b39cbad2:;
				++it;
				_102318_i++;
				goto _iter_begin_1b39cbad2;
			}
			_iter_end_1b39cbad2:;
		};
	} else {
		_101917_cc.get()._field_uniq=true;
	};
	return _1b0542a14_check(_101917_cc);;
}



inline jule::Bool _1b0598b36_fnEnvironment(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050b802_FnIns>* _103538_f, jule::Fn<jule::Bool(jule::Ptr<_1b058b4db_Sema>*,jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*)> _103549_algo) {
	jule::Ptr<_1b058b4db_Sema> _103617_sema = (*(_103538_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1b060c44c_SymbolTable> _103717_old = (*(_103538_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1b058dc08_setCurrentFile((*(_103538_f)).get()._field_Decl.get()._field_sema.ptr(), _103717_old);
	});;
	jule::Ptr<_1b060c44c_SymbolTable> _103917_file = _1b058a232_findFile(&((*(_103538_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_103538_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_103917_file != nullptr)) {
		_1b058dc08_setCurrentFile((*(_103538_f)).get()._field_Decl.get()._field_sema.ptr(), _103917_file);
	};
	jule::I64 _104417_size = (*(_103538_f)).get()._field_Generics.len();;
	if ((((*(_103538_f)).get()._field_Decl != nullptr) && ((*(_103538_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_104417_size+=(*(_103538_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _104917_generics = jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>::alloc(0LL, _104417_size);;
	_1b0589dad_appendGenericTypeAliases(&(_104917_generics), _103538_f);
	jule::Bool _105213_ok = _103549_algo(&(_103617_sema), &(_104917_generics));;
	if ((_103617_sema != _self_)) {
		(_self_.get()._field_errors).append(_103617_sema.get()._field_errors);;
		_103617_sema.get()._field_errors=nullptr;
	};
	return _105213_ok;;
}



inline void _1b0598dde_checkFnParamKind(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050a856_ParamIns>* _106241_p) {
	(*(_106241_p)).get()._field_Kind.get()._field_Variadic=(*(_106241_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_106241_p)).get()._field_Decl.get()._field_Reference && (!(_1b0664042_isValidForRef(&((*(_106241_p)).get()._field_Kind)))))) {
		_1b058e126_pushErr(_self_.ptr(), (*(_106241_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_106241_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1b0599230_reloadFnInsTypes(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050b802_FnIns> _106940_f) {
	if ((_1b050cc87_IsBuiltin(_106940_f.ptr()) || _1b050d01d_IsAnon(_106940_f.ptr()))) {
		return true;;
	};
	return _1b0598b36_fnEnvironment(_self_, &(_106940_f), jule::Fn<jule::Bool(jule::Ptr<_1b058b4db_Sema>*,jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>*)>([=](jule::Ptr<_1b058b4db_Sema>* _107343_sema, jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>* _107361_generics) mutable -> jule::Bool {
		jule::Bool _107421_ok = true;;
		{
			auto expr = &(_106940_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b39d7071:;
			if (it != expr_end) {
				jule::Ptr<_1b050a856_ParamIns> _107525_p = *it;
				{
					if (_1b0507545_IsSelf(_107525_p.get()._field_Decl.ptr())) {
						if (_1b05077cb_IsRef(_107525_p.get()._field_Decl.ptr())) {
							_107525_p.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654153_Sptr>(_1b0654153_Sptr{._field_Elem=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_106940_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_107525_p.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_106940_f.get()._field_Owner, 0)});
						};
					} else {
						_107525_p.get()._field_Kind=_1b059524d_buildTypeWithGenerics((*(_107343_sema)), &(_107525_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_107361_generics)), _106940_f.get()._field_Refers);
						if ((_107525_p.get()._field_Kind != nullptr)) {
							_1b0598dde_checkFnParamKind(_self_, &(_107525_p));
						} else {
							_107421_ok=false;
						};
					};
				}
				_iter_next_1b39d7071:;
				++it;
				goto _iter_begin_1b39d7071;
			}
			_iter_end_1b39d7071:;
		};
		if ((!(_1b0508d71_IsVoid(_106940_f.get()._field_Decl.ptr())))) {
			_106940_f.get()._field_Result=_1b059524d_buildTypeWithGenerics((*(_107343_sema)), &(_106940_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_107361_generics)), _106940_f.get()._field_Refers);
			_107421_ok=((_106940_f.get()._field_Result != nullptr) && _107421_ok);
		};
		return _107421_ok;;
	}));;
}



inline jule::Bool _1b05996d6_checkRefValidityForInitExpr(jule::Ptr<_1b058b4db_Sema> _self_, jule::Bool _110547_leftMut, jule::Ptr<_1b0612672_Data>* _110567_d, jule::Ptr<_1aa49b1d1_Token>* _110582_errorToken) {
	{
		auto &_match_expr{ (*(_110567_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b39dbdab:;
			{
				goto _match_end_1b39dba37;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b39dc362:;
			{
				jule::Ptr<_1b04ee20c_TraitSubIdentExprModel> _111021_model = (*(_110567_d)).get()._field_Model.cast_ptr<_1b04ee20c_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1b0588b7b_isValidModelForRef(&(_111021_model.get()._field_Expr))))) {
					_1b058e126_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_111021_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b39dc3c8:;
			{
				jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _111621_model = (*(_110567_d)).get()._field_Model.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1b0588b7b_isValidModelForRef(&(_111621_model.get()._field_Expr.get()._field_Model))))) {
					_1b058e126_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_111621_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1b39dc43e:;
			{
				_1b058e126_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b39dbb03:;
			{
				jule::Ptr<_1b04ea406_UnaryExprModel> _112621_unary = (*(_110567_d)).get()._field_Model.cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74);;
				if ((_112621_unary.get()._field_Op.get()._field_Id == static_cast<jule::U64>(62LLU))) {
					if ((!(_1b0588b7b_isValidModelForRef(&((*(_110567_d)).get()._field_Model))))) {
						_1b058e126_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1b39dba37;
				};
				goto _case_begin_1b39dba8c;
			}
		}
		else {
			_case_begin_1b39dba8c:;
			{
				_1b058e126_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b39dba37:;
	};
	if ((_110547_leftMut && (!((*(_110567_d)).get()._field_Mutable)))) {
		_1b058e126_pushErr(_self_.ptr(), (*(_110582_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1b0599a27_isMutRiskyStruct(_1b058b4db_Sema* _self_, jule::Ptr<_1b04e5951_StructIns>* _115132_s) {
	{
		auto expr = &((*(_115132_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39e3027:;
		if (it != expr_end) {
			jule::Ptr<_1b04e4da1_FieldIns> *_115216_f = it;
			{
				if ((((*(_115216_f)).get()._field_Decl.get()._field_Mutable && _1b0649148_Mutable((*(_115216_f)).get()._field_Kind.ptr())) && _1b058e885_isAccessibleDefine(_self_, (*(_115216_f)).get()._field_Decl.get()._field_Public, (*(_115216_f)).get()._field_Decl.get()._field_Token))) {
					return true;;
				};
			}
			_iter_next_1b39e3027:;
			++it;
			goto _iter_begin_1b39e3027;
		}
		_iter_end_1b39e3027:;
	};
	return false;;
}



inline jule::Bool _1b059a143_checkValidityForInitExpr(jule::Ptr<_1b058b4db_Sema> _self_, jule::Bool _117844_leftMut, jule::Bool _117859_leftRef, jule::Ptr<_1b06477a6_TypeKind>* _117910_leftKind, jule::Ptr<_1b0612672_Data>* _117936_d, jule::Ptr<_1aa49b1d1_Token>* _117951_errorToken) {
	if ((_117844_leftMut && (!((*(_117936_d)).get()._field_Mutable)))) {
		if (_1b0649148_Mutable((*(_117936_d)).get()._field_Kind.ptr())) {
			_1b058e126_pushErr(_self_.ptr(), (*(_117951_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_117936_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
		jule::Ptr<_1b04e5951_StructIns> _118717_s = _1b064b722_Struct((*(_117936_d)).get()._field_Kind.ptr());;
		if (((_118717_s != nullptr) && _1b0599a27_isMutRiskyStruct(_self_.ptr(), &(_118717_s)))) {
			_1b058e126_pushErr(_self_.ptr(), (*(_117951_errorToken)), jule::Str("struct @ cannot copied due to field which is stores mutable data", 64), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_117936_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	};
	if (_117859_leftRef) {
		if ((!(_1b05996d6_checkRefValidityForInitExpr(_self_, _117844_leftMut, _117936_d, _117951_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1b05eb23d_assignTypeChecker> _119817_atc = jule::new_ptr<_1b05eb23d_assignTypeChecker>(_1b05eb23d_assignTypeChecker{._field_s=_self_, ._field_d=(*(_117936_d)), ._field_errorToken=(*(_117951_errorToken))});;
	return _1b05eb969_checkValidity(_119817_atc.ptr());;
}



inline jule::Bool _1b059a53e_checkTypeAliasDeclKind(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b06469b4_TypeAlias>* _120647_ta, jule::Trait<_1b0667584_Lookup> _120667_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b060c44c_SymbolTable> _120717_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1b058dc08_setCurrentFile(_self_.ptr(), _120717_old);
	});;
	if (((*(_120647_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1b060c44c_SymbolTable> _121221_file = _1b058a232_findFile(&(_self_.get()._field_files), &((*(_120647_ta)).get()._field_Token.get()._field_File));;
		if ((_121221_file != nullptr)) {
			_1b058dc08_setCurrentFile(_self_.ptr(), _121221_file);
		};
	};
	__jule_func_result=_1b0594615_checkTypeWithRefers(_self_, &((*(_120647_ta)).get()._field_Kind), _120667_l, nullptr, jule::new_ptr<_1b065891b_referencer>(_1b065891b_referencer{._field_ident=(*(_120647_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_120647_ta)), &__jule_any_type67), ._field_refs=(&((*(_120647_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1b064ae6e_Arr((*(_120647_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1b064ae6e_Arr((*(_120647_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_120647_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1b059a8a2_checkTypeAliasDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b06469b4_TypeAlias>* _122943_ta, jule::Trait<_1b0667584_Lookup> _122963_l) {
	if (_1aa49db40_IsIgnoreIdent((*(_122943_ta)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_122943_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1b059a53e_checkTypeAliasDeclKind(_self_, _122943_ta, _122963_l);
}



inline void _1b059ab5a_checkTypeAliasDeclDup(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b06469b4_TypeAlias>* _123746_ta) {
	if (_1aa49db40_IsIgnoreIdent((*(_123746_ta)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_123746_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_123746_ta)))), &((*(_123746_ta)).get()._field_Ident), (*(_123746_ta)).get()._field_Binded)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_123746_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_123746_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b059a53e_checkTypeAliasDeclKind(_self_, _123746_ta, jule::Trait<_1b0667584_Lookup>(_self_, 3));
}



inline jule::Bool _1b059ade1_checkTypeAliasDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a01321:;
		if (it != expr_end) {
			jule::Ptr<_1b06469b4_TypeAlias> _125021_ta = *it;
			{
				_1b059ab5a_checkTypeAliasDeclDup(_self_, &(_125021_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a01321:;
			++it;
			goto _iter_begin_1b3a01321;
		}
		_iter_end_1b3a01321:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b3a24e7c_checkEnumItemsDup(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b051d825_EnumItem>> _126139_items) {
	{
		auto expr = &(_126139_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a26247:;
		if (it != expr_end) {
			jule::Ptr<_1b051d825_EnumItem> *_126216_item = it;
			{
				if ((*(_126216_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b3a26247;
				} else if (_1aa49db40_IsIgnoreIdent((*(_126216_item)).get()._field_Ident)) {
					_1b058e126_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126139_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b3a27215:;
						if (it != expr_end) {
							jule::Ptr<_1b051d825_EnumItem> *_126824_citem = it;
							{
								if (((*(_126216_item)) == (*(_126824_citem)))) {
									goto _iter_end_1b3a27215;
								} else if (((*(_126216_item)).get()._field_Ident == (*(_126824_citem)).get()._field_Ident)) {
									_1b058e126_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_126216_item)).get()._field_Ident, &__jule_any_type5)}));
									_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b3a27215;
								};
							}
							_iter_next_1b3a27215:;
							++it;
							goto _iter_begin_1b3a27215;
						}
						_iter_end_1b3a27215:;
					};
				};
			}
			_iter_next_1b3a26247:;
			++it;
			goto _iter_begin_1b3a26247;
		}
		_iter_end_1b3a26247:;
	};
}

inline void _1b3a2e3b5_checkEnumItemsDup(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>> _126139_items) {
	{
		auto expr = &(_126139_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a3065d:;
		if (it != expr_end) {
			jule::Ptr<_1b05204c5_TypeEnumItem> *_126216_item = it;
			{
				if ((*(_126216_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b3a3065d;
				} else if (_1aa49db40_IsIgnoreIdent((*(_126216_item)).get()._field_Ident)) {
					_1b058e126_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_126139_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b3a3162b:;
						if (it != expr_end) {
							jule::Ptr<_1b05204c5_TypeEnumItem> *_126824_citem = it;
							{
								if (((*(_126216_item)) == (*(_126824_citem)))) {
									goto _iter_end_1b3a3162b;
								} else if (((*(_126216_item)).get()._field_Ident == (*(_126824_citem)).get()._field_Ident)) {
									_1b058e126_pushErr(_self_, (*(_126216_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_126216_item)).get()._field_Ident, &__jule_any_type5)}));
									_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b3a3162b;
								};
							}
							_iter_next_1b3a3162b:;
							++it;
							goto _iter_begin_1b3a3162b;
						}
						_iter_end_1b3a3162b:;
					};
				};
			}
			_iter_next_1b3a3065d:;
			++it;
			goto _iter_begin_1b3a3065d;
		}
		_iter_end_1b3a3065d:;
	};
}



inline void _1b059b452_checkEnumItemsStr(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051e392_Enum>* _128142_e) {
	jule::Ptr<_1b0614366_Eval> _128217_eval = _1b05965c3_eval(_self_, jule::Trait<_1b0667584_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_128142_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a01a91:;
		if (it != expr_end) {
			jule::Ptr<_1b051d825_EnumItem> _128321_item = *it;
			{
				if (_1b051dbcc_AutoExpr(_128321_item.ptr())) {
					_128321_item.get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Constant=static__1ad37db4e_NewStr(_128321_item.get()._field_Ident)})});
					_128321_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_128321_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1b0612672_Data> _129225_d = _1b0637598_evalExpr(_128217_eval, _128321_item.get()._field_Value.get()._field_Expr);;
					if ((_129225_d == nullptr)) {
						goto _iter_next_1b3a01a91;
					};
					if ((!(_1b0613046_IsConst(_129225_d.ptr())))) {
						_1b058e126_pushErr(_self_.ptr(), _128321_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1b0596b34_checkAssignType(_self_, false, &((*(_128142_e)).get()._field_Kind.get()._field_Kind), &(_129225_d), _128321_item.get()._field_Token);
					_128321_item.get()._field_Value.get()._field_Data=_129225_d;
				};
			}
			_iter_next_1b3a01a91:;
			++it;
			goto _iter_begin_1b3a01a91;
		}
		_iter_end_1b3a01a91:;
	};
}



inline void _1b3a0b34d_checkEnumItemInt(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0614366_Eval>* _130746_eval, jule::Ptr<_1b051e392_Enum>* _130764_e, jule::Ptr<_1b0650627_Prim>* _130775_prim, jule::Ptr<_1b051d825_EnumItem>* _130793_item, jule::U64* _1307115_n) {
	if (_1b051dbcc_AutoExpr((*(_130793_item)).ptr())) {
		(*(_130793_item)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		{
			
{
				_case_begin_1b3a0e087:;
				{
					(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d5bb_NewU64((*(_1307115_n)));
				}
			}
			_match_end_1b3a0deaa:;
		};
		(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1b0612672_Data> _132221_d = _1b0637598_evalExpr((*(_130746_eval)), (*(_130793_item)).get()._field_Value.get()._field_Expr);;
		if ((_132221_d == nullptr)) {
			return;;
		};
		if ((!(_1b0613046_IsConst(_132221_d.ptr())))) {
			_1b058e126_pushErr(_self_.ptr(), (*(_130793_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b0596b34_checkAssignType(_self_, false, &((*(_130764_e)).get()._field_Kind.get()._field_Kind), &(_132221_d), (*(_130793_item)).get()._field_Token);
		(*(_130793_item)).get()._field_Value.get()._field_Data=_132221_d;
		{
			
{
				_case_begin_1b3a12310:;
				{
					(*(_1307115_n))=static_cast<jule::U64>(_1ad37ea1d_ReadU64((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b3a12222:;
		};
	};
}

inline void _1b3a18b85_checkEnumItemInt(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0614366_Eval>* _130746_eval, jule::Ptr<_1b051e392_Enum>* _130764_e, jule::Ptr<_1b0650627_Prim>* _130775_prim, jule::Ptr<_1b051d825_EnumItem>* _130793_item, jule::I64* _1307115_n) {
	if (_1b051dbcc_AutoExpr((*(_130793_item)).ptr())) {
		(*(_130793_item)).get()._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()});
		{
			
{
				_case_begin_1b3a1b7d1:;
				{
					(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1ad37d302_NewI64((*(_1307115_n)));
				}
			}
			_match_end_1b3a1b77b:;
		};
		(*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1b0612672_Data> _132221_d = _1b0637598_evalExpr((*(_130746_eval)), (*(_130793_item)).get()._field_Value.get()._field_Expr);;
		if ((_132221_d == nullptr)) {
			return;;
		};
		if ((!(_1b0613046_IsConst(_132221_d.ptr())))) {
			_1b058e126_pushErr(_self_.ptr(), (*(_130793_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1b0596b34_checkAssignType(_self_, false, &((*(_130764_e)).get()._field_Kind.get()._field_Kind), &(_132221_d), (*(_130793_item)).get()._field_Token);
		(*(_130793_item)).get()._field_Value.get()._field_Data=_132221_d;
		{
			
{
				_case_begin_1b3a1ebe1:;
				{
					(*(_1307115_n))=static_cast<jule::I64>(_1ad37e787_ReadI64((*(_130793_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b3a1eb7a:;
		};
	};
}



inline void _1b3a07943_checkEnumItemsInt1(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0650627_Prim>* _134244_prim, jule::Ptr<_1b051e392_Enum>* _134262_e) {
	jule::U64 _134317_max = 0LLU;;
	{
		
{
			_case_begin_1b3a09813:;
			{
				_134317_max=static_cast<jule::U64>(_1ad376394_MaxU(_1b0650968_Str((*(_134244_prim)).ptr())));
			}
		}
		_match_end_1b3a09604:;
	};
	jule::Ptr<_1b0614366_Eval> _135317_eval = _1b05965c3_eval(_self_, jule::Trait<_1b0667584_Lookup>(_self_, 3));;
	jule::U64 _135417_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1b051d825_EnumItem> _135517_first = (*(_134262_e)).get()._field_Items[0LL];;
	_1b3a0b34d_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_135517_first), &(_135417_n));
	if ((_135517_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b3a0a517:;
				{
					_135417_n=static_cast<jule::U64>(_1ad3807dd_AsU64(_135517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b3a12277:;
		};
	};
	{
		auto expr = (*(_134262_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b3a0c55d:;
		if (it != expr_end) {
			jule::Ptr<_1b051d825_EnumItem> _136721_item = *it;
			{
				if (((_1b051dbcc_AutoExpr(_136721_item.ptr()) && (_135417_n > 0LLU)) && ((_134317_max - _135417_n) <= 0LLU))) {
					_1b058e126_pushErr(_self_.ptr(), _136721_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b3a0c55d;
				};
				(_135417_n)++;
				_1b3a0b34d_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_136721_item), &(_135417_n));
			}
			_iter_next_1b3a0c55d:;
			++it;
			goto _iter_begin_1b3a0c55d;
		}
		_iter_end_1b3a0c55d:;
	};
}

inline void _1b3a07bc9_checkEnumItemsInt1(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0650627_Prim>* _134244_prim, jule::Ptr<_1b051e392_Enum>* _134262_e) {
	jule::I64 _134317_max = 0LL;;
	{
		
{
			_case_begin_1b3a16e3b:;
			{
				_134317_max=static_cast<jule::I64>(_1ad3760ca_MaxI(_1b0650968_Str((*(_134244_prim)).ptr())));
			}
		}
		_match_end_1b3a16ca4:;
	};
	jule::Ptr<_1b0614366_Eval> _135317_eval = _1b05965c3_eval(_self_, jule::Trait<_1b0667584_Lookup>(_self_, 3));;
	jule::I64 _135417_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1b051d825_EnumItem> _135517_first = (*(_134262_e)).get()._field_Items[0LL];;
	_1b3a18b85_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_135517_first), &(_135417_n));
	if ((_135517_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b3a195d1:;
				{
					_135417_n=static_cast<jule::I64>(_1ad380557_AsI64(_135517_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b3a17cb6:;
		};
	};
	{
		auto expr = (*(_134262_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b3a1a48e:;
		if (it != expr_end) {
			jule::Ptr<_1b051d825_EnumItem> _136721_item = *it;
			{
				if (((_1b051dbcc_AutoExpr(_136721_item.ptr()) && (_135417_n > 0LL)) && ((_134317_max - _135417_n) <= 0LL))) {
					_1b058e126_pushErr(_self_.ptr(), _136721_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b3a1a48e;
				};
				(_135417_n)++;
				_1b3a18b85_checkEnumItemInt(_self_, &(_135317_eval), _134262_e, _134244_prim, &(_136721_item), &(_135417_n));
			}
			_iter_next_1b3a1a48e:;
			++it;
			goto _iter_begin_1b3a1a48e;
		}
		_iter_end_1b3a1a48e:;
	};
}



inline void _1b059c101_checkEnumItemsInt(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051e392_Enum>* _137742_e) {
	jule::Ptr<_1b0650627_Prim> _137813_prim = _1b064a19e_Prim((*(_137742_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1ad37bad6_IsSigInt(_137813_prim.get()._field_Kind)) {
			_case_begin_1b3a14be7:;
			{
				_1b3a07bc9_checkEnumItemsInt1(_self_, &(_137813_prim), _137742_e);
			}
		}
		else {
			_case_begin_1b3a0728e:;
			{
				_1b3a07943_checkEnumItemsInt1(_self_, &(_137813_prim), _137742_e);
			}
		}
		_match_end_1b3a07228:;
	};
}



inline void _1b059c3a9_checkEnumDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051e392_Enum>* _138738_e) {
	if (_1aa49db40_IsIgnoreIdent((*(_138738_e)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_138738_e)))), &((*(_138738_e)).get()._field_Ident), false)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_138738_e)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_138738_e)).get()._field_Items.len() == 0LL)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_138738_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b3a24e7c_checkEnumItemsDup(_self_.ptr(), (*(_138738_e)).get()._field_Items);
	if (((*(_138738_e)).get()._field_Kind != nullptr)) {
		if ((!(_1b0594c97_checkType(_self_, &((*(_138738_e)).get()._field_Kind), jule::Trait<_1b0667584_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_138738_e)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_1b0650627_Prim> _141117_t = _1b064a19e_Prim((*(_138738_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_141117_t == nullptr)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1b0653aae_IsStr(_141117_t.ptr())) {
			_case_begin_1b3a2a768:;
			{
				_1b059b452_checkEnumItemsStr(_self_, _138738_e);
			}
		}
		else if (_1ad37c1ad_IsInt(_1b0650968_Str(_141117_t.ptr()))) {
			_case_begin_1b3a2a46b:;
			{
				_1b059c101_checkEnumItemsInt(_self_, _138738_e);
			}
		}
		else {
			_case_begin_1b3a2a405:;
			{
				_1b058e126_pushErr(_self_.ptr(), (*(_138738_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3a29c62:;
	};
}



inline void _1b059c662_checkTypeEnumDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0520a9c_TypeEnum>* _142842_e) {
	if (_1aa49db40_IsIgnoreIdent((*(_142842_e)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_142842_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_142842_e)))), &((*(_142842_e)).get()._field_Ident), false)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_142842_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_142842_e)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_142842_e)).get()._field_Items.len() == 0LL)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_142842_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_142842_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b3a2e3b5_checkEnumItemsDup(_self_.ptr(), (*(_142842_e)).get()._field_Items);
	{
		auto expr = &((*(_142842_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a2bc42:;
		if (it != expr_end) {
			jule::Ptr<_1b05204c5_TypeEnumItem> _144221_item = *it;
			{
				if ((_144221_item.get()._field_Kind == nullptr)) {
					_1b058e126_pushErr(_self_.ptr(), _144221_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1b3a2bc42;
				};
				jule::Bool _144717_ok = _1b0594c97_checkType(_self_, &(_144221_item.get()._field_Kind), jule::Trait<_1b0667584_Lookup>(_self_, 3));;
				if ((!(_144717_ok))) {
					goto _iter_next_1b3a2bc42;
				};
				jule::Ptr<_1b0650627_Prim> _145117_p = _1b064a19e_Prim(_144221_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_145117_p != nullptr) && _1b0653d45_IsAny(_145117_p.ptr()))) {
					_1b058e126_pushErr(_self_.ptr(), _144221_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b3a2bc42:;
			++it;
			goto _iter_begin_1b3a2bc42;
		}
		_iter_end_1b3a2bc42:;
	};
	if (((*(_142842_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1b05204c5_TypeEnumItem> _145721_item = (*(_142842_e)).get()._field_Items[0LL];;
		_1b06477a6_TypeKind _145817_tk = _1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_142842_e)), 4)};;
		if (((_145721_item.get()._field_Kind.get()._field_Kind != nullptr) && _1b0647eb0_Equal(_145721_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1b06477a6_TypeKind>)((&(_145817_tk))))))) {
			_1b058e126_pushErr(_self_.ptr(), _145721_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1b0520ddd_Str((*(_142842_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1b059c8e8_checkEnumDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a37b82:;
		if (it != expr_end) {
			jule::Ptr<_1b051e392_Enum> _146921_e = *it;
			{
				_1b059c3a9_checkEnumDecl(_self_, &(_146921_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a37b82:;
			++it;
			goto _iter_begin_1b3a37b82;
		}
		_iter_end_1b3a37b82:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b059cb7e_checkTypeEnumDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a38479:;
		if (it != expr_end) {
			jule::Ptr<_1b0520a9c_TypeEnum> _148121_e = *it;
			{
				_1b059c662_checkTypeEnumDecl(_self_, &(_148121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a38479:;
			++it;
			goto _iter_begin_1b3a38479;
		}
		_iter_end_1b3a38479:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b059cec0_checkDeclGenerics(_1b058b4db_Sema* _self_, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>* _149137_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _149137_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a3a49d:;
		if (it != expr_end) {
			jule::I64 _149313_i = it - expr->begin();
			jule::Ptr<_1b04cde89_GenericDecl> *_149316_g = it;
			{
				if (_1aa49db40_IsIgnoreIdent((*(_149316_g)).get()._field_Ident)) {
					_1b058e126_pushErr(_self_, (*(_149316_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b3a3a49d;
				};
				_julec_label_1b3a3b5c0:;
				{
					auto expr = _149137_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a3bb20:;
					if (it != expr_end) {
						jule::I64 _150217_j = it - expr->begin();
						jule::Ptr<_1b04cde89_GenericDecl> *_150220_ct = it;
						{
							{
								
								if ((_150217_j >= _149313_i)) {
									_case_begin_1b3a3c6d1:;
									{
										goto _iter_end_1b3a3bb20;
									}
								}
								else if (((*(_149316_g)).get()._field_Ident == (*(_150220_ct)).get()._field_Ident)) {
									_case_begin_1b3a3c758:;
									{
										_1b058e126_pushErr(_self_, (*(_149316_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_149316_g)).get()._field_Ident, &__jule_any_type5)}));
										_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b3a3bb20;
									}
								}
								_match_end_1b3a3c5d2:;
							};
						}
						_iter_next_1b3a3bb20:;
						++it;
						_150217_j++;
						goto _iter_begin_1b3a3bb20;
					}
					_iter_end_1b3a3bb20:;
				};
			}
			_iter_next_1b3a3a49d:;
			++it;
			_149313_i++;
			goto _iter_begin_1b3a3a49d;
		}
		_iter_end_1b3a3a49d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b059d311_checkFnDeclParamsDup(_1b058b4db_Sema* _self_, jule::Ptr<_1b05088ed_Fn>* _151840_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1b3a3d209:;
	{
		auto expr = &((*(_151840_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a3e617:;
		if (it != expr_end) {
			jule::I64 _152113_i = it - expr->begin();
			jule::Ptr<_1b0506e29_Param> *_152116_p = it;
			{
				{
					auto expr = &((*(_151840_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a3e5a1:;
					if (it != expr_end) {
						jule::Ptr<_1b04cde89_GenericDecl> *_152320_g = it;
						{
							if (((*(_152116_p)).get()._field_Ident == (*(_152320_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1b058e126_pushErr(_self_, (*(_152116_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_152116_p)).get()._field_Ident, &__jule_any_type5)}));
								_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1b3a3e617;
							};
						}
						_iter_next_1b3a3e5a1:;
						++it;
						goto _iter_begin_1b3a3e5a1;
					}
					_iter_end_1b3a3e5a1:;
				};
				_julec_label_1b3a4012e:;
				{
					auto expr = &((*(_151840_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a40c12:;
					if (it != expr_end) {
						jule::I64 _153317_j = it - expr->begin();
						jule::Ptr<_1b0506e29_Param> *_153320_jp = it;
						{
							{
								
								if ((_153317_j >= _152113_i)) {
									_case_begin_1b3a42494:;
									{
										goto _iter_end_1b3a40c12;
									}
								}
								else if (_1aa49db40_IsIgnoreIdent((*(_152116_p)).get()._field_Ident) || _1aa49db40_IsIgnoreIdent((*(_153320_jp)).get()._field_Ident) || _1aa49de09_IsAnonIdent((*(_152116_p)).get()._field_Ident) || _1aa49de09_IsAnonIdent((*(_153320_jp)).get()._field_Ident)) {
									_case_begin_1b3a4251b:;
									{
										goto _iter_end_1b3a40c12;
									}
								}
								else if (((*(_152116_p)).get()._field_Ident == (*(_153320_jp)).get()._field_Ident)) {
									_case_begin_1b3a42593:;
									{
										__jule_func_result=false;
										_1b058e126_pushErr(_self_, (*(_152116_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_152116_p)).get()._field_Ident, &__jule_any_type5)}));
										_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1b3a3e617;
									}
								}
								_match_end_1b3a42384:;
							};
						}
						_iter_next_1b3a40c12:;
						++it;
						_153317_j++;
						goto _iter_begin_1b3a40c12;
					}
					_iter_end_1b3a40c12:;
				};
			}
			_iter_next_1b3a3e617:;
			++it;
			_152113_i++;
			goto _iter_begin_1b3a3e617;
		}
		_iter_end_1b3a3e617:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b059d652_checkFnDeclResultDup(_1b058b4db_Sema* _self_, jule::Ptr<_1b05088ed_Fn>* _155540_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1b0508d71_IsVoid((*(_155540_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_155540_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a44e7a:;
		if (it != expr_end) {
			jule::I64 _156213_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> *_156216_v = it;
			{
				if ((_1aa49db40_IsIgnoreIdent((*(_156216_v)).get()._field_Kind) || _1aa49de09_IsAnonIdent((*(_156216_v)).get()._field_Kind))) {
					goto _iter_next_1b3a44e7a;
				};
				{
					auto expr = &((*(_155540_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a45de3:;
					if (it != expr_end) {
						jule::Ptr<_1b04cde89_GenericDecl> *_156720_g = it;
						{
							if (((*(_156216_v)).get()._field_Kind == (*(_156720_g)).get()._field_Ident)) {
								goto _julec_label_1b3a47213;
							};
						}
						_iter_next_1b3a45de3:;
						++it;
						goto _iter_begin_1b3a45de3;
					}
					_iter_end_1b3a45de3:;
				};
				{
					auto expr = &((*(_155540_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a474cc:;
					if (it != expr_end) {
						jule::Ptr<_1b0506e29_Param> *_157320_p = it;
						{
							if (((*(_156216_v)).get()._field_Kind == (*(_157320_p)).get()._field_Ident)) {
								goto _julec_label_1b3a47213;
							};
						}
						_iter_next_1b3a474cc:;
						++it;
						goto _iter_begin_1b3a474cc;
					}
					_iter_end_1b3a474cc:;
				};
				_julec_label_1b3a48621:;
				{
					auto expr = &((*(_155540_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a483bd:;
					if (it != expr_end) {
						jule::I64 _158117_j = it - expr->begin();
						jule::Ptr<_1aa49b1d1_Token> *_158120_jv = it;
						{
							{
								
								if ((_158117_j >= _156213_i)) {
									_case_begin_1b3a49589:;
									{
										goto _iter_end_1b3a483bd;
									}
								}
								else if (((*(_158120_jv)).get()._field_Kind == (*(_156216_v)).get()._field_Kind)) {
									_case_begin_1b3a49611:;
									{
										goto _julec_label_1b3a47213;
									}
								}
								_match_end_1b3a49479:;
							};
						}
						_iter_next_1b3a483bd:;
						++it;
						_158117_j++;
						goto _iter_begin_1b3a483bd;
					}
					_iter_end_1b3a483bd:;
				};
				goto _iter_next_1b3a44e7a;
				_julec_label_1b3a47213:;
				_1b058e126_pushErr(_self_, (*(_156216_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_156216_v)).get()._field_Kind, &__jule_any_type5)}));
				_1b058e489_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b3a44e7a:;
			++it;
			_156213_i++;
			goto _iter_begin_1b3a44e7a;
		}
		_iter_end_1b3a44e7a:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b059d993_checkFnVariadicParam(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _160045_f) {
	if (((*(_160045_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1b0506e29_Param> _160417_param = (*(_160045_f)).get()._field_Params[((*(_160045_f)).get()._field_Params.len() - 1LL)];;
	if ((_160417_param.get()._field_Variadic && _160417_param.get()._field_Reference)) {
		_1b058e126_pushErr(_self_.ptr(), _160417_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1b059dc4b_checkFnDeclPrototype(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _161345_f) {
	if (((*(_161345_f)).get()._field_Exceptional && (*(_161345_f)).get()._field_Binded)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_161345_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_161345_f)).get()._field_Exceptional) {
		if (_1b050938d_IsEntryPoint((*(_161345_f)).ptr())) {
			_1b058e126_pushErr(_self_.ptr(), (*(_161345_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1b0509624_IsInit((*(_161345_f)).ptr())) {
			_1b058e126_pushErr(_self_.ptr(), (*(_161345_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1b059cec0_checkDeclGenerics(_self_.ptr(), &((*(_161345_f)).get()._field_Generics))))) {
			_case_begin_1b3a4e1d7:;
		}
		else if ((!(_1b059d311_checkFnDeclParamsDup(_self_.ptr(), _161345_f)))) {
			_case_begin_1b3a4e24d:;
		}
		else if ((!(_1b059d652_checkFnDeclResultDup(_self_.ptr(), _161345_f)))) {
			_case_begin_1b3a4e2b4:;
		}
		else if ((!(_1b059d993_checkFnVariadicParam(_self_, _161345_f)))) {
			_case_begin_1b3a504b3:;
		}
		_match_end_1b3a4ee96:;
	};
}



inline jule::Bool _1b059e202_catchTraitInheritCycle(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051bb97_Trait> _163542_t1, jule::Ptr<_1b051bb97_Trait> _163558_t2, _1aa364275_StrBuilder* _163575_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_163558_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a521b8:;
		if (it != expr_end) {
			jule::Ptr<_1b064ec20_TypeSymbol> _163721_i = *it;
			{
				if ((_163721_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1b3a521b8;
				};
				jule::Ptr<_1b051bb97_Trait> _164121_t3 = _1b064b9a8_Trait(_163721_i.get()._field_Kind.ptr());;
				if ((_163542_t1 == _164121_t3)) {
					_1b05a3e82_pushCycleError(_self_.ptr(), &(_163558_t2.get()._field_Ident), &(_164121_t3.get()._field_Ident), _163575_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1b059e202_catchTraitInheritCycle(_self_, _163542_t1, _164121_t3, _163575_message)))) {
					_1b05a3e82_pushCycleError(_self_.ptr(), &(_163558_t2.get()._field_Ident), &(_164121_t3.get()._field_Ident), _163575_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a521b8:;
			++it;
			goto _iter_begin_1b3a521b8;
		}
		_iter_end_1b3a521b8:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b059e543__checkTraitDeclInherits(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051bb97_Trait>* _165448_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_165448_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a54cd1:;
		if (it != expr_end) {
			jule::I64 _165614_i = it - expr->begin();
			jule::Ptr<_1b064ec20_TypeSymbol> _165621_it = *it;
			{
				if ((!(_1b0594c97_checkType(_self_, &(_165621_it), jule::Trait<_1b0667584_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1b3a54cd1;
				};
				jule::Ptr<_1b051bb97_Trait> _166121_t2 = _1b064b9a8_Trait(_165621_it.get()._field_Kind.ptr());;
				if ((_166121_t2 == nullptr)) {
					_1b058e126_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_165448_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1b0647b6e_Str(_165621_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b3a54cd1;
				};
				{
					auto expr = &((*(_165448_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a56909:;
					if (it != expr_end) {
						jule::I64 _166717_j = it - expr->begin();
						jule::Ptr<_1b064ec20_TypeSymbol> _166720_it2 = *it;
						{
							if ((_166717_j >= _165614_i)) {
								goto _iter_end_1b3a56909;
							};
							if (((_166720_it2.get()._field_Kind != nullptr) && _1b0647eb0_Equal(_165621_it.get()._field_Kind, _166720_it2.get()._field_Kind))) {
								_1b058e126_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_166121_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1b3a56909;
							};
						}
						_iter_next_1b3a56909:;
						++it;
						_166717_j++;
						goto _iter_begin_1b3a56909;
					}
					_iter_end_1b3a56909:;
				};
				if (((*(_165448_t)) == _166121_t2)) {
					_1b058e126_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_165448_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					_1aa364275_StrBuilder _168125_message = static__1aa364594_New(64LL);;
					__jule_func_result=(__jule_func_result && _1b059e202_catchTraitInheritCycle(_self_, (*(_165448_t)), _166121_t2, &(_168125_message)));
					if ((_1aa36dcb8_Len(&_168125_message) > 0LL)) {
						jule::Str _168429_errMsg = _1aa36d834_Str(&_168125_message);;
						_1aa36da32_Clear(&_168125_message);
						_1b05a3e82_pushCycleError(_self_.ptr(), &((*(_165448_t)).get()._field_Ident), &(_166121_t2.get()._field_Ident), &(_168125_message));
						_168429_errMsg+=_1aa36d834_Str(&_168125_message);
						_1b058e126_pushErr(_self_.ptr(), _165621_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_168429_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1b3a54cd1:;
			++it;
			_165614_i++;
			goto _iter_begin_1b3a54cd1;
		}
		_iter_end_1b3a54cd1:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b059e7eb_checkTraitDeclInherits(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051bb97_Trait>* _169547_t) {
	{
		auto expr = &((*(_169547_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a5a215:;
		if (it != expr_end) {
			jule::I64 _169614_i = it - expr->begin();
			jule::Ptr<_1b064ec20_TypeSymbol> _169621_it = *it;
			{
				jule::Ptr<_1b051bb97_Trait> _169721_t1 = _1b064b9a8_Trait(_169621_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_169547_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a5d8de:;
					if (it != expr_end) {
						jule::I64 _169818_j = it - expr->begin();
						jule::Ptr<_1b064ec20_TypeSymbol> _169825_it2 = *it;
						{
							if ((_169818_j == _169614_i)) {
								goto _iter_next_1b3a5d8de;
							};
							jule::Ptr<_1b051bb97_Trait> _170225_t2 = _1b064b9a8_Trait(_169825_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_169721_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b3a5d878:;
								if (it != expr_end) {
									jule::Ptr<_1b05088ed_Fn> _170329_t1m = *it;
									{
										jule::Ptr<_1b05088ed_Fn> _170429_t2m = _1b051c846_FindMethod(_170225_t2.ptr(), _170329_t1m.get()._field_Ident);;
										if ((_170429_t2m == nullptr)) {
											goto _iter_next_1b3a5d878;
										};
										jule::Ptr<_1b050b802_FnIns> _170825_t1f = _1b0597ccd_getTraitCheckFnKind(_self_, &(_170329_t1m));;
										jule::Ptr<_1b050b802_FnIns> _170925_t2f = _1b0597ccd_getTraitCheckFnKind(_self_, &(_170429_t2m));;
										if ((!(_1b050c76a_equalTrait(_170825_t1f, &(_170925_t2f))))) {
											_1b058e126_pushErr(_self_.ptr(), _169621_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_169547_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_170225_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1b050d6a0_GetKindStr(_170825_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1b050d6a0_GetKindStr(_170925_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1b3a5d878:;
									++it;
									goto _iter_begin_1b3a5d878;
								}
								_iter_end_1b3a5d878:;
							};
						}
						_iter_next_1b3a5d8de:;
						++it;
						_169818_j++;
						goto _iter_begin_1b3a5d8de;
					}
					_iter_end_1b3a5d8de:;
				};
			}
			_iter_next_1b3a5a215:;
			++it;
			_169614_i++;
			goto _iter_begin_1b3a5a215;
		}
		_iter_end_1b3a5a215:;
	};
}



inline void _1b059eaa4_checkTraitDeclMethod(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _172045_f) {
	if (_1aa49db40_IsIgnoreIdent((*(_172045_f)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_172045_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1aa49de09_IsAnonIdent((*(_172045_f)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_172045_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_172045_f)).get()._field_sema=_self_;
	_1b059dc4b_checkFnDeclPrototype(_self_, _172045_f);
	jule::Ptr<_1b050b802_FnIns> _172817_ins = _1b050a15d_instance((*(_172045_f)));;
	_1b0599230_reloadFnInsTypes(_self_, _172817_ins);
	_172817_ins.get()._field_reloaded=true;
	_1b050a46b_appendInstance((*(_172045_f)).ptr(), &(_172817_ins));
}



inline void _1b059ed5c_checkTraitDeclMethods(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051bb97_Trait>* _173446_t) {
	{
		auto expr = &((*(_173446_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a65165:;
		if (it != expr_end) {
			jule::I64 _173514_i = it - expr->begin();
			jule::Ptr<_1b05088ed_Fn> _173521_f = *it;
			{
				_1b059eaa4_checkTraitDeclMethod(_self_, &(_173521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1b051cec8_findMethodInherit((*(_173446_t)).ptr(), &(_173521_f.get()._field_Ident)) != nullptr)) {
					_1b058e126_pushErr(_self_.ptr(), _173521_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_173521_f.get()._field_Ident, &__jule_any_type5)}));
					_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1b3a65165;
				};
				_julec_label_1b3a66b28:;
				{
					auto expr = &((*(_173446_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a668b4:;
					if (it != expr_end) {
						jule::I64 _175117_j = it - expr->begin();
						jule::Ptr<_1b05088ed_Fn> _175120_jf = *it;
						{
							{
								
								if ((_175117_j >= _173514_i)) {
									_case_begin_1b3a68300:;
									{
										goto _iter_end_1b3a668b4;
									}
								}
								else if ((_173521_f.get()._field_Ident == _175120_jf.get()._field_Ident)) {
									_case_begin_1b3a68377:;
									{
										_1b058e126_pushErr(_self_.ptr(), _173521_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_173521_f.get()._field_Ident, &__jule_any_type5)}));
										_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1b3a668b4;
									}
								}
								_match_end_1b3a681e0:;
							};
						}
						_iter_next_1b3a668b4:;
						++it;
						_175117_j++;
						goto _iter_begin_1b3a668b4;
					}
					_iter_end_1b3a668b4:;
				};
			}
			_iter_next_1b3a65165:;
			++it;
			_173514_i++;
			goto _iter_begin_1b3a65165;
		}
		_iter_end_1b3a65165:;
	};
}



inline void _1b05a0115_checkTraitDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b051bb97_Trait>* _177039_t) {
	if (_1aa49db40_IsIgnoreIdent((*(_177039_t)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_177039_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_177039_t)))), &((*(_177039_t)).get()._field_Ident), false)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_177039_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_177039_t)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b059e7eb_checkTraitDeclInherits(_self_, _177039_t);
	_1b059ed5c_checkTraitDeclMethods(_self_, _177039_t);
}



inline jule::Bool _1b05a039b_checkTraitDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a6bd3c:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _178421_t = *it;
			{
				_1b05a0115_checkTraitDecl(_self_, &(_178421_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a6bd3c:;
			++it;
			goto _iter_begin_1b3a6bd3c;
		}
		_iter_end_1b3a6bd3c:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b05a0797_checkTraitImplMethods(_1b058b4db_Sema* _self_, jule::Ptr<_1b051bb97_Trait>* _179445_base, jule::Ptr<_1b0543b14_Impl>* _179460_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_179460_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a6d536:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> *_179616_f = it;
			{
				if ((_1b051c846_FindMethod((*(_179445_base)).ptr(), (*(_179616_f)).get()._field_Ident) == nullptr)) {
					_1b058e126_pushErr(_self_, (*(_179616_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_179445_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_179616_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b3a6d536:;
			++it;
			goto _iter_begin_1b3a6d536;
		}
		_iter_end_1b3a6d536:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b05a0b93_implToStruct(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _180537_dest, jule::Ptr<_1b0543b14_Impl>* _180557_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_180557_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a70527:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _180921_f = *it;
			{
				if (((_1b04e34ed_FindMethod((*(_180537_dest)).ptr(), _180921_f.get()._field_Ident, _180921_f.get()._field_Statically) != nullptr) || (_1b04e3b80_FindField((*(_180537_dest)).ptr(), _180921_f.get()._field_Ident) != nullptr))) {
					_1b058e126_pushErr(_self_.ptr(), _180921_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_180537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_180921_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b3a70527;
				};
				if ((((*(_180537_dest)).get()._field_Generics.len() > 0LL) && (_180921_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_180921_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b3a7286a:;
						if (it != expr_end) {
							jule::Ptr<_1b04cde89_GenericDecl> _181724_fg = *it;
							{
								{
									auto expr = &((*(_180537_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b3a7312e:;
									if (it != expr_end) {
										jule::Ptr<_1b04cde89_GenericDecl> _181828_dg = *it;
										{
											if ((_181724_fg.get()._field_Ident == _181828_dg.get()._field_Ident)) {
												_1b058e126_pushErr(_self_.ptr(), _181724_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b3a7312e:;
										++it;
										goto _iter_begin_1b3a7312e;
									}
									_iter_end_1b3a7312e:;
								};
							}
							_iter_next_1b3a7286a:;
							++it;
							goto _iter_begin_1b3a7286a;
						}
						_iter_end_1b3a7286a:;
					};
				};
				_1b059019e_checkDirectives(_self_, &(_180921_f.get()._field_Directives), jule::Any(_180921_f, &__jule_any_type65));
				_180921_f.get()._field_sema=_self_;
				_180921_f.get()._field_Owner=(*(_180537_dest));
				{ jule::Slice<jule::Ptr<_1b05088ed_Fn>> &__jule_push_dest = (*(_180537_dest)).get()._field_Methods; __jule_push_dest.push(_180921_f); };
			}
			_iter_next_1b3a70527:;
			++it;
			goto _iter_begin_1b3a70527;
		}
		_iter_end_1b3a70527:;
	};
	{
		auto expr = &((*(_180557_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a70406:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _183421_v = *it;
			{
				;
				if (((_1b04e34ed_FindMethod((*(_180537_dest)).ptr(), _183421_v.get()._field_Ident, true) != nullptr) || (_1b04e383e_FindStatic((*(_180537_dest)).ptr(), _183421_v.get()._field_Ident) != nullptr))) {
					_1b058e126_pushErr(_self_.ptr(), _183421_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_180537_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_183421_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b3a70406;
				};
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_180537_dest)).get()._field_Statics; __jule_push_dest.push(_183421_v); };
			}
			_iter_next_1b3a70406:;
			++it;
			goto _iter_begin_1b3a70406;
		}
		_iter_end_1b3a70406:;
	};
	return __jule_func_result;;
}



inline void _1b05a0e4b_implTrait(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0543b14_Impl>* _184734_decl) {
	jule::Ptr<_1b06477a6_TypeKind> _184817_base_t = _1b05958d0_selectType(_self_, &((*(_184734_decl)).get()._field_Base));;
	if ((_184817_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1b051bb97_Trait> _185217_base = _1b064b9a8_Trait(_184817_base_t.ptr());;
	if ((_185217_base == nullptr)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_184817_base_t.ptr()), &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b06477a6_TypeKind> _185917_destT = _1b05958d0_selectType(_self_, &((*(_184734_decl)).get()._field_Dest));;
	if ((_185917_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b04e5951_StructIns> _186317_destS = _1b064b722_Struct(_185917_destT.ptr());;
	if ((_186317_destS == nullptr)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_185917_destT.ptr()), &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b04e2871_Struct> _187017_dest = _186317_destS.get()._field_Decl;;
	if ((_1aa4a211b_Dir(_187017_dest.get()._field_Token.get()._field_File.ptr()) != _1aa4a211b_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1b058e126_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1b05ac4a7_pushImplemented(_185217_base, &(_187017_dest));
	_1b05ac793_pushImplements(&(_187017_dest), _185217_base);
	if (((*(_184734_decl)).get()._field_Statics.len() > 0LL)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_184734_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1b05a0797_checkTraitImplMethods(_self_.ptr(), &(_185217_base), _184734_decl)))) {
			_case_begin_1b3a7d59b:;
		}
		else if ((!(_1b05a0b93_implToStruct(_self_, &(_187017_dest), _184734_decl)))) {
			_case_begin_1b3a7d623:;
		}
		_match_end_1b3a7b9b7:;
	};
}



inline void _1b05a1204_implStruct(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0543b14_Impl>* _189035_decl) {
	jule::Ptr<_1b06477a6_TypeKind> _189117_destT = _1b05958d0_selectType(_self_, &((*(_189035_decl)).get()._field_Dest));;
	if ((_189117_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1b04e5951_StructIns> _189517_destS = _1b064b722_Struct(_189117_destT.ptr());;
	if ((_189517_destS == nullptr)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_189035_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_189117_destT.ptr()), &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b04e2871_Struct> _190217_dest = _189517_destS.get()._field_Decl;;
	if ((_1aa4a211b_Dir(_190217_dest.get()._field_Token.get()._field_File.ptr()) != _1aa4a211b_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1b058e126_pushErr(_self_.ptr(), (*(_189035_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1b05a0b93_implToStruct(_self_, &(_190217_dest), _189035_decl)))) {
			_case_begin_1b3a82979:;
		}
		_match_end_1b3a81aee:;
	};
}



inline void _1b05a14ac_implImpl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b0543b14_Impl>* _191433_decl) {
	{
		
		if (_1b0543ecc_IsTraitImpl((*(_191433_decl)).ptr())) {
			_case_begin_1b3a8344c:;
			{
				_1b05a0e4b_implTrait(_self_, _191433_decl);
			}
		}
		else if (_1b0544263_IsStructImpl((*(_191433_decl)).ptr())) {
			_case_begin_1b3a834c4:;
			{
				_1b05a1204_implStruct(_self_, _191433_decl);
			}
		}
		_match_end_1b3a8333c:;
	};
}



inline void _1b05a1820_checkVarDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05ae1bd_Var>* _192537_decl, jule::Trait<_1b0667584_Lookup> _192553_l) {
	if (_1aa49db40_IsIgnoreIdent((*(_192537_decl)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1b05ae7d9_IsTypeInferred((*(_192537_decl)).ptr())) {
		if ((!(_1b05ae553_IsInitialized((*(_192537_decl)).ptr())))) {
			_1b058e126_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1b0594c97_checkType(_self_, &((*(_192537_decl)).get()._field_Kind), _192553_l);
	};
	if (((*(_192537_decl)).get()._field_Constant && (*(_192537_decl)).get()._field_Reference)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1b05ae553_IsInitialized((*(_192537_decl)).ptr())))) {
		if ((*(_192537_decl)).get()._field_Constant) {
			_1b058e126_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_192537_decl)).get()._field_Statically) {
			_1b058e126_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_192537_decl)).get()._field_Reference) {
			_1b058e126_pushErr(_self_.ptr(), (*(_192537_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1b05a1ac8_checkGlobalVarDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05ae1bd_Var>* _195743_decl) {
	if (_1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195743_decl)))), &((*(_195743_decl)).get()._field_Ident), (*(_195743_decl)).get()._field_Binded)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_195743_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195743_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_195743_decl)).get()._field_Binded && (*(_195743_decl)).get()._field_Constant)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_195743_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_195743_decl)).get()._field_Binded)) && (!((*(_195743_decl)).get()._field_Constant))) && (!((*(_195743_decl)).get()._field_Statically)))) {
		_1b058e126_pushErr(_self_.ptr(), (*(_195743_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1b059019e_checkDirectives(_self_, &((*(_195743_decl)).get()._field_Directives), jule::Any((*(_195743_decl)), &__jule_any_type8));
	_1b05a1820_checkVarDecl(_self_, _195743_decl, jule::Trait<_1b0667584_Lookup>(_self_, 3));
}



inline jule::Bool _1b05a1d5e_checkGlobalDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a8beb1:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _197521_decl = *it;
			{
				_1b05a1ac8_checkGlobalVarDecl(_self_, &(_197521_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a8beb1:;
			++it;
			goto _iter_begin_1b3a8beb1;
		}
		_iter_end_1b3a8beb1:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b05a225a_checkStructTraitImpl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _198545_strct, jule::Ptr<_1b051bb97_Trait>* _198566_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_198566_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a8d699:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _198621_tf = *it;
			{
				jule::Bool _198721_exist = false;;
				jule::Ptr<_1b05088ed_Fn> _198821_sf = _1b04e34ed_FindMethod((*(_198545_strct)).ptr(), _198621_tf.get()._field_Ident, _198621_tf.get()._field_Statically);;
				jule::Ptr<_1b050b802_FnIns> _198917_tfK = _1b0597ccd_getTraitCheckFnKind(_self_, &(_198621_tf));;
				if ((_198821_sf != nullptr)) {
					jule::Ptr<_1b050b802_FnIns> _199125_sfK = _1b0597ccd_getTraitCheckFnKind(_self_, &(_198821_sf));;
					_198721_exist=_1b050c76a_equalTrait(_198917_tfK, &(_199125_sfK));
				};
				if (_198721_exist) {
					jule::Ptr<_1b04884b5_Directive> _199521_d = _1b0640ea8_findDirective(&(_198821_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_199521_d != nullptr)) {
						_1b058e126_pushErr(_self_.ptr(), _199521_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1b058e126_pushErr(_self_.ptr(), (*(_198545_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_198566_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1b050d6a0_GetKindStr(_198917_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b3a8d699:;
			++it;
			goto _iter_begin_1b3a8d699;
		}
		_iter_end_1b3a8d699:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b05a259b_checkStructImpls(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _200941_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_200941_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a932e7:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _201121_trt = *it;
			{
				__jule_func_result=(_1b05a225a_checkStructTraitImpl(_self_, _200941_s, &(_201121_trt)) && __jule_func_result);
			}
			_iter_next_1b3a932e7:;
			++it;
			goto _iter_begin_1b3a932e7;
		}
		_iter_end_1b3a932e7:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b05a28dc_checkStructFields(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _201742_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_201742_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a9454b:;
		if (it != expr_end) {
			jule::Ptr<_1b04de97d_Field> _201921_f = *it;
			{
				_201921_f.get()._field_Owner=(*(_201742_st));
				{
					auto expr = &((*(_201742_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3a950a7:;
					if (it != expr_end) {
						jule::Ptr<_1b04de97d_Field> _202120_cf = *it;
						{
							if ((_201921_f == _202120_cf)) {
								goto _iter_end_1b3a950a7;
							} else if ((_201921_f.get()._field_Ident == _202120_cf.get()._field_Ident)) {
								_1b058e126_pushErr(_self_.ptr(), _201921_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_201921_f.get()._field_Ident, &__jule_any_type5)}));
								_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b3a950a7:;
						++it;
						goto _iter_begin_1b3a950a7;
					}
					_iter_end_1b3a950a7:;
				};
			}
			_iter_next_1b3a9454b:;
			++it;
			goto _iter_begin_1b3a9454b;
		}
		_iter_end_1b3a9454b:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1b05a2b95_checkStructDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _203440_s) {
	if (_1aa49db40_IsIgnoreIdent((*(_203440_s)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_203440_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_203440_s)))), &((*(_203440_s)).get()._field_Ident), (*(_203440_s)).get()._field_Binded)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_203440_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_203440_s)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1b059019e_checkDirectives(_self_, &((*(_203440_s)).get()._field_Directives), jule::Any((*(_203440_s)), &__jule_any_type66));
	{
		
		if ((!(_1b059cec0_checkDeclGenerics(_self_.ptr(), &((*(_203440_s)).get()._field_Generics))))) {
			_case_begin_1b3a988c4:;
		}
		else if ((!(_1b05a28dc_checkStructFields(_self_, _203440_s)))) {
			_case_begin_1b3a9893a:;
		}
		else if ((!(_1b05a259b_checkStructImpls(_self_, _203440_s)))) {
			_case_begin_1b3a989a1:;
		}
		else if ((!(_1b05a37cd_checkFuncDeclsBy(_self_, &((*(_203440_s)).get()._field_Methods))))) {
			_case_begin_1b3a98a28:;
		}
		_match_end_1b3a987a3:;
	};
}



inline jule::Bool _1b05a2e2b_checkStructDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3a9a167:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _205421_s = *it;
			{
				_1b05a2b95_checkStructDecl(_self_, &(_205421_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3a9a167:;
			++it;
			goto _iter_begin_1b3a9a167;
		}
		_iter_end_1b3a9a167:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b05a31d4_checkAnonFuncDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _206442_f) {
	(*(_206442_f)).get()._field_sema=_self_;
	_1b059dc4b_checkFnDeclPrototype(_self_, _206442_f);
}



inline void _1b05a348c_checkFuncDecl(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _206938_f) {
	if (_1aa49db40_IsIgnoreIdent((*(_206938_f)).get()._field_Ident)) {
		_1b058e126_pushErr(_self_.ptr(), (*(_206938_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1b05098aa_IsAnon((*(_206938_f)).ptr())) {
		_1b058e126_pushErr(_self_.ptr(), (*(_206938_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1b059019e_checkDirectives(_self_, &((*(_206938_f)).get()._field_Directives), jule::Any((*(_206938_f)), &__jule_any_type65));
	_1b05a31d4_checkAnonFuncDecl(_self_, _206938_f);
	if ((((*(_206938_f)).get()._field_Owner == nullptr) && _1b058ed3b_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_206938_f)))), &((*(_206938_f)).get()._field_Ident), (*(_206938_f)).get()._field_Binded))) {
		if ((*(_206938_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1b05088ed_Fn> _208121_init = _1b058ca70_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_208121_init != nullptr)) {
				return;;
			};
		};
		_1b058e126_pushErr(_self_.ptr(), (*(_206938_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_206938_f)).get()._field_Ident, &__jule_any_type5)}));
		_1b058e489_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b05a37cd_checkFuncDeclsBy(jule::Ptr<_1b058b4db_Sema> _self_, jule::Slice<jule::Ptr<_1b05088ed_Fn>>* _209141_funcs) {
	{
		auto expr = _209141_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3aa0ac9:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _209221_f = *it;
			{
				_1b05a348c_checkFuncDecl(_self_, &(_209221_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b3aa0ac9:;
			++it;
			goto _iter_begin_1b3aa0ac9;
		}
		_iter_end_1b3aa0ac9:;
	};
	return true;;
}



inline jule::Bool _1b05a3a64_checkFuncDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b05a37cd_checkFuncDeclsBy(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _1b05a3e82_pushCycleError(_1b058b4db_Sema* _self_, jule::Str* _210730_st1, jule::Str* _210741_st2, _1aa364275_StrBuilder* _210756_message) {
	;
	jule::Str _210913_refersTo = _1aa3c3e83_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_210730_st1)), &__jule_any_type5),jule::Any((*(_210741_st2)), &__jule_any_type5)}));;
	jule::Slice<jule::U8> _211017_buf = _1aa36e2d5_Buf(_210756_message);;
	_1aa36d03c_WriteStr(_210756_message, _1aa34db33_Repeat(jule::Str(" ", 1), 7LL));
	_1aa36d03c_WriteStr(_210756_message, _210913_refersTo);
	_1aa36d2e5_WriteByte(_210756_message, '\n');
	_1aa36cc84_Write(_210756_message, _211017_buf);
}



inline jule::Bool _1b05a4438_checkCrossCycle(_1b058b4db_Sema* _self_, jule::Ptr<_1b04e2871_Struct>* _211731_st1, jule::Ptr<_1b04e2871_Struct>* _211746_st2, _1aa364275_StrBuilder* _211765_message) {
	{
		auto expr = &((*(_211746_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3aa4d75:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> *_211816_u = it;
			{
				if (((*(_211816_u)) == (*(_211731_st1)))) {
					_1b05a3e82_pushCycleError(_self_, &((*(_211746_st2)).get()._field_Ident), &((*(_211816_u)).get()._field_Ident), _211765_message);
					return false;;
				};
				if ((!(_1b05a4438_checkCrossCycle(_self_, _211731_st1, _211816_u, _211765_message)))) {
					_1b05a3e82_pushCycleError(_self_, &((*(_211746_st2)).get()._field_Ident), &((*(_211816_u)).get()._field_Ident), _211765_message);
					return false;;
				};
			}
			_iter_next_1b3aa4d75:;
			++it;
			goto _iter_begin_1b3aa4d75;
		}
		_iter_end_1b3aa4d75:;
	};
	return true;;
}



inline jule::Bool _1b05a48de_checkStructDeriveIllegalCycles(_1b058b4db_Sema* _self_, jule::Str _213149_derive, jule::Ptr<_1b04e2871_Struct>* _213163_st1, jule::Ptr<_1b06477a6_TypeKind>* _213182_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b04e2871_Struct> _213217_st2 = _1b0664c35_getStructFromKind((*(_213182_k)));;
	if ((_213217_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_213163_st1)) == _213217_st2)) {
		_1b058e126_pushErr(_self_, (*(_213163_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_213149_derive, &__jule_any_type5),jule::Any((*(_213163_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1aa364275_StrBuilder _214417_message = static__1aa364594_New(32LL);;
	if ((!(_1b05a4438_checkCrossCycle(_self_, _213163_st1, &(_213217_st2), &(_214417_message))))) {
		jule::Str _214621_errMsg = _1aa36d834_Str(&_214417_message);;
		_1aa36da32_Clear(&_214417_message);
		_1b05a3e82_pushCycleError(_self_, &((*(_213163_st1)).get()._field_Ident), &(_213217_st2.get()._field_Ident), &(_214417_message));
		_214621_errMsg+=_1aa36d834_Str(&_214417_message);
		_1b058e126_pushErr(_self_, (*(_213163_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_213149_derive, &__jule_any_type5),jule::Any(_214621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b05a4c30_checkStructInsDeriveClone(_1b058b4db_Sema* _self_, jule::Ptr<_1b04e5951_StructIns> _215648_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1b04e4312_IsDerives(_215648_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_215648_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3aab035:;
		if (it != expr_end) {
			jule::Ptr<_1b04e4da1_FieldIns> _216021_f = *it;
			{
				if ((_216021_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1b3aab035;
				};
				if ((!(_1b0649b82_SupportsCloning(_216021_f.get()._field_Kind.ptr())))) {
					_1b058e126_pushErr(_self_, _215648_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_216021_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1b05a48de_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_215648_st.get()._field_Decl), &(_216021_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b3aab035:;
			++it;
			goto _iter_begin_1b3aab035;
		}
		_iter_end_1b3aab035:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b05a4e2d_checkPackageDecls(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3aacd8e:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _217821_f = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _217821_f);
				if ((!(_1b059ade1_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b3aacd8e:;
			++it;
			goto _iter_begin_1b3aacd8e;
		}
		_iter_end_1b3aacd8e:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3aae3ce:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _218521_f = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _218521_f);
				if ((!(_1b05a039b_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b3aae3ce:;
			++it;
			goto _iter_begin_1b3aae3ce;
		}
		_iter_end_1b3aae3ce:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3aadb2b:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _219221_f = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _219221_f);
				if ((!(_1b05a1d5e_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b3aadb2b:;
			++it;
			goto _iter_begin_1b3aadb2b;
		}
		_iter_end_1b3aadb2b:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ab0c0a:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _219921_f = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _219921_f);
				{
					
					if ((!(_1b05a3a64_checkFuncDecls(_self_)))) {
						_case_begin_1b3ab159b:;
					}
					else if ((!(_1b05a2e2b_checkStructDecls(_self_)))) {
						_case_begin_1b3ab1612:;
					}
					else {
						_case_begin_1b3ab1535:;
						{
							goto _iter_next_1b3ab0c0a;
						}
					}
					_match_end_1b3ab14d0:;
				};
				return;;
			}
			_iter_next_1b3ab0c0a:;
			++it;
			goto _iter_begin_1b3ab0c0a;
		}
		_iter_end_1b3ab0c0a:;
	};
}



inline void _1b05a5291_checkDataForTypeInference(_1b058b4db_Sema* _self_, jule::Ptr<_1b0612672_Data>* _221145_d, jule::Ptr<_1aa49b1d1_Token>* _221156_err_token) {
	{
		
		if (_1b0612a29_IsNil((*(_221145_d)).ptr())) {
			_case_begin_1b3ab24c0:;
			{
				_1b058e126_pushErr(_self_, (*(_221156_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1b0612cb0_IsVoid((*(_221145_d)).ptr())) {
			_case_begin_1b3ab2547:;
			{
				_1b058e126_pushErr(_self_, (*(_221156_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_221145_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b3ab25be:;
			{
				_1b058e126_pushErr(_self_, (*(_221156_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3ab239e:;
	};
}



inline void _1b05a5549_checkVarValue(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05ae1bd_Var>* _222338_v) {
	if (_1b05ae7d9_IsTypeInferred((*(_222338_v)).ptr())) {
		(*(_222338_v)).get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=(*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1b05a5291_checkDataForTypeInference(_self_.ptr(), &((*(_222338_v)).get()._field_Value.get()._field_Data), &((*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1b059a143_checkValidityForInitExpr(_self_, (*(_222338_v)).get()._field_Mutable, (*(_222338_v)).get()._field_Reference, &((*(_222338_v)).get()._field_Kind.get()._field_Kind), &((*(_222338_v)).get()._field_Value.get()._field_Data), &((*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1b0656e47_Arr> _223621_arr = _1b064ae6e_Arr((*(_222338_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_223621_arr != nullptr)) {
			if (_223621_arr.get()._field_Auto) {
				jule::Ptr<_1b0656e47_Arr> _223925_dataArr = _1b064ae6e_Arr((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_223925_dataArr != nullptr)) {
					_223621_arr.get()._field_N=_223925_dataArr.get()._field_N;
				};
			};
		};
		if (_1b0596b34_checkAssignType(_self_, (*(_222338_v)).get()._field_Reference, &((*(_222338_v)).get()._field_Kind.get()._field_Kind), &((*(_222338_v)).get()._field_Value.get()._field_Data), (*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1b059a143_checkValidityForInitExpr(_self_, (*(_222338_v)).get()._field_Mutable, (*(_222338_v)).get()._field_Reference, &((*(_222338_v)).get()._field_Kind.get()._field_Kind), &((*(_222338_v)).get()._field_Value.get()._field_Data), &((*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_222338_v)).get()._field_Reference && (!(_1b0664042_isValidForRef(&((*(_222338_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1b058e126_pushErr(_self_.ptr(), (*(_222338_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_222338_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_222338_v)).get()._field_Constant) {
		jule::Bool _226117_comptime = _1b064c25b_comptime((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1b0613046_IsConst((*(_222338_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_226117_comptime)))) {
			_1b058e126_pushErr(_self_.ptr(), (*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_226117_comptime && (_1b064d548_comptimeRange((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1b058e126_pushErr(_self_.ptr(), (*(_222338_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_222338_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1b064bec5_Tup((*(_222338_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_222338_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1b05a58ac_evalVarValue(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05ae1bd_Var>* _227937_decl, jule::Trait<_1b0667584_Lookup> _227953_l) {
	if ((!(_1b05ae553_IsInitialized((*(_227937_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1b0614366_Eval> _228417_eval = nullptr;;
	if (((*(_227937_decl)).get()._field_Kind != nullptr)) {
		_228417_eval=_1b0595d86_evalpd(_self_, _227953_l, (*(_227937_decl)).get()._field_Kind.get()._field_Kind, (*(_227937_decl)));
	} else {
		_228417_eval=_1b0595d86_evalpd(_self_, _227953_l, nullptr, (*(_227937_decl)));
	};
	_228417_eval.get()._field_immutable=(!((*(_227937_decl)).get()._field_Mutable));
	(*(_227937_decl)).get()._field_Value.get()._field_Data=_1b0637598_evalExpr(_228417_eval, (*(_227937_decl)).get()._field_Value.get()._field_Expr);
}



inline void _1b05a5c20_checkVar(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05ae1bd_Var>* _229633_decl, jule::Trait<_1b0667584_Lookup> _229649_l) {
	_1b05a58ac_evalVarValue(_self_, _229633_decl, _229649_l);
	if (((*(_229633_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1b05a5549_checkVarValue(_self_, _229633_decl);
}



inline void _1b05a5e1d_checkGlobals(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ac29a8:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _230621_decl = *it;
			{
				if (_230621_decl.get()._field_Binded) {
					goto _iter_next_1b3ac29a8;
				};
				if (((_1b05ae553_IsInitialized(_230621_decl.ptr()) && (_230621_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1b05ae7d9_IsTypeInferred(_230621_decl.ptr()) && (_230621_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1b05a5c20_checkVar(_self_, &(_230621_decl), jule::Trait<_1b0667584_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b3ac29a8:;
			++it;
			goto _iter_begin_1b3ac29a8;
		}
		_iter_end_1b3ac29a8:;
	};
}



inline jule::Ptr<_1b050b802_FnIns> _1b05a6319_readyToCheckFn(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _232039_s, jule::Ptr<_1b05088ed_Fn>* _232059_f) {
	jule::Ptr<_1b050b802_FnIns> _232117_ins = _1b050a15d_instance((*(_232059_f)));;
	if (((*(_232059_f)).get()._field_Instances.len() != 0LL)) {
		return _232117_ins;;
	};
	_232117_ins.get()._field_Owner=(*(_232039_s));
	_1b050a46b_appendInstance((*(_232059_f)).ptr(), &(_232117_ins));
	_232117_ins.get()._field_reloaded=true;
	if (_1b0599230_reloadFnInsTypes(_self_, _232117_ins)) {
		return _232117_ins;;
	};
	return nullptr;;
}



inline void _1b05a667c_checkTypeMethod(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _233440_s, jule::Ptr<_1b05088ed_Fn>* _233460_f) {
	if (((*(_233460_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1b050b802_FnIns> _233917_ins = (*(_233460_f)).get()._field_Instances[0LL];;
	if ((_233917_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1b05a9130_checkFnIns(_self_, &(_233917_ins));
}



inline jule::Ptr<_1b050b802_FnIns> _1b05a6b33_checkStructInsOp(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _234741_s, jule::Ptr<_1b05088ed_Fn>* _234761_f, jule::Fn<jule::Bool(jule::Ptr<_1b05088ed_Fn>)> _234769_p) {
	if (((((*(_234761_f)) == nullptr) || ((*(_234761_f)).get()._field_Generics.len() > 0LL)) || (!(_234769_p((*(_234761_f))))))) {
		return nullptr;;
	};
	return (*(_234761_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1b05a702e_checkStructEnv(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _235739_s, jule::Ptr<_1aa49b1d1_Token> _235758_errorToken) {
	jule::Bool __jule_func_result = false;
	_1b065990b_typeChecker _235817_tc = _1b065990b_typeChecker{._field_s=(*(_235739_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1b0667584_Lookup>((*(_235739_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1b0667584_Lookup>((*(_235739_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1b065891b_referencer>(_1b065891b_referencer{._field_ident=(*(_235739_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_235739_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_235739_s)).get()._field_Refers, };;
	if (((*(_235739_s)).get()._field_Generics.len() > 0LL)) {
		_235817_tc._field_useGenerics=jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>::alloc(0LL, (*(_235739_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_235739_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3acb929:;
			if (it != expr_end) {
				jule::I64 _237118_i = it - expr->begin();
				jule::Ptr<_1b0645dc0_InsGeneric> _237125_g = *it;
				{
					jule::Ptr<_1b04cde89_GenericDecl> _237225_decl = (*(_235739_s)).get()._field_Decl.get()._field_Generics[_237118_i];;
					{ jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> &__jule_push_dest = _235817_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1b06469b4_TypeAlias>(_1b06469b4_TypeAlias{._field_Token=_237225_decl.get()._field_Token, ._field_Ident=_237225_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_237125_g.get()._field_Kind}), })); };
				}
				_iter_next_1b3acb929:;
				++it;
				_237118_i++;
				goto _iter_begin_1b3acb929;
			}
			_iter_end_1b3acb929:;
		};
	};
	jule::Ptr<_1b060c44c_SymbolTable> _238117_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1b058dc08_setCurrentFile(_self_.ptr(), _238117_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_235739_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1b060c44c_SymbolTable> _238521_file = _1b058a232_findFile(&(_self_.get()._field_files), &((*(_235739_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_238521_file != nullptr)) {
			_1b058dc08_setCurrentFile(_self_.ptr(), _238521_file);
		};
	};
	if (((*(_235739_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1b0541ace_constraintChecker> _239221_cc = _1b059489b_constraintChecker(_self_);;
		_239221_cc.get()._field_et=_235758_errorToken;
		_239221_cc.get()._field_si=(*(_235739_s));
		_239221_cc.get()._field_genericsA=_235817_tc._field_useGenerics;
		_239221_cc.get()._field_uniq=true;
		if ((!(_1b0542a14_check(_239221_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_235739_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _240521_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_235817_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_235739_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3ad7979:;
			if (it != expr_end) {
				jule::Ptr<_1b05ae1bd_Var> _240725_v = *it;
				{
					_1b05a1820_checkVarDecl(_self_, &(_240725_v), jule::Trait<_1b0667584_Lookup>(_self_, 3));
					_1b05a5c20_checkVar(_self_, &(_240725_v), jule::Trait<_1b0667584_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _240521_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b3ad7979:;
				++it;
				goto _iter_begin_1b3ad7979;
			}
			_iter_end_1b3ad7979:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_235817_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1b0614366_Eval> _241817_eval = _1b05965c3_eval(_self_, jule::Trait<_1b0667584_Lookup>(_self_, 3));;
	(*(_235739_s)).get()._field_Comparable=(!((*(_235739_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_235739_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ada64c:;
		if (it != expr_end) {
			jule::Ptr<_1b04e4da1_FieldIns> _242021_f = *it;
			{
				jule::Ptr<_1b06477a6_TypeKind> _242121_kind = _1b06620a6_checkDecl(&_235817_tc, &(_242021_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_242121_kind != nullptr) && __jule_func_result);
				if ((_242121_kind == nullptr)) {
					if (((_self_ != (*(_235739_s)).get()._field_Decl.get()._field_sema) && ((*(_235739_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						(_self_.get()._field_errors).append((*(_235739_s)).get()._field_Decl.get()._field_sema.get()._field_errors);;
						(*(_235739_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1b3ada64c;
				};
				_242021_f.get()._field_Kind=_242121_kind;
				(*(_235739_s)).get()._field_Mutable=((*(_235739_s)).get()._field_Mutable || ((!(_242021_f.get()._field_Decl.get()._field_Mutable)) && _1b0649148_Mutable(_242021_f.get()._field_Kind.ptr())));
				(*(_235739_s)).get()._field_Comparable=((*(_235739_s)).get()._field_Comparable && _1b0648db2_Comparable(_242021_f.get()._field_Kind.ptr()));
				_1b05a4c30_checkStructInsDeriveClone(_self_.ptr(), (*(_235739_s)));
				if ((_242021_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1b3ada64c;
				};
				_241817_eval.get()._field_prefix=_242021_f.get()._field_Kind;
				_241817_eval.get()._field_field=_242021_f;
				_242021_f.get()._field_Default=_1b0637598_evalExpr(_241817_eval, _242021_f.get()._field_Decl.get()._field_Default);
				if ((_242021_f.get()._field_Default == nullptr)) {
					goto _iter_next_1b3ada64c;
				};
				;
				_1b0596b34_checkAssignType(_self_, false, &(_242021_f.get()._field_Kind), &(_242021_f.get()._field_Default), _242021_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1b3ada64c:;
			++it;
			goto _iter_begin_1b3ada64c;
		}
		_iter_end_1b3ada64c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b05a742a_precheckStructIns(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _245542_s, jule::Ptr<_1aa49b1d1_Token> _245561_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1b05a702e_checkStructEnv(_self_, _245542_s, _245561_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_245542_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ae2698:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _246021_f = *it;
			{
				if ((_246021_f.get()._field_Generics.len() == 0LL)) {
					if ((_1b05a6319_readyToCheckFn(_self_, _245542_s, &(_246021_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b3ae2698:;
			++it;
			goto _iter_begin_1b3ae2698;
		}
		_iter_end_1b3ae2698:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b05a76d3_checkStructIns(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns>* _247039_s) {
	{
		auto expr = &((*(_247039_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ae2e7e:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _247121_f = *it;
			{
				_1b05a667c_checkTypeMethod(_self_, _247039_s, &(_247121_f));
			}
			_iter_next_1b3ae2e7e:;
			++it;
			goto _iter_begin_1b3ae2e7e;
		}
		_iter_end_1b3ae2e7e:;
	};
}



inline void _1b05a798b_checkTypeStruct(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _247640_s) {
	if ((*(_247640_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247640_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_247640_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ae5019:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _248921_ins = *it;
			{
				_1b05a76d3_checkStructIns(_self_, &(_248921_ins));
			}
			_iter_next_1b3ae5019:;
			++it;
			goto _iter_begin_1b3ae5019;
		}
		_iter_end_1b3ae5019:;
	};
}



inline void _1b05a7b89_checkStructTypes(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ae5b63:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _249521_s = *it;
			{
				_1b05a798b_checkTypeStruct(_self_, &(_249521_s));
			}
			_iter_next_1b3ae5b63:;
			++it;
			goto _iter_begin_1b3ae5b63;
		}
		_iter_end_1b3ae5b63:;
	};
}



inline void _1b05a7e42_checkStructInsOperators(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e5951_StructIns> _250047_s) {
	{
		auto expr = &(_250047_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ae6c74:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _250121_m = *it;
			{
				{
					auto &_match_expr{ _250121_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1b3ae79de:;
						{
							_250047_s.get()._field_Operators._field_Eq=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b1027_Eq);
							_250047_s.get()._field_Comparable=(_250047_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1b3ae7a66:;
						{
							_250047_s.get()._field_Operators._field_Gt=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b12e1_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1b3ae7add:;
						{
							_250047_s.get()._field_Operators._field_GtEq=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b15aa_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1b3ae7b65:;
						{
							_250047_s.get()._field_Operators._field_Lt=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b1874_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1b3ae7bdc:;
						{
							_250047_s.get()._field_Operators._field_LtEq=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b1b3d_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1b3ae7c64:;
						{
							_250047_s.get()._field_Operators._field_Shl=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b227b_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1b3ae7cdb:;
						{
							_250047_s.get()._field_Operators._field_Shr=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b2545_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1b3ae7d63:;
						{
							_250047_s.get()._field_Operators._field_Add=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b280e_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1b3ae7dda:;
						{
							_250047_s.get()._field_Operators._field_Sub=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b2ac8_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1b3ae7e62:;
						{
							_250047_s.get()._field_Operators._field_Div=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b2d92_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1b3ae7ed9:;
						{
							_250047_s.get()._field_Operators._field_Mul=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b315b_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1b3ae8061:;
						{
							_250047_s.get()._field_Operators._field_Mod=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b3425_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1b3ae80d8:;
						{
							_250047_s.get()._field_Operators._field_BitAnd=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b36de_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1b3ae8160:;
						{
							_250047_s.get()._field_Operators._field_BitOr=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b39a8_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1b3ae81d7:;
						{
							_250047_s.get()._field_Operators._field_BitXor=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b3c72_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1b3ae825e:;
						{
							_250047_s.get()._field_Operators._field_Neg=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b43b0_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1b3ae82d6:;
						{
							_250047_s.get()._field_Operators._field_Pos=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b4679_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1b3ae835d:;
						{
							_250047_s.get()._field_Operators._field_BitNot=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b4943_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1b3ae83d5:;
						{
							_250047_s.get()._field_Operators._field_AddAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b5081_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1b3ae845c:;
						{
							_250047_s.get()._field_Operators._field_SubAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b534a_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1b3ae84d4:;
						{
							_250047_s.get()._field_Operators._field_DivAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b5614_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1b3ae855b:;
						{
							_250047_s.get()._field_Operators._field_MulAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b58cd_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1b3ae85d3:;
						{
							_250047_s.get()._field_Operators._field_ModAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b5b97_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1b3ae865a:;
						{
							_250047_s.get()._field_Operators._field_ShlAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b5e61_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1b3ae86d2:;
						{
							_250047_s.get()._field_Operators._field_ShrAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b622a_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1b3ae8759:;
						{
							_250047_s.get()._field_Operators._field_BitOrAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b64e4_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1b3ae87d1:;
						{
							_250047_s.get()._field_Operators._field_BitAndAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b67ad_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1b3ae8858:;
						{
							_250047_s.get()._field_Operators._field_BitXorAssign=_1b05a6b33_checkStructInsOp(_self_, &(_250047_s), &(_250121_m), static__1b05b6a77_BitXorAssign);
						}
					}
					_match_end_1b3ae777a:;
				};
			}
			_iter_next_1b3ae6c74:;
			++it;
			goto _iter_begin_1b3ae6c74;
		}
		_iter_end_1b3ae6c74:;
	};
}



inline void _1b05a81ea_precheckStructType(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b04e2871_Struct>* _256443_s) {
	if ((*(_256443_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_256443_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_256443_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b04e5951_StructIns> _257521_ins = _1b04e2ce4_instance((*(_256443_s)));;
		_257521_ins.get()._field_Checked=true;
		_1b04e3102_appendInstance((*(_256443_s)).ptr(), &(_257521_ins));
		_1b05a742a_precheckStructIns(_self_, &(_257521_ins), nullptr);
	};
	_1b05a7e42_checkStructInsOperators(_self_, (*(_256443_s)).get()._field_Instances[0LL]);
}



inline void _1b05a83e8_precheckStructTypes(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b09a67:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _258521_s = *it;
			{
				_1b05a81ea_precheckStructType(_self_, &(_258521_s));
			}
			_iter_next_1b3b09a67:;
			++it;
			goto _iter_begin_1b3b09a67;
		}
		_iter_end_1b3b09a67:;
	};
}



inline void _1b05a86a1_checkRets(_1b058b4db_Sema* _self_, jule::Ptr<_1b050b802_FnIns>* _259033_f) {
	if (_1b0508d71_IsVoid((*(_259033_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1b05aab26_missingRetChecker _259413_mrc = static__1b05aaede_new();;
	jule::Bool _259513_ok = _1b05ac111_check(&_259413_mrc, (*(_259033_f)).get()._field_Scope);;
	if ((!(_259513_ok))) {
		_1b058e126_pushErr(_self_, (*(_259033_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1b05a8a14_checkFnInsSc(_1b058b4db_Sema* _self_, jule::Ptr<_1b050b802_FnIns>* _260136_f, jule::Ptr<_1b055134c_scopeChecker>* _260152_sc) {
	_1b05897d6_appendRetVars(&((*(_260152_sc)).get()._field_table.get()._field_Vars), _260136_f);
	_1b0589ac2_appendParamVars(&((*(_260152_sc)).get()._field_table.get()._field_Vars), _260136_f);
	_1b0589dad_appendGenericTypeAliases(&((*(_260152_sc)).get()._field_table.get()._field_TypeAliases), _260136_f);
	_1b0562a56_check((*(_260152_sc)), &((*(_260136_f)).get()._field_Decl.get()._field_Scope), &((*(_260136_f)).get()._field_Scope));
	if ((!(_1b0553e21_stopped((*(_260152_sc)).ptr())))) {
		_1b05a86a1_checkRets(_self_, _260136_f);
	};
}



inline void _1b05a8d77_checkFnInsCaller(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050b802_FnIns>* _261441_f, jule::Ptr<_1aa49b1d1_Token> _261456_caller) {
	if ((*(_261441_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_1b060c44c_SymbolTable> _261917_old = (*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1b058dc08_setCurrentFile((*(_261441_f)).get()._field_Decl.get()._field_sema.ptr(), _261917_old);
	});;
	jule::Ptr<_1b060c44c_SymbolTable> _262117_file = _1b058a232_findFile(&((*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_261441_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_262117_file != nullptr)) {
		_1b058dc08_setCurrentFile((*(_261441_f)).get()._field_Decl.get()._field_sema.ptr(), _262117_file);
	};
	jule::Ptr<_1b055134c_scopeChecker> _262617_sc = _1b05461dd_newScopeChecker(&((*(_261441_f)).get()._field_Decl.get()._field_sema), (*(_261441_f)));;
	_262617_sc.get()._field_calledFrom=_261456_caller;
	_1b05a8a14_checkFnInsSc(_self_.ptr(), _261441_f, &(_262617_sc));
	if (((*(_261441_f)).get()._field_Decl.get()._field_sema != _self_)) {
		(_self_.get()._field_errors).append((*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_errors);;
		(*(_261441_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1b05a9130_checkFnIns(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b050b802_FnIns>* _263635_f) {
	_1b05a8d77_checkFnInsCaller(_self_, _263635_f, nullptr);
}



inline void _1b05a93d8_checkFunc(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _264034_f) {
	if ((*(_264034_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_264034_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_264034_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b14324:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _265021_ins = *it;
			{
				_1b05a9130_checkFnIns(_self_, &(_265021_ins));
			}
			_iter_next_1b3b14324:;
			++it;
			goto _iter_begin_1b3b14324;
		}
		_iter_end_1b3b14324:;
	};
}



inline void _1b05a9691_checkTestFn(_1b058b4db_Sema* _self_, jule::Ptr<_1b050b802_FnIns>* _265535_f) {
	if ((*(_265535_f)).get()._field_Decl.get()._field_Public) {
		_1b058e126_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_265535_f)).get()._field_Decl.get()._field_Unsafety || (!(_1b0508d71_IsVoid((*(_265535_f)).get()._field_Decl.ptr())))) || ((*(_265535_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_265535_f)).get()._field_Params.len() != 1LL)) || (*(_265535_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_265535_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1b058e126_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b0654153_Sptr> _267317_sptr = _1b064a435_Sptr((*(_265535_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_267317_sptr == nullptr)) {
		_1b058e126_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b04e5951_StructIns> _268013_s = _1b064b722_Struct(_267317_sptr.get()._field_Elem.ptr());;
	if (((_268013_s == nullptr) || (!(_1b0570888_isStdPackage(&(_268013_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path), jule::Str("testing", 7)))))) {
		_1b058e126_pushErr(_self_, (*(_265535_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1b058e489_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b05a9949_precheckFunc(jule::Ptr<_1b058b4db_Sema> _self_, jule::Ptr<_1b05088ed_Fn>* _268837_f) {
	if ((*(_268837_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_268837_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_268837_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1b050b802_FnIns> _269921_ins = _1b0509dc7_instanceForce((*(_268837_f)));;
		{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = (*(_268837_f)).get()._field_Instances; __jule_push_dest.push(_269921_ins); };
		jule::Bool _270117_ok = _1b0599230_reloadFnInsTypes(_self_, _269921_ins);;
		_269921_ins.get()._field_reloaded=true;
		if ((_270117_ok && _1b066366d_hasDirective(&((*(_268837_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1b05a9691_checkTestFn(_self_.ptr(), &(_269921_ins));
		};
	};
}



inline void _1b05a9b47_precheckFuncs(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b1e43e:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _271221_decl = *it;
			{
				{
					auto expr = &(_271221_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3b1ed57:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _271325_m = *it;
						{
							_1b05a9949_precheckFunc(_self_, &(_271325_m));
						}
						_iter_next_1b3b1ed57:;
						++it;
						goto _iter_begin_1b3b1ed57;
					}
					_iter_end_1b3b1ed57:;
				};
			}
			_iter_next_1b3b1e43e:;
			++it;
			goto _iter_begin_1b3b1e43e;
		}
		_iter_end_1b3b1e43e:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b206d7:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _271721_decl = *it;
			{
				_1b05a9949_precheckFunc(_self_, &(_271721_decl));
			}
			_iter_next_1b3b206d7:;
			++it;
			goto _iter_begin_1b3b206d7;
		}
		_iter_end_1b3b206d7:;
	};
}



inline void _1b05a9d45_checkFuncs(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b20ad3:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _272421_decl = *it;
			{
				_1b05a93d8_checkFunc(_self_, &(_272421_decl));
			}
			_iter_next_1b3b20ad3:;
			++it;
			goto _iter_begin_1b3b20ad3;
		}
		_iter_end_1b3b20ad3:;
	};
}



inline void _1b05aa043_checkPackageTypes(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b2174e:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _273221_f = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _273221_f);
				_1b05a5e1d_checkGlobals(_self_);
				_1b05a9b47_precheckFuncs(_self_);
				_1b05a83e8_precheckStructTypes(_self_);
			}
			_iter_next_1b3b2174e:;
			++it;
			goto _iter_begin_1b3b2174e;
		}
		_iter_end_1b3b2174e:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b22de3:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _274321_f = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _274321_f);
				_1b05a9d45_checkFuncs(_self_);
				_1b05a7b89_checkStructTypes(_self_);
			}
			_iter_next_1b3b22de3:;
			++it;
			goto _iter_begin_1b3b22de3;
		}
		_iter_end_1b3b22de3:;
	};
}



inline void _1b05aa241_setFileSemaFields(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b236eb:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _275121_f = *it;
			{
				_275121_f.get()._field_sema=_self_;
			}
			_iter_next_1b3b236eb:;
			++it;
			goto _iter_begin_1b3b236eb;
		}
		_iter_end_1b3b236eb:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b24873:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _275421_st = *it;
			{
				_275421_st.get()._field_sema=_self_;
			}
			_iter_next_1b3b24873:;
			++it;
			goto _iter_begin_1b3b24873;
		}
		_iter_end_1b3b24873:;
	};
}



inline void _1b05aa43e_setSemaFields(jule::Ptr<_1b058b4db_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b2506b:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _276021_file = *it;
			{
				_1b058dc08_setCurrentFile(_self_.ptr(), _276021_file);
				_1b05aa241_setFileSemaFields(_self_);
			}
			_iter_next_1b3b2506b:;
			++it;
			goto _iter_begin_1b3b2506b;
		}
		_iter_end_1b3b2506b:;
	};
}



inline void _1b05aa6e7_check(jule::Ptr<_1b058b4db_Sema> _self_, jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _276630_files) {
	_self_.get()._field_files=(*(_276630_files));
	_1b0592a97_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b05aa43e_setSemaFields(_self_);
	_1b059358c_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b0592e93_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b0593191_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b05a4e2d_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1b05aa043_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b058b4db_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1b05aab26_missingRetChecker static__1b05aaede_new(void) {
	return _1b05aab26_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1b05ab2ec_checkConditional(_1b05aab26_missingRetChecker* _self_, jule::Ptr<_1b0549b81_Conditional> _281435_c) {
	{
		auto expr = &(_281435_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b28d0b:;
		if (it != expr_end) {
			jule::Ptr<_1b0549466_If> _281521_elif = *it;
			{
				if ((_281521_elif == nullptr)) {
					return false;;
				};
				if ((!(_1b05abcc0_checkScope(_self_, _281521_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b3b28d0b:;
			++it;
			goto _iter_begin_1b3b28d0b;
		}
		_iter_end_1b3b28d0b:;
	};
	return ((_281435_c.get()._field_Default != nullptr) && _1b05abcc0_checkScope(_self_, _281435_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1b05ab63d_checkMatch(_1b05aab26_missingRetChecker* _self_, jule::Ptr<_1b054d17e_Match> _282629_m) {
	{
		auto expr = &(_282629_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b2a626:;
		if (it != expr_end) {
			jule::Ptr<_1b054dcb7_Case> _282721_c = *it;
			{
				if ((_282721_c == nullptr)) {
					return false;;
				};
				jule::I64 _283117_n = (*(_self_))._field_breaked.len();;
				jule::Bool _283217_ok = _1b05abcc0_checkScope(_self_, _282721_c.get()._field_Scope);;
				{
					
					if ((_283117_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b3b2cd32:;
						{
							return false;;
						}
					}
					else if ((!(_283217_ok))) {
						_case_begin_1b3b2cda9:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b3b2ce31;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b3b2ce31:;
						{
							(*(_self_))._field_falled=false;
							if ((_282721_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b3b2a626;
						}
					}
					_match_end_1b3b2cc66:;
				};
			}
			_iter_next_1b3b2a626:;
			++it;
			goto _iter_begin_1b3b2a626;
		}
		_iter_end_1b3b2a626:;
	};
	return ((_282629_m.get()._field_Default != nullptr) && _1b05abcc0_checkScope(_self_, _282629_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1b05ab97e_checkInfIter(_1b05aab26_missingRetChecker* _self_, jule::Ptr<_1b0549e7d_InfIter> _285231_it) {
	jule::I64 _285313_n = (*(_self_))._field_breaked.len();;
	if (_1b05abcc0_checkScope(_self_, _285231_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _285313_n);
		return true;;
	};
	if ((_285313_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _285917_itaddr = static_cast<jule::Uintptr>(_285231_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_285313_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b3b3164e:;
			if (it != expr_end) {
				jule::Uintptr _286020_addr = *it;
				{
					if ((_285917_itaddr == _286020_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _285313_n);
						return false;;
					};
				}
				_iter_next_1b3b3164e:;
				++it;
				goto _iter_begin_1b3b3164e;
			}
			_iter_end_1b3b3164e:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _285313_n);
	};
	return true;;
}



inline jule::Bool _1b05abcc0_checkScope(_1b05aab26_missingRetChecker* _self_, jule::Ptr<_1b0549048_Scope> _287129_s) {
	if ((_287129_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_287129_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b32bc2:;
		if (it != expr_end) {
			jule::Any _287521_st = *it;
			{
				{
					auto &_match_expr{ _287521_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1b3b338c6:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1b3b3393c:;
						{
							jule::Uintptr _288121_addr = _287521_st.cast_ptr<_1b054b5de_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_288121_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_288121_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1b3b339a3:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1b3b33a2a:;
						{
							if (_1b05ab97e_checkInfIter(_self_, _287521_st.cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1b3b33aa2:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b3b33b29:;
						{
							if (_1b05abcc0_checkScope(_self_, _287521_st.cast_ptr<_1b0549048_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1b3b33ba1:;
						{
							{
								auto &_match_expr{ _287521_st.cast_ptr<_1b0612672_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1b3b3759a:;
									{
										return true;;
									}
								}
								_match_end_1b3b37545:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1b3b33c28:;
						{
							if (_1b05ab2ec_checkConditional(_self_, _287521_st.cast_ptr<_1b0549b81_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1b3b33ca0:;
						{
							if (_1b05ab63d_checkMatch(_self_, _287521_st.cast_ptr<_1b054d17e_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1b3b337b6:;
				};
			}
			_iter_next_1b3b32bc2:;
			++it;
			goto _iter_begin_1b3b32bc2;
		}
		_iter_end_1b3b32bc2:;
	};
	return false;;
}



inline jule::Bool _1b05ac111_check(_1b05aab26_missingRetChecker* _self_, jule::Ptr<_1b0549048_Scope> _291724_s) {
	return _1b05abcc0_checkScope(_self_, _291724_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05aab26_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05ad013_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b05ae553_IsInitialized(_1b05ae1bd_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1b05ae7d9_IsTypeInferred(_1b05ae1bd_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1b05aea70_untypedConstant(_1b05ae1bd_Var* _self_) {
	return (_1b05ae7d9_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05ae1bd_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b05b0620_Dispose(jule::Ptr<_1b05088ed_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1b0508d71_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1b05077cb_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1b05b08d9_Str(jule::Ptr<_1b05088ed_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1b0508d71_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1b05077cb_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b050b802_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1b0650627_Prim> _3913_prim = _1b064a19e_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1b0653aae_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1b05b0c5d_logical(jule::Ptr<_1b05088ed_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1b0508d71_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1b05077cb_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b050b802_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1b0650627_Prim> _6413_prim = _1b064a19e_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1b0653828_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1b064b722_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1b05b1027_Eq(jule::Ptr<_1b05088ed_Fn> _7218_f) {
	return static__1b05b0c5d_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1b05b12e1_Gt(jule::Ptr<_1b05088ed_Fn> _7718_f) {
	return static__1b05b0c5d_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1b05b15aa_GtEq(jule::Ptr<_1b05088ed_Fn> _8220_f) {
	return static__1b05b0c5d_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1b05b1874_Lt(jule::Ptr<_1b05088ed_Fn> _8718_f) {
	return static__1b05b0c5d_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1b05b1b3d_LtEq(jule::Ptr<_1b05088ed_Fn> _9220_f) {
	return static__1b05b0c5d_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1b05b1eb2_result(jule::Ptr<_1b05088ed_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1b0508d71_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1b05077cb_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1b050b802_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1b064b722_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1b05b227b_Shl(jule::Ptr<_1b05088ed_Fn> _11819_f) {
	return static__1b05b1eb2_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1b05b2545_Shr(jule::Ptr<_1b05088ed_Fn> _12319_f) {
	return static__1b05b1eb2_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1b05b280e_Add(jule::Ptr<_1b05088ed_Fn> _12819_f) {
	return static__1b05b1eb2_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1b05b2ac8_Sub(jule::Ptr<_1b05088ed_Fn> _13319_f) {
	return static__1b05b1eb2_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1b05b2d92_Div(jule::Ptr<_1b05088ed_Fn> _13819_f) {
	return static__1b05b1eb2_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1b05b315b_Mul(jule::Ptr<_1b05088ed_Fn> _14319_f) {
	return static__1b05b1eb2_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1b05b3425_Mod(jule::Ptr<_1b05088ed_Fn> _14819_f) {
	return static__1b05b1eb2_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1b05b36de_BitAnd(jule::Ptr<_1b05088ed_Fn> _15322_f) {
	return static__1b05b1eb2_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1b05b39a8_BitOr(jule::Ptr<_1b05088ed_Fn> _15821_f) {
	return static__1b05b1eb2_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1b05b3c72_BitXor(jule::Ptr<_1b05088ed_Fn> _16322_f) {
	return static__1b05b1eb2_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1b05b40e6_unary(jule::Ptr<_1b05088ed_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1b0508d71_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1b05077cb_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1b050b802_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1b064b722_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1b05b43b0_Neg(jule::Ptr<_1b05088ed_Fn> _18719_f) {
	return static__1b05b40e6_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1b05b4679_Pos(jule::Ptr<_1b05088ed_Fn> _19219_f) {
	return static__1b05b40e6_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1b05b4943_BitNot(jule::Ptr<_1b05088ed_Fn> _19722_f) {
	return static__1b05b40e6_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1b05b4cb7_assign(jule::Ptr<_1b05088ed_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1b0508d71_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1b05077cb_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1b05b5081_AddAssign(jule::Ptr<_1b05088ed_Fn> _22125_f) {
	return static__1b05b4cb7_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1b05b534a_SubAssign(jule::Ptr<_1b05088ed_Fn> _22625_f) {
	return static__1b05b4cb7_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1b05b5614_DivAssign(jule::Ptr<_1b05088ed_Fn> _23125_f) {
	return static__1b05b4cb7_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1b05b58cd_MulAssign(jule::Ptr<_1b05088ed_Fn> _23625_f) {
	return static__1b05b4cb7_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1b05b5b97_ModAssign(jule::Ptr<_1b05088ed_Fn> _24125_f) {
	return static__1b05b4cb7_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1b05b5e61_ShlAssign(jule::Ptr<_1b05088ed_Fn> _24625_f) {
	return static__1b05b4cb7_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1b05b622a_ShrAssign(jule::Ptr<_1b05088ed_Fn> _25125_f) {
	return static__1b05b4cb7_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1b05b64e4_BitOrAssign(jule::Ptr<_1b05088ed_Fn> _25627_f) {
	return static__1b05b4cb7_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1b05b67ad_BitAndAssign(jule::Ptr<_1b05088ed_Fn> _26128_f) {
	return static__1b05b4cb7_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1b05b6a77_BitXorAssign(jule::Ptr<_1b05088ed_Fn> _26628_f) {
	return static__1b05b4cb7_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05aeed2_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1b05e9989_pushErr(_1b05e948e_typeCompatibilityChecker* _self_, jule::Str _11826_fmt, jule::Slice<jule::Any> _11839_args) {
	_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11826_fmt, _11839_args);
}



inline jule::Bool _1b05e9c20_checkTrait(_1b05e948e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b0648895_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b051bb97_Trait> _12617_trt = _1b064b9a8_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12717_ref = false;;
	{
		
		if ((_1b064a435_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b2b51807:;
			{
				_12717_ref=true;
				(*(_self_))._field_src=_1b064a435_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1b064b722_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b2b5187e;
			}
		}
		else if ((_1b064b722_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b2b5187e:;
			{
				jule::Ptr<_1b04e5951_StructIns> _13717_s = _1b064b722_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1b04e3ec1_IsImplements(_13717_s.get()._field_Decl.ptr(), _12617_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12717_ref)) && _1b05e805e_traitHasReferenceReceiver(&(_12617_trt)))) {
					_1b05e9989_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b064b9a8_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b2b51906:;
			{
				jule::Ptr<_1b051bb97_Trait> _14721_base = _1b064b9a8_Trait((*(_self_))._field_src.ptr());;
				if ((_12617_trt == _14721_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1b2b5583e:;
				{
					auto expr = &(_14721_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2b55c29:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> _15220_s1 = *it;
						{
							{
								auto expr = &(_12617_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b2b56587:;
								if (it != expr_end) {
									jule::Ptr<_1b04e2871_Struct> _15324_s2 = *it;
									{
										if ((_15220_s1 == _15324_s2)) {
											goto _iter_next_1b2b55c29;
										};
									}
									_iter_next_1b2b56587:;
									++it;
									goto _iter_begin_1b2b56587;
								}
								_iter_end_1b2b56587:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b2b55c29:;
						++it;
						goto _iter_begin_1b2b55c29;
					}
					_iter_end_1b2b55c29:;
				};
				{
					auto expr = &(_12617_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2b559c6:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _16025_m1 = *it;
						{
							jule::Ptr<_1b05088ed_Fn> _16125_m2 = _1b051c846_FindMethod(_14721_base.ptr(), _16025_m1.get()._field_Ident);;
							if ((_16125_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1b050b802_FnIns> _16521_m1k = _1b0597ccd_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m1));;
							jule::Ptr<_1b050b802_FnIns> _16621_m2k = _1b0597ccd_getTraitCheckFnKind((*(_self_))._field_s, &(_16125_m2));;
							if ((!(_1b050c76a_equalTrait(_16521_m1k, &(_16621_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b2b559c6:;
						++it;
						goto _iter_begin_1b2b559c6;
					}
					_iter_end_1b2b559c6:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b2b5174c:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b2b516e7:;
	};
}



inline jule::Bool _1b05e9ea6_checkPtr(_1b05e948e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b0648895_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b065791a_Ptr> _18117_dest = _1b064a6bb_Ptr((*(_self_))._field_dest.ptr());;
	if (_1b0658454_IsUnsafe(_18117_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1b0647eb0_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b05ea23c_checkPrim(_1b05e948e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1b0650627_Prim> _19017_prim = _1b064a19e_Prim((*(_self_))._field_dest.ptr());;
		if (((_19017_prim != nullptr) && _1b0653d45_IsAny(_19017_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1b0647eb0_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1b05ea638_typeEnum(_1b05e948e_typeCompatibilityChecker* _self_, jule::Ptr<_1b0520a9c_TypeEnum>* _19828_e, jule::Ptr<_1b06477a6_TypeKind>* _19847_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19828_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2b5c835:;
		if (it != expr_end) {
			jule::Ptr<_1b05204c5_TypeEnumItem> _19921_item = *it;
			{
				if (_1b0647eb0_Equal(_19921_item.get()._field_Kind.get()._field_Kind, (*(_19847_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1b0520a9c_TypeEnum> _20321_ke = _1b064abd8_TypeEnum(_19921_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20321_ke == nullptr)) {
					goto _iter_next_1b2b5c835;
				};
				if (_1b05ea638_typeEnum(_self_, &(_20321_ke), _19847_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b2b5c835:;
			++it;
			goto _iter_begin_1b2b5c835;
		}
		_iter_end_1b2b5c835:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b05ea8be_checkTypeEnum(_1b05e948e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1b0647eb0_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1b0520a9c_TypeEnum> _21817_e = _1b064abd8_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1b05ea638_typeEnum(_self_, &(_21817_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1b05eab55_check(_1b05e948e_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1b064a6bb_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1b05e9ea6_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1b0649665_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1b0648895_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1b064a19e_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b2b62472:;
			{
				__jule_func_result = _1b05ea23c_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b064abd8_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b2b61b9c:;
			{
				__jule_func_result = _1b05ea8be_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1b064b9a8_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b2b61c13:;
			{
				__jule_func_result = _1b05e9c20_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b2b61509:;
			{
				__jule_func_result = _1b0647eb0_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b2b613d8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b05e948e_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1b05eb6d3_pushErr(_1b05eb23d_assignTypeChecker* _self_, jule::Str _25426_fmt, jule::Slice<jule::Any> _25439_args) {
	_1b058e126_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25426_fmt, _25439_args);
}



inline jule::Bool _1b05eb969_checkValidity(_1b05eb23d_assignTypeChecker* _self_) {
	jule::Bool _25917_valid = true;;
	{
		
		if ((_1b064b48b_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b64d15:;
			{
				jule::Ptr<_1b050b802_FnIns> _26217_f = _1b064b48b_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1b050cc87_IsBuiltin(_26217_f.ptr())) {
						_case_begin_1b2b66201:;
						{
							_1b05eb6d3_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (_26217_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1b2b66278:;
						{
							_1b05eb6d3_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (((!(_26217_f.get()._field_Decl.get()._field_Statically)) && _1b0509107_IsMethod(_26217_f.get()._field_Decl.ptr()))) {
						_case_begin_1b2b66300:;
						{
							_1b05eb6d3_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					else if (((_26217_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26217_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1b2b66377:;
						{
							_1b05eb6d3_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1b058e489_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25917_valid=false;
						}
					}
					_match_end_1b2b66135:;
				};
			}
		}
		else if ((_1b064bec5_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b64d8c:;
			{
				_1b05eb6d3_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25917_valid=false;
			}
		}
		_match_end_1b2b64c5a:;
	};
	return _25917_valid;;
}



inline jule::Bool _1b05ebc00_checkConst(_1b05eb23d_assignTypeChecker* _self_) {
	if (((((!(_1b0613046_IsConst((*(_self_))._field_d.ptr()))) || (_1b064a19e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1ad37c7b8_IsNum(_1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29913_kind = _1b064a19e_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1ad37c4ee_IsFloat(_29913_kind)) {
			_case_begin_1b2b6c3e4:;
			{
				if ((!(_1b05e83e4_floatAssignable(&(_29913_kind), &((*(_self_))._field_d))))) {
					_1b05eb6d3_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29913_kind;
			}
		}
		else if (_1ad37c1ad_IsInt(_29913_kind)) {
			_case_begin_1b2b6c46b:;
			{
				if ((!(_1b05e8ea5_intAssignable(_29913_kind, &((*(_self_))._field_d))))) {
					_1b05eb6d3_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29913_kind;
			}
		}
		else {
			_case_begin_1b2b6c34a:;
			{
				return false;;
			}
		}
		_match_end_1b2b6c2e5:;
	};
	return true;;
}



inline jule::Bool _1b05ebe86_isPrim(_1b05eb23d_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1b064860e_Binded((*(_self_))._field_dest.ptr()) || _1b064860e_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1b064a19e_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1b05ec21c_checkCompatibility(_1b05eb23d_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b2b7167e:;
			{
				return false;;
			}
		}
		else if ((!(_1b05eb969_checkValidity(_self_)))) {
			_case_begin_1b2b71706:;
			{
				return false;;
			}
		}
		else if (_1b05ebc00_checkConst(_self_)) {
			_case_begin_1b2b7177d:;
			{
				return true;;
			}
		}
		else if ((_1b064a952_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b71805:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _34321_dkind = (*(_self_))._field_dest;;
				if ((_1b064a952_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34321_dkind=_1b064a952_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1b064a19e_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1b2b7154c;
				};
				if (_1ad378d25_TypesAreCompatible(_1b064a19e_Prim(_1b064a952_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1b064a19e_Prim(_34321_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1b05ebe86_isPrim(_self_)) {
			_case_begin_1b2b7187c:;
			{
				jule::Ptr<_1b0650627_Prim> _35317_dest = _1b064a19e_Prim((*(_self_))._field_dest.ptr());;
				if (_1b0653d45_IsAny(_35317_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1b0650627_Prim> _35721_src = _1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1ad378d25_TypesAreCompatible(_35317_dest.get()._field_Kind, _35721_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1b2b7154c:;
	};
	return _1b05970da_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1b05ec4a3_check(_1b05eb23d_assignTypeChecker* _self_) {
	jule::Bool _36613_ok = _1b05ec21c_checkCompatibility(_self_);;
	if ((_36613_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1b0665021_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36613_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05eb23d_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b2b88674_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b2b89c91:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1b2b8aae9:;
						{
							_38921_elem=_1b064ae6e_Arr((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b2b8aa3e:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c3e6d_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1b05ee5b5_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1b2b89c3b:;
	};
	return false;;
}

inline jule::Bool _1b2b87db0_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b2b8d107:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1b2b8dec6:;
						{
							_38921_elem=_1b064b205_Slc((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b2b8dda5:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c30d2_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1b05ee5b5_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1b2b8d0a2:;
	};
	return false;;
}

inline jule::Bool _1b37962a3_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b3797b89:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1b3798abe:;
						{
							_38921_elem=_1b064a6bb_Ptr((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b3798937:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c36cb_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1b05ee5b5_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1b3797b34:;
	};
	return false;;
}

inline jule::Bool _1b37959de_annotateConstraintElem(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _38649_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b379abd1:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _38921_elem = nullptr;;
				{
					
{
						_case_begin_1b379bb7c:;
						{
							_38921_elem=_1b064a435_Sptr((*(_38649_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b379b97e:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c2c4c_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1b05ee5b5_annotateConstraint(_self_, &(_38921_elem));;
			}
		}
		_match_end_1b379ab7b:;
	};
	return false;;
}



inline jule::Bool _1b05ed7a1_annotateConstraintMap(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _40645_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b2b78bc5:;
			{
				jule::Ptr<_1b06562ba_Map> _40921_m = _1b064bc3e_Map((*(_40645_k)).ptr());;
				jule::Ptr<_1b04c46bb_MapTypeDecl> _41021_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c46bb_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_41021_m2.get()._field_Key;
				if ((!(_1b05ee5b5_annotateConstraint(_self_, &(_40921_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_41021_m2.get()._field_Val;
				__jule_func_result = _1b05ee5b5_annotateConstraint(_self_, &(_40921_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b2b78b70:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b05edae2_annotateConstraintTup(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _42145_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b2b7b37b:;
			{
				jule::Ptr<_1b04c33ce_TupleTypeDecl> _42421_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c33ce_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1b065571a_Tuple> _42521_tup2 = _1b064bec5_Tup((*(_42145_k)).ptr());;
				{
					auto expr = &(_42521_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2b7c613:;
					if (it != expr_end) {
						jule::Ptr<_1b06477a6_TypeKind> _42625_t2 = *it;
						{
							{
								auto expr = &(_42421_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b2b7c3e3:;
								if (it != expr_end) {
									jule::Ptr<_1b04c1ba2_TypeDecl> _42729_t = *it;
									{
										(*(_self_))._field_c=_42729_t;
										if (_1b05ee5b5_annotateConstraint(_self_, &(_42625_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b2b7c3e3:;
									++it;
									goto _iter_begin_1b2b7c3e3;
								}
								_iter_end_1b2b7c3e3:;
							};
						}
						_iter_next_1b2b7c613:;
						++it;
						goto _iter_begin_1b2b7c613;
					}
					_iter_end_1b2b7c613:;
				};
			}
		}
		_match_end_1b2b7b326:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b05ede33_annotateConstraintFn(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _43844_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b2b7ccea:;
			{
				jule::Ptr<_1b04d393e_FnDecl> _44121_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04d393e_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1b050b802_FnIns> _44221_f = _1b064b48b_Fn((*(_43844_k)).ptr());;
				{
					auto expr = &(_44221_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2b7eeea:;
					if (it != expr_end) {
						jule::I64 _44318_i = it - expr->begin();
						jule::Ptr<_1b050a856_ParamIns> _44325_fp = *it;
						{
							(*(_self_))._field_c=_44121_pf.get()._field_Params[_44318_i].get()._field_Kind;
							if (_1b05ee5b5_annotateConstraint(_self_, &(_44325_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b2b7eeea:;
						++it;
						_44318_i++;
						goto _iter_begin_1b2b7eeea;
					}
					_iter_end_1b2b7eeea:;
				};
				if ((_44121_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44121_pf.get()._field_Result.get()._field_Kind;
					if (_1b05ee5b5_annotateConstraint(_self_, &(_44221_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b2b7cc95:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b05ee274_annotateConstraintIdent(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _45947_k) {
	jule::Ptr<_1b04c22ac_IdentTypeDecl> _46017_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1b04c22ac_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1b04e5951_StructIns> _46117_s = _1b064b722_Struct((*(_45947_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2b82b13:;
		if (it != expr_end) {
			jule::I64 _46213_i = it - expr->begin();
			jule::Ptr<_1b04cde89_GenericDecl> _46216_g = *it;
			{
				if ((_46216_g.get()._field_Ident == _46017_ident.get()._field_Ident)) {
					jule::Ptr<_1b0645dc0_InsGeneric> _46425_fg = (*(_self_))._field_f.get()._field_Generics[_46213_i];;
					if ((_46425_fg != nullptr)) {
						return false;;
					};
					_1b05ee928_pushGeneric(_self_, _45947_k, _46213_i);
					return true;;
				};
				if ((_46117_s == nullptr)) {
					goto _iter_next_1b2b82b13;
				};
				jule::Ptr<_1b04c1ba2_TypeDecl> _47421_c = (*(_self_))._field_c;;
				{
					auto expr = &(_46017_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2b838b1:;
					if (it != expr_end) {
						jule::Ptr<_1b04c1ba2_TypeDecl> _47525_ig = *it;
						{
							(*(_self_))._field_c=_47525_ig;
							{
								auto expr = &(_46117_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b2b85e13:;
								if (it != expr_end) {
									jule::Ptr<_1b0645dc0_InsGeneric> _47729_sg = *it;
									{
										if (_1b05ee5b5_annotateConstraint(_self_, &(_47729_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b2b85e13:;
									++it;
									goto _iter_begin_1b2b85e13;
								}
								_iter_end_1b2b85e13:;
							};
						}
						_iter_next_1b2b838b1:;
						++it;
						goto _iter_begin_1b2b838b1;
					}
					_iter_end_1b2b838b1:;
				};
				(*(_self_))._field_c=_47421_c;
			}
			_iter_next_1b2b82b13:;
			++it;
			_46213_i++;
			goto _iter_begin_1b2b82b13;
		}
		_iter_end_1b2b82b13:;
	};
	return false;;
}



inline jule::Bool _1b05ee5b5_annotateConstraint(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _48842_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b2b859b2:;
			{
				return _1b05ee274_annotateConstraintIdent(_self_, _48842_k);;
			}
		}
		_match_end_1b2b8595c:;
	};
	{
		
		if ((_1b064ae6e_Arr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b86ee1:;
			{
				return _1b2b88674_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b064b205_Slc((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b87068:;
			{
				return _1b2b87db0_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b064a6bb_Ptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b870e0:;
			{
				return _1b37962a3_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b064a435_Sptr((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b877c7:;
			{
				return _1b37959de_annotateConstraintElem(_self_, _48842_k);;
			}
		}
		else if ((_1b064bc3e_Map((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b8783d:;
			{
				return _1b05ed7a1_annotateConstraintMap(_self_, _48842_k);;
			}
		}
		else if ((_1b064b48b_Fn((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b878a4:;
			{
				return _1b05ede33_annotateConstraintFn(_self_, _48842_k);;
			}
		}
		else if ((_1b064bec5_Tup((*(_48842_k)).ptr()) != nullptr)) {
			_case_begin_1b2b8791a:;
			{
				return _1b05edae2_annotateConstraintTup(_self_, _48842_k);;
			}
		}
		else {
			_case_begin_1b2b87387:;
			{
				return false;;
			}
		}
		_match_end_1b2b87332:;
	};
}



inline void _1b05ee928_pushGeneric(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _51335_k, jule::I64 _51349_i) {
	(*(_self_))._field_f.get()._field_Generics[_51349_i]=jule::new_ptr<_1b0645dc0_InsGeneric>(_1b0645dc0_InsGeneric{._field_Kind=(*(_51335_k)), });
	jule::Ptr<_1b04cde89_GenericDecl> _51517_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51349_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b379e542:;
		if (it != expr_end) {
			jule::Ptr<_1b06477a6_TypeKind> _51621_ignored = *it;
			{
				if ((_51517_gd.get()._field_Ident == _1b0647b6e_Str(_51621_ignored.ptr()))) {
					_51621_ignored.get()._field_Kind=(*(_51335_k)).get()._field_Kind;
				};
			}
			_iter_next_1b379e542:;
			++it;
			goto _iter_begin_1b379e542;
		}
		_iter_end_1b379e542:;
	};
	if (((_51517_gd.get()._field_Constraint == nullptr) || (_51517_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51517_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1b05ee5b5_annotateConstraint(_self_, _51335_k);
}



inline jule::Bool _1b05eec69_annotatePrim(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _52843_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1b0601c8d_annotateAny(_self_, _52843_k);
	return __jule_func_result;;
}



inline jule::Bool _1b06000aa_annotateArr(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _53242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b0656e47_Arr> _53317_parr = _1b064ae6e_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53317_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b0656e47_Arr> _53717_arr = _1b064ae6e_Arr((*(_53242_k)).ptr());;
	(*(_self_))._field_k=(&(_53317_parr.get()._field_Elem));
	__jule_func_result = _1b06020ce_annotateKind(_self_, &(_53717_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b06003eb_annotateSlc(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _54242_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b0654b26_Slc> _54317_pslc = _1b064b205_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54317_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b0654b26_Slc> _54717_slc = _1b064b205_Slc((*(_54242_k)).ptr());;
	(*(_self_))._field_k=(&(_54317_pslc.get()._field_Elem));
	__jule_func_result = _1b06020ce_annotateKind(_self_, &(_54717_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b06007e7_checkMapKey(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _55241_k, jule::Ptr<_1b06477a6_TypeKind>* _55261_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b06477a6_TypeKind>* _55317_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55241_k;
	__jule_func_result=_1b06020ce_annotateKind(_self_, _55261_ck);
	(*(_self_))._field_k=_55317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b0600b38_annotateMap(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _56042_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b06562ba_Map> _56117_pmap = _1b064bc3e_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56117_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b06562ba_Map> _56517_m = _1b064bc3e_Map((*(_56042_k)).ptr());;
	__jule_func_result = (_1b06007e7_checkMapKey(_self_, (&(_56117_pmap.get()._field_Key)), &(_56517_m.get()._field_Key)) && _1b06007e7_checkMapKey(_self_, (&(_56117_pmap.get()._field_Val)), &(_56517_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1b0600e79_annotateFn(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _57041_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b050b802_FnIns> _57117_pf = _1b064b48b_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57117_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b050b802_FnIns> _57517_f = _1b064b48b_Fn((*(_57041_k)).ptr());;
	{
		
		if ((_57117_pf.get()._field_Params.len() != _57517_f.get()._field_Params.len())) {
			_case_begin_1b37aa1da:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1b0508d71_IsVoid(_57117_pf.get()._field_Decl.ptr()) != _1b0508d71_IsVoid(_57517_f.get()._field_Decl.ptr()))) {
			_case_begin_1b37aa251:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b37aa185:;
	};
	__jule_func_result=true;
	jule::Ptr<_1b06477a6_TypeKind>* _58417_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57517_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37aa30b:;
		if (it != expr_end) {
			jule::I64 _58514_i = it - expr->begin();
			jule::Ptr<_1b050a856_ParamIns> _58521_fp = *it;
			{
				(*(_self_))._field_k=(&(_57117_pf.get()._field_Params[_58514_i].get()._field_Kind));
				__jule_func_result=(_1b06020ce_annotateKind(_self_, &(_58521_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b37aa30b:;
			++it;
			_58514_i++;
			goto _iter_begin_1b37aa30b;
		}
		_iter_end_1b37aa30b:;
	};
	if ((!(_1b0508d71_IsVoid(_57117_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57117_pf.get()._field_Result));
		__jule_func_result=(_1b06020ce_annotateKind(_self_, &(_57517_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58417_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b06012ba_annotatePtr(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _59942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b065791a_Ptr> _60017_pptr = _1b064a6bb_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_60017_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b065791a_Ptr> _60417_ptr = _1b064a6bb_Ptr((*(_59942_k)).ptr());;
	(*(_self_))._field_k=(&(_60017_pptr.get()._field_Elem));
	__jule_func_result = _1b06020ce_annotateKind(_self_, &(_60417_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b060160b_annotateSptr(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _60943_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b0654153_Sptr> _61017_ssptr = _1b064a435_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_61017_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b0654153_Sptr> _61417_sptr = _1b064a435_Sptr((*(_60943_k)).ptr());;
	(*(_self_))._field_k=(&(_61017_ssptr.get()._field_Elem));
	__jule_func_result = _1b06020ce_annotateKind(_self_, &(_61417_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1b060194c_annotateStruct(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _61945_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b04e5951_StructIns> _62017_s = _1b064b722_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_62017_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b04e5951_StructIns> _62417_s2 = _1b064b722_Struct((*(_61945_k)).ptr());;
	if ((_62017_s.get()._field_Generics.len() != _62417_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_62017_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37b3e5d:;
		if (it != expr_end) {
			jule::I64 _62814_i = it - expr->begin();
			jule::Ptr<_1b0645dc0_InsGeneric> _62821_g = *it;
			{
				jule::Ptr<_1b0645dc0_InsGeneric> _62921_g2 = _62417_s2.get()._field_Generics[_62814_i];;
				if (_1b0647eb0_Equal(_62821_g.get()._field_Kind, _62921_g2.get()._field_Kind)) {
					goto _iter_next_1b37b3e5d;
				};
				(*(_self_))._field_k=(&(_62821_g.get()._field_Kind));
				if ((!(_1b06020ce_annotateKind(_self_, &(_62921_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b37b3e5d:;
			++it;
			_62814_i++;
			goto _iter_begin_1b37b3e5d;
		}
		_iter_end_1b37b3e5d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b0601c8d_annotateAny(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _64142_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64213_kind = _1b0647b6e_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37b6adc:;
		if (it != expr_end) {
			jule::I64 _64313_i = it - expr->begin();
			jule::Ptr<_1b04cde89_GenericDecl> _64316_g = *it;
			{
				if ((_64213_kind != _64316_g.get()._field_Ident)) {
					goto _iter_next_1b37b6adc;
				};
				jule::Ptr<_1b0645dc0_InsGeneric> _64717_t = (*(_self_))._field_f.get()._field_Generics[_64313_i];;
				{
					
					if ((_64717_t == nullptr) || (_64717_t.get()._field_Kind == nullptr)) {
						_case_begin_1b37b8517:;
						{
							_1b05ee928_pushGeneric(_self_, _64142_k, _64313_i);
						}
					}
					else if ((!(_1b0647eb0_Equal(_64717_t.get()._field_Kind, (*(_64142_k)))))) {
						_case_begin_1b37b858e:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b37b83d5:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64142_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b37b6adc:;
			++it;
			_64313_i++;
			goto _iter_begin_1b37b6adc;
		}
		_iter_end_1b37b6adc:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b06020ce_annotateKind(_1b05ecdaa_dynamicTypeAnnotation* _self_, jule::Ptr<_1b06477a6_TypeKind>* _66243_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1b0601c8d_annotateAny(_self_, _66243_k)) {
			_case_begin_1b37ba5a2:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1b064a19e_Prim((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37ba629:;
			{
				__jule_func_result = _1b05eec69_annotatePrim(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064ae6e_Arr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37ba88d:;
			{
				__jule_func_result = _1b06000aa_annotateArr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064b205_Slc((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37ba904:;
			{
				__jule_func_result = _1b06003eb_annotateSlc(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064bc3e_Map((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37ba96a:;
			{
				__jule_func_result = _1b0600b38_annotateMap(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064b48b_Fn((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37ba9e2:;
			{
				__jule_func_result = _1b0600e79_annotateFn(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064a6bb_Ptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37baa69:;
			{
				__jule_func_result = _1b06012ba_annotatePtr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064a435_Sptr((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37bab79:;
			{
				__jule_func_result = _1b060160b_annotateSptr(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else if ((_1b064b722_Struct((*(_66243_k)).ptr()) != nullptr)) {
			_case_begin_1b37babe0:;
			{
				__jule_func_result = _1b060194c_annotateStruct(_self_, _66243_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b37ba481:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b37b9edb:;
	};
}



inline jule::Bool _1b0602365_annotate(_1b05ecdaa_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1b06020ce_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b05ecdaa_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b06032ab_pushErrToken(_1b0602c17_fnCallArgChecker* _self_, jule::Ptr<_1aa49b1d1_Token> _70731_token, jule::Str _70746_fmt, jule::Slice<jule::Any> _70759_args) {
	_1b058e126_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70731_token, _70746_fmt, _70759_args);
}



inline void _1b060361e_pushErr(_1b0602c17_fnCallArgChecker* _self_, jule::Str _71126_fmt, jule::Slice<jule::Any> _71139_args) {
	_1b06032ab_pushErrToken(_self_, (*(_self_))._field_errorToken, _71126_fmt, _71139_args);
}



inline jule::Slice<jule::Ptr<_1b050a856_ParamIns>> _1b06038a5_getParams(_1b0602c17_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1b0507545_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1b0603bb3_checkCounts(_1b0602c17_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>* _72431_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72517_n = (*(_72431_params)).len();;
	if (((_72517_n > 0LL) && _1b0507545_IsSelf((*(_72431_params))[0LL].get()._field_Decl.ptr()))) {
		(_72517_n)--;
	};
	jule::I64 _73017_diff = (_72517_n - (*(_self_))._field_args.len());;
	jule::Str _73117_log = jule::Str();;
	{
		
		if ((_73017_diff == 0LL)) {
			_case_begin_1b37c5cb6:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72517_n > 0LL) && (*(_72431_params))[(_72517_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1b37c5bd9:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_73017_diff < 0LL) || (_73017_diff > (*(_72431_params)).len()))) {
			_case_begin_1b37c58dc:;
			{
				_73117_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1b37c5876:;
			{
				_73117_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1b37c5821:;
	};
	_1aa364275_StrBuilder _74217_err = static__1aa364594_New(32LL);;
	_1aa36d03c_WriteStr(&_74217_err, (*(_self_))._field_f.get()._field_Decl.get()._field_Ident);
	_1aa36d03c_WriteStr(&_74217_err, jule::Str("\n       wanted (", 16));
	{
		auto expr = _72431_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37c7b75:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1b050a856_ParamIns> *_74516_p = it;
			{
				_1aa36d03c_WriteStr(&_74217_err, _1b0647b6e_Str((*(_74516_p)).get()._field_Kind.ptr()));
				if ((((*(_72431_params)).len() - _74513_i) > 1LL)) {
					_1aa36d03c_WriteStr(&_74217_err, jule::Str(", ", 2));
				};
			}
			_iter_next_1b37c7b75:;
			++it;
			_74513_i++;
			goto _iter_begin_1b37c7b75;
		}
		_iter_end_1b37c7b75:;
	};
	_1aa36d2e5_WriteByte(&_74217_err, ')');
	_1b060361e_pushErr(_self_, _73117_log, jule::Slice<jule::Any>::make({jule::Any(_74217_err, &__jule_any_type81)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1b0604169_checkArg(_1b0602c17_fnCallArgChecker* _self_, jule::Ptr<_1b050a856_ParamIns>* _75632_p, jule::Ptr<_1b0612672_Data>* _75651_arg, jule::Ptr<_1aa49b1d1_Token>* _75668_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1b050dace_parameterUsesGenerics(_75632_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=((!((*(_75632_p)).get()._field_Decl.get()._field_Variadic)) && _1b060b55b_isGoodValueToInfer(_75651_arg));
		if (__jule_func_result) {
			_1b05ecdaa_dynamicTypeAnnotation _76125_dta = _1b05ecdaa_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75632_p)), ._field_a=(*(_75651_arg)), ._field_errorToken=(*(_75668_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1b0602365_annotate(&_76125_dta);
		};
		if ((!(__jule_func_result))) {
			_1b06032ab_pushErrToken(_self_, (*(_75668_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1b059a143_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75632_p)).get()._field_Decl.get()._field_Mutable, (*(_75632_p)).get()._field_Decl.get()._field_Reference, &((*(_75632_p)).get()._field_Kind), _75651_arg, _75668_errorToken)) {
		_1b0596b34_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75632_p)).get()._field_Decl.get()._field_Reference, &((*(_75632_p)).get()._field_Kind), _75651_arg, (*(_75668_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b0604565_push(_1b0602c17_fnCallArgChecker* _self_, jule::Ptr<_1b050a856_ParamIns>* _78528_p, jule::Ptr<_1b04c5ed6_Expr> _78546_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b06477a6_TypeKind> _78617_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78713_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78528_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78528_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78528_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1b0612672_Data> _79517_d = _1b0637598_evalExpr((*(_self_))._field_e, _78546_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78617_old;
	(*(_self_))._field_e.get()._field_immutable=_78713_oldImmut;
	if ((_79517_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b0604169_checkArg(_self_, _78528_p, &(_79517_d), &(_78546_arg.get()._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_79517_d.get()._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1b0604961_pushVariadic(_1b0602c17_fnCallArgChecker* _self_, jule::Ptr<_1b050a856_ParamIns>* _80936_p, jule::I64 _80954_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _81117_variadiced = false;;
	jule::Bool _81213_more = ((_80954_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1b04ec3d6_SliceExprModel> _81317_model = jule::new_ptr<_1b04ec3d6_SliceExprModel>(_1b04ec3d6_SliceExprModel{._field_ElemKind=(*(_80936_p)).get()._field_Kind, });;
	jule::Ptr<_1b06477a6_TypeKind> _81717_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _82213_variadic = (*(_80936_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80936_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80936_p)).get()._field_Kind.get()._field_Variadic=_82213_variadic;
	});;
	for (; (_80954_i < (*(_self_))._field_args.len()); (_80954_i)++) {
		{
			jule::Ptr<_1b04c5ed6_Expr> _82921_arg = (*(_self_))._field_args[_80954_i];;
			{
				auto &_match_expr{ _82921_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type82) {
					_case_begin_1b37d6b0c:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654b26_Slc>(_1b0654b26_Slc{._field_Elem=(*(_80936_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1b37d6d60:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80936_p)).get()._field_Kind;
					}
				}
				_match_end_1b37d6d0a:;
			};
			jule::Ptr<_1b0612672_Data> _84221_d = _1b0636e16_eval((*(_self_))._field_e, _82921_arg);;
			if ((_84221_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b37d5a0c;
			};
			if (_84221_d.get()._field_Kind.get()._field_Variadic) {
				_81117_variadiced=true;
				(*(_80936_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1b0604169_checkArg(_self_, _80936_p, &(_84221_d), &(_82921_arg.get()._field_Token)));
				{
					auto &_match_expr{ _84221_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1b37d9e95:;
						{
							_81317_model=_84221_d.get()._field_Model.cast_ptr<_1b04ec3d6_SliceExprModel>(&__jule_any_type83);
							_81317_model.get()._field_ElemKind=(*(_80936_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1b37d9acc:;
						{
							_81317_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(_84221_d.get()._field_Model); };
						}
					}
					_match_end_1b37d9a77:;
				};
				(_80954_i)++;
				goto _iter_end_1b37d5a0c;
			};
			__jule_func_result=(__jule_func_result && _1b0604169_checkArg(_self_, _80936_p, &(_84221_d), &(_82921_arg.get()._field_Token)));
			{ jule::Slice<jule::Any> &__jule_push_dest = _81317_model.get()._field_Elems; __jule_push_dest.push(_84221_d.get()._field_Model); };
		}
	_iter_next_1b37d5a0c:;
	}
	_iter_end_1b37d5a0c:;;
	(*(_self_))._field_e.get()._field_prefix=_81717_old;
	if ((_81117_variadiced && _81213_more)) {
		_1b06032ab_pushErrToken(_self_, (*(_self_))._field_args[_80954_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81317_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_81317_model, &__jule_any_type83)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b0604ca2_checkArgs(_1b0602c17_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>* _88533_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88613_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _89017_i = 0LL;;
	if ((((*(_88533_params)).len() > 0LL) && _1b0507545_IsSelf((*(_88533_params))[0LL].get()._field_Decl.ptr()))) {
		(_89017_i)++;
	};
	_julec_label_1b37dddbc:;
	while ((_89017_i < (*(_88533_params)).len())) {
		{
			jule::Ptr<_1b050a856_ParamIns> _89721_p = (*(_88533_params))[_89017_i];;
			{
				
				if (_89721_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1b37e073c:;
					{
						__jule_func_result=(_1b0604961_pushVariadic(_self_, &(_89721_p), _89017_i) && __jule_func_result);
						goto _iter_end_1b37de1ca;
					}
				}
				else if (((*(_self_))._field_args.len() <= _89017_i)) {
					_case_begin_1b37e082a:;
					{
						__jule_func_result=false;
						goto _iter_end_1b37de1ca;
					}
				}
				else {
					_case_begin_1b37e0396:;
					{
						__jule_func_result=(_1b0604565_push(_self_, &(_89721_p), (*(_self_))._field_args[_89017_i]) && __jule_func_result);
					}
				}
				_match_end_1b37e0330:;
			};
			(_89017_i)++;
		}
	_iter_next_1b37de1ca:;
	}
	_iter_end_1b37de1ca:;;
	(*(_self_))._field_e.get()._field_arg=_88613_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1b0605038_checkDynamicTypeAnnotation(_1b0602c17_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37e23cb:;
		if (it != expr_end) {
			jule::Ptr<_1b0645dc0_InsGeneric> _91716_g = *it;
			{
				if ((_91716_g == nullptr)) {
					_1b060361e_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b37e23cb:;
			++it;
			goto _iter_begin_1b37e23cb;
		}
		_iter_end_1b37e23cb:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1b06052be_check(_1b0602c17_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1b050a856_ParamIns>> _92717_params = _1b06038a5_getParams(_self_);;
	__jule_func_result=_1b0603bb3_checkCounts(_self_, &(_92717_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1b0604ca2_checkArgs(_self_, &(_92717_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1b0605038_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0602c17_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1b060619e_pushErr(_1b0605b4e_structLitChecker* _self_, jule::Ptr<_1aa49b1d1_Token> _96526_token, jule::Str _96541_fmt, jule::Slice<jule::Any> _96554_args) {
	_1b06148b6_pushErr((*(_self_))._field_e.ptr(), _96526_token, _96541_fmt, _96554_args);
}



inline void _1b0606512_pushSuggestion(_1b0605b4e_structLitChecker* _self_, jule::Str _97033_fmt, jule::Slice<jule::Any> _97046_args) {
	_1b0614c29_pushSuggestion((*(_self_))._field_e.ptr(), _97033_fmt, _97046_args);
}



inline void _1b0606930_pushMatch(_1b0605b4e_structLitChecker* _self_, jule::Ptr<_1b04e4da1_FieldIns>* _97433_f, jule::Ptr<_1b0612672_Data>* _97452_d, jule::Ptr<_1aa49b1d1_Token>* _97467_errorToken) {
	;
	jule::Bool _98013_mutable = ((!((*(_self_))._field_e.get()._field_immutable)) || ((*(_97433_f)).get()._field_Decl.get()._field_Mutable && ((*(_self_))._field_s.get()._field_Methods.len() > 0LL)));;
	if (_1b059a143_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, _98013_mutable, false, &((*(_97433_f)).get()._field_Kind), _97452_d, _97467_errorToken)) {
		_1b0596b34_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_97433_f)).get()._field_Kind), _97452_d, (*(_97467_errorToken)));
	};
	{ jule::Slice<jule::Ptr<_1b04ea934_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1b04ea934_StructArgExprModel>(_1b04ea934_StructArgExprModel{._field_Token=(*(_97467_errorToken)), ._field_Field=(*(_97433_f)), ._field_Expr=(*(_97452_d))})); };
}



inline void _1b0606c93_checkPair(_1b0605b4e_structLitChecker* _self_, jule::Ptr<_1b04ca7d2_FieldExprPair>* _99333_pair, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>* _99360_exprs) {
	jule::Ptr<_1b04e4da1_FieldIns> _99517_f = _1b04e6d09_FindField((*(_self_))._field_s.ptr(), (*(_99333_pair)).get()._field_Field.get()._field_Kind);;
	if ((_99517_f == nullptr)) {
		_1b060619e_pushErr(_self_, (*(_99333_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_99333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _99517_f.get()._field_Decl.get()._field_Public, _99517_f.get()._field_Decl.get()._field_Token)))) {
		_1b060619e_pushErr(_self_, (*(_99333_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_99333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1b0606512_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_1b37ebd53:;
	{
		auto expr = _99360_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b37ec33c:;
		if (it != expr_end) {
			jule::Ptr<_1b04c5ed6_Expr> _100721_expr = *it;
			{
				{
					auto &_match_expr{ _100721_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b37ecc11:;
						{
							jule::Ptr<_1b04ca7d2_FieldExprPair> _101025_dpair = _100721_expr.get()._field_Kind.cast_ptr<_1b04ca7d2_FieldExprPair>(&__jule_any_type84);;
							{
								
								if (((*(_99333_pair)) == _101025_dpair)) {
									_case_begin_1b37eda36:;
									{
										goto _iter_end_1b37ec33c;
									}
								}
								else if (((*(_99333_pair)).get()._field_Field.get()._field_Kind == _101025_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1b37edaad:;
									{
										_1b060619e_pushErr(_self_, (*(_99333_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_99333_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1b37ec33c;
									}
								}
								_match_end_1b37ed97b:;
							};
						}
					}
					_match_end_1b37ecbab:;
				};
			}
			_iter_next_1b37ec33c:;
			++it;
			goto _iter_begin_1b37ec33c;
		}
		_iter_end_1b37ec33c:;
	};
	jule::Ptr<_1b06477a6_TypeKind> _102117_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_102117_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_99517_f.get()._field_Kind;
	jule::Ptr<_1b0612672_Data> _102517_d = _1b0637598_evalExpr((*(_self_))._field_e, (*(_99333_pair)).get()._field_Expr);;
	if ((_102517_d == nullptr)) {
		return;;
	};
	_1b0606930_pushMatch(_self_, &(_99517_f), &(_102517_d), &((*(_99333_pair)).get()._field_Field));
}



inline jule::Bool _1b06070d4_readyExprs(_1b0605b4e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>* _103234_exprs) {
	jule::Bool _103317_ok = true;;
	{
		auto expr = _103234_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3801de1:;
		if (it != expr_end) {
			jule::I64 _103414_i = it - expr->begin();
			jule::Ptr<_1b04c5ed6_Expr> _103421_expr = *it;
			{
				{
					auto &_match_expr{ _103421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1b3802a90:;
						{
							jule::Ptr<_1b04cbddd_KeyValPair> _103725_pair = _103421_expr.get()._field_Kind.cast_ptr<_1b04cbddd_KeyValPair>(&__jule_any_type85);;
							{
								auto &_match_expr{ _103725_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type86) {
									_case_begin_1b3803772:;
									{
										goto _match_end_1b3803a4c;
									}
								}
								else {
									_case_begin_1b3803aa2:;
									{
										_1b060619e_pushErr(_self_, _103725_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_103317_ok=false;
										goto _iter_next_1b3801de1;
									}
								}
								_match_end_1b3803a4c:;
							};
							(*(_103234_exprs))[_103414_i].get()._field_Kind=jule::Any(jule::new_ptr<_1b04ca7d2_FieldExprPair>(_1b04ca7d2_FieldExprPair{._field_Field=_103725_pair.get()._field_Key.get()._field_Token, ._field_Expr=_103725_pair.get()._field_Val}), &__jule_any_type84);
						}
					}
					_match_end_1b3802a3a:;
				};
			}
			_iter_next_1b3801de1:;
			++it;
			_103414_i++;
			goto _iter_begin_1b3801de1;
		}
		_iter_end_1b3801de1:;
	};
	return _103317_ok;;
}



inline void _1b060738c_check(_1b0605b4e_structLitChecker* _self_, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>* _105629_exprs) {
	if (((*(_105629_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1b06070d4_readyExprs(_self_, _105629_exprs)))) {
		return;;
	};
	jule::Bool _106317_paired = false;;
	{
		auto expr = _105629_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3805cc4:;
		if (it != expr_end) {
			jule::I64 _106414_i = it - expr->begin();
			jule::Ptr<_1b04c5ed6_Expr> _106421_expr = *it;
			{
				{
					auto &_match_expr{ _106421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b3808425:;
						{
							jule::Ptr<_1b04ca7d2_FieldExprPair> _106725_pair = _106421_expr.get()._field_Kind.cast_ptr<_1b04ca7d2_FieldExprPair>(&__jule_any_type84);;
							if (((_106414_i > 0LL) && (!(_106317_paired)))) {
								_1b060619e_pushErr(_self_, _106725_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_106317_paired=true;
							_1b0606c93_checkPair(_self_, &(_106725_pair), _105629_exprs);
						}
					}
					else {
						_case_begin_1b38068c9:;
						{
							if (_106317_paired) {
								_1b060619e_pushErr(_self_, _106421_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_106414_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1b060619e_pushErr(_self_, _106421_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1b3805cc4;
							};
							jule::Ptr<_1b04e4da1_FieldIns> _108225_field = (*(_self_))._field_s.get()._field_Fields[_106414_i];;
							if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _108225_field.get()._field_Decl.get()._field_Public, _108225_field.get()._field_Decl.get()._field_Token)))) {
								_1b060619e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1b0606512_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1b06477a6_TypeKind> _109025_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_109025_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_108225_field.get()._field_Kind;
							jule::Ptr<_1b0612672_Data> _109425_d = _1b0637598_evalExpr((*(_self_))._field_e, _106421_expr);;
							if ((_109425_d == nullptr)) {
								goto _iter_next_1b3805cc4;
							};
							_1b0606930_pushMatch(_self_, &(_108225_field), &(_109425_d), &(_106421_expr.get()._field_Token));
						}
					}
					_match_end_1b3806874:;
				};
			}
			_iter_next_1b3805cc4:;
			++it;
			_106414_i++;
			goto _iter_begin_1b3805cc4;
		}
		_iter_end_1b3805cc4:;
	};
	if ((!(_106317_paired))) {
		jule::I64 _110517_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _110621_diff = (_110517_n - (*(_105629_exprs)).len());;
		{
			
			if ((_110621_diff <= 0LL)) {
				_case_begin_1b380d43b:;
				{
					return;;
				}
			}
			_match_end_1b380d31a:;
		};
		_1aa364275_StrBuilder _111221_idents = static__1aa364594_New(32LL);;
		for (; (_110621_diff > 0LL); (_110621_diff)--) {
			{
				_1aa36d03c_WriteStr(&_111221_idents, jule::Str(", ", 2));
				_1aa36d03c_WriteStr(&_111221_idents, (*(_self_))._field_s.get()._field_Fields[(_110517_n - _110621_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1b380dbab:;
		}
		_iter_end_1b380dbab:;;
		_1b060619e_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(static_cast<jule::Str>(_1aa36e2d5_Buf(&_111221_idents).slice(2LL)), &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0605b4e_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b0607e1a_buildVar(_1b0607931_rangeChecker* _self_, jule::Ptr<_1b04d4a1c_VarDecl>* _113228_decl) {
	jule::Ptr<_1b05ae1bd_Var> _113317_v = _1b0514e37_buildVar((*(_113228_decl)));;
	return _113317_v;;
}



inline void _1b0608118_setSizeKey(_1b0607931_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b38128a2:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1b05ad013_IterRelation>(_1b05ad013_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1b381284c:;
	};
}



inline void _1b0608536_checkRangeExprValidity(_1b0607931_rangeChecker* _self_, jule::Ptr<_1b0612672_Data>* _115946_d, jule::Ptr<_1b05ae1bd_Var>* _115957_key, jule::Ptr<_1b06477a6_TypeKind>* _115973_k) {
	jule::Bool _116017__mut = (*(_115957_key)).get()._field_Mutable;;
	if ((_116017__mut && (!(_1b0649148_Mutable((*(_115973_k)).ptr()))))) {
		_116017__mut=false;
	};
	_1b059a143_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _116017__mut, (*(_115957_key)).get()._field_Reference, &((*(_115957_key)).get()._field_Kind.get()._field_Kind), _115946_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1b0608734_checkSlice(_1b0607931_rangeChecker* _self_) {
	_1b0608118_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b0654b26_Slc> _117817_slc = _1b064b205_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_117817_slc.get()._field_Elem});
	_1b0608536_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_117817_slc.get()._field_Elem));
}



inline void _1b0608932_checkArray(_1b0607931_rangeChecker* _self_) {
	_1b0608118_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b0656e47_Arr> _119117_arr = _1b064ae6e_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_119117_arr.get()._field_Elem});
	_1b0608536_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119117_arr.get()._field_Elem));
}



inline void _1b0608b30_checkMapKeyA(_1b0607931_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b06562ba_Map> _120317_m = _1b064bc3e_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_120317_m.get()._field_Key});
	jule::Ptr<_1b0612672_Data> _120717_d = jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d)));;
	_120717_d.get()._field_Kind=_120317_m.get()._field_Key;
	_1b0608536_checkRangeExprValidity(_self_, &(_120717_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_120317_m.get()._field_Key));
}



inline void _1b0608d2d_checkMapKeyB(_1b0607931_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1b06562ba_Map> _121817_m = _1b064bc3e_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_121817_m.get()._field_Val});
	jule::Ptr<_1b0612672_Data> _122217_d = jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d)));;
	_122217_d.get()._field_Kind=_121817_m.get()._field_Val;
	_1b0608536_checkRangeExprValidity(_self_, &(_122217_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_121817_m.get()._field_Val));
}



inline void _1b060902b_checkMap(_1b0607931_rangeChecker* _self_) {
	_1b0608b30_checkMapKeyA(_self_);
	_1b0608d2d_checkMapKeyB(_self_);
}



inline void _1b0609229_checkStr(_1b0607931_rangeChecker* _self_) {
	_1b0608118_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _1b0609427_checkComptime(_1b0607931_rangeChecker* _self_) {
	_1b0608118_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _1aa49db40_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1b0607e1a_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1b06096ad_checkComptimeRange(_1b0607931_rangeChecker* _self_) {
	jule::Ptr<_1b0522e45_comptimeRange> _125717_range = _1b064d548_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _125717_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1b3c50b47:;
			{
				_1b0609427_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b3c50790:;
			{
				_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b3c5051a:;
	};
}



inline jule::Bool _1b0609944_check(_1b0607931_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b3c53287:;
		}
		else if ((_1b064b205_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3c524b7:;
			{
				_1b0608734_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1b064ae6e_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3c5252d:;
			{
				_1b0608932_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1b064bc3e_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3c52594:;
			{
				_1b060902b_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1b064d548_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3c5260a:;
			{
				return _1b06096ad_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b3c51c58:;
			{
				jule::Ptr<_1b0650627_Prim> _128917_prim = _1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_128917_prim != nullptr) && _1b0653aae_IsStr(_128917_prim.ptr()))) {
					_1b0609229_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b3c51b26:;
	};
	_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0607931_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1b060a5b0_prepareTypes(_1b060a192_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1b050ca01_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1b060a868_prepareExprs(_1b060a192_retTypeChecker* _self_, jule::Ptr<_1b04c5ed6_Expr>* _131736_e) {
	if (((*(_131736_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_131736_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b3c57ae9:;
			{
				(*(_self_))._field_exprs=(*(_131736_e)).get()._field_Kind.cast_ptr<_1b04c6ba7_TupleExpr>(&__jule_any_type87).get()._field_Expr;
			}
		}
		else {
			_case_begin_1b3c57c5e:;
			{
				{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_131736_e))); };
			}
		}
		_match_end_1b3c57c09:;
	};
}



inline void _1b060aa66_checkExprs(_1b060a192_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b0612672_Data>> _133317_datas = jule::Slice<jule::Ptr<_1b0612672_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1b0614366_Eval> _133417_eval = _1b05965c3_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1b0667584_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c58578:;
		if (it != expr_end) {
			jule::I64 _133514_i = it - expr->begin();
			jule::Ptr<_1b04c5ed6_Expr> _133521_expr = *it;
			{
				if ((_133514_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b3c58578;
				};
				jule::Ptr<_1b06477a6_TypeKind> _134021_t = (*(_self_))._field_types[_133514_i];;
				_133417_eval.get()._field_prefix=_134021_t;
				jule::Ptr<_1b0612672_Data> _134321_d = _1b0637598_evalExpr(_133417_eval, _133521_expr);;
				if ((_134321_d == nullptr)) {
					goto _iter_next_1b3c58578;
				};
				{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = _133317_datas; __jule_push_dest.push(_134321_d); };
				if (((!(_134321_d.get()._field_Mutable)) && _1b0649148_Mutable(_134321_d.get()._field_Kind.ptr()))) {
					_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1b05eb23d_assignTypeChecker _135521_ac = _1b05eb23d_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_134021_t, ._field_d=_134321_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1b05ec4a3_check(&_135521_ac);
			}
			_iter_next_1b3c58578:;
			++it;
			_133514_i++;
			goto _iter_begin_1b3c58578;
		}
		_iter_end_1b3c58578:;
	};
	if ((_133317_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1b05010aa_TupleExprModel>(_1b05010aa_TupleExprModel{._field_Datas=_133317_datas}), &__jule_any_type88);
	} else if ((_133317_datas.len() == 1LL)) {
		(*(_self_))._field_model=_133317_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1b060ada7_check(_1b060a192_retTypeChecker* _self_, jule::Ptr<_1b04c5ed6_Expr>* _137429_e) {
	_1b060a5b0_prepareTypes(_self_);
	_1b060a868_prepareExprs(_self_, _137429_e);
	jule::I64 _137813_n = (*(_self_))._field_exprs.len();;
	if (((_137813_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1b0509b41_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_137813_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1b0508d71_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_137813_n > (*(_self_))._field_types.len())) {
		_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_137813_n < (*(_self_))._field_types.len())) {
		_1b058e126_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1b060aa66_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b060a192_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b060c936_SelectPackage(_1b060c44c_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c653dc:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1b3c653dc:;
			++it;
			goto _iter_begin_1b3c653dc;
		}
		_iter_end_1b3c653dc:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b060cd32_FindVar(_1b060c44c_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1b060eb14_findVar(_self_, &(_4126_ident), _4138_binded, false);;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b060d22d_FindTypeAlias(_1b060c44c_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1b06100ba_findTypeAlias(_self_, &(_4732_ident), _4744_binded, false);;
}



inline jule::Ptr<_1b04e2871_Struct> _1b060d629_FindStruct(_1b060c44c_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c67b2b:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1b3c67b2b:;
			++it;
			goto _iter_begin_1b3c67b2b;
		}
		_iter_end_1b3c67b2b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05088ed_Fn> _1b060da25_FindFn(_1b060c44c_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c68ec3:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1b3c68ec3:;
			++it;
			goto _iter_begin_1b3c68ec3;
		}
		_iter_end_1b3c68ec3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b051bb97_Trait> _1b060dd66_FindTrait(_1b060c44c_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c68dd5:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1b3c68dd5:;
			++it;
			goto _iter_begin_1b3c68dd5;
		}
		_iter_end_1b3c68dd5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b051e392_Enum> _1b060e1a7_FindEnum(_1b060c44c_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c6aec5:;
		if (it != expr_end) {
			jule::Ptr<_1b051e392_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1b3c6aec5:;
			++it;
			goto _iter_begin_1b3c6aec5;
		}
		_iter_end_1b3c6aec5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b060e4e8_FindTypeEnum(_1b060c44c_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c6bdb6:;
		if (it != expr_end) {
			jule::Ptr<_1b0520a9c_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1b3c6bdb6:;
			++it;
			goto _iter_begin_1b3c6bdb6;
		}
		_iter_end_1b3c6bdb6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b060eb14_findVar(_1b060c44c_SymbolTable* _self_, jule::Str* _10827_ident, jule::Bool _10839_binded, jule::Bool _10853_reverse) {
	if (_10853_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1b05ae1bd_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == (*(_10827_ident))) && (_11225_v.get()._field_Binded == _10839_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1b3c6d802:;
		}
		_iter_end_1b3c6d802:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3c6dc75:;
			if (it != expr_end) {
				jule::Ptr<_1b05ae1bd_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == (*(_10827_ident))) && (_11825_v.get()._field_Binded == _10839_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1b3c6dc75:;
				++it;
				goto _iter_begin_1b3c6dc75;
			}
			_iter_end_1b3c6dc75:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b06100ba_findTypeAlias(_1b060c44c_SymbolTable* _self_, jule::Str* _12733_ident, jule::Bool _12745_binded, jule::Bool _12759_reverse) {
	if (_12759_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1b06469b4_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == (*(_12733_ident))) && (_13125_ta.get()._field_Binded == _12745_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1b3c7177d:;
		}
		_iter_end_1b3c7177d:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3c71c01:;
			if (it != expr_end) {
				jule::Ptr<_1b06469b4_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == (*(_12733_ident))) && (_13725_ta.get()._field_Binded == _12745_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1b3c71c01:;
				++it;
				goto _iter_begin_1b3c71c01;
			}
			_iter_end_1b3c71c01:;
		};
	};
	return nullptr;;
}



inline jule::Any _1b06104b6_defByIdent(_1b060c44c_SymbolTable* _self_, jule::Str* _14830_ident, jule::Bool _14842_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c7351b:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == (*(_14830_ident))) && (_14921_v.get()._field_Binded == _14842_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b3c7351b:;
			++it;
			goto _iter_begin_1b3c7351b;
		}
		_iter_end_1b3c7351b:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c74b05:;
		if (it != expr_end) {
			jule::Ptr<_1b06469b4_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == (*(_14830_ident))) && (_15521_ta.get()._field_Binded == _14842_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1b3c74b05:;
			++it;
			goto _iter_begin_1b3c74b05;
		}
		_iter_end_1b3c74b05:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c745e9:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == (*(_14830_ident))) && (_16121_s.get()._field_Binded == _14842_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1b3c745e9:;
			++it;
			goto _iter_begin_1b3c745e9;
		}
		_iter_end_1b3c745e9:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c764b9:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == (*(_14830_ident))) && (_16721_f.get()._field_Binded == _14842_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1b3c764b9:;
			++it;
			goto _iter_begin_1b3c764b9;
		}
		_iter_end_1b3c764b9:;
	};
	if (_14842_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c76a6e:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b3c76a6e:;
			++it;
			goto _iter_begin_1b3c76a6e;
		}
		_iter_end_1b3c76a6e:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c76992:;
		if (it != expr_end) {
			jule::Ptr<_1b051e392_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1b3c76992:;
			++it;
			goto _iter_begin_1b3c76992;
		}
		_iter_end_1b3c76992:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c78c08:;
		if (it != expr_end) {
			jule::Ptr<_1b0520a9c_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == (*(_14830_ident)))) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1b3c78c08:;
			++it;
			goto _iter_begin_1b3c78c08;
		}
		_iter_end_1b3c78c08:;
	};
	return nullptr;;
}



inline jule::Bool _1b061096c_isDuplicatedIdent(_1b060c44c_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str* _20150_ident, jule::Bool _20162_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c79a61:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == (*(_20150_ident)))) && ((*(_20216_v)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b3c79a61:;
			++it;
			goto _iter_begin_1b3c79a61;
		}
		_iter_end_1b3c79a61:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c7a787:;
		if (it != expr_end) {
			jule::Ptr<_1b06469b4_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == (*(_20150_ident)))) && ((*(_20816_ta)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b3c7a787:;
			++it;
			goto _iter_begin_1b3c7a787;
		}
		_iter_end_1b3c7a787:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c7b6ab:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == (*(_20150_ident)))) && ((*(_21416_s)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b3c7b6ab:;
			++it;
			goto _iter_begin_1b3c7b6ab;
		}
		_iter_end_1b3c7b6ab:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c7b315:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == (*(_20150_ident)))) && ((*(_22016_f)).get()._field_Binded == _20162_binded))) {
					return true;;
				};
			}
			_iter_next_1b3c7b315:;
			++it;
			goto _iter_begin_1b3c7b315;
		}
		_iter_end_1b3c7b315:;
	};
	if (_20162_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c7ce60:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b3c7ce60:;
			++it;
			goto _iter_begin_1b3c7ce60;
		}
		_iter_end_1b3c7ce60:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c7cd83:;
		if (it != expr_end) {
			jule::Ptr<_1b051e392_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b3c7cd83:;
			++it;
			goto _iter_begin_1b3c7cd83;
		}
		_iter_end_1b3c7cd83:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c80171:;
		if (it != expr_end) {
			jule::Ptr<_1b0520a9c_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == (*(_20150_ident))))) {
					return true;;
				};
			}
			_iter_next_1b3c80171:;
			++it;
			goto _iter_begin_1b3c80171;
		}
		_iter_end_1b3c80171:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b060c44c_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b0612a29_IsNil(_1b0612672_Data* _self_) {
	return _1b0648895_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b0612cb0_IsVoid(_1b0612672_Data* _self_) {
	return _1b0648b2b_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1b0613046_IsConst(_1b0612672_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1b0613387_GoodOperand(_1b0612672_Data* _self_, jule::Ptr<_1b0612672_Data>* _10231_other) {
	if ((_1b064abd8_TypeEnum((*(_10231_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1b064a19e_Prim((*(_10231_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1b0653d45_IsAny(_1b064a19e_Prim((*(_10231_other)).get()._field_Kind.ptr()).ptr())))) && (_1b064b9a8_Trait((*(_10231_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1b0648895_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0612672_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b06137b6_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1b06148b6_pushErr(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _13326_token, jule::Str _13341_fmt, jule::Slice<jule::Any> _13354_args) {
	_1b058e126_pushErr((*(_self_))._field_s.ptr(), _13326_token, _13341_fmt, _13354_args);
}



inline void _1b0614c29_pushSuggestion(_1b0614366_Eval* _self_, jule::Str _13833_fmt, jule::Slice<jule::Any> _13846_args) {
	_1b058e489_pushSuggestion((*(_self_))._field_s.ptr(), _13833_fmt, _13846_args);
}



inline void _1b0614e27_allowBuiltin(_1b0614366_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b0615125_disallowBuiltin(_1b0614366_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1b06153ab_isUnsafe(_1b0614366_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1b0615642_isGlobal(_1b0614366_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b3878660:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b3878a28:;
			{
				return false;;
			}
		}
		_match_end_1b38789c3:;
	};
}



inline jule::Bool _1b0615950_applyNumericPrefix(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _16542_d) {
	if ((((((*(_16542_d)) == nullptr) || (!(_1b0613046_IsConst((*(_16542_d)).ptr())))) || (_1b064a19e_Prim((*(_16542_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1b0650627_Prim> _17213_prim = _1b064a19e_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17213_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1ad37c4ee_IsFloat(_1b0650968_Str(_17213_prim.ptr()))) {
			_case_begin_1b387aed1:;
			{
				(*(_16542_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>((*((*(_self_))._field_prefix)));
				_1ad3818ee_SetF64((*(_16542_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ad380a74_AsF64((*(_16542_d)).get()._field_Constant.ptr())));
				(*(_16542_d)).get()._field_Constant.get()._field_Kind=_17213_prim.get()._field_Kind;
			}
		}
		else if (_1ad37bad6_IsSigInt(_1b0650968_Str(_17213_prim.ptr()))) {
			_case_begin_1b387b047:;
			{
				if ((!(_1b05e8768_sigAssignable(_1b0650968_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*(_16542_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>((*((*(_self_))._field_prefix)));
				_1ad380d2c_SetI64((*(_16542_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64((*(_16542_d)).get()._field_Constant.ptr())));
				(*(_16542_d)).get()._field_Constant.get()._field_Kind=_17213_prim.get()._field_Kind;
			}
		}
		else if (_1ad37bde4_IsUnsigInt(_1b0650968_Str(_17213_prim.ptr()))) {
			_case_begin_1b387b0ad:;
			{
				if ((!(_1b05e8b31_unsigAssignable(_1b0650968_Str(_17213_prim.ptr()), _16542_d)))) {
					return false;;
				};
				(*(_16542_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>((*((*(_self_))._field_prefix)));
				_1ad3810d5_SetU64((*(_16542_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64((*(_16542_d)).get()._field_Constant.ptr())));
				(*(_16542_d)).get()._field_Constant.get()._field_Kind=_17213_prim.get()._field_Kind;
			}
		}
		_match_end_1b387ac17:;
	};
	return true;;
}



inline jule::Ptr<_1b0612672_Data> _1b0615c91_litStr(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7081_LitExpr>* _20022_l) {
	jule::Str _20117_s = (*(_20022_l)).get()._field_Value.slice(1LL, ((*(_20022_l)).get()._field_Value.len() - 1LL));;
	if (_1aa49c600_IsRawStr((*(_20022_l)).get()._field_Value)) {
		_20117_s=_1b05e69ec_ToRawStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	} else {
		_20117_s=_1b05e6d3d_ToStr(static_cast<jule::Slice<jule::U8>>(_20117_s));
	};
	jule::Ptr<_1ad37cdb2_Const> _20717_constant = static__1ad37db4e_NewStr(_20117_s);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_20717_constant, &__jule_any_type19), ._field_Constant=_20717_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b06160d2_litRune(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7081_LitExpr>* _21723_l) {
	jule::Str _21913_lt = (*(_21723_l)).get()._field_Value.slice(1LL, ((*(_21723_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _22013_r = _1b05e6843_ToRune(static_cast<jule::Slice<jule::U8>>(_21913_lt));;
	jule::Ptr<_1b0612672_Data> _22117_data = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_22013_r)))});;
	jule::Bool _22513_isAscii = _1b05cdeac_IsAscii(_22013_r);;
	if (_22513_isAscii) {
		_22117_data.get()._field_Kind=_1b0730aae_primU8;
	} else {
		_22117_data.get()._field_Kind=_1b073052b_primI32;
	};
	_22117_data.get()._field_Mutable=true;
	_22117_data.get()._field_Model=jule::Any(jule::new_ptr<_1b0504ee3_RuneExprModel>(_1b0504ee3_RuneExprModel{._field_Code=_22013_r}), &__jule_any_type89);
	_22117_data.get()._field_IsRune=true;
	_22117_data.get()._field_untyped=true;
	return _22117_data;;
}



inline jule::Ptr<_1b0612672_Data> _1b0616423_litFloat(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7081_LitExpr>* _23924_l) {
	jule::F64 _24013_f = ({
		auto except = _1ad362968_ParseFloat((*(_23924_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1ad37cdb2_Const> _24117_constant = static__1ad37de18_NewF64(_24013_f);;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_untyped=true, ._field_Kind=_1b0731b48_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_24117_constant, &__jule_any_type19), ._field_Constant=_24117_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b0616764_litInt(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7081_LitExpr>* _25126_l) {
	;
	jule::Str _25417_lit = (*(_25126_l)).get()._field_Value;;
	jule::I64 _25517_base = 0LL;;
	{
		
		if (_1aa34e42a_HasPrefix(_25417_lit, jule::Str("0x", 2))) {
			_case_begin_1b3888c25:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=16LLU;
			}
		}
		else if (_1aa34e42a_HasPrefix(_25417_lit, jule::Str("0b", 2))) {
			_case_begin_1b3888d13:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=2LLU;
			}
		}
		else if (_1aa34e42a_HasPrefix(_25417_lit, jule::Str("0o", 2))) {
			_case_begin_1b3888917:;
			{
				(_25417_lit).mut_slice(2LL);;
				_25517_base=8LLU;
			}
		}
		else if (((_25417_lit[0LL] == '0') && (_25417_lit.len() > 1LL))) {
			_case_begin_1b388897d:;
			{
				(_25417_lit).mut_slice(1LL);;
				_25517_base=8LLU;
			}
		}
		else {
			_case_begin_1b38888a1:;
			{
				_25517_base=10LLU;
			}
		}
		_match_end_1b388884b:;
	};
	jule::Ptr<_1b0612672_Data> _27517_d = jule::new_ptr<_1b0612672_Data>();;
	jule::Bool _27717_ok = true;;
	jule::I64 _27813_sig = ({
		auto except = _1ad35b016_ParseInt(_25417_lit, _25517_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_27717_ok=false;

			0LL;
		});
	});;
	if (_27717_ok) {
		_27517_d.get()._field_Constant=static__1ad37d302_NewI64(_27813_sig);
		_27517_d.get()._field_Kind=_1b072ebce_primInt;
	} else {
		jule::U64 _28617_unsig = ({
			auto except = _1ad35aa60_ParseUint(_25417_lit, _25517_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1b06148b6_pushErr(_self_, (*(_25126_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1b0614c29_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_27517_d.get()._field_Constant=static__1ad37d5bb_NewU64(_28617_unsig);
		_27517_d.get()._field_Kind=_1b072e805_primUint;
	};
	_27517_d.get()._field_Model=jule::Any(_27517_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1b0615950_applyNumericPrefix(_self_, &(_27517_d))))) {
		_1b06415a2_fitBitsize(&(_27517_d));
	};
	_27517_d.get()._field_Mutable=true;
	_27517_d.get()._field_untyped=true;
	return _27517_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0616aa5_litNum(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7081_LitExpr>* _30726_l) {
	{
		
		if (_1aa49d2e3_IsFloat((*(_30726_l)).get()._field_Value)) {
			_case_begin_1b3890c0a:;
			{
				return _1b0616423_litFloat(_self_, _30726_l);;
			}
		}
		else {
			_case_begin_1b3890556:;
			{
				return _1b0616764_litInt(_self_, _30726_l);;
			}
		}
		_match_end_1b38904ac:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0616de6_evalLit(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7081_LitExpr> _31626_lit) {
	{
		
		if (_1aa49c336_IsStr(_31626_lit.get()._field_Value)) {
			_case_begin_1b3891689:;
			{
				return _1b0615c91_litStr(_self_, &(_31626_lit));;
			}
		}
		else if (_1aa49c8b9_IsRune(_31626_lit.get()._field_Value)) {
			_case_begin_1b3891711:;
			{
				return _1b06160d2_litRune(_self_, &(_31626_lit));;
			}
		}
		else if (_1aa49d5ac_IsNum(_31626_lit.get()._field_Value)) {
			_case_begin_1b3891788:;
			{
				return _1b0616aa5_litNum(_self_, &(_31626_lit));;
			}
		}
		else {
			_case_begin_1b3891348:;
			{
				return nullptr;;
			}
		}
		_match_end_1b389129e:;
	};
}



inline jule::Any _1b0617237_findBuiltins(_1b0614366_Eval* _self_, jule::Str* _32932_ident) {
	if (_1b05885d7_IsPub(_32932_ident)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 1)) {
				_case_begin_1b389368b:;
				{
					jule::Any _33325_def = _1b0641371_findBuiltinsImport(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1b056a487_ImportInfo>(1));;
					if ((_33325_def != nullptr)) {
						return _33325_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 3)) {
				_case_begin_1b3893702:;
				{
					jule::Any _33825_def = _1b06420ca_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1b058b4db_Sema>(3));;
					if ((_33825_def != nullptr)) {
						return _33825_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, 0)) {
				_case_begin_1b3893768:;
				{
					jule::Any _34325_def = _1b06420ca_findBuiltinsSema(_32932_ident, (*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0).get()._field_s);;
					if ((_34325_def != nullptr)) {
						return _34325_def;;
					};
				}
			}
			_match_end_1b3893636:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1b07323b8_findBuiltinDef(_32932_ident);;
}



inline jule::Any _1b0617633_getDef(_1b0614366_Eval* _self_, jule::Str* _35626_ident, jule::Bool _35638_binded) {
	jule::Ptr<_1b05ae1bd_Var> _36117_v = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0665c69_FindVar((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36117_v != nullptr)) {
		return jule::Any(_36117_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b06469b4_TypeAlias> _36617_ta = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0666165_FindTypeAlias((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_36617_ta != nullptr)) {
		return jule::Any(_36617_ta, &__jule_any_type67);;
	};
	if ((!(_35638_binded))) {
		jule::Ptr<_1b051e392_Enum> _37221_enm = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b06670de_FindEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37221_enm != nullptr)) {
			return jule::Any(_37221_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1b0520a9c_TypeEnum> _37721_tenm = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0667430_FindTypeEnum((*(_self_))._field_lookup, (*(_35626_ident)));;
		if ((_37721_tenm != nullptr)) {
			return jule::Any(_37721_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1b05088ed_Fn> _38317_f = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b066695c_FindFn((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38317_f != nullptr)) {
		return jule::Any(_38317_f, &__jule_any_type65);;
	};
	jule::Ptr<_1b04e2871_Struct> _38817_s = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0666561_FindStruct((*(_self_))._field_lookup, (*(_35626_ident)), _35638_binded);;
	if ((_38817_s != nullptr)) {
		return jule::Any(_38817_s, &__jule_any_type66);;
	};
	return _1b0617237_findBuiltins(_self_, _35626_ident);;
}



inline void _1b38a93c7_pushReference(_1b0614366_Eval* _self_, jule::Ptr<_1b050b802_FnIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b38aadbd:;
			{
				jule::Ptr<_1b055134c_scopeChecker> _39921_sc = _1b05546c4_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0));;
				if ((!(_1b38abcd1_Exist(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1b0510790_Push(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1b38aa84b:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b38abcd1_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1b0510790_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1b38aa7e6:;
	};
}

inline void _1b38be178_pushReference(_1b0614366_Eval* _self_, jule::Ptr<_1b05ae1bd_Var>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b38c0b2a:;
			{
				jule::Ptr<_1b055134c_scopeChecker> _39921_sc = _1b05546c4_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0));;
				if ((!(_1b38c1a3d_Exist(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1b0510790_Push(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1b38c05a8:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b38c1a3d_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1b0510790_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1b38c0553:;
	};
}

inline void _1b3959d29_pushReference(_1b0614366_Eval* _self_, jule::Ptr<_1b04e5951_StructIns>* _39640_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b395b7dc:;
			{
				jule::Ptr<_1b055134c_scopeChecker> _39921_sc = _1b05546c4_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0));;
				if ((!(_1b395c700_Exist(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_39640_ref)))))) {
					_1b0510790_Push(_39921_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1b395b26a:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b395c700_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_39640_ref))))))) {
					_1b0510790_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_39640_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1b395b215:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0617c2c__evalEnum(_1b0614366_Eval* _self_, jule::Ptr<_1b051e392_Enum> _41328_enm) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_41328_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b0612672_Data> _1b0618128_evalEnum(_1b0614366_Eval* _self_, jule::Ptr<_1b051e392_Enum> _42231_enm, jule::Ptr<_1aa49b1d1_Token> _42243_errorToken) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _42231_enm.get()._field_Public, _42231_enm.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _42243_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_42231_enm.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b0617c2c__evalEnum(_self_, _42231_enm);;
}



inline jule::Ptr<_1b0612672_Data> _1b0618469__evalTypeEnum(_1b0614366_Eval* _self_, jule::Ptr<_1b0520a9c_TypeEnum> _43132_enm) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_43132_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1b0612672_Data> _1b0618865_evalTypeEnum(_1b0614366_Eval* _self_, jule::Ptr<_1b0520a9c_TypeEnum> _44035_enm, jule::Ptr<_1aa49b1d1_Token> _44051_errorToken) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _44035_enm.get()._field_Public, _44035_enm.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _44051_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44035_enm.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b0618469__evalTypeEnum(_self_, _44035_enm);;
}



inline jule::Ptr<_1b0612672_Data> _1b0618ba6__evalStruct(_1b0614366_Eval* _self_, jule::Ptr<_1b04e5951_StructIns> _44930_s) {
	jule::Ptr<_1b0612672_Data> _45017_d = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_44930_s, 0)}), ._field_Model=jule::Any(_44930_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_44930_s.get()._field_Decl != nullptr) && _44930_s.get()._field_Decl.get()._field_Binded)) {
		_45017_d.get()._field_Kind.get()._field_BindIdent=_44930_s.get()._field_Decl.get()._field_Ident;
	};
	return _45017_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b06190a2_evalStruct(_1b0614366_Eval* _self_, jule::Ptr<_1b04e5951_StructIns> _46333_s, jule::Ptr<_1aa49b1d1_Token> _46348_errorToken) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _46333_s.get()._field_Decl.get()._field_Public, _46333_s.get()._field_Decl.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _46348_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46333_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b0619756_checkDeprecated(_self_, &(_46333_s.get()._field_Decl.get()._field_Directives), _46348_errorToken);
	return _1b0618ba6__evalStruct(_self_, _46333_s);;
}



inline jule::Ptr<_1b0612672_Data> _1b06193e3_evalFnIns(_1b0614366_Eval* _self_, jule::Ptr<_1b050b802_FnIns> _47328_f) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_47328_f, 1)}), ._field_Model=jule::Any(_47328_f, &__jule_any_type7), });;
}



inline void _1b0619756_checkDeprecated(_1b0614366_Eval* _self_, jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _48239_directives, jule::Ptr<_1aa49b1d1_Token> _48270_tok) {
	if (_1b06153ab_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1b04884b5_Directive> _48713_d = _1b0640ea8_findDirective(_48239_directives, jule::Str("deprecated", 10));;
	if ((_48713_d != nullptr)) {
		if ((_48713_d.get()._field_Args.len() == 0LL)) {
			_1b06148b6_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1b06148b6_pushErr(_self_, _48270_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_48713_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1b0614c29_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0619b52_evalFn(_1b0614366_Eval* _self_, jule::Ptr<_1b05088ed_Fn> _49829_f, jule::Ptr<_1aa49b1d1_Token> _49837_errorToken) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _49829_f.get()._field_Public, _49829_f.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _49837_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_49829_f.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b0619756_checkDeprecated(_self_, &(_49829_f.get()._field_Directives), _49837_errorToken);
	jule::Ptr<_1b050b802_FnIns> _50717_ins = _1b050a15d_instance(_49829_f);;
	_1b38a93c7_pushReference(_self_, &(_50717_ins));
	return _1b06193e3_evalFnIns(_self_, _50717_ins);;
}



inline void _1b061a070_pushIllegalCycleError(_1b0614366_Eval* _self_, jule::Ptr<_1b05ae1bd_Var>* _51241_v1, jule::Ptr<_1b05ae1bd_Var>* _51252_v2, _1aa364275_StrBuilder* _51267_message) {
	;
	jule::Str _51413_refers_to = _1aa3c3e83_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_51241_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_51252_v2)).get()._field_Ident, &__jule_any_type5)}));;
	jule::Slice<jule::U8> _51513_buf = _1aa36e2d5_Buf(_51267_message);;
	_1aa36d03c_WriteStr(_51267_message, _1aa34db33_Repeat(jule::Str(" ", 1), 7LL));
	_1aa36d03c_WriteStr(_51267_message, _51413_refers_to);
	_1aa36d2e5_WriteByte(_51267_message, '\n');
	_1aa36cc84_Write(_51267_message, _51513_buf);
}



inline jule::Bool _1b061a46b_checkCrossCycle(_1b0614366_Eval* _self_, jule::Ptr<_1b05ae1bd_Var>* _52235_v, _1aa364275_StrBuilder* _52249_message) {
	{
		auto expr = &((*(_52235_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b38b170e:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> *_52316_d = it;
			{
				if (((*(_52316_d)) == (*(_self_))._field_owner)) {
					_1b061a070_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
				if ((!(_1b061a46b_checkCrossCycle(_self_, _52316_d, _52249_message)))) {
					_1b061a070_pushIllegalCycleError(_self_, _52235_v, _52316_d, _52249_message);
					return false;;
				};
			}
			_iter_next_1b38b170e:;
			++it;
			goto _iter_begin_1b38b170e;
		}
		_iter_end_1b38b170e:;
	};
	return true;;
}



inline jule::Bool _1b061a867_checkIllegalCycles(_1b0614366_Eval* _self_, jule::Ptr<_1b05ae1bd_Var>* _53942_v, jule::Ptr<_1aa49b1d1_Token> _53951_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53942_v)))) {
		_1b06148b6_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1aa364275_StrBuilder _55217_message = static__1aa364594_New(32LL);;
	if ((!(_1b061a46b_checkCrossCycle(_self_, _53942_v, &(_55217_message))))) {
		jule::Str _55521_errMsg = _1aa36d834_Str(&_55217_message);;
		_1aa36da32_Clear(&_55217_message);
		_1b061a070_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53942_v, &(_55217_message));
		_55521_errMsg+=_1aa36d834_Str(&_55217_message);
		_1b06148b6_pushErr(_self_, _53951_declToken, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_55521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_self_))._field_owner.get()._field_Depends; __jule_push_dest.push((*(_53942_v))); };
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b0612672_Data> _1b061ac63_evalVar(_1b0614366_Eval* _self_, jule::Ptr<_1b05ae1bd_Var> _56730_v, jule::Ptr<_1aa49b1d1_Token> _56739_errorToken) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _56730_v.get()._field_Public, _56730_v.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _56739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_56730_v.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b0619756_checkDeprecated(_self_, &(_56730_v.get()._field_Directives), _56739_errorToken);
	if ((_56730_v.get()._field_Token == nullptr)) {
		goto _julec_label_1b38c72d5;
	};
	_56730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b38ba3e9:;
			{
				jule::Bool _58617_ok = _1b061a867_checkIllegalCycles(_self_, &(_56730_v), _56739_errorToken);;
				if ((!(_58617_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b38ba460:;
			{
				if (((!(_56730_v.get()._field_Reference)) || _1b06153ab_isUnsafe(_self_))) {
					goto _match_end_1b38ba394;
				};
				jule::Ptr<_1b055134c_scopeChecker> _59421_s = (*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0);;
				while (((_59421_s.get()._field_owner == nullptr) && (_59421_s.get()._field_parent != nullptr))) {
					{
						_59421_s=_59421_s.get()._field_parent;
					}
				_iter_next_1b38bb7c4:;
				}
				_iter_end_1b38bb7c4:;;
				if ((((_59421_s.get()._field_owner != nullptr) && _59421_s.get()._field_owner.get()._field_Anon) && (_56730_v.get()._field_Scope != _59421_s.get()._field_owner.get()._field_Scope))) {
					_1b06148b6_pushErr(_self_, _56739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_56730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1b38ba394:;
	};
	if ((_56730_v.get()._field_Scope == nullptr)) {
		_1b38be178_pushReference(_self_, &(_56730_v));
	};
	if (((!(_56730_v.get()._field_Binded)) && ((_56730_v.get()._field_Value == nullptr) || (_56730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_56730_v.get()._field_Constant) {
			_1b05a5c20_checkVar((*(_self_))._field_s, &(_56730_v), jule::Trait<_1b0667584_Lookup>((*(_self_))._field_s, 3));
			if (((_56730_v.get()._field_Value == nullptr) || (_56730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_56730_v.get()._field_Kind == nullptr) || (_56730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_56730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1b05a5c20_checkVar((*(_self_))._field_s, &(_56730_v), (*(_self_))._field_lookup);
		if (((_56730_v.get()._field_Kind == nullptr) || (_56730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	_julec_label_1b38c72d5:;
	jule::Ptr<_1b0612672_Data> _63817_d = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_56730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_56730_v.get()._field_Mutable, ._field_Reference=_56730_v.get()._field_Reference, ._field_Lvalue=(!(_56730_v.get()._field_Constant)), ._field_Model=jule::Any(_56730_v, &__jule_any_type8), });;
	if ((((!(_56730_v.get()._field_Binded)) && _1b05ae553_IsInitialized(_56730_v.ptr())) && (_56730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_63817_d.get()._field_IsRune=_56730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_56730_v.get()._field_Constant && (_56730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_63817_d.get()._field_Constant=jule::new_ptr<_1ad37cdb2_Const>((*(_56730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_63817_d.get()._field_Model=jule::Any(_63817_d.get()._field_Constant, &__jule_any_type19);
		if (_1b05aea70_untypedConstant(_56730_v.ptr())) {
			_1b0615950_applyNumericPrefix(_self_, &(_63817_d));
			_63817_d.get()._field_untyped=true;
		};
	};
	return _63817_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b061b15e_evalTypeAlias(_1b0614366_Eval* _self_, jule::Ptr<_1b06469b4_TypeAlias> _66236_ta, jule::Ptr<_1aa49b1d1_Token> _66252_errorToken) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _66236_ta.get()._field_Public, _66236_ta.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _66252_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_66236_ta.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_66236_ta.get()._field_Used=true;
	jule::Trait<_1b0647300_Kind> _67117_kind = _66236_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1b0612672_Data> _67217_d = nullptr;;
	{
		auto &_match_expr{ _67117_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b38d02aa:;
			{
				_67217_d=_1b0618ba6__evalStruct(_self_, _67117_kind.cast_ptr<_1b04e5951_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b38cdb05:;
			{
				_67217_d=_1b0617c2c__evalEnum(_self_, _67117_kind.cast_ptr<_1b051e392_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b38cdb6b:;
			{
				_67217_d=_1b0618469__evalTypeEnum(_self_, _67117_kind.cast_ptr<_1b0520a9c_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1b38cda8e:;
			{
				_67217_d=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=_66236_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_66236_ta.get()._field_Binded) {
					_67217_d.get()._field_Kind.get()._field_BindIdent=_66236_ta.get()._field_Ident;
				} else {
					_67217_d.get()._field_Kind.get()._field_BindIdent=_66236_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_67217_d.get()._field_Model=jule::Any(_67217_d.get()._field_Kind, &__jule_any_type90);
			}
		}
		_match_end_1b38cda39:;
	};
	_67217_d.get()._field_Kind.get()._field_Generic=_66236_ta.get()._field_Generic;
	return _67217_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b061b55a_evalDef(_1b0614366_Eval* _self_, jule::Any* _69831_def, jule::Ptr<_1aa49b1d1_Token> _69841_ident) {
	{
		auto &_match_expr{ (*(_69831_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b38d2c5d:;
			{
				return _1b061ac63_evalVar(_self_, (*(_69831_def)).cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b38d2cc4:;
			{
				return _1b0618128_evalEnum(_self_, (*(_69831_def)).cast_ptr<_1b051e392_Enum>(&__jule_any_type68), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b38d2d3a:;
			{
				return _1b0618865_evalTypeEnum(_self_, (*(_69831_def)).cast_ptr<_1b0520a9c_TypeEnum>(&__jule_any_type69), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b38d2da1:;
			{
				return _1b06190a2_evalStruct(_self_, _1b04e2ce4_instance((*(_69831_def)).cast_ptr<_1b04e2871_Struct>(&__jule_any_type66)), _69841_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b38d2e17:;
			{
				jule::Ptr<_1b05088ed_Fn> _70921_f = (*(_69831_def)).cast_ptr<_1b05088ed_Fn>(&__jule_any_type65);;
				if ((!_70921_f.get()._field_Ident.equal("init", 4))) {
					return _1b0619b52_evalFn(_self_, _70921_f, _69841_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b38d2e7d:;
			{
				return _1b06193e3_evalFnIns(_self_, (*(_69831_def)).cast_ptr<_1b050b802_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b38d2ee4:;
			{
				return _1b061b15e_evalTypeAlias(_self_, (*(_69831_def)).cast_ptr<_1b06469b4_TypeAlias>(&__jule_any_type67), _69841_ident);;
			}
		}
		_match_end_1b38d2c08:;
	};
	_1b06148b6_pushErr(_self_, _69841_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_69841_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b0612672_Data> _1b061b89b_evalIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b04c7911_IdentExpr> _72228_ident) {
	jule::Any _72317_def = _1b0617633_getDef(_self_, &(_72228_ident.get()._field_Ident), _72228_ident.get()._field_Binded);;
	return _1b061b55a_evalDef(_self_, &(_72317_def), _72228_ident.get()._field_Token);;
}



inline jule::Ptr<_1b0612672_Data> _1b061bbdc_evalUnary(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c8093_UnaryExpr> _72733_u) {
	_1b0637a60_unaryEval _72817_unary = static__1b0637ea0_new(_self_);;
	return _1b06393d0_eval(&_72817_unary, _72733_u);;
}



inline jule::Ptr<_1b0612672_Data> _1b061c02d_evalVariadic(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c846c_VariadicExpr> _73236_v) {
	if ((_73236_v.get()._field_Expr == nullptr)) {
		_1b06148b6_pushErr(_self_.ptr(), _73236_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b06477a6_TypeKind> _73817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_73817_prefix;
	});;
	jule::Ptr<_1b0612672_Data> _74217_d = _1b0637598_evalExpr(_self_, _73236_v.get()._field_Expr);;
	if ((_74217_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b0649e18_Variadicable(_74217_d.get()._field_Kind.ptr())))) {
		_1b06148b6_pushErr(_self_.ptr(), _73236_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_74217_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0654b26_Slc> _75217_slc = _1b064b205_Slc(_74217_d.get()._field_Kind.ptr());;
	_74217_d.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_BindIdent=_75217_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_75217_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_75217_slc.get()._field_Elem.get()._field_Kind});
	return _74217_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b061c36e_evalUnsafe(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c745a_UnsafeExpr> _76234_u) {
	jule::Bool _76313_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1b0612672_Data> _76517_d = _1b0637598_evalExpr(_self_, _76234_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_76313_unsafety;
	return _76517_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b061c6b0_evalArr(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cc5d6_SliceExpr> _77031_s) {
	jule::Ptr<_1b0656e47_Arr> _77217_pt = _1b064ae6e_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1b0656e47_Arr> _77417_arr = jule::new_ptr<_1b0656e47_Arr>(_1b0656e47_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_77217_pt.get()._field_Elem});;
	jule::Bool _78017_filled = false;;
	if ((_77031_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _77031_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type82) {
				_case_begin_1b38e18d7:;
				{
					if ((_77031_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1b04c846c_VariadicExpr>(&__jule_any_type82).get()._field_Expr != nullptr)) {
						goto _match_end_1b38e183d;
					};
					if (_77217_pt.get()._field_Auto) {
						_1b06148b6_pushErr(_self_.ptr(), _77031_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_78017_filled=true;
					_77031_s.get()._field_Exprs=_77031_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1b38e183d:;
		};
	};
	_77417_arr.get()._field_N=static_cast<jule::I64>(_77031_s.get()._field_Exprs.len());
	if ((!(_77217_pt.get()._field_Auto))) {
		if ((_77417_arr.get()._field_N > _77217_pt.get()._field_N)) {
			_1b06148b6_pushErr(_self_.ptr(), _77031_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_77417_arr.get()._field_N < _77217_pt.get()._field_N)) {
			_77417_arr.get()._field_N=_77217_pt.get()._field_N;
		};
	};
	jule::Ptr<_1b050042d_ArrayExprModel> _80917_model = jule::new_ptr<_1b050042d_ArrayExprModel>(_1b050042d_ArrayExprModel{._field_Kind=_77417_arr, });;
	if (_78017_filled) {
		_80917_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_80917_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _77031_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1b06477a6_TypeKind> _81817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_77417_arr.get()._field_Elem;
	{
		auto expr = &(_77031_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b38e54ac:;
		if (it != expr_end) {
			jule::Ptr<_1b04c5ed6_Expr> _82021_elem = *it;
			{
				jule::Ptr<_1b0612672_Data> _82121_d = _1b0637598_evalExpr(_self_, _82021_elem);;
				if ((_82121_d == nullptr)) {
					goto _iter_next_1b38e54ac;
				};
				_1b0596b34_checkAssignType(_self_.get()._field_s, false, &(_77417_arr.get()._field_Elem), &(_82121_d), _77031_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _80917_model.get()._field_Elems; __jule_push_dest.push(_82121_d.get()._field_Model); };
			}
			_iter_next_1b38e54ac:;
			++it;
			goto _iter_begin_1b38e54ac;
		}
		_iter_end_1b38e54ac:;
	};
	_self_.get()._field_prefix=_81817_prefix;
	if (_78017_filled) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _80917_model.get()._field_Elems; __jule_push_dest.push(nullptr); };
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_77417_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_80917_model, &__jule_any_type91), });;
}



inline jule::Ptr<_1b0612672_Data> _1b061cb66_evalExpSlc(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cc5d6_SliceExpr> _84434_s, jule::Ptr<_1b06477a6_TypeKind> _84453_t, jule::Any _84471_first) {
	jule::Ptr<_1b0654b26_Slc> _84517_slc = jule::new_ptr<_1b0654b26_Slc>(_1b0654b26_Slc{._field_Elem=_84453_t});;
	jule::I64 _84917_i = 0LL;;
	jule::Ptr<_1b04ec3d6_SliceExprModel> _85017_model = jule::new_ptr<_1b04ec3d6_SliceExprModel>(_1b04ec3d6_SliceExprModel{._field_ElemKind=_84453_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _84434_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_84471_first != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = _85017_model.get()._field_Elems; __jule_push_dest.push(_84471_first); };
		_84917_i=1LL;
	};
	jule::Ptr<_1b06477a6_TypeKind> _85917_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_84517_slc.get()._field_Elem;
	{
		auto expr = _84434_s.get()._field_Exprs.slice(_84917_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b38eb2d7:;
		if (it != expr_end) {
			jule::Ptr<_1b04c5ed6_Expr> _86121_elem = *it;
			{
				jule::Ptr<_1b0612672_Data> _86221_d = _1b0637598_evalExpr(_self_, _86121_elem);;
				if ((_86221_d == nullptr)) {
					goto _iter_next_1b38eb2d7;
				};
				_1b0596b34_checkAssignType(_self_.get()._field_s, false, &(_84517_slc.get()._field_Elem), &(_86221_d), _84434_s.get()._field_Token);
				{ jule::Slice<jule::Any> &__jule_push_dest = _85017_model.get()._field_Elems; __jule_push_dest.push(_86221_d.get()._field_Model); };
			}
			_iter_next_1b38eb2d7:;
			++it;
			goto _iter_begin_1b38eb2d7;
		}
		_iter_end_1b38eb2d7:;
	};
	_self_.get()._field_prefix=_85917_prefix;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_84517_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_85017_model, &__jule_any_type83), });;
}



inline jule::Ptr<_1b0612672_Data> _1b061cea7_evalSliceExpr(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cc5d6_SliceExpr> _88037_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1b064ae6e_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b38eec58:;
				{
					return _1b061c6b0_evalArr(_self_, _88037_s);;
				}
			}
			else if ((_1b064b205_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b38eecd0:;
				{
					jule::Ptr<_1b0654b26_Slc> _88625_pt = _1b064b205_Slc(_self_.get()._field_prefix.ptr());;
					return _1b061cb66_evalExpSlc(_self_, _88037_s, _88625_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1b38eeb48:;
		};
	};
	jule::Ptr<_1b06477a6_TypeKind> _89117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_88037_s.get()._field_Exprs.len() == 0LL)) {
		_1b06148b6_pushErr(_self_.ptr(), _88037_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _89917_firstElem = _1b0637598_evalExpr(_self_, _88037_s.get()._field_Exprs[0LL]);;
	if ((_89917_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _90417_d = _1b061cb66_evalExpSlc(_self_, _88037_s, _89917_firstElem.get()._field_Kind, _89917_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_89117_prefix;
	return _90417_d;;
}



inline void _1b061d31a_checkIntegerIndexingByData(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _91050_d, jule::Ptr<_1aa49b1d1_Token> _91060_token) {
	jule::Str _91113_err_key = _1b0643692_checkDataForIntegerIndexing(_91050_d);;
	{
		auto &_match_expr{ _91113_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b3905159:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b3904664:;
			{
				_1b06148b6_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_91050_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b3904a71:;
			{
				_1b06148b6_pushErr(_self_, _91060_token, _91113_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3904a1b:;
	};
}



inline void _1b061d738_indexingPtr(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _92235_d, jule::Ptr<_1b0612672_Data>* _92250_index, jule::Ptr<_1b04cd076_IndexingExpr>* _92265_i) {
	_1b061d31a_checkIntegerIndexingByData(_self_, _92250_index, (*(_92265_i)).get()._field_Token);
	jule::Ptr<_1b065791a_Ptr> _92517_ptr = _1b064a6bb_Ptr((*(_92235_d)).get()._field_Kind.ptr());;
	{
		
		if (_1b0658454_IsUnsafe(_92517_ptr.ptr())) {
			_case_begin_1b390703a:;
			{
				_1b06148b6_pushErr(_self_, (*(_92265_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1b06153ab_isUnsafe(_self_)))) {
			_case_begin_1b39070b2:;
			{
				_1b06148b6_pushErr(_self_, (*(_92265_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3906dd6:;
	};
	(*(_92235_d)).get()._field_Kind=_92517_ptr.get()._field_Elem;
}



inline void _1b061db56_indexingArr(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _93735_d, jule::Ptr<_1b0612672_Data>* _93750_index, jule::Ptr<_1b04cd076_IndexingExpr>* _93765_i) {
	jule::Ptr<_1b0656e47_Arr> _93817_arr = _1b064ae6e_Arr((*(_93735_d)).get()._field_Kind.ptr());;
	(*(_93735_d)).get()._field_Kind=_93817_arr.get()._field_Elem;
	_1b061d31a_checkIntegerIndexingByData(_self_, _93750_index, (*(_93765_i)).get()._field_Token);
	if ((_1b0613046_IsConst((*(_93750_index)).ptr()) && (_1ad380a74_AsF64((*(_93750_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_93817_arr.get()._field_N)))) {
		_1b06148b6_pushErr(_self_, (*(_93765_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1b061e074_indexingSlc(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _94635_d, jule::Ptr<_1b0612672_Data>* _94650_index, jule::Ptr<_1b04cd076_IndexingExpr>* _94665_i) {
	jule::Ptr<_1b0654b26_Slc> _94717_slc = _1b064b205_Slc((*(_94635_d)).get()._field_Kind.ptr());;
	(*(_94635_d)).get()._field_Kind=_94717_slc.get()._field_Elem;
	_1b061d31a_checkIntegerIndexingByData(_self_, _94650_index, (*(_94665_i)).get()._field_Token);
	if ((!(_1b0613046_IsConst((*(_94650_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_94635_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b390c42a:;
			{
				jule::Ptr<_1b04ec3d6_SliceExprModel> _95721_m = (*(_94635_d)).get()._field_Model.cast_ptr<_1b04ec3d6_SliceExprModel>(&__jule_any_type83);;
				jule::F64 _95817_indx = _1ad380a74_AsF64((*(_94650_index)).get()._field_Constant.ptr());;
				if ((_95817_indx >= static_cast<jule::F64>(_95721_m.get()._field_Elems.len()))) {
					_1b06148b6_pushErr(_self_, (*(_94665_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_94635_d)).get()._field_Model=_95721_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_95817_indx))];
					(*(_94635_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1b390c3c5:;
	};
}



inline void _1b061e492_indexingMap(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _96835_d, jule::Ptr<_1b0612672_Data>* _96850_index, jule::Ptr<_1b04cd076_IndexingExpr>* _96869_i) {
	if (((*(_96850_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1b06562ba_Map> _97217_m = _1b064bc3e_Map((*(_96835_d)).get()._field_Kind.ptr());;
	_1b05eb23d_assignTypeChecker _97317_atc = _1b05eb23d_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_97217_m.get()._field_Key, ._field_d=(*(_96850_index)), ._field_errorToken=(*(_96869_i)).get()._field_Token};;
	_1b05ec4a3_check(&_97317_atc);
	(*(_96835_d)).get()._field_Kind=_97217_m.get()._field_Val;
}



inline void _1b061e8b0_indexingStr(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _98335_d, jule::Ptr<_1b0612672_Data>* _98350_index, jule::Ptr<_1b04cd076_IndexingExpr>* _98365_i) {
	(*(_98335_d)).get()._field_Kind=_1b0730aae_primU8;
	(*(_98335_d)).get()._field_Mutable=false;
	if (((*(_98350_index)) == nullptr)) {
		return;;
	};
	_1b061d31a_checkIntegerIndexingByData(_self_, _98350_index, (*(_98365_i)).get()._field_Token);
	if ((!(_1b0613046_IsConst((*(_98350_index)).ptr())))) {
		(*(_98335_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1b0613046_IsConst((*(_98335_d)).ptr())) {
		jule::Ptr<_1aa49b1d1_Token> _99917_errorToken = (*(_98365_i)).get()._field_Token;;
		jule::I64 _100017_j = _1ad380557_AsI64((*(_98350_index)).get()._field_Constant.ptr());;
		jule::Str _100117_s = _1ad38003a_ReadStr((*(_98335_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_100017_j) >= _100117_s.len())) {
			_1b06148b6_pushErr(_self_, _99917_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1ad3810d5_SetU64((*(_98335_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_100117_s[_100017_j])));
		};
	};
}



inline void _1b061eccd_toIndexing(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _101034_d, jule::Ptr<_1b0612672_Data>* _101049_index, jule::Ptr<_1b04cd076_IndexingExpr>* _101068_i) {
	{
		
		if ((_1b064a6bb_Ptr((*(_101034_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b39160b0:;
			{
				_1b061d738_indexingPtr(_self_, _101034_d, _101049_index, _101068_i);
				return;;
			}
		}
		else if ((_1b064ae6e_Arr((*(_101034_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3916137:;
			{
				_1b061db56_indexingArr(_self_, _101034_d, _101049_index, _101068_i);
				return;;
			}
		}
		else if ((_1b064b205_Slc((*(_101034_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b39161ae:;
			{
				_1b061e074_indexingSlc(_self_, _101034_d, _101049_index, _101068_i);
				return;;
			}
		}
		else if ((_1b064bc3e_Map((*(_101034_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3916236:;
			{
				_1b061e492_indexingMap(_self_, _101034_d, _101049_index, _101068_i);
				return;;
			}
		}
		else if ((_1b064a19e_Prim((*(_101034_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b39162ad:;
			{
				jule::Ptr<_1b0650627_Prim> _102517_prim = _1b064a19e_Prim((*(_101034_d)).get()._field_Kind.ptr());;
				{
					
					if (_1b0653aae_IsStr(_102517_prim.ptr())) {
						_case_begin_1b3919811:;
						{
							_1b061e8b0_indexingStr(_self_, _101034_d, _101049_index, _101068_i);
							return;;
						}
					}
					_match_end_1b3919778:;
				};
			}
		}
		_match_end_1b3915e6c:;
	};
	_1b06148b6_pushErr(_self_, (*(_101068_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_101034_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1b0620284_pushGenericsFromExprSubIdent(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c91c6_SubIdentExpr>* _103553_sexpr, jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>* _103614_generics, jule::Ptr<_1b04c5ed6_Expr>* _103642_expr) {
	jule::Ptr<_1b04c25a9_SubIdentTypeDecl> _103717_t = jule::new_ptr<_1b04c25a9_SubIdentTypeDecl>();;
	if ((!(_1b0644583_pushSubIdentFromExpr(jule::Any((*(_103553_sexpr)), &__jule_any_type92), &(_103717_t))))) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_103642_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_103614_generics)); __jule_push_dest.push(jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Kind=jule::Any(_103717_t, &__jule_any_type93)})); };
	return true;;
}



inline jule::Bool _1b0620680_pushGenericsFromData(jule::Ptr<_1b0614366_Eval> _self_, jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>* _104645_generics, jule::Ptr<_1b04c5ed6_Expr>* _104673_expr) {
	{
		auto &_match_expr{ (*(_104673_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b391c77b:;
			{
				jule::Ptr<_1b04c8093_UnaryExpr> _104921_u = (*(_104673_expr)).get()._field_Kind.cast_ptr<_1b04c8093_UnaryExpr>(&__jule_any_type94);;
				{
					auto &_match_expr{ _104921_u.get()._field_Op.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(62LLU)) {
						_case_begin_1b391e728:;
						{
							jule::Ptr<_1b04c36cb_PtrTypeDecl> _105225_kind = jule::new_ptr<_1b04c36cb_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _105325__generics = jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>::alloc(0LL, 1LL);;
							_1b0620680_pushGenericsFromData(_self_, &(_105325__generics), &(_104921_u.get()._field_Expr));
							_105225_kind.get()._field_Elem=_105325__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_104645_generics)); __jule_push_dest.push(jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=(*(_104673_expr)).get()._field_Token, ._field_Kind=jule::Any(_105225_kind, &__jule_any_type77)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(65LLU)) {
						_case_begin_1b391ecab:;
						{
							jule::Ptr<_1b04c2c4c_SptrTypeDecl> _106125_kind = jule::new_ptr<_1b04c2c4c_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _106225__generics = jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>::alloc(0LL, 1LL);;
							_1b0620680_pushGenericsFromData(_self_, &(_106225__generics), &(_104921_u.get()._field_Expr));
							_106125_kind.get()._field_Elem=_106225__generics[0LL];
							{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_104645_generics)); __jule_push_dest.push(jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=(*(_104673_expr)).get()._field_Token, ._field_Kind=jule::Any(_106125_kind, &__jule_any_type78)})); };
						}
					}
					else {
						_case_begin_1b391e3b5:;
						{
							_1b06148b6_pushErr(_self_.ptr(), _104921_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b391e360:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b391d381:;
			{
				{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_104645_generics)); __jule_push_dest.push((*(_104673_expr)).get()._field_Kind.cast_ptr<_1b04c1ba2_TypeDecl>(&__jule_any_type95)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b391d3e7:;
			{
				jule::Ptr<_1b04c91c6_SubIdentExpr> _107621_sexpr = (*(_104673_expr)).get()._field_Kind.cast_ptr<_1b04c91c6_SubIdentExpr>(&__jule_any_type92);;
				return _1b0620284_pushGenericsFromExprSubIdent(_self_, &(_107621_sexpr), _104645_generics, _104673_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b391d45d:;
			{
				jule::Ptr<_1b04c7911_IdentExpr> _107921_ident = (*(_104673_expr)).get()._field_Kind.cast_ptr<_1b04c7911_IdentExpr>(&__jule_any_type86);;
				{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_104645_generics)); __jule_push_dest.push(jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_107921_ident.get()._field_Token, ._field_Ident=_107921_ident.get()._field_Ident, ._field_Binded=_107921_ident.get()._field_Binded, }), &__jule_any_type20)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b391c9e0:;
			{
				{
					auto expr = &((*(_104673_expr)).get()._field_Kind.cast_ptr<_1b04c6ba7_TupleExpr>(&__jule_any_type87).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3925267:;
					if (it != expr_end) {
						jule::Ptr<_1b04c5ed6_Expr> _108825_texpr = *it;
						{
							if ((!(_1b0620680_pushGenericsFromData(_self_, _104645_generics, &(_108825_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b3925267:;
						++it;
						goto _iter_begin_1b3925267;
					}
					_iter_end_1b3925267:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b391ca56:;
			{
				jule::Ptr<_1b04c8c20_NsSelectionExpr> _109421_ns = (*(_104673_expr)).get()._field_Kind.cast_ptr<_1b04c8c20_NsSelectionExpr>(&__jule_any_type96);;
				jule::Ptr<_1b04c22ac_IdentTypeDecl> _109521_decl = jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_109421_ns.get()._field_Ident, ._field_Ident=_109421_ns.get()._field_Ident.get()._field_Kind, });;
				{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_104645_generics)); __jule_push_dest.push(jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_109521_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b04c2950_NamespaceTypeDecl>(_1b04c2950_NamespaceTypeDecl{._field_Idents=_109421_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_109521_decl.get()._field_Token, ._field_Kind=jule::Any(_109521_decl, &__jule_any_type20)})}), &__jule_any_type97)})); };
			}
		}
		else {
			_case_begin_1b391c979:;
			{
				_1b06148b6_pushErr(_self_.ptr(), (*(_104673_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b391c924:;
	};
	return true;;
}



inline void _1b06209e3_evalIdentDeclFromIndexing(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b0612672_Data>* _111650_d, jule::Ptr<_1b04cd076_IndexingExpr>* _111665_i) {
	jule::Ptr<_1b04e5951_StructIns> _111717_s = _1b064b722_Struct((*(_111650_d)).get()._field_Kind.ptr());;
	if ((_111717_s == nullptr)) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_111665_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_111650_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_111650_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b04c22ac_IdentTypeDecl> _112417_decl = nullptr;;
	{
		auto &_match_expr{ (*(_111665_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b392aa97:;
			{
				jule::Ptr<_1b04c7911_IdentExpr> _112721_expr = (*(_111665_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1b04c7911_IdentExpr>(&__jule_any_type86);;
				_112417_decl=jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_112721_expr.get()._field_Token, ._field_Ident=_112721_expr.get()._field_Ident, ._field_Binded=_112721_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b392b8cd:;
			{
				jule::Ptr<_1b04c8c20_NsSelectionExpr> _113421_expr = (*(_111665_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1b04c8c20_NsSelectionExpr>(&__jule_any_type96);;
				_112417_decl=jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_113421_expr.get()._field_Ident, ._field_Ident=_113421_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1b392acb7:;
			{
				_1b06148b6_pushErr(_self_.ptr(), (*(_111665_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_111650_d))=nullptr;
				return;;
			}
		}
		_match_end_1b392826a:;
	};
	if ((!(_1b0620680_pushGenericsFromData(_self_, &(_112417_decl.get()._field_Generics), &((*(_111665_i)).get()._field_Index))))) {
		(*(_111650_d))=nullptr;
		return;;
	};
	_111717_s=({ auto _wrap_copy = _1b062c34b_typeChecker(_self_.ptr()); _1b065d855_fromStruct(&_wrap_copy, &(_112417_decl), &(_111717_s.get()._field_Decl)); });
	if ((_111717_s == nullptr)) {
		(*(_111650_d))=nullptr;
		return;;
	};
	(*(_111650_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1b0647300_Kind>(_111717_s, 0);
}



inline jule::Bool _1b0620e99_checkGenericFn(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b050b802_FnIns>* _115939_f, jule::Ptr<_1aa49b1d1_Token>* _115955_et, jule::Any* _115972_model) {
	jule::Bool _116013_ok = _1b0599230_reloadFnInsTypes(_self_.get()._field_s, (*(_115939_f)));;
	(*(_115939_f)).get()._field_reloaded=true;
	if ((!(_116013_ok))) {
		return false;;
	};
	jule::Ptr<_1b050b802_FnIns> _116517_existInstance = _1b050a46b_appendInstance((*(_115939_f)).get()._field_Decl.ptr(), _115939_f);;
	if ((!(_1b0598284_checkConstraintsFn(_self_.get()._field_s, _115939_f, _115955_et, _116517_existInstance)))) {
		return false;;
	};
	if ((_116517_existInstance != nullptr)) {
		(*(_115939_f))=_116517_existInstance;
		_1b064420e_updateModelToGenericIns(_115972_model, &(_116517_existInstance));
	} else {
		_1b05a8d77_checkFnInsCaller(_self_.get()._field_s, _115939_f, (*(_115955_et)));
	};
	return true;;
}



inline void _1b062130c_evalFnGenericFromIndexing(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b0612672_Data>* _118450_d, jule::Ptr<_1b04cd076_IndexingExpr>* _118465_i) {
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _118517_generics = jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1b0620680_pushGenericsFromData(_self_, &(_118517_generics), &((*(_118465_i)).get()._field_Index))))) {
		(*(_118450_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b050b802_FnIns> _119117_f = _1b064b48b_Fn((*(_118450_d)).get()._field_Kind.ptr());;
	jule::I64 _119217_genericsLen = 0LL;;
	if ((_119117_f.get()._field_Decl != nullptr)) {
		_119217_genericsLen=static_cast<jule::I64>(_119117_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1b0590655_checkGenericQuantity(_self_.get()._field_s.ptr(), _119217_genericsLen, static_cast<jule::I64>(_118517_generics.len()), (*(_118465_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_118450_d))=nullptr;
		return;;
	};
	_119117_f.get()._field_Generics=jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>>::alloc(0LL, _119117_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_118517_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b39362de:;
		if (it != expr_end) {
			jule::Ptr<_1b04c1ba2_TypeDecl> _120321_g = *it;
			{
				jule::Ptr<_1b0612672_Data> _120421_k = _1b062c68c_evalType(_self_.ptr(), _120321_g);;
				if ((_120421_k == nullptr)) {
					(*(_118450_d))=nullptr;
					return;;
				};
				{ jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>> &__jule_push_dest = _119117_f.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1b0645dc0_InsGeneric>(_1b0645dc0_InsGeneric{._field_Kind=_120421_k.get()._field_Kind, })); };
			}
			_iter_next_1b39362de:;
			++it;
			goto _iter_begin_1b39362de;
		}
		_iter_end_1b39362de:;
	};
	if (_1b050cc87_IsBuiltin(_119117_f.ptr())) {
		return;;
	};
	if (_1b0620e99_checkGenericFn(_self_, &(_119117_f), &((*(_118465_i)).get()._field_Expr.get()._field_Token), &((*(_118450_d)).get()._field_Model))) {
		(*(_118450_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1b0647300_Kind>(_119117_f, 1);
	} else {
		(*(_118450_d))=nullptr;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b062164d_evalIndexing(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cd076_IndexingExpr> _122336_i) {
	jule::Ptr<_1b06477a6_TypeKind> _122417_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_122417_prefix;
	});;
	jule::Ptr<_1b0612672_Data> _122817_d = _1b0636784_evalExprKind(_self_, _122336_i.get()._field_Expr.get()._field_Kind);;
	if ((_122817_d == nullptr)) {
		return nullptr;;
	};
	if (_122817_d.get()._field_Decl) {
		_1b06209e3_evalIdentDeclFromIndexing(_self_, &(_122817_d), &(_122336_i));
		return _122817_d;;
	};
	if ((_1b064b48b_Fn(_122817_d.get()._field_Kind.ptr()) != nullptr)) {
		_1b062130c_evalFnGenericFromIndexing(_self_, &(_122817_d), &(_122336_i));
		return _122817_d;;
	};
	_1b0612672_Data _124417_old_d = (*(_122817_d));;
	jule::Ptr<_1b0612672_Data> _124617_index = _1b0637598_evalExpr(_self_, _122336_i.get()._field_Index);;
	if ((_124617_index == nullptr)) {
		return nullptr;;
	};
	_122817_d.get()._field_Decl=false;
	_1b061eccd_toIndexing(_self_.ptr(), &(_122817_d), &(_124617_index), &(_122336_i));
	if (_1b0613046_IsConst(_122817_d.ptr())) {
		_122817_d.get()._field_Decl=false;
		_122817_d.get()._field_Model=jule::Any(_122817_d.get()._field_Constant, &__jule_any_type19);
	} else if (_122817_d.get()._field_Decl) {
		_122817_d.get()._field_Decl=false;
	} else {
		_122817_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ec88c_IndexingExprModel>(_1b04ec88c_IndexingExprModel{._field_Token=_122336_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1b0612672_Data>(_124417_old_d), ._field_Index=_124617_index}), &__jule_any_type46);
	};
	return _122817_d;;
}



inline __jule_tuple_x_1b0612672_Data__jule_tuple_x_1b0612672_Data _1b062198e_evalSlicingExprs(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cd6d6_SlicingExpr>* _127741_s) {
	__jule_tuple_x_1b0612672_Data__jule_tuple_x_1b0612672_Data __jule_func_result;
	jule::Ptr<_1b06477a6_TypeKind> _127817_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_127817_prefix;
	});;
	jule::Ptr<_1b0612672_Data> _128217_l = nullptr;;
	jule::Ptr<_1b0612672_Data> _128317_r = nullptr;;
	if (((*(_127741_s)).get()._field_Start != nullptr)) {
		_128217_l=_1b0637598_evalExpr(_self_, (*(_127741_s)).get()._field_Start);
		if ((_128217_l != nullptr)) {
			_1b061d31a_checkIntegerIndexingByData(_self_.ptr(), &(_128217_l), (*(_127741_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_128217_l=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ebce_primInt, ._field_Constant=static__1ad37d302_NewI64(0LL)});
		_128217_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_128217_l.get()._field_Model=jule::Any(_128217_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_127741_s)).get()._field_To != nullptr)) {
		_128317_r=_1b0637598_evalExpr(_self_, (*(_127741_s)).get()._field_To);
		if ((_128317_r != nullptr)) {
			_1b061d31a_checkIntegerIndexingByData(_self_.ptr(), &(_128317_r), (*(_127741_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _128217_l;
	__jule_func_result.__jule_result_arg1 = _128317_r;
	return __jule_func_result;;
}



inline void _1b0621c47_slicingArr(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _131330_d) {
	jule::Ptr<_1b06477a6_TypeKind> _131417_elemType = _1b064ae6e_Arr((*(_131330_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_131330_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654b26_Slc>(_1b0654b26_Slc{._field_Elem=_131417_elemType}), 22)});
	(*(_131330_d)).get()._field_Lvalue=false;
	(*(_131330_d)).get()._field_Mutable=((*(_131330_d)).get()._field_Mutable || (!(_1b0649148_Mutable(_131417_elemType.ptr()))));
}



inline void _1b0622165_slicingStr(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _132830_d, jule::Ptr<_1b0612672_Data>* _132841_l, jule::Ptr<_1b0612672_Data>* _132852_r) {
	(*(_132830_d)).get()._field_Lvalue=false;
	(*(_132830_d)).get()._field_Mutable=true;
	if ((!(_1b0613046_IsConst((*(_132830_d)).ptr())))) {
		return;;
	};
	if ((((*(_132841_l)) == nullptr) || ((*(_132852_r)) == nullptr))) {
		(*(_132830_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1b0613046_IsConst((*(_132841_l)).ptr()) && _1b0613046_IsConst((*(_132852_r)).ptr()))) {
		jule::I64 _134117_left = _1ad380557_AsI64((*(_132841_l)).get()._field_Constant.ptr());;
		if ((_134117_left < 0LL)) {
			return;;
		};
		jule::Str _134617_s = _1ad38003a_ReadStr((*(_132830_d)).get()._field_Constant.ptr());;
		jule::I64 _134721_right = 0LL;;
		if (((*(_132852_r)) == nullptr)) {
			_134721_right=static_cast<jule::I64>(static_cast<jule::I64>(_134617_s.len()));
		} else {
			_134721_right=static_cast<jule::I64>(_1ad380557_AsI64((*(_132852_r)).get()._field_Constant.ptr()));
		};
		if ((_134117_left > _134721_right)) {
			return;;
		};
		_1ad381646_SetStr((*(_132830_d)).get()._field_Constant.ptr(), _134617_s.slice(_134117_left, _134721_right));
		(*(_132830_d)).get()._field_Decl=true;
	} else {
		(*(_132830_d)).get()._field_Constant=nullptr;
	};
}



inline void _1b062263d_checkSlicing(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _136436_d, jule::Ptr<_1b0612672_Data>* _136447_l, jule::Ptr<_1b0612672_Data>* _136458_r, jule::Ptr<_1b04cd6d6_SlicingExpr>* _136469_s) {
	{
		
		if ((_1b064ae6e_Arr((*(_136436_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b394aec4:;
			{
				_1b0621c47_slicingArr(_self_, _136436_d);
				return;;
			}
		}
		else if ((_1b064b205_Slc((*(_136436_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b394b04b:;
			{
				return;;
			}
		}
		else if ((_1b064a19e_Prim((*(_136436_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b394b0c3:;
			{
				jule::Ptr<_1b0650627_Prim> _137217_prim = _1b064a19e_Prim((*(_136436_d)).get()._field_Kind.ptr());;
				{
					
					if (_1b0653aae_IsStr(_137217_prim.ptr())) {
						_case_begin_1b394ceb5:;
						{
							_1b0622165_slicingStr(_self_, _136436_d, _136447_l, _136458_r);
							return;;
						}
					}
					_match_end_1b394ce2c:;
				};
			}
		}
		_match_end_1b394ada3:;
	};
	_1b06148b6_pushErr(_self_, (*(_136469_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_136436_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1b0612672_Data> _1b062297e_evalSlicing(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cd6d6_SlicingExpr> _138335_s) {
	jule::Ptr<_1b0612672_Data> _138417_d = _1b0637598_evalExpr(_self_, _138335_s.get()._field_Expr);;
	if ((_138417_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _138918_l;;
	jule::Ptr<_1b0612672_Data> _138925_r;;
	({
		__jule_tuple_x_1b0612672_Data__jule_tuple_x_1b0612672_Data __jule_assign_result = _1b062198e_evalSlicingExprs(_self_, &(_138335_s));
		_138918_l = __jule_assign_result.__jule_result_arg0;
		_138925_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_138918_l == nullptr)) {
		return _138417_d;;
	};
	_138417_d.get()._field_Decl=false;
	_1b062263d_checkSlicing(_self_.ptr(), &(_138417_d), &(_138918_l), &(_138925_r), &(_138335_s));
	if (_1b0613046_IsConst(_138417_d.ptr())) {
		_138417_d.get()._field_Decl=false;
		_138417_d.get()._field_Model=jule::Any(_138417_d.get()._field_Constant, &__jule_any_type19);
	} else if (_138417_d.get()._field_Decl) {
		_138417_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1b04edb79_SlicingExprModel> _140721_model = jule::new_ptr<_1b04edb79_SlicingExprModel>(_1b04edb79_SlicingExprModel{._field_Token=_138335_s.get()._field_Token, ._field_Expr=_138417_d.get()._field_Model, ._field_Left=_138918_l.get()._field_Model, });;
		if ((_138925_r != nullptr)) {
			_140721_model.get()._field_Right=_138925_r.get()._field_Model;
		};
		_138417_d.get()._field_Model=jule::Any(_140721_model, &__jule_any_type98);
	};
	return _138417_d;;
}



inline void _1b0627c09_castPtr(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _142030_t, jule::Ptr<_1b0612672_Data> _142048_d, jule::Ptr<_1aa49b1d1_Token> _142058_errorToken) {
	_142048_d.get()._field_Constant=nullptr;
	jule::Ptr<_1b0654153_Sptr> _142213_sptr = _1b064a435_Sptr(_142048_d.get()._field_Kind.ptr());;
	if ((_142213_sptr != nullptr)) {
		if ((!(_1b0647eb0_Equal(_1b064a6bb_Ptr(_142030_t.ptr()).get()._field_Elem, _142213_sptr.get()._field_Elem)))) {
			_1b06148b6_pushErr(_self_, _142058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_142048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_142030_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1b06153ab_isUnsafe(_self_)))) {
		_1b06148b6_pushErr(_self_, _142058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b0650627_Prim> _143513_prim = _1b064a19e_Prim(_142048_d.get()._field_Kind.ptr());;
	if (((_1b064a6bb_Ptr(_142048_d.get()._field_Kind.ptr()) == nullptr) && ((_143513_prim == nullptr) || (!(_1ad37c1ad_IsInt(_1b0650968_Str(_143513_prim.ptr()))))))) {
		_1b06148b6_pushErr(_self_, _142058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_142048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_142030_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1b0628127_castStruct(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _144133_t, jule::Ptr<_1b0612672_Data> _144151_d, jule::Ptr<_1aa49b1d1_Token> _144161_errorToken) {
	_144151_d.get()._field_Constant=nullptr;
	jule::Ptr<_1b051bb97_Trait> _144317_tr = _1b064b9a8_Trait(_144151_d.get()._field_Kind.ptr());;
	if ((_144317_tr == nullptr)) {
		_1b06148b6_pushErr(_self_, _144161_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_144151_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_144133_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1b04e5951_StructIns> _144917_s = _1b064b722_Struct(_144133_t.ptr());;
	_1b3959d29_pushReference(_self_, &(_144917_s));
	if ((!(_1b04e3ec1_IsImplements(_144917_s.get()._field_Decl.ptr(), _144317_tr)))) {
		_1b06148b6_pushErr(_self_, _144161_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_144151_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_144133_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1b0628545_castRef(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _145730_t, jule::Ptr<_1b0612672_Data> _145748_d, jule::Ptr<_1aa49b1d1_Token> _145758_errorToken) {
	_145748_d.get()._field_Constant=nullptr;
	jule::Ptr<_1b0654153_Sptr> _145917_sptr = _1b064a435_Sptr(_145730_t.ptr());;
	jule::Ptr<_1b065791a_Ptr> _146117_ptr = _1b064a6bb_Ptr(_145748_d.get()._field_Kind.ptr());;
	if (((_146117_ptr != nullptr) && _1b0647eb0_Equal(_145917_sptr.get()._field_Elem, _146117_ptr.get()._field_Elem))) {
		if ((!(_1b06153ab_isUnsafe(_self_)))) {
			_1b06148b6_pushErr(_self_, _145758_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1b064b722_Struct(_145917_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1b0628127_castStruct(_self_, _145917_sptr.get()._field_Elem, _145748_d, _145758_errorToken);
		return;;
	};
	_1b06148b6_pushErr(_self_, _145758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_145748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_145730_t.ptr()), &__jule_any_type5)}));
}



inline void _1b0628963_castSlc(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _147930_t, jule::Ptr<_1b0612672_Data> _147948_d, jule::Ptr<_1aa49b1d1_Token> _147958_errorToken) {
	jule::Ptr<_1ad37cdb2_Const> _148013_c = _147948_d.get()._field_Constant;;
	_147948_d.get()._field_Constant=nullptr;
	if ((_1b064a952_Enum(_147948_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1b064a19e_Prim(_1b064a952_Enum(_147948_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1b0653aae_IsStr(_1b064a19e_Prim(_1b064a952_Enum(_147948_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1b06148b6_pushErr(_self_, _147958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_147948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_147930_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1b064a19e_Prim(_147948_d.get()._field_Kind.ptr()) == nullptr) || (!(_1b0653aae_IsStr(_1b064a19e_Prim(_147948_d.get()._field_Kind.ptr()).ptr()))))) {
		_1b06148b6_pushErr(_self_, _147958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_147948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_147930_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_147930_t=_1b064b205_Slc(_147930_t.ptr()).get()._field_Elem;
	jule::Ptr<_1b0650627_Prim> _149413_prim = _1b064a19e_Prim(_147930_t.ptr());;
	if (((_149413_prim == nullptr) || ((!(_1b065201e_IsU8(_149413_prim.ptr()))) && (!(_1b0651a02_IsI32(_149413_prim.ptr())))))) {
		_1b06148b6_pushErr(_self_, _147958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_147948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_147930_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_148013_c != nullptr)) {
		{
			
			if (_1b065201e_IsU8(_149413_prim.ptr())) {
				_case_begin_1b396b335:;
				{
					jule::Str _150421_s = _1ad38003a_ReadStr(_148013_c.ptr());;
					jule::Ptr<_1b04ec3d6_SliceExprModel> _150525_model = jule::new_ptr<_1b04ec3d6_SliceExprModel>(_1b04ec3d6_SliceExprModel{._field_ElemKind=_147930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _150421_s.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_150421_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b396ca51:;
						if (it != expr_end) {
							jule::U8 *_150924_b = it;
							{
								jule::Ptr<_1ad37cdb2_Const> _151029_bc = static__1ad37d5bb_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_150924_b)))));;
								_151029_bc.get()._field_Kind=_149413_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _150525_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_151029_bc, &__jule_any_type19)); };
							}
							_iter_next_1b396ca51:;
							++it;
							goto _iter_begin_1b396ca51;
						}
						_iter_end_1b396ca51:;
					};
					_147948_d.get()._field_Model=jule::Any(_150525_model, &__jule_any_type83);
					_147948_d.get()._field_Decl=true;
				}
			}
			else if (_1b0651a02_IsI32(_149413_prim.ptr())) {
				_case_begin_1b396b3ac:;
				{
					jule::Slice<jule::I32> _151721_runes = static_cast<jule::Slice<jule::I32>>(_1ad38003a_ReadStr(_148013_c.ptr()));;
					jule::Ptr<_1b04ec3d6_SliceExprModel> _151825_model = jule::new_ptr<_1b04ec3d6_SliceExprModel>(_1b04ec3d6_SliceExprModel{._field_ElemKind=_147930_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b3970537:;
						if (it != expr_end) {
							jule::I32 *_152224_r = it;
							{
								jule::Ptr<_1ad37cdb2_Const> _152329_rc = static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_152224_r)))));;
								_152329_rc.get()._field_Kind=_149413_prim.get()._field_Kind;
								{ jule::Slice<jule::Any> &__jule_push_dest = _151825_model.get()._field_Elems; __jule_push_dest.push(jule::Any(_152329_rc, &__jule_any_type19)); };
							}
							_iter_next_1b3970537:;
							++it;
							goto _iter_begin_1b3970537;
						}
						_iter_end_1b3970537:;
					};
					_147948_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type83);
					_147948_d.get()._field_Decl=true;
				}
			}
			_match_end_1b396b225:;
		};
	};
}



inline void _1b0628cc6_castStr(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _153330_d, jule::Ptr<_1aa49b1d1_Token> _153340_errorToken) {
	if ((_1b064a952_Enum(_153330_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b051e392_Enum> _153521_e = _1b064a952_Enum(_153330_d.get()._field_Kind.ptr());;
		if (((_1b064a19e_Prim(_153521_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1b0653aae_IsStr(_1b064a19e_Prim(_153521_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1ad37cdb2_Const> _154113_c = _153330_d.get()._field_Constant;;
	_153330_d.get()._field_Constant=nullptr;
	if ((_1b064a19e_Prim(_153330_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b0650627_Prim> _154417_prim = _1b064a19e_Prim(_153330_d.get()._field_Kind.ptr());;
		if (((!(_1b065201e_IsU8(_154417_prim.ptr()))) && (!(_1b0651a02_IsI32(_154417_prim.ptr()))))) {
			_1b06148b6_pushErr(_self_, _153340_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_153330_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_154113_c != nullptr)) {
			{
				
				if (_1b065201e_IsU8(_154417_prim.ptr())) {
					_case_begin_1b3d9cc2d:;
					{
						_153330_d.get()._field_Constant=static__1ad37db4e_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1ad3807dd_AsU64(_154113_c.ptr()))));
						_153330_d.get()._field_Model=jule::Any(_153330_d.get()._field_Constant, &__jule_any_type19);
						_153330_d.get()._field_Decl=true;
					}
				}
				else if (_1b0651a02_IsI32(_154417_prim.ptr())) {
					_case_begin_1b3d9cca5:;
					{
						_153330_d.get()._field_Constant=static__1ad37db4e_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1ad380557_AsI64(_154113_c.ptr()))));
						_153330_d.get()._field_Model=jule::Any(_153330_d.get()._field_Constant, &__jule_any_type19);
						_153330_d.get()._field_Decl=true;
					}
				}
				_match_end_1b3d9cb2e:;
			};
		};
		return;;
	};
	jule::Ptr<_1b0654b26_Slc> _156517_s = _1b064b205_Slc(_153330_d.get()._field_Kind.ptr());;
	if ((_156517_s == nullptr)) {
		_1b06148b6_pushErr(_self_, _153340_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_153330_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1b06477a6_TypeKind> _157117_t = _156517_s.get()._field_Elem;;
	jule::Ptr<_1b0650627_Prim> _157213_prim = _1b064a19e_Prim(_157117_t.ptr());;
	if (((_157213_prim == nullptr) || ((!(_1b065201e_IsU8(_157213_prim.ptr()))) && (!(_1b0651a02_IsI32(_157213_prim.ptr())))))) {
		_1b06148b6_pushErr(_self_, _153340_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_153330_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _1b06291e4_castInt(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _157930_t, jule::Ptr<_1b0612672_Data> _157948_d, jule::Ptr<_1aa49b1d1_Token> _157958_errorToken) {
	if (_1b0613046_IsConst(_157948_d.ptr())) {
		jule::Ptr<_1b0650627_Prim> _158117_prim = _1b064a19e_Prim(_157930_t.ptr());;
		{
			
			if (_1ad37bad6_IsSigInt(_158117_prim.get()._field_Kind)) {
				_case_begin_1b3da4240:;
				{
					_1ad380d2c_SetI64(_157948_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64(_157948_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ad37bde4_IsUnsigInt(_158117_prim.get()._field_Kind)) {
				_case_begin_1b3da42b7:;
				{
					_1ad3810d5_SetU64(_157948_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64(_157948_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b3da4185:;
		};
	} else {
		_157948_d.get()._field_Constant=nullptr;
	};
	if ((_1b064a952_Enum(_157948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b051e392_Enum> _159317_e = _1b064a952_Enum(_157948_d.get()._field_Kind.ptr());;
		if (_1ad37c7b8_IsNum(_1b0647b6e_Str(_159317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1b064a435_Sptr(_157948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b0650627_Prim> _160017_prim = _1b064a19e_Prim(_157930_t.ptr());;
		if ((!(_1b0653592_IsUintptr(_160017_prim.ptr())))) {
			_1b06148b6_pushErr(_self_, _157958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_157948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_157930_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1b064a6bb_Ptr(_157948_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b0650627_Prim> _160717_prim = _1b064a19e_Prim(_157930_t.ptr());;
		if (_1b0653592_IsUintptr(_160717_prim.ptr())) {
		} else if ((!(_1b06153ab_isUnsafe(_self_)))) {
			_1b06148b6_pushErr(_self_, _157958_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1b0650627_Prim> _161613_prim = _1b064a19e_Prim(_157948_d.get()._field_Kind.ptr());;
	if (((_161613_prim != nullptr) && _1ad37c7b8_IsNum(_1b0650968_Str(_161613_prim.ptr())))) {
		return;;
	};
	_1b06148b6_pushErr(_self_, _157958_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_157948_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_157930_t.ptr()), &__jule_any_type5)}));
}



inline void _1b0629612_castNum(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _162430_t, jule::Ptr<_1b0612672_Data> _162448_d, jule::Ptr<_1aa49b1d1_Token> _162458_errorToken) {
	if (_1b0613046_IsConst(_162448_d.ptr())) {
		jule::Ptr<_1b0650627_Prim> _162617_prim = _1b064a19e_Prim(_162430_t.ptr());;
		{
			
			if (_1ad37c4ee_IsFloat(_162617_prim.get()._field_Kind)) {
				_case_begin_1b3dac6bb:;
				{
					_1ad3818ee_SetF64(_162448_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1ad380a74_AsF64(_162448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ad37bad6_IsSigInt(_162617_prim.get()._field_Kind)) {
				_case_begin_1b3dac743:;
				{
					_1ad380d2c_SetI64(_162448_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64(_162448_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1ad37bde4_IsUnsigInt(_162617_prim.get()._field_Kind)) {
				_case_begin_1b3dac7ba:;
				{
					_1ad3810d5_SetU64(_162448_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64(_162448_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b3dac600:;
		};
	} else {
		_162448_d.get()._field_Constant=nullptr;
	};
	if ((_1b064a952_Enum(_162448_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b051e392_Enum> _164017_e = _1b064a952_Enum(_162448_d.get()._field_Kind.ptr());;
		if (_1ad37c7b8_IsNum(_1b0647b6e_Str(_164017_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1b0650627_Prim> _164613_prim = _1b064a19e_Prim(_162448_d.get()._field_Kind.ptr());;
	if (((_164613_prim != nullptr) && _1ad37c7b8_IsNum(_1b0650968_Str(_164613_prim.ptr())))) {
		return;;
	};
	_1b06148b6_pushErr(_self_, _162458_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_162448_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_162430_t.ptr()), &__jule_any_type5)}));
}



inline void _1b0629a30_castPrim(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _165431_t, jule::Ptr<_1b0612672_Data> _165449_d, jule::Ptr<_1aa49b1d1_Token> _165459_errorToken) {
	jule::Ptr<_1b0650627_Prim> _165513_prim = _1b064a19e_Prim(_165431_t.ptr());;
	{
		
		if (_1b0653d45_IsAny(_165513_prim.ptr())) {
			_case_begin_1b3db364a:;
			{
				_165449_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1b0653aae_IsStr(_165513_prim.ptr())) {
			_case_begin_1b3db36b1:;
			{
				_1b0628cc6_castStr(_self_, _165449_d, _165459_errorToken);
			}
		}
		else if (_1ad37c1ad_IsInt(_1b0650968_Str(_165513_prim.ptr()))) {
			_case_begin_1b3db32d7:;
			{
				_1b06291e4_castInt(_self_, _165431_t, _165449_d, _165459_errorToken);
			}
		}
		else if (_1ad37c7b8_IsNum(_1b0650968_Str(_165513_prim.ptr()))) {
			_case_begin_1b3db334d:;
			{
				_1b0629612_castNum(_self_, _165431_t, _165449_d, _165459_errorToken);
			}
		}
		else {
			_case_begin_1b3db3271:;
			{
				_1b06148b6_pushErr(_self_, _165459_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_165431_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1b3db321b:;
	};
}



inline void _1b0629d93_castConstant(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind>* _167136_t, jule::Ptr<_1b0612672_Data>* _167155_d) {
	if ((((*(_167155_d)) == nullptr) || (!(_1b0613046_IsConst((*(_167155_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1b0650627_Prim> _167513_prim = _1b064a19e_Prim((*(_167136_t)).ptr());;
	_1b0643c69_castConstByType(&(_167513_prim.get()._field_Kind), _167155_d);
	(*(_167155_d)).get()._field_Model=jule::Any((*(_167155_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1b062a2b1_castTypeEnum(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind>* _168036_t, jule::Ptr<_1b0612672_Data>* _168055_d, jule::Ptr<_1aa49b1d1_Token>* _168070_errorToken) {
	jule::I64 _168113_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1b05970da_checkTypeCompatibility((*(_self_))._field_s, &((*(_168055_d)).get()._field_Kind), _168036_t, _168070_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _168113_n);
		_1b06148b6_pushErr(_self_, (*(_168070_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_168055_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_168036_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_168055_d)).get()._field_Constant=nullptr;
}



inline void _1b062a6ce_castTypeEnumT(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind>* _168937_t, jule::Ptr<_1b0612672_Data>* _168956_d, jule::Ptr<_1aa49b1d1_Token>* _168971_errorToken) {
	jule::I64 _169013_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1b05970da_checkTypeCompatibility((*(_self_))._field_s, _168937_t, &((*(_168956_d)).get()._field_Kind), _168971_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169013_n);
		_1b06148b6_pushErr(_self_, (*(_168971_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_168956_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_168937_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_168956_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1b0612672_Data> _1b062ab85_evalCastByTypeNData(_1b0614366_Eval* _self_, jule::Ptr<_1b06477a6_TypeKind> _169842_t, jule::Ptr<_1b0612672_Data> _169860_d, jule::Ptr<_1aa49b1d1_Token> _169874_errorToken) {
	if (((_169860_d != nullptr) && _169860_d.get()._field_Decl)) {
		_1b06148b6_pushErr(_self_, _169874_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1b0612a29_IsNil(_169860_d.ptr())) {
			_case_begin_1b3dbd347:;
			{
				if ((!(_1b0649665_NilCompatible(_169842_t.ptr())))) {
					_1b06148b6_pushErr(_self_, _169874_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_169842_t.ptr()), &__jule_any_type5)}));
				};
				_169860_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1b064a19e_Prim(_169860_d.get()._field_Kind.ptr()) != nullptr) && _1b0653d45_IsAny(_1b064a19e_Prim(_169860_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b3dbd105:;
			{
				if ((_1b064a952_Enum(_169842_t.ptr()) != nullptr)) {
					_1b06148b6_pushErr(_self_, _169874_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1b0614c29_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1b064abd8_TypeEnum(_169842_t.ptr()) != nullptr)) {
					_1b06148b6_pushErr(_self_, _169874_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_169860_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1b064abd8_TypeEnum(_169860_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3dbd16b:;
			{
				_1b062a2b1_castTypeEnum(_self_, &(_169842_t), &(_169860_d), &(_169874_errorToken));
			}
		}
		else if ((_1b064abd8_TypeEnum(_169842_t.ptr()) != nullptr)) {
			_case_begin_1b3dbdbd8:;
			{
				_1b062a6ce_castTypeEnumT(_self_, &(_169842_t), &(_169860_d), &(_169874_errorToken));
			}
		}
		else if ((_1b064a6bb_Ptr(_169842_t.ptr()) != nullptr)) {
			_case_begin_1b3dbdc4e:;
			{
				_1b0627c09_castPtr(_self_, _169842_t, _169860_d, _169874_errorToken);
			}
		}
		else if ((_1b064a435_Sptr(_169842_t.ptr()) != nullptr)) {
			_case_begin_1b3dbdcb5:;
			{
				_1b0628545_castRef(_self_, _169842_t, _169860_d, _169874_errorToken);
			}
		}
		else if ((_1b064b205_Slc(_169842_t.ptr()) != nullptr)) {
			_case_begin_1b3dbdd2b:;
			{
				_1b0628963_castSlc(_self_, _169842_t, _169860_d, _169874_errorToken);
			}
		}
		else if ((_1b064b722_Struct(_169842_t.ptr()) != nullptr)) {
			_case_begin_1b3dbdd92:;
			{
				_1b0628127_castStruct(_self_, _169842_t, _169860_d, _169874_errorToken);
			}
		}
		else if ((_1b064a19e_Prim(_169842_t.ptr()) != nullptr)) {
			_case_begin_1b3dbde08:;
			{
				_1b0629a30_castPrim(_self_, _169842_t, _169860_d, _169874_errorToken);
				_1b0629d93_castConstant(_self_, &(_169842_t), &(_169860_d));
			}
		}
		else {
			_case_begin_1b3dbc775:;
			{
				_1b06148b6_pushErr(_self_, _169874_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_169842_t.ptr()), &__jule_any_type5)}));
				_169860_d=nullptr;
			}
		}
		_match_end_1b3dbc8a7:;
	};
	if ((_169860_d == nullptr)) {
		return nullptr;;
	};
	_169860_d.get()._field_Mutable=(_169860_d.get()._field_Mutable || (!(_1b0649148_Mutable(_169860_d.get()._field_Kind.ptr()))));
	if (((!(_169860_d.get()._field_Decl)) && ((_1b064a952_Enum(_169860_d.get()._field_Kind.ptr()) == nullptr) || (!(_1b0647eb0_Equal(_1b064a952_Enum(_169860_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _169842_t)))))) {
		_1b06431b9_applyCastKind(&(_169860_d), &(_169842_t));
		_169860_d.get()._field_Model.cast_ptr<_1b04eb65a_CastingExprModel>(&__jule_any_type99).get()._field_Token=_169874_errorToken;
	} else {
		_169860_d.get()._field_Kind=_169842_t;
	};
	_169860_d.get()._field_Decl=false;
	_169860_d.get()._field_Lvalue=false;
	_169860_d.get()._field_untyped=false;
	if (_1b0613046_IsConst(_169860_d.ptr())) {
		_169860_d.get()._field_Constant.get()._field_Kind=_1b064a19e_Prim(_169842_t.ptr()).get()._field_Kind;
	};
	return _169860_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b062b13b_evalCastT(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b06477a6_TypeKind>* _176934_t, jule::Ptr<_1b04c5ed6_Expr>* _176953_e, jule::Ptr<_1aa49b1d1_Token>* _176968_et) {
	jule::Ptr<_1b06477a6_TypeKind> _177017_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_177017_prefix;
	});;
	if ((_1b064b205_Slc((*(_176934_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_176953_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1b3dca156:;
				{
					_self_.get()._field_prefix=(*(_176934_t));
				}
			}
			_match_end_1b3dca101:;
		};
	};
	jule::Ptr<_1b0612672_Data> _177917_d = _1b0637598_evalExpr(_self_, (*(_176953_e)));;
	if (((_177917_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _177917_d;;
	};
	return _1b062ab85_evalCastByTypeNData(_self_.ptr(), (*(_176934_t)), _177917_d, (*(_176968_et)));;
}



inline jule::Ptr<_1b0612672_Data> _1b062b47c_evalCast(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c8846_CastExpr> _178632_c) {
	jule::Ptr<_1b064ec20_TypeSymbol> _178717_t = _1b051132e_buildType(_178632_c.get()._field_Kind);;
	jule::Bool _178813_ok = _1b0594c97_checkType(_self_.get()._field_s, &(_178717_t), _self_.get()._field_lookup);;
	if ((!(_178813_ok))) {
		return nullptr;;
	};
	return _1b062b13b_evalCastT(_self_, &(_178717_t.get()._field_Kind), &(_178632_c.get()._field_Expr), &(_178632_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1b0612672_Data> _1b062b7bd_evalNsSelection(_1b0614366_Eval* _self_, jule::Ptr<_1b04c8c20_NsSelectionExpr> _179534_s) {
	jule::Str _179613_path = _1b06645c5_buildLinkPathByTokens(&(_179534_s.get()._field_Ns));;
	jule::Ptr<_1b056a487_ImportInfo> _179717_imp = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b066586d_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>([=](jule::Ptr<_1b056a487_ImportInfo> _179752_imp) mutable -> jule::Bool {
		if (((_179534_s.get()._field_Ns.len() == 1LL) && (_179752_imp.get()._field_Alias == _179613_path))) {
			return true;;
		};
		return ((_179752_imp.get()._field_LinkPath == _179613_path) && _1b056d0a0_isAccessibleViaSelection(_179752_imp.ptr()));;
	}));;
	if ((_179717_imp == nullptr)) {
		_1b06148b6_pushErr(_self_, _179534_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_179613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1b0667584_Lookup> _180917_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1b0667584_Lookup>(_179717_imp, 1);
	;
	_1b0615125_disallowBuiltin(_self_);
	jule::Any _181417_def = _1b0617633_getDef(_self_, &(_179534_s.get()._field_Ident.get()._field_Kind), false);;
	_1b0614e27_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_180917_lookup;
	jule::Ptr<_1b0612672_Data> _181717_d = _1b061b55a_evalDef(_self_, &(_181417_def), _179534_s.get()._field_Ident);;
	return _181717_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b062bc74_evalStructLitExplicit(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04e5951_StructIns> _182145_s, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _182213_exprs, jule::Ptr<_1aa49b1d1_Token> _182233_errorToken) {
	jule::Bool _182313_ok = _1b0590655_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_182145_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_182145_s.get()._field_Generics.len()), _182233_errorToken);;
	if ((!(_182313_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _182145_s.get()._field_Decl))) {
		_1b06148b6_pushErr(_self_.ptr(), _182233_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_182145_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1b3959d29_pushReference(_self_.ptr(), &(_182145_s));
	_1b0619756_checkDeprecated(_self_.ptr(), &(_182145_s.get()._field_Decl.get()._field_Directives), _182233_errorToken);
	_1b0605b4e_structLitChecker _183617_slc = _1b0605b4e_structLitChecker{._field_e=_self_, ._field_errorToken=_182233_errorToken, ._field_s=_182145_s, };;
	_1b060738c_check(&_183617_slc, &(_182213_exprs));
	jule::Ptr<_1b0612672_Data> _184317_d = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_182145_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1b04eacca_StructLitExprModel>(_1b04eacca_StructLitExprModel{._field_Strct=_182145_s, ._field_Args=_183617_slc._field_args}), &__jule_any_type101), });;
	if (_182145_s.get()._field_Decl.get()._field_Binded) {
		_184317_d.get()._field_Kind.get()._field_BindIdent=_182145_s.get()._field_Decl.get()._field_Ident;
	};
	return _184317_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b062c0b5_evalStructLit(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cb10c_StructLit> _185937_lit) {
	jule::Ptr<_1b064ec20_TypeSymbol> _186017_t = _1b051132e_buildType(_185937_lit.get()._field_Kind);;
	jule::Bool _186113_ok = _1b0594c97_checkType(_self_.get()._field_s, &(_186017_t), _self_.get()._field_lookup);;
	if ((!(_186113_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b04e5951_StructIns> _186617_s = _1b064b722_Struct(_186017_t.get()._field_Kind.ptr());;
	if ((_186617_s == nullptr)) {
		if ((_1b064a435_Sptr(_186017_t.get()._field_Kind.ptr()) != nullptr)) {
			_186617_s=_1b064b722_Struct(_1b064a435_Sptr(_186017_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_186617_s != nullptr)) {
				goto _julec_label_1b3ddd19c;
			};
		};
		_1b06148b6_pushErr(_self_.ptr(), _185937_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b3ddd19c:;
	jule::Ptr<_1b0612672_Data> _187917_d = _1b062bc74_evalStructLitExplicit(_self_, _186617_s, _185937_lit.get()._field_Exprs, _185937_lit.get()._field_Kind.get()._field_Token);;
	if ((_1b064a435_Sptr(_186017_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1b04eacca_StructLitExprModel> _188121_model = _187917_d.get()._field_Model.cast_ptr<_1b04eacca_StructLitExprModel>(&__jule_any_type101);;
		_1b06418d2_makeStructLitAlloc(&(_187917_d), &(_188121_model));
	};
	return _187917_d;;
}



inline _1b065990b_typeChecker _1b062c34b_typeChecker(_1b0614366_Eval* _self_) {
	return _1b0593a43_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1b0612672_Data> _1b062c68c_evalType(_1b0614366_Eval* _self_, jule::Ptr<_1b04c1ba2_TypeDecl> _189131_t) {
	jule::Ptr<_1b064ec20_TypeSymbol> _189217_tk = _1b051132e_buildType(_189131_t);;
	jule::Bool _189313_ok = _1b0594c97_checkType((*(_self_))._field_s, &(_189217_tk), (*(_self_))._field_lookup);;
	if ((!(_189313_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_189217_tk.get()._field_Kind, ._field_Model=jule::Any(_189217_tk.get()._field_Kind, &__jule_any_type90), ._field_Decl=true, });;
}



inline void _1b062ca00_callTypeFn(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c9cdc_FnCallExpr>* _190435_fc, jule::Ptr<_1b0612672_Data>* _190457_d) {
	if (((*(_190435_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_190435_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_190435_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_190435_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_190457_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_190435_fc)).get()._field_IsCo) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_190435_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_190457_d))=nullptr;
		return;;
	} else if (((*(_190435_fc)).get()._field_Exception != nullptr)) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_190435_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_190457_d))=nullptr;
		return;;
	};
	if (((*(_190435_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1b04c5ed6_Expr> _192021_arg = (*(_190435_fc)).get()._field_Args[0LL];;
		(*(_190457_d))=_1b062b13b_evalCastT(_self_, &((*(_190457_d)).get()._field_Kind), &(_192021_arg), &(_192021_arg.get()._field_Token));
		return;;
	};
	if (((*(_190457_d)) != nullptr)) {
		(*(_190457_d)).get()._field_Decl=false;
	};
}



inline void _1b062cd63_callBuiltinFn(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c9cdc_FnCallExpr>* _193038_fc, jule::Ptr<_1b0612672_Data>* _193060_d) {
	if ((!(_1b04ca161_Unhandled((*(_193038_fc)).ptr())))) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_193038_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	(*(_193060_d))=_1b064b48b_Fn((*(_193060_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _193038_fc, _193060_d);
	if (((*(_193060_d)) == nullptr)) {
		return;;
	};
	(*(_193060_d)).get()._field_Mutable=true;
}



inline void _1b062d1c6_checkFnOfConcurrentCall(_1b0614366_Eval* _self_, jule::Ptr<_1b050b802_FnIns>* _194243_f, jule::Ptr<_1aa49b1d1_Token> _194254_errorToken) {
	if (_1b06153ab_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_194243_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3de9197:;
		if (it != expr_end) {
			jule::Ptr<_1b050a856_ParamIns> *_194616_p = it;
			{
				if (_1b0507545_IsSelf((*(_194616_p)).get()._field_Decl.ptr())) {
					if ((!(_1b05077cb_IsRef((*(_194616_p)).get()._field_Decl.ptr())))) {
						_1b06148b6_pushErr(_self_, _194254_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1b0614c29_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_194616_p)).get()._field_Decl.get()._field_Reference) {
					_1b06148b6_pushErr(_self_, _194254_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1b0614c29_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b3de9197:;
			++it;
			goto _iter_begin_1b3de9197;
		}
		_iter_end_1b3de9197:;
	};
}



inline void _1b062d5e4_processExceptionalHandler(_1b0614366_Eval* _self_, jule::Ptr<_1b050b802_FnIns>* _196149_f, jule::Ptr<_1b04c9cdc_FnCallExpr>* _196165_fc, jule::Ptr<_1b0612672_Data>* _196187_d) {
	jule::Bool _196213_resultNeeded = ((!(_1b0508d71_IsVoid((*(_196149_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1b055134c_scopeChecker> _196317_csc = nullptr;;
	jule::Ptr<_1b0549048_Scope> _196417_ch = nullptr;;
	jule::Ptr<_1b04ec00c_FnCallExprModel> _196617_model = (*(_196187_d)).get()._field_Model.cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1b055134c_scopeChecker> _197017_sc = (*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0);;
	_196317_csc=_1b0562cdc_newChildChecker(_197017_sc);
	if (_196213_resultNeeded) {
		_196317_csc.get()._field_result=(*(_196149_f));
	};
	_196417_ch=_1b0555d8a_getChild(_197017_sc.ptr());
	(*(_196165_fc)).get()._field_Exception.get()._field_Parent=_197017_sc.get()._field_tree;
	{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _196317_csc.get()._field_table.get()._field_Vars; __jule_push_dest.push(_1b0641c56_buildErrorVar(&(_196417_ch), _196165_fc)); };
	_1b05562a8_checkChildSsc(_197017_sc, &((*(_196165_fc)).get()._field_Exception), &(_196417_ch), &(_196317_csc));
	_196617_model.get()._field_Assigned=_196213_resultNeeded;
	_196617_model.get()._field_Except=_196417_ch;
	if ((_196213_resultNeeded && (_196317_csc.get()._field_result != nullptr))) {
		_1b06148b6_pushErr(_self_, (*(_196165_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1b062d957_callFn(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c9cdc_FnCallExpr>* _198831_fc, jule::Ptr<_1b0612672_Data>* _198853_d) {
	jule::Ptr<_1b050b802_FnIns> _198917_f = _1b064b48b_Fn((*(_198853_d)).get()._field_Kind.ptr());;
	if (_1b050cc87_IsBuiltin(_198917_f.ptr())) {
		_1b062cd63_callBuiltinFn(_self_, _198831_fc, _198853_d);
		return;;
	};
	if ((_1b0615642_isGlobal(_self_.ptr()) && _198917_f.get()._field_Decl.get()._field_Exceptional)) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1b0614c29_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_198853_d))=nullptr;
		return;;
	};
	if (((!(_1b0509107_IsMethod(_198917_f.get()._field_Decl.ptr()))) && _1b066366d_hasDirective(&(_198917_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_198853_d))=nullptr;
		return;;
	};
	if (((((!((*(_198853_d)).get()._field_Mutable)) && _1b0509107_IsMethod(_198917_f.get()._field_Decl.ptr())) && (!(_198917_f.get()._field_Decl.get()._field_Statically))) && _198917_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		if ((!(_self_.get()._field_immutable))) {
			_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1b04eacca_StructLitExprModel> _201521_lit = _1b0644e8a_isLitBased(&((*(_198853_d)).get()._field_Model));;
			if ((_201521_lit == nullptr)) {
				_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
			} else {
				_1b0605665_checkMutRiskOfStructLit(&(_self_.get()._field_s), &(_201521_lit));
			};
		};
	} else if (((!(_1b06153ab_isUnsafe(_self_.ptr()))) && _198917_f.get()._field_Decl.get()._field_Unsafety)) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _202717_dynamicAnnotation = (((_198917_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_198917_f.get()._field_Generics.len() == 0LL)) && (_198917_f.get()._field_Params.len() > 0LL));;
	if (_202717_dynamicAnnotation) {
		_198917_f.get()._field_Generics=jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>>::alloc(_198917_f.get()._field_Decl.get()._field_Generics.len(), _198917_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_198917_f.get()._field_Generics.len() != _198917_f.get()._field_Decl.get()._field_Generics.len())) {
		_1b0590655_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_198917_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_198917_f.get()._field_Generics.len()), (*(_198831_fc)).get()._field_Token);
		(*(_198853_d))=nullptr;
		return;;
	};
	jule::Ptr<_1b058b4db_Sema> _203617_old = _self_.get()._field_s;;
	if ((_198917_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_198917_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_203617_old != _self_.get()._field_s)) {
			(_203617_old.get()._field_errors).append(_self_.get()._field_s.get()._field_errors);;
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_203617_old;
	});;
	_1b0602c17_fnCallArgChecker _204917_fcac = _1b0602c17_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_198831_fc)).get()._field_Args, ._field_errorToken=(*(_198831_fc)).get()._field_Token, ._field_dynamicAnnotation=_202717_dynamicAnnotation, };;
	if ((!(_202717_dynamicAnnotation))) {
		if ((!(_198917_f.get()._field_reloaded))) {
			jule::Bool _205821_ok = _1b0599230_reloadFnInsTypes(_self_.get()._field_s, _198917_f);;
			_198917_f.get()._field_reloaded=true;
			if ((!(_205821_ok))) {
				(*(_198853_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1b050b802_FnIns> _206521_existInstance = _1b050a46b_appendInstance(_198917_f.get()._field_Decl.ptr(), &(_198917_f));;
		if ((_206521_existInstance != nullptr)) {
			_198917_f=_206521_existInstance;
		};
	} else if ((!(_1b059798c_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_198917_f), &(_204917_fcac._field_ignored))))) {
		(*(_198853_d))=nullptr;
		return;;
	};
	_204917_fcac._field_f=_198917_f;
	jule::Bool _207617_ok = false;;
	if ((_198917_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1b058b4db_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1b058b4db_Sema> _1___jule_assign_arg = _203617_old;
			_203617_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_207617_ok=_1b06052be_check(&_204917_fcac);
		({
			jule::Ptr<_1b058b4db_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1b058b4db_Sema> _1___jule_assign_arg = _203617_old;
			_203617_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_207617_ok=_1b06052be_check(&_204917_fcac);
	};
	if (_202717_dynamicAnnotation) {
		if ((!(_207617_ok))) {
			(*(_198853_d))=nullptr;
			return;;
		};
		if ((!(_1b0620e99_checkGenericFn(_self_, &(_198917_f), &((*(_198831_fc)).get()._field_Token), &((*(_198853_d)).get()._field_Model))))) {
			(*(_198853_d))=nullptr;
			return;;
		};
	};
	jule::Any _209617_callModel = (*(_198853_d)).get()._field_Model;;
	if (_1b0508d71_IsVoid(_198917_f.get()._field_Decl.ptr())) {
		(*(_198853_d))=_1b06433c8_buildVoidData();
	} else {
		(*(_198853_d)).get()._field_Kind=_198917_f.get()._field_Result;
		(*(_198853_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1b04ec00c_FnCallExprModel> _210517_model = jule::new_ptr<_1b04ec00c_FnCallExprModel>(_1b04ec00c_FnCallExprModel{._field_Token=(*(_198831_fc)).get()._field_Token, ._field_Func=_198917_f, ._field_IsCo=(*(_198831_fc)).get()._field_IsCo, ._field_Expr=_209617_callModel, ._field_Args=_204917_fcac._field_argModels, });;
	(*(_198853_d)).get()._field_Model=jule::Any(_210517_model, &__jule_any_type35);
	(*(_198853_d)).get()._field_Mutable=true;
	if (_198917_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_198831_fc)).get()._field_IsCo) {
			_1b058e126_pushErr(_self_.get()._field_s.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1b058e489_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1b04ca161_Unhandled((*(_198831_fc)).ptr())) {
				_case_begin_1b3e15603:;
				{
					_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1b0614c29_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1b04ca3e7_Ignored((*(_198831_fc)).ptr())) {
				_case_begin_1b3e162c4:;
				{
					goto _match_end_1b3e15405;
				}
			}
			else {
				_case_begin_1b3e1545a:;
				{
					_1b062d5e4_processExceptionalHandler(_self_.ptr(), &(_198917_f), _198831_fc, _198853_d);
				}
			}
			_match_end_1b3e15405:;
		};
	} else if ((!(_1b04ca161_Unhandled((*(_198831_fc)).ptr())))) {
		_1b06148b6_pushErr(_self_.ptr(), (*(_198831_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_198831_fc)).get()._field_IsCo) {
		_1b062d1c6_checkFnOfConcurrentCall(_self_.ptr(), &(_210517_model.get()._field_Func), (*(_198831_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1b0612672_Data> _1b062dc98_evalFnCall(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c9cdc_FnCallExpr> _214034_fc) {
	jule::Ptr<_1b06477a6_TypeKind> _214117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_214117_prefix;
	});;
	{
		auto &_match_expr{ _214034_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b3e19151:;
			{
				if (_214034_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1b0734541_builtinCallerError(&(_self_), &(_214034_fc));;
				};
			}
		}
		_match_end_1b3e190eb:;
	};
	jule::Ptr<_1b0612672_Data> _215417_d = _1b0636784_evalExprKind(_self_, _214034_fc.get()._field_Expr.get()._field_Kind);;
	if ((_215417_d == nullptr)) {
		return nullptr;;
	};
	if (_215417_d.get()._field_Decl) {
		_1b062ca00_callTypeFn(_self_, &(_214034_fc), &(_215417_d));
		return _215417_d;;
	};
	if ((_1b064b48b_Fn(_215417_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b06148b6_pushErr(_self_.ptr(), _214034_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1b062d957_callFn(_self_, &(_214034_fc), &(_215417_d));
	return _215417_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b062e194_evalEnumStatic(_1b0614366_Eval* _self_, jule::Ptr<_1b051e392_Enum> _217337_enm, jule::Ptr<_1aa49b1d1_Token> _217349_ident) {
	jule::Ptr<_1b051d825_EnumItem> _217417_item = _1b051ee86_FindItem(_217337_enm.ptr(), _217349_ident.get()._field_Kind);;
	if ((_217417_item == nullptr)) {
		_1b06148b6_pushErr(_self_, _217349_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_217337_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_217349_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1b0644bc1_evalEnumStatic(&(_217337_enm), &(_217417_item));;
}



inline jule::Ptr<_1b0612672_Data> _1b062e590_evalTypeEnumStatic(_1b0614366_Eval* _self_, jule::Ptr<_1b0520a9c_TypeEnum> _218141_enm, jule::Ptr<_1aa49b1d1_Token> _218157_ident) {
	jule::Ptr<_1b05204c5_TypeEnumItem> _218217_item = _1b052165d_FindItem(_218141_enm.ptr(), _218157_ident.get()._field_Kind);;
	if ((_218217_item == nullptr)) {
		_1b06148b6_pushErr(_self_, _218157_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_218141_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_218157_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1b064a952_Enum(_218217_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e2061e:;
			{
				return _1b0617c2c__evalEnum(_self_, _1b064a952_Enum(_218217_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1b064abd8_TypeEnum(_218217_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e20ce5:;
			{
				return _1b0618469__evalTypeEnum(_self_, _1b064abd8_TypeEnum(_218217_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1b064b722_Struct(_218217_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3e20d5b:;
			{
				return _1b0618ba6__evalStruct(_self_, _1b064b722_Struct(_218217_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1b3e1e530:;
			{
				jule::Ptr<_1b0612672_Data> _219521_d = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_218217_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_219521_d.get()._field_Model=jule::Any(_219521_d.get()._field_Kind, &__jule_any_type90);
				return _219521_d;;
			}
		}
		_match_end_1b3e1e70b:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b062e98b_evalStructStatic(_1b0614366_Eval* _self_, jule::Ptr<_1b04e5951_StructIns> _220439_s, jule::Ptr<_1aa49b1d1_Token> _220454_ident) {
	jule::Ptr<_1b0612672_Data> _220517_d = jule::new_ptr<_1b0612672_Data>();;
	;
	jule::Ptr<_1b05088ed_Fn> _220917_method = _1b04e69b8_FindMethod(_220439_s.ptr(), _220454_ident.get()._field_Kind, true);;
	if ((_220917_method != nullptr)) {
		if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _220917_method.get()._field_Public, _220917_method.get()._field_Token)))) {
			_1b06148b6_pushErr(_self_, _220454_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_220454_ident.get()._field_Kind, &__jule_any_type5)}));
			_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1b050b802_FnIns> _221621_ins = _1b050a15d_instance(_220917_method);;
		_221621_ins.get()._field_Owner=_220439_s;
		_1b38a93c7_pushReference(_self_, &(_221621_ins));
		_220517_d.get()._field_Model=jule::Any(jule::new_ptr<_1b0500054_StructStaticIdentExprModel>(_1b0500054_StructStaticIdentExprModel{._field_Structure=_220439_s, ._field_Expr=_220517_d.get()._field_Model, ._field_Method=_221621_ins}), &__jule_any_type102);
		_220517_d.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_221621_ins, 1)});
		return _220517_d;;
	};
	jule::Ptr<_1b05ae1bd_Var> _223017_sttc = _1b04e714a_FindStatic(_220439_s.ptr(), _220454_ident.get()._field_Kind);;
	if ((_223017_sttc != nullptr)) {
		return _1b061ac63_evalVar(_self_, _223017_sttc, _220454_ident);;
	};
	_1b06148b6_pushErr(_self_, _220454_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_220439_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_220454_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b0612672_Data> _1b062ee42_evalTraitSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _223940_d, jule::Ptr<_1b051bb97_Trait> _223954_trt, jule::Ptr<_1aa49b1d1_Token> _223971_ident) {
	jule::Ptr<_1b05088ed_Fn> _224017_f = _1b051c846_FindMethod(_223954_trt.ptr(), _223971_ident.get()._field_Kind);;
	if ((_224017_f == nullptr)) {
		_1b06148b6_pushErr(_self_, _223971_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_223954_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_223971_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b050a15d_instance(_224017_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1b04ee20c_TraitSubIdentExprModel>(_1b04ee20c_TraitSubIdentExprModel{._field_Token=_223971_ident, ._field_Expr=_223940_d.get()._field_Model, ._field_Method=_224017_f, ._field_Trt=_223954_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1b0612672_Data> _1b06304a3_evalStructSubIdentField(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data>* _225947_d, jule::Ptr<_1b04e5951_StructIns>* _225962_s, jule::Ptr<_1aa49b1d1_Token>* _225982_tok, jule::Ptr<_1b04e4da1_FieldIns>* _2259100_f) {
	jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _226017_model = jule::new_ptr<_1b04eea9d_StructSubIdentExprModel>(_1b04eea9d_StructSubIdentExprModel{._field_Token=(*(_225982_tok)), ._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_225947_d))))), ._field_Field=(*(_2259100_f)), ._field_Owner=(*(_225962_s))});;
	(*(_225947_d)).get()._field_Model=jule::Any(_226017_model, &__jule_any_type71);
	(*(_225947_d)).get()._field_Kind=(*(_2259100_f)).get()._field_Kind;
	(*(_225947_d)).get()._field_Lvalue=true;
	if (((*(_2259100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_225947_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b3e2e2ed:;
				{
					jule::Ptr<_1b055134c_scopeChecker> _227421_scope = _1b055443d_getRoot((*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0));;
					(*(_225947_d)).get()._field_Mutable=((_227421_scope.get()._field_owner != nullptr) && (_227421_scope.get()._field_owner.get()._field_Owner == (*(_225962_s))));
				}
			}
			_match_end_1b3e2e298:;
		};
	};
	return (*(_225947_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0630a14_evalStructSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _228241_d, jule::Ptr<_1b04e5951_StructIns> _228255_s, jule::Ptr<_1b04c91c6_SubIdentExpr> _228274_si, jule::Bool _228293_ref) {
	jule::Ptr<_1b04e4da1_FieldIns> _228317_f = _1b04e6d09_FindField(_228255_s.ptr(), _228274_si.get()._field_Ident.get()._field_Kind);;
	if ((_228317_f != nullptr)) {
		if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _228317_f.get()._field_Decl.get()._field_Public, _228317_f.get()._field_Decl.get()._field_Token)))) {
			_1b06148b6_pushErr(_self_, _228274_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_228317_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1b06304a3_evalStructSubIdentField(_self_, &(_228241_d), &(_228255_s), &(_228274_si.get()._field_Ident), &(_228317_f));;
	};
	;
	jule::Ptr<_1b05088ed_Fn> _229317_m = _1b04e69b8_FindMethod(_228255_s.ptr(), _228274_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_229317_m == nullptr)) {
		_1b06148b6_pushErr(_self_, _228274_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_228255_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_228274_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), _229317_m.get()._field_Public, _229317_m.get()._field_Token)))) {
		_1b06148b6_pushErr(_self_, _228274_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_229317_m.get()._field_Ident, &__jule_any_type5)}));
		_1b0614c29_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1b05077cb_IsRef(_229317_m.get()._field_Params[0LL].ptr()) && (!(_228293_ref)))) {
		_1b06148b6_pushErr(_self_, _228274_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1b0619756_checkDeprecated(_self_, &(_229317_m.get()._field_Directives), _228274_si.get()._field_Ident);
	jule::Ptr<_1b050b802_FnIns> _230917_ins = _1b050a15d_instance(_229317_m);;
	_230917_ins.get()._field_Owner=_228255_s;
	_1b38a93c7_pushReference(_self_, &(_230917_ins));
	jule::Ptr<_1b0612672_Data> _231217_model = jule::new_ptr<_1b0612672_Data>((*(_228241_d)));;
	_228241_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04eea9d_StructSubIdentExprModel>(_1b04eea9d_StructSubIdentExprModel{._field_Token=_228274_si.get()._field_Ident, ._field_Expr=_231217_model, ._field_Method=_230917_ins, ._field_Owner=_228255_s}), &__jule_any_type71);
	_228241_d.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_230917_ins, 1)});
	return _228241_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0630e10_evalSliceSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _232340_d, jule::Ptr<_1aa49b1d1_Token> _232354_ident) {
	{
		auto &_match_expr{ _232354_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b3e39c43:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b050a856_ParamIns>>::make({jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1b060b209_lenKind()}),jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1b060b209_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b07341bc_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_232340_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1b0500cad_CommonSubIdentExprModel>(_1b0500cad_CommonSubIdentExprModel{._field_ExprKind=_232340_d.get()._field_Kind, ._field_Expr=_232340_d.get()._field_Model, ._field_Token=_232354_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b3e39e96:;
			{
				_1b06148b6_pushErr(_self_, _232354_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_232340_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_232354_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e39e1e:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063130b_evalArraySubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _236040_d, jule::Ptr<_1aa49b1d1_Token> _236054_ident) {
	{
		auto &_match_expr{ _236054_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b3e3ae20:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b050a856_ParamIns>>::make({jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1b060b209_lenKind()}),jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1b060b209_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b07341bc_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_236040_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1b0500cad_CommonSubIdentExprModel>(_1b0500cad_CommonSubIdentExprModel{._field_ExprKind=_236040_d.get()._field_Kind, ._field_Expr=_236040_d.get()._field_Model, ._field_Token=_236054_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b3e3da38:;
			{
				_1b06148b6_pushErr(_self_, _236054_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_236040_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_236054_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e3d9b1:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063164c_evalIntTypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _239736_ident) {
	;
	{
		auto &_match_expr{ _239736_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e42696:;
			{
				jule::Ptr<_1ad37cdb2_Const> _240121_c = static__1ad37d302_NewI64(static_cast<jule::I64>(_1ad3760ca_MaxI(jule::Str("int", 3))));;
				_240121_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ebce_primInt, ._field_Model=jule::Any(_240121_c, &__jule_any_type19), ._field_Constant=_240121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e43433:;
			{
				jule::Ptr<_1ad37cdb2_Const> _240921_c = static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad3765c5_Min(jule::Str("int", 3)))));;
				_240921_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ebce_primInt, ._field_Model=jule::Any(_240921_c, &__jule_any_type19), ._field_Constant=_240921_c});;
			}
		}
		else {
			_case_begin_1b3e428c7:;
			{
				_1b06148b6_pushErr(_self_, _239736_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_239736_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e42872:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063198d_evalUintTypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _242237_ident) {
	;
	{
		auto &_match_expr{ _242237_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e42ad6:;
			{
				jule::Ptr<_1ad37cdb2_Const> _242621_c = static__1ad37d5bb_NewU64(static_cast<jule::U64>(_1ad376394_MaxU(jule::Str("uint", 4))));;
				_242621_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e805_primUint, ._field_Model=jule::Any(_242621_c, &__jule_any_type19), ._field_Constant=_242621_c});;
			}
		}
		else {
			_case_begin_1b3e45e91:;
			{
				_1b06148b6_pushErr(_self_, _242237_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_242237_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e45e3b:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0631cce_evalI8TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _243935_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243935_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e48ec7:;
			{
				jule::Ptr<_1ad37cdb2_Const> _244521_c = static__1ad37d302_NewI64(127LL);;
				_244521_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ee98_primI8, ._field_Model=jule::Any(_244521_c, &__jule_any_type19), ._field_Constant=_244521_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e49747:;
			{
				jule::Ptr<_1ad37cdb2_Const> _245321_c = static__1ad37d302_NewI64(-128LL);;
				_245321_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ee98_primI8, ._field_Model=jule::Any(_245321_c, &__jule_any_type19), ._field_Constant=_245321_c});;
			}
		}
		else {
			_case_begin_1b3e48b64:;
			{
				_1b06148b6_pushErr(_self_, _243935_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_243935_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e48b0e:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0632120_evalI16TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _246636_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e4ca25:;
			{
				jule::Ptr<_1ad37cdb2_Const> _247221_c = static__1ad37d302_NewI64(32767LL);;
				_247221_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0730262_primI16, ._field_Model=jule::Any(_247221_c, &__jule_any_type19), ._field_Constant=_247221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e4d295:;
			{
				jule::Ptr<_1ad37cdb2_Const> _248021_c = static__1ad37d302_NewI64(-32768LL);;
				_248021_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0730262_primI16, ._field_Model=jule::Any(_248021_c, &__jule_any_type19), ._field_Constant=_248021_c});;
			}
		}
		else {
			_case_begin_1b3e4c6b2:;
			{
				_1b06148b6_pushErr(_self_, _246636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_246636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e4c65c:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0632461_evalI32TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _249336_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _249336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e51573:;
			{
				jule::Ptr<_1ad37cdb2_Const> _249921_c = static__1ad37d302_NewI64(2147483647LL);;
				_249921_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b073052b_primI32, ._field_Model=jule::Any(_249921_c, &__jule_any_type19), ._field_Constant=_249921_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e51ce3:;
			{
				jule::Ptr<_1ad37cdb2_Const> _250721_c = static__1ad37d302_NewI64(-2147483648LL);;
				_250721_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b073052b_primI32, ._field_Model=jule::Any(_250721_c, &__jule_any_type19), ._field_Constant=_250721_c});;
			}
		}
		else {
			_case_begin_1b3e51210:;
			{
				_1b06148b6_pushErr(_self_, _249336_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_249336_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e511aa:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b06327a2_evalI64TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _252036_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _252036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e550c1:;
			{
				jule::Ptr<_1ad37cdb2_Const> _252621_c = static__1ad37d302_NewI64(jule::MAX_I64);;
				_252621_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b07307e5_primI64, ._field_Model=jule::Any(_252621_c, &__jule_any_type19), ._field_Constant=_252621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e55841:;
			{
				jule::Ptr<_1ad37cdb2_Const> _253421_c = static__1ad37d302_NewI64(jule::MIN_I64);;
				_253421_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b07307e5_primI64, ._field_Model=jule::Any(_253421_c, &__jule_any_type19), ._field_Constant=_253421_c});;
			}
		}
		else {
			_case_begin_1b3e54c5d:;
			{
				_1b06148b6_pushErr(_self_, _252036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_252036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e54c08:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0632ae3_evalU8TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _254735_ident) {
	;
	;
	{
		auto &_match_expr{ _254735_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e586e0:;
			{
				jule::Ptr<_1ad37cdb2_Const> _255221_c = static__1ad37d5bb_NewU64(255LLU);;
				_255221_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0730aae_primU8, ._field_Model=jule::Any(_255221_c, &__jule_any_type19), ._field_Constant=_255221_c});;
			}
		}
		else {
			_case_begin_1b3e5806e:;
			{
				_1b06148b6_pushErr(_self_, _254735_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_254735_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e58327:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0632e34_evalU16TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _256536_ident) {
	;
	;
	{
		auto &_match_expr{ _256536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e5ae2e:;
			{
				jule::Ptr<_1ad37cdb2_Const> _257021_c = static__1ad37d5bb_NewU64(65535LLU);;
				_257021_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0730d78_primU16, ._field_Model=jule::Any(_257021_c, &__jule_any_type19), ._field_Constant=_257021_c});;
			}
		}
		else {
			_case_begin_1b3e5a7ad:;
			{
				_1b06148b6_pushErr(_self_, _256536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_256536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e5aa66:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0633275_evalU32TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _258336_ident) {
	;
	;
	{
		auto &_match_expr{ _258336_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e5d66d:;
			{
				jule::Ptr<_1ad37cdb2_Const> _258821_c = static__1ad37d5bb_NewU64(4294967295LLU);;
				_258821_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0731142_primU32, ._field_Model=jule::Any(_258821_c, &__jule_any_type19), ._field_Constant=_258821_c});;
			}
		}
		else {
			_case_begin_1b3e5ceec:;
			{
				_1b06148b6_pushErr(_self_, _258336_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_258336_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e5d2a5:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b06335b6_evalU64TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _260136_ident) {
	;
	;
	{
		auto &_match_expr{ _260136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e60dac:;
			{
				jule::Ptr<_1ad37cdb2_Const> _260621_c = static__1ad37d5bb_NewU64(jule::MAX_U64);;
				_260621_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b07315b5_primU64, ._field_Model=jule::Any(_260621_c, &__jule_any_type19), ._field_Constant=_260621_c});;
			}
		}
		else {
			_case_begin_1b3e6073b:;
			{
				_1b06148b6_pushErr(_self_, _260136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_260136_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e609e4:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0633907_evalF32TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _261936_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261936_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e63d7c:;
			{
				jule::Ptr<_1ad37cdb2_Const> _262621_c = static__1ad37de18_NewF64(340282346638528860000000000000000000000.0);;
				_262621_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b073187e_primF32, ._field_Model=jule::Any(_262621_c, &__jule_any_type19), ._field_Constant=_262621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e645ec:;
			{
				jule::Ptr<_1ad37cdb2_Const> _263421_c = static__1ad37de18_NewF64(-340282346638528860000000000000000000000.0);;
				_263421_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b073187e_primF32, ._field_Model=jule::Any(_263421_c, &__jule_any_type19), ._field_Constant=_263421_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b3e64663:;
			{
				jule::Ptr<_1ad37cdb2_Const> _264221_c = static__1ad37de18_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_264221_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b073187e_primF32, ._field_Model=jule::Any(_264221_c, &__jule_any_type19), ._field_Constant=_264221_c});;
			}
		}
		else {
			_case_begin_1b3e639e7:;
			{
				_1b06148b6_pushErr(_self_, _261936_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_261936_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e6381b:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0633c48_evalF64TypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1aa49b1d1_Token> _265536_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b3e68b73:;
			{
				jule::Ptr<_1ad37cdb2_Const> _266221_c = static__1ad37de18_NewF64(jule::MAX_F64);;
				_266221_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0731b48_primF64, ._field_Model=jule::Any(_266221_c, &__jule_any_type19), ._field_Constant=_266221_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b3e693e3:;
			{
				jule::Ptr<_1ad37cdb2_Const> _267021_c = static__1ad37de18_NewF64(jule::MIN_F64);;
				_267021_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0731b48_primF64, ._field_Model=jule::Any(_267021_c, &__jule_any_type19), ._field_Constant=_267021_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b3e69459:;
			{
				jule::Ptr<_1ad37cdb2_Const> _267821_c = static__1ad37de18_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_267821_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b0731b48_primF64, ._field_Model=jule::Any(_267821_c, &__jule_any_type19), ._field_Constant=_267821_c});;
			}
		}
		else {
			_case_begin_1b3e687dd:;
			{
				_1b06148b6_pushErr(_self_, _265536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_265536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3e68612:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0634144_evalPrimStatic(_1b0614366_Eval* _self_, jule::Str _269133_kind, jule::Ptr<_1aa49b1d1_Token> _269144_ident) {
	{
		auto &_match_expr{ _269133_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b2b8db0d:;
			{
				return _1b063164c_evalIntTypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b2b89301:;
			{
				return _1b063198d_evalUintTypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b2b89367:;
			{
				return _1b0631cce_evalI8TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b2b893cd:;
			{
				return _1b0632120_evalI16TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b2b89444:;
			{
				return _1b0632461_evalI32TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b2b8e48d:;
			{
				return _1b06327a2_evalI64TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b2b8e504:;
			{
				return _1b0632ae3_evalU8TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b2b8e56a:;
			{
				return _1b0632e34_evalU16TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b2b8e5d1:;
			{
				return _1b0633275_evalU32TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b2b8d3c1:;
			{
				return _1b06335b6_evalU64TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b2b8d437:;
			{
				return _1b0633907_evalF32TypeStatic(_self_, _269144_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b2b8d49d:;
			{
				return _1b0633c48_evalF64TypeStatic(_self_, _269144_ident);;
			}
		}
		else {
			_case_begin_1b2b8d932:;
			{
				_1b06148b6_pushErr(_self_, _269144_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_269133_kind, &__jule_any_type5),jule::Any(_269144_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b2b8e14c:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0634540_evalTypeStatic(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _272337_d, jule::Ptr<_1b04c91c6_SubIdentExpr> _272351_si) {
	{
		
		if ((_1b064a19e_Prim(_272337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b93eed:;
			{
				return _1b0634144_evalPrimStatic(_self_, _1b0650968_Str(_1b064a19e_Prim(_272337_d.get()._field_Kind.ptr()).ptr()), _272351_si.get()._field_Ident);;
			}
		}
		else if ((_1b064a952_Enum(_272337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b948e4:;
			{
				return _1b062e194_evalEnumStatic(_self_, _1b064a952_Enum(_272337_d.get()._field_Kind.ptr()), _272351_si.get()._field_Ident);;
			}
		}
		else if ((_1b064abd8_TypeEnum(_272337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b9495a:;
			{
				return _1b062e590_evalTypeEnumStatic(_self_, _1b064abd8_TypeEnum(_272337_d.get()._field_Kind.ptr()), _272351_si.get()._field_Ident);;
			}
		}
		else if ((_1b064b722_Struct(_272337_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b949c1:;
			{
				return _1b062e98b_evalStructStatic(_self_, _1b064b722_Struct(_272337_d.get()._field_Kind.ptr()), _272351_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1b2b93b46:;
			{
				_1b06148b6_pushErr(_self_, _272351_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_272337_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b2b93a7a:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b2b9a345_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0532916_comptimeTypeInfo>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b053870d_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}

inline jule::Ptr<_1b0612672_Data> _1b2b9d9a8_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b05239a1_comptimeStructField>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b05252bb_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}

inline jule::Ptr<_1b0612672_Data> _1b2ba2083_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b052a018_comptimeEnumField>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b052b019_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}

inline jule::Ptr<_1b0612672_Data> _1b2ba5927_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b052c9aa_comptimeParam>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b052e6d2_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}

inline jule::Ptr<_1b0612672_Data> _1b2ba9002_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0526c5c_comptimeStatic>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b0528577_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}

inline jule::Ptr<_1b0612672_Data> _1b2bac5cc_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0538a1b_comptimeValue>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b053b05c_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}

inline jule::Ptr<_1b0612672_Data> _1b2bb0ba7_comptimeObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b053c965_comptimeFile>* _273957_ct, jule::Ptr<_1b0612672_Data>* _273977_d, jule::Ptr<_1b04c91c6_SubIdentExpr>* _273988_si) {
	jule::Ptr<_1b0612672_Data> _274017_cd = _1b053e280_subIdent((*(_273957_ct)), &((*(_273988_si)).get()._field_Ident.get()._field_Kind));;
	if ((_274017_cd == nullptr)) {
		_1b06148b6_pushErr(_self_, (*(_273988_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_273977_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273988_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _274017_cd;;
}



inline jule::Ptr<_1b0612672_Data> _1b0634de2_evalObjSubIdent(_1b0614366_Eval* _self_, jule::Ptr<_1b0612672_Data> _274738_d, jule::Ptr<_1b04c91c6_SubIdentExpr> _274752_si) {
	if (_1aa49db40_IsIgnoreIdent(_274752_si.get()._field_Ident.get()._field_Kind)) {
		_1b06148b6_pushErr(_self_, _274752_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1b064da65_comptimeTypeInfo(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98ab3:;
			{
				jule::Ptr<_1b0532916_comptimeTypeInfo> _275521_ct = _1b064da65_comptimeTypeInfo(_274738_d.get()._field_Kind.ptr());;
				return _1b2b9a345_comptimeObjSubIdent(_self_, &(_275521_ct), &(_274738_d), &(_274752_si));;
			}
		}
		else if ((_1b064c778_comptimeStructField(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98b29:;
			{
				jule::Ptr<_1b05239a1_comptimeStructField> _275821_ct = _1b064c778_comptimeStructField(_274738_d.get()._field_Kind.ptr());;
				return _1b2b9d9a8_comptimeObjSubIdent(_self_, &(_275821_ct), &(_274738_d), &(_274752_si));;
			}
		}
		else if ((_1b064cc95_comptimeEnumField(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98b90:;
			{
				jule::Ptr<_1b052a018_comptimeEnumField> _276121_ct = _1b064cc95_comptimeEnumField(_274738_d.get()._field_Kind.ptr());;
				return _1b2ba2083_comptimeObjSubIdent(_self_, &(_276121_ct), &(_274738_d), &(_274752_si));;
			}
		}
		else if ((_1b064d2b2_comptimeParam(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98c06:;
			{
				jule::Ptr<_1b052c9aa_comptimeParam> _276421_ct = _1b064d2b2_comptimeParam(_274738_d.get()._field_Kind.ptr());;
				return _1b2ba5927_comptimeObjSubIdent(_self_, &(_276421_ct), &(_274738_d), &(_274752_si));;
			}
		}
		else if ((_1b064e082_comptimeStatic(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98c6c:;
			{
				jule::Ptr<_1b0526c5c_comptimeStatic> _276721_ct = _1b064e082_comptimeStatic(_274738_d.get()._field_Kind.ptr());;
				return _1b2ba9002_comptimeObjSubIdent(_self_, &(_276721_ct), &(_274738_d), &(_274752_si));;
			}
		}
		else if ((_1b064e318_comptimeValue(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98cd3:;
			{
				jule::Ptr<_1b0538a1b_comptimeValue> _277021_ct = _1b064e318_comptimeValue(_274738_d.get()._field_Kind.ptr());;
				return _1b2bac5cc_comptimeObjSubIdent(_self_, &(_277021_ct), &(_274738_d), &(_274752_si));;
			}
		}
		else if ((_1b064e59e_comptimeFile(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2b98d5a:;
			{
				jule::Ptr<_1b053c965_comptimeFile> _277321_ct = _1b064e59e_comptimeFile(_274738_d.get()._field_Kind.ptr());;
				return _1b2bb0ba7_comptimeObjSubIdent(_self_, &(_277321_ct), &(_274738_d), &(_274752_si));;
			}
		}
		_match_end_1b2b98332:;
	};
	jule::Ptr<_1b06477a6_TypeKind> _277717_kind = _274738_d.get()._field_Kind;;
	{
		
		if ((_1b064a6bb_Ptr(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2bb3193:;
			{
				jule::Ptr<_1b065791a_Ptr> _278017_ptr = _1b064a6bb_Ptr(_274738_d.get()._field_Kind.ptr());;
				if (_1b0658454_IsUnsafe(_278017_ptr.ptr())) {
					goto _match_end_1b2bb06bd;
				};
				if (((!(_274752_si.get()._field_IsSelf)) && (!(_1b06153ab_isUnsafe(_self_))))) {
					_1b06148b6_pushErr(_self_, _274752_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_277717_kind=_1b064a6bb_Ptr(_274738_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1b064a435_Sptr(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2bb3094:;
			{
				_277717_kind=_1b064a435_Sptr(_274738_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1b2bb06bd:;
	};
	{
		
		if ((_1b064b9a8_Trait(_274738_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b2bb5b13:;
			{
				return _1b062ee42_evalTraitSubIdent(_self_, _274738_d, _1b064b9a8_Trait(_274738_d.get()._field_Kind.ptr()), _274752_si.get()._field_Ident);;
			}
		}
		else if ((_1b064b722_Struct(_277717_kind.ptr()) != nullptr)) {
			_case_begin_1b2bb5b8a:;
			{
				jule::Ptr<_1b04e5951_StructIns> _279617_s = _1b064b722_Struct(_277717_kind.ptr());;
				if (_1b064276d_isInstancedStruct(_279617_s)) {
					jule::Bool _279825_usedReferenceElem = (_1b064a435_Sptr(_274738_d.get()._field_Kind.ptr()) != nullptr);;
					return _1b0630a14_evalStructSubIdent(_self_, _274738_d, _1b064b722_Struct(_277717_kind.ptr()), _274752_si, _279825_usedReferenceElem);;
				};
			}
		}
		else if ((_1b064b205_Slc(_277717_kind.ptr()) != nullptr)) {
			_case_begin_1b2bb5c12:;
			{
				return _1b0630e10_evalSliceSubIdent(_self_, _274738_d, _274752_si.get()._field_Ident);;
			}
		}
		else if ((_1b064ae6e_Arr(_277717_kind.ptr()) != nullptr)) {
			_case_begin_1b2bb5c89:;
			{
				return _1b063130b_evalArraySubIdent(_self_, _274738_d, _274752_si.get()._field_Ident);;
			}
		}
		_match_end_1b2bb5a47:;
	};
	_1b06148b6_pushErr(_self_, _274752_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_274738_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1b0612672_Data> _1b0635233_evalSubIdent(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c91c6_SubIdentExpr> _281036_si) {
	jule::Ptr<_1b06477a6_TypeKind> _281117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_281117_prefix;
	});;
	jule::Ptr<_1b0612672_Data> _281417_d = _1b0636784_evalExprKind(_self_, _281036_si.get()._field_Expr.get()._field_Kind);;
	if ((_281417_d == nullptr)) {
		return nullptr;;
	};
	if (_281417_d.get()._field_Decl) {
		return _1b0634540_evalTypeStatic(_self_.ptr(), _281417_d, _281036_si);;
	};
	return _1b0634de2_evalObjSubIdent(_self_.ptr(), _281417_d, _281036_si);;
}



inline jule::Ptr<_1b0612672_Data> _1b0635574_evalTuple(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c6ba7_TupleExpr> _282433_tup) {
	jule::Ptr<_1b065571a_Tuple> _282517_tupT = jule::new_ptr<_1b065571a_Tuple>();;
	_282517_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>::alloc(0LL, _282433_tup.get()._field_Expr.len());
	jule::Ptr<_1b05010aa_TupleExprModel> _282817_model = jule::new_ptr<_1b05010aa_TupleExprModel>(_1b05010aa_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1b0612672_Data>>::alloc(0LL, _282433_tup.get()._field_Expr.len())});;
	jule::Bool _283217_ok = true;;
	{
		auto expr = &(_282433_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2bbdd91:;
		if (it != expr_end) {
			jule::Ptr<_1b04c5ed6_Expr> _283321_expr = *it;
			{
				jule::Ptr<_1b0612672_Data> _283421_d = _1b0637598_evalExpr(_self_, _283321_expr);;
				if ((_283421_d == nullptr)) {
					_283217_ok=false;
					goto _iter_next_1b2bbdd91;
				};
				{ jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> &__jule_push_dest = _282517_tupT.get()._field_Types; __jule_push_dest.push(_283421_d.get()._field_Kind); };
				{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = _282817_model.get()._field_Datas; __jule_push_dest.push(_283421_d); };
			}
			_iter_next_1b2bbdd91:;
			++it;
			goto _iter_begin_1b2bbdd91;
		}
		_iter_end_1b2bbdd91:;
	};
	if ((!(_283217_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_282517_tupT, 23)}), ._field_Model=jule::Any(_282817_model, &__jule_any_type88), });;
}



inline jule::Ptr<_1b0612672_Data> _1b0635970_evalMap(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b06562ba_Map> _285331_m, jule::Ptr<_1b04cb5b3_BraceLit> _285344_lit) {
	jule::Ptr<_1b04ed5e6_MapExprModel> _285417_model = jule::new_ptr<_1b04ed5e6_MapExprModel>(_1b04ed5e6_MapExprModel{._field_KeyKind=_285331_m.get()._field_Key, ._field_ValKind=_285331_m.get()._field_Val, });;
	{
		auto expr = &(_285344_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2bc21a2:;
		if (it != expr_end) {
			jule::Ptr<_1b04c5ed6_Expr> _285921_expr = *it;
			{
				{
					auto &_match_expr{ _285921_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1b2bc2911:;
						{
							goto _match_end_1b2bc2b53;
						}
					}
					else {
						_case_begin_1b2bc2ba8:;
						{
							_1b06148b6_pushErr(_self_.ptr(), _285344_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b2bc2b53:;
				};
				jule::Ptr<_1b04cbddd_KeyValPair> _286921_pair = _285921_expr.get()._field_Kind.cast_ptr<_1b04cbddd_KeyValPair>(&__jule_any_type85);;
				jule::Ptr<_1b0612672_Data> _287121_key = _1b0637598_evalExpr(_self_, _286921_pair.get()._field_Key);;
				if ((_287121_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1b0612672_Data> _287621_val = _1b0637598_evalExpr(_self_, _286921_pair.get()._field_Val);;
				if ((_287621_val == nullptr)) {
					return nullptr;;
				};
				_1b0596b34_checkAssignType(_self_.get()._field_s, false, &(_285331_m.get()._field_Key), &(_287121_key), _286921_pair.get()._field_Colon);
				_1b0596b34_checkAssignType(_self_.get()._field_s, false, &(_285331_m.get()._field_Val), &(_287621_val), _286921_pair.get()._field_Colon);
				{ jule::Slice<jule::Ptr<_1b04ed140_KeyValPairExprModel>> &__jule_push_dest = _285417_model.get()._field_Entries; __jule_push_dest.push(jule::new_ptr<_1b04ed140_KeyValPairExprModel>(_1b04ed140_KeyValPairExprModel{._field_Key=_287121_key.get()._field_Model, ._field_Val=_287621_val.get()._field_Model})); };
			}
			_iter_next_1b2bc21a2:;
			++it;
			goto _iter_begin_1b2bc21a2;
		}
		_iter_end_1b2bc21a2:;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_285331_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_285417_model, &__jule_any_type103), });;
}



inline jule::Ptr<_1b0612672_Data> _1b0635cb1_evalBraceLit(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04cb5b3_BraceLit> _289736_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b2bc7b58:;
			{
				_1b06148b6_pushErr(_self_.ptr(), _289736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b064bc3e_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b2bc74c6:;
			{
				return _1b0635970_evalMap(_self_, _1b064bc3e_Map(_self_.get()._field_prefix.ptr()), _289736_lit);;
			}
		}
		else if ((_1b064b722_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b2bc753c:;
			{
				return _1b062bc74_evalStructLitExplicit(_self_, _1b064b722_Struct(_self_.get()._field_prefix.ptr()), _289736_lit.get()._field_Exprs, _289736_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1b2bc711e:;
			{
				_1b06148b6_pushErr(_self_.ptr(), _289736_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b2bc6d55:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0636102_evalAnonFunc(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04d393e_FnDecl> _291236_decl) {
	_1b065990b_typeChecker _291317_tc = _1b065990b_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1b050b802_FnIns> _291817_ins = _1b06615d3_buildFunc(&_291317_tc, _291236_decl);;
	if ((_291817_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b2bcb035:;
			{
				jule::Ptr<_1b055134c_scopeChecker> _292421_sc = _self_.get()._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0);;
				jule::Ptr<_1b055134c_scopeChecker> _292521_scc = _1b0562cdc_newChildChecker(_292421_sc);;
				_292521_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b054eda6_scopeLabel>>>(nullptr);
				_292521_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b0550439_scopeGoto>>>(nullptr);
				_292521_scc.get()._field_owner=nullptr;
				_292521_scc.get()._field_childIndex=0LL;
				_292521_scc.get()._field_it=0LLU;
				_292521_scc.get()._field_cse=0LLU;
				_292521_scc.get()._field_owner=_291817_ins;
				_1b05a8a14_checkFnInsSc(_self_.get()._field_s.ptr(), &(_291817_ins), &(_292521_scc));
			}
		}
		else {
			_case_begin_1b2bcb4b9:;
			{
				_1b05a9130_checkFnIns(_self_.get()._field_s, &(_291817_ins));
			}
		}
		_match_end_1b2bcb464:;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_291817_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1b04ecc66_AnonFnExprModel>(_1b04ecc66_AnonFnExprModel{._field_Func=_291817_ins, ._field_Global=_1b0615642_isGlobal(_self_.ptr())}), &__jule_any_type104), });;
}



inline jule::Ptr<_1b0612672_Data> _1b0636443_evalBinop(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c967c_BinopExpr> _294733_op) {
	_1b06399eb_binaryEval _294817_bs = static__1b063a0d4_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1b0650627_Prim> _295117_prim = _1b064a19e_Prim(_self_.get()._field_prefix.ptr());;
		if (((_295117_prim == nullptr) || (!(_1ad37c7b8_IsNum(_1b0650968_Str(_295117_prim.ptr())))))) {
			jule::Ptr<_1b06477a6_TypeKind> _295325_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_295325_prefix;
			});;
			return _1b0640a79_eval(&_294817_bs, &(_294733_op));;
		};
	};
	return _1b0640a79_eval(&_294817_bs, &(_294733_op));;
}



inline jule::Ptr<_1b0612672_Data> _1b0636784_evalExprKind(jule::Ptr<_1b0614366_Eval> _self_, jule::Any _296236_kind) {
	{
		auto &_match_expr{ _296236_kind };
		
		if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b2bd33c2:;
			{
				jule::Ptr<_1b04c62d3_RangeExpr> _296521_e = _296236_kind.cast_ptr<_1b04c62d3_RangeExpr>(&__jule_any_type105);;
				return _1b0636784_evalExprKind(_self_, _296521_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b2bd30c5:;
			{
				return _1b0616de6_evalLit(_self_.ptr(), _296236_kind.cast_ptr<_1b04c7081_LitExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b2bd3603:;
			{
				return _1b061b89b_evalIdent(_self_.ptr(), _296236_kind.cast_ptr<_1b04c7911_IdentExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b2bd367a:;
			{
				return _1b061bbdc_evalUnary(_self_, _296236_kind.cast_ptr<_1b04c8093_UnaryExpr>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b2bd3702:;
			{
				return _1b061c02d_evalVariadic(_self_, _296236_kind.cast_ptr<_1b04c846c_VariadicExpr>(&__jule_any_type82));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b2bd3779:;
			{
				return _1b061c36e_evalUnsafe(_self_, _296236_kind.cast_ptr<_1b04c745a_UnsafeExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b2bd3856:;
			{
				return _1b061cea7_evalSliceExpr(_self_, _296236_kind.cast_ptr<_1b04cc5d6_SliceExpr>(&__jule_any_type100));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b2bd38cd:;
			{
				return _1b062164d_evalIndexing(_self_, _296236_kind.cast_ptr<_1b04cd076_IndexingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b2bd3955:;
			{
				return _1b062297e_evalSlicing(_self_, _296236_kind.cast_ptr<_1b04cd6d6_SlicingExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b2bd39cc:;
			{
				return _1b062b47c_evalCast(_self_, _296236_kind.cast_ptr<_1b04c8846_CastExpr>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b2bd3a54:;
			{
				return _1b062b7bd_evalNsSelection(_self_.ptr(), _296236_kind.cast_ptr<_1b04c8c20_NsSelectionExpr>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b2bd3acb:;
			{
				return _1b062c0b5_evalStructLit(_self_, _296236_kind.cast_ptr<_1b04cb10c_StructLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b2bd3b53:;
			{
				return _1b062c68c_evalType(_self_.ptr(), _296236_kind.cast_ptr<_1b04c1ba2_TypeDecl>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b2bd3bca:;
			{
				return _1b062dc98_evalFnCall(_self_, _296236_kind.cast_ptr<_1b04c9cdc_FnCallExpr>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b2bd3c52:;
			{
				return _1b0635233_evalSubIdent(_self_, _296236_kind.cast_ptr<_1b04c91c6_SubIdentExpr>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b2bd3cc9:;
			{
				return _1b0635574_evalTuple(_self_, _296236_kind.cast_ptr<_1b04c6ba7_TupleExpr>(&__jule_any_type87));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b2bd3d51:;
			{
				return _1b0635cb1_evalBraceLit(_self_, _296236_kind.cast_ptr<_1b04cb5b3_BraceLit>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b2bd3dc8:;
			{
				return _1b0636102_evalAnonFunc(_self_, _296236_kind.cast_ptr<_1b04d393e_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b2bd3e50:;
			{
				return _1b0636443_evalBinop(_self_, _296236_kind.cast_ptr<_1b04c967c_BinopExpr>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1b2bd31e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b2bd2b52:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0636ac5_eval1(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c5ed6_Expr> _301029_expr) {
	jule::Ptr<_1b0612672_Data> _301117_d = _1b0636784_evalExprKind(_self_, _301029_expr.get()._field_Kind);;
	if (((_301117_d == nullptr) || (_301117_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1b064b48b_Fn(_301117_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3c9d788:;
			{
				jule::Ptr<_1b050b802_FnIns> _301821_f = _1b064b48b_Fn(_301117_d.get()._field_Kind.ptr());;
				if (_1b050cc87_IsBuiltin(_301821_f.ptr())) {
					_1b058e126_pushErr(_self_.get()._field_s.ptr(), _301029_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1b3c9d07e;
				};
				if ((_301821_f.get()._field_Generics.len() != _301821_f.get()._field_Decl.get()._field_Generics.len())) {
					_1b058e126_pushErr(_self_.get()._field_s.ptr(), _301029_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_301821_f.get()._field_Decl.get()._field_Statically)) && _1b0509107_IsMethod(_301821_f.get()._field_Decl.ptr()))) {
					_1b058e126_pushErr(_self_.get()._field_s.ptr(), _301029_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b3c9d07e:;
	};
	return _301117_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0636e16_eval(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c5ed6_Expr> _303728_expr) {
	jule::Ptr<_1b0612672_Data> _303817_d = _1b0636ac5_eval1(_self_, _303728_expr);;
	if ((_303817_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1b064c25b_comptime(_303817_d.get()._field_Kind.ptr()))) {
		_1b058e126_pushErr(_self_.get()._field_s.ptr(), _303728_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303817_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0637257_evalExpr1(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c5ed6_Expr> _305233_expr) {
	jule::Ptr<_1b0612672_Data> _305317_d = _1b0636ac5_eval1(_self_, _305233_expr);;
	{
		
		if ((_305317_d == nullptr)) {
			_case_begin_1b3ca441a:;
			{
				return nullptr;;
			}
		}
		else if (_305317_d.get()._field_Decl) {
			_case_begin_1b3ca4492:;
			{
				_1b06148b6_pushErr(_self_.ptr(), _305233_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b3ca434e:;
			{
				return _305317_d;;
			}
		}
		_match_end_1b3ca42d8:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0637598_evalExpr(jule::Ptr<_1b0614366_Eval> _self_, jule::Ptr<_1b04c5ed6_Expr> _306832_expr) {
	jule::Ptr<_1b0612672_Data> _306917_d = _1b0636e16_eval(_self_, _306832_expr);;
	{
		
		if ((_306917_d == nullptr)) {
			_case_begin_1b3ca5e00:;
			{
				return nullptr;;
			}
		}
		else if (_306917_d.get()._field_Decl) {
			_case_begin_1b3ca5e77:;
			{
				_1b06148b6_pushErr(_self_.ptr(), _306832_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b3ca5d34:;
			{
				return _306917_d;;
			}
		}
		_match_end_1b3ca5cbd:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0614366_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1b0637a60_unaryEval static__1b0637ea0_new(jule::Ptr<_1b0614366_Eval> _308923_e) {
	return _1b0637a60_unaryEval{._field_e=_308923_e, };;
}



inline void _1b063819d_minus(_1b0637a60_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b3ca775e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3ca7462:;
			{
				if ((!(_1ad37c7b8_IsNum(_1b0647b6e_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b064b722_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3ca74c8:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b3ca662b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b3ca730d:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1b0613046_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ad3828bc_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cab169:;
				{
					_1ad3818ee_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1ad3802c1_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ad381d83_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cab367:;
				{
					_1ad380d2c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ad37e787_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ad382119_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cab3cd:;
				{
					_1ad380d2c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1ad380557_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1b3caacc3:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.minus, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3127:17"));;
				}
			}
			_match_end_1b3caac18:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b063839b_plus(_1b0637a60_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b3cb00d5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3caeca5:;
			{
				if ((!(_1ad37c7b8_IsNum(_1b0647b6e_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b064b722_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3caed1b:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b3caec3e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b3caeb73:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1b0613046_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ad3828bc_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cb39e0:;
				{
					_1ad3818ee_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1ad3802c1_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ad381d83_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cb3bdd:;
				{
					_1ad380d2c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ad37e787_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ad382119_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cb3c54:;
				{
					_1ad380d2c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1ad380557_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1b3cb3649:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.plus, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3172:17"));;
				}
			}
			_match_end_1b3cb358e:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b0638599_caret(_1b0637a60_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b3cb7939:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cb7609:;
			{
				if ((!(_1ad37c1ad_IsInt(_1b0647b6e_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1b064b722_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cb7670:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b3cb7593:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b3cb74c7:;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1b0613046_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ad381d83_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cbb344:;
				{
					_1ad380d2c_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1ad37e787_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1ad382119_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cbb542:;
				{
					_1ad3810d5_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1ad37ea1d_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else {
				_case_begin_1b3cbae9d:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.caret, this panic call should be unreachable", 82) + jule::Str("\nlocation: std/jule/sema/eval.jule:3215:17"));;
				}
			}
			_match_end_1b3cbade3:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b0638797_excl(_1b0637a60_unaryEval* _self_) {
	jule::Ptr<_1b0650627_Prim> _322913_t = _1b064a19e_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_322913_t == nullptr) || (!(_1b0653828_IsBool(_322913_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
	if (_1b0613046_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1ad3823a0_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b3cc0e4d:;
				{
					_1ad38138d_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1ad37eca4_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			else {
				_case_begin_1b3cc0aa7:;
				{
					jule::panic(jule::Str("unimplemented constant type for unary.excl, this panic call should be unreachable", 81) + jule::Str("\nlocation: std/jule/sema/eval.jule:3243:17"));;
				}
			}
			_match_end_1b3cc09db:;
		};
		return;;
	};
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1b0638995_star(_1b0637a60_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1b064a6bb_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cc3acc:;
			{
				if ((!(_1b06153ab_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1b065791a_Ptr> _326821_t = _1b064a6bb_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1b0658454_IsUnsafe(_326821_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_326821_t.get()._field_Elem;
				(*(_self_))._field_d.get()._field_Mutable=true;
			}
		}
		else if ((_1b064a435_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3cc37ad:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1b064a435_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1b3cc3747:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b3cc29ee:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1b0638b93_amper(_1b0637a60_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b3cca243:;
			{
				jule::Ptr<_1b04eacca_StructLitExprModel> _328921_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1b04eacca_StructLitExprModel>(&__jule_any_type101);;
				_1b06418d2_makeStructLitAlloc(&((*(_self_))._field_d), &(_328921_lit));
			}
		}
		else {
			_case_begin_1b3cc7b8b:;
			{
				{
					
					if (_1b0663937_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b3cc7828:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b065791a_Ptr>(_1b065791a_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1b3cc8197:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1b3cc80cb:;
				};
			}
		}
		_match_end_1b3cc7b36:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Mutable=true;
}



inline void _1b0638d91_typeDecl(_1b0637a60_unaryEval* _self_) {
	_1b065990b_typeChecker _331317_tc = _1b065990b_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b3ccb7e9:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b065eceb_buildPtrFromType(&_331317_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3ccdeb1:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b065e669_buildSptrFromType(&_331317_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1b3ccc94e:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b3ccc8e9:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1b063908e_evalData(_1b0637a60_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3cd13d1:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _333621_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1b0636e16_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_333621_prefix;
			}
		}
		else {
			_case_begin_1b3cd0ee6:;
			{
				(*(_self_))._field_d=_1b0636e16_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1b3cd0e6e:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b06393d0_eval(_1b0637a60_unaryEval* _self_, jule::Ptr<_1b04c8093_UnaryExpr> _334527_u) {
	(*(_self_))._field_u=_334527_u;
	_1b063908e_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1b0638d91_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1b06477a6_TypeKind> _335613_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b3cd511b:;
			{
				_1b063819d_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b3cd4d1e:;
			{
				_1b063839b_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b3cd4d85:;
			{
				_1b0638599_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b3cd4deb:;
			{
				_1b0638797_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b3cd4e62:;
			{
				_1b0638995_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3cd546d:;
			{
				_1b0638b93_amper(_self_);
			}
		}
		else {
			_case_begin_1b3cd4ca8:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b3cd4c53:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b3cd54d4:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str(_335613_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1b0613046_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b3cd6c44:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1b3cd6bde:;
	};
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0637a60_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1b06399eb_binaryEval static__1b063a0d4_newPlain(jule::Ptr<_1b0614366_Eval> _339328_e) {
	return _1b06399eb_binaryEval{._field_e=_339328_e, };;
}



inline _1b06399eb_binaryEval static__1b063a425_new(jule::Ptr<_1b0614366_Eval> _339923_e, jule::Ptr<_1aa49b1d1_Token> _339937_op) {
	return _1b06399eb_binaryEval{._field_e=_339923_e, ._field_op=_339937_op};;
}



inline jule::Bool _1b063a6ab_checkTypeCompatibility(_1b06399eb_binaryEval* _self_) {
	return _1b05970da_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1b063a942_checkStructCommonOperatorCompatibility(_1b06399eb_binaryEval* _self_) {
	jule::Ptr<_1b050b802_FnIns> _341317_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b3cdadd0:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b3cdc3cb:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b3cdc442:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b3cdb2ed:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b3cdb364:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b3cdb3ca:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b3cdb441:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3cdc530:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b3cdc596:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b3cdc60c:;
			{
				_341317_overload=_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b3cdb287:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b3cdb232:;
	};
	if ((_341317_overload == nullptr)) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1b050a856_ParamIns> _344517_p = _341317_overload.get()._field_Params[1LL];;
	return _1b0596b34_checkAssignType((*(_self_))._field_e.get()._field_s, _344517_p.get()._field_Decl.get()._field_Reference, &(_344517_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1b0612672_Data> _1b063abc8_evalComptimeTypeInfo(_1b06399eb_binaryEval* _self_) {
	jule::Ptr<_1b0532916_comptimeTypeInfo> _345017_r = _1b064da65_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_345017_r == nullptr)) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0532916_comptimeTypeInfo> _345517_l = _1b064da65_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b3ce6eeb:;
			{
				jule::Ptr<_1ad37cdb2_Const> _345821_constant = static__1ad37d885_NewBool(_1b0647eb0_Equal(_345517_l.get()._field_base, _345017_r.get()._field_base));;
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_345821_constant, &__jule_any_type19), ._field_Constant=_345821_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3ce8360:;
			{
				jule::Ptr<_1ad37cdb2_Const> _346521_constant = static__1ad37d885_NewBool((!(_1b0647eb0_Equal(_345517_l.get()._field_base, _345017_r.get()._field_base))));;
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, ._field_Model=jule::Any(_346521_constant, &__jule_any_type19), ._field_Constant=_346521_constant});;
			}
		}
		else {
			_case_begin_1b3ce723d:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3ce47ac:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063ae5e_evalNil(_1b06399eb_binaryEval* _self_) {
	if ((!(_1b0649665_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3cea83a:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3ceb83b:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3ceb7d6:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063b1e5_evalEnum(_1b06399eb_binaryEval* _self_) {
	jule::Ptr<_1b051e392_Enum> _349617_enm = _1b064a952_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3ced772:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _350021_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1b064a952_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_350021_rkind=_1b064a952_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1b05970da_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_349617_enm.get()._field_Kind.get()._field_Kind), &(_350021_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		_match_end_1b3ced71c:;
	};
	if (((_1b064a952_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_349617_enm != _1b064a952_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_349617_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3cecd8c:;
			{
				if ((!(_1ad37c7b8_IsNum(_1b0647b6e_Str(_349617_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_349617_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3d0348b:;
			{
				jule::Ptr<_1b051d825_EnumItem> _353017_first = _349617_enm.get()._field_Items[0LL];;
				{
					
					if (_1ad381d83_IsI64(_353017_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b3d0604e:;
						{
							if ((_1ad37e787_ReadI64(_353017_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_1b3d08e31;
							};
							goto _julec_label_1b3d07a9a;
						}
					}
					else if (_1ad382119_IsU64(_353017_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b3d060c6:;
						{
							if ((_1ad37ea1d_ReadU64(_353017_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_1b3d08e31;
							};
							goto _julec_label_1b3d07a9a;
						}
					}
					else {
						_case_begin_1b3d05b64:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3543:17"));;
						}
					}
					_match_end_1b3d05aed:;
				};
				_julec_label_1b3d07a9a:;
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_349617_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1b0614c29_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_1b3d08e31:;
				goto _case_begin_1b3d03502;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b3d03502:;
			{
				if (((_1b064a19e_Prim(_349617_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1ad37c1ad_IsInt(_1b0650968_Str(_1b064a19e_Prim(_349617_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_349617_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b3d025cd:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_349617_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d02578:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063b47b_evalTypeEnum(_1b06399eb_binaryEval* _self_) {
	jule::Ptr<_1b0520a9c_TypeEnum> _356317_enm = _1b064abd8_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d0d3a8:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d0c7e7:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0520ddd_Str(_356317_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d0cee0:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063b712_evalSptr(_1b06399eb_binaryEval* _self_) {
	if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d0e1ab:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d0ed6b:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d0ed16:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063b998_evalPtr(_1b06399eb_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(53LLU) || _match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b3d11477:;
			{
				if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b3d12984:;
			{
				if ((_1b064a6bb_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1b0658454_IsUnsafe(_1b064a6bb_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1b0642ae2_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b3d11235:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d111d0:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063bc2e_evalArr(_1b06399eb_binaryEval* _self_) {
	if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d0bcd0:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d17a00:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d1799a:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063beb5_evalSlc(_1b06399eb_binaryEval* _self_) {
	if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d18ca9:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d19969:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d19914:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063c24b_evalStruct(_1b06399eb_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b3d1ad99:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b3d1ae21:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b3d1b5b4:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3d1b62a:;
			{
				if ((_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d1b691:;
			{
				if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		_match_end_1b3d1accd:;
	};
	if ((!(_1b063a942_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1b0612672_Data> _1b063c4d2_evalTrait(_1b06399eb_binaryEval* _self_) {
	if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d2418d:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d248ec:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d24897:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063c768_evalAny(_1b06399eb_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d26008:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d25cb6:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d25c61:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063c9ee_evalBool(_1b06399eb_binaryEval* _self_) {
	if ((!(_1b063a6ab_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(54LLU) || _match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b3d2745a:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b3d2811a:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d280b5:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063cc85_evalStr(_1b06399eb_binaryEval* _self_) {
	jule::Str _376217_rk = _1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_376217_rk.equal("str", 3))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_376217_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b3d2b4b4:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3d2c075:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		else {
			_case_begin_1b3d2b00d:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d2a4d5:;
	};
}



inline void _1b063ce83_setTypeToGreater(_1b06399eb_binaryEval* _self_) {
	jule::Ptr<_1b0650627_Prim> _378713_lp = _1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1b0650627_Prim> _378813_rp = _1b064a19e_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1b0613046_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1b0613046_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_378813_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_1b3d30a07;
	};
	if (_1b0613046_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_378713_lp.get()._field_Kind;
		return;;
	};
	_julec_label_1b3d30a07:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1b0613046_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_378813_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1ad37aa80_IsGreater(_378813_rp.get()._field_Kind, _378713_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1b0613046_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_378813_rp.get()._field_Kind;
		};
	};
}



inline void _1b063d23b_checkModData(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b0612672_Data>* _382036_d) {
	if ((!(_1b0613046_IsConst((*(_382036_d)).ptr())))) {
		if (((_1b064a19e_Prim((*(_382036_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1ad37c1ad_IsInt(_1b064a19e_Prim((*(_382036_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1b05e8768_sigAssignable(jule::Str("i64", 3), _382036_d)) {
			_case_begin_1b3d3669a:;
			{
				_1ad380d2c_SetI64((*(_382036_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64((*(_382036_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1b05e8b31_unsigAssignable(jule::Str("u64", 3), _382036_d)) {
			_case_begin_1b3d36711:;
			{
				_1ad3810d5_SetU64((*(_382036_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64((*(_382036_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1b3d34e3a:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b3d34dd5:;
	};
}



inline void _1b063d439_mod(_1b06399eb_binaryEval* _self_) {
	_1b063d23b_checkModData(_self_, &((*(_self_))._field_l));
	_1b063d23b_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1b063d835_numbersAreCompatibile(_1b06399eb_binaryEval* _self_, jule::Str* _384237_lk, jule::Str* _384247_rk) {
	if ((!(_1ad37c7b8_IsNum((*(_384247_rk)))))) {
		return false;;
	};
	if ((_1b0613046_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_384237_lk)).equal("f32", 3)) {
		if ((_1b0613046_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_384247_rk)).equal("f32", 3);;
	};
	if ((*(_384237_lk)).equal("f64", 3)) {
		if ((_1b0613046_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_384247_rk)).equal("f64", 3);;
	};
	if ((_1b0613046_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_384237_lk)) == (*(_384247_rk)));;
}



inline jule::Ptr<_1b0612672_Data> _1b063dabb_evalFloat(_1b06399eb_binaryEval* _self_) {
	jule::Str _386813_lk = _1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _386913_rk = _1b064a19e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1b063d835_numbersAreCompatibile(_self_, &(_386813_lk), &(_386913_rk))))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386813_lk, &__jule_any_type5),jule::Any(_386913_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b3d3e131:;
			{
				if (((!(_1b0613046_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b05e8ea5_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386813_lk, &__jule_any_type5),jule::Any(_386913_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1b0613046_IsConst((*(_self_))._field_r.ptr()))) || (!(_1b05e8ea5_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386813_lk, &__jule_any_type5),jule::Any(_386913_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1ad380d2c_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1ad3810d5_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1b0642394_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b3d3e0cb:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3d3e670:;
			{
				_1b063ce83_setTypeToGreater(_self_);
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		_match_end_1b3d3e61a:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b3d3d592:;
			{
				_1b063ce83_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b3d45764:;
			{
				if ((!(_1ad37c1ad_IsInt(_386913_rk)))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_386813_lk, &__jule_any_type5),jule::Any(_386913_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1b063d439_mod(_self_);
				_1b063ce83_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b3d44d5c:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d44d07:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063dd52_evalInt(_1b06399eb_binaryEval* _self_) {
	jule::Str _393213_lk = _1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _393313_rk = _1b064a19e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(56LLU) || _match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b3d48723:;
			{
				if (((!(_1ad37c1ad_IsInt(_393213_lk))) || (!(_1ad37c1ad_IsInt(_393313_rk))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_393213_lk, &__jule_any_type5),jule::Any(_393313_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1b0642394_isOkForShifting(&((*(_self_))._field_r))))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b3d489a9:;
	};
	if ((!(_1b063d835_numbersAreCompatibile(_self_, &(_393213_lk), &(_393313_rk))))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_393213_lk, &__jule_any_type5),jule::Any(_393313_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU) || _match_expr == static_cast<jule::U64>(51LLU) || _match_expr == static_cast<jule::U64>(69LLU) || _match_expr == static_cast<jule::U64>(70LLU) || _match_expr == static_cast<jule::U64>(52LLU) || _match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3d4b7e2:;
			{
				return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e272_primBool, });;
			}
		}
		_match_end_1b3d4b78c:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(60LLU) || _match_expr == static_cast<jule::U64>(61LLU) || _match_expr == static_cast<jule::U64>(62LLU) || _match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(65LLU) || _match_expr == static_cast<jule::U64>(66LLU) || _match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b3d48aec:;
			{
				_1b063ce83_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b3d4d65c:;
			{
				_1b063d439_mod(_self_);
				_1b063ce83_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b3d4c914:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d4c8ae:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063e0d8_evalPrim(_1b06399eb_binaryEval* _self_) {
	jule::Ptr<_1b0650627_Prim> _398913_prim = _1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1b0653828_IsBool(_398913_prim.ptr())) {
			_case_begin_1b3d5087e:;
			{
				return _1b063c9ee_evalBool(_self_);;
			}
		}
		else if (_1b0653aae_IsStr(_398913_prim.ptr())) {
			_case_begin_1b3d50906:;
			{
				return _1b063cc85_evalStr(_self_);;
			}
		}
		_match_end_1b3d50807:;
	};
	if ((_1b064a19e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0650968_Str(_398913_prim.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1ad37c4ee_IsFloat(_398913_prim.get()._field_Kind)) {
			_case_begin_1b3d52908:;
			{
				return _1b063dabb_evalFloat(_self_);;
			}
		}
		else if (_1ad37c1ad_IsInt(_398913_prim.get()._field_Kind)) {
			_case_begin_1b3d52980:;
			{
				return _1b063dd52_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b3d5285e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3d509b1:;
	};
}



inline void _1b063e2d6_checkSpecialCases(_1b06399eb_binaryEval* _self_) {
	if (((!(_1b0648db2_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1b0648895_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1b0648db2_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1b0648895_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1b0612672_Data> _1b063e56c_evalOp(_1b06399eb_binaryEval* _self_) {
	_1b063e2d6_checkSpecialCases(_self_);
	{
		
		if (_1b0648b2b_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b3d56ba4:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_1b064da65_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d56577:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d56d4c;
			}
		}
		else if ((_1b064da65_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d56d4c:;
			{
				return _1b063abc8_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1b064a19e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1b0653d45_IsAny(_1b064a19e_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b3d57b2d:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d57b94;
			}
		}
		else if (_1b0648895_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1b3d57b94:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d57c82;
			}
		}
		else if (_1b0648895_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b3d57c82:;
			{
				return _1b063ae5e_evalNil(_self_);;
			}
		}
		else if (((_1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1b0653d45_IsAny(_1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b3d57ce8:;
			{
				return _1b063c768_evalAny(_self_);;
			}
		}
		else if ((_1b064abd8_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d57d5e:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d57dc5;
			}
		}
		else if ((_1b064abd8_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d57dc5:;
			{
				return _1b063b47b_evalTypeEnum(_self_);;
			}
		}
		else if ((_1b064a952_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d57e3b:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d57ea2;
			}
		}
		else if ((_1b064a952_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d57ea2:;
			{
				return _1b063b1e5_evalEnum(_self_);;
			}
		}
		else if ((_1b064a435_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d58029:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d580a1;
			}
		}
		else if ((_1b064a435_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d580a1:;
			{
				return _1b063b712_evalSptr(_self_);;
			}
		}
		else if ((_1b064a6bb_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d58128:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d581a0;
			}
		}
		else if ((_1b064a6bb_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d581a0:;
			{
				return _1b063b998_evalPtr(_self_);;
			}
		}
		else if ((_1b064ae6e_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d58227:;
			{
				return _1b063bc2e_evalArr(_self_);;
			}
		}
		else if ((_1b064b205_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d5829e:;
			{
				return _1b063beb5_evalSlc(_self_);;
			}
		}
		else if ((_1b064b9a8_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d58326:;
			{
				({
					jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b3d5839d;
			}
		}
		else if ((_1b064b9a8_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d5839d:;
			{
				return _1b063c4d2_evalTrait(_self_);;
			}
		}
		else if ((_1b064b722_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d58425:;
			{
				return _1b063c24b_evalStruct(_self_);;
			}
		}
		else if ((_1b064a19e_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3d5849c:;
			{
				return _1b063e0d8_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b3d569a6:;
			{
				_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1b0647b6e_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b3d56940:;
	};
}



inline void _1b063e825_evalConst(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b0612672_Data>* _408033_d) {
	{
		
		if (((*(_408033_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1b3d67885:;
			{
				return;;
			}
		}
		else if ((!(_1b0613046_IsConst((*(_self_))._field_l.ptr()))) || (!(_1b0613046_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b3d67ad8:;
			{
				(*(_408033_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1b3d677a8:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b3d69678:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad383967_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b3d696de:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool((!(_1ad383967_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(55LLU)) {
			_case_begin_1b3d69755:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad383626_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b3d697bb:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad3832d5_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(70LLU)) {
			_case_begin_1b3d69832:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad38443a_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(69LLU)) {
			_case_begin_1b3d69898:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad383ca8_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(52LLU)) {
			_case_begin_1b3d6990e:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad38477b_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(53LLU)) {
			_case_begin_1b3d69975:;
			{
				(*(_408033_d)).get()._field_Constant=static__1ad37d885_NewBool(_1ad3840e9_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(60LLU)) {
			_case_begin_1b3d699db:;
			{
				_1ad384abc_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(61LLU)) {
			_case_begin_1b3d69a52:;
			{
				_1ad384e0d_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b3d69ab8:;
			{
				_1ad38524e_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b3d69b2e:;
			{
				jule::Bool _411917_ok = _1ad385590_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_411917_ok)) && (_1ad380a74_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1b0650627_Prim> _412421_prim = _1b064a19e_Prim((*(_408033_d)).get()._field_Kind.ptr());;
				{
					
					if (_1ad37bad6_IsSigInt(_412421_prim.get()._field_Kind)) {
						_case_begin_1b3d76520:;
						{
							_1ad380d2c_SetI64((*(_408033_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64((*(_408033_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1ad37bde4_IsUnsigInt(_412421_prim.get()._field_Kind)) {
						_case_begin_1b3d76597:;
						{
							_1ad3810d5_SetU64((*(_408033_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64((*(_408033_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1b3d76487:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b3d69ba6:;
			{
				jule::Bool _413217_ok = _1ad3858d1_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_413217_ok)) && (_1ad380a74_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(66LLU)) {
			_case_begin_1b3d69c2d:;
			{
				_1ad386063_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b3d69ca5:;
			{
				_1ad385c22_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b3d69d2c:;
			{
				_1ad3863a4_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(56LLU)) {
			_case_begin_1b3d69da4:;
			{
				_1ad3866e5_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(57LLU)) {
			_case_begin_1b3d69e2b:;
			{
				_1ad386a36_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_408033_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1b3d68e6e:;
	};
	(*(_408033_d)).get()._field_Model=jule::Any((*(_408033_d)).get()._field_Constant, &__jule_any_type19);
	_1b064397d_applyCastModelByEnum(_408033_d, _1b064a952_Enum((*(_408033_d)).get()._field_Kind.ptr()));
}



inline void _1b063eacd_checkData(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b0612672_Data>* _415733_d) {
	jule::Ptr<_1b050b802_FnIns> _415813_f = _1b064b48b_Fn((*(_415733_d)).get()._field_Kind.ptr());;
	if ((((_415813_f != nullptr) && (_415813_f.get()._field_Decl != nullptr)) && _1b0509107_IsMethod(_415813_f.get()._field_Decl.ptr()))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1b063eccb_checkDatas(_1b06399eb_binaryEval* _self_) {
	_1b063eacd_checkData(_self_, &((*(_self_))._field_l));
	_1b063eacd_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1b0640084_setModel(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b0612672_Data>* _416932_d) {
	if (_1b0613046_IsConst((*(_416932_d)).ptr())) {
		if (((_1b0613046_IsConst((*(_self_))._field_l.ptr()) && _1b0613046_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1b0612672_Data> _417818_l;;
	jule::Ptr<_1b0612672_Data> _417825_r;;
	({
		jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_417818_l = ___jule_assign_arg;
		_417825_r = _1___jule_assign_arg;
	});
	if ((!(_1b0613387_GoodOperand(_417818_l.ptr(), &(_417825_r))))) {
		({
			jule::Ptr<_1b0612672_Data> ___jule_assign_arg = _417825_r;
			jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = _417818_l;
			_417818_l = ___jule_assign_arg;
			_417825_r = _1___jule_assign_arg;
		});
	};
	(*(_416932_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b04ea02c_BinopExprModel>(_1b04ea02c_BinopExprModel{._field_Left=jule::new_ptr<_1b04e9a32_OperandExprModel>(_1b04e9a32_OperandExprModel{._field_Kind=_417818_l.get()._field_Kind, ._field_Model=_417818_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1b04e9a32_OperandExprModel>(_1b04e9a32_OperandExprModel{._field_Kind=_417825_r.get()._field_Kind, ._field_Model=_417825_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type115);
}



inline void _1b064033c_postEval(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b0612672_Data>* _419632_d) {
	(*(_419632_d)).get()._field_Lvalue=false;
	_1b0640084_setModel(_self_, _419632_d);
}



inline jule::Ptr<_1b0612672_Data> _1b0640738_solveExplicit(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b0612672_Data>* _420137_l, jule::Ptr<_1b0612672_Data>* _420152_r) {
	({
		jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_420137_l));
		jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_420152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b063eccb_checkDatas(_self_);
	jule::Ptr<_1b0612672_Data> _420617_d = _1b063e56c_evalOp(_self_);;
	({
		jule::Ptr<_1b0612672_Data> ___jule_assign_arg = (*(_420137_l));
		jule::Ptr<_1b0612672_Data> _1___jule_assign_arg = (*(_420152_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1b063e825_evalConst(_self_, &(_420617_d));
	if ((_420617_d != nullptr)) {
		_420617_d.get()._field_Mutable=true;
		_1b064033c_postEval(_self_, &(_420617_d));
	};
	return _420617_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0640a79_eval(_1b06399eb_binaryEval* _self_, jule::Ptr<_1b04c967c_BinopExpr>* _422128_op) {
	if (((*(_422128_op)).get()._field_Op.get()._field_Id == static_cast<jule::U64>(71LLU))) {
		_1b06148b6_pushErr((*(_self_))._field_e.ptr(), (*(_422128_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1b0614c29_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _422817_l = _1b0637257_evalExpr1((*(_self_))._field_e, (*(_422128_op)).get()._field_Left);;
	if (((_422817_l == nullptr) || (_422817_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1b06477a6_TypeKind> _423317_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_422817_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_423317_prefix;
	});;
	jule::Ptr<_1b0612672_Data> _423617_r = _1b0637257_evalExpr1((*(_self_))._field_e, (*(_422128_op)).get()._field_Right);;
	if (((_423617_r == nullptr) || (_423617_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_422128_op)).get()._field_Op;
	jule::Ptr<_1b0612672_Data> _424317_d = _1b0640738_solveExplicit(_self_, &(_422817_l), &(_423617_r));;
	if ((((_424317_d != nullptr) && _422817_l.get()._field_IsRune) && _423617_r.get()._field_IsRune)) {
		_424317_d.get()._field_IsRune=true;
	};
	return _424317_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b06399eb_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0645dc0_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b06469b4_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b0647b6e_Str(_1b06477a6_TypeKind* _self_) {
	if (_1b0648895_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	_1aa364275_StrBuilder _7417_kind = static__1aa364594_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		_1aa36d03c_WriteStr(&_7417_kind, jule::Str("...", 3));
	};
	if (_1b064860e_Binded(_self_)) {
		_1aa36d03c_WriteStr(&_7417_kind, jule::Str("cpp.", 4));
		_1aa36d03c_WriteStr(&_7417_kind, (*(_self_))._field_BindIdent);
	} else {
		_1aa36d03c_WriteStr(&_7417_kind, _1b0647300_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1b0646d5a_Str((*(_self_))._field_Kind));
	};
	return _1aa36d834_Str(&_7417_kind);;
}



inline jule::Bool _1b0647eb0_Equal(jule::Ptr<_1b06477a6_TypeKind> _self_, jule::Ptr<_1b06477a6_TypeKind> _9021_other) {
	if (_1b0648895_IsNil(_self_.ptr())) {
		return _1b0648895_IsNil(_9021_other.ptr());;
	};
	if (_1b064860e_Binded(_self_.ptr())) {
		return (_1b064860e_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _1b0647300_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1b064719b_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1b064860e_Binded(_1b06477a6_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1b0648895_IsNil(_1b06477a6_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1b0648b2b_Void(_1b06477a6_TypeKind* _self_) {
	jule::Ptr<_1b0650627_Prim> _11013_prim = _1b064a19e_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1b0648db2_Comparable(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_1b064b722_Struct(_11721__self) != nullptr)) {
			return _1b064b722_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_1b064bc3e_Map(_11721__self) == nullptr) && (_1b064b205_Slc(_11721__self) == nullptr)) && (_1b064b48b_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1b0649148_Mutable(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_1b064b722_Struct(_12821__self) != nullptr)) {
			return _1b064b722_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_1b064b9a8_Trait(_12821__self) != nullptr)) {
			return true;;
		};
		if ((_1b064a19e_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1b0650627_Prim> _13621_p = _1b064a19e_Prim(_12821__self);;
			return _1b0653d45_IsAny(_13621_p.ptr());;
		};
		if ((_1b064ae6e_Arr(_12821__self) != nullptr)) {
			return _1b0649148_Mutable(_1b064ae6e_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_1b064b205_Slc(_12821__self) != nullptr) || (_1b064a6bb_Ptr(_12821__self) != nullptr)) || (_1b064a435_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1b06493ce_Ordered(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_1b0650627_Prim> _15217_prim = _1b064a19e_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1ad37c7b8_IsNum(_15217_prim.get()._field_Kind) || _1b0653aae_IsStr(_15217_prim.ptr()));;
		};
		if ((_1b064a6bb_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1b04e5951_StructIns> _15917_s = _1b064b722_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1b051e392_Enum> _16617_enm = _1b064a952_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1ad37c7b8_IsNum(_1b0647b6e_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1b0649665_NilCompatible(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_1b0650627_Prim> _17917_prim = _1b064a19e_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1b0653d45_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1b0648895_IsNil(_17721__self) || (_1b064b48b_Fn(_17721__self) != nullptr)) || (_1b064a435_Sptr(_17721__self) != nullptr)) || (_1b064a6bb_Ptr(_17721__self) != nullptr)) || (_1b064b9a8_Trait(_17721__self) != nullptr)) || (_1b064b205_Slc(_17721__self) != nullptr)) || (_1b064bc3e_Map(_17721__self) != nullptr)) || (_1b064abd8_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1b06498eb_PerformsRC(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_1b0650627_Prim> _19917_prim = _1b064a19e_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return (_1b0653d45_IsAny(_19917_prim.ptr()) || _1b0653aae_IsStr(_19917_prim.ptr()));;
		};
		return (((_1b064a435_Sptr(_19821__self) != nullptr) || (_1b064b205_Slc(_19821__self) != nullptr)) || (_1b064b9a8_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1b0649b82_SupportsCloning(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_1b064a19e_Prim(_21021__self) != nullptr)) {
				_case_begin_1b402678b:;
				{
					return (!(_1b0653d45_IsAny(_1b064a19e_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_1b064a952_Enum(_21021__self) != nullptr)) {
				_case_begin_1b4026813:;
				{
					return true;;
				}
			}
			else if ((_1b064b48b_Fn(_21021__self) != nullptr)) {
				_case_begin_1b4026a88:;
				{
					return true;;
				}
			}
			else if ((_1b064a6bb_Ptr(_21021__self) != nullptr)) {
				_case_begin_1b4026aee:;
				{
					return true;;
				}
			}
			else if ((_1b064b205_Slc(_21021__self) != nullptr)) {
				_case_begin_1b4026b65:;
				{
					return _1b0649b82_SupportsCloning(_1b064b205_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1b064bc3e_Map(_21021__self) != nullptr)) {
				_case_begin_1b4026bdc:;
				{
					jule::Ptr<_1b06562ba_Map> _22321_m = _1b064bc3e_Map(_21021__self);;
					return (_1b0649b82_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _1b0649b82_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1b064ae6e_Arr(_21021__self) != nullptr)) {
				_case_begin_1b4026c64:;
				{
					return _1b0649b82_SupportsCloning(_1b064ae6e_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1b064a435_Sptr(_21021__self) != nullptr)) {
				_case_begin_1b4026d74:;
				{
					return _1b0649b82_SupportsCloning(_1b064a435_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1b064b722_Struct(_21021__self) != nullptr)) {
				_case_begin_1b4026dda:;
				{
					jule::Ptr<_1b04e5951_StructIns> _23025_s = _1b064b722_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _1b04e4312_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1b4026648:;
				{
					return false;;
				}
			}
			_match_end_1b40265d2:;
		};
	};
}



inline jule::Bool _1b0649e18_Variadicable(_1b06477a6_TypeKind* _self_) {
	{
		_1b06477a6_TypeKind* _24121__self = (&((*(_self_))));;
		return (_1b064b205_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_1b0650627_Prim> _1b064a19e_Prim(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1b402c1cb:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0650627_Prim>(20);;
			}
		}
		else {
			_case_begin_1b402d012:;
			{
				return nullptr;;
			}
		}
		_match_end_1b402ceac:;
	};
}



inline jule::Ptr<_1b0654153_Sptr> _1b064a435_Sptr(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1b402d8a3:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0654153_Sptr>(21);;
			}
		}
		else {
			_case_begin_1b402dc9e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b402dc49:;
	};
}



inline jule::Ptr<_1b065791a_Ptr> _1b064a6bb_Ptr(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b402e585:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b065791a_Ptr>(26);;
			}
		}
		else {
			_case_begin_1b402e981:;
			{
				return nullptr;;
			}
		}
		_match_end_1b402e92b:;
	};
}



inline jule::Ptr<_1b051e392_Enum> _1b064a952_Enum(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b4030267:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b051e392_Enum>(3);;
			}
		}
		else {
			_case_begin_1b4030663:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403060d:;
	};
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b064abd8_TypeEnum(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b4030e5a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0520a9c_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1b4031367:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4031312:;
	};
}



inline jule::Ptr<_1b0656e47_Arr> _1b064ae6e_Arr(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1b4031b5e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0656e47_Arr>(25);;
			}
		}
		else {
			_case_begin_1b403206b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4032016:;
	};
}



inline jule::Ptr<_1b0654b26_Slc> _1b064b205_Slc(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1b4032863:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0654b26_Slc>(22);;
			}
		}
		else {
			_case_begin_1b4032c70:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4032c1a:;
	};
}



inline jule::Ptr<_1b050b802_FnIns> _1b064b48b_Fn(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b4033567:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b050b802_FnIns>(1);;
			}
		}
		else {
			_case_begin_1b4033974:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403391e:;
	};
}



inline jule::Ptr<_1b04e5951_StructIns> _1b064b722_Struct(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b403425a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b04e5951_StructIns>(0);;
			}
		}
		else {
			_case_begin_1b4034656:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4034601:;
	};
}



inline jule::Ptr<_1b051bb97_Trait> _1b064b9a8_Trait(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1b4034e4d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b051bb97_Trait>(2);;
			}
		}
		else {
			_case_begin_1b403535a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4035305:;
	};
}



inline jule::Ptr<_1b06562ba_Map> _1b064bc3e_Map(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1b4035b52:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b06562ba_Map>(24);;
			}
		}
		else {
			_case_begin_1b403605e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4036009:;
	};
}



inline jule::Ptr<_1b065571a_Tuple> _1b064bec5_Tup(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1b4036856:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b065571a_Tuple>(23);;
			}
		}
		else {
			_case_begin_1b4036c63:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4036c0d:;
	};
}



inline jule::Bool _1b064c25b_comptime(_1b06477a6_TypeKind* _self_) {
	return ((((((((((((((_1b064d7ce_comptimeTypeInfos(_self_) != nullptr) || (_1b064da65_comptimeTypeInfo(_self_) != nullptr)) || (_1b064c4e2_comptimeStructFields(_self_) != nullptr)) || (_1b064c778_comptimeStructField(_self_) != nullptr)) || (_1b064ca0e_comptimeEnumFields(_self_) != nullptr)) || (_1b064cc95_comptimeEnumField(_self_) != nullptr)) || (_1b064dceb_comptimeStatics(_self_) != nullptr)) || (_1b064e082_comptimeStatic(_self_) != nullptr)) || (_1b064d02b_comptimeParams(_self_) != nullptr)) || (_1b064d2b2_comptimeParam(_self_) != nullptr)) || (_1b064d548_comptimeRange(_self_) != nullptr)) || (_1b064e318_comptimeValue(_self_) != nullptr)) || (_1b064e835_comptimeFiles(_self_) != nullptr)) || (_1b064e59e_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1b0525651_comptimeStructFields> _1b064c4e2_comptimeStructFields(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1b40378ce:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0525651_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1b403b707:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403b6a2:;
	};
}



inline jule::Ptr<_1b05239a1_comptimeStructField> _1b064c778_comptimeStructField(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1b403bbbe:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b05239a1_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1b403c0a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403c054:;
	};
}



inline jule::Ptr<_1b052b327_comptimeEnumFields> _1b064ca0e_comptimeEnumFields(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1b403c8a1:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b052b327_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1b403ccad:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403cc58:;
	};
}



inline jule::Ptr<_1b052a018_comptimeEnumField> _1b064cc95_comptimeEnumField(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1b403cd46:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b052a018_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1b403d990:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403d93a:;
	};
}



inline jule::Ptr<_1b052ec21_comptimeParams> _1b064d02b_comptimeParams(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1b403e287:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b052ec21_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1b403e694:;
			{
				return nullptr;;
			}
		}
		_match_end_1b403e63e:;
	};
}



inline jule::Ptr<_1b052c9aa_comptimeParam> _1b064d2b2_comptimeParam(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1b403ee7a:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b052c9aa_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1b4040376:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4040321:;
	};
}



inline jule::Ptr<_1b0522e45_comptimeRange> _1b064d548_comptimeRange(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1b4040b6d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0522e45_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1b404107a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4041025:;
	};
}



inline jule::Ptr<_1b053131b_comptimeTypeInfos> _1b064d7ce_comptimeTypeInfos(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1b4041872:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b053131b_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1b4041c7e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4041c29:;
	};
}



inline jule::Ptr<_1b0532916_comptimeTypeInfo> _1b064da65_comptimeTypeInfo(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1b4041d17:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0532916_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1b4042961:;
			{
				return nullptr;;
			}
		}
		_match_end_1b404290b:;
	};
}



inline jule::Ptr<_1b052891d_comptimeStatics> _1b064dceb_comptimeStatics(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1b4043258:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b052891d_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1b4043665:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4043610:;
	};
}



inline jule::Ptr<_1b0526c5c_comptimeStatic> _1b064e082_comptimeStatic(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1b40436ed:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0526c5c_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1b4044347:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40442e2:;
	};
}



inline jule::Ptr<_1b0538a1b_comptimeValue> _1b064e318_comptimeValue(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1b4044b3e:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b0538a1b_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1b404504b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4044ee6:;
	};
}



inline jule::Ptr<_1b053c965_comptimeFile> _1b064e59e_comptimeFile(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1b4045832:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b053c965_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1b4045c2d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4045bc8:;
	};
}



inline jule::Ptr<_1b053b36a_comptimeFiles> _1b064e835_comptimeFiles(_1b06477a6_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1b4046514:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1b053b36a_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1b4046910:;
			{
				return nullptr;;
			}
		}
		_match_end_1b40468aa:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b06477a6_TypeKind _Src) {
	_Stream << _1b0647b6e_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1b0650094_checked(_1b064ec20_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b064ec20_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b0650968_Str(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1b0650ca9_Equal(jule::Ptr<_1b0650627_Prim> _self_, jule::Ptr<_1b06477a6_TypeKind> _53821_other) {
	jule::Ptr<_1b0650627_Prim> _53913_prim = _1b064a19e_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _1b065124e_IsConstraint(_1b0650627_Prim* _self_) {
	return ((((!(_1b0653aae_IsStr(_self_))) && (!(_1b0653d45_IsAny(_self_)))) && (!(_1b0653828_IsBool(_self_)))) && (!(_1ad37c7b8_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1b06514d5_IsI8(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1b065176b_IsI16(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1b0651a02_IsI32(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1b0651c88_IsI64(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1b065201e_IsU8(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1b06522a5_IsU16(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1b065253b_IsU32(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1b06527c2_IsU64(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1b0652a58_IsF32(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1b0652cde_IsF64(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1b0653075_IsInt(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1b065330b_IsUint(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1b0653592_IsUintptr(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1b0653828_IsBool(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1b0653aae_IsStr(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1b0653d45_IsAny(_1b0650627_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0650627_Prim _Src) {
	_Stream << _1b0650968_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b06544c7_Str(_1b0654153_Sptr* _self_) {
	return (jule::Str("&", 1) + _1b0647b6e_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b0654818_Equal(jule::Ptr<_1b0654153_Sptr> _self_, jule::Ptr<_1b06477a6_TypeKind> _61521_other) {
	jule::Ptr<_1b0654153_Sptr> _61613_sptr = _1b064a435_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _1b0647eb0_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0654153_Sptr _Src) {
	_Stream << _1b06544c7_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b06550aa_Str(_1b0654b26_Slc* _self_) {
	return (jule::Str("[]", 2) + _1b0647b6e_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b06553eb_Equal(jule::Ptr<_1b0654b26_Slc> _self_, jule::Ptr<_1b06477a6_TypeKind> _63421_other) {
	jule::Ptr<_1b0654b26_Slc> _63513_slc = _1b064b205_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _1b0647eb0_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0654b26_Slc _Src) {
	_Stream << _1b06550aa_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0655a8e_Str(_1b065571a_Tuple* _self_) {
	_1aa364275_StrBuilder _65117_s = static__1aa364594_New(16LL);;
	_1aa36d2e5_WriteByte(&_65117_s, '(');
	_1aa36d03c_WriteStr(&_65117_s, _1b0647b6e_Str((*(_self_))._field_Types[0LL].ptr()));
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b40560d4:;
		if (it != expr_end) {
			jule::Ptr<_1b06477a6_TypeKind> *_65416_t = it;
			{
				_1aa36d2e5_WriteByte(&_65117_s, ',');
				_1aa36d03c_WriteStr(&_65117_s, _1b0647b6e_Str((*(_65416_t)).ptr()));
			}
			_iter_next_1b40560d4:;
			++it;
			goto _iter_begin_1b40560d4;
		}
		_iter_end_1b40560d4:;
	};
	_1aa36d2e5_WriteByte(&_65117_s, ')');
	return _1aa36d834_Str(&_65117_s);;
}



inline jule::Bool _1b0655dd0_Equal(jule::Ptr<_1b065571a_Tuple> _self_, jule::Ptr<_1b06477a6_TypeKind> _66321_other) {
	jule::Ptr<_1b065571a_Tuple> _66413_tup = _1b064bec5_Tup(_66321_other.ptr());;
	if ((_66413_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66413_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _67117_i = 0LL;;
	for (; (_67117_i < _self_.get()._field_Types.len()); (_67117_i)++) {
		{
			if ((!(_1b0647eb0_Equal(_self_.get()._field_Types[_67117_i], _66413_tup.get()._field_Types[_67117_i])))) {
				return false;;
			};
		}
	_iter_next_1b4058b75:;
	}
	_iter_end_1b4058b75:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b065571a_Tuple _Src) {
	_Stream << _1b0655a8e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b065663e_Str(_1b06562ba_Map* _self_) {
	_1aa364275_StrBuilder _69117_s = static__1aa364594_New(16LL);;
	_1aa36d03c_WriteStr(&_69117_s, jule::Str("map[", 4));
	_1aa36d03c_WriteStr(&_69117_s, _1b0647b6e_Str((*(_self_))._field_Key.ptr()));
	_1aa36d2e5_WriteByte(&_69117_s, ']');
	_1aa36d03c_WriteStr(&_69117_s, _1b0647b6e_Str((*(_self_))._field_Val.ptr()));
	return _1aa36d834_Str(&_69117_s);;
}



inline jule::Bool _1b0656980_Equal(jule::Ptr<_1b06562ba_Map> _self_, jule::Ptr<_1b06477a6_TypeKind> _70021_other) {
	jule::Ptr<_1b06562ba_Map> _70113_m = _1b064bc3e_Map(_70021_other.ptr());;
	if ((_70113_m == nullptr)) {
		return false;;
	};
	return (_1b0647eb0_Equal(_self_.get()._field_Key, _70113_m.get()._field_Key) && _1b0647eb0_Equal(_self_.get()._field_Val, _70113_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b06562ba_Map _Src) {
	_Stream << _1b065663e_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b06572bb_Str(_1b0656e47_Arr* _self_) {
	_1aa364275_StrBuilder _71917_s = static__1aa364594_New(16LL);;
	_1aa36d2e5_WriteByte(&_71917_s, '[');
	_1aa36d03c_WriteStr(&_71917_s, _1ad36c885_Itoa((*(_self_))._field_N));
	_1aa36d2e5_WriteByte(&_71917_s, ']');
	_1aa36d03c_WriteStr(&_71917_s, _1b0647b6e_Str((*(_self_))._field_Elem.ptr()));
	return _1aa36d834_Str(&_71917_s);;
}



inline jule::Bool _1b065760c_Equal(jule::Ptr<_1b0656e47_Arr> _self_, jule::Ptr<_1b06477a6_TypeKind> _72821_other) {
	jule::Ptr<_1b0656e47_Arr> _72913_arr = _1b064ae6e_Arr(_72821_other.ptr());;
	if ((_72913_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72913_arr.get()._field_N) && _1b0647eb0_Equal(_self_.get()._field_Elem, _72913_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0656e47_Arr _Src) {
	_Stream << _1b06572bb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1b0657c8e_Str(_1b065791a_Ptr* _self_) {
	if (_1b0658454_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1b0647b6e_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1b06580d0_Equal(jule::Ptr<_1b065791a_Ptr> _self_, jule::Ptr<_1b06477a6_TypeKind> _75221_other) {
	jule::Ptr<_1b065791a_Ptr> _75313_ptr = _1b064a6bb_Ptr(_75221_other.ptr());;
	if ((_75313_ptr == nullptr)) {
		return false;;
	};
	return _1b0647eb0_Equal(_self_.get()._field_Elem, _75313_ptr.get()._field_Elem);;
}



inline jule::Bool _1b0658454_IsUnsafe(_1b065791a_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b065791a_Ptr _Src) {
	_Stream << _1b0657c8e_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b065891b_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1b065a148_pushErr(_1b065990b_typeChecker* _self_, jule::Ptr<_1aa49b1d1_Token> _83826_token, jule::Str _83841_fmt, jule::Slice<jule::Any> _83854_args) {
	_1b058e126_pushErr((*(_self_))._field_s.ptr(), _83826_token, _83841_fmt, _83854_args);
}



inline void _1b065a346_allowBuiltin(_1b065990b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1b065a544_disallowBuiltin(_1b065990b_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b40665bc_pushReference(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04e5951_StructIns>* _85040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b395c700_Exist((*(_self_))._field_refers.ptr(), (*(_85040_t)))) {
		return;;
	};
	_1b0510790_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85040_t)), &__jule_any_type9));
}

inline void _1b406912a_pushReference(_1b065990b_typeChecker* _self_, jule::Ptr<_1b051bb97_Trait>* _85040_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b406ac53_Exist((*(_self_))._field_refers.ptr(), (*(_85040_t)))) {
		return;;
	};
	_1b0510790_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_85040_t)), &__jule_any_type10));
}



inline void _1b065aaa5_pushReferenceByKind(_1b065990b_typeChecker* _self_, jule::Ptr<_1b06477a6_TypeKind>* _86043_k) {
	{
		
		if ((_1b064b722_Struct((*(_86043_k)).ptr()) != nullptr)) {
			_case_begin_1b40653ac:;
			{
				jule::Ptr<_1b04e5951_StructIns> _86321_t = _1b064b722_Struct((*(_86043_k)).ptr());;
				_1b40665bc_pushReference(_self_, &(_86321_t));
			}
		}
		else if ((_1b064b9a8_Trait((*(_86043_k)).ptr()) != nullptr)) {
			_case_begin_1b4065434:;
			{
				jule::Ptr<_1b051bb97_Trait> _86621_t = _1b064b9a8_Trait((*(_86043_k)).ptr());;
				_1b406912a_pushReference(_self_, &(_86621_t));
			}
		}
		_match_end_1b406529c:;
	};
}



inline void _1b065aec3_pushCycleError(_1b065990b_typeChecker* _self_, jule::Any _87129_def1, jule::Any _87140_def2, _1aa364275_StrBuilder* _87156_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87313_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87328_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87328_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b406d78e:;
				{
					return (*(_87328_def)).cast_ptr<_1b06469b4_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1b406dd44:;
				{
					return (*(_87328_def)).cast_ptr<_1b04e2871_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1b406d937:;
				{
					return jule::Str();;
				}
			}
			_match_end_1b406d8d2:;
		};
	});;
	jule::Slice<jule::U8> _88313_buf = _1aa36e2d5_Buf(_87156_message);;
	jule::Str _88413_def1Ident = _87313_getIdent(&(_87129_def1));;
	jule::Str _88513_def2Ident = _87313_getIdent(&(_87140_def2));;
	jule::Str _88613_refersTo = _1aa3c3e83_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88413_def1Ident, &__jule_any_type5),jule::Any(_88513_def2Ident, &__jule_any_type5)}));;
	_1aa36d03c_WriteStr(_87156_message, _1aa34db33_Repeat(jule::Str(" ", 1), 7LL));
	_1aa36d03c_WriteStr(_87156_message, _88613_refersTo);
	_1aa36d2e5_WriteByte(_87156_message, '\n');
	_1aa36cc84_Write(_87156_message, _88313_buf);
}



inline jule::Bool _1b065b3be_checkCrossCycle(_1b065990b_typeChecker* _self_, jule::Any _89330_decl, _1aa364275_StrBuilder* _89346_message) {
	{
		auto &_match_expr{ _89330_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b4071cd1:;
			{
				jule::Ptr<_1b06469b4_TypeAlias> _89617_ta = _89330_decl.cast_ptr<_1b06469b4_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_89617_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b40729c4:;
					if (it != expr_end) {
						jule::Any *_89720_d = it;
						{
							{
								
								if (((*(_89720_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1b407340e:;
									{
										_1b065aec3_pushCycleError(_self_, jule::Any(_89617_ta, &__jule_any_type67), (*(_89720_d)), _89346_message);
										return false;;
									}
								}
								else if ((!(_1b065b3be_checkCrossCycle(_self_, (*(_89720_d)), _89346_message)))) {
									_case_begin_1b4073486:;
									{
										_1b065aec3_pushCycleError(_self_, jule::Any(_89617_ta, &__jule_any_type67), (*(_89720_d)), _89346_message);
										return false;;
									}
								}
								_match_end_1b40732ee:;
							};
						}
						_iter_next_1b40729c4:;
						++it;
						goto _iter_begin_1b40729c4;
					}
					_iter_end_1b40729c4:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b4071d47:;
			{
				jule::Ptr<_1b04e2871_Struct> _90817_s = _89330_decl.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90817_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4073101:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> *_90920_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90920_d))))) {
									_case_begin_1b4075444:;
									{
										_1b065aec3_pushCycleError(_self_, jule::Any(_90817_s, &__jule_any_type66), jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message);
										return false;;
									}
								}
								else if ((!(_1b065b3be_checkCrossCycle(_self_, jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message)))) {
									_case_begin_1b40754bb:;
									{
										_1b065aec3_pushCycleError(_self_, jule::Any(_90817_s, &__jule_any_type66), jule::Any((*(_90920_d)), &__jule_any_type66), _89346_message);
										return false;;
									}
								}
								_match_end_1b4075334:;
							};
						}
						_iter_next_1b4073101:;
						++it;
						goto _iter_begin_1b4073101;
					}
					_iter_end_1b4073101:;
				};
			}
		}
		_match_end_1b4071c7b:;
	};
	return true;;
}



inline jule::Bool _1b065b7ba_checkIllegalCycles(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _92738_ident, jule::Any _92765_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92765_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b4077314:;
			{
				if (_92765_decl.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b407737a:;
			{
				if (_92765_decl.cast_ptr<_1b06469b4_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b40772ae:;
	};
	if ((_92765_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1b065a148_pushErr(_self_, (*(_92738_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1aa364275_StrBuilder _95017_message = static__1aa364594_New(32LL);;
	if ((!(_1b065b3be_checkCrossCycle(_self_, _92765_decl, &(_95017_message))))) {
		jule::Str _95321_errMsg = _1aa36d834_Str(&_95017_message);;
		_1aa36da32_Clear(&_95017_message);
		_1b065aec3_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92765_decl, &(_95017_message));
		_95321_errMsg+=_1aa36d834_Str(&_95017_message);
		_1b065a148_pushErr(_self_, (*(_92738_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_95321_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b407b15e:;
			{
				{
					{ jule::Slice<jule::Any> *__jule_push_dest = (*(_self_))._field_referencer.get()._field_refs; __jule_push_dest->push(_92765_decl); };
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b407b1c5:;
			{
				{
					auto &_match_expr{ _92765_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b407ba44:;
						{
							jule::Ptr<_1b04e2871_Struct> _96925_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66);;
							{ jule::Slice<jule::Ptr<_1b04e2871_Struct>> &__jule_push_dest = _96925_s.get()._field_Depends; __jule_push_dest.push(_92765_decl.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66)); };
						}
					}
					_match_end_1b407b549:;
				};
			}
		}
		_match_end_1b407b109:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1b0647300_Kind> _1b065bbb6_fromTypeAlias(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _97733_decl, jule::Ptr<_1b06469b4_TypeAlias>* _97760_ta) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97760_ta)).get()._field_Public, (*(_97760_ta)).get()._field_Token)))) {
		_1b065a148_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97760_ta)).get()._field_Used=true;
	if (((*(_97733_decl)).get()._field_Generics.len() > 0LL)) {
		_1b065a148_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4080839:;
			if (it != expr_end) {
				jule::Ptr<_1b06469b4_TypeAlias> _99420_bg = *it;
				{
					if (((_99420_bg == (*(_97760_ta))) || (((*(_97760_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1b0647eb0_Equal((*(_97760_ta)).get()._field_Kind.get()._field_Kind, _99420_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b4080839;
					};
				}
				_iter_next_1b4080839:;
				++it;
				goto _iter_begin_1b4080839;
			}
			_iter_end_1b4080839:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b408152c:;
			if (it != expr_end) {
				jule::Ptr<_1b06469b4_TypeAlias> _100520_bg = *it;
				{
					if ((_100520_bg == (*(_97760_ta)))) {
						_1b065a148_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97760_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b408385e:;
						if (it != expr_end) {
							jule::Ptr<_1b06469b4_TypeAlias> _101024_dg = *it;
							{
								if ((_100520_bg == _101024_dg)) {
									_1b065a148_pushErr(_self_, (*(_97733_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97733_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1b408385e:;
							++it;
							goto _iter_begin_1b408385e;
						}
						_iter_end_1b408385e:;
					};
				}
				_iter_next_1b408152c:;
				++it;
				goto _iter_begin_1b408152c;
			}
			_iter_end_1b408152c:;
		};
	};
	jule::Bool _101917_ok = _1b065b7ba_checkIllegalCycles(_self_, _97733_decl, jule::Any((*(_97760_ta)), &__jule_any_type67));;
	if ((!(_101917_ok))) {
		return nullptr;;
	};
	if (((*(_97760_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101917_ok=_1b059a53e_checkTypeAliasDeclKind((*(_self_))._field_s, _97760_ta, (*(_self_))._field_lookup);
		if ((!(_101917_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97760_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		{ jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> &__jule_push_dest = (*(_self_))._field_ownerAlias.get()._field_Generics; __jule_push_dest.push((*(_97760_ta))); };
	};
	jule::Ptr<_1b06477a6_TypeKind> _103817_tk = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Generic=(*(_97760_ta)).get()._field_Generic, ._field_Kind=(*(_97760_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1b065aaa5_pushReferenceByKind(_self_, &(_103817_tk));
	if ((*(_97760_ta)).get()._field_Binded) {
		_103817_tk.get()._field_BindIdent=(*(_97760_ta)).get()._field_Ident;
	} else {
		_103817_tk.get()._field_BindIdent=(*(_97760_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_1b0647300_Kind>(_103817_tk, 19);;
}



inline jule::Ptr<_1b051e392_Enum> _1b065c0b2_fromEnum(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _105128_decl, jule::Ptr<_1b051e392_Enum>* _105155_e) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105155_e)).get()._field_Public, (*(_105155_e)).get()._field_Token)))) {
		_1b065a148_pushErr(_self_, (*(_105128_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105128_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105128_decl)).get()._field_Generics.len() > 0LL)) {
		_1b065a148_pushErr(_self_, (*(_105128_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105128_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105155_e));;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b065c4ad_fromTypeEnum(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _106332_decl, jule::Ptr<_1b0520a9c_TypeEnum>* _106359_e) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106359_e)).get()._field_Public, (*(_106359_e)).get()._field_Token)))) {
		_1b065a148_pushErr(_self_, (*(_106332_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106332_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106332_decl)).get()._field_Generics.len() > 0LL)) {
		_1b065a148_pushErr(_self_, (*(_106332_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106332_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_106359_e));;
}



inline jule::Ptr<_1b051bb97_Trait> _1b065c8a9_fromTrait(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _107529_decl, jule::Ptr<_1b051bb97_Trait>* _107556_t) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_107556_t)).get()._field_Public, (*(_107556_t)).get()._field_Token)))) {
		_1b065a148_pushErr(_self_, (*(_107529_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_107529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_107529_decl)).get()._field_Generics.len() > 0LL)) {
		_1b065a148_pushErr(_self_, (*(_107529_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_107529_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1b406912a_pushReference(_self_, _107556_t);
	return (*(_107556_t));;
}



inline jule::Bool _1b065cca5_checkStructIns(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04e5951_StructIns>* _108838_ins, jule::Ptr<_1aa49b1d1_Token>* _108860_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108838_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108838_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108838_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1b05a742a_precheckStructIns((*(_self_))._field_s, _108838_ins, (*(_108860_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108838_ins)).get()._field_Generics.len() > 0LL)) {
		_1b05a7e42_checkStructInsOperators((*(_self_))._field_s, (*(_108838_ins)));
		_1b05a76d3_checkStructIns((*(_self_))._field_s, _108838_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b065d05d_appendUsedStructReference(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04e2871_Struct>* _110949_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b4092d79:;
			{
				jule::Ptr<_1b04e2871_Struct> _111521_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1b04e2871_Struct>(&__jule_any_type66);;
				if ((!(_1b04e4653_IsUses(_111521_refS.ptr(), (*(_110949_s)))))) {
					{ jule::Slice<jule::Ptr<_1b04e2871_Struct>> &__jule_push_dest = _111521_refS.get()._field_Uses; __jule_push_dest.push((*(_110949_s))); };
				};
			}
		}
		_match_end_1b4092d24:;
	};
}



inline jule::Ptr<_1b04e5951_StructIns> _1b065d459_buildStructInstance(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _112243_decl, jule::Ptr<_1b04e2871_Struct>* _112270_s) {
	jule::Ptr<_1b065891b_referencer> _112417_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> _112617_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b40958c6:;
				{
					jule::Ptr<_1b055134c_scopeChecker> _113325_sc = (*(_self_))._field_lookup.cast_ptr<_1b055134c_scopeChecker>(0);;
					jule::Ptr<_1b055134c_scopeChecker> _113425_hard = _1b05546c4_getHardRoot(_113325_sc);;
					if (((_113425_hard.get()._field_owner.get()._field_Owner == nullptr) || (_113425_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_112270_s))))) {
						goto _match_end_1b4095871;
					};
					jule::I64 _113821_n = (_113425_hard.get()._field_owner.get()._field_Generics.len() + _113425_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_113425_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113821_n);
				}
			}
			_match_end_1b4095871:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1b0667584_Lookup> _114817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1b04e5951_StructIns> _115217_ins = _1b04e2ce4_instance((*(_112270_s)));;
	_115217_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>>::alloc(0LL, (*(_112243_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_112243_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4099666:;
		if (it != expr_end) {
			jule::Ptr<_1b04c1ba2_TypeDecl> _115421_g = *it;
			{
				jule::Ptr<_1b06477a6_TypeKind> _115521_kind = _1b0661c65_build(_self_, &(_115421_g.get()._field_Kind));;
				if ((_115521_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1b0645dc0_InsGeneric>> &__jule_push_dest = _115217_ins.get()._field_Generics; __jule_push_dest.push(jule::new_ptr<_1b0645dc0_InsGeneric>(_1b0645dc0_InsGeneric{._field_Kind=_115521_kind, })); };
			}
			_iter_next_1b4099666:;
			++it;
			goto _iter_begin_1b4099666;
		}
		_iter_end_1b4099666:;
	};
	(*(_self_))._field_lookup=_114817_lookup;
	(*(_self_))._field_bannedGenerics=_112617_bannedGenerics;
	(*(_self_))._field_referencer=_112417_referencer;
	return _115217_ins;;
}



inline jule::Ptr<_1b04e5951_StructIns> _1b065d855_fromStruct(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _117034_decl, jule::Ptr<_1b04e2871_Struct>* _117061_s) {
	if ((!(_1b058e885_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_117061_s)).get()._field_Public, (*(_117061_s)).get()._field_Token)))) {
		_1b065a148_pushErr(_self_, (*(_117034_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_117034_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_117034_decl)).get()._field_Generics.len() > 0LL)) {
			_1b065a148_pushErr(_self_, (*(_117034_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1b04e5951_StructIns>(_1b04e5951_StructIns{._field_Decl=(*(_117061_s)), });;
	};
	jule::Bool _118817_ok = _1b065b7ba_checkIllegalCycles(_self_, _117034_decl, jule::Any((*(_117061_s)), &__jule_any_type66));;
	if ((!(_118817_ok))) {
		return nullptr;;
	};
	_1b065d05d_appendUsedStructReference(_self_, _117061_s);
	jule::Ptr<_1b04e5951_StructIns> _119417_ins = _1b065d459_buildStructInstance(_self_, _117034_decl, _117061_s);;
	if ((_119417_ins == nullptr)) {
		return nullptr;;
	};
	_118817_ok=_1b0590655_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_119417_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_119417_ins.get()._field_Generics.len()), (*(_117034_decl)).get()._field_Token);
	if ((!(_118817_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1b04e5951_StructIns> _120417_existInstance = _1b04e3102_appendInstance((*(_117061_s)).ptr(), &(_119417_ins));;
	if ((_120417_existInstance != nullptr)) {
		if ((!(_1b059873a_checkConstraintsStruct((*(_self_))._field_s, &(_119417_ins), &((*(_117034_decl)).get()._field_Token), _120417_existInstance)))) {
			return nullptr;;
		};
		_1b40665bc_pushReference(_self_, &(_120417_existInstance));
		return _120417_existInstance;;
	};
	if ((!(_1b065cca5_checkStructIns(_self_, &(_119417_ins), &((*(_117034_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1b40665bc_pushReference(_self_, &(_119417_ins));
	return _119417_ins;;
}



inline jule::Trait<_1b0647300_Kind> _1b065db96_getDef(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl>* _122830_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40a37a2:;
		if (it != expr_end) {
			jule::Ptr<_1b04cde89_GenericDecl> _122916_g = *it;
			{
				if ((_122916_g.get()._field_Ident == (*(_122830_decl)).get()._field_Ident)) {
					return jule::Trait<_1b0647300_Kind>(_1b066496b_buildPrimType(_122916_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1b40a37a2:;
			++it;
			goto _iter_begin_1b40a37a2;
		}
		_iter_end_1b40a37a2:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40a4253:;
		if (it != expr_end) {
			jule::Ptr<_1b06469b4_TypeAlias> _123521_g = *it;
			{
				if ((_123521_g.get()._field_Ident == (*(_122830_decl)).get()._field_Ident)) {
					if (((*(_122830_decl)).get()._field_Generics.len() > 0LL)) {
						_1b065a148_pushErr(_self_, (*(_122830_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122830_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1b04e5951_StructIns> _124125_st = _1b064b722_Struct(_123521_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_124125_st != nullptr)) {
						jule::Bool _124325_ok = _1b065b7ba_checkIllegalCycles(_self_, _122830_decl, jule::Any(_124125_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_124325_ok))) {
							return nullptr;;
						};
					};
					return _123521_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1b40a4253:;
			++it;
			goto _iter_begin_1b40a4253;
		}
		_iter_end_1b40a4253:;
	};
	if ((!((*(_122830_decl)).get()._field_Binded))) {
		jule::Ptr<_1b051e392_Enum> _125321_e = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b06670de_FindEnum((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident);;
		if ((_125321_e != nullptr)) {
			return jule::Trait<_1b0647300_Kind>(_1b065c0b2_fromEnum(_self_, _122830_decl, &(_125321_e)), 3);;
		};
		jule::Ptr<_1b0520a9c_TypeEnum> _125821_te = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0667430_FindTypeEnum((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident);;
		if ((_125821_te != nullptr)) {
			return jule::Trait<_1b0647300_Kind>(_1b065c4ad_fromTypeEnum(_self_, _122830_decl, &(_125821_te)), 4);;
		};
		jule::Ptr<_1b051bb97_Trait> _126321_t = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0666c9d_FindTrait((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident);;
		if ((_126321_t != nullptr)) {
			return jule::Trait<_1b0647300_Kind>(_1b065c8a9_fromTrait(_self_, _122830_decl, &(_126321_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1b065a148_pushErr(_self_, (*(_122830_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04e2871_Struct> _127217_s = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0666561_FindStruct((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident, (*(_122830_decl)).get()._field_Binded);;
	if ((_127217_s != nullptr)) {
		return jule::Trait<_1b0647300_Kind>(_1b065d855_fromStruct(_self_, _122830_decl, &(_127217_s)), 0);;
	};
	jule::Ptr<_1b06469b4_TypeAlias> _127717_ta = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b0666165_FindTypeAlias((*(_self_))._field_lookup, (*(_122830_decl)).get()._field_Ident, (*(_122830_decl)).get()._field_Binded);;
	if (((_127717_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127717_ta=_1b07320ee_findBuiltinTypeAlias((*(_122830_decl)).get()._field_Ident);
	};
	if ((_127717_ta != nullptr)) {
		return _1b065bbb6_fromTypeAlias(_self_, _122830_decl, &(_127717_ta));;
	};
	_1b065a148_pushErr(_self_, (*(_122830_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122830_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1b0647300_Kind> _1b065ded7_buildIdent(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c22ac_IdentTypeDecl> _128933_decl) {
	return _1b065db96_getDef(_self_, &(_128933_decl));;
}



inline jule::Trait<_1b0647300_Kind> _1b065e328_buildSubIdent(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c25a9_SubIdentTypeDecl> _129336_decl) {
	jule::Trait<_1b0647300_Kind> _129417_ident = _1b065ded7_buildIdent(_self_, _129336_decl.get()._field_Idents[0LL]);;
	if ((_129417_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _129417_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b40b010a:;
			{
				goto _match_end_1b40aea77;
			}
		}
		else {
			_case_begin_1b40aeacc:;
			{
				_1b065a148_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b40aea77:;
	};
	jule::Ptr<_1b0520a9c_TypeEnum> _130517_t = _129417_ident.cast_ptr<_1b0520a9c_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1b04c22ac_IdentTypeDecl>> _130617_idents = _129336_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_130617_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40b10b7:;
		if (it != expr_end) {
			jule::I64 _130713_i = it - expr->begin();
			jule::Ptr<_1b04c22ac_IdentTypeDecl> _130716_id = *it;
			{
				jule::Ptr<_1b05204c5_TypeEnumItem> _130821_item = _1b052165d_FindItem(_130517_t.ptr(), _130716_id.get()._field_Ident);;
				if ((_130821_item == nullptr)) {
					_1b065a148_pushErr(_self_, _130716_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_130517_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130716_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_130617_idents.len() - _130713_i) == 1LL)) {
					_1b065aaa5_pushReferenceByKind(_self_, &(_130821_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1b0647300_Kind>(_130821_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_130517_t=_1b064abd8_TypeEnum(_130821_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_130517_t == nullptr)) {
					_1b065a148_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b40b10b7:;
			++it;
			_130713_i++;
			goto _iter_begin_1b40b10b7;
		}
		_iter_end_1b40b10b7:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b0654153_Sptr> _1b065e669_buildSptrFromType(_1b065990b_typeChecker* _self_, jule::Ptr<_1b06477a6_TypeKind>* _132741_elem) {
	{
		
		if (((*(_132741_elem)) == nullptr)) {
			_case_begin_1b40b497d:;
			{
				return nullptr;;
			}
		}
		else if ((_1b064b722_Struct((*(_132741_elem)).ptr()) != nullptr)) {
			_case_begin_1b40b4a05:;
			{
				jule::Ptr<_1b04e5951_StructIns> _133317_s = _1b064b722_Struct((*(_132741_elem)).ptr());;
				if (((_133317_s.get()._field_Decl != nullptr) && _133317_s.get()._field_Decl.get()._field_Binded)) {
					_1b065a148_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1b064ae6e_Arr((*(_132741_elem)).ptr()) != nullptr) && _1b064ae6e_Arr((*(_132741_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b40b4a7c:;
			{
				_1b065a148_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b40b41db:;
	};
	return jule::new_ptr<_1b0654153_Sptr>(_1b0654153_Sptr{._field_Elem=(*(_132741_elem))});;
}



inline jule::Ptr<_1b0654153_Sptr> _1b065e9aa_buildSptr(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c2c4c_SptrTypeDecl> _134732_decl) {
	jule::Bool _134813_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_134813_cycleRisk;
	});;
	jule::Ptr<_1b06477a6_TypeKind> _135217_elem = _1b06620a6_checkDecl(_self_, &(_134732_decl.get()._field_Elem));;
	return _1b065e669_buildSptrFromType(_self_, &(_135217_elem));;
}



inline jule::Ptr<_1b065791a_Ptr> _1b065eceb_buildPtrFromType(_1b065990b_typeChecker* _self_, jule::Ptr<_1b06477a6_TypeKind>* _135640_elem) {
	{
		
		if (((*(_135640_elem)) == nullptr)) {
			_case_begin_1b40b917a:;
			{
				return nullptr;;
			}
		}
		else if (((_1b064ae6e_Arr((*(_135640_elem)).ptr()) != nullptr) && _1b064ae6e_Arr((*(_135640_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b40b9202:;
			{
				_1b065a148_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1b065791a_Ptr>();;
			}
		}
		_match_end_1b40b906a:;
	};
	return jule::new_ptr<_1b065791a_Ptr>(_1b065791a_Ptr{._field_Elem=(*(_135640_elem))});;
}



inline jule::Ptr<_1b065791a_Ptr> _1b066013c_buildPtr(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c36cb_PtrTypeDecl> _137131_decl) {
	jule::Bool _137213_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_137213_cycleRisk;
	});;
	jule::Ptr<_1b06477a6_TypeKind> _137617_elem = nullptr;;
	if ((!(_1b04c3a3e_IsUnsafe(_137131_decl.ptr())))) {
		_137617_elem=_1b06620a6_checkDecl(_self_, &(_137131_decl.get()._field_Elem));
		return _1b065eceb_buildPtrFromType(_self_, &(_137617_elem));;
	};
	return jule::new_ptr<_1b065791a_Ptr>(_1b065791a_Ptr{._field_Elem=_137617_elem});;
}



inline jule::Ptr<_1b0654b26_Slc> _1b066047d_buildSlc(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c30d2_SlcTypeDecl> _138831_decl) {
	jule::Bool _138913_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_138913_cycleRisk;
	});;
	jule::Ptr<_1b06477a6_TypeKind> _139317_elem = _1b06620a6_checkDecl(_self_, &(_138831_decl.get()._field_Elem));;
	{
		
		if ((_139317_elem == nullptr)) {
			_case_begin_1b40bdb85:;
			{
				return nullptr;;
			}
		}
		else if (((_1b064ae6e_Arr(_139317_elem.ptr()) != nullptr) && _1b064ae6e_Arr(_139317_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b40bdc0c:;
			{
				_1b065a148_pushErr(_self_, _138831_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b40bdb30:;
	};
	return jule::new_ptr<_1b0654b26_Slc>(_1b0654b26_Slc{._field_Elem=_139317_elem});;
}



inline jule::Ptr<_1b0656e47_Arr> _1b06607be_buildArr(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c3e6d_ArrTypeDecl> _140931_decl) {
	jule::I64 _141017_n = 0LL;;
	if ((!(_1b04c42d1_AutoSized(_140931_decl.ptr())))) {
		jule::Ptr<_1b0612672_Data> _141321_size = _1b0637598_evalExpr(_1b05965c3_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140931_decl.get()._field_Size);;
		if ((_141321_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1b0613046_IsConst(_141321_size.ptr())))) {
			_1b065a148_pushErr(_self_, _140931_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1b064a19e_Prim(_141321_size.get()._field_Kind.ptr()) == nullptr) || (!(_1ad37c1ad_IsInt(_1b064a19e_Prim(_141321_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1b065a148_pushErr(_self_, _140931_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_141017_n=static_cast<jule::I64>(static_cast<jule::I64>(_1ad380557_AsI64(_141321_size.get()._field_Constant.ptr())));
		if ((_141017_n < 0LL)) {
			_1b065a148_pushErr(_self_, _140931_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _143121_max = _1ad3760ca_MaxI(jule::Str("int", 3));;
			if (((_1ad36dc1b_BitSize != 64LL) && (static_cast<jule::I64>(_141017_n) > _143121_max))) {
				_1b065a148_pushErr(_self_, _140931_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1b064484c_constoa(&(_141321_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1ad36c5bb_FmtInt(_143121_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1b06477a6_TypeKind> _144017_elem = _1b06620a6_checkDecl(_self_, &(_140931_decl.get()._field_Elem));;
	{
		
		if ((_144017_elem == nullptr)) {
			_case_begin_1b40c67e7:;
			{
				return nullptr;;
			}
		}
		else if (((_1b064ae6e_Arr(_144017_elem.ptr()) != nullptr) && _1b064ae6e_Arr(_144017_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b40c685d:;
			{
				_1b065a148_pushErr(_self_, _140931_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b40c650b:;
	};
	return jule::new_ptr<_1b0656e47_Arr>(_1b0656e47_Arr{._field_Auto=_1b04c42d1_AutoSized(_140931_decl.ptr()), ._field_N=_141017_n, ._field_Elem=_144017_elem});;
}



inline jule::Ptr<_1b06562ba_Map> _1b0660b10_buildMap(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c46bb_MapTypeDecl> _145831_decl) {
	jule::Bool _145913_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_145913_cycleRisk;
	});;
	jule::Ptr<_1b06477a6_TypeKind> _146317_key = _1b06620a6_checkDecl(_self_, &(_145831_decl.get()._field_Key));;
	if ((_146317_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b06477a6_TypeKind> _146817_val = _1b06620a6_checkDecl(_self_, &(_145831_decl.get()._field_Val));;
	if ((_146817_val == nullptr)) {
		return nullptr;;
	};
	if ((_1b064a952_Enum(_146817_val.ptr()) != nullptr)) {
		_1b065a148_pushErr(_self_, _145831_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1b06562ba_Map>(_1b06562ba_Map{._field_Key=_146317_key, ._field_Val=_146817_val});;
}



inline jule::Ptr<_1b065571a_Tuple> _1b0660e51_buildTuple(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c33ce_TupleTypeDecl> _148233_decl) {
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _148317_types = jule::Slice<jule::Ptr<_1b06477a6_TypeKind>>::alloc(0LL, _148233_decl.get()._field_Types.len());;
	{
		auto expr = &(_148233_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40cbd2a:;
		if (it != expr_end) {
			jule::Ptr<_1b04c1ba2_TypeDecl> _148421_t = *it;
			{
				jule::Ptr<_1b06477a6_TypeKind> _148521_kind = _1b06620a6_checkDecl(_self_, &(_148421_t));;
				if ((_148521_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> &__jule_push_dest = _148317_types; __jule_push_dest.push(_148521_kind); };
			}
			_iter_next_1b40cbd2a:;
			++it;
			goto _iter_begin_1b40cbd2a;
		}
		_iter_end_1b40cbd2a:;
	};
	return jule::new_ptr<_1b065571a_Tuple>(_1b065571a_Tuple{._field_Types=_148317_types});;
}



inline jule::Bool _1b0661292_checkFuncTypes(_1b065990b_typeChecker* _self_, jule::Ptr<_1b050b802_FnIns>* _149538_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_149538_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b40cd5e0:;
		if (it != expr_end) {
			jule::Ptr<_1b050a856_ParamIns> _149621_p = *it;
			{
				_149621_p.get()._field_Kind=_1b0661c65_build(_self_, &(_149621_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_149621_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1b0598dde_checkFnParamKind((*(_self_))._field_s, &(_149621_p));
			}
			_iter_next_1b40cd5e0:;
			++it;
			goto _iter_begin_1b40cd5e0;
		}
		_iter_end_1b40cd5e0:;
	};
	if ((!(_1b0508d71_IsVoid((*(_149538_f)).get()._field_Decl.ptr())))) {
		(*(_149538_f)).get()._field_Result=_1b0661c65_build(_self_, &((*(_149538_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_149538_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1b050b802_FnIns> _1b06615d3_buildFunc(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04d393e_FnDecl> _151332_decl) {
	jule::Bool _151413_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_151413_cycleRisk;
	});;
	if ((_151332_decl.get()._field_Generics.len() > 0LL)) {
		_1b065a148_pushErr(_self_, _151332_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b05088ed_Fn> _152317_f = _1b0512ebd_buildFunc(_151332_decl);;
	jule::I64 _152513_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1b05a31d4_checkAnonFuncDecl((*(_self_))._field_s, &(_152317_f));
	if ((_152513_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1b050b802_FnIns> _153117_ins = _1b0509dc7_instanceForce(_152317_f);;
	_153117_ins.get()._field_Anon=true;
	jule::Bool _153413_ok = _1b0661292_checkFuncTypes(_self_, &(_153117_ins));;
	if ((!(_153413_ok))) {
		return nullptr;;
	};
	return _153117_ins;;
}



inline jule::Trait<_1b0647300_Kind> _1b0661924_buildByNamespace(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c2950_NamespaceTypeDecl> _154239_decl) {
	jule::Str _154313_path = _1b06645c5_buildLinkPathByTokens(&(_154239_decl.get()._field_Idents));;
	jule::Ptr<_1b056a487_ImportInfo> _154417_imp = _1b0667584_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1b066586d_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>([=](jule::Ptr<_1b056a487_ImportInfo> _154452_imp) mutable -> jule::Bool {
		if (((_154239_decl.get()._field_Idents.len() == 1LL) && (_154452_imp.get()._field_Alias == _154313_path))) {
			return true;;
		};
		return ((_154452_imp.get()._field_LinkPath == _154313_path) && _1b056d0a0_isAccessibleViaSelection(_154452_imp.ptr()));;
	}));;
	jule::Str _155113_selfIdent = jule::Str("self", 4);;
	if (((_154417_imp == nullptr) || (!(_1b056c9c8_isLookupable(_154417_imp.ptr(), &(_155113_selfIdent)))))) {
		_1b065a148_pushErr(_self_, _154239_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_154313_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1b065a544_disallowBuiltin(_self_);
	jule::Trait<_1b0667584_Lookup> _155817_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1b0667584_Lookup>(_154417_imp, 1);
	jule::Ptr<_1b06477a6_TypeKind> _156017_kind = _1b06620a6_checkDecl(_self_, &(_154239_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155817_lookup;
	_1b065a346_allowBuiltin(_self_);
	return jule::Trait<_1b0647300_Kind>(_156017_kind, 19);;
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b0661c65_build(_1b065990b_typeChecker* _self_, jule::Any* _156629_declKind) {
	jule::Trait<_1b0647300_Kind> _156717_kind = nullptr;;
	{
		auto &_match_expr{ (*(_156629_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b40db3bc:;
			{
				jule::Trait<_1b0647300_Kind> _157021_t = _1b065ded7_buildIdent(_self_, (*(_156629_declKind)).cast_ptr<_1b04c22ac_IdentTypeDecl>(&__jule_any_type20));;
				if ((_157021_t != nullptr)) {
					_156717_kind=_157021_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b40da784:;
			{
				jule::Trait<_1b0647300_Kind> _157521_t = _1b065e328_buildSubIdent(_self_, (*(_156629_declKind)).cast_ptr<_1b04c25a9_SubIdentTypeDecl>(&__jule_any_type93));;
				if ((_157521_t != nullptr)) {
					_156717_kind=_157521_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b40da982:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b0654153_Sptr> _158121_t = _1b065e9aa_buildSptr(_self_, (*(_156629_declKind)).cast_ptr<_1b04c2c4c_SptrTypeDecl>(&__jule_any_type78));;
				if ((_158121_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_158121_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b40da9e8:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b065791a_Ptr> _158721_t = _1b066013c_buildPtr(_self_, (*(_156629_declKind)).cast_ptr<_1b04c36cb_PtrTypeDecl>(&__jule_any_type77));;
				if ((_158721_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_158721_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b40daa5e:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b0654b26_Slc> _159321_t = _1b066047d_buildSlc(_self_, (*(_156629_declKind)).cast_ptr<_1b04c30d2_SlcTypeDecl>(&__jule_any_type76));;
				if ((_159321_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_159321_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b40daac5:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b0656e47_Arr> _159921_t = _1b06607be_buildArr(_self_, (*(_156629_declKind)).cast_ptr<_1b04c3e6d_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159921_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_159921_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b40db499:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b06562ba_Map> _160521_t = _1b0660b10_buildMap(_self_, (*(_156629_declKind)).cast_ptr<_1b04c46bb_MapTypeDecl>(&__jule_any_type79));;
				if ((_160521_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_160521_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b40db510:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b065571a_Tuple> _161121_t = _1b0660e51_buildTuple(_self_, (*(_156629_declKind)).cast_ptr<_1b04c33ce_TupleTypeDecl>(&__jule_any_type80));;
				if ((_161121_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_161121_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b40db576:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1b050b802_FnIns> _161721_t = _1b06615d3_buildFunc(_self_, (*(_156629_declKind)).cast_ptr<_1b04d393e_FnDecl>(&__jule_any_type14));;
				if ((_161721_t != nullptr)) {
					_156717_kind=jule::Trait<_1b0647300_Kind>(_161721_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b40db5dc:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1b0647300_Kind> _162321_t = _1b0661924_buildByNamespace(_self_, (*(_156629_declKind)).cast_ptr<_1b04c2950_NamespaceTypeDecl>(&__jule_any_type97));;
				if ((_162321_t != nullptr)) {
					_156717_kind=_162321_t;
				};
			}
		}
		else {
			_case_begin_1b40da91b:;
			{
				_1b065a148_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b40da8b6:;
	};
	if ((_156717_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _156717_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1b40e7593:;
			{
				return _156717_kind.cast_ptr<_1b06477a6_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1b40db8b7:;
			{
				jule::Ptr<_1b06477a6_TypeKind> _163821_tk = jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=_156717_kind});;
				{
					auto &_match_expr{ _156717_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1b40e7708:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_163821_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1b40e7780:;
						{
							jule::Ptr<_1b04e5951_StructIns> _164521_s = _156717_kind.cast_ptr<_1b04e5951_StructIns>(0);;
							if (((_164521_s.get()._field_Decl != nullptr) && _164521_s.get()._field_Decl.get()._field_Binded)) {
								_163821_tk.get()._field_BindIdent=_164521_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1b40e7692:;
				};
				return _163821_tk;;
			}
		}
		_match_end_1b40e676d:;
	};
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b06620a6_checkDecl(_1b065990b_typeChecker* _self_, jule::Ptr<_1b04c1ba2_TypeDecl>* _165433_decl) {
	jule::Ptr<_1aa49b1d1_Token> _165617_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_165433_decl)).get()._field_Token;
	jule::Ptr<_1b06477a6_TypeKind> _165917_kind = _1b0661c65_build(_self_, &((*(_165433_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_165617_errorToken;
	return _165917_kind;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b065990b_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "cycleRisk:" << _Src._field_cycleRisk << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1b0662a02_prim(jule::Str* _168121_ident, jule::Ptr<_1b0650627_Prim> _168133_t) {
	return (_168133_t.get()._field_Kind == (*(_168121_ident)));;
}



inline jule::Bool static__1b0662d76_exist(jule::Str* _168522_ident, jule::Ptr<_1b06477a6_TypeKind>* _168539_k) {
	{
		
		if ((_1b064a19e_Prim((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed28b:;
			{
				return static__1b0662a02_prim(_168522_ident, _1b064a19e_Prim((*(_168539_k)).ptr()));;
			}
		}
		else if ((_1b064a435_Sptr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed313:;
			{
				jule::Ptr<_1b0654153_Sptr> _169021_sptr = _1b064a435_Sptr((*(_168539_k)).ptr());;
				return static__1b0662d76_exist(_168522_ident, &(_169021_sptr.get()._field_Elem));;
			}
		}
		else if ((_1b064a6bb_Ptr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed588:;
			{
				jule::Ptr<_1b065791a_Ptr> _169321_ptr = _1b064a6bb_Ptr((*(_168539_k)).ptr());;
				return static__1b0662d76_exist(_168522_ident, &(_169321_ptr.get()._field_Elem));;
			}
		}
		else if ((_1b064b205_Slc((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed5ee:;
			{
				jule::Ptr<_1b0654b26_Slc> _169621_slc = _1b064b205_Slc((*(_168539_k)).ptr());;
				return static__1b0662d76_exist(_168522_ident, &(_169621_slc.get()._field_Elem));;
			}
		}
		else if ((_1b064ae6e_Arr((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed665:;
			{
				jule::Ptr<_1b0656e47_Arr> _169921_arr = _1b064ae6e_Arr((*(_168539_k)).ptr());;
				return static__1b0662d76_exist(_168522_ident, &(_169921_arr.get()._field_Elem));;
			}
		}
		else if ((_1b064bc3e_Map((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed6dc:;
			{
				jule::Ptr<_1b06562ba_Map> _170221_m = _1b064bc3e_Map((*(_168539_k)).ptr());;
				return (static__1b0662d76_exist(_168522_ident, &(_170221_m.get()._field_Key)) || static__1b0662d76_exist(_168522_ident, &(_170221_m.get()._field_Val)));;
			}
		}
		else if ((_1b064b722_Struct((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed764:;
			{
				jule::Ptr<_1b04e5951_StructIns> _170621_s = _1b064b722_Struct((*(_168539_k)).ptr());;
				{
					auto expr = &(_170621_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4103b76:;
					if (it != expr_end) {
						jule::Ptr<_1b0645dc0_InsGeneric> _170725_g = *it;
						{
							if (static__1b0662d76_exist(_168522_ident, &(_170725_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b4103b76:;
						++it;
						goto _iter_begin_1b4103b76;
					}
					_iter_end_1b4103b76:;
				};
				return false;;
			}
		}
		else if ((_1b064b48b_Fn((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed874:;
			{
				jule::Ptr<_1b050b802_FnIns> _171421_f = _1b064b48b_Fn((*(_168539_k)).ptr());;
				{
					auto expr = &(_171421_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4105260:;
					if (it != expr_end) {
						jule::Ptr<_1b050a856_ParamIns> _171525_p = *it;
						{
							if (_1b0507545_IsSelf(_171525_p.get()._field_Decl.ptr())) {
								goto _iter_next_1b4105260;
							};
							if (static__1b0662d76_exist(_168522_ident, &(_171525_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b4105260:;
						++it;
						goto _iter_begin_1b4105260;
					}
					_iter_end_1b4105260:;
				};
				if ((_171421_f.get()._field_Result != nullptr)) {
					return static__1b0662d76_exist(_168522_ident, &(_171421_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1b064bec5_Tup((*(_168539_k)).ptr()) != nullptr)) {
			_case_begin_1b40ed8da:;
			{
				jule::Ptr<_1b065571a_Tuple> _172821_tup = _1b064bec5_Tup((*(_168539_k)).ptr());;
				{
					auto expr = &(_172821_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b410720c:;
					if (it != expr_end) {
						jule::Ptr<_1b06477a6_TypeKind> _172925_t = *it;
						{
							if (static__1b0662d76_exist(_168522_ident, &(_172925_t))) {
								return true;;
							};
						}
						_iter_next_1b410720c:;
						++it;
						goto _iter_begin_1b410720c;
					}
					_iter_end_1b410720c:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b40ed148:;
			{
				return false;;
			}
		}
		_match_end_1b40ed08d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0662590_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b116c594_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11b4102_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1b11b5103_stop(_1b11b4993_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1b11b5389_stopped(_1b11b4993_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1b11b5620_finished(_1b11b4993_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1b11b58a6_isLastSt(_1b11b4993_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1b11b5c19_pushErr(_1b11b4993_scopeParser* _self_, jule::Ptr<_1aa49b1d1_Token> _18926_token, jule::Str _18941_fmt) {
	_1b11d361b_pushErr((*(_self_))._field_p.ptr(), _18926_token, _18941_fmt, jule::Slice<jule::Any>());
}



inline void _1b11b607c_pushSuggestion(_1b11b4993_scopeParser* _self_, jule::Str _19433_fmt, jule::Slice<jule::Any> _19446_args) {
	_1b11d397e_pushSuggestion((*(_self_))._field_p.ptr(), _19433_fmt, _19446_args);
}



inline void _1b11b6335_insertAsNext(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _19836_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1b11b4102_stmt>(_1b11b4102_stmt{._field_tokens=(*(_19836_tokens)), });
}



inline jule::Ptr<_1b11b4102_stmt> _1b11b65bb_next(_1b11b4993_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11b69b7_buildScope(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _20834_tokens, jule::Ptr<_1aa49b1d1_Token> _20856_end) {
	jule::Ptr<_1b04d1ca0_ScopeTree> _20917_s = _1b11b2d8c_newScope();;
	_20917_s.get()._field_Parent=(*(_self_))._field_s;
	_20917_s.get()._field_End=_20856_end;
	_1b11b4993_scopeParser _21217_ssp = _1b11b4993_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1b11c14e9_build(&_21217_ssp, _20834_tokens, &(_20917_s));
	return _20917_s;;
}



inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11b6d08_buildVarSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _21934_tokens) {
	jule::Ptr<_1b04d4a1c_VarDecl> _22017_v = _1b11d6498_buildVar((*(_self_))._field_p, (*(_21934_tokens)));;
	_22017_v.get()._field_Scope=(*(_self_))._field_s;
	return _22017_v;;
}



inline jule::Ptr<_1b04d4de6_RetSt> _1b11b7149_buildRetSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _22533_tokens) {
	jule::Ptr<_1b04d4de6_RetSt> _22617_st = jule::new_ptr<_1b04d4de6_RetSt>(_1b04d4de6_RetSt{._field_Token=_22533_tokens[0LL], });;
	if ((_22533_tokens.len() > 1LL)) {
		_22533_tokens=_22533_tokens.slice(1LL);
		_22617_st.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_22533_tokens));
	};
	return _22617_st;;
}



inline jule::Ptr<_1b04d5589_Iter> _1b11b748a_buildWhileNextIter(_1b11b4993_scopeParser* _self_, jule::Ptr<_1b11b4102_stmt>* _23642_s) {
	jule::Ptr<_1b04d5589_Iter> _23717_it = jule::new_ptr<_1b04d5589_Iter>(_1b04d5589_Iter{._field_Token=(*(_23642_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _24017_tokens = (*(_23642_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1b04d5db4_WhileKind> _24117_kind = jule::new_ptr<_1b04d5db4_WhileKind>();;
	if ((_24017_tokens.len() > 0LL)) {
		_24117_kind.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_24017_tokens));
	};
	if (_1b11b58a6_isLastSt(_self_)) {
		_1b11b5c19_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24017_tokens=_1b11b65bb_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _25317_stTokens = _1b11ccd63_getBlockExpr(&(_24017_tokens));;
	if ((_25317_stTokens.len() > 0LL)) {
		jule::Ptr<_1b11b4102_stmt> _25521_stmt = jule::new_ptr<_1b11b4102_stmt>(_1b11b4102_stmt{._field_tokens=_25317_stTokens, ._field_terminated=(*(_23642_s)).get()._field_terminated});;
		_24117_kind.get()._field_NextToken=_25317_stTokens[0LL];
		_24117_kind.get()._field_Next=_1b11c1186_buildSt(_self_, &(_25521_stmt));
	};
	jule::I64 _26317_i = _25317_stTokens.len();;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _26417_blockTokens = _1b11d1053_range(&(_26317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_24017_tokens));;
	if ((_26417_blockTokens == nullptr)) {
		_1b11b5103_stop(_self_);
		_1b11b5c19_pushErr(_self_, _23717_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1b11b607c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26317_i < _24017_tokens.len())) {
		_1b11b5c19_pushErr(_self_, _24017_tokens[_26317_i], jule::Str("invalid syntax", 14));
	};
	_23717_it.get()._field_Scope=_1b11b69b7_buildScope(_self_, &(_26417_blockTokens), _24017_tokens[(_26317_i - 1LL)]);
	_23717_it.get()._field_Kind=jule::Any(_24117_kind, &__jule_any_type38);
	return _23717_it;;
}



inline jule::Ptr<_1b04d5db4_WhileKind> _1b11b77cb_buildWhileIterKind(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _28142_tokens) {
	return jule::new_ptr<_1b04d5db4_WhileKind>(_1b04d5db4_WhileKind{._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, _28142_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11b7b1c_getRangeKindKeysTokens(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _28746_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _28818_vars;;
	jule::Slice<_1aa3c3a21_Log> _28824_errs;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(_28746_toks, static_cast<jule::U64>(5LLU), true);
		_28818_vars = __jule_assign_result.__jule_result_arg0;
		_28824_errs = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_28824_errs);;
	return _28818_vars;;
}



inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11b7e5d_buildRangeKindKey(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _29341_tokens) {
	if (((*(_29341_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b04d4a1c_VarDecl> _29717_key = jule::new_ptr<_1b04d4a1c_VarDecl>(_1b04d4a1c_VarDecl{._field_Token=(*(_29341_tokens))[0LL], });;
	if ((_29717_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		_29717_key.get()._field_Mutable=true;
		if (((*(_29341_tokens)).len() == 1LL)) {
			_1b11b5c19_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29717_key.get()._field_Token=(*(_29341_tokens))[1LL];
	} else if (((*(_29341_tokens)).len() > 1LL)) {
		_1b11b5c19_pushErr(_self_, (*(_29341_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29717_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11b5c19_pushErr(_self_, _29717_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1b11b607c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29717_key.get()._field_Ident=_29717_key.get()._field_Token.get()._field_Kind;
	return _29717_key;;
}



inline jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> _1b11b829e_buildRangeKindKeys(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>* _31842_parts) {
	jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> _31917_keys = nullptr;;
	{
		auto expr = _31842_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4234625:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _32021_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> &__jule_push_dest = _31917_keys; __jule_push_dest.push(_1b11b7e5d_buildRangeKindKey(_self_, &(_32021_tokens))); };
			}
			_iter_next_1b4234625:;
			++it;
			goto _iter_begin_1b4234625;
		}
		_iter_end_1b4234625:;
	};
	return _31917_keys;;
}



inline void _1b11b8612_setupRangeKindKeysPlain(_1b11b4993_scopeParser* _self_, jule::Ptr<_1b04d67bb_RangeKind>* _32647_rng, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _32669_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _32717_keyTokens = _1b11b7b1c_getRangeKindKeysTokens(_self_, _32669_tokens);;
	if ((_32717_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32717_keyTokens.len() > 2LL)) {
		_1b11b5c19_pushErr(_self_, (*(_32647_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> _33417_keys = _1b11b829e_buildRangeKindKeys(_self_, &(_32717_keyTokens));;
	(*(_32647_rng)).get()._field_KeyA=_33417_keys[0LL];
	if ((_33417_keys.len() > 1LL)) {
		(*(_32647_rng)).get()._field_KeyB=_33417_keys[1LL];
	};
}



inline void _1b11b8975_setupRangeKindKeysExplicit(_1b11b4993_scopeParser* _self_, jule::Ptr<_1b04d67bb_RangeKind>* _34150_rng, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _34172_tokens) {
	jule::I64 _34217_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _34317_rang = _1b11d1053_range(&(_34217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _34172_tokens);;
	if ((_34217_i < (*(_34172_tokens)).len())) {
		_1b11b5c19_pushErr(_self_, (*(_34150_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1b11b8612_setupRangeKindKeysPlain(_self_, _34150_rng, &(_34317_rang));
}



inline void _1b11b8cd8_setupRangeKindKeys(_1b11b4993_scopeParser* _self_, jule::Ptr<_1b04d67bb_RangeKind>* _35042_rng, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _35064_tokens) {
	if (((*(_35064_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(74LLU))) {
		_1b11b8975_setupRangeKindKeysExplicit(_self_, _35042_rng, _35064_tokens);
		return;;
	};
	_1b11b8612_setupRangeKindKeysPlain(_self_, _35042_rng, _35064_tokens);
}



inline jule::Ptr<_1b04d67bb_RangeKind> _1b11b928e_buildRangeIterKind(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _35842_var_tokens, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _35914_exprTokens, jule::Ptr<_1aa49b1d1_Token>* _35941_inToken) {
	jule::Ptr<_1b04d67bb_RangeKind> _36017_rng = jule::new_ptr<_1b04d67bb_RangeKind>(_1b04d67bb_RangeKind{._field_InToken=(*(_35941_inToken)), });;
	if (((*(_35914_exprTokens)).len() == 0LL)) {
		_1b11b5c19_pushErr(_self_, _36017_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36017_rng;;
	};
	_36017_rng.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, _35914_exprTokens);
	if (((*(_35842_var_tokens)).len() > 0LL)) {
		_1b11b8cd8_setupRangeKindKeys(_self_, &(_36017_rng), _35842_var_tokens);
	};
	return _36017_rng;;
}



inline jule::Any _1b11b968a_buildCommonIterKind(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _37443_tokens, jule::Ptr<_1aa49b1d1_Token>* _37462_err_tok) {
	jule::I64 _37517_braceN = 0LL;;
	{
		auto expr = _37443_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b423d563:;
		if (it != expr_end) {
			jule::I64 _37614_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _37621_tok = *it;
			{
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b423e487:;
						{
							(_37517_braceN)++;
							goto _iter_next_1b423d563;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b423e50e:;
						{
							(_37517_braceN)--;
						}
					}
					_match_end_1b423e3ee:;
				};
				if ((_37517_braceN != 0LL)) {
					goto _iter_next_1b423d563;
				};
				{
					auto &_match_expr{ _37621_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(12LLU)) {
						_case_begin_1b423e1ac:;
						{
							jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _39325_declTokens = (*(_37443_tokens)).slice(0LL, _37614_i);;
							jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _39425_exprTokens = (*(_37443_tokens)).slice((_37614_i + 1LL));;
							return jule::Any(_1b11b928e_buildRangeIterKind(_self_, &(_39325_declTokens), &(_39425_exprTokens), &(_37621_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1b4240895:;
				};
			}
			_iter_next_1b423d563:;
			++it;
			_37614_i++;
			goto _iter_begin_1b423d563;
		}
		_iter_end_1b423d563:;
	};
	return jule::Any(_1b11b77cb_buildWhileIterKind(_self_, _37443_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1b04d5589_Iter> _1b11b99cb_buildCommonIter(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _40138_tokens) {
	jule::Ptr<_1b04d5589_Iter> _40217_it = jule::new_ptr<_1b04d5589_Iter>(_1b04d5589_Iter{._field_Token=_40138_tokens[0LL], });;
	_40138_tokens=_40138_tokens.slice(1LL);
	if ((_40138_tokens.len() == 0LL)) {
		_1b11b5103_stop(_self_);
		_1b11b5c19_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1b11b607c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _41217_exprTokens = _1b11ccd63_getBlockExpr(&(_40138_tokens));;
	if ((_41217_exprTokens.len() > 0LL)) {
		_40217_it.get()._field_Kind=_1b11b968a_buildCommonIterKind(_self_, &(_41217_exprTokens), &(_40217_it.get()._field_Token));
	};
	jule::I64 _41617_i = _41217_exprTokens.len();;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _41717_scopeTokens = _1b11d1053_range(&(_41617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_40138_tokens));;
	if ((_41717_scopeTokens == nullptr)) {
		_1b11b5103_stop(_self_);
		_1b11b5c19_pushErr(_self_, _40217_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1b11b607c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_41617_i < _40138_tokens.len())) {
		_1b11b5c19_pushErr(_self_, _40138_tokens[_41617_i], jule::Str("invalid syntax", 14));
	};
	_40217_it.get()._field_Scope=_1b11b69b7_buildScope(_self_, &(_41717_scopeTokens), _40138_tokens[(_41617_i - 1LL)]);
	return _40217_it;;
}



inline jule::Ptr<_1b04d5589_Iter> _1b11b9d1c_buildIterSt(_1b11b4993_scopeParser* _self_, jule::Ptr<_1b11b4102_stmt>* _43135_st) {
	if ((*(_43135_st)).get()._field_terminated) {
		return _1b11b748a_buildWhileNextIter(_self_, _43135_st);;
	};
	return _1b11b99cb_buildCommonIter(_self_, (*(_43135_st)).get()._field_tokens);;
}



inline jule::Ptr<_1b04d6b95_BreakSt> _1b11ba15d_buildBreakSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _43836_tokens) {
	jule::Ptr<_1b04d6b95_BreakSt> _43917_brk = jule::new_ptr<_1b04d6b95_BreakSt>(_1b04d6b95_BreakSt{._field_Token=(*(_43836_tokens))[0LL], });;
	if (((*(_43836_tokens)).len() > 1LL)) {
		if (((*(_43836_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b11b5c19_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1b11b607c_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_43917_brk.get()._field_Label=(*(_43836_tokens))[1LL];
			if (((*(_43836_tokens)).len() > 2LL)) {
				_1b11b5c19_pushErr(_self_, (*(_43836_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _43917_brk;;
}



inline jule::Ptr<_1b04d706e_ContSt> _1b11ba49e_buildContSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _45635_tokens) {
	jule::Ptr<_1b04d706e_ContSt> _45717_cont = jule::new_ptr<_1b04d706e_ContSt>(_1b04d706e_ContSt{._field_Token=(*(_45635_tokens))[0LL], });;
	if (((*(_45635_tokens)).len() > 1LL)) {
		if (((*(_45635_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b11b5c19_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1b11b607c_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_45717_cont.get()._field_Label=(*(_45635_tokens))[1LL];
			if (((*(_45635_tokens)).len() > 2LL)) {
				_1b11b5c19_pushErr(_self_, (*(_45635_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _45717_cont;;
}



inline jule::Ptr<_1b04d7525_If> _1b11ba7e0_buildIf(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _47431_tokens) {
	jule::Ptr<_1b04d7525_If> _47517_model = jule::new_ptr<_1b04d7525_If>(_1b04d7525_If{._field_Token=(*(_47431_tokens))[0LL], });;
	(*(_47431_tokens))=(*(_47431_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _47917_exprTokens = _1b11ccd63_getBlockExpr(_47431_tokens);;
	jule::I64 _48017_i = 0LL;;
	if ((_47917_exprTokens.len() == 0LL)) {
		_1b11b5c19_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48017_i=static_cast<jule::I64>(_47917_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _48617_scopeTokens = _1b11d1053_range(&(_48017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _47431_tokens);;
	if ((_48617_scopeTokens == nullptr)) {
		_1b11b5103_stop(_self_);
		_1b11b5c19_pushErr(_self_, _47517_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1b11b607c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa49b1d1_Token> _49317_end = (*(_47431_tokens))[(_48017_i - 1LL)];;
	if ((_48017_i < (*(_47431_tokens)).len())) {
		if (((*(_47431_tokens))[_48017_i].get()._field_Id == static_cast<jule::U64>(14LLU))) {
			(*(_47431_tokens))=(*(_47431_tokens)).slice(_48017_i);
		} else {
			_1b11b5c19_pushErr(_self_, (*(_47431_tokens))[_48017_i], jule::Str("invalid syntax", 14));
			(*(_47431_tokens))=nullptr;
		};
	};
	_47517_model.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_47917_exprTokens));
	_47517_model.get()._field_Scope=_1b11b69b7_buildScope(_self_, &(_48617_scopeTokens), _49317_end);
	return _47517_model;;
}



inline jule::Ptr<_1b04d78ee_Else> _1b11bab31_buildElse(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _50733_tokens) {
	jule::Ptr<_1b04d78ee_Else> _50817_els = jule::new_ptr<_1b04d78ee_Else>(_1b04d78ee_Else{._field_Token=(*(_50733_tokens))[0LL], });;
	(*(_50733_tokens))=(*(_50733_tokens)).slice(1LL);
	jule::I64 _51217_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _51317_scopeTokens = _1b11d1053_range(&(_51217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _50733_tokens);;
	if ((_51317_scopeTokens == nullptr)) {
		if ((_51217_i < (*(_50733_tokens)).len())) {
			_1b11b5c19_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1b11b5103_stop(_self_);
			_1b11b5c19_pushErr(_self_, _50817_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1b11b607c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51217_i < (*(_50733_tokens)).len())) {
		_1b11b5c19_pushErr(_self_, (*(_50733_tokens))[_51217_i], jule::Str("invalid syntax", 14));
	};
	_50817_els.get()._field_Scope=_1b11b69b7_buildScope(_self_, &(_51317_scopeTokens), (*(_50733_tokens))[(_51217_i - 1LL)]);
	return _50817_els;;
}



inline jule::Ptr<_1b04d7da5_Conditional> _1b11bae72_buildIfElseChain(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _53139_tokens) {
	jule::Ptr<_1b04d7da5_Conditional> _53217_chain = jule::new_ptr<_1b04d7da5_Conditional>(_1b04d7da5_Conditional{._field_Head=_1b11ba7e0_buildIf(_self_, &(_53139_tokens)), });;
	if ((_53217_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53139_tokens.len() != 0LL)) {
		{
			if ((_53139_tokens[0LL].get()._field_Id != static_cast<jule::U64>(14LLU))) {
				goto _iter_end_1b4258c10;
			};
			if (((_53139_tokens.len() > 1LL) && (_53139_tokens[1LL].get()._field_Id == static_cast<jule::U64>(13LLU)))) {
				_53139_tokens=_53139_tokens.slice(1LL);
				jule::Ptr<_1b04d7525_If> _54425_elif = _1b11ba7e0_buildIf(_self_, &(_53139_tokens));;
				{ jule::Slice<jule::Ptr<_1b04d7525_If>> &__jule_push_dest = _53217_chain.get()._field_Tail; __jule_push_dest.push(_54425_elif); };
				goto _iter_next_1b4258c10;
			};
			_53217_chain.get()._field_Default=_1b11bab31_buildElse(_self_, &(_53139_tokens));
			goto _iter_end_1b4258c10;
		}
	_iter_next_1b4258c10:;
	}
	_iter_end_1b4258c10:;;
	return _53217_chain;;
}



inline jule::Ptr<_1b04c5ed6_Expr> _1b11bb2b3_buildCoCallSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _55436_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _55513_token = _55436_tokens[0LL];;
	_55436_tokens=_55436_tokens.slice(1LL);
	jule::Ptr<_1b04c5ed6_Expr> _55717_e = _1b11d3cc0_buildExpr((*(_self_))._field_p, &(_55436_tokens));;
	if ((_55717_e == nullptr)) {
		return _55717_e;;
	};
	{
		auto &_match_expr{ _55717_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b425c95b:;
			{
				_55717_e.get()._field_Kind.cast_ptr<_1b04c9cdc_FnCallExpr>(&__jule_any_type112).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b425cc36:;
			{
				_1b11b5c19_pushErr(_self_, _55513_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1b425cbd1:;
	};
	return _55717_e;;
}



inline jule::Ptr<_1b04ce73c_GotoSt> _1b11bb604_buildGotoSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _57035_tokens) {
	jule::Ptr<_1b04ce73c_GotoSt> _57117_gt = jule::new_ptr<_1b04ce73c_GotoSt>(_1b04ce73c_GotoSt{._field_Token=(*(_57035_tokens))[0LL], });;
	if (((*(_57035_tokens)).len() == 1LL)) {
		_1b11b5c19_pushErr(_self_, _57117_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57035_tokens)).len() > 2LL)) {
		_1b11b5c19_pushErr(_self_, (*(_57035_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1aa49b1d1_Token> _58017_identToken = (*(_57035_tokens))[1LL];;
	if ((_58017_identToken.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11b5c19_pushErr(_self_, _58017_identToken, jule::Str("invalid syntax", 14));
		_1b11b607c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57117_gt;;
	};
	_57117_gt.get()._field_Label=_58017_identToken;
	return _57117_gt;;
}



inline jule::Ptr<_1b04cea39_FallSt> _1b11bb945_buildFallSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _59035_tokens) {
	jule::Ptr<_1b04cea39_FallSt> _59117_fll = jule::new_ptr<_1b04cea39_FallSt>(_1b04cea39_FallSt{._field_Token=(*(_59035_tokens))[0LL]});;
	if (((*(_59035_tokens)).len() > 1LL)) {
		_1b11b5c19_pushErr(_self_, (*(_59035_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59117_fll;;
}



inline jule::Ptr<_1b04d85e2_TypeAliasDecl> _1b11bbc86_buildTypeAliasSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _60040_tokens) {
	jule::Ptr<_1b04d85e2_TypeAliasDecl> _60117_tad = _1b11d5563_buildTypeAliasDecl((*(_self_))._field_p, _60040_tokens);;
	_60117_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60117_tad;;
}



inline void _1b11bc25e_pushCaseExpr(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _60635_tokens, jule::Ptr<_1aa49b1d1_Token> _60657_token, jule::Bool _6079_typeMatch, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>* _60731_exprs) {
	if ((_60635_tokens.len() == 0LL)) {
		return;;
	};
	if (_6079_typeMatch) {
		jule::I64 _61321_i = 0LL;;
		jule::Ptr<_1b04c1ba2_TypeDecl> _61422_t;;
		jule::Bool _61425_ok = false;;
		({
			__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, &(_60635_tokens), (&(_61321_i)), true);
			_61422_t = __jule_assign_result.__jule_result_arg0;
			_61425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_61425_ok) {
			{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(jule::new_ptr<_1b04c5ed6_Expr>(_1b04c5ed6_Expr{._field_Token=_60635_tokens[0LL], ._field_End=_60635_tokens[(_60635_tokens.len() - 1LL)], ._field_Kind=jule::Any(_61422_t, &__jule_any_type95)})); };
			if ((_61321_i < _60635_tokens.len())) {
				_1b11b5c19_pushErr(_self_, _60635_tokens[_61321_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = (*(_60731_exprs)); __jule_push_dest.push(_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_60635_tokens))); };
}



inline jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _1b11bc715_buildCaseExprs(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _63038_tokens, jule::Ptr<_1aa49b1d1_Token>* _63061_colon, jule::Bool _63076_typeMatch) {
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _63117_exprs = jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63317_braceN = 0LL;;
	jule::I64 _63417_j = 0LL;;
	{
		auto expr = _63038_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4268208:;
		if (it != expr_end) {
			jule::I64 _63514_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _63521_tok = *it;
			{
				{
					auto &_match_expr{ _63521_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b4269bbb:;
						{
							(_63317_braceN)++;
							goto _iter_next_1b4268208;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b4269c43:;
						{
							(_63317_braceN)--;
							goto _iter_next_1b4268208;
						}
					}
					_match_end_1b4269b33:;
				};
				if ((_63317_braceN != 0LL)) {
					goto _iter_next_1b4268208;
				};
				{
					
					if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(66LLU))) {
						_case_begin_1b426b0eb:;
						{
							jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _65421_exprTokens = (*(_63038_tokens)).slice(_63417_j, _63514_i);;
							if ((_65421_exprTokens.len() == 0LL)) {
								_1b11b5c19_pushErr(_self_, _63521_tok, jule::Str("expression missing", 18));
							} else {
								_1b11bc25e_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							};
							_63417_j=static_cast<jule::I64>((_63514_i + 1LL));
						}
					}
					else if ((_63521_tok.get()._field_Id == static_cast<jule::U64>(8LLU))) {
						_case_begin_1b426b173:;
						{
							(*(_63061_colon))=_63521_tok;
							_1b11bc25e_pushCaseExpr(_self_, (*(_63038_tokens)).slice(_63417_j, _63514_i), _63521_tok, _63076_typeMatch, &(_63117_exprs));
							(*(_63038_tokens))=(*(_63038_tokens)).slice((_63514_i + 1LL));
							return _63117_exprs;;
						}
					}
					_match_end_1b426aace:;
				};
			}
			_iter_next_1b4268208:;
			++it;
			_63514_i++;
			goto _iter_begin_1b4268208;
		}
		_iter_end_1b4268208:;
	};
	_1b11b5c19_pushErr(_self_, (*(_63038_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63038_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11bca56_buildCaseScope(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _67338_tokens) {
	jule::I64 _67417_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67621_i = 0LL;;
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _67722_next;;
			({
				__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool __jule_assign_result = _1b11b3cc2_skipSt(&(_67621_i), (*(_67338_tokens)).slice(_67417_n));
				_67722_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_67722_next.len() == 0LL)) {
				goto _iter_end_1b426e31e;
			};
			jule::Ptr<_1aa49b1d1_Token> _68117_tok = _67722_next[0LL];;
			if ((_68117_tok.get()._field_Id != static_cast<jule::U64>(66LLU))) {
				_67417_n+=_67621_i;
				goto _iter_next_1b426e31e;
			};
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _68621_scopeTokens = (*(_67338_tokens)).slice(0LL, _67417_n);;
			jule::Ptr<_1b04d1ca0_ScopeTree> _68721_scope = _1b11b69b7_buildScope(_self_, &(_68621_scopeTokens), (*(_67338_tokens))[_67417_n]);;
			(*(_67338_tokens))=(*(_67338_tokens)).slice(_67417_n);
			return _68721_scope;;
		}
	_iter_next_1b426e31e:;
	}
	_iter_end_1b426e31e:;;
	jule::Ptr<_1aa49b1d1_Token> _69117_end;;
	if (((*(_67338_tokens)).len() > 0LL)) {
		_69117_end=(*(_67338_tokens))[((*(_67338_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1b04d1ca0_ScopeTree> _69517_scope = _1b11b69b7_buildScope(_self_, _67338_tokens, _69117_end);;
	(*(_67338_tokens))=nullptr;
	return _69517_scope;;
}



inline __jule_tuple_x_1b04d8a98_Case__jule_tuple_bool _1b11bce52_buildCase(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _70033_tokens, jule::Bool _70051_typeMatch) {
	__jule_tuple_x_1b04d8a98_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b04d8a98_Case> _70117_c = jule::new_ptr<_1b04d8a98_Case>(_1b04d8a98_Case{._field_Token=(*(_70033_tokens))[0LL], });;
	(*(_70033_tokens))=(*(_70033_tokens)).slice(1LL);
	jule::Ptr<_1aa49b1d1_Token> _70517_colon = nullptr;;
	_70117_c.get()._field_Exprs=_1b11bc715_buildCaseExprs(_self_, _70033_tokens, &(_70517_colon), _70051_typeMatch);
	_70117_c.get()._field_Scope=_1b11bca56_buildCaseScope(_self_, _70033_tokens);
	if ((_70117_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70117_c.get()._field_Scope.get()._field_End=_70517_colon;
	};
	jule::Bool _71113_isDefault = (_70117_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70117_c;
	__jule_func_result.__jule_result_arg1 = _71113_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1b04d8a98_Case__jule_tuple_x_1b04d78ee_Else _1b11bd34d_buildCases(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _71533_tokens, jule::Bool _71551_typeMatch) {
	__jule_tuple_sx_1b04d8a98_Case__jule_tuple_x_1b04d78ee_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1b04d8a98_Case>> _71617_cases = nullptr;;
	jule::Ptr<_1b04d78ee_Else> _71717_def = nullptr;;
	jule::Bool _71817_defNotLast = false;;
	while ((_71533_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1aa49b1d1_Token> _72021_tok = _71533_tokens[0LL];;
			if ((_72021_tok.get()._field_Id != static_cast<jule::U64>(66LLU))) {
				_1b11b5c19_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1b42768ed;
			};
			jule::Ptr<_1b04d8a98_Case> _72522_c;;
			jule::Bool _72525_isDefault = false;;
			({
				__jule_tuple_x_1b04d8a98_Case__jule_tuple_bool __jule_assign_result = _1b11bce52_buildCase(_self_, &(_71533_tokens), _71551_typeMatch);
				_72522_c = __jule_assign_result.__jule_result_arg0;
				_72525_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72525_isDefault) {
				_72522_c.get()._field_Token=_72021_tok;
				if ((_71717_def == nullptr)) {
					_71717_def=jule::new_ptr<_1b04d78ee_Else>(_1b04d78ee_Else{._field_Token=_72522_c.get()._field_Token, ._field_Scope=_72522_c.get()._field_Scope});
				} else {
					_1b11b5c19_pushErr(_self_, _72021_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_71817_defNotLast=(_71817_defNotLast || (_71717_def != nullptr));
				{ jule::Slice<jule::Ptr<_1b04d8a98_Case>> &__jule_push_dest = _71617_cases; __jule_push_dest.push(_72522_c); };
			};
		}
	_iter_next_1b42768ed:;
	}
	_iter_end_1b42768ed:;;
	if (_71817_defNotLast) {
		_1b11b5c19_pushErr(_self_, _71717_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71617_cases;
	__jule_func_result.__jule_result_arg1 = _71717_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1b04d92d5_MatchCase> _1b11bd68e_buildMatchCase(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _74937_tokens) {
	jule::Ptr<_1b04d92d5_MatchCase> _75017_m = jule::new_ptr<_1b04d92d5_MatchCase>(_1b04d92d5_MatchCase{._field_Token=_74937_tokens[0LL], });;
	_74937_tokens=_74937_tokens.slice(1LL);
	if (((_74937_tokens.len() > 0LL) && (_74937_tokens[0LL].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
		_75017_m.get()._field_TypeMatch=true;
		_74937_tokens=_74937_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _76017_exprTokens = _1b11ccd63_getBlockExpr(&(_74937_tokens));;
	if ((_76017_exprTokens.len() > 0LL)) {
		_75017_m.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_76017_exprTokens));
	} else if (_75017_m.get()._field_TypeMatch) {
		_1b11b5c19_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _76717_i = _76017_exprTokens.len();;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _76817_blockToks = _1b11d1053_range(&(_76717_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_74937_tokens));;
	if ((_76817_blockToks == nullptr)) {
		_1b11b5103_stop(_self_);
		_1b11b5c19_pushErr(_self_, _75017_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1b11b607c_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_76717_i < _74937_tokens.len())) {
		_1b11b5c19_pushErr(_self_, _74937_tokens[_76717_i], jule::Str("invalid syntax", 14));
	};
	_75017_m.get()._field_End=_74937_tokens[(_76717_i - 1LL)];
	({
		__jule_tuple_sx_1b04d8a98_Case__jule_tuple_x_1b04d78ee_Else __jule_assign_result = _1b11bd34d_buildCases(_self_, _76817_blockToks, _75017_m.get()._field_TypeMatch);
		_75017_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75017_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75017_m;;
}



inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11bd9d0_buildScopeSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _78235_tokens) {
	jule::Bool _78317_isUnsafe = false;;
	jule::Bool _78417_isDeferred = false;;
	jule::Ptr<_1aa49b1d1_Token> _78517_token = _78235_tokens[0LL];;
	if ((_78517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		_78317_isUnsafe=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1b11b5c19_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78517_token=_78235_tokens[0LL];
		if ((_78517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
			_78417_isDeferred=true;
			_78235_tokens=_78235_tokens.slice(1LL);
			if ((_78235_tokens.len() == 0LL)) {
				_1b11b5c19_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_78417_isDeferred=true;
		_78235_tokens=_78235_tokens.slice(1LL);
		if ((_78235_tokens.len() == 0LL)) {
			_1b11b5c19_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81117_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _81217_scopeTokens = _1b11d1053_range(&(_81117_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_78235_tokens));;
	if ((_81217_scopeTokens == nullptr)) {
		_1b11b5c19_pushErr(_self_, _78517_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81117_i < _78235_tokens.len())) {
		_1b11b5c19_pushErr(_self_, _78235_tokens[_81117_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1b04d1ca0_ScopeTree> _81917_scope = _1b11b69b7_buildScope(_self_, &(_81217_scopeTokens), _78235_tokens[(_81117_i - 1LL)]);;
	_81917_scope.get()._field_Unsafety=_78317_isUnsafe;
	_81917_scope.get()._field_Deferred=_78417_isDeferred;
	return _81917_scope;;
}



inline jule::Ptr<_1b04ce363_LabelSt> _1b11bdd21_buildLabelSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _82536_tokens) {
	jule::Ptr<_1b04ce363_LabelSt> _82617_lbl = jule::new_ptr<_1b04ce363_LabelSt>(_1b04ce363_LabelSt{._field_Token=(*(_82536_tokens))[0LL], ._field_Ident=(*(_82536_tokens))[0LL].get()._field_Kind});;
	if (((*(_82536_tokens)).len() > 2LL)) {
		(*(_82536_tokens))=(*(_82536_tokens)).slice(2LL);
		_1b11b6335_insertAsNext(_self_, _82536_tokens);
	};
	return _82617_lbl;;
}



inline __jule_tuple__1b04d13dc_StmtData__jule_tuple_bool _1b11be162_buildIdSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _84033_tokens) {
	__jule_tuple__1b04d13dc_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84033_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1aa49b1d1_Token> _84517_token = (*(_84033_tokens))[1LL];;
	{
		auto &_match_expr{ _84517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b428a8e0:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1b11bdd21_buildLabelSt(_self_, _84033_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b428ae1d:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b11ce4c4_assignInfo> _1b11be4a3_buildAssignInfo(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _85439_tokens) {
	jule::Ptr<_1b11ce4c4_assignInfo> _85517_info = jule::new_ptr<_1b11ce4c4_assignInfo>(_1b11ce4c4_assignInfo{._field_ok=true});;
	jule::I64 _85817_braceN = 0LL;;
	{
		auto expr = _85439_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b428c716:;
		if (it != expr_end) {
			jule::I64 _85914_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _85921_token = *it;
			{
				{
					auto &_match_expr{ _85921_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b428d492:;
						{
							(_85817_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b428d519:;
						{
							(_85817_braceN)--;
						}
					}
					_match_end_1b428d409:;
				};
				{
					
					if ((_85817_braceN > 0LL)) {
						_case_begin_1b428e383:;
						{
							goto _iter_next_1b428c716;
						}
					}
					else if (((!(_1aa4a113c_IsAssignOp(_85921_token.get()._field_Id))) && (_85921_token.get()._field_Id != static_cast<jule::U64>(38LLU)))) {
						_case_begin_1b428e40a:;
						{
							goto _iter_next_1b428c716;
						}
					}
					_match_end_1b428e30b:;
				};
				_85517_info.get()._field_l=(*(_85439_tokens)).slice(0LL, _85914_i);
				if ((_85517_info.get()._field_l.len() == 0LL)) {
					_85517_info.get()._field_ok=false;
				};
				_85517_info.get()._field_setter=_85921_token;
				if (((_85914_i + 1LL) >= (*(_85439_tokens)).len())) {
					_85517_info.get()._field_r=nullptr;
					_85517_info.get()._field_ok=_1aa4a0d73_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id);
					goto _iter_end_1b428c716;
				};
				_85517_info.get()._field_r=(*(_85439_tokens)).slice((_85914_i + 1LL));
				if (_1aa4a0d73_IsPostfixOp(_85517_info.get()._field_setter.get()._field_Id)) {
					if ((_85517_info.get()._field_r.len() > 0LL)) {
						_1b11b5c19_pushErr(_self_, _85517_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85517_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1b428c716;
			}
			_iter_next_1b428c716:;
			++it;
			_85914_i++;
			goto _iter_begin_1b428c716;
		}
		_iter_end_1b428c716:;
	};
	return _85517_info;;
}



inline jule::Ptr<_1b04d0199_AssignLeft> _1b11be7e4_buildAssignL(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _89936_tokens) {
	jule::Ptr<_1b04d0199_AssignLeft> _90017_l = jule::new_ptr<_1b04d0199_AssignLeft>(_1b04d0199_AssignLeft{._field_Token=(*(_89936_tokens))[0LL], });;
	if (((*(_89936_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(1LLU))) {
		_90017_l.get()._field_Ident=_90017_l.get()._field_Token.get()._field_Kind;
	};
	_90017_l.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, _89936_tokens);
	return _90017_l;;
}



inline jule::Slice<jule::Ptr<_1b04d0199_AssignLeft>> _1b11beb35_buildAssignLs(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>* _91037_parts) {
	jule::Slice<jule::Ptr<_1b04d0199_AssignLeft>> _91117_lefts = nullptr;;
	{
		auto expr = _91037_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42955a9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _91221_part = *it;
			{
				jule::Ptr<_1b04d0199_AssignLeft> _91321_l = _1b11be7e4_buildAssignL(_self_, &(_91221_part));;
				{ jule::Slice<jule::Ptr<_1b04d0199_AssignLeft>> &__jule_push_dest = _91117_lefts; __jule_push_dest.push(_91321_l); };
			}
			_iter_next_1b42955a9:;
			++it;
			goto _iter_begin_1b42955a9;
		}
		_iter_end_1b42955a9:;
	};
	return _91117_lefts;;
}



inline __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool _1b11bee76_buildPlainAssign(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _92040_tokens) {
	__jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b11ce4c4_assignInfo> _92117_info = _1b11be4a3_buildAssignInfo(_self_, _92040_tokens);;
	if ((!(_92117_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b04d072c_AssignSt> _92617_assign = jule::new_ptr<_1b04d072c_AssignSt>(_1b04d072c_AssignSt{._field_Setter=_92117_info.get()._field_setter, });;
	if ((_92117_info.get()._field_setter.get()._field_Id == static_cast<jule::U64>(38LLU))) {
		_92617_assign.get()._field_Declarative=true;
		_92617_assign.get()._field_Right=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
		jule::Bool _93417_ok = _1b11c0372_buildDeclAssign1(_self_, &(_92117_info.get()._field_l), &(_92617_assign));;
		__jule_func_result.__jule_result_arg0 = _92617_assign;
		__jule_func_result.__jule_result_arg1 = _93417_ok;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _93818_parts;;
	jule::Slice<_1aa3c3a21_Log> _93825_errs;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(&(_92117_info.get()._field_l), static_cast<jule::U64>(5LLU), true);
		_93818_parts = __jule_assign_result.__jule_result_arg0;
		_93825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93825_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_93825_errs);;
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_92617_assign.get()._field_Left=_1b11beb35_buildAssignLs(_self_, &(_93818_parts));
	if ((_92117_info.get()._field_r != nullptr)) {
		_92617_assign.get()._field_Right=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_92117_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _92617_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1b11c0372_buildDeclAssign1(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _95240_lefts, jule::Ptr<_1b04d072c_AssignSt>* _95262_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _95418_parts;;
	jule::Slice<_1aa3c3a21_Log> _95425_errs;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(_95240_lefts, static_cast<jule::U64>(5LLU), true);
		_95418_parts = __jule_assign_result.__jule_result_arg0;
		_95425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_95425_errs.len() > 0LL)) {
		((*(_self_))._field_p.get()._field_errors).append(_95425_errs);;
		return false;;
	};
	{
		auto expr = &(_95418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b429c88b:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _96021_part = *it;
			{
				jule::Bool _96121_isMut = false;;
				jule::Bool _96221_isRef = false;;
				jule::Ptr<_1aa49b1d1_Token> _96417_token = _96021_part[0LL];;
				if ((_96417_token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
					_96121_isMut=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1b11b5c19_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b429c88b;
					};
				};
				if ((_96021_part[0LL].get()._field_Id == static_cast<jule::U64>(65LLU))) {
					_96221_isRef=true;
					_96021_part=_96021_part.slice(1LL);
					if ((_96021_part.len() == 0LL)) {
						_1b11b5c19_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b429c88b;
					};
				};
				if (((_96021_part[0LL].get()._field_Id != static_cast<jule::U64>(1LLU)) && (_96021_part[0LL].get()._field_Id != static_cast<jule::U64>(74LLU)))) {
					_1b11b5c19_pushErr(_self_, _96417_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1b429c88b;
				};
				jule::Ptr<_1b04d0199_AssignLeft> _98821_l = _1b11be7e4_buildAssignL(_self_, &(_96021_part));;
				_98821_l.get()._field_Mutable=_96121_isMut;
				_98821_l.get()._field_Reference=_96221_isRef;
				{ jule::Slice<jule::Ptr<_1b04d0199_AssignLeft>> &__jule_push_dest = (*(_95262_assign)).get()._field_Left; __jule_push_dest.push(_98821_l); };
			}
			_iter_next_1b429c88b:;
			++it;
			goto _iter_begin_1b429c88b;
		}
		_iter_end_1b429c88b:;
	};
	return true;;
}



inline __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool _1b11c06b3_buildDeclAssign(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _99738_tokens) {
	__jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99738_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_99738_tokens=_99738_tokens.slice(1LL);
	jule::Ptr<_1aa49b1d1_Token> _100317_token = _99738_tokens[0LL];;
	if ((_100317_token.get()._field_Id != static_cast<jule::U64>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1b04d072c_AssignSt> _100817_assign = jule::new_ptr<_1b04d072c_AssignSt>(_1b04d072c_AssignSt{._field_Declarative=true, });;
	jule::I64 _101217_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _101317_rang = _1b11d1053_range(&(_101217_i), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_99738_tokens));;
	if ((_101317_rang == nullptr)) {
		_1b11b5c19_pushErr(_self_, _100317_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_101217_i + 1LL) < _99738_tokens.len())) {
		_100817_assign.get()._field_Setter=_99738_tokens[_101217_i];
		if ((_100817_assign.get()._field_Setter.get()._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b11b5c19_pushErr(_self_, _100817_assign.get()._field_Setter, jule::Str("invalid syntax", 14));
		};
		(_101217_i)++;
		jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _102321_exprTokens = _99738_tokens.slice(_101217_i);;
		_100817_assign.get()._field_Right=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_102321_exprTokens));
	};
	jule::Bool _102713_ok = _1b11c0372_buildDeclAssign1(_self_, &(_101317_rang), &(_100817_assign));;
	__jule_func_result.__jule_result_arg0 = _100817_assign;
	__jule_func_result.__jule_result_arg1 = _102713_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool _1b11c0a04_buildAssignSt(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _103137_tokens) {
	__jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1b11ce87b_checkAssignTokens(_103137_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_103137_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b42a9e2b:;
			{
				({
					__jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool __jule_assign_result = _1b11c06b3_buildDeclAssign(_self_, (*(_103137_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b42a9a30:;
			{
				({
					__jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool __jule_assign_result = _1b11bee76_buildPlainAssign(_self_, _103137_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b42a99b9:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1b04c68aa_UseExpr> _1b11c0d45_buildUseExpr(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _104636_tokens) {
	if (((*(_104636_tokens)).len() == 1LL)) {
		_1b11b5c19_pushErr(_self_, (*(_104636_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1b04c68aa_UseExpr> _105117_ue = jule::new_ptr<_1b04c68aa_UseExpr>(_1b04c68aa_UseExpr{._field_Token=(*(_104636_tokens))[0LL], });;
	(*(_104636_tokens))=(*(_104636_tokens)).slice(1LL);
	_105117_ue.get()._field_Expr=_1b11d3cc0_buildExpr((*(_self_))._field_p, _104636_tokens);
	return _105117_ue;;
}



inline jule::Any _1b11c1186_buildSt(_1b11b4993_scopeParser* _self_, jule::Ptr<_1b11b4102_stmt>* _105931_st) {
	jule::Ptr<_1aa49b1d1_Token> _106017_token = (*(_105931_st)).get()._field_tokens[0LL];;
	if ((_106017_token.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _106222_s = jule::Any(nullptr);;
		jule::Bool _106225_ok = false;;
		({
			__jule_tuple__1b04d13dc_StmtData__jule_tuple_bool __jule_assign_result = _1b11be162_buildIdSt(_self_, &((*(_105931_st)).get()._field_tokens));
			_106222_s = __jule_assign_result.__jule_result_arg0;
			_106225_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_106225_ok) {
			return _106222_s;;
		};
	};
	jule::Ptr<_1b04d072c_AssignSt> _106818_s;;
	jule::Bool _106821_ok = false;;
	({
		__jule_tuple_x_1b04d072c_AssignSt__jule_tuple_bool __jule_assign_result = _1b11c0a04_buildAssignSt(_self_, &((*(_105931_st)).get()._field_tokens));
		_106818_s = __jule_assign_result.__jule_result_arg0;
		_106821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106821_ok) {
		return jule::Any(_106818_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _106017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b42ae749:;
			{
				return jule::Any(_1b11c0d45_buildUseExpr(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b42aed87:;
			{
				return jule::Any(_1b11b6d08_buildVarSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b42aeded:;
			{
				return jule::Any(_1b11b7149_buildRetSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b42aee64:;
			{
				return jule::Any(_1b11b9d1c_buildIterSt(_self_, _105931_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b42aeeca:;
			{
				return jule::Any(_1b11ba15d_buildBreakSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b42b0041:;
			{
				return jule::Any(_1b11ba49e_buildContSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b42b00a7:;
			{
				return jule::Any(_1b11bae72_buildIfElseChain(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b42b011d:;
			{
				return jule::Any(_1b11bb2b3_buildCoCallSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1b42b0184:;
			{
				return jule::Any(_1b11bb604_buildGotoSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1b42b01ea:;
			{
				return jule::Any(_1b11bb945_buildFallSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b42b0261:;
			{
				return jule::Any(_1b11bbc86_buildTypeAliasSt(_self_, &((*(_105931_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b42b02c7:;
			{
				return jule::Any(_1b11bd68e_buildMatchCase(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b42b034e:;
			{
				return jule::Any(_1b11bd9d0_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b42b03c6:;
			{
				return jule::Any(_1b11bd9d0_buildScopeSt(_self_, (*(_105931_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		_match_end_1b42ae947:;
	};
	jule::Ptr<_1b04c5ed6_Expr> _110717_expr = _1b11d3cc0_buildExpr((*(_self_))._field_p, &((*(_105931_st)).get()._field_tokens));;
	if ((_110717_expr != nullptr)) {
		return jule::Any(_110717_expr, &__jule_any_type53);;
	};
	_1b11b5c19_pushErr(_self_, _106017_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1b11c14e9_build(_1b11b4993_scopeParser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _111529_tokens, jule::Ptr<_1b04d1ca0_ScopeTree>* _111552_s) {
	if (((*(_111552_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1b11b44a9_splitStmts(_111529_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_111552_s));
	while (((!(_1b11b58a6_isLastSt(_self_))) && (!(_1b11b5620_finished(_self_))))) {
		{
			jule::Ptr<_1b11b4102_stmt> _112321_st = _1b11b65bb_next(_self_);;
			jule::Any _112421_data = _1b11c1186_buildSt(_self_, &(_112321_st));;
			if ((_112421_data != nullptr)) {
				{ jule::Slice<_1b04d1640_Stmt> &__jule_push_dest = (*(_self_))._field_s.get()._field_Stmts; __jule_push_dest.push(_1b04d1640_Stmt{._field_Token=_112321_st.get()._field_tokens[0LL], ._field_Data=_112421_data}); };
			};
			if (_1b11b5389_stopped(_self_)) {
				goto _iter_end_1b42bd14d;
			};
		}
	_iter_next_1b42bd14d:;
	}
	_iter_end_1b42bd14d:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11b4993_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1b11c282a_pushErr(_1b11c2066_exprBuilder* _self_, jule::Ptr<_1aa49b1d1_Token> _4526_token, jule::Str _4541_fmt, jule::Slice<jule::Any> _4554_args) {
	_1b11d361b_pushErr((*(_self_))._field_p.ptr(), _4526_token, _4541_fmt, _4554_args);
}



inline void _1b11c2b8d_pushSuggestion(_1b11c2066_exprBuilder* _self_, jule::Str _5033_fmt, jule::Slice<jule::Any> _5046_args) {
	_1b11d397e_pushSuggestion((*(_self_))._field_p.ptr(), _5033_fmt, _5046_args);
}



inline jule::Ptr<_1b04c6ba7_TupleExpr> _1b11c2ece_buildTuple(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>* _5434_parts) {
	jule::Ptr<_1b04c6ba7_TupleExpr> _5517_tuple = jule::new_ptr<_1b04c6ba7_TupleExpr>(_1b04c6ba7_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>::alloc(0LL, (*(_5434_parts)).len())});;
	{
		auto expr = _5434_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42da7b9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _5821_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = _5517_tuple.get()._field_Expr; __jule_push_dest.push(_1b11cc3c3_buildFromTokens(_self_, _5821_part)); };
			}
			_iter_next_1b42da7b9:;
			++it;
			goto _iter_begin_1b42da7b9;
		}
		_iter_end_1b42da7b9:;
	};
	return _5517_tuple;;
}



inline jule::Ptr<_1b04c7081_LitExpr> _1b11c3320_buildLit(_1b11c2066_exprBuilder* _self_, jule::Ptr<_1aa49b1d1_Token> _6427_token) {
	return jule::new_ptr<_1b04c7081_LitExpr>(_1b04c7081_LitExpr{._field_Token=_6427_token, ._field_Value=_6427_token.get()._field_Kind});;
}



inline jule::Any _1b11c39a2_buildSingle(_1b11c2066_exprBuilder* _self_, jule::Ptr<_1aa49b1d1_Token> _7534_token) {
	{
		auto &_match_expr{ _7534_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(4LLU)) {
			_case_begin_1b42dc502:;
			{
				return jule::Any(_1b11c3320_buildLit(_self_, _7534_token), &__jule_any_type106);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b42dc579:;
			{
				return jule::Any(jule::new_ptr<_1b04c846c_VariadicExpr>(_1b04c846c_VariadicExpr{._field_Token=_7534_token, }), &__jule_any_type82);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(24LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b42dc601:;
			{
				return jule::Any(_1b11cd7ae_buildIdentExpr(&(_7534_token)), &__jule_any_type86);;
			}
		}
		_match_end_1b42dc425:;
	};
	_1b11c282a_pushErr(_self_, _7534_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b04c7911_IdentExpr> _1b11c3ce3_buildBindIdent(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _9238_tokens) {
	if (((*(_9238_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(27LLU))) {
		return nullptr;;
	} else if (((*(_9238_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(17LLU))) {
		_1b11c282a_pushErr(_self_, (*(_9238_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa49b1d1_Token> _10017_token = (*(_9238_tokens))[2LL];;
	if ((_10017_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11c282a_pushErr(_self_, (*(_9238_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04c7911_IdentExpr> _10617_expr = _1b11cd7ae_buildIdentExpr(&(_10017_token));;
	_10617_expr.get()._field_Binded=true;
	return _10617_expr;;
}



inline jule::Ptr<_1b04c8093_UnaryExpr> _1b11c4134_buildUnary(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _11133_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _11217_op = _11133_tokens[0LL];;
	if ((_11133_tokens.len() == 1LL)) {
		_1b11c282a_pushErr(_self_, _11217_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1aa49b91d_IsUnaryOp(_11217_op.get()._field_Id)))) {
		_1b11c282a_pushErr(_self_, _11217_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11217_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11133_tokens=_11133_tokens.slice(1LL);
	return jule::new_ptr<_1b04c8093_UnaryExpr>(_1b04c8093_UnaryExpr{._field_Op=_11217_op, ._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _11133_tokens)});;
}



inline jule::Ptr<_1b04c91c6_SubIdentExpr> _1b11c4475_buildObjSubIdent(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _13239_tokens) {
	jule::I64 _13317_i = (_13239_tokens.len() - 1LL);;
	jule::Ptr<_1aa49b1d1_Token> _13417_identToken = _13239_tokens[_13317_i];;
	(_13317_i)--;
	_13239_tokens=_13239_tokens.slice(0LL, _13317_i);
	if ((_13239_tokens.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, _13417_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b04c91c6_SubIdentExpr>(_1b04c91c6_SubIdentExpr{._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _13239_tokens), ._field_Ident=_13417_identToken});;
}



inline jule::Ptr<_1b04c8c20_NsSelectionExpr> _1b11c47b6_buildNsSubIdent(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _14739_tokens) {
	jule::Ptr<_1b04c8c20_NsSelectionExpr> _14817_ns = jule::new_ptr<_1b04c8c20_NsSelectionExpr>();;
	{
		auto expr = _14739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42e74da:;
		if (it != expr_end) {
			jule::I64 _14914_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _14921_token = *it;
			{
				if (((_14914_i & 1LL) == 0LL)) {
					if ((_14921_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
						_1b11c282a_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b11c2b8d_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					{ jule::Slice<jule::Ptr<_1aa49b1d1_Token>> &__jule_push_dest = _14817_ns.get()._field_Ns; __jule_push_dest.push(_14921_token); };
				} else if ((_14921_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b11c282a_pushErr(_self_, _14921_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1b11c2b8d_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b42e74da:;
			++it;
			_14914_i++;
			goto _iter_begin_1b42e74da;
		}
		_iter_end_1b42e74da:;
	};
	_14817_ns.get()._field_Ident=_14817_ns.get()._field_Ns[(_14817_ns.get()._field_Ns.len() - 1LL)];
	_14817_ns.get()._field_Ns=_14817_ns.get()._field_Ns.slice(0LL, (_14817_ns.get()._field_Ns.len() - 1LL));
	return _14817_ns;;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11c4b07_buildType(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _16633_tokens) {
	jule::I64 _16717_i = 0LL;;
	jule::Ptr<_1b04c1ba2_TypeDecl> _16818_t;;
	jule::Bool _16821_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, _16633_tokens, (&(_16717_i)), false);
		_16818_t = __jule_assign_result.__jule_result_arg0;
		_16821_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16821_ok))) {
		_1b11c282a_pushErr(_self_, (*(_16633_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16717_i < (*(_16633_tokens)).len())) {
		_1b11c282a_pushErr(_self_, (*(_16633_tokens))[_16717_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16818_t;;
}



inline jule::Any _1b11c4e48_buildSubIdent(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _18037_tokens) {
	jule::I64 _18113_i = ((*(_18037_tokens)).len() - 2LL);;
	jule::Ptr<_1aa49b1d1_Token> _18213_token = (*(_18037_tokens))[_18113_i];;
	{
		auto &_match_expr{ _18213_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(17LLU)) {
			_case_begin_1b42edc83:;
			{
				return jule::Any(_1b11c4475_buildObjSubIdent(_self_, (*(_18037_tokens))), &__jule_any_type92);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b42ee2b1:;
			{
				return jule::Any(_1b11c47b6_buildNsSubIdent(_self_, _18037_tokens), &__jule_any_type96);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b42ee327:;
			{
				return jule::Any(_1b11c4b07_buildType(_self_, _18037_tokens), &__jule_any_type95);;
			}
		}
		_match_end_1b42ee1a1:;
	};
	_1b11c282a_pushErr(_self_, _18213_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1b04c846c_VariadicExpr> _1b11c5289_buildVariadic(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _19636_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _19717_token = _19636_tokens[(_19636_tokens.len() - 1LL)];;
	_19636_tokens=_19636_tokens.slice(0LL, (_19636_tokens.len() - 1LL));
	return jule::new_ptr<_1b04c846c_VariadicExpr>(_1b04c846c_VariadicExpr{._field_Token=_19717_token, ._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _19636_tokens)});;
}



inline jule::Ptr<_1b04c62d3_RangeExpr> _1b11c55ca_buildBetweenParentheses(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _20546_tokens) {
	if ((_20546_tokens.len() == 2LL)) {
		_1b11c282a_pushErr(_self_, _20546_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_20546_tokens=_20546_tokens.slice(1LL, (_20546_tokens.len() - 1LL));
	return jule::new_ptr<_1b04c62d3_RangeExpr>(_1b04c62d3_RangeExpr{._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _20546_tokens)});;
}



inline jule::Ptr<_1b04c8846_CastExpr> _1b11c591b_tryBuildCast(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _21736_tokens) {
	jule::I64 _21817_rangeN = 0LL;;
	{
		auto expr = _21736_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4304360:;
		if (it != expr_end) {
			jule::I64 _21913_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _21916_token = *it;
			{
				{
					auto &_match_expr{ _21916_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4305042:;
						{
							(_21817_rangeN)++;
							goto _iter_next_1b4304360;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b43050b9:;
						{
							(_21817_rangeN)--;
						}
					}
					_match_end_1b4304ea9:;
				};
				if ((_21817_rangeN > 0LL)) {
					goto _iter_next_1b4304360;
				} else if (((_21913_i + 1LL) == (*(_21736_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _23821_typeTokens = (*(_21736_tokens)).slice(0LL, (_21913_i + 1LL));;
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _23921_exprTokens = (*(_21736_tokens)).slice((_21913_i + 1LL));;
				if ((_23921_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1aa49b1d1_Token> _24617_tok = _23921_exprTokens[0LL];;
				if ((_24617_tok.get()._field_Id != static_cast<jule::U64>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1b04c8846_CastExpr> _25121_cast = jule::new_ptr<_1b04c8846_CastExpr>(_1b04c8846_CastExpr{});;
				if ((_23921_exprTokens.len() == 2LL)) {
					_1b11c282a_pushErr(_self_, _23921_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1b11c2b8d_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_23821_typeTokens.len() == 2LL)) {
					_1b11c282a_pushErr(_self_, _23821_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1b11c2b8d_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_23821_typeTokens=_23821_typeTokens.slice(1LL, (_23821_typeTokens.len() - 1LL));
					jule::I64 _26525_typeIndex = 0LL;;
					jule::Ptr<_1b04c1ba2_TypeDecl> _26626_t;;
					jule::Bool _26629_ok = false;;
					({
						__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, &(_23821_typeTokens), (&(_26525_typeIndex)), true);
						_26626_t = __jule_assign_result.__jule_result_arg0;
						_26629_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_26629_ok && (_26525_typeIndex < _23821_typeTokens.len()))) {
						_1b11c282a_pushErr(_self_, _23821_typeTokens[_26525_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_26629_ok))) {
						return _25121_cast;;
					};
					_25121_cast.get()._field_Kind=_26626_t;
					if ((_23921_exprTokens.len() > 2LL)) {
						jule::I64 _27629_j = 0LL;;
						_1b11d1053_range(&(_27629_j), static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), &(_23921_exprTokens));
						if ((_27629_j < _23921_exprTokens.len())) {
							return nullptr;;
						};
						_23921_exprTokens=_23921_exprTokens.slice(0LL, _27629_j);
						_25121_cast.get()._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _23921_exprTokens);
					};
				};
				return _25121_cast;;
			}
			_iter_next_1b4304360:;
			++it;
			_21913_i++;
			goto _iter_begin_1b4304360;
		}
		_iter_end_1b4304360:;
	};
	return nullptr;;
}



inline void _1b11c5d39_pushArg(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>* _29131_args, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _29150_tokens, jule::Ptr<_1aa49b1d1_Token> _29168_err_token) {
	if ((_29150_tokens.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, _29168_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = (*(_29131_args)); __jule_push_dest.push(_1b11cc3c3_buildFromTokens(_self_, _29150_tokens)); };
}



inline jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _1b11c617a_buildArgs(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _30032_tokens) {
	if ((_30032_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _30617_args = nullptr;;
	jule::I64 _30717_last = 0LL;;
	jule::I64 _30817_rangeN = 0LL;;
	_30032_tokens=_30032_tokens.slice(1LL, (_30032_tokens.len() - 1LL));
	{
		auto expr = &(_30032_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4311c63:;
		if (it != expr_end) {
			jule::I64 _31013_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _31016_token = *it;
			{
				{
					auto &_match_expr{ _31016_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4312c31:;
						{
							(_30817_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b4312ca8:;
						{
							(_30817_rangeN)--;
						}
					}
					_match_end_1b4312b98:;
				};
				if (((_30817_rangeN > 0LL) || (_31016_token.get()._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b4311c63;
				};
				_1b11c5d39_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last, _31013_i), _31016_token);
				_30717_last=static_cast<jule::I64>((_31013_i + 1LL));
			}
			_iter_next_1b4311c63:;
			++it;
			_31013_i++;
			goto _iter_begin_1b4311c63;
		}
		_iter_end_1b4311c63:;
	};
	if ((_30717_last < _30032_tokens.len())) {
		if ((_30717_last == 0LL)) {
			if ((_30032_tokens.len() > 0LL)) {
				_1b11c5d39_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[_30717_last]);
			};
		} else {
			_1b11c5d39_pushArg(_self_, &(_30617_args), _30032_tokens.slice(_30717_last), _30032_tokens[(_30717_last - 1LL)]);
		};
	};
	return _30617_args;;
}



inline jule::Ptr<_1b04c9cdc_FnCallExpr> _1b11c6972_buildFnCall(_1b11c2066_exprBuilder* _self_, jule::Ptr<_1aa49b1d1_Token>* _36635_token, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _36655_expr, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _36676_args) {
	return jule::new_ptr<_1b04c9cdc_FnCallExpr>(_1b04c9cdc_FnCallExpr{._field_Token=(*(_36635_token)), ._field_Expr=_1b11cc3c3_buildFromTokens(_self_, (*(_36655_expr))), ._field_Args=_1b11c617a_buildArgs(_self_, (*(_36676_args))), });;
}



inline jule::Any _1b11c6cb3_buildParenthesesRange(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _37445_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _37517_token = (*(_37445_tokens))[0LL];;
	if ((_37517_token.get()._field_Id == static_cast<jule::U64>(74LLU))) {
		jule::Ptr<_1b04c8846_CastExpr> _37721_expr = _1b11c591b_tryBuildCast(_self_, _37445_tokens);;
		if ((_37721_expr != nullptr)) {
			return jule::Any(_37721_expr, &__jule_any_type110);;
		};
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _38218_exprTokens;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _38234_args_tokens;;
	({
		__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_assign_result = _1b11d131c_rangeLast(_37445_tokens);
		_38218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_38234_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_38218_exprTokens.len() == 0LL)) {
		return jule::Any(_1b11c55ca_buildBetweenParentheses(_self_, _38234_args_tokens), &__jule_any_type105);;
	};
	return jule::Any(_1b11c6972_buildFnCall(_self_, &(_37517_token), &(_38218_exprTokens), &(_38234_args_tokens)), &__jule_any_type112);;
}



inline jule::Ptr<_1b04c745a_UnsafeExpr> _1b11c7104_buildUnsafeExpr(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _39138_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _39217_token = _39138_tokens[0LL];;
	_39138_tokens=_39138_tokens.slice(1LL);
	jule::I64 _39417_i = 0LL;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _39517_rangeTokens = _1b11d1053_range(&(_39417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_39138_tokens));;
	if ((_39517_rangeTokens.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, _39138_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b04c745a_UnsafeExpr>(_1b04c745a_UnsafeExpr{._field_Token=_39217_token, ._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _39517_rangeTokens)});;
}



inline jule::Ptr<_1b04d393e_FnDecl> _1b11c7445_buildAnonFn(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _40635_tokens) {
	jule::Ptr<_1b04d393e_FnDecl> _40717_f = _1b11d9864_buildFn((*(_self_))._field_p, _40635_tokens, false, false);;
	if ((!(_1b04d3ca2_IsAnon(_40717_f.ptr())))) {
		_1b11c282a_pushErr(_self_, _40717_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _40717_f;;
}



inline jule::Any _1b11c7786_buildUnsafe(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _41535_tokens) {
	{
		auto &_match_expr{ (*(_41535_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b2be38bb:;
			{
				return jule::Any(_1b11c7445_buildAnonFn(_self_, _41535_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b2be3cd9:;
			{
				return jule::Any(_1b11c7104_buildUnsafeExpr(_self_, (*(_41535_tokens))), &__jule_any_type107);;
			}
		}
		_match_end_1b2be3c1d:;
	};
}



inline void _1b11c7ba4_pushRangeLitPart(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _42539_part, jule::Ptr<_1aa49b1d1_Token> _4269_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>* _42634_parts) {
	if ((_42539_part.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, _4269_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> &__jule_push_dest = (*(_42634_parts)); __jule_push_dest.push(_42539_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11c7ee5_getBraceRangeLitExprParts(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _43648_tokens) {
	if ((_43648_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _44217_parts = nullptr;;
	jule::I64 _44417_last = 0LL;;
	jule::I64 _44517_rangeN = 0LL;;
	_43648_tokens=_43648_tokens.slice(1LL, (_43648_tokens.len() - 1LL));
	{
		auto expr = &(_43648_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2be7914:;
		if (it != expr_end) {
			jule::I64 _44713_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _44716_token = *it;
			{
				{
					auto &_match_expr{ _44716_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b2be88d2:;
						{
							(_44517_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b2be8959:;
						{
							(_44517_rangeN)--;
						}
					}
					_match_end_1b2be8849:;
				};
				if (((_44517_rangeN > 0LL) || (_44716_token.get()._field_Id != static_cast<jule::U64>(5LLU)))) {
					goto _iter_next_1b2be7914;
				};
				_1b11c7ba4_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last, _44713_i), _44716_token, &(_44217_parts));
				_44417_last=static_cast<jule::I64>((_44713_i + 1LL));
			}
			_iter_next_1b2be7914:;
			++it;
			_44713_i++;
			goto _iter_begin_1b2be7914;
		}
		_iter_end_1b2be7914:;
	};
	if ((_44417_last < _43648_tokens.len())) {
		if ((_44417_last == 0LL)) {
			if ((_43648_tokens.len() > 0LL)) {
				_1b11c7ba4_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[_44417_last], &(_44217_parts));
			};
		} else {
			_1b11c7ba4_pushRangeLitPart(_self_, _43648_tokens.slice(_44417_last), _43648_tokens[(_44417_last - 1LL)], &(_44217_parts));
		};
	};
	return _44217_parts;;
}



inline jule::Ptr<_1b04ca7d2_FieldExprPair> _1b11c8336_buildFieldExprPair(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _47841_tokens) {
	if (((_47841_tokens.len() - 2LL) == 0LL)) {
		_1b11c282a_pushErr(_self_, _47841_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04ca7d2_FieldExprPair> _48317_pair = jule::new_ptr<_1b04ca7d2_FieldExprPair>(_1b04ca7d2_FieldExprPair{._field_Field=_47841_tokens[0LL], });;
	_47841_tokens=_47841_tokens.slice(2LL);
	_48317_pair.get()._field_Expr=_1b11cc3c3_buildFromTokens(_self_, _47841_tokens);
	return _48317_pair;;
}



inline jule::Ptr<_1b04c5ed6_Expr> _1b11c8677_buildStructLitExpr(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _49142_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _49217_token = (*(_49142_tokens))[0LL];;
	if (((_49217_token.get()._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_49142_tokens)).len() > 1LL))) {
		_49217_token=(*(_49142_tokens))[1LL];
		if ((_49217_token.get()._field_Id == static_cast<jule::U64>(8LLU))) {
			return jule::new_ptr<_1b04c5ed6_Expr>(_1b04c5ed6_Expr{._field_Token=_49217_token, ._field_End=(*(_49142_tokens))[((*(_49142_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1b11c8336_buildFieldExprPair(_self_, (*(_49142_tokens))), &__jule_any_type84)});;
		};
	};
	return _1b11cc3c3_buildFromTokens(_self_, (*(_49142_tokens)));;
}



inline jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _1b11c89b8_buildStructLitExprs(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _50643_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _50717_parts = _1b11c7ee5_getBraceRangeLitExprParts(_self_, (*(_50643_tokens)));;
	if ((_50717_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> _51217_pairs = jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>::alloc(0LL, _50717_parts.len());;
	{
		auto expr = &(_50717_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2c01aa5:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _51321_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = _51217_pairs; __jule_push_dest.push(_1b11c8677_buildStructLitExpr(_self_, &(_51321_part))); };
			}
			_iter_next_1b2c01aa5:;
			++it;
			goto _iter_begin_1b2c01aa5;
		}
		_iter_end_1b2c01aa5:;
	};
	return _51217_pairs;;
}



inline jule::Ptr<_1b04cb10c_StructLit> _1b11c8d09_buildTypedStructLiteral(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _51946_tokens) {
	jule::I64 _52017_i = 0LL;;
	jule::Ptr<_1b04c1ba2_TypeDecl> _52118_t;;
	jule::Bool _52121_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, &(_51946_tokens), (&(_52017_i)), true);
		_52118_t = __jule_assign_result.__jule_result_arg0;
		_52121_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_52121_ok))) {
		return nullptr;;
	} else if ((_52017_i >= _51946_tokens.len())) {
		_1b11c282a_pushErr(_self_, _51946_tokens[_52017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_51946_tokens=_51946_tokens.slice(_52017_i);
	jule::Ptr<_1aa49b1d1_Token> _53013_token = _51946_tokens[0LL];;
	if ((_53013_token.get()._field_Id != static_cast<jule::U64>(72LLU))) {
		_1b11c282a_pushErr(_self_, _53013_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b04cb10c_StructLit>(_1b04cb10c_StructLit{._field_End=_51946_tokens[(_51946_tokens.len() - 1LL)], ._field_Kind=_52118_t, ._field_Exprs=_1b11c89b8_buildStructLitExprs(_self_, &(_51946_tokens))});;
}



inline jule::Ptr<_1b04c5ed6_Expr> _1b11c914a_buildBraceLitPart(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _54341_tokens) {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _54418_l;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _54425_r;;
	({
		__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_assign_result = _1b11cd22b_splitDelim(_54341_tokens, static_cast<jule::U64>(8LLU));
		_54418_l = __jule_assign_result.__jule_result_arg0;
		_54425_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54418_l != nullptr)) {
		return jule::new_ptr<_1b04c5ed6_Expr>(_1b04c5ed6_Expr{._field_Token=(*(_54341_tokens))[0LL], ._field_End=(*(_54341_tokens))[((*(_54341_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1b04cbddd_KeyValPair>(_1b04cbddd_KeyValPair{._field_Key=_1b11cc3c3_buildFromTokens(_self_, _54418_l), ._field_Val=_1b11cc3c3_buildFromTokens(_self_, _54425_r), ._field_Colon=(*(_54341_tokens))[_54418_l.len()]}), &__jule_any_type85)});;
	};
	return _1b11cc3c3_buildFromTokens(_self_, (*(_54341_tokens)));;
}



inline jule::Ptr<_1b04cb5b3_BraceLit> _1b11c948b_buildBraceLit(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _56037_tokens) {
	jule::Ptr<_1b04cb5b3_BraceLit> _56117_lit = jule::new_ptr<_1b04cb5b3_BraceLit>(_1b04cb5b3_BraceLit{._field_Token=(*(_56037_tokens))[0LL], ._field_End=(*(_56037_tokens))[((*(_56037_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _56617_parts = _1b11c7ee5_getBraceRangeLitExprParts(_self_, (*(_56037_tokens)));;
	if ((_56617_parts == nullptr)) {
		return _56117_lit;;
	};
	_56117_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>::alloc(0LL, _56617_parts.len());
	{
		auto expr = &(_56617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4426d45:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _57221_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = _56117_lit.get()._field_Exprs; __jule_push_dest.push(_1b11c914a_buildBraceLitPart(_self_, &(_57221_part))); };
			}
			_iter_next_1b4426d45:;
			++it;
			goto _iter_begin_1b4426d45;
		}
		_iter_end_1b4426d45:;
	};
	return _56117_lit;;
}



inline jule::Any _1b11c97cc_buildBraceRange(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _57939_tokens) {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _58018_exprTokens;;
	jule::I64 _58030_rangeN = 0;;
	({
		__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_int __jule_assign_result = _1b11cda78_getRangeExprTokens(_57939_tokens);
		_58018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_58030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_58018_exprTokens.len() == 0LL)) {
			_case_begin_1b44278c3:;
			{
				return jule::Any(_1b11c948b_buildBraceLit(_self_, _57939_tokens), &__jule_any_type113);;
			}
		}
		else if ((_58030_rangeN > 0LL)) {
			_case_begin_1b44284b7:;
			{
				_1b11c282a_pushErr(_self_, (*(_57939_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b44279d3:;
	};
	jule::Ptr<_1aa49b1d1_Token> _59113_elseToken = _58018_exprTokens[(_58018_exprTokens.len() - 1LL)];;
	if ((_58018_exprTokens[(_58018_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(14LLU))) {
		_58018_exprTokens=_58018_exprTokens.slice(0LL, (_58018_exprTokens.len() - 1LL));
		jule::Any _59421_d = _1b11cbc41_build(_self_, &(_58018_exprTokens));;
		if ((_59421_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _59421_d };
			
			if (_match_expr.type == &__jule_any_type112) {
				_case_begin_1b442b6a7:;
				{
					(*(_57939_tokens))=(*(_57939_tokens)).slice((_58018_exprTokens.len() + 1LL));
					jule::I64 _60125_i = 0LL;;
					jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _60225_rangeTokens = _1b11d1053_range(&(_60125_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _57939_tokens);;
					jule::Ptr<_1b04c9cdc_FnCallExpr> _60325_model = _59421_d.cast_ptr<_1b04c9cdc_FnCallExpr>(&__jule_any_type112);;
					if (_1b04ca3e7_Ignored(_60325_model.ptr())) {
						_1b11c282a_pushErr(_self_, _59113_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1b11c2b8d_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_60325_model.get()._field_Exception=_1b11d47b5_buildScope((*(_self_))._field_p, &(_60225_rangeTokens), (*(_57939_tokens))[(_60125_i - 1LL)]);
					return _59421_d;;
				}
			}
			else {
				_case_begin_1b442b179:;
				{
					_1b11c282a_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b442b124:;
		};
	};
	{
		auto &_match_expr{ _58018_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b4430117:;
			{
				return _1b11c7786_buildUnsafe(_self_, _57939_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b4430744:;
			{
				return jule::Any(_1b11c7445_buildAnonFn(_self_, _57939_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b44307aa:;
			{
				return jule::Any(_1b11c8d09_buildTypedStructLiteral(_self_, (*(_57939_tokens))), &__jule_any_type111);;
			}
		}
		else {
			_case_begin_1b442bb5d:;
			{
				_1b11c282a_pushErr(_self_, _58018_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b442eb1c:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11c9b1d_getEnumerableParts(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _63141_tokens) {
	_63141_tokens=_63141_tokens.slice(1LL, (_63141_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _63318_parts;;
	jule::Slice<_1aa3c3a21_Log> _63325_errors;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(&(_63141_tokens), static_cast<jule::U64>(5LLU), true);
		_63318_parts = __jule_assign_result.__jule_result_arg0;
		_63325_errors = __jule_assign_result.__jule_result_arg1;
	});
	((*(_self_))._field_p.get()._field_errors).append(_63325_errors);;
	return _63318_parts;;
}



inline jule::Ptr<_1b04cc5d6_SliceExpr> _1b11c9e5e_buildSlice(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _63833_tokens) {
	jule::Ptr<_1b04cc5d6_SliceExpr> _63917_slc = jule::new_ptr<_1b04cc5d6_SliceExpr>(_1b04cc5d6_SliceExpr{._field_Token=_63833_tokens[0LL], ._field_End=_63833_tokens[(_63833_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _64417_parts = _1b11c9b1d_getEnumerableParts(_self_, _63833_tokens);;
	if ((_64417_parts.len() == 0LL)) {
		return _63917_slc;;
	};
	_63917_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1b04c5ed6_Expr>>::alloc(0LL, _64417_parts.len());
	{
		auto expr = &(_64417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4435271:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _65021_p = *it;
			{
				if ((_65021_p.len() == 0LL)) {
					goto _iter_next_1b4435271;
				};
				{ jule::Slice<jule::Ptr<_1b04c5ed6_Expr>> &__jule_push_dest = _63917_slc.get()._field_Exprs; __jule_push_dest.push(_1b11cc3c3_buildFromTokens(_self_, _65021_p)); };
			}
			_iter_next_1b4435271:;
			++it;
			goto _iter_begin_1b4435271;
		}
		_iter_end_1b4435271:;
	};
	return _63917_slc;;
}



inline jule::Ptr<_1b04cd076_IndexingExpr> _1b11ca415_buildIndexing(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _66036_exprTokens, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _66113_tokens, jule::Ptr<_1aa49b1d1_Token> _66135_errorToken) {
	jule::Ptr<_1aa49b1d1_Token> _66217_end = _66113_tokens[(_66113_tokens.len() - 1LL)];;
	_66113_tokens=_66113_tokens.slice(1LL, (_66113_tokens.len() - 1LL));
	if ((_66113_tokens.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, _66135_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04c5ed6_Expr> _66817_expr = _1b11cc3c3_buildFromTokens(_self_, _66036_exprTokens);;
	if ((_66817_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b04c5ed6_Expr> _67217_index = _1b11cc3c3_buildFromTokens(_self_, _66113_tokens);;
	if ((_67217_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b04cd076_IndexingExpr>(_1b04cd076_IndexingExpr{._field_Token=_66135_errorToken, ._field_End=_66217_end, ._field_Expr=_66817_expr, ._field_Index=_67217_index});;
}



inline jule::Ptr<_1b04cd6d6_SlicingExpr> _1b11caa31_buildSlicing(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _68436_exprTokens, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _68463_start, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _68514_to, jule::Ptr<_1aa49b1d1_Token>* _68533_errorToken, jule::Ptr<_1aa49b1d1_Token> _68557_end) {
	jule::Ptr<_1b04cd6d6_SlicingExpr> _68617_slc = jule::new_ptr<_1b04cd6d6_SlicingExpr>(_1b04cd6d6_SlicingExpr{._field_Token=(*(_68533_errorToken)), ._field_End=_68557_end, ._field_Expr=_1b11cc3c3_buildFromTokens(_self_, (*(_68436_exprTokens))), });;
	if (((*(_68463_start)).len() > 0LL)) {
		_68617_slc.get()._field_Start=_1b11cc3c3_buildFromTokens(_self_, (*(_68463_start)));
	};
	if (((*(_68514_to)).len() > 0LL)) {
		_68617_slc.get()._field_To=_1b11cc3c3_buildFromTokens(_self_, (*(_68514_to)));
	};
	return _68617_slc;;
}



inline jule::Any _1b11cad72_buildBracketRange(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _70040_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _70117_errorToken = _70040_tokens[0LL];;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _70218_exprTokens;;
	jule::I64 _70230_rangeN = 0;;
	({
		__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_int __jule_assign_result = _1b11cda78_getRangeExprTokens(&(_70040_tokens));
		_70218_exprTokens = __jule_assign_result.__jule_result_arg0;
		_70230_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_70218_exprTokens.len() == 0LL)) {
		return jule::Any(_1b11c9e5e_buildSlice(_self_, _70040_tokens), &__jule_any_type100);;
	} else if ((_70230_rangeN > 0LL)) {
		_1b11c282a_pushErr(_self_, _70117_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_70040_tokens=_70040_tokens.slice(_70218_exprTokens.len());
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _71717_splitTokens = _70040_tokens.slice(1LL, (_70040_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _71818_start;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _71829_to;;
	({
		__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_assign_result = _1b11cd22b_splitDelim(&(_71717_splitTokens), static_cast<jule::U64>(8LLU));
		_71818_start = __jule_assign_result.__jule_result_arg0;
		_71829_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_71818_start != nullptr) || (_71829_to != nullptr))) {
		return jule::Any(_1b11caa31_buildSlicing(_self_, &(_70218_exprTokens), &(_71818_start), &(_71829_to), &(_70117_errorToken), _70040_tokens[(_70040_tokens.len() - 1LL)]), &__jule_any_type109);;
	};
	return jule::Any(_1b11ca415_buildIndexing(_self_, _70218_exprTokens, _70040_tokens, _70117_errorToken), &__jule_any_type108);;
}



inline jule::Any _1b11cb1b3_buildExclRight(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _72538_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _72613_token = (*(_72538_tokens))[((*(_72538_tokens)).len() - 1LL)];;
	(*(_72538_tokens))=(*(_72538_tokens)).slice(0LL, ((*(_72538_tokens)).len() - 1LL));
	jule::Any _72817_d = _1b11cbc41_build(_self_, _72538_tokens);;
	if ((_72817_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _72817_d };
		
		if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b4442877:;
			{
				_72817_d.cast_ptr<_1b04c9cdc_FnCallExpr>(&__jule_any_type112).get()._field_Exception=jule::new_ptr<_1b04d1ca0_ScopeTree>(_1b04d1ca0_ScopeTree{._field_Deferred=true, });
				return _72817_d;;
			}
		}
		_match_end_1b4442602:;
	};
	_1b11c282a_pushErr(_self_, _72613_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b11cb504_buildData(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _74333_tokens) {
	{
		auto _match_expr{ (*(_74333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b4443e2d:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b4443e94:;
			{
				return _1b11c39a2_buildSingle(_self_, (*(_74333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b444401b:;
			{
				if (((*(_74333_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(27LLU))) {
					return jule::Any(_1b11c3ce3_buildBindIdent(_self_, _74333_tokens), &__jule_any_type86);;
				};
			}
		}
		_match_end_1b4443c41:;
	};
	jule::Ptr<_1aa49b1d1_Token> _75517_token = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
	if ((_75517_token.get()._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1b11c5289_buildVariadic(_self_, (*(_74333_tokens))), &__jule_any_type82);;
	};
	_75517_token=(*(_74333_tokens))[0LL];
	if (_1aa49b91d_IsUnaryOp(_75517_token.get()._field_Id)) {
		if (((*(_74333_tokens)).len() > 1LL)) {
			_75517_token=(*(_74333_tokens))[1LL];
			if ((_75517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
				return jule::Any(_1b11c4b07_buildType(_self_, _74333_tokens), &__jule_any_type95);;
			};
		};
		return jule::Any(_1b11c4134_buildUnary(_self_, (*(_74333_tokens))), &__jule_any_type94);;
	};
	if (((*(_74333_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ _75517_token.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
				_case_begin_1b44481c9:;
				{
					if (((*(_74333_tokens)).len() > 3LL)) {
						jule::Ptr<_1aa49b1d1_Token> _78125_t = (*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];;
						if ((_78125_t.get()._field_Id == static_cast<jule::U64>(75LLU))) {
							goto _match_end_1b4448152;
						};
					};
					jule::Ptr<_1aa49b1d1_Token> _78721_next = (*(_74333_tokens))[1LL];;
					if ((_78721_next.get()._field_Id != static_cast<jule::U64>(77LLU))) {
						goto _match_end_1b4448152;
					};
					return jule::Any(_1b11c4b07_buildType(_self_, _74333_tokens), &__jule_any_type95);;
				}
			}
			_match_end_1b4448152:;
		};
	};
	_75517_token=(*(_74333_tokens))[((*(_74333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _75517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b444adad:;
			{
				return _1b11c4e48_buildSubIdent(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(68LLU)) {
			_case_begin_1b444ae24:;
			{
				return _1b11cb1b3_buildExclRight(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b444ae8a:;
			{
				return _1b11c6cb3_buildParenthesesRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b444b012:;
			{
				return _1b11c97cc_buildBraceRange(_self_, _74333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b444b089:;
			{
				return _1b11cad72_buildBracketRange(_self_, (*(_74333_tokens)));;
			}
		}
		_match_end_1b4445b55:;
	};
	if ((_75517_token.get()._field_Id == static_cast<jule::U64>(29LLU))) {
		return jule::Any(_1b11c4b07_buildType(_self_, _74333_tokens), &__jule_any_type95);;
	};
	_1b11c282a_pushErr(_self_, _75517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1b11cb900_buildBinop(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _81834_tokens, jule::I64 _81852_i) {
	jule::Ptr<_1aa49b1d1_Token> _81917_op = (*(_81834_tokens))[_81852_i];;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _82017_leftTokens = (*(_81834_tokens)).slice(0LL, _81852_i);;
	if ((_1b11cc78b_isTypeOp(&(_81917_op.get()._field_Id)) && _1b11cca99_isTypeRange(&(_82017_leftTokens)))) {
		return jule::Any(_1b11c4b07_buildType(_self_, _81834_tokens), &__jule_any_type95);;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _82517_rightTokens = (*(_81834_tokens)).slice((_81852_i + 1LL));;
	if ((_82017_leftTokens.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_82517_rightTokens.len() == 0LL)) {
		_1b11c282a_pushErr(_self_, (*(_81834_tokens))[_81852_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11c2b8d_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1b04c967c_BinopExpr>(_1b04c967c_BinopExpr{._field_Left=_1b11cc3c3_buildFromTokens(_self_, _82017_leftTokens), ._field_Right=_1b11cc3c3_buildFromTokens(_self_, _82517_rightTokens), ._field_Op=_81917_op}), &__jule_any_type114);;
}



inline jule::Any _1b11cbc41_build(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _84329_tokens) {
	if (((*(_84329_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(37LLU))) {
		return jule::Any(_1b11c4b07_buildType(_self_, _84329_tokens), &__jule_any_type95);;
	};
	jule::I64 _84713_i = _1b11cd4e5_findLowestPrecOp(_84329_tokens);;
	if ((_84713_i == -1LL)) {
		return _1b11cb504_buildData(_self_, _84329_tokens);;
	};
	return _1b11cb900_buildBinop(_self_, _84329_tokens, _84713_i);;
}



inline jule::Any _1b11cc082_buildKind(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _85433_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _85518_parts;;
	jule::Slice<_1aa3c3a21_Log> _85525_errors;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(_85433_tokens, static_cast<jule::U64>(5LLU), true);
		_85518_parts = __jule_assign_result.__jule_result_arg0;
		_85525_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_85525_errors != nullptr)) {
		((*(_self_))._field_p.get()._field_errors).append(_85525_errors);;
		return nullptr;;
	} else if ((_85518_parts.len() > 1LL)) {
		return jule::Any(_1b11c2ece_buildTuple(_self_, &(_85518_parts)), &__jule_any_type87);;
	};
	return _1b11cbc41_build(_self_, _85433_tokens);;
}



inline jule::Ptr<_1b04c5ed6_Expr> _1b11cc3c3_buildFromTokens(_1b11c2066_exprBuilder* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _86538_tokens) {
	if ((_86538_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _86917_kind = _1b11cc082_buildKind(_self_, &(_86538_tokens));;
	if ((_86917_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b04c5ed6_Expr>(_1b04c5ed6_Expr{._field_Token=_86538_tokens[0LL], ._field_End=_86538_tokens[(_86538_tokens.len() - 1LL)], ._field_Kind=_86917_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11c2066_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11ce4c4_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1b11d2e67_stop(_1b11d2b6a_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1b11d31ed_stopped(_1b11d2b6a_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1b11d361b_pushErr(_1b11d2b6a_parser* _self_, jule::Ptr<_1aa49b1d1_Token> _23626_token, jule::Str _23641_fmt, jule::Slice<jule::Any> _23654_args) {
	{ jule::Slice<_1aa3c3a21_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1b11d1ebb_compilerErr(&(_23626_token), &(_23641_fmt), _23654_args)); };
}



inline void _1b11d397e_pushSuggestion(_1b11d2b6a_parser* _self_, jule::Str _24133_fmt, jule::Slice<jule::Any> _24146_args) {
	{
		_1b11d2362_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _24133_fmt, _24146_args);
	};
}



inline jule::Ptr<_1b04c5ed6_Expr> _1b11d3cc0_buildExpr(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _24534_tokens) {
	return _1b11cc3c3_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_24534_tokens)));;
}



inline jule::Ptr<_1b04884b5_Directive> _1b11d4111_buildDirective(_1b11d2b6a_parser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _24937_tokens) {
	if ((_24937_tokens.len() == 1LL)) {
		_1b11d361b_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_24937_tokens[1LL].get()._field_Column != (_24937_tokens[0LL].get()._field_Column + 1LL))) {
		_1b11d361b_pushErr(_self_, _24937_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b04884b5_Directive>(_1b04884b5_Directive{._field_Tag=_24937_tokens[1LL], ._field_Args=_24937_tokens.slice(2LL)});;
}



inline void _1b11d43b9_pushDirective(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04884b5_Directive> _26436_d) {
	if ((_26436_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4130510:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _26916_pd = *it;
			{
				if ((_26436_d.get()._field_Tag.get()._field_Kind == _26916_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b4130510:;
			++it;
			goto _iter_begin_1b4130510;
		}
		_iter_end_1b4130510:;
	};
	{ jule::Slice<jule::Ptr<_1b04884b5_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_26436_d); };
}



inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11d47b5_buildScope(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _27735_tokens, jule::Ptr<_1aa49b1d1_Token> _27757_end) {
	jule::Ptr<_1b04d1ca0_ScopeTree> _27817_s = _1b11b2d8c_newScope();;
	_27817_s.get()._field_End=_27757_end;
	_1b11b4993_scopeParser _28017_sp = _1b11b4993_scopeParser{._field_p=_self_, };;
	_1b11c14e9_build(&_28017_sp, _27735_tokens, &(_27817_s));
	return _27817_s;;
}



inline __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool _1b11d4c6b__buildType(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _28742_tokens, jule::I64* _28813_i, jule::Bool _28822_err) {
	__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1b11e49d4_typeBuilder _28917_tb = _1b11e49d4_typeBuilder{._field_p=_self_, ._field_tokens=(*(_28742_tokens)), ._field_i=_28813_i, ._field_err=_28822_err};;
	jule::Ptr<_1b04c1ba2_TypeDecl> _29518_decl;;
	jule::Bool _29524_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11e79b5_build(&_28917_tb);
		_29518_decl = __jule_assign_result.__jule_result_arg0;
		_29524_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _29518_decl;
	__jule_func_result.__jule_result_arg1 = _29524_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool _1b11d5222_buildType(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _30041_tokens, jule::I64* _30113_i, jule::Bool _30122_err) {
	__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1aa49b1d1_Token> _30213_token = (*(_30041_tokens))[(*(_30113_i))];;
	jule::Ptr<_1b04c1ba2_TypeDecl> _30318_t;;
	jule::Bool _30321_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d4c6b__buildType(_self_, _30041_tokens, _30113_i, _30122_err);
		_30318_t = __jule_assign_result.__jule_result_arg0;
		_30321_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_30122_err && (!(_30321_ok)))) {
		_1b11d361b_pushErr(_self_.ptr(), _30213_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _30318_t;
	__jule_func_result.__jule_result_arg1 = _30321_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1b04d85e2_TypeAliasDecl> _1b11d5563_buildTypeAliasDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _31043_tokens) {
	jule::I64 _31117_i = 1LL;;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04d85e2_TypeAliasDecl> _31617_tad = jule::new_ptr<_1b04d85e2_TypeAliasDecl>(_1b04d85e2_TypeAliasDecl{._field_Token=(*(_31043_tokens))[1LL], ._field_Ident=(*(_31043_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_1aa49b1d1_Token> _32017_token = (*(_31043_tokens))[_31117_i];;
	if ((_32017_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _32017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	_32017_token=(*(_31043_tokens))[_31117_i];
	if ((_32017_token.get()._field_Id != static_cast<jule::U64>(8LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	(_31117_i)++;
	if ((_31117_i >= (*(_31043_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_31043_tokens))[(_31117_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _31617_tad;;
	};
	jule::Ptr<_1b04c1ba2_TypeDecl> _34118_t;;
	jule::Bool _34121_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, _31043_tokens, (&(_31117_i)), true);
		_34118_t = __jule_assign_result.__jule_result_arg0;
		_34121_ok = __jule_assign_result.__jule_result_arg1;
	});
	_31617_tad.get()._field_Kind=_34118_t;
	if ((_34121_ok && (_31117_i < (*(_31043_tokens)).len()))) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_31043_tokens))[_31117_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_31617_tad.get()._field_Public=_1b05885d7_IsPub(&(_31617_tad.get()._field_Ident));
	return _31617_tad;;
}



inline void _1b11d58c6_buildVarTypeAndExpr(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04d4a1c_VarDecl>* _35044_v, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _35062_tokens) {
	jule::I64 _35117_i = 0LL;;
	jule::Ptr<_1aa49b1d1_Token> _35217_tok = (*(_35062_tokens))[_35117_i];;
	if ((_35217_tok.get()._field_Id == static_cast<jule::U64>(8LLU))) {
		(_35117_i)++;
		if (((_35117_i >= (*(_35062_tokens)).len()) || ((*(_35062_tokens))[_35117_i].get()._field_Id == static_cast<jule::U64>(71LLU)))) {
			_1b11d361b_pushErr(_self_.ptr(), _35217_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1b04c1ba2_TypeDecl> _35922_t;;
		jule::Bool _35925_ok = false;;
		({
			__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, _35062_tokens, (&(_35117_i)), true);
			_35922_t = __jule_assign_result.__jule_result_arg0;
			_35925_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_35925_ok) {
			(*(_35044_v)).get()._field_Kind=_35922_t;
			if ((_35117_i >= (*(_35062_tokens)).len())) {
				return;;
			};
			_35217_tok=(*(_35062_tokens))[_35117_i];
		};
	};
	if ((_35217_tok.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _35217_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _37417_exprTokens = (*(_35062_tokens)).slice((_35117_i + 1LL));;
	if ((_37417_exprTokens.len() == 0LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _35217_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_35044_v)).get()._field_Expr=_1b11d3cc0_buildExpr(_self_, &(_37417_exprTokens));
}



inline void _1b11d5c39_buildVarCommon(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04d4a1c_VarDecl>* _38239_v, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _38256_tokens) {
	(*(_38239_v)).get()._field_Token=_38256_tokens[0LL];
	if (((*(_38239_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_38239_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_38239_v)).get()._field_Ident=(*(_38239_v)).get()._field_Token.get()._field_Kind;
	(*(_38239_v)).get()._field_Public=_1b05885d7_IsPub(&((*(_38239_v)).get()._field_Ident));
	(*(_38239_v)).get()._field_Kind=nullptr;
	if ((_38256_tokens.len() > 1LL)) {
		_38256_tokens=_38256_tokens.slice(1LL);
		_1b11d58c6_buildVarTypeAndExpr(_self_, _38239_v, &(_38256_tokens));
	};
}



inline void _1b11d6157_buildVarBegin(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d4a1c_VarDecl>* _39837_v, jule::I64* _39855_i, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _39864_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _39913_tok = (*(_39864_tokens))[(*(_39855_i))];;
	{
		auto &_match_expr{ _39913_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b432a2cb:;
			{
				(*(_39837_v)).get()._field_Statically=true;
				goto _case_begin_1b432b09b;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b432b09b:;
			{
				((*(_39855_i)))++;
				if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
					_1b11d361b_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_39864_tokens))[(*(_39855_i))].get()._field_Id == static_cast<jule::U64>(32LLU))) {
					(*(_39837_v)).get()._field_Mutable=true;
					((*(_39855_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b432a81a:;
			{
				((*(_39855_i)))++;
				(*(_39837_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1b432a7a4:;
			{
				_1b11d361b_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b432a74e:;
	};
	if (((*(_39855_i)) >= (*(_39864_tokens)).len())) {
		_1b11d361b_pushErr(_self_, _39913_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11d6498_buildVar(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _42832_tokens) {
	jule::I64 _42917_i = 0LL;;
	jule::Ptr<_1b04d4a1c_VarDecl> _43017_v = jule::new_ptr<_1b04d4a1c_VarDecl>(_1b04d4a1c_VarDecl{._field_Token=_42832_tokens[0LL], });;
	_1b11d6157_buildVarBegin(_self_.ptr(), &(_43017_v), &(_42917_i), &(_42832_tokens));
	if ((_42917_i >= _42832_tokens.len())) {
		return nullptr;;
	};
	_42832_tokens=_42832_tokens.slice(_42917_i);
	if ((_42832_tokens[0LL].get()._field_Id == static_cast<jule::U64>(65LLU))) {
		_43017_v.get()._field_Reference=true;
		if ((_42832_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_42832_tokens=_42832_tokens.slice(1LL);
	};
	_1b11d5c39_buildVarCommon(_self_, &(_43017_v), _42832_tokens);
	return _43017_v;;
}



inline jule::Ptr<_1b04cde89_GenericDecl> _1b11d67d9_buildGeneric(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _45037_tokens) {
	jule::Ptr<_1b04cde89_GenericDecl> _45117_g = jule::new_ptr<_1b04cde89_GenericDecl>(_1b04cde89_GenericDecl{._field_Token=(*(_45037_tokens))[0LL], });;
	if ((_45117_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _45117_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_45117_g.get()._field_Ident=_45117_g.get()._field_Token.get()._field_Kind;
	if (((*(_45037_tokens)).len() > 1LL)) {
		if (((*(_45037_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(8LLU))) {
			_1b11d361b_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_45037_tokens)).len() == 2LL)) {
			_1b11d361b_pushErr(_self_.ptr(), (*(_45037_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _46821_constraintTokens = (*(_45037_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _46922_parts;;
		jule::Slice<_1aa3c3a21_Log> _46929_errors;;
		({
			__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(&(_46821_constraintTokens), static_cast<jule::U64>(66LLU), true);
			_46922_parts = __jule_assign_result.__jule_result_arg0;
			_46929_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_46929_errors.len() > 0LL)) {
			(_self_.get()._field_errors).append(_46929_errors);;
			return nullptr;;
		};
		_45117_g.get()._field_Constraint=jule::new_ptr<_1b04cd9d3_Constraint>(_1b04cd9d3_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>::alloc(0LL, _46922_parts.len())});
		{
			auto expr = &(_46922_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b433610b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _47525_part = *it;
				{
					jule::I64 _47625_i = 0LL;;
					jule::Ptr<_1b04c1ba2_TypeDecl> _47726_kind;;
					({
						__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_47525_part), (&(_47625_i)), true);
						_47726_kind = __jule_assign_result.__jule_result_arg0;
					});
					{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = _45117_g.get()._field_Constraint.get()._field_Mask; __jule_push_dest.push(_47726_kind); };
					if ((_47625_i < _47525_part.len())) {
						_1b11d361b_pushErr(_self_.ptr(), _47525_part[_47625_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b433610b:;
				++it;
				goto _iter_begin_1b433610b;
			}
			_iter_end_1b433610b:;
		};
	};
	return _45117_g;;
}



inline jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _1b11d6bd5_buildGenerics(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _48738_tokens, jule::Ptr<_1aa49b1d1_Token>* _48757_errorToken) {
	if (((*(_48738_tokens)).len() == 0LL)) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_48757_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _49318_parts;;
	jule::Slice<_1aa3c3a21_Log> _49325_errors;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(_48738_tokens, static_cast<jule::U64>(5LLU), true);
		_49318_parts = __jule_assign_result.__jule_result_arg0;
		_49325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_49325_errors.len() > 0LL)) {
		(_self_.get()._field_errors).append(_49325_errors);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> _49917_generics = jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>::alloc(0LL, _49318_parts.len());;
	{
		auto expr = &(_49318_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b433ad14:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _50021_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>> &__jule_push_dest = _49917_generics; __jule_push_dest.push(_1b11d67d9_buildGeneric(_self_, &(_50021_part))); };
			}
			_iter_next_1b433ad14:;
			++it;
			goto _iter_begin_1b433ad14;
		}
		_iter_end_1b433ad14:;
	};
	return _49917_generics;;
}



inline jule::Ptr<_1b04d24dc_ParamDecl> _1b11d7026_buildSelfParam(_1b11d2b6a_parser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _50737_tokens) {
	if ((_50737_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1b04d24dc_ParamDecl> _51217_param = jule::new_ptr<_1b04d24dc_ParamDecl>();;
	jule::I64 _51517_i = 0LL;;
	if ((_50737_tokens[_51517_i].get()._field_Id == static_cast<jule::U64>(32LLU))) {
		_51217_param.get()._field_Mutable=true;
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_1b11d361b_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	_1aa364275_StrBuilder _52517_ident = static__1aa364594_New(5LL);;
	if ((_50737_tokens[_51517_i].get()._field_Id == static_cast<jule::U64>(65LLU))) {
		_1aa36d03c_WriteStr(&_52517_ident, jule::Str("&", 1));
		(_51517_i)++;
		if ((_51517_i >= _50737_tokens.len())) {
			_1b11d361b_pushErr(_self_, _50737_tokens[(_51517_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_50737_tokens[_51517_i].get()._field_Id == static_cast<jule::U64>(24LLU))) {
		_1aa36d03c_WriteStr(&_52517_ident, jule::Str("self", 4));
		_51217_param.get()._field_Token=_50737_tokens[_51517_i];
		(_51517_i)++;
		if ((_51517_i < _50737_tokens.len())) {
			_1b11d361b_pushErr(_self_, _50737_tokens[_51517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	_51217_param.get()._field_Ident=_1aa36d834_Str(&_52517_ident);
	return _51217_param;;
}



inline void _1b11d7444_paramTypeBegin(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d24dc_ParamDecl>* _54938_param, jule::I64* _54962_i, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _54971_tokens) {
	for (; ((*(_54962_i)) < (*(_54971_tokens)).len()); ((*(_54962_i)))++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _55117_token = (*(_54971_tokens))[(*(_54962_i))];;
			if ((_55117_token.get()._field_Id != static_cast<jule::U64>(39LLU))) {
				return;;
			};
			if ((*(_54938_param)).get()._field_Variadic) {
				_1b11d361b_pushErr(_self_, _55117_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1b4342964;
			};
			(*(_54938_param)).get()._field_Variadic=true;
		}
	_iter_next_1b4342964:;
	}
	_iter_end_1b4342964:;;
}



inline void _1b11d77a7_buildParamType(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04d24dc_ParamDecl>* _56439_param, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _56463_tokens) {
	jule::I64 _56517_i = 0LL;;
	_1b11d7444_paramTypeBegin(_self_.ptr(), _56439_param, &(_56517_i), _56463_tokens);
	if ((_56517_i >= (*(_56463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, _56463_tokens, (&(_56517_i)), true);
		(*(_56439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_56517_i < (*(_56463_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_56463_tokens))[_56517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1b11d7b1a_buildParamBody(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04d24dc_ParamDecl>* _57739_param, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _57762_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _57817_tok = _57762_tokens[0LL];;
	if ((_57762_tokens.len() == 1LL)) {
		(*(_57739_param)).get()._field_Ident=_57817_tok.get()._field_Kind;
		return;;
	} else if ((_57762_tokens.len() < 3LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _57817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_57762_tokens[1LL].get()._field_Id != static_cast<jule::U64>(8LLU))) {
		(*(_57739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1b11d77a7_buildParamType(_self_, _57739_param, &(_57762_tokens));
		return;;
	};
	(*(_57739_param)).get()._field_Ident=_57817_tok.get()._field_Kind;
	_57762_tokens=_57762_tokens.slice(2LL);
	_1b11d77a7_buildParamType(_self_, _57739_param, &(_57762_tokens));
}



inline jule::Ptr<_1b04d24dc_ParamDecl> _1b11d7e5b_buildParam(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _59734_tokens) {
	jule::Ptr<_1b04d24dc_ParamDecl> _59817_param = jule::new_ptr<_1b04d24dc_ParamDecl>(_1b04d24dc_ParamDecl{._field_Token=_59734_tokens[0LL], });;
	if ((_59817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(32LLU))) {
		_59817_param.get()._field_Mutable=true;
		if ((_59734_tokens.len() == 1LL)) {
			_1b11d361b_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_59734_tokens=_59734_tokens.slice(1LL);
		_59817_param.get()._field_Token=_59734_tokens[0LL];
	};
	if ((_59734_tokens.len() >= 3LL)) {
		if ((_59817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(65LLU))) {
			if ((_59734_tokens.len() == 1LL)) {
				_1b11d361b_pushErr(_self_.ptr(), _59734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_59734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(1LLU)) && (_59734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
				_59817_param.get()._field_Reference=true;
				_59734_tokens=_59734_tokens.slice(1LL);
				_59817_param.get()._field_Token=_59734_tokens[0LL];
			};
		};
	};
	if ((_59817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_59817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1b11d77a7_buildParamType(_self_, &(_59817_param), &(_59734_tokens));
	} else {
		_1b11d7b1a_buildParamBody(_self_, &(_59817_param), _59734_tokens);
	};
	return _59817_param;;
}



inline void _1b11d8214_checkParams(_1b11d2b6a_parser* _self_, jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>>* _64035_params) {
	{
		auto expr = _64035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b435029b:;
		if (it != expr_end) {
			jule::Ptr<_1b04d24dc_ParamDecl> _64121_param = *it;
			{
				if ((_1b04d2861_IsSelf(_64121_param.ptr()) || (_64121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1b435029b;
				};
				if ((_64121_param.get()._field_Token == nullptr)) {
					_1b11d361b_pushErr(_self_, _64121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_64121_param.get()._field_Kind=jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_64121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_64121_param.get()._field_Token, ._field_Ident=_64121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_64121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1b435029b:;
			++it;
			goto _iter_begin_1b435029b;
		}
		_iter_end_1b435029b:;
	};
}



inline jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>> _1b11d8610_buildParams(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _66036_tokens, jule::Bool _66054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _66118_parts;;
	jule::Slice<_1aa3c3a21_Log> _66125_errs;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(_66036_tokens, static_cast<jule::U64>(5LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_66125_errs);;
	if ((_66118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>> _66717_params = nullptr;;
	if ((_66054_method && (_66118_parts.len() > 0LL))) {
		jule::Ptr<_1b04d24dc_ParamDecl> _66921_param = _1b11d7026_buildSelfParam(_self_.ptr(), _66118_parts[0LL]);;
		if (((_66921_param != nullptr) && _1b04d2861_IsSelf(_66921_param.ptr()))) {
			{ jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_66921_param); };
			_66118_parts=_66118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_66118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4355328:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _67621_part = *it;
			{
				jule::Ptr<_1b04d24dc_ParamDecl> _67721_param = _1b11d7e5b_buildParam(_self_, _67621_part);;
				if ((_67721_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>> &__jule_push_dest = _66717_params; __jule_push_dest.push(_67721_param); };
				};
			}
			_iter_next_1b4355328:;
			++it;
			goto _iter_begin_1b4355328;
		}
		_iter_end_1b4355328:;
	};
	_1b11d8214_checkParams(_self_.ptr(), &(_66717_params));
	return _66717_params;;
}



inline __jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool _1b11d8a0b_buildMultiRetType(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _68742_tokens, jule::I64* _68765_i) {
	__jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b04c4a95_RetTypeDecl>();
	((*(_68765_i)))++;
	if (((*(_68765_i)) >= (*(_68742_tokens)).len())) {
		((*(_68765_i)))--;
		({
			__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, _68742_tokens, (&((*(_68765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_68765_i)))--;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _69717_rangeTokens = _1b11d1053_range(_68765_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _68742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _69918_parts;;
	jule::Slice<_1aa3c3a21_Log> _69925_errs;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(&(_69717_rangeTokens), static_cast<jule::U64>(5LLU), true);
		_69918_parts = __jule_assign_result.__jule_result_arg0;
		_69925_errs = __jule_assign_result.__jule_result_arg1;
	});
	(_self_.get()._field_errors).append(_69925_errs);;
	if ((_69918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _70517_types = jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>::alloc(0LL, _69918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_1aa49b1d1_Token>>::alloc(0LL, _69918_parts.len());
	{
		auto expr = &(_69918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b435aac0:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _70721_part = *it;
			{
				jule::Ptr<_1aa49b1d1_Token> _70821_token = _70721_part[0LL];;
				jule::I64 _70921_offset = 0LL;;
				if ((_70721_part.len() > 1LL)) {
					_70821_token=_70721_part[1LL];
					if ((_70821_token.get()._field_Id == static_cast<jule::U64>(8LLU))) {
						_70921_offset=2LL;
						if ((_70721_part.len() < 3LL)) {
							_1b11d361b_pushErr(_self_.ptr(), _70821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1b435aac0;
						};
					};
				};
				_70821_token=_70721_part[0LL];
				if ((_70921_offset != 2LL)) {
					jule::Ptr<_1aa49b1d1_Token> _72525_newToken = jule::new_ptr<_1aa49b1d1_Token>((*(_70821_token)));;
					_72525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					{ jule::Slice<jule::Ptr<_1aa49b1d1_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_72525_newToken); };
				} else {
					{ jule::Slice<jule::Ptr<_1aa49b1d1_Token>> &__jule_push_dest = __jule_func_result.__jule_result_arg0.get()._field_Idents; __jule_push_dest.push(_70821_token); };
				};
				jule::Ptr<_1b04c1ba2_TypeDecl> _73222_tk;;
				({
					__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_70721_part), (&(_70921_offset)), true);
					_73222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_70921_offset < _70721_part.len())) {
					_1b11d361b_pushErr(_self_.ptr(), _70721_part[_70921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = _70517_types; __jule_push_dest.push(_73222_tk); };
			}
			_iter_next_1b435aac0:;
			++it;
			goto _iter_begin_1b435aac0;
		}
		_iter_end_1b435aac0:;
	};
	if ((_70517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=(*(_68742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1b04c33ce_TupleTypeDecl>(_1b04c33ce_TupleTypeDecl{._field_Types=_70517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_70517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool _1b11d8e07_buildRetType(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _75537_tokens, jule::I64* _75560_i) {
	__jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1b04c4a95_RetTypeDecl>();
	if (((*(_75560_i)) >= (*(_75537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1aa49b1d1_Token> _76117_token = (*(_75537_tokens))[(*(_75560_i))];;
	{
		auto &_match_expr{ _76117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b4363699:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(71LLU)) {
			_case_begin_1b4363721:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b4363798:;
			{
				if ((((*(_75560_i)) + 1LL) >= (*(_75537_tokens)).len())) {
					_1b11d361b_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_75560_i)))++;
				_76117_token=(*(_75537_tokens))[(*(_75560_i))];
				{
					auto &_match_expr{ _76117_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4365349:;
						{
							({
								__jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b11d8a0b_buildMultiRetType(_self_, _75537_tokens, _75560_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b43653b0:;
						{
							_1b11d361b_pushErr(_self_.ptr(), _76117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1b43652e4:;
				};
				({
					__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, _75537_tokens, (&((*(_75560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b4362c2b:;
	};
	((*(_75560_i)))++;
	_1b11d361b_pushErr(_self_.ptr(), _76117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1b04d393e_FnDecl> _1b11d93ad_buildFnPrototype(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _79441_tokens, jule::I64* _79464_i, jule::Bool _79472_method) {
	jule::Ptr<_1b04d393e_FnDecl> _79517_f = jule::new_ptr<_1b04d393e_FnDecl>(_1b04d393e_FnDecl{._field_Token=(*(_79441_tokens))[(*(_79464_i))], });;
	if ((_79517_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_79517_f.get()._field_Statically=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79517_f.get()._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	if ((_79517_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		_79517_f.get()._field_Unsafety=true;
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79517_f.get()._field_Token=(*(_79441_tokens))[(*(_79464_i))];
	};
	((*(_79464_i)))++;
	if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1aa49b1d1_Token> _82813_tok = (*(_79441_tokens))[(*(_79464_i))];;
	if ((_82813_tok.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_79464_i)))++;
		if (((*(_79464_i)) >= (*(_79441_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), _79517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_79517_f.get()._field_Ident=_82813_tok.get()._field_Kind;
	} else {
		_79517_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_1aa49b1d1_Token> _84013_errorToken = (*(_79441_tokens))[(*(_79464_i))];;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _84117_genericsTokens = _1b11d1053_range(_79464_i, static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _79441_tokens);;
	if ((_84117_genericsTokens != nullptr)) {
		_79517_f.get()._field_Generics=_1b11d6bd5_buildGenerics(_self_, &(_84117_genericsTokens), &(_84013_errorToken));
	};
	if (((*(_79441_tokens))[(*(_79464_i))].get()._field_Id != static_cast<jule::U64>(74LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_79441_tokens))[(*(_79464_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _85117_paramsToks = _1b11d1053_range(_79464_i, static_cast<jule::U64>(74LLU), static_cast<jule::U64>(75LLU), _79441_tokens);;
	if ((_85117_paramsToks.len() > 0LL)) {
		_79517_f.get()._field_Params=_1b11d8610_buildParams(_self_, &(_85117_paramsToks), _79472_method);
	};
	if (((*(_79464_i)) < (*(_79441_tokens)).len())) {
		jule::Ptr<_1aa49b1d1_Token> _85717_token = (*(_79441_tokens))[(*(_79464_i))];;
		if ((_85717_token.get()._field_Id == static_cast<jule::U64>(68LLU))) {
			_79517_f.get()._field_Exceptional=true;
			((*(_79464_i)))++;
		};
	};
	_79517_f.get()._field_Public=_1b05885d7_IsPub(&(_79517_f.get()._field_Ident));
	({
		__jule_tuple_x_1b04c4a95_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1b11d8e07_buildRetType(_self_, _79441_tokens, _79464_i);
		_79517_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _79517_f;;
}



inline jule::Ptr<_1b04d393e_FnDecl> _1b11d9864_buildFn(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _87132_tokens, jule::Bool _87150_method, jule::Bool _87164_prototype) {
	jule::I64 _87217_i = 0LL;;
	jule::Ptr<_1b04d393e_FnDecl> _87317_f = _1b11d93ad_buildFnPrototype(_self_, _87132_tokens, &(_87217_i), _87150_method);;
	if (_87164_prototype) {
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), (*(_87132_tokens))[(_87217_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _87317_f;;
	} else if ((_87317_f == nullptr)) {
		return _87317_f;;
	};
	if ((_87217_i >= (*(_87132_tokens)).len())) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _87317_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _88917_blockTokens = _1b11d1053_range(&(_87217_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _87132_tokens);;
	if ((_88917_blockTokens != nullptr)) {
		_87317_f.get()._field_Scope=_1b11d47b5_buildScope(_self_, &(_88917_blockTokens), (*(_87132_tokens))[(_87217_i - 1LL)]);
		_87317_f.get()._field_Scope.get()._field_Unsafety=_87317_f.get()._field_Unsafety;
		if ((_87217_i < (*(_87132_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), (*(_87132_tokens))[_87217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _87317_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _87317_f;;
}



inline jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _1b11d9ba5_getUseDeclSelectors(_1b11d2b6a_parser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _90542_tokens) {
	jule::I64 _90617_i = 0LL;;
	_90542_tokens=_1b11d1053_range(&(_90617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_90542_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _90818_parts;;
	jule::Slice<_1aa3c3a21_Log> _90825_errs;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(&(_90542_tokens), static_cast<jule::U64>(5LLU), true);
		_90818_parts = __jule_assign_result.__jule_result_arg0;
		_90825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_90825_errs.len() > 0LL)) {
		((*(_self_))._field_errors).append(_90825_errs);;
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _91417_selectors = jule::Slice<jule::Ptr<_1aa49b1d1_Token>>::alloc(0LL, _90818_parts.len());;
	{
		auto expr = &(_90818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4379e96:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _91521_part = *it;
			{
				if ((_91521_part.len() > 1LL)) {
					_1b11d361b_pushErr(_self_, _91521_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1aa49b1d1_Token> _91921_tok = _91521_part[0LL];;
				if (((_91921_tok.get()._field_Id != static_cast<jule::U64>(1LLU)) && (_91921_tok.get()._field_Id != static_cast<jule::U64>(24LLU)))) {
					_1b11d361b_pushErr(_self_, _91921_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1b11d397e_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1b4379e96;
				};
				{ jule::Slice<jule::Ptr<_1aa49b1d1_Token>> &__jule_push_dest = _91417_selectors; __jule_push_dest.push(_91921_tok); };
			}
			_iter_next_1b4379e96:;
			++it;
			goto _iter_begin_1b4379e96;
		}
		_iter_end_1b4379e96:;
	};
	return _91417_selectors;;
}



inline void _1b11da018_buildBindUseDecl(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _93040_decl, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _93057_tokens) {
	if (((*(_93057_tokens)).len() > 1LL)) {
		_1b11d361b_pushErr(_self_, (*(_93057_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1aa49b1d1_Token> _93413_token = (*(_93057_tokens))[0LL];;
	if (((_93413_token.get()._field_Id != static_cast<jule::U64>(4LLU)) || ((_93413_token.get()._field_Kind[0LL] != '`') && (_93413_token.get()._field_Kind[0LL] != '\"')))) {
		_1b11d361b_pushErr(_self_, _93413_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_93040_decl)).get()._field_Binded=true;
	(*(_93040_decl)).get()._field_LinkPath=_93413_token.get()._field_Kind.slice(1LL, (_93413_token.get()._field_Kind.len() - 1LL));
}



inline void _1b11da37b_buildStdUseDecl(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _94339_decl, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _94359_tokens) {
	(*(_94339_decl)).get()._field_Std=true;
	jule::Ptr<_1aa49b1d1_Token> _94617_token = _94359_tokens[0LL];;
	if ((_94359_tokens.len() < 3LL)) {
		_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_94359_tokens=_94359_tokens.slice(2LL);
	_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94617_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b438281c:;
			{
				_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b4382883:;
			{
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _95921_selectors = nullptr;;
				({
					__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_assign_result = _1b11d131c_rangeLast(&(_94359_tokens));
					_94359_tokens = __jule_assign_result.__jule_result_arg0;
					_95921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_94339_decl)).get()._field_Selected=_1b11d9ba5_getUseDeclSelectors(_self_, _95921_selectors);
				if ((_94359_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if ((_94617_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b43828e9:;
			{
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94617_token=_94359_tokens[(_94359_tokens.len() - 1LL)];
				if ((_94617_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_94359_tokens=_94359_tokens.slice(0LL, (_94359_tokens.len() - 1LL));
				if ((_94359_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _94617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_94339_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b43827b7:;
	};
	(*(_94339_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1b11d2708_tokstoa(&(_94359_tokens)));
}



inline void _1b11da6de_buildIdentUseDecl(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _99741_decl, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _99761_tokens) {
	(*(_99741_decl)).get()._field_Std=false;
	jule::Ptr<_1aa49b1d1_Token> _100017_token = _99761_tokens[(_99761_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _100017_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b438a193:;
			{
				_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b438a803:;
			{
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _100621_selectors = nullptr;;
				({
					__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_assign_result = _1b11d131c_rangeLast(&(_99761_tokens));
					_99761_tokens = __jule_assign_result.__jule_result_arg0;
					_100621_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99741_decl)).get()._field_Selected=_1b11d9ba5_getUseDeclSelectors(_self_, _100621_selectors);
				if ((_99761_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if ((_100017_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b438a869:;
			{
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100017_token=_99761_tokens[(_99761_tokens.len() - 1LL)];
				if ((_100017_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
					_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99761_tokens=_99761_tokens.slice(0LL, (_99761_tokens.len() - 1LL));
				if ((_99761_tokens.len() == 0LL)) {
					_1b11d361b_pushErr(_self_, _100017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99741_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b438a56c:;
	};
	(*(_99741_decl)).get()._field_LinkPath=_1b11d2708_tokstoa(&(_99761_tokens));
}



inline void _1b11daa52_parseUseDecl(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d9aee_UseDecl>* _104536_decl, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _104556_tokens) {
	if ((*(_104536_decl)).get()._field_Binded) {
		_1b11da018_buildBindUseDecl(_self_, _104536_decl, &(_104556_tokens));
		return;;
	};
	jule::Ptr<_1aa49b1d1_Token> _105117_token = _104556_tokens[0LL];;
	if ((_105117_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_104556_tokens.len() > 2LL) && (_104556_tokens[1LL].get()._field_Id == static_cast<jule::U64>(9LLU)))) {
		(*(_104536_decl)).get()._field_Alias=_105117_token.get()._field_Kind;
		if ((_104556_tokens[2LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1b11d361b_pushErr(_self_, _105117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1b11d397e_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_104556_tokens=_104556_tokens.slice(2LL);
		_105117_token=_104556_tokens[0LL];
	};
	;
	{
		
		if (_105117_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1b4396a84:;
			{
				_1b11da37b_buildStdUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		else {
			_case_begin_1b4396600:;
			{
				_1b11da6de_buildIdentUseDecl(_self_, _104536_decl, _104556_tokens);
			}
		}
		_match_end_1b4396589:;
	};
}



inline jule::Ptr<_1b04d9aee_UseDecl> _1b11dae4d_buildUseDecl(_1b11d2b6a_parser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _107935_tokens, jule::Bool _107953_binded) {
	jule::Ptr<_1b04d9aee_UseDecl> _108017_decl = jule::new_ptr<_1b04d9aee_UseDecl>(_1b04d9aee_UseDecl{._field_Token=_107935_tokens[0LL], ._field_Binded=_107953_binded, });;
	if ((_107935_tokens.len() < 2LL)) {
		_1b11d361b_pushErr(_self_, _108017_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_107935_tokens=_107935_tokens.slice(1LL);
	_1b11daa52_parseUseDecl(_self_, &(_108017_decl), _107935_tokens);
	return _108017_decl;;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11db349_buildTypeEnumItemKind(jule::Ptr<_1b11d2b6a_parser> _self_, jule::I64* _109346_i, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _109359_tokens) {
	jule::I64 _109417_braceN = 0LL;;
	jule::I64 _109513_exprStart = (*(_109346_i));;
	for (; ((*(_109346_i)) < (*(_109359_tokens)).len()); ((*(_109346_i)))++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _109717_t = (*(_109359_tokens))[(*(_109346_i))];;
			{
				auto &_match_expr{ _109717_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b439aa77:;
					{
						(_109417_braceN)++;
						goto _iter_next_1b4399e61;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b439aaee:;
					{
						(_109417_braceN)--;
					}
				}
				_match_end_1b439a5b0:;
			};
			if ((_109417_braceN > 0LL)) {
				goto _iter_next_1b4399e61;
			};
			if (((_109717_t.get()._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_109346_i)) + 1LL) >= (*(_109359_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _111325_kindTokens = nullptr;;
				if ((_109717_t.get()._field_Id == static_cast<jule::U64>(5LLU))) {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart, (*(_109346_i)));
				} else {
					_111325_kindTokens=(*(_109359_tokens)).slice(_109513_exprStart);
				};
				jule::I64 _111925_j = 0LL;;
				jule::Ptr<_1b04c1ba2_TypeDecl> _112026_kind;;
				({
					__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_111325_kindTokens), (&(_111925_j)), true);
					_112026_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_111925_j < _111325_kindTokens.len())) {
					_1b11d361b_pushErr(_self_.ptr(), _111325_kindTokens[_111925_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _112026_kind;;
			};
		}
	_iter_next_1b4399e61:;
	}
	_iter_end_1b4399e61:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>> _1b11db68a_buildTypeEnumItems(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _113043_tokens) {
	jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>> _113117_items = jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _113217_i = 0LL;;
	for (; (_113217_i < (*(_113043_tokens)).len()); (_113217_i)++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _113421_t = (*(_113043_tokens))[_113217_i];;
			jule::Ptr<_1b04db491_TypeEnumItemDecl> _113521_item = jule::new_ptr<_1b04db491_TypeEnumItemDecl>();;
			_113521_item.get()._field_Token=_113421_t;
			if (((_113521_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_113043_tokens)).len() - _113217_i) > 2LL))) {
				_113421_t=(*(_113043_tokens))[(_113217_i + 1LL)];
				if ((_113421_t.get()._field_Id == static_cast<jule::U64>(8LLU))) {
					_113521_item.get()._field_Ident=_113521_item.get()._field_Token.get()._field_Kind;
					_113217_i+=2LL;
					if (((_113217_i >= (*(_113043_tokens)).len()) || ((*(_113043_tokens))[_113217_i].get()._field_Id == static_cast<jule::U64>(5LLU)))) {
						_1b11d361b_pushErr(_self_.ptr(), _113421_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1b43a0906;
					};
				};
			};
			_113521_item.get()._field_Kind=_1b11db349_buildTypeEnumItemKind(_self_, &(_113217_i), _113043_tokens);
			{ jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>> &__jule_push_dest = _113117_items; __jule_push_dest.push(_113521_item); };
		}
	_iter_next_1b43a0906:;
	}
	_iter_end_1b43a0906:;;
	return _113117_items;;
}



inline jule::Ptr<_1b04dbb01_TypeEnumDecl> _1b11db9cb_buildTypeEnumDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _115442_tokens) {
	jule::I64 _115517_i = 1LL;;
	jule::Ptr<_1b04dbb01_TypeEnumDecl> _115617_e = jule::new_ptr<_1b04dbb01_TypeEnumDecl>(_1b04dbb01_TypeEnumDecl{._field_Token=(*(_115442_tokens))[_115517_i], });;
	if ((_115617_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _115617_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_115617_e.get()._field_Ident=_115617_e.get()._field_Token.get()._field_Kind;
	_115517_i+=3LL;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _116617_itemTokens = _1b11d1053_range(&(_115517_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _115442_tokens);;
	if ((_116617_itemTokens == nullptr)) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _115617_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _115617_e;;
	} else if ((_115517_i < (*(_115442_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_115442_tokens))[_115517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_115617_e.get()._field_Public=_1b05885d7_IsPub(&(_115617_e.get()._field_Ident));
	_115617_e.get()._field_End=(*(_115442_tokens))[(_115517_i - 1LL)];
	_115617_e.get()._field_Items=_1b11db68a_buildTypeEnumItems(_self_, &(_116617_itemTokens));
	return _115617_e;;
}



inline jule::Ptr<_1b04c5ed6_Expr> _1b11dbdc7_buildEnumItemExpr(jule::Ptr<_1b11d2b6a_parser> _self_, jule::I64* _118142_i, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _118155_tokens) {
	jule::I64 _118217_braceN = 0LL;;
	jule::I64 _118313_exprStart = (*(_118142_i));;
	for (; ((*(_118142_i)) < (*(_118155_tokens)).len()); ((*(_118142_i)))++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _118517_t = (*(_118155_tokens))[(*(_118142_i))];;
			{
				auto &_match_expr{ _118517_t.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b43aadc8:;
					{
						(_118217_braceN)++;
						goto _iter_next_1b43aa2b2;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b43aae50:;
					{
						(_118217_braceN)--;
					}
				}
				_match_end_1b43aa911:;
			};
			if ((_118217_braceN > 0LL)) {
				goto _iter_next_1b43aa2b2;
			};
			if (((_118517_t.get()._field_Id == static_cast<jule::U64>(5LLU)) || (((*(_118142_i)) + 1LL) >= (*(_118155_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _120125_exprTokens = nullptr;;
				if ((_118517_t.get()._field_Id == static_cast<jule::U64>(5LLU))) {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart, (*(_118142_i)));
				} else {
					_120125_exprTokens=(*(_118155_tokens)).slice(_118313_exprStart);
				};
				return _1b11d3cc0_buildExpr(_self_, &(_120125_exprTokens));;
			};
		}
	_iter_next_1b43aa2b2:;
	}
	_iter_end_1b43aa2b2:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>> _1b11dc218_buildEnumItems(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _121339_tokens) {
	jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>> _121417_items = jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121517_i = 0LL;;
	for (; (_121517_i < (*(_121339_tokens)).len()); (_121517_i)++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _121721_t = (*(_121339_tokens))[_121517_i];;
			jule::Ptr<_1b04da0a5_EnumItemDecl> _121821_item = jule::new_ptr<_1b04da0a5_EnumItemDecl>();;
			_121821_item.get()._field_Token=_121721_t;
			if ((_121821_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
				_1b11d361b_pushErr(_self_.ptr(), _121821_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_121821_item.get()._field_Ident=_121821_item.get()._field_Token.get()._field_Kind;
			if ((((_121517_i + 1LL) >= (*(_121339_tokens)).len()) || ((*(_121339_tokens))[(_121517_i + 1LL)].get()._field_Id == static_cast<jule::U64>(5LLU)))) {
				if (((_121517_i + 1LL) < (*(_121339_tokens)).len())) {
					(_121517_i)++;
				};
				{ jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
				goto _iter_next_1b43aeaad;
			};
			(_121517_i)++;
			_121721_t=(*(_121339_tokens))[_121517_i];
			(_121517_i)++;
			if ((_121721_t.get()._field_Id != static_cast<jule::U64>(8LLU))) {
				_1b11d361b_pushErr(_self_.ptr(), _121721_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1b43aeaad;
			};
			if (((_121517_i >= (*(_121339_tokens)).len()) || ((*(_121339_tokens))[_121517_i].get()._field_Id == static_cast<jule::U64>(5LLU)))) {
				_1b11d361b_pushErr(_self_.ptr(), _121721_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1b43aeaad;
			};
			_121821_item.get()._field_Expr=_1b11dbdc7_buildEnumItemExpr(_self_, &(_121517_i), _121339_tokens);
			{ jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>> &__jule_push_dest = _121417_items; __jule_push_dest.push(_121821_item); };
		}
	_iter_next_1b43aeaad:;
	}
	_iter_end_1b43aeaad:;;
	return _121417_items;;
}



inline jule::Ptr<_1b04dab66_EnumDecl> _1b11dc559_buildEnumDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _125038_tokens) {
	if (((*(_125038_tokens)).len() < 3LL)) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_125038_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04dab66_EnumDecl> _125517_e = jule::new_ptr<_1b04dab66_EnumDecl>(_1b04dab66_EnumDecl{._field_Token=(*(_125038_tokens))[1LL], });;
	if ((_125517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _125517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_125517_e.get()._field_Ident=_125517_e.get()._field_Token.get()._field_Kind;
	jule::I64 _126317_i = 2LL;;
	if (((*(_125038_tokens))[_126317_i].get()._field_Id == static_cast<jule::U64>(8LLU))) {
		(_126317_i)++;
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), (*(_125038_tokens))[(_126317_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _125517_e;;
		};
		({
			__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, _125038_tokens, (&(_126317_i)), true);
			_125517_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_126317_i >= (*(_125038_tokens)).len())) {
			_1b11d2e67_stop(_self_.ptr());
			_1b11d361b_pushErr(_self_.ptr(), _125517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _125517_e;;
		};
	} else {
		_125517_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _128017_itemTokens = _1b11d1053_range(&(_126317_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _125038_tokens);;
	if ((_128017_itemTokens == nullptr)) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _125517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _125517_e;;
	} else if ((_126317_i < (*(_125038_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_125038_tokens))[_126317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_125517_e.get()._field_Public=_1b05885d7_IsPub(&(_125517_e.get()._field_Ident));
	_125517_e.get()._field_End=(*(_125038_tokens))[(_126317_i - 1LL)];
	_125517_e.get()._field_Items=_1b11dc218_buildEnumItems(_self_, &(_128017_itemTokens));
	return _125517_e;;
}



inline jule::Any _1b11dc89a_buildNodeEnumDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _129542_tokens) {
	if ((((*(_129542_tokens)).len() > 3LL) && ((*(_129542_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(8LLU)))) {
		if (((*(_129542_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(7LLU))) {
			return jule::Any(_1b11db9cb_buildTypeEnumDecl(_self_, _129542_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1b11dc559_buildEnumDecl(_self_, _129542_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1b04dbdba_FieldDecl> _1b11dcbdb_buildField(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _130434_tokens) {
	jule::Ptr<_1b04dbdba_FieldDecl> _130517_f = jule::new_ptr<_1b04dbdba_FieldDecl>();;
	_130517_f.get()._field_Mutable=(_130434_tokens[0LL].get()._field_Id == static_cast<jule::U64>(32LLU));
	if (_130517_f.get()._field_Mutable) {
		if ((_130434_tokens.len() == 1LL)) {
			_1b11d361b_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130434_tokens=_130434_tokens.slice(1LL);
	};
	_130517_f.get()._field_Token=_130434_tokens[0LL];
	if ((_130517_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _130517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130517_f.get()._field_Ident=_130517_f.get()._field_Token.get()._field_Kind;
	if ((_130434_tokens.len() == 1LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _130434_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_130434_tokens.len() < 3LL) || (_130434_tokens[1LL].get()._field_Id != static_cast<jule::U64>(8LLU)))) {
		_1b11d361b_pushErr(_self_.ptr(), _130434_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_130434_tokens=_130434_tokens.slice(2LL);
	jule::I64 _133317_i = 0LL;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_130434_tokens), (&(_133317_i)), true);
		_130517_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_133317_i < _130434_tokens.len())) {
		jule::Ptr<_1aa49b1d1_Token> _133617_token = _130434_tokens[_133317_i];;
		if ((_133617_token.get()._field_Id != static_cast<jule::U64>(71LLU))) {
			_1b11d361b_pushErr(_self_.ptr(), _130434_tokens[_133317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_133317_i)++;
		if ((_133317_i >= _130434_tokens.len())) {
			_1b11d361b_pushErr(_self_.ptr(), _133617_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_130434_tokens=_130434_tokens.slice(_133317_i);
		_130517_f.get()._field_Default=_1b11d3cc0_buildExpr(_self_, &(_130434_tokens));
	};
	_130517_f.get()._field_Public=_1b05885d7_IsPub(&(_130517_f.get()._field_Ident));
	return _130517_f;;
}



inline jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>> _1b11dd02c_buildStructDeclFields(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _135345_tokens) {
	jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>> _135417_fields = nullptr;;
	jule::Slice<jule::Ptr<_1b11b4102_stmt>> _135517_stmts = _1b11b44a9_splitStmts(&(_135345_tokens));;
	{
		auto expr = &(_135517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b43c8d6e:;
		if (it != expr_end) {
			jule::Ptr<_1b11b4102_stmt> _135621_stmt = *it;
			{
				_135345_tokens=_135621_stmt.get()._field_tokens;
				jule::Ptr<_1b04dbdba_FieldDecl> _135821_f = _1b11dcbdb_buildField(_self_, _135345_tokens);;
				{ jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>> &__jule_push_dest = _135417_fields; __jule_push_dest.push(_135821_f); };
			}
			_iter_next_1b43c8d6e:;
			++it;
			goto _iter_begin_1b43c8d6e;
		}
		_iter_end_1b43c8d6e:;
	};
	return _135417_fields;;
}



inline jule::Ptr<_1b04dc7b1_StructDecl> _1b11dd36d_buildStructDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _136440_tokens) {
	if (((*(_136440_tokens)).len() < 3LL)) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_136440_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _137017_i = 1LL;;
	jule::Ptr<_1b04dc7b1_StructDecl> _137117_s = jule::new_ptr<_1b04dc7b1_StructDecl>(_1b04dc7b1_StructDecl{._field_Token=(*(_136440_tokens))[_137017_i], });;
	if ((_137117_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _137117_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_137017_i)++;
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	_137117_s.get()._field_Ident=_137117_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_1aa49b1d1_Token> _138513_errorToken = (*(_136440_tokens))[_137017_i];;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _138617_genericsTokens = _1b11d1053_range(&(_137017_i), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), _136440_tokens);;
	if ((_138617_genericsTokens != nullptr)) {
		_137117_s.get()._field_Generics=_1b11d6bd5_buildGenerics(_self_, &(_138617_genericsTokens), &(_138513_errorToken));
	};
	if ((_137017_i >= (*(_136440_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_136440_tokens))[(_137017_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _139617_bodyTokens = _1b11d1053_range(&(_137017_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _136440_tokens);;
	if ((_139617_bodyTokens == nullptr)) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _137117_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _137117_s;;
	};
	if ((_137017_i < (*(_136440_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_136440_tokens))[_137017_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_137117_s.get()._field_Public=_1b05885d7_IsPub(&(_137117_s.get()._field_Ident));
	_137117_s.get()._field_Fields=_1b11dd02c_buildStructDeclFields(_self_, _139617_bodyTokens);
	_137117_s.get()._field_End=(*(_136440_tokens))[(_137017_i - 1LL)];
	return _137117_s;;
}



inline void _1b11dd626_checkMethodReceiver(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d393e_FnDecl>* _141239_f) {
	if ((*(_141239_f)).get()._field_Statically) {
		if ((((*(_141239_f)).get()._field_Params.len() > 0LL) && _1b04d2861_IsSelf((*(_141239_f)).get()._field_Params[0LL].ptr()))) {
			_1b11d361b_pushErr(_self_, (*(_141239_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_141239_f)).get()._field_Params.len() == 0LL)) {
		_1b11d361b_pushErr(_self_, (*(_141239_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1b04d24dc_ParamDecl> _142413_param = (*(_141239_f)).get()._field_Params[0LL];;
	if ((!(_1b04d2861_IsSelf(_142413_param.ptr())))) {
		_1b11d361b_pushErr(_self_, (*(_141239_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1b11dd989_buildTraitBody(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04dceed_TraitDecl>* _143139_t, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _143158_tokens) {
	jule::Slice<jule::Ptr<_1b11b4102_stmt>> _143217_stmts = _1b11b44a9_splitStmts(&(_143158_tokens));;
	{
		auto expr = &(_143217_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b43d6c6c:;
		if (it != expr_end) {
			jule::Ptr<_1b11b4102_stmt> _143321_stmt = *it;
			{
				_143158_tokens=_143321_stmt.get()._field_tokens;
				if ((_143158_tokens.len() == 0LL)) {
					goto _iter_next_1b43d6c6c;
				};
				{
					auto &_match_expr{ _143158_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(29LLU)) {
						_case_begin_1b43d9841:;
						{
							jule::Ptr<_1b04d393e_FnDecl> _144025_f = _1b11d9864_buildFn(_self_, &(_143158_tokens), true, true);;
							if ((_144025_f == nullptr)) {
								goto _match_end_1b43d7eb0;
							};
							_1b11dd626_checkMethodReceiver(_self_.ptr(), &(_144025_f));
							if ((_144025_f.get()._field_Generics.len() > 0LL)) {
								_1b11d361b_pushErr(_self_.ptr(), _144025_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b04d393e_FnDecl>> &__jule_push_dest = (*(_143139_t)).get()._field_Methods; __jule_push_dest.push(_144025_f); };
						}
					}
					else {
						_case_begin_1b43d7894:;
						{
							jule::I64 _145025_i = 0LL;;
							jule::Ptr<_1b04c1ba2_TypeDecl> _145126_ti;;
							jule::Bool _145130_ok = false;;
							({
								__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_143158_tokens), (&(_145025_i)), true);
								_145126_ti = __jule_assign_result.__jule_result_arg0;
								_145130_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_145130_ok))) {
								goto _match_end_1b43d7eb0;
							};
							if ((_145025_i < _143158_tokens.len())) {
								_1b11d361b_pushErr(_self_.ptr(), _143158_tokens[_145025_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = (*(_143139_t)).get()._field_Inherits; __jule_push_dest.push(_145126_ti); };
						}
					}
					_match_end_1b43d7eb0:;
				};
			}
			_iter_next_1b43d6c6c:;
			++it;
			goto _iter_begin_1b43d6c6c;
		}
		_iter_end_1b43d6c6c:;
	};
}



inline jule::Ptr<_1b04dceed_TraitDecl> _1b11ddcca_buildTraitDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _146339_tokens) {
	if (((*(_146339_tokens)).len() < 3LL)) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_146339_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04dceed_TraitDecl> _146817_t = jule::new_ptr<_1b04dceed_TraitDecl>(_1b04dceed_TraitDecl{._field_Token=(*(_146339_tokens))[1LL], });;
	if ((_146817_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _146817_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_146817_t.get()._field_Ident=_146817_t.get()._field_Token.get()._field_Kind;
	jule::I64 _147617_i = 2LL;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _147717_bodyTokens = _1b11d1053_range(&(_147617_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), _146339_tokens);;
	if ((_147717_bodyTokens == nullptr)) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _146817_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_147617_i < (*(_146339_tokens)).len())) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_146339_tokens))[_147617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_146817_t.get()._field_Public=_1b05885d7_IsPub(&(_146817_t.get()._field_Ident));
	_1b11dd989_buildTraitBody(_self_, &(_146817_t), _147717_bodyTokens);
	_146817_t.get()._field_End=(*(_146339_tokens))[(_147617_i - 1LL)];
	return _146817_t;;
}



inline jule::Ptr<_1b04d393e_FnDecl> _1b11de11b_buildBindFn(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _149335_tokens) {
	_149335_tokens=_149335_tokens.slice(1LL);
	jule::Ptr<_1b04d393e_FnDecl> _149517_f = _1b11d9864_buildFn(_self_, &(_149335_tokens), false, true);;
	if ((_149517_f != nullptr)) {
		_149517_f.get()._field_Public=false;
		_149517_f.get()._field_Binded=true;
	};
	return _149517_f;;
}



inline jule::Ptr<_1b04d4a1c_VarDecl> _1b11de45c_buildBindVar(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _150336_tokens) {
	_150336_tokens=_150336_tokens.slice(1LL);
	jule::Ptr<_1b04d4a1c_VarDecl> _150517_v = _1b11d6498_buildVar(_self_, _150336_tokens);;
	if ((_150517_v != nullptr)) {
		_150517_v.get()._field_Public=false;
		_150517_v.get()._field_Binded=true;
		if ((_150517_v.get()._field_Expr != nullptr)) {
			_1b11d361b_pushErr(_self_.ptr(), _150517_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _150517_v;;
}



inline jule::Ptr<_1b04dc7b1_StructDecl> _1b11de79d_buildBindStruct(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _151639_tokens) {
	_151639_tokens=_151639_tokens.slice(1LL);
	jule::Ptr<_1b04dc7b1_StructDecl> _151817_s = _1b11dd36d_buildStructDecl(_self_, &(_151639_tokens));;
	if ((_151817_s != nullptr)) {
		_151817_s.get()._field_Public=false;
		{
			auto expr = &(_151817_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b43e67a4:;
			if (it != expr_end) {
				jule::Ptr<_1b04dbdba_FieldDecl> _152125_f = *it;
				{
					_152125_f.get()._field_Public=true;
				}
				_iter_next_1b43e67a4:;
				++it;
				goto _iter_begin_1b43e67a4;
			}
			_iter_end_1b43e67a4:;
		};
		_151817_s.get()._field_Binded=true;
	};
	return _151817_s;;
}



inline jule::Ptr<_1b04d85e2_TypeAliasDecl> _1b11deade_buildBindTypeAlias(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _153042_tokens) {
	_153042_tokens=_153042_tokens.slice(1LL);
	jule::Ptr<_1b04d85e2_TypeAliasDecl> _153217_t = _1b11d5563_buildTypeAliasDecl(_self_, &(_153042_tokens));;
	if ((_153217_t != nullptr)) {
		_153217_t.get()._field_Public=false;
		_153217_t.get()._field_Binded=true;
	};
	return _153217_t;;
}



inline jule::Ptr<_1b04d9aee_UseDecl> _1b11dee30_buildBindUse(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _154036_tokens) {
	if ((_154036_tokens.len() == 1LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _154036_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_154036_tokens=_154036_tokens.slice(1LL);
	;
	return _1b11dae4d_buildUseDecl(_self_.ptr(), _154036_tokens, true);;
}



inline jule::Any _1b11e0271_buildBind(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _155134_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _155217_token = (*(_155134_tokens))[0LL];;
	if (((*(_155134_tokens)).len() == 1LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_155217_token=(*(_155134_tokens))[1LL];
	{
		auto &_match_expr{ _155217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b43ebb94:;
			{
				return jule::Any(_1b11de11b_buildBindFn(_self_, (*(_155134_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b43eb897:;
			{
				return jule::Any(_1b11de45c_buildBindVar(_self_, (*(_155134_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b43eb90d:;
			{
				return jule::Any(_1b11de79d_buildBindStruct(_self_, (*(_155134_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b43eb974:;
			{
				return jule::Any(_1b11deade_buildBindTypeAlias(_self_, (*(_155134_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b43eb831:;
			{
				_1b11d361b_pushErr(_self_.ptr(), _155217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b43eb7cb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b04d393e_FnDecl> _1b11e05b2_getMethod(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _157534_tokens) {
	jule::I64 _157617_i = 0LL;;
	jule::Ptr<_1aa49b1d1_Token> _157717_token = (*(_157534_tokens))[_157617_i];;
	if ((_157717_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if ((_157717_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		if (((_157617_i + 1LL) >= (*(_157534_tokens)).len())) {
			_1b11d361b_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_157617_i)++;
		_157717_token=(*(_157534_tokens))[_157617_i];
	};
	if ((_157717_token.get()._field_Id != static_cast<jule::U64>(29LLU))) {
		_1b11d361b_pushErr(_self_.ptr(), _157717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1b11d9864_buildFn(_self_, _157534_tokens, true, false);;
}



inline void _1b11e0925_parseImplBody(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04dd65d_Impl>* _160438_ipl, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _160455_tokens) {
	jule::Slice<jule::Ptr<_1b11b4102_stmt>> _160517_stmts = _1b11b44a9_splitStmts(_160455_tokens);;
	{
		auto expr = &(_160517_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44032d8:;
		if (it != expr_end) {
			jule::Ptr<_1b11b4102_stmt> _160621_stmt = *it;
			{
				(*(_160455_tokens))=_160621_stmt.get()._field_tokens;
				jule::Ptr<_1aa49b1d1_Token> _160821_token = (*(_160455_tokens))[0LL];;
				{
					auto &_match_expr{ _160821_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(35LLU)) {
						_case_begin_1b4404152:;
						{
							_1b11d43b9_pushDirective(_self_.ptr(), _1b11d4111_buildDirective(_self_.ptr(), (*(_160455_tokens))));
							goto _iter_next_1b44032d8;
						}
					}
					_match_end_1b440432d:;
				};
				{
					auto &_match_expr{ _160821_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(6LLU)) {
						_case_begin_1b4405340:;
						{
							jule::Ptr<_1b04d4a1c_VarDecl> _161725_v = _1b11d6498_buildVar(_self_, (*(_160455_tokens)));;
							if ((_161725_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> &__jule_push_dest = (*(_160438_ipl)).get()._field_Statics; __jule_push_dest.push(_161725_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b440498d:;
						{
							jule::Ptr<_1b04d393e_FnDecl> _162425_f = _1b11e05b2_getMethod(_self_, _160455_tokens);;
							if ((_162425_f != nullptr)) {
								_1b11dd626_checkMethodReceiver(_self_.ptr(), &(_162425_f));
								_1b11e1360_applyFnMeta(_self_.ptr(), &(_162425_f));
								{ jule::Slice<jule::Ptr<_1b04d393e_FnDecl>> &__jule_push_dest = (*(_160438_ipl)).get()._field_Methods; __jule_push_dest.push(_162425_f); };
							};
						}
					}
					else {
						_case_begin_1b4404927:;
						{
							_1b11d361b_pushErr(_self_.ptr(), _160821_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1b44032d8;
						}
					}
					_match_end_1b44048c2:;
				};
			}
			_iter_next_1b44032d8:;
			++it;
			goto _iter_begin_1b44032d8;
		}
		_iter_end_1b44032d8:;
	};
}



inline jule::Ptr<_1b04dd65d_Impl> _1b11e0c66_buildImpl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _163733_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _163817_token = _163733_tokens[0LL];;
	if ((_163733_tokens.len() < 2LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _164417_i = 1LL;;
	jule::Ptr<_1b04c1ba2_TypeDecl> _164618_base;;
	jule::Bool _164628_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		_164618_base = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_1b11d361b_pushErr(_self_.ptr(), _163817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b04dd65d_Impl> _165517_ipl = jule::new_ptr<_1b04dd65d_Impl>(_1b04dd65d_Impl{._field_Base=_164618_base, });;
	_163817_token=_163733_tokens[_164417_i];
	if ((_163817_token.get()._field_Id != static_cast<jule::U64>(9LLU))) {
		if ((_163817_token.get()._field_Id == static_cast<jule::U64>(72LLU))) {
			({
				jule::Ptr<_1b04c1ba2_TypeDecl> ___jule_assign_arg = _165517_ipl.get()._field_Dest;
				jule::Ptr<_1b04c1ba2_TypeDecl> _1___jule_assign_arg = _165517_ipl.get()._field_Base;
				_165517_ipl.get()._field_Base = ___jule_assign_arg;
				_165517_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_1b4410537;
		};
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_164417_i)++;
	if ((_164417_i >= _163733_tokens.len())) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType(_self_, &(_163733_tokens), (&(_164417_i)), true);
		_165517_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_164628_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_164628_ok))) {
		return nullptr;;
	};
	if ((_164417_i >= _163733_tokens.len())) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1b4410537:;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _169317_bodyTokens = _1b11d1053_range(&(_164417_i), static_cast<jule::U64>(72LLU), static_cast<jule::U64>(73LLU), &(_163733_tokens));;
	if ((_169317_bodyTokens == nullptr)) {
		_1b11d2e67_stop(_self_.ptr());
		_1b11d361b_pushErr(_self_.ptr(), _163817_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_164417_i < _163733_tokens.len())) {
		_1b11d361b_pushErr(_self_.ptr(), _163733_tokens[_164417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_165517_ipl.get()._field_End=_163733_tokens[(_164417_i - 1LL)];
	_1b11e0925_parseImplBody(_self_, &(_165517_ipl), &(_169317_bodyTokens));
	return _165517_ipl;;
}



inline jule::Any _1b11e10a7_buildNodeData(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _170838_tokens) {
	jule::Ptr<_1aa49b1d1_Token> _170917_token = (*(_170838_tokens))[0LL];;
	{
		auto &_match_expr{ _170917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(29LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b44140b8:;
			{
				jule::Ptr<_1b04d393e_FnDecl> _171321_f = _1b11d9864_buildFn(_self_, _170838_tokens, false, false);;
				if ((_171321_f != nullptr)) {
					_171321_f.get()._field_Global=true;
				};
				return jule::Any(_171321_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU) || _match_expr == static_cast<jule::U64>(6LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b44139d0:;
			{
				return jule::Any(_1b11d6498_buildVar(_self_, (*(_170838_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(7LLU)) {
			_case_begin_1b44145e6:;
			{
				return jule::Any(_1b11d5563_buildTypeAliasDecl(_self_, _170838_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1b4413c88:;
			{
				return _1b11dc89a_buildNodeEnumDecl(_self_, _170838_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b4413cee:;
			{
				return jule::Any(_1b11dd36d_buildStructDecl(_self_, _170838_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b4413d65:;
			{
				return jule::Any(_1b11ddcca_buildTraitDecl(_self_, _170838_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(26LLU)) {
			_case_begin_1b4413dcb:;
			{
				return jule::Any(_1b11e0c66_buildImpl(_self_, (*(_170838_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b44146e5:;
			{
				return _1b11e0271_buildBind(_self_, _170838_tokens);;
			}
		}
		else {
			_case_begin_1b4413c22:;
			{
				_1b11d361b_pushErr(_self_.ptr(), _170917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b4413bbc:;
	};
}



inline void _1b11e1360_applyFnMeta(_1b11d2b6a_parser* _self_, jule::Ptr<_1b04d393e_FnDecl>* _174135_f) {
	(*(_174135_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1b11e1618_applyMeta(_1b11d2b6a_parser* _self_, _1b0488163_Node* _174633_node) {
	{
		auto &_match_expr{ (*(_174633_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b44193ed:;
			{
				jule::Ptr<_1b04d4a1c_VarDecl> _174921_v = (*(_174633_node))._field_Data.cast_ptr<_1b04d4a1c_VarDecl>(&__jule_any_type16);;
				if ((_174921_v == nullptr)) {
					return;;
				};
				_174921_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b4419464:;
			{
				jule::Ptr<_1b04d393e_FnDecl> _175621_f = (*(_174633_node))._field_Data.cast_ptr<_1b04d393e_FnDecl>(&__jule_any_type14);;
				if ((_175621_f == nullptr)) {
					return;;
				};
				_1b11e1360_applyFnMeta(_self_, &(_175621_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b44194db:;
			{
				jule::Ptr<_1b04dc7b1_StructDecl> _176221_sd = (*(_174633_node))._field_Data.cast_ptr<_1b04dc7b1_StructDecl>(&__jule_any_type13);;
				if ((_176221_sd == nullptr)) {
					return;;
				};
				_176221_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b4419398:;
	};
}



inline void _1b11e18c1_pushUseDecl(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1b04d9aee_UseDecl>* _177136_decl) {
	{ jule::Slice<jule::Ptr<_1b04d9aee_UseDecl>> &__jule_push_dest = _self_.get()._field_ast.get()._field_UseDecls; __jule_push_dest.push((*(_177136_decl))); };
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1b11d361b_pushErr(_self_.ptr(), (*(_177136_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1b11d397e_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1b11e1c12_pushMetaNodes(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _177938_tokens) {
	{
		auto &_match_expr{ (*(_177938_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(16LLU)) {
			_case_begin_1b441e90e:;
			{
				;
				jule::Ptr<_1b04d9aee_UseDecl> _178321_decl = _1b11dae4d_buildUseDecl(_self_.ptr(), (*(_177938_tokens)), false);;
				_1b11e18c1_pushUseDecl(_self_, &(_178321_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b441e986:;
			{
				if ((((*(_177938_tokens)).len() > 1LL) && ((*(_177938_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(16LLU)))) {
					jule::Ptr<_1b04d9aee_UseDecl> _178825_decl = _1b11dee30_buildBindUse(_self_, (*(_177938_tokens)));;
					_1b11e18c1_pushUseDecl(_self_, &(_178825_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b441ea0d:;
			{
				_1b11d43b9_pushDirective(_self_.ptr(), _1b11d4111_buildDirective(_self_.ptr(), (*(_177938_tokens))));
				return true;;
			}
		}
		_match_end_1b441e7dd:;
	};
	return false;;
}



inline _1b0488163_Node _1b11e2053_parseNode(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _179934_st) {
	_1b0488163_Node _180017_node = _1b0488163_Node{._field_Token=(*(_179934_st))[0LL], };;
	if (_1b11e1c12_pushMetaNodes(_self_, _179934_st)) {
		return _180017_node;;
	};
	jule::Any _180817_data = _1b11e10a7_buildNodeData(_self_, _179934_st);;
	if ((_180817_data == nullptr)) {
		return _180017_node;;
	};
	_180017_node._field_Data=_180817_data;
	_1b11e1618_applyMeta(_self_.ptr(), &(_180017_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _180017_node;;
}



inline void _1b11e230b_appendNode(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _182335_st) {
	if (((*(_182335_st)).len() == 0LL)) {
		return;;
	};
	_1b0488163_Node _182717_node = _1b11e2053_parseNode(_self_, _182335_st);;
	if (((_182717_node._field_Data == nullptr) || _1b11d31ed_stopped(_self_.ptr()))) {
		return;;
	};
	{ jule::Slice<_1b0488163_Node> &__jule_push_dest = _self_.get()._field_ast.get()._field_Nodes; __jule_push_dest.push(_182717_node); };
}



inline void _1b11e27d4_removeRange(_1b11d2b6a_parser* _self_, jule::I64 _183430_i, jule::U64 _183438_id, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _183452_tokens, jule::Slice<jule::I64>* _183475_ranges) {
	jule::U64 _183513_close = _1b11d1a8c_getCloseOfBrace(_183438_id);;
	for (; (_183430_i >= 0LL); (_183430_i)--) {
		{
			jule::Ptr<_1aa49b1d1_Token> _183717_tok = (*(_183452_tokens))[(*(_183475_ranges))[_183430_i]];;
			if ((_183717_tok.get()._field_Id != _183513_close)) {
				goto _iter_next_1b4588c43;
			};
			(*(_183475_ranges))=jule::append((*(_183475_ranges)).slice(0LL, _183430_i),(*(_183475_ranges)).slice((_183430_i + 1LL)));
			goto _iter_end_1b4588c43;
		}
	_iter_next_1b4588c43:;
	}
	_iter_end_1b4588c43:;;
}



inline void _1b11e2c02_pushWrongOrderCloseErr(_1b11d2b6a_parser* _self_, jule::Ptr<_1aa49b1d1_Token>* _184642_t, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _184654_tokens, jule::Slice<jule::I64>* _184673_ranges) {
	{
		auto &_match_expr{ (*(_184654_tokens))[(*(_184673_ranges))[((*(_184673_ranges)).len() - 1LL)]].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(74LLU)) {
			_case_begin_1b458ad55:;
			{
				_1b11d361b_pushErr(_self_, (*(_184642_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(72LLU)) {
			_case_begin_1b458adcc:;
			{
				_1b11d361b_pushErr(_self_, (*(_184642_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1b458ae54:;
			{
				_1b11d361b_pushErr(_self_, (*(_184642_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b458ac34:;
	};
}



inline void _1b11e31ca_pushRangeClose(_1b11d2b6a_parser* _self_, jule::Ptr<_1aa49b1d1_Token> _185733_t, jule::U64 _185744_left, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _185760_tokens, jule::Slice<jule::I64>* _185783_ranges) {
	jule::I64 _185813_n = (*(_185783_ranges)).len();;
	if ((_185813_n == 0LL)) {
		{
			auto &_match_expr{ _185733_t.get()._field_Id };
			
			if (_match_expr == static_cast<jule::U64>(77LLU)) {
				_case_begin_1b458d85d:;
				{
					_1b11d361b_pushErr(_self_, _185733_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(73LLU)) {
				_case_begin_1b458d8d5:;
				{
					_1b11d361b_pushErr(_self_, _185733_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U64>(75LLU)) {
				_case_begin_1b458d95c:;
				{
					_1b11d361b_pushErr(_self_, _185733_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b458d7b4:;
		};
		return;;
	} else if (((*(_185760_tokens))[(*(_185783_ranges))[(_185813_n - 1LL)]].get()._field_Id != _185744_left)) {
		_1b11e2c02_pushWrongOrderCloseErr(_self_, &(_185733_t), _185760_tokens, _185783_ranges);
	};
	_1b11e27d4_removeRange(_self_, static_cast<jule::I64>((_185813_n - 1LL)), _185733_t.get()._field_Id, _185760_tokens, _185783_ranges);
}



inline void _1b11e3483_checkRanges(_1b11d2b6a_parser* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _187531_tokens) {
	jule::Slice<jule::I64> _187617_ranges = nullptr;;
	{
		auto expr = _187531_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4591784:;
		if (it != expr_end) {
			jule::I64 _187813_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> *_187816_token = it;
			{
				{
					auto &_match_expr{ (*(_187816_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b4592488:;
						{
							{ jule::Slice<jule::I64> &__jule_push_dest = _187617_ranges; __jule_push_dest.push(_187813_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b4592510:;
						{
							_1b11e31ca_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(74LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU)) {
						_case_begin_1b4592587:;
						{
							_1b11e31ca_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(72LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b459260e:;
						{
							_1b11e31ca_pushRangeClose(_self_, (*(_187816_token)), static_cast<jule::U64>(76LLU), _187531_tokens, &(_187617_ranges));
						}
					}
					_match_end_1b45923cd:;
				};
			}
			_iter_next_1b4591784:;
			++it;
			_187813_i++;
			goto _iter_begin_1b4591784;
		}
		_iter_end_1b4591784:;
	};
	{
		auto expr = &(_187617_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b459171d:;
		if (it != expr_end) {
			jule::I64 _189316_i = *it;
			{
				jule::Ptr<_1aa49b1d1_Token> _189417_token = (*(_187531_tokens))[_189316_i];;
				{
					auto &_match_expr{ _189417_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4595029:;
						{
							_1b11d361b_pushErr(_self_, _189417_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b4595090:;
						{
							_1b11d361b_pushErr(_self_, _189417_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b4595117:;
						{
							_1b11d361b_pushErr(_self_, _189417_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b4594ec4:;
				};
			}
			_iter_next_1b459171d:;
			++it;
			goto _iter_begin_1b459171d;
		}
		_iter_end_1b459171d:;
	};
}



inline void _1b11e373b_parse(jule::Ptr<_1b11d2b6a_parser> _self_, jule::Ptr<_1aa4a199a_File>* _190630_f) {
	_self_.get()._field_ast=jule::new_ptr<_1b0487184_Ast>(_1b0487184_Ast{._field_File=(*(_190630_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1b11c2066_exprBuilder>(_1b11c2066_exprBuilder{._field_p=_self_});
	_1b11e3483_checkRanges(_self_.ptr(), &((*(_190630_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b11b4102_stmt>> _191917_stmts = _1b11b44a9_splitStmts(&((*(_190630_f)).get()._field_Tokens));;
	jule::I64 _192217_i = 0LL;;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_1b11b4102_stmt> _192421_stmt = _191917_stmts[_192217_i];;
			if ((_192421_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_192421_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(35LLU))) {
				goto _iter_end_1b45982b3;
			};
			if ((!(_1aa53637b_IsTopDirective(_192421_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1b45982b3;
			};
			{ jule::Slice<jule::Ptr<_1b04884b5_Directive>> &__jule_push_dest = _self_.get()._field_ast.get()._field_TopDirectives; __jule_push_dest.push(_1b11d4111_buildDirective(_self_.ptr(), _192421_stmt.get()._field_tokens)); };
		}
	_iter_next_1b45982b3:;
	}
	_iter_end_1b45982b3:;;
	_self_.get()._field_errors=nullptr;
	for (; (_192217_i < _191917_stmts.len()); (_192217_i)++) {
		{
			jule::Ptr<_1b11b4102_stmt> _194121_stmt = _191917_stmts[_192217_i];;
			_1b11e230b_appendNode(_self_, &(_194121_stmt.get()._field_tokens));
			if (_1b11d31ed_stopped(_self_.ptr())) {
				goto _iter_end_1b4598637;
			};
		}
	_iter_next_1b4598637:;
	}
	_iter_end_1b4598637:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1b11d361b_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b11d2b6a_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1b11e5078_pushErr(_1b11e49d4_typeBuilder* _self_, jule::Ptr<_1aa49b1d1_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1b11d361b_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1b11e53db_pushSuggestion(_1b11e49d4_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1b11d397e_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e5672_buildNamespace(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1b04c1ba2_TypeDecl> _5517_t = jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1b04c2950_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1b04c2950_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
					_1b11e5078_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1b11e53db_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1aa49b1d1_Token>> &__jule_push_dest = _5917_nst.get()._field_Idents; __jule_push_dest.push(_6221_token); };
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U64>(19LLU))) {
				goto _iter_end_1b45a07c6;
			};
			(_6017_n)++;
		}
	_iter_next_1b45a07c6:;
	}
	_iter_end_1b45a07c6:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1b11e5e25_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type97);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _1b11e5908_buildGenerics(_1b11e49d4_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa49b1d1_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((_8813_token.get()._field_Id != static_cast<jule::U64>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _9317_parts = _1b11e5b8e_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1b11e5078_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b45a67bb:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_1b04c1ba2_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1b11e5078_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				{ jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>> &__jule_push_dest = _9917_types; __jule_push_dest.push(_10222_t); };
			}
			_iter_next_1b45a67bb:;
			++it;
			goto _iter_begin_1b45a67bb;
		}
		_iter_end_1b45a67bb:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b11e5b8e_identGenerics(_1b11e49d4_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ _11517_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(76LLU)) {
					_case_begin_1b45aab00:;
					{
						(_11317_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(77LLU)) {
					_case_begin_1b45aab77:;
					{
						(_11317_rangeN)--;
					}
				}
				_match_end_1b45aa3d5:;
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b45a9c20;
			};
		}
	_iter_next_1b45a9c20:;
	}
	_iter_end_1b45a9c20:;;
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _12717_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _12818_parts;;
	jule::Slice<_1aa3c3a21_Log> _12825_errors;;
	({
		__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11d17c3_parts(&(_12717_tokens), static_cast<jule::U64>(5LLU), true);
		_12818_parts = __jule_assign_result.__jule_result_arg0;
		_12825_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		((*(_self_))._field_p.get()._field_errors).append(_12825_errors);;
	};
	return _12818_parts;;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e5e25_buildIdent(_1b11e49d4_typeBuilder* _self_) {
	jule::Bool _13617_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13617_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
		return _1b11e5672_buildNamespace(_self_);;
	};
	jule::Ptr<_1aa49b1d1_Token> _14017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b04c22ac_IdentTypeDecl> _14117_it = jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_14017_token, ._field_Ident=_14017_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b04c1ba2_TypeDecl> _14717_itd = jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_14117_it, &__jule_any_type20)});;
	if (((!(_13617_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(17LLU)))) {
		_14117_it.get()._field_Generics=_1b11e5908_buildGenerics(_self_);
		return _14717_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1b11e5078_pushErr(_self_, _14017_token, jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1b11e5078_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14717_itd;;
	};
	jule::Ptr<_1b04c25a9_SubIdentTypeDecl> _16417_sit = jule::new_ptr<_1b04c25a9_SubIdentTypeDecl>();;
	{ jule::Slice<jule::Ptr<_1b04c22ac_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_14117_it); };
	jule::Ptr<_1b04c1ba2_TypeDecl> _16617_ident = _1b11e5e25_buildIdent(_self_);;
	{
		auto &_match_expr{ _16617_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b45b57ca:;
			{
				{ jule::Slice<jule::Ptr<_1b04c22ac_IdentTypeDecl>> &__jule_push_dest = _16417_sit.get()._field_Idents; __jule_push_dest.push(_16617_ident.get()._field_Kind.cast_ptr<_1b04c22ac_IdentTypeDecl>(&__jule_any_type20)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b45b5841:;
			{
				(_16417_sit.get()._field_Idents).append(_16617_ident.get()._field_Kind.cast_ptr<_1b04c25a9_SubIdentTypeDecl>(&__jule_any_type93).get()._field_Idents);;
			}
		}
		_match_end_1b45b5775:;
	};
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_14017_token, ._field_Kind=jule::Any(_16417_sit, &__jule_any_type93)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e61ab_buildCppLink(_1b11e49d4_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(17LLU)))) {
		_1b11e5078_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1b04c1ba2_TypeDecl> _18517_t = _1b11e5e25_buildIdent(_self_);;
	_18517_t.get()._field_Kind.cast_ptr<_1b04c22ac_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18517_t;;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e6442_buildFn(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _19117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1b04d393e_FnDecl> _19217_f = _1b11d93ad_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19217_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b04d3ca2_IsAnon(_19217_f.ptr())))) {
		_1b11e5078_pushErr(_self_, _19217_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_19117_token, ._field_Kind=jule::Any(_19217_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e66c8_buildPtr(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _20617_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b11e5078_pushErr(_self_, _20617_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1b04c36cb_PtrTypeDecl>(_1b04c36cb_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1b04c1ba2_TypeDecl> _22317_elem = _1b11e772e_step(_self_);;
	if ((_22317_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_20617_token, ._field_Kind=jule::Any(jule::new_ptr<_1b04c36cb_PtrTypeDecl>(_1b04c36cb_PtrTypeDecl{._field_Elem=_22317_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e695e_buildSptr(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _23717_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1b11e5078_pushErr(_self_, _23717_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b04c1ba2_TypeDecl> _24417_elem = _1b11e772e_step(_self_);;
	if ((_24417_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_23717_token, ._field_Kind=jule::Any(jule::new_ptr<_1b04c2c4c_SptrTypeDecl>(_1b04c2c4c_SptrTypeDecl{._field_Elem=_24417_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e6be5_buildSlc(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _25817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1b04c1ba2_TypeDecl> _26017_elem = _1b11e772e_step(_self_);;
	if ((_26017_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_25817_token, ._field_Kind=jule::Any(jule::new_ptr<_1b04c30d2_SlcTypeDecl>(_1b04c30d2_SlcTypeDecl{._field_Elem=_26017_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e6e7b_buildArr(_1b11e49d4_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _27317_exprTokens = _1b11d1053_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b11e5078_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b04c1ba2_TypeDecl> _27917_elem = _1b11e772e_step(_self_);;
	if ((_27917_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b04c3e6d_ArrTypeDecl> _28417_arrt = jule::new_ptr<_1b04c3e6d_ArrTypeDecl>(_1b04c3e6d_ArrTypeDecl{._field_Elem=_27917_elem, });;
	jule::Ptr<_1aa49b1d1_Token> _28817_token = _27317_exprTokens[0LL];;
	if (((_27317_exprTokens.len() == 1LL) && (_28817_token.get()._field_Id == static_cast<jule::U64>(39LLU)))) {
	} else {
		_28417_arrt.get()._field_Size=_1b11d3cc0_buildExpr((*(_self_))._field_p, &(_27317_exprTokens));
	};
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_28817_token, ._field_Kind=jule::Any(_28417_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e7212_buildMap(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _30217_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b11e5078_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _31017_keyTokens = _1b11d1053_range(&((*((*(_self_))._field_i))), static_cast<jule::U64>(76LLU), static_cast<jule::U64>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1b11e5078_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_31017_keyTokens.len() == 0LL)) {
		_1b11e5078_pushErr(_self_, _30217_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1b04c46bb_MapTypeDecl> _31917_mapt = jule::new_ptr<_1b04c46bb_MapTypeDecl>();;
	jule::I64 _32017_j = 0LL;;
	jule::Ptr<_1b04c1ba2_TypeDecl> _32118_keyt;;
	jule::Bool _32128_ok = false;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, &(_31017_keyTokens), (&(_32017_j)), (*(_self_))._field_err);
		_32118_keyt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	} else if ((_32017_j < _31017_keyTokens.len())) {
		_1b11e5078_pushErr(_self_, _31017_keyTokens[_32017_j], jule::Str("invalid syntax", 14));
	};
	_31917_mapt.get()._field_Key=_32118_keyt;
	jule::Ptr<_1b04c1ba2_TypeDecl> _32918_valt;;
	({
		__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_assign_result = _1b11d5222_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_32918_valt = __jule_assign_result.__jule_result_arg0;
		_32128_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_32128_ok))) {
		return nullptr;;
	};
	_31917_mapt.get()._field_Val=_32918_valt;
	return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Token=_30217_mapToken, ._field_Kind=jule::Any(_31917_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e7498_buildEnumerable(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _34117_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1b11e5078_pushErr(_self_, _34117_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_34117_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((_34117_token.get()._field_Id == static_cast<jule::U64>(77LLU))) {
		return _1b11e6be5_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1b11e6e7b_buildArr(_self_);;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e772e_step(_1b11e49d4_typeBuilder* _self_) {
	jule::Ptr<_1aa49b1d1_Token> _35613_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _35613_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b45d3e7a:;
			{
				return _1b11e5e25_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b45d3ee1:;
			{
				return _1b11e61ab_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b45d34a7:;
			{
				return _1b11e6442_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b45d351d:;
			{
				return _1b11e66c8_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(65LLU)) {
			_case_begin_1b45d3584:;
			{
				return _1b11e695e_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(54LLU)) {
			_case_begin_1b45d35ea:;
			{
				return jule::new_ptr<_1b04c1ba2_TypeDecl>(_1b04c1ba2_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1b04c2c4c_SptrTypeDecl>(_1b04c2c4c_SptrTypeDecl{._field_Elem=_1b11e695e_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(76LLU)) {
			_case_begin_1b45d4079:;
			{
				return _1b11e7498_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b45d40e0:;
			{
				return _1b11e7212_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1b45d3441:;
			{
				((*((*(_self_))._field_i)))++;
				_1b11e5078_pushErr(_self_, _35613_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b45d33db:;
	};
}



inline __jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool _1b11e79b5_build(_1b11e49d4_typeBuilder* _self_) {
	__jule_tuple_x_1b04c1ba2_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1b04c1ba2_TypeDecl> _38817_root = _1b11e772e_step(_self_);;
	if ((_38817_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1b11e4231_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _38817_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11e49d4_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0849722_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1b084b229_pushErr(_1b084abc9_directiveEval* _self_, jule::Ptr<_1aa49b1d1_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	{ jule::Slice<_1aa3c3a21_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_1aa3c3e83_Logf(_2137_fmt, _2150_args), }); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _1b084b625_splitOperans(_1b084abc9_directiveEval* _self_, jule::U64 _3331_op, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _3349_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3517_i = 0LL;;
	jule::I64 _3617_rangeN = 0LL;;
	jule::I64 _3717_last = 0LL;;
	for (; (_3517_i < ((*(_3349_tokens)).len() - 1LL)); (_3517_i)++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _3917_b = (*(_3349_tokens))[_3517_i];;
			{
				auto &_match_expr{ _3917_b.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b460829b:;
					{
						(_3617_rangeN)++;
						goto _iter_next_1b4607652;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b4608323:;
					{
						(_3617_rangeN)--;
					}
				}
				_match_end_1b4607d5b:;
			};
			if (((_3617_rangeN > 0LL) || (_3917_b.get()._field_Id != _3331_op))) {
				goto _iter_next_1b4607652;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last, _3517_i)); };
			_3717_last=static_cast<jule::I64>((_3517_i + 1LL));
		}
	_iter_next_1b4607652:;
	}
	_iter_end_1b4607652:;;
	if ((_3717_last < (*(_3349_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> &__jule_push_dest = _3417_parts; __jule_push_dest.push((*(_3349_tokens)).slice(_3717_last)); };
	} else {
		_1b084b229_pushErr(_self_, (*(_3349_tokens))[(_3717_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1b084b966_evalDirectiveIdent(_1b084abc9_directiveEval* _self_, jule::Str _6433_ident) {
	if (_6433_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b460aab7:;
		if (it != expr_end) {
			jule::Str *_6816_var = it;
			{
				if (((*(_6816_var)) == _6433_ident)) {
					return true;;
				};
			}
			_iter_next_1b460aab7:;
			++it;
			goto _iter_begin_1b460aab7;
		}
		_iter_end_1b460aab7:;
	};
	return false;;
}



inline jule::Bool _1b084bca7_evalDirectivePart(_1b084abc9_directiveEval* _self_, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _7840_part) {
	jule::Bool _7913_logicalNot = (_7840_part[0LL].get()._field_Id == static_cast<jule::U64>(68LLU));;
	if (_7913_logicalNot) {
		_7840_part=_7840_part.slice(1LL);
	};
	if ((_7840_part.len() > 1LL)) {
		_1b084b229_pushErr(_self_, _7840_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _8917_result = _1b084b966_evalDirectiveIdent(_self_, _7840_part[0LL].get()._field_Kind);;
	if (_7913_logicalNot) {
		_8917_result=(!(_8917_result));
	};
	return _8917_result;;
}



inline jule::Bool _1b084c03d_eval(_1b084abc9_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1b084b229_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _10217_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _10417_logicalOrParts = _1b084b625_splitOperans(_self_, static_cast<jule::U64>(55LLU), &((*(_self_))._field_d.get()._field_Args));;
	if ((_10417_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_10417_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4610db9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _10921_part = *it;
			{
				jule::Bool _11021_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _11121_logicalAndParts = _1b084b625_splitOperans(_self_, static_cast<jule::U64>(54LLU), &(_10921_part));;
				if ((_11121_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_11121_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b46125d5:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _11625_andPart = *it;
						{
							jule::Ptr<_1aa49b1d1_Token> _11721_first = _11625_andPart[0LL];;
							if ((_11721_first.get()._field_Id == static_cast<jule::U64>(74LLU))) {
								jule::Ptr<_1aa49b1d1_Token> _11925_end = _11625_andPart[(_11625_andPart.len() - 1LL)];;
								if ((_11925_end.get()._field_Id != static_cast<jule::U64>(75LLU))) {
									_1b084b229_pushErr(_self_, _11721_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_11625_andPart=_11625_andPart.slice(1LL, (_11625_andPart.len() - 1LL));
							};
							_11021_and=(_11021_and && _1b084bca7_evalDirectivePart(_self_, _11625_andPart));
						}
						_iter_next_1b46125d5:;
						++it;
						goto _iter_begin_1b46125d5;
					}
					_iter_end_1b46125d5:;
				};
				_10217_result=(_10217_result || _11021_and);
			}
			_iter_next_1b4610db9:;
			++it;
			goto _iter_begin_1b4610db9;
		}
		_iter_end_1b4610db9:;
	};
	return _10217_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b084abc9_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b11e8b1a_JuleImporter> static__1b11e9016_New(_1b0849722_CompileInfo _5819_info) {
	jule::Ptr<_1b11e8b1a_JuleImporter> _5917_imp = jule::new_ptr<_1b11e8b1a_JuleImporter>(_1b11e8b1a_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_1aa6405ea_PathStdlib}), });;
	_1b084a0a2_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> _1b11e929c_AllPackages(_1b11e8b1a_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1b11e96dc_SetModPath(_1b11e8b1a_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1b11e9973_GetModPath(_1b11e8b1a_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1b11e9cb4_ModById(_1b11e8b1a_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b11ea105_GetImport(_1b11e8b1a_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b461894e:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1b461894e:;
			++it;
			goto _iter_begin_1b461894e;
		}
		_iter_end_1b461894e:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log _1b11ea501_ImportPackage(_1b11e8b1a_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1ba100e58_DirEntry>> _9717_dirents = ({
		auto except = static__1aa3746c5_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_1aa3c3a21_Log>::make({_1b11e8631_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1b05877d4_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_1aa3c3a21_Log> _10525_errs = _1b0587a9d_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1b0487184_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1b0487184_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4619ee4:;
		if (it != expr_end) {
			jule::Ptr<_1ba100e58_DirEntry> _11316_dirent = *it;
			{
				if ((_1ba10ea5a_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_1aa34ec22_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1b4619ee4;
				};
				jule::Str _11917__path = _1aa37168e_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_1aa4a199a_File> _12021_file = _1aa4a2d42_NewFileSet(_11917__path);;
				_1aa4a1d85_Fill(_12021_file.ptr(), _1b11e8356_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_1aa3c3a21_Log> _12221_errors = _1aa4ae458_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1b116c594_FileInfo> _12721_finfo = _1b11b1d36_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1b08488b9_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1b4619ee4;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_1aa3c3a21_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11eabd8_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1b4619ee4;
				};
				{ jule::Slice<jule::Ptr<_1b0487184_Ast>> &__jule_push_dest = _11217_asts; __jule_push_dest.push(_12721_finfo.get()._field_Ast); };
			}
			_iter_next_1b4619ee4:;
			++it;
			goto _iter_begin_1b4619ee4;
		}
		_iter_end_1b4619ee4:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b11ea7a9_Imported(_1b11e8b1a_JuleImporter* _self_, jule::Ptr<_1b056a487_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4622084:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b4622084:;
			++it;
			goto _iter_begin_1b4622084;
		}
		_iter_end_1b4622084:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4623915:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_1b4625ad2;
					};
				}
				_iter_next_1b4623915:;
				++it;
				_16217_i++;
				goto _iter_begin_1b4623915;
			}
			_iter_end_1b4623915:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1b4625ad2:;
	};
	{ jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_15331_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1aa3c3a21_Log _1b11eabd8_isPassBuildDirectives(_1b11e8b1a_JuleImporter* _self_, jule::Ptr<_1b0487184_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46270de:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1b46270de;
				};
				_1b084abc9_directiveEval _18421_de = _1b084abc9_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1b084c03d_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b46270de:;
			++it;
			goto _iter_begin_1b46270de;
		}
		_iter_end_1b46270de:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11e8b1a_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b11edd2e_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b448726d_isCommonOrdered(jule::Slice<jule::Ptr<_1b04e2871_Struct>> _1834_s, jule::Ptr<_1b04e2871_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44882b3:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4488aee:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b4488aee:;
						++it;
						goto _iter_begin_1b4488aee;
					}
					_iter_end_1b4488aee:;
				};
			}
			_iter_next_1b44882b3:;
			++it;
			goto _iter_begin_1b44882b3;
		}
		_iter_end_1b44882b3:;
	};
	return true;;
}

inline jule::Bool _1b448bbac_isCommonOrdered(jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _1834_s, jule::Ptr<_1b05ae1bd_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b448cbad:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b448d4e9:;
					if (it != expr_end) {
						jule::Ptr<_1b05ae1bd_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b448d4e9:;
						++it;
						goto _iter_begin_1b448d4e9;
					}
					_iter_end_1b448d4e9:;
				};
			}
			_iter_next_1b448cbad:;
			++it;
			goto _iter_begin_1b448cbad;
		}
		_iter_end_1b448cbad:;
	};
	return true;;
}



inline void _1b4483d4c_orderCommon(jule::Slice<jule::Ptr<_1b04e2871_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4485304:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b448726d_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b448602a:;
				}
				_iter_end_1b448602a:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b4485304;
				};
				(_3217_n)--;
			}
			_iter_next_1b4485304:;
			++it;
			goto _iter_begin_1b4485304;
		}
		_iter_end_1b4485304:;
	};
}

inline void _1b4487b0e_orderCommon(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4489c43:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b448bbac_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b448a969:;
				}
				_iter_end_1b448a969:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b4489c43;
				};
				(_3217_n)--;
			}
			_iter_next_1b4489c43:;
			++it;
			goto _iter_begin_1b4489c43;
		}
		_iter_end_1b4489c43:;
	};
}



inline void static__1b11ee989_orderStructures(jule::Slice<jule::Ptr<_1b04e2871_Struct>>* _5136_structs) {
	_1b4483d4c_orderCommon(_5136_structs);
}



inline void static__1b11eebba_orderVars(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _5730_vars) {
	_1b4487b0e_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1b11ee093_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0b26a65_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1b13912e0_optimizeChild(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b0549048_Scope>* _3938_s) {
	jule::Ptr<_1b1390d39_scopeDeadCode> _4017_sdc = jule::new_ptr<_1b1390d39_scopeDeadCode>(_1b1390d39_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1b1393c0a_optimizeStmts(_4017_sdc);
	};
}



inline void _1b1391598_optimizeBodyChildExceptional(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b0549048_Scope>* _5053_s) {
	jule::Ptr<_1b1390d39_scopeDeadCode> _5117_sdc = jule::new_ptr<_1b1390d39_scopeDeadCode>(_1b1390d39_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1b1393c0a_optimizeStmts(_5117_sdc);
	};
}



inline void _1b1391851_optimizeBodyChild(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b0549048_Scope>* _6142_s) {
	jule::Ptr<_1b1390d39_scopeDeadCode> _6217_sdc = jule::new_ptr<_1b1390d39_scopeDeadCode>(_1b1390d39_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1b1393c0a_optimizeStmts(_6217_sdc);
	};
}



inline void _1b1391b09_optimizeExprModel(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1b1395091_exprDeadCode _7213_edc = static__1b1395701_new(&(_self_));;
	_1b139bb8b_optimize(&_7213_edc, _7142_model);
}



inline void _1b1391d07_eliminateFollowed(_1b1390d39_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1b1390d39_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1b45073ed:;
	}
	_iter_end_1b45073ed:;;
}



inline void _1b13920b0_pushGoto(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054bcb5_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b450a401:;
	}
	_iter_end_1b450a401:;;
	{ jule::Slice<jule::Ptr<_1b054bcb5_GotoSt>> &__jule_push_dest = (*(_self_.get()._field_gotos)); __jule_push_dest.push(_9232_gt); };
}



inline void _1b1392368_pushLabel(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054b8db_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1b450beb3;
			};
			(_10317_i)++;
		}
	_iter_next_1b450beb3:;
	}
	_iter_end_1b450beb3:;;
	{ jule::Slice<jule::Ptr<_1b054b8db_Label>> &__jule_push_dest = (*(_self_.get()._field_labels)); __jule_push_dest.push(_10233_l); };
}



inline void _1b1392621_optimizeRangeIter(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054ad80_RangeIter> _11541_it) {
	_1b1391b09_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1b1391851_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1b13928c9_optimizeWhileIter(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054a434_WhileIter> _12041_it) {
	_1b1391b09_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1b1393a0c_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1b1391851_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1b1392b82_optimizeInfIter(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b0549e7d_InfIter> _12839_it) {
	_1b1391851_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1b1392e3a_optimizeConditional(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b0549b81_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b45121b6:;
		if (it != expr_end) {
			jule::Ptr<_1b0549466_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1b1391b09_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1b1391851_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1b45121b6:;
			++it;
			goto _iter_begin_1b45121b6;
		}
		_iter_end_1b45121b6:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1b13912e0_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1b1391851_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1b13931e3_optimizeMatch(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054d17e_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4514262:;
		if (it != expr_end) {
			jule::Ptr<_1b054dcb7_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4515186:;
					if (it != expr_end) {
						jule::Ptr<_1b0612672_Data> _15225_expr = *it;
						{
							_1b1391b09_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1b4515186:;
						++it;
						goto _iter_begin_1b4515186;
					}
					_iter_end_1b4515186:;
				};
				_1b1391851_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1b4514262:;
			++it;
			goto _iter_begin_1b4514262;
		}
		_iter_end_1b4514262:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1b13912e0_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1b1391851_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1b139349b_optimizeAssign(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054c645_Assign> _16838_assign) {
	_1b1391b09_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1b1391b09_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1b1393754_optimizeMultiAssign(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Ptr<_1b054ca1e_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4518057:;
		if (it != expr_end) {
			jule::Ptr<_1b0612672_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1b1391b09_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1b4518057:;
			++it;
			goto _iter_begin_1b4518057;
		}
		_iter_end_1b4518057:;
	};
	_1b1391b09_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1b1393a0c_optimizeStmt(jule::Ptr<_1b1390d39_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b45196a7:;
			{
				jule::Ptr<_1b0549048_Scope> _18521_scope = _18236_st.cast_ptr<_1b0549048_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1b139403a_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1b13912e0_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b451971d:;
			{
				_1b1392621_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1b054ad80_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b4519784:;
			{
				_1b13928c9_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1b054a434_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b451980b:;
			{
				_1b1392b82_optimizeInfIter(_self_, _18236_st.cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b4519883:;
			{
				_1b1392e3a_optimizeConditional(_self_, _18236_st.cast_ptr<_1b0549b81_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b451990a:;
			{
				_1b13931e3_optimizeMatch(_self_, _18236_st.cast_ptr<_1b054d17e_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b4519982:;
			{
				_1b139349b_optimizeAssign(_self_, _18236_st.cast_ptr<_1b054c645_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b4519a09:;
			{
				_1b1393754_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1b054ca1e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b4519a81:;
			{
				jule::Ptr<_1b0612672_Data> _20621_d = _18236_st.cast_ptr<_1b0612672_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1b4519564;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1b451e668:;
						{
							_1b1391d07_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1b451eb0d:;
						{
							_1b1391b09_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1b451eaa8:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b4519b08:;
			{
				_1b1391d07_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b4519b80:;
			{
				_1b13920b0_pushGoto(_self_, _18236_st.cast_ptr<_1b054bcb5_GotoSt>(&__jule_any_type43));
				_1b1391d07_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b4519c07:;
			{
				_1b1392368_pushLabel(_self_, _18236_st.cast_ptr<_1b054b8db_Label>(&__jule_any_type21));
			}
		}
		_match_end_1b4519564:;
	};
}



inline void _1b1393c0a_optimizeStmts(jule::Ptr<_1b1390d39_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1b1393a0c_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1b4521934:;
	}
	_iter_end_1b4521934:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b1390d39_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1b1395091_exprDeadCode static__1b1395701_new(jule::Ptr<_1b1390d39_scopeDeadCode>* _5024_s) {
	return _1b1395091_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1b13959a9_binary(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ea02c_BinopExprModel> _5625_m) {
	_1b139bb8b_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1b139bb8b_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1b1395c62_unary(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ea406_UnaryExprModel> _6124_m) {
	_1b139bb8b_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1b139601a_structureLit(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04eacca_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b45246e5:;
		if (it != expr_end) {
			jule::Ptr<_1b04ea934_StructArgExprModel> _6621_arg = *it;
			{
				_1b139bb8b_optimize(_self_, &(_6621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1b45246e5:;
			++it;
			goto _iter_begin_1b45246e5;
		}
		_iter_end_1b45246e5:;
	};
}



inline void _1b13962c3_allocStructure(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04eb0c7_AllocStructLitExprModel> _7133_m) {
	_1b139601a_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1b139657b_casting(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04eb65a_CastingExprModel> _7526_m) {
	_1b139bb8b_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1b1396834_args(_1b1395091_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b452662b:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1b139bb8b_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1b452662b:;
			++it;
			goto _iter_begin_1b452662b;
		}
		_iter_end_1b452662b:;
	};
}



inline void _1b1396adc_funcCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ec00c_FnCallExprModel> _8527_m) {
	_1b139bb8b_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1b1396834_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1b1391598_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1b1396d95_slice(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ec3d6_SliceExprModel> _9324_m) {
	_1b1396834_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1b139714d_array(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b050042d_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1b139bb8b_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1b1396834_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1b1397406_indexing(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ec88c_IndexingExprModel> _10427_m) {
	_1b139bb8b_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1b139bb8b_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1b13976ae_anonFunc(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ecc66_AnonFnExprModel> _10927_m) {
	_1b139403a_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1b1397967_mapExpr(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ed5e6_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b452bac6:;
		if (it != expr_end) {
			jule::Ptr<_1b04ed140_KeyValPairExprModel> _11421_pair = *it;
			{
				_1b139bb8b_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1b139bb8b_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1b452bac6:;
			++it;
			goto _iter_begin_1b452bac6;
		}
		_iter_end_1b452bac6:;
	};
}



inline void _1b1397c20_slicing(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04edb79_SlicingExprModel> _12026_m) {
	_1b139bb8b_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1b139bb8b_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1b139bb8b_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1b1397ec8_traitSub(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04ee20c_TraitSubIdentExprModel> _12827_m) {
	_1b139bb8b_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1b1398281_structureSub(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _13231_m) {
	_1b139bb8b_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1b1398539_commonSub(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0500cad_CommonSubIdentExprModel> _13628_m) {
	_1b139bb8b_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1b13987e2_tuple(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05010aa_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b45308cc:;
		if (it != expr_end) {
			jule::Ptr<_1b0612672_Data> _14121_d = *it;
			{
				_1b139bb8b_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1b45308cc:;
			++it;
			goto _iter_begin_1b45308cc;
		}
		_iter_end_1b45308cc:;
	};
}



inline void _1b1398a9a_newCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0502034_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1b139bb8b_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1b1398d53_outCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0501484_BuiltinOutCallExprModel> _15226_m) {
	_1b139bb8b_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1b139910b_outlnCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel> _15628_m) {
	_1b139bb8b_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1b13993b4_panicCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b050240d_BuiltinPanicCallExprModel> _16028_m) {
	_1b139bb8b_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1b139966c_assertCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel> _16429_m) {
	_1b139bb8b_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1b1399925_errorCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel> _16828_m) {
	_1b139bb8b_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1b1399bcd_makeCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1b139bb8b_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1b139bb8b_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1b1399e86_appendCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0503244_BuiltinAppendCallExprModel> _18129_m) {
	_1b139bb8b_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1b139bb8b_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1b139a23e_lenCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0503541_BuiltinLenCallExprModel> _18626_m) {
	_1b139bb8b_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1b139a4e7_capCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b050383d_BuiltinCapCallExprModel> _19026_m) {
	_1b139bb8b_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1b139a7a0_cloneCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel> _19428_m) {
	_1b139bb8b_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1b139aa58_deleteCall(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel> _19829_m) {
	_1b139bb8b_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1b139bb8b_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1b139ad11_sizeof(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05048e9_SizeofExprModel> _20525_m) {
	_1b139bb8b_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1b139b0b9_alignof(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b0504be6_AlignofExprModel> _20926_m) {
	_1b139bb8b_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1b139b372_integratedToStr(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05052e0_IntegratedToStrExprModel> _21334_m) {
	_1b139bb8b_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1b139b62a_free(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05059b6_FreeExprModel> _21723_m) {
	_1b139bb8b_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1b139b8d3_backendEmit(_1b1395091_exprDeadCode* _self_, jule::Ptr<_1b05056b9_BackendEmitExprModel> _22130_m) {
	_1b1396834_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1b139bb8b_optimize(_1b1395091_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b453c521:;
			{
				_1b13959a9_binary(_self_, (*(_22528_model)).cast_ptr<_1b04ea02c_BinopExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b453c587:;
			{
				_1b1395c62_unary(_self_, (*(_22528_model)).cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b453c5ed:;
			{
				_1b139601a_structureLit(_self_, (*(_22528_model)).cast_ptr<_1b04eacca_StructLitExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b453c675:;
			{
				_1b13962c3_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1b04eb0c7_AllocStructLitExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b453c6ec:;
			{
				_1b139657b_casting(_self_, (*(_22528_model)).cast_ptr<_1b04eb65a_CastingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b453c774:;
			{
				_1b1396adc_funcCall(_self_, (*(_22528_model)).cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b453c7eb:;
			{
				_1b1396d95_slice(_self_, (*(_22528_model)).cast_ptr<_1b04ec3d6_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b453c873:;
			{
				_1b139714d_array(_self_, (*(_22528_model)).cast_ptr<_1b050042d_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b453c8ea:;
			{
				_1b1397406_indexing(_self_, (*(_22528_model)).cast_ptr<_1b04ec88c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b453c972:;
			{
				_1b13976ae_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1b04ecc66_AnonFnExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b453c9e9:;
			{
				_1b1397967_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1b04ed5e6_MapExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b453ca71:;
			{
				_1b1397c20_slicing(_self_, (*(_22528_model)).cast_ptr<_1b04edb79_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b453cae8:;
			{
				_1b1397ec8_traitSub(_self_, (*(_22528_model)).cast_ptr<_1b04ee20c_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b453cb70:;
			{
				_1b1398281_structureSub(_self_, (*(_22528_model)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b453cbe7:;
			{
				_1b1398539_commonSub(_self_, (*(_22528_model)).cast_ptr<_1b0500cad_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b453cc6e:;
			{
				_1b13987e2_tuple(_self_, (*(_22528_model)).cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b453cce6:;
			{
				_1b1398d53_outCall(_self_, (*(_22528_model)).cast_ptr<_1b0501484_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b453cd6d:;
			{
				_1b139910b_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1b050185d_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b453cde5:;
			{
				_1b1398a9a_newCall(_self_, (*(_22528_model)).cast_ptr<_1b0502034_BuiltinNewCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b453ce6c:;
			{
				_1b13993b4_panicCall(_self_, (*(_22528_model)).cast_ptr<_1b050240d_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b453cee4:;
			{
				_1b139966c_assertCall(_self_, (*(_22528_model)).cast_ptr<_1b05028b4_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b453d06b:;
			{
				_1b1399925_errorCall(_self_, (*(_22528_model)).cast_ptr<_1b05045ec_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b453d0e3:;
			{
				_1b1399bcd_makeCall(_self_, (*(_22528_model)).cast_ptr<_1b0502d6a_BuiltinMakeCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b453d16a:;
			{
				_1b1399e86_appendCall(_self_, (*(_22528_model)).cast_ptr<_1b0503244_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b453d1e2:;
			{
				_1b139a23e_lenCall(_self_, (*(_22528_model)).cast_ptr<_1b0503541_BuiltinLenCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b453d269:;
			{
				_1b139a4e7_capCall(_self_, (*(_22528_model)).cast_ptr<_1b050383d_BuiltinCapCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b453d2e1:;
			{
				_1b139a7a0_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1b0501b5a_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b453d368:;
			{
				_1b139aa58_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1b0503eae_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b453d3e0:;
			{
				_1b139ad11_sizeof(_self_, (*(_22528_model)).cast_ptr<_1b05048e9_SizeofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b453d467:;
			{
				_1b139b0b9_alignof(_self_, (*(_22528_model)).cast_ptr<_1b0504be6_AlignofExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b453d4de:;
			{
				_1b139b372_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1b05052e0_IntegratedToStrExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b453d566:;
			{
				_1b139b62a_free(_self_, (*(_22528_model)).cast_ptr<_1b05059b6_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b453d5dd:;
			{
				_1b139b8d3_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1b05056b9_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b453c257:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b1395091_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b073e11c_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b073e6e4_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b073e9e1_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b073ecdd_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0740173_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b074054c_AppendToSliceExprModel _Src) {
	_Stream << "AppendToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Slice:" << _Src._field_Slice;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0740849_InlineStdInternalNosafeStobs _Src) {
	_Stream << "InlineStdInternalNosafeStobs{";
	_Stream << "Str:" << _Src._field_Str;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b0741b69_scopeOptimizer> static__1b0742175_new(jule::Ptr<_1b0549048_Scope> _4623_scope) {
	return jule::new_ptr<_1b0741b69_scopeOptimizer>(_1b0741b69_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1b074242d_setCurrentStmt(_1b0741b69_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1b07426d6_optimizeData(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b0612672_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b457bb59:;
			{
				jule::Ptr<_1b04ec00c_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35);;
				if (_1d36480ad_Production) {
					if (((!(_1b050cc87_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1b074560c_isStdPackage(&(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path), jule::Str("debug", 5)))) {
						_1b074242d_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1b457bb04:;
	};
	static__1b07479b6_optimize(&(_5635_d.get()._field_Model));
}



inline void _1b074298e_optimizeVar(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b05ae1bd_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1b07479b6_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1b0742c47_optimizeConditional(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b0549b81_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46e01eb:;
		if (it != expr_end) {
			jule::Ptr<_1b0549466_If> _7821_elif = *it;
			{
				static__1b07479b6_optimize(&(_7821_elif.get()._field_Expr));
				_1b0744e8b_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1b46e01eb:;
			++it;
			goto _iter_begin_1b46e01eb;
		}
		_iter_end_1b46e01eb:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1b0744e8b_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1b1203ce0_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46e1c47:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_1b0549466_If> _9321_elif = *it;
			{
				if ((!(_1b074591a_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1b46e1c47;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1b0549763_Else>(_1b0549763_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1b46e1c47;
			}
			_iter_next_1b46e1c47:;
			++it;
			_9314_i++;
			goto _iter_begin_1b46e1c47;
		}
		_iter_end_1b46e1c47:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b0549466_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1b0549466_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1b07462de_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1b46e4be5:;
	}
	_iter_end_1b46e4be5:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46e617a:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_1b0549466_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1b46e617a:;
			++it;
			_13013_j++;
			goto _iter_begin_1b46e617a;
		}
		_iter_end_1b46e617a:;
	};
	if ((_12917_only != -1LL)) {
		_1b074242d_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1b0743165_buildDefaultConstantTrueCase(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054dcb7_Case> _14651_case, jule::I64* _14669_i, jule::Ptr<_1b054d17e_Match>* _14682_m) {
	_14651_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14669_i));;
	_julec_label_1b46e8974:;
	for (;;) {
		{
			if ((_14651_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b46e88db;
			};
			jule::Any *_15422_stmt = &(_14651_case.get()._field_Scope.get()._field_Stmts[(_14651_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1b46ea27d:;
					{
						((*(_14669_i)))++;
						if (((*(_14669_i)) >= (*(_14682_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14682_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1b46e88db;
						};
						_14651_case=(*(_14682_m)).get()._field_Cases[(*(_14669_i))];
						(*(_15422_stmt))=jule::Any(_14651_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1b46ea3d2:;
					{
						goto _iter_end_1b46e88db;
					}
				}
				_match_end_1b46ea37c:;
			};
		}
	_iter_next_1b46e88db:;
	}
	_iter_end_1b46e88db:;;
	(*(_14682_m)).get()._field_Default=(*(_14682_m)).get()._field_Cases[_14813_start];
	(*(_14682_m)).get()._field_Cases=(*(_14682_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1b074341d_optimizeMatch(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054d17e_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46ec307:;
		if (it != expr_end) {
			jule::Ptr<_1b054dcb7_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b46ecb43:;
					if (it != expr_end) {
						jule::Ptr<_1b0612672_Data> _17425_expr = *it;
						{
							static__1b07479b6_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1b46ecb43:;
						++it;
						goto _iter_begin_1b46ecb43;
					}
					_iter_end_1b46ecb43:;
				};
				_1b0744e8b_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1b46ec307:;
			++it;
			goto _iter_begin_1b46ec307;
		}
		_iter_end_1b46ec307:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1b0744e8b_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1b1203ce0_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b46ee3a3:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_1b054dcb7_Case> _19025_case = *it;
			{
				if ((!(_1b0746025_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1b46ee3a3;
				};
				_18717_constCase=true;
				_1b0743165_buildDefaultConstantTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1b46ee3a3;
			}
			_iter_next_1b46ee3a3:;
			++it;
			_19018_i++;
			goto _iter_begin_1b46ee3a3;
		}
		_iter_end_1b46ee3a3:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1b054dcb7_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1b054dcb7_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1b07465a8_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1b4701c46:;
	}
	_iter_end_1b4701c46:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4702bc0:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_1b054dcb7_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1b4702bc0:;
			++it;
			_22013_j++;
			goto _iter_begin_1b4702bc0;
		}
		_iter_end_1b4702bc0:;
	};
	if ((_21917_only != -1LL)) {
		_1b074242d_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1b07436c6_optimizeRangeIter(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054ad80_RangeIter> _23640_it) {
	static__1b07479b6_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1b0744e8b_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1b074397e_optimizeWhileIter(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054a434_WhileIter> _24140_it) {
	static__1b07479b6_optimize(&(_24140_it.get()._field_Expr));
	_1b0744bd3_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1b0744e8b_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1b0743cc0_substr(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054c645_Assign> _24729_a) {
	if ((_24729_a.get()._field_Op.get()._field_Id != static_cast<jule::U64>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b4706e38:;
			{
				jule::Ptr<_1b04edb79_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1b04edb79_SlicingExprModel>(&__jule_any_type98);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1b074242d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b073e6e4_MutSlicingExprModel>(_1b073e6e4_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1b4706dd3:;
	};
	return false;;
}



inline jule::Bool _1b0744111_strAssign(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054c645_Assign> _26732_a) {
	if ((!(_1b12040a9_Str))) {
		return false;;
	};
	jule::Ptr<_1b0650627_Prim> _27113_lp = _1b064a19e_Prim(_26732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_27113_lp == nullptr) || (!(_1b0653aae_IsStr(_27113_lp.ptr()))))) {
		return false;;
	};
	return _1b0743cc0_substr(_self_, _26732_a);;
}



inline void _1b07443b9_optimizeAssign(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054c645_Assign> _27837_assign) {
	if (_1b0744111_strAssign(_self_, _27837_assign)) {
		return;;
	};
	static__1b07479b6_optimize(&(_27837_assign.get()._field_L.get()._field_Model));
	static__1b07479b6_optimize(&(_27837_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _27837_assign.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(43LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b470b79a:;
			{
				if ((_1b12030b9_Math && (_1b064b722_Struct(_27837_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_27837_assign.get()._field_Op.get()._field_Kind=_27837_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_27837_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _29125_model = jule::Any(jule::new_ptr<_1b04ea02c_BinopExprModel>(_1b04ea02c_BinopExprModel{._field_Left=_27837_assign.get()._field_L, ._field_Right=_27837_assign.get()._field_R, ._field_Op=_27837_assign.get()._field_Op}), &__jule_any_type115);;
					static__1b07479b6_optimize(&(_29125_model));
					{
						auto &_match_expr{ _29125_model };
						
						if (_match_expr.type == &__jule_any_type115) {
							_case_begin_1b470ddda:;
							{
								_27837_assign.get()._field_R=jule::new_ptr<_1b04e9a32_OperandExprModel>((*(_27837_assign.get()._field_R)));
								_27837_assign.get()._field_Op.get()._field_Id=static_cast<jule::U64>(71LLU);
								_27837_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_27837_assign.get()._field_R.get()._field_Model=_29125_model;
								return;;
							}
						}
						_match_end_1b470dbed:;
					};
					_27837_assign.get()._field_Op.get()._field_Kind+=jule::Str("=", 1);
					return;;
				};
			}
		}
		_match_end_1b470b745:;
	};
	if (_1b1202cab_Append) {
		{
			auto &_match_expr{ _27837_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1b4710a9b:;
				{
					jule::Ptr<_1b0503244_BuiltinAppendCallExprModel> _31325_m = _27837_assign.get()._field_R.get()._field_Model.cast_ptr<_1b0503244_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					if ((!(_1b075011c_areSameLvalueExprModel(&(_27837_assign.get()._field_L.get()._field_Model), &(_31325_m.get()._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ _31325_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type83) {
							_case_begin_1b4711c89:;
							{
								_1b074242d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b0740173_PushToSliceExprModel>(_1b0740173_PushToSliceExprModel{._field_Dest=_31325_m.get()._field_Dest, ._field_Elems=_31325_m.get()._field_Elements.cast_ptr<_1b04ec3d6_SliceExprModel>(&__jule_any_type83)}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1b47121da:;
							{
								_1b074242d_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1b074054c_AppendToSliceExprModel>(_1b074054c_AppendToSliceExprModel{._field_Dest=_27837_assign.get()._field_L.get()._field_Model, ._field_Slice=_31325_m.get()._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1b4712185:;
					};
				}
			}
			_match_end_1b4710a46:;
		};
	};
}



inline void _1b0744672_optimizeMultiAssign(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054ca1e_MultiAssign> _33542_assign) {
	{
		auto expr = &(_33542_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b471330c:;
		if (it != expr_end) {
			jule::Ptr<_1b0612672_Data> _33621_l = *it;
			{
				if ((_33621_l != nullptr)) {
					static__1b07479b6_optimize(&(_33621_l.get()._field_Model));
				};
			}
			_iter_next_1b471330c:;
			++it;
			goto _iter_begin_1b471330c;
		}
		_iter_end_1b471330c:;
	};
	static__1b07479b6_optimize(&(_33542_assign.get()._field_R));
}



inline void _1b074492a_optimizeRet(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b054e746_RetSt> _34434_r) {
	static__1b07479b6_optimize(&(_34434_r.get()._field_Expr));
}



inline void _1b0744bd3_optimizeStmt(_1b0741b69_scopeOptimizer* _self_, jule::Any _34835_stmt) {
	{
		auto &_match_expr{ _34835_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b4715122:;
			{
				_1b0744e8b_optimizeChild(_self_, _34835_stmt.cast_ptr<_1b0549048_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b4715188:;
			{
				_1b07426d6_optimizeData(_self_, _34835_stmt.cast_ptr<_1b0612672_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b47151ee:;
			{
				_1b074298e_optimizeVar(_self_, _34835_stmt.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b4715265:;
			{
				_1b0742c47_optimizeConditional(_self_, _34835_stmt.cast_ptr<_1b0549b81_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b47152cb:;
			{
				_1b07436c6_optimizeRangeIter(_self_, _34835_stmt.cast_ptr<_1b054ad80_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b4715342:;
			{
				_1b074397e_optimizeWhileIter(_self_, _34835_stmt.cast_ptr<_1b054a434_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b47153a8:;
			{
				_1b0744e8b_optimizeChild(_self_, _34835_stmt.cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b471541e:;
			{
				_1b07443b9_optimizeAssign(_self_, _34835_stmt.cast_ptr<_1b054c645_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b4715496:;
			{
				_1b0744672_optimizeMultiAssign(_self_, _34835_stmt.cast_ptr<_1b054ca1e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b471551d:;
			{
				_1b074341d_optimizeMatch(_self_, _34835_stmt.cast_ptr<_1b054d17e_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b4715595:;
			{
				_1b074492a_optimizeRet(_self_, _34835_stmt.cast_ptr<_1b054e746_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1b4714ee0:;
	};
}



inline void _1b0744e8b_optimizeChild(_1b0741b69_scopeOptimizer* _self_, jule::Ptr<_1b0549048_Scope> _37536_child) {
	jule::Ptr<_1b0741b69_scopeOptimizer> _37617_so = static__1b0742175_new(_37536_child);;
	_1b0745189_optimize(_37617_so.ptr());
}



inline void _1b0745189_optimize(_1b0741b69_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4714d7a:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Any _38221_stmt = *it;
			{
				(*(_self_))._field_i=_38214_i;
				_1b0744bd3_optimizeStmt(_self_, _38221_stmt);
			}
			_iter_next_1b4714d7a:;
			++it;
			_38214_i++;
			goto _iter_begin_1b4714d7a;
		}
		_iter_end_1b4714d7a:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0741b69_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1b07479b6_optimize(jule::Any* _5829_model) {
	if (_1b139c296_exprEnabled) {
		jule::Ptr<_1b0747444_exprOptimizer> _6121_exop = jule::new_ptr<_1b0747444_exprOptimizer>(_1b0747444_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1b074e7d1_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1b0747d07_strCond(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ea02c_BinopExprModel> _6826_m) {
	jule::Ptr<_1b0650627_Prim> _6913_lp = _1b064a19e_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1b0653aae_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U64>(50LLU)) && (_6826_m.get()._field_Op.get()._field_Id != static_cast<jule::U64>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b4728ae7:;
			{
				({
					jule::Ptr<_1b04e9a32_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1b04e9a32_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_1b4729da1;
			}
		}
		_match_end_1b4728a92:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b4727d49:;
			{
				goto _match_end_1b4729b4d;
			}
		}
		else {
			_case_begin_1b4729ba3:;
			{
				return true;;
			}
		}
		_match_end_1b4729b4d:;
	};
	_julec_label_1b4729da1:;
	jule::Ptr<_1ad37cdb2_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(50LLU)) {
			_case_begin_1b472ac4d:;
			{
				if (_1ad38003a_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1b0500cad_CommonSubIdentExprModel>(_1b0500cad_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1b472abe8;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1b073e11c_StrCompExprModel>(_1b073e11c_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(51LLU)) {
			_case_begin_1b472acc5:;
			{
				if (_1ad38003a_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_1aa49b1d1_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Id=static_cast<jule::U64>(68LLU);
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1b04ea406_UnaryExprModel>(_1b04ea406_UnaryExprModel{._field_Expr=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Model=jule::Any(jule::new_ptr<_1b0500cad_CommonSubIdentExprModel>(_1b0500cad_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1b472abe8;
				};
				jule::Any _12221_model = jule::Any(jule::new_ptr<_1b073e11c_StrCompExprModel>(_1b073e11c_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12221_model))))));
			}
		}
		_match_end_1b472abe8:;
	};
	return true;;
}



inline void _1b07480b0_binary(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ea02c_BinopExprModel> _13225_m) {
	static__1b07479b6_optimize(&(_13225_m.get()._field_Left.get()._field_Model));
	static__1b07479b6_optimize(&(_13225_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13225_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b472e2c3:;
			{
				goto _match_end_1b4732cbb;
			}
		}
		else {
			_case_begin_1b4732d21:;
			{
				return;;
			}
		}
		_match_end_1b4732cbb:;
	};
	if ((_1b1203ce0_Cond && _1b0747d07_strCond(_self_, _13225_m))) {
		return;;
	};
	if ((!(_1b12030b9_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13225_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b4733cde:;
			{
				jule::Bool _15218_ok = false;;
				jule::U64 _15222_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b074ec54_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_15218_ok = __jule_assign_result.__jule_result_arg0;
					_15222_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15218_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U64>(56LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1ad37cdb2_Const> _15625_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
					_1ad3810d5_SetU64(_15625_c.ptr(), _15222_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(63LLU)) {
			_case_begin_1b4733d66:;
			{
				jule::Bool _16118_ok = false;;
				jule::U64 _16122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1b074ec54_checkForBitShiftOpt(&(_13225_m.get()._field_Left), &(_13225_m.get()._field_Right));
					_16118_ok = __jule_assign_result.__jule_result_arg0;
					_16122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_16118_ok) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U64>(57LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1ad37cdb2_Const> _16525_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
					_1ad3810d5_SetU64(_16525_c.ptr(), _16122_x);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b4733ddd:;
			{
				jule::Ptr<_1ad37cdb2_Const> _17021_c = _13225_m.get()._field_Right.get()._field_Model.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
				jule::F64 _17117_d = _1ad380a74_AsF64(_17021_c.ptr());;
				if ((_17117_d == 2LL)) {
					_13225_m.get()._field_Op.get()._field_Id=static_cast<jule::U64>(65LLU);
					_13225_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1ad380d2c_SetI64(_17021_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1b4733c67:;
	};
	jule::Any _17817_model = jule::Any(jule::new_ptr<_1b073e9e1_UnsafeBinopExprModel>(_1b073e9e1_UnsafeBinopExprModel{._field_Node=_13225_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17817_model))))));
}



inline void _1b0748368_unary(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ea406_UnaryExprModel> _18224_m) {
	static__1b07479b6_optimize(&(_18224_m.get()._field_Expr.get()._field_Model));
	if ((_1b1203916_Ptr && (_18224_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(62LLU)))) {
		{
			auto &_match_expr{ _18224_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1b473b7a8:;
				{
					jule::Ptr<_1b04ea406_UnaryExprModel> _18725_um = _18224_m.get()._field_Expr.get()._field_Model.cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74);;
					if ((_18725_um.get()._field_Op.get()._field_Id == static_cast<jule::U64>(65LLU))) {
						(*((*(_self_))._field_model))=_18725_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1b473b4cd:;
		};
	};
}



inline void _1b0748621_structureLit(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04eacca_StructLitExprModel> _19531_m) {
	{
		auto expr = &(_19531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b473d326:;
		if (it != expr_end) {
			jule::Ptr<_1b04ea934_StructArgExprModel> _19621_arg = *it;
			{
				static__1b07479b6_optimize(&(_19621_arg.get()._field_Expr.get()._field_Model));
			}
			_iter_next_1b473d326:;
			++it;
			goto _iter_begin_1b473d326;
		}
		_iter_end_1b473d326:;
	};
}



inline void _1b07488c9_allocStructure(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04eb0c7_AllocStructLitExprModel> _20133_m) {
	_1b0748621_structureLit(_self_, _20133_m.get()._field_Lit);
}



inline void _1b0748b82_casting(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04eb65a_CastingExprModel> _20526_m) {
	static__1b07479b6_optimize(&(_20526_m.get()._field_Expr));
}



inline void _1b0748e3a_args(_1b0747444_exprOptimizer* _self_, jule::Slice<jule::Any>* _20924_args) {
	{
		auto expr = _20924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b473ebda:;
		if (it != expr_end) {
			jule::I64 _21014_i = it - expr->begin();
			jule::Any _21021_arg = *it;
			{
				static__1b07479b6_optimize(&(_21021_arg));
				(*(_20924_args))[_21014_i]=_21021_arg;
			}
			_iter_next_1b473ebda:;
			++it;
			_21014_i++;
			goto _iter_begin_1b473ebda;
		}
		_iter_end_1b473ebda:;
	};
}



inline void _1b07491e3_scope(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0549048_Scope>* _21625_s) {
	jule::Ptr<_1b0741b69_scopeOptimizer> _21717_scopt = static__1b0742175_new((*(_21625_s)));;
	_1b0745189_optimize(_21717_scopt.ptr());
}



inline jule::Bool _1b0749534_optimizeSpecialFuncCalls(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ec00c_FnCallExprModel>* _22144_m) {
	_1b1200935_stdCacheData _22214_data;;
	jule::Bool _22220_ok = false;;
	_1b1200d64_stdCache.lookup(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_22144_m)).get()._field_Func)), &(_22214_data), &(_22220_ok));
	if ((!(_22220_ok))) {
		return false;;
	};
	_22214_data._field_do(_self_, &(_22214_data), _22144_m);
	return true;;
}



inline void _1b07497dc_funcCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ec00c_FnCallExprModel> _23027_m) {
	if ((_1b139c818_stdEnabled && _1b0749534_optimizeSpecialFuncCalls(_self_, &(_23027_m)))) {
		return;;
	};
	static__1b07479b6_optimize(&(_23027_m.get()._field_Expr));
	_1b0748e3a_args(_self_, &(_23027_m.get()._field_Args));
	if ((_23027_m.get()._field_Except != nullptr)) {
		_1b07491e3_scope(_self_, &(_23027_m.get()._field_Except));
	};
}



inline void _1b0749a95_slice(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ec3d6_SliceExprModel> _24124_m) {
	_1b0748e3a_args(_self_, &(_24124_m.get()._field_Elems));
}



inline void _1b0749d4d_array(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b050042d_ArrayExprModel> _24524_m) {
	if (((_24524_m.get()._field_Elems.len() == 2LL) && (_24524_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _24721_elem = _24524_m.get()._field_Elems[0LL];;
		static__1b07479b6_optimize(&(_24721_elem));
		_24524_m.get()._field_Elems[0LL]=_24721_elem;
	};
	_1b0748e3a_args(_self_, &(_24524_m.get()._field_Elems));
}



inline void _1b074a106_indexing(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ec88c_IndexingExprModel> _25427_m) {
	static__1b07479b6_optimize(&(_25427_m.get()._field_Expr.get()._field_Model));
	static__1b07479b6_optimize(&(_25427_m.get()._field_Index.get()._field_Model));
	if ((!(_1b1203383_Access))) {
		return;;
	};
	jule::Bool _26013_array = (_1b064ae6e_Arr(_25427_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_26013_array && _1b0613046_IsConst(_25427_m.get()._field_Index.ptr()))) {
		jule::Any _26321_model = jule::Any(jule::new_ptr<_1b073ecdd_UnsafeIndexingExprModel>(_1b073ecdd_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type129);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26321_model))))));
		return;;
	};
	{
		auto &_match_expr{ _25427_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4749035:;
			{
				jule::Ptr<_1b05ae1bd_Var> _26917_i = _25427_m.get()._field_Index.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
				if ((_26917_i.get()._field_Mutable || (_26917_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1b4748ed0;
				};
				{
					auto &_match_expr{ _25427_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b474a6a7:;
						{
							jule::Ptr<_1b05ae1bd_Var> _27521_r = _25427_m.get()._field_Expr.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
							if ((_26917_i.get()._field_IterRelation.get()._field_Range == _27521_r)) {
								jule::Any _27829_model = jule::Any(jule::new_ptr<_1b073ecdd_UnsafeIndexingExprModel>(_1b073ecdd_UnsafeIndexingExprModel{._field_Node=_25427_m}), &__jule_any_type129);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_27829_model))))));
							};
						}
					}
					_match_end_1b474a652:;
				};
			}
		}
		_match_end_1b4748ed0:;
	};
}



inline void _1b074a3ae_anonFunc(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ecc66_AnonFnExprModel> _28527_m) {
	_1b07491e3_scope(_self_, &(_28527_m.get()._field_Func.get()._field_Scope));
}



inline void _1b074a667_mapExpr(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ed5e6_MapExprModel> _28926_m) {
	{
		auto expr = &(_28926_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b474cb82:;
		if (it != expr_end) {
			jule::Ptr<_1b04ed140_KeyValPairExprModel> _29021_pair = *it;
			{
				static__1b07479b6_optimize(&(_29021_pair.get()._field_Key));
				static__1b07479b6_optimize(&(_29021_pair.get()._field_Val));
			}
			_iter_next_1b474cb82:;
			++it;
			goto _iter_begin_1b474cb82;
		}
		_iter_end_1b474cb82:;
	};
}



inline void _1b074a920_slicing(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04edb79_SlicingExprModel> _29626_m) {
	static__1b07479b6_optimize(&(_29626_m.get()._field_Expr));
	static__1b07479b6_optimize(&(_29626_m.get()._field_Left));
	if ((_29626_m.get()._field_Right != nullptr)) {
		static__1b07479b6_optimize(&(_29626_m.get()._field_Right));
	};
}



inline void _1b074abc8_traitSub(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04ee20c_TraitSubIdentExprModel> _30427_m) {
	static__1b07479b6_optimize(&(_30427_m.get()._field_Expr));
}



inline void _1b074ae81_structureSub(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _30831_m) {
	static__1b07479b6_optimize(&(_30831_m.get()._field_Expr.get()._field_Model));
}



inline void _1b074b239_commonSub(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0500cad_CommonSubIdentExprModel> _31228_m) {
	static__1b07479b6_optimize(&(_31228_m.get()._field_Expr));
}



inline void _1b074b4e2_tuple(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05010aa_TupleExprModel> _31624_m) {
	{
		auto expr = &(_31624_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4750932:;
		if (it != expr_end) {
			jule::Ptr<_1b0612672_Data> _31721_d = *it;
			{
				static__1b07479b6_optimize(&(_31721_d.get()._field_Model));
			}
			_iter_next_1b4750932:;
			++it;
			goto _iter_begin_1b4750932;
		}
		_iter_end_1b4750932:;
	};
}



inline void _1b074b79a_newCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0502034_BuiltinNewCallExprModel> _32226_m) {
	if ((_32226_m.get()._field_Init != nullptr)) {
		static__1b07479b6_optimize(&(_32226_m.get()._field_Init));
	};
}



inline void _1b074ba53_outCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0501484_BuiltinOutCallExprModel> _32826_m) {
	static__1b07479b6_optimize(&(_32826_m.get()._field_Expr));
}



inline void _1b074bd0b_outlnCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel> _33228_m) {
	static__1b07479b6_optimize(&(_33228_m.get()._field_Expr));
}



inline void _1b074c0b4_panicCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b050240d_BuiltinPanicCallExprModel> _33628_m) {
	static__1b07479b6_optimize(&(_33628_m.get()._field_Expr));
}



inline void _1b074c36c_assertCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel> _34029_m) {
	static__1b07479b6_optimize(&(_34029_m.get()._field_Expr));
}



inline void _1b074c625_errorCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel> _34428_m) {
	static__1b07479b6_optimize(&(_34428_m.get()._field_Err.get()._field_Model));
}



inline void _1b074c8cd_makeCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel> _34827_m) {
	if ((_34827_m.get()._field_Len != nullptr)) {
		static__1b07479b6_optimize(&(_34827_m.get()._field_Len));
	};
	if ((_34827_m.get()._field_Cap != nullptr)) {
		static__1b07479b6_optimize(&(_34827_m.get()._field_Cap));
	};
}



inline void _1b074cb86_appendCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0503244_BuiltinAppendCallExprModel> _35729_m) {
	static__1b07479b6_optimize(&(_35729_m.get()._field_Dest));
	static__1b07479b6_optimize(&(_35729_m.get()._field_Elements));
}



inline void _1b074ce3e_lenCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0503541_BuiltinLenCallExprModel> _36226_m) {
	static__1b07479b6_optimize(&(_36226_m.get()._field_Expr.get()._field_Model));
}



inline void _1b074d1e7_capCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b050383d_BuiltinCapCallExprModel> _36626_m) {
	static__1b07479b6_optimize(&(_36626_m.get()._field_Expr.get()._field_Model));
}



inline void _1b074d4a0_cloneCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel> _37028_m) {
	static__1b07479b6_optimize(&(_37028_m.get()._field_Expr));
}



inline void _1b074d758_deleteCall(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel> _37429_m) {
	static__1b07479b6_optimize(&(_37429_m.get()._field_Dest.get()._field_Model));
	if ((_37429_m.get()._field_Key != nullptr)) {
		static__1b07479b6_optimize(&(_37429_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1b074da11_sizeof(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05048e9_SizeofExprModel> _38125_m) {
	static__1b07479b6_optimize(&(_38125_m.get()._field_Expr));
}



inline void _1b074dcb9_alignof(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b0504be6_AlignofExprModel> _38526_m) {
	static__1b07479b6_optimize(&(_38526_m.get()._field_Expr));
}



inline void _1b074e072_integratedToStr(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05052e0_IntegratedToStrExprModel> _38934_m) {
	static__1b07479b6_optimize(&(_38934_m.get()._field_Expr));
}



inline void _1b074e32a_free(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05059b6_FreeExprModel> _39323_m) {
	static__1b07479b6_optimize(&(_39323_m.get()._field_Expr));
}



inline void _1b074e5d3_backendEmit(_1b0747444_exprOptimizer* _self_, jule::Ptr<_1b05056b9_BackendEmitExprModel> _39730_m) {
	_1b0748e3a_args(_self_, &(_39730_m.get()._field_Exprs));
}



inline void _1b074e7d1_do(_1b0747444_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b4759001:;
			{
				_1b07480b0_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ea02c_BinopExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b4759067:;
			{
				_1b0748368_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b47590cd:;
			{
				_1b0748621_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04eacca_StructLitExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b4759155:;
			{
				_1b07488c9_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04eb0c7_AllocStructLitExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b47591cc:;
			{
				_1b0748b82_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04eb65a_CastingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b4759254:;
			{
				_1b07497dc_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b47592cb:;
			{
				_1b0749a95_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ec3d6_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b4759353:;
			{
				_1b0749d4d_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b050042d_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b47593ca:;
			{
				_1b074a106_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ec88c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b4759452:;
			{
				_1b074a3ae_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ecc66_AnonFnExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b47594c9:;
			{
				_1b074a667_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ed5e6_MapExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b4759551:;
			{
				_1b074a920_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04edb79_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b47595c8:;
			{
				_1b074abc8_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04ee20c_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b4759650:;
			{
				_1b074ae81_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b47596c7:;
			{
				_1b074b239_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0500cad_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b475974e:;
			{
				_1b074b4e2_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b47597c6:;
			{
				_1b074ba53_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0501484_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b475984d:;
			{
				_1b074bd0b_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b050185d_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b47598c5:;
			{
				_1b074b79a_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0502034_BuiltinNewCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b475994c:;
			{
				_1b074c0b4_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b050240d_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b47599c4:;
			{
				_1b074c36c_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05028b4_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b4759a4b:;
			{
				_1b074c625_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05045ec_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b4759ac3:;
			{
				_1b074c8cd_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0502d6a_BuiltinMakeCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b4759b4a:;
			{
				_1b074cb86_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0503244_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b4759bc2:;
			{
				_1b074ce3e_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0503541_BuiltinLenCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b4759c49:;
			{
				_1b074d1e7_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b050383d_BuiltinCapCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b4759cc1:;
			{
				_1b074d4a0_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0501b5a_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b4759d48:;
			{
				_1b074d758_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0503eae_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b4759dc0:;
			{
				_1b074da11_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05048e9_SizeofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b4759e47:;
			{
				_1b074dcb9_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b0504be6_AlignofExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b4759ebe:;
			{
				_1b074e072_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05052e0_IntegratedToStrExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b475a046:;
			{
				_1b074e32a_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05059b6_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b475a0bd:;
			{
				_1b074e5d3_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1b05056b9_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b4758c37:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b0747444_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b1200935_stdCacheData _Src) {
	_Stream << "stdCacheData{";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "do:" << _Src._field_do;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b139ca9e_Optimizer> static__1b139cede_New(jule::Ptr<_1b11eb5ce_IR>* _2724_ir) {
	return jule::new_ptr<_1b139ca9e_Optimizer>(_1b139ca9e_Optimizer{._field_ir=(*(_2724_ir))});;
}



inline void _1b139d297_optimizeGlobal(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b05ae1bd_Var>* _3338_v) {
	if ((!((*(_3338_v)).get()._field_Binded))) {
		static__1b07479b6_optimize(&((*(_3338_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1b139d550_optimizeFunction(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b05088ed_Fn>* _3940_func) {
	if ((*(_3940_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3940_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b477634d:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _4321_ins = *it;
			{
				jule::Ptr<_1b0741b69_scopeOptimizer> _4421_so = static__1b0742175_new(_4321_ins.get()._field_Scope);;
				_1b0745189_optimize(_4421_so.ptr());
			}
			_iter_next_1b477634d:;
			++it;
			goto _iter_begin_1b477634d;
		}
		_iter_end_1b477634d:;
	};
}



inline void _1b139d808_optimizeStruct(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b04e2871_Struct>* _4938_s) {
	if ((*(_4938_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4938_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b47777d3:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _5321_ins = *it;
			{
				{
					auto expr = &(_5321_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4778042:;
					if (it != expr_end) {
						jule::Ptr<_1b04e4da1_FieldIns> _5425_f = *it;
						{
							if ((_5425_f.get()._field_Default != nullptr)) {
								static__1b07479b6_optimize(&(_5425_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1b4778042:;
						++it;
						goto _iter_begin_1b4778042;
					}
					_iter_end_1b4778042:;
				};
				{
					auto expr = &(_5321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4778a59:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _5925_m = *it;
						{
							_1b139d550_optimizeFunction(_self_, &(_5925_m));
						}
						_iter_next_1b4778a59:;
						++it;
						goto _iter_begin_1b4778a59;
					}
					_iter_end_1b4778a59:;
				};
			}
			_iter_next_1b47777d3:;
			++it;
			goto _iter_begin_1b47777d3;
		}
		_iter_end_1b47777d3:;
	};
}



inline void _1b139dab1_optimizeGlobals(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b056d3ad_Package>* _6539_p) {
	{
		auto expr = &((*(_6539_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b477930c:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _6621_f = *it;
			{
				{
					auto expr = &(_6621_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4779e89:;
					if (it != expr_end) {
						jule::Ptr<_1b05ae1bd_Var> _6725_v = *it;
						{
							_1b139d297_optimizeGlobal(_self_, &(_6725_v));
						}
						_iter_next_1b4779e89:;
						++it;
						goto _iter_begin_1b4779e89;
					}
					_iter_end_1b4779e89:;
				};
			}
			_iter_next_1b477930c:;
			++it;
			goto _iter_begin_1b477930c;
		}
		_iter_end_1b477930c:;
	};
}



inline void _1b139dd69_optimizeFunctions(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b056d3ad_Package>* _7341_p) {
	{
		auto expr = &((*(_7341_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b477a53e:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _7421_f = *it;
			{
				{
					auto expr = &(_7421_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b477b1aa:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _7525_func = *it;
						{
							_1b139d550_optimizeFunction(_self_, &(_7525_func));
						}
						_iter_next_1b477b1aa:;
						++it;
						goto _iter_begin_1b477b1aa;
					}
					_iter_end_1b477b1aa:;
				};
			}
			_iter_next_1b477a53e:;
			++it;
			goto _iter_begin_1b477a53e;
		}
		_iter_end_1b477a53e:;
	};
}



inline void _1b139e122_optimizeStructs(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b056d3ad_Package>* _8139_p) {
	{
		auto expr = &((*(_8139_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b477b760:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _8221_f = *it;
			{
				{
					auto expr = &(_8221_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b477c3cb:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> _8325_s = *it;
						{
							_1b139d808_optimizeStruct(_self_, &(_8325_s));
						}
						_iter_next_1b477c3cb:;
						++it;
						goto _iter_begin_1b477c3cb;
					}
					_iter_end_1b477c3cb:;
				};
			}
			_iter_next_1b477b760:;
			++it;
			goto _iter_begin_1b477b760;
		}
		_iter_end_1b477b760:;
	};
}



inline void _1b139e3ca_optimizePackage(_1b139ca9e_Optimizer* _self_, jule::Ptr<_1b056d3ad_Package>* _8939_p) {
	_1b139dab1_optimizeGlobals(_self_, _8939_p);
	_1b139dd69_optimizeFunctions(_self_, _8939_p);
	_1b139e122_optimizeStructs(_self_, _8939_p);
}



inline void _1b139e5c8_Optimize(_1b139ca9e_Optimizer* _self_) {
	_1b139e84d_detectEnabled();
	if (_1b139c818_stdEnabled) {
		_1b12010c8_buildCache(&((*(_self_))._field_ir));
	};
	if (_1b12029e2_Deadcode) {
		_1b138e431_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1b139c54e_scopeEnabled || _1b139c296_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b477dbc4:;
			if (it != expr_end) {
				jule::Ptr<_1b056a487_ImportInfo> _10825_u = *it;
				{
					if ((!(_10825_u.get()._field_Binded))) {
						_1b139e3ca_optimizePackage(_self_, &(_10825_u.get()._field_Package));
					};
				}
				_iter_next_1b477dbc4:;
				++it;
				goto _iter_begin_1b477dbc4;
			}
			_iter_end_1b477dbc4:;
		};
		_1b139e3ca_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1b12029e2_Deadcode) {
		_1b13949ca_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b139ca9e_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1b139edc0_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1b13c4ab5_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1b139edc0_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1b13c5bc6_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1b13c75bd_LogFlat(_1aa3c3a21_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1b13c77ee_LogError(_1aa3c3a21_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1b139edc0_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1ad36c885_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1ad36c885_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _1aa356ba2_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_1aa356ba2_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1ad36c885_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_1aa34db33_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_1aa34db33_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_1aa34db33_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1b13c4ab5_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1b13c7a30_Log(_1aa3c3a21_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b478c52e:;
			{
				static__1b13c75bd_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b478c5a6:;
			{
				static__1b13c77ee_LogError(_6520_l);
			}
		}
		_match_end_1b478c496:;
	};
}



inline void static__1b13c7c61_PrintLogs(jule::Slice<_1aa3c3a21_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b47888c1:;
		if (it != expr_end) {
			_1aa3c3a21_Log *_7616_l = it;
			{
				static__1b13c7a30_Log(_7616_l);
			}
			_iter_next_1b47888c1:;
			++it;
			goto _iter_begin_1b47888c1;
		}
		_iter_end_1b47888c1:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1ad36c885_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1b13c7304_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0ee0cdb_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1b0ee14b2_Time static__1b0ee1869_Unix(jule::U64 _9120_sec) {
	return _1b0ee14b2_Time{._field_sec=_9120_sec};;
}



inline _1b0ee14b2_Time static__1b0ee1a78_Now(void) {
	return static__1b0ee1869_Unix(static_cast<jule::U64>(_1b0ee35a2_unix()));;
}



inline _1b0ee0cdb_AbsTime _1b0ee3261_Abs(_1b0ee14b2_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1b0ee02b3_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1b0ee02b3_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1b47bde89:;
	}
	_iter_end_1b47bde89:;;
	_1b0ee0cdb_AbsTime _17417_t = _1b0ee0cdb_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0ee14b2_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b1c64d06_scopeCoder> static__1b1c65411_new(jule::Ptr<_1b0eeaab5_ObjectCoder>* _6324_oc) {
	return jule::new_ptr<_1b1c64d06_scopeCoder>(_1b1c64d06_scopeCoder{._field_oc=(*(_6324_oc))});;
}



inline void _1b47d4576_iterHead(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ad80_RangeIter>* _7032_it, jule::Bool* _7044_ref, jule::Str* _7056_begin) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1b12026d4_Copy && _1b1c6b192_isCopyOptimizable(&((*(_7032_it)).get()._field_Expr)))) {
		(*(_7044_ref))=true;
		{
			auto &_match_expr{ (*(_7032_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b47d5c3c:;
				{
					jule::Ptr<_1b05ae1bd_Var> _7921_v = (*(_7032_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
					if (_7921_v.get()._field_Reference) {
						_1b1c7b78a_model(_self_.get()._field_oc.get()._field_ec, (*(_7032_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1b47d74ad;
					};
					goto _case_begin_1b47d7513;
				}
			}
			else {
				_case_begin_1b47d7513:;
				{
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b1c7b78a_model(_self_.get()._field_oc.get()._field_ec, (*(_7032_it)).get()._field_Expr.get()._field_Model);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1b47d74ad:;
		};
	} else {
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7032_it)).get()._field_Expr.get()._field_Model);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7044_ref))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7044_ref))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, (*(_7056_begin)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
}



inline void _1b1c65ad7_rangeIndexIter(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ad80_RangeIter>* _11939_it) {
	jule::Str _12013_begin = static__1b1c8671d_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11939_it)))));;
	jule::Str _12113_next = static__1b1c86ca1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11939_it)))));;
	jule::Bool _12317_ref = false;;
	_1b47d4576_iterHead(_self_, _11939_it, &(_12317_ref), &(_12013_begin));
	if (((*(_11939_it)).get()._field_KeyA != nullptr)) {
		_1b1003ddc_varInitExpr(_self_.get()._field_oc, &((*(_11939_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12317_ref) {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b0eeb863_indent(_self_.get()._field_oc);
	};
	if (((*(_11939_it)).get()._field_KeyB != nullptr)) {
		(*(_11939_it)).get()._field_KeyB.get()._field_Reference=(_1b12026d4_Copy && _1b1c6b55a_isIterCopyOptimizable(&((*(_11939_it)).get()._field_Expr), &((*(_11939_it)).get()._field_KeyB)));
		_1b1003ddc_varInitExpr(_self_.get()._field_oc, &((*(_11939_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_11939_it)).get()._field_KeyB.get()._field_Reference) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b0eeb863_indent(_self_.get()._field_oc);
	};
	_1b1c6aa21_scope(_self_, (*(_11939_it)).get()._field_Scope);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, _12113_next);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b0eeb863_indent(_self_.get()._field_oc);
	if (((*(_11939_it)).get()._field_KeyA != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, static__1b1c86454_var((*(_11939_it)).get()._field_KeyA));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1b0eeb863_indent(_self_.get()._field_oc);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b0eeb269_write(_self_.get()._field_oc, _12013_begin);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c869d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11939_it))))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c65d90_rangeHashmapIter(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ad80_RangeIter>* _18241_it) {
	jule::Str _18313_begin = static__1b1c8671d_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18241_it)))));;
	jule::Str _18413_next = static__1b1c86ca1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18241_it)))));;
	jule::Bool _18617_ref = false;;
	_1b47d4576_iterHead(_self_, _18241_it, &(_18617_ref), &(_18313_begin));
	if (((*(_18241_it)).get()._field_KeyA != nullptr)) {
		_1b1003ddc_varInitExpr(_self_.get()._field_oc, &((*(_18241_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b0eeb863_indent(_self_.get()._field_oc);
	};
	if (((*(_18241_it)).get()._field_KeyB != nullptr)) {
		_1b1003ddc_varInitExpr(_self_.get()._field_oc, &((*(_18241_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b0eeb863_indent(_self_.get()._field_oc);
	};
	_1b1c6aa21_scope(_self_, (*(_18241_it)).get()._field_Scope);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, _18413_next);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b0eeb269_write(_self_.get()._field_oc, _18313_begin);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c869d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18241_it))))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c66148_ifCase(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b0549466_If> _22530_i) {
	if ((_22530_i.get()._field_Expr != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22530_i.get()._field_Expr);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1b1c6aa21_scope(_self_, _22530_i.get()._field_Scope);
}



inline void _1b1c66401_conditional(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b0549b81_Conditional> _23435_c) {
	jule::Bool _23517_writed = false;;
	{
		auto expr = &(_23435_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e7aa10:;
		if (it != expr_end) {
			jule::Ptr<_1b0549466_If> _23621_elif = *it;
			{
				if ((_23621_elif == nullptr)) {
					goto _iter_next_1b2e7aa10;
				};
				if (_23517_writed) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23517_writed=true;
				_1b1c66148_ifCase(_self_, _23621_elif);
			}
			_iter_next_1b2e7aa10:;
			++it;
			goto _iter_begin_1b2e7aa10;
		}
		_iter_end_1b2e7aa10:;
	};
	if ((_23435_c.get()._field_Default != nullptr)) {
		if (_23517_writed) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1b1c6aa21_scope(_self_, _23435_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1b1c666a9_infIter(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b0549e7d_InfIter> _25431_it) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b1c6aa21_scope(_self_, _25431_it.get()._field_Scope);
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c86ca1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25431_it))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c869d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25431_it))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b1c66962_whileIter(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054a434_WhileIter> _27133_it) {
	if (((_27133_it.get()._field_Expr != nullptr) && (_27133_it.get()._field_Next == nullptr))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27133_it.get()._field_Expr);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27133_it.get()._field_Expr != nullptr)) {
			_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27133_it.get()._field_Expr);
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27133_it.get()._field_Next != nullptr)) {
			_1b1c6a4b0_st(_self_, _27133_it.get()._field_Next);
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b1c6aa21_scope(_self_, _27133_it.get()._field_Scope);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c86ca1_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27133_it))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c869d7_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27133_it))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b1c66c1a_rangeIter(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ad80_RangeIter> _30433_it) {
	{
		
		if ((_1b064b205_Slc(_30433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3ed4051:;
			{
				_1b1c65ad7_rangeIndexIter(_self_, &(_30433_it));
			}
		}
		else if ((_1b064ae6e_Arr(_30433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3ed3c21:;
			{
				_1b1c65ad7_rangeIndexIter(_self_, &(_30433_it));
			}
		}
		else if ((_1b064bc3e_Map(_30433_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b3ed3c87:;
			{
				_1b1c65d90_rangeHashmapIter(_self_, &(_30433_it));
			}
		}
		else {
			_case_begin_1b3ed3baa:;
			{
				_1b1c65ad7_rangeIndexIter(_self_, &(_30433_it));
			}
		}
		_match_end_1b3ed3ade:;
	};
}



inline void _1b1c66ec3_cont(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054b215_ContSt> _31724_c) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c86ca1_iterNext(_31724_c.get()._field_It));
}



inline void _1b1c6727b_label(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054b8db_Label> _32225_l) {
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c8706a_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32225_l))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1b1c67534_gotoSt(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054bcb5_GotoSt> _32726_gt) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c8706a_label(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_32726_gt.get()._field_Label))));
}



inline void _1b1c677dc_postfix(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054c18e_Postfix> _33231_p) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33231_p.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1b0eeb269_write(_self_.get()._field_oc, _33231_p.get()._field_Op);
}



inline void _1b1c67a95_assign(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054c645_Assign> _33930_a) {
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33930_a.get()._field_L.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, _33930_a.get()._field_Op.get()._field_Kind);
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33930_a.get()._field_R.get()._field_Model);
}



inline void _1b1c67d4d_mapLookupAssign(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ca1e_MultiAssign>* _34540_a) {
	jule::Ptr<_1b04ec88c_IndexingExprModel> _34617_iem = (*(_34540_a)).get()._field_R.cast_ptr<_1b04ec88c_IndexingExprModel>(&__jule_any_type46);;
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34617_iem.get()._field_Expr.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34617_iem.get()._field_Index.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34540_a)).get()._field_L[0LL] != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34540_a)).get()._field_L[0LL].get()._field_Model);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34540_a)).get()._field_L[1LL] != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34540_a)).get()._field_L[1LL].get()._field_Model);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c68106_multiAssignTup(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ca1e_MultiAssign>* _36839_a) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1b05010aa_TupleExprModel> _37217_tup = (*(_36839_a)).get()._field_R.cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88);;
	{
		auto expr = &(_37217_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ee2dd9:;
		if (it != expr_end) {
			jule::I64 _37414_i = it - expr->begin();
			jule::Ptr<_1b0612672_Data> _37421_r = *it;
			{
				_1b0eeb863_indent(_self_.get()._field_oc);
				jule::Ptr<_1b0612672_Data> _37621_l = (*(_36839_a)).get()._field_L[_37414_i];;
				if ((_37621_l != nullptr)) {
					{
						auto &_match_expr{ _37621_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b3ee5518:;
							{
								jule::Ptr<_1b05ae1bd_Var> _38029_v = _37621_l.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
								if ((_38029_v.get()._field_Reference && (!(_1b05ae553_IsInitialized(_38029_v.ptr()))))) {
									_1b0eeb269_write(_self_.get()._field_oc, static__1b1c86454_var(_38029_v));
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37421_r.get()._field_Model);
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36839_a)).get()._field_L[_37414_i]=nullptr;
									goto _iter_next_1b3ee2dd9;
								};
							}
						}
						_match_end_1b3ee54b3:;
					};
					_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37621_l.get()._field_Kind));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1b0eeb269_write(_self_.get()._field_oc, static__1b1c847e8_toOut(&(_1b1c64773_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37414_i))));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37421_r.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b3ee2dd9:;
			++it;
			_37414_i++;
			goto _iter_begin_1b3ee2dd9;
		}
		_iter_end_1b3ee2dd9:;
	};
	{
		auto expr = &((*(_36839_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ee962c:;
		if (it != expr_end) {
			jule::I64 _40114_i = it - expr->begin();
			jule::Ptr<_1b0612672_Data> _40121_l = *it;
			{
				if ((_40121_l == nullptr)) {
					goto _iter_next_1b3ee962c;
				};
				_1b0eeb863_indent(_self_.get()._field_oc);
				_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40121_l.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b0eeb269_write(_self_.get()._field_oc, static__1b1c847e8_toOut(&(_1b1c64773_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40114_i))));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b3ee962c:;
			++it;
			_40114_i++;
			goto _iter_begin_1b3ee962c;
		}
		_iter_end_1b3ee962c:;
	};
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b1c683ae_multiAssignFn(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ca1e_MultiAssign>* _41738_a) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	jule::Ptr<_1b04ec00c_FnCallExprModel> _42217_f = (*(_41738_a)).get()._field_R.cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35);;
	_1b10162d9_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42217_f.get()._field_Func.get()._field_Result));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41738_a)).get()._field_R);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41738_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49a4779:;
		if (it != expr_end) {
			jule::I64 _42814_i = it - expr->begin();
			jule::Ptr<_1b0612672_Data> _42821_l = *it;
			{
				if ((_42821_l != nullptr)) {
					_1b0eeb863_indent(_self_.get()._field_oc);
					_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42821_l.get()._field_Model);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_42814_i));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1b49a4779:;
			++it;
			_42814_i++;
			goto _iter_begin_1b49a4779;
		}
		_iter_end_1b49a4779:;
	};
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b1c68667_multiAssign(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054ca1e_MultiAssign> _44335_a) {
	{
		auto &_match_expr{ _44335_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b49a8272:;
			{
				_1b1c67d4d_mapLookupAssign(_self_, &(_44335_a));
				return;;
			}
		}
		_match_end_1b49a821c:;
	};
	{
		auto &_match_expr{ _44335_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b49a8d66:;
			{
				_1b1c68106_multiAssignTup(_self_, &(_44335_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b49a8dcc:;
			{
				_1b1c683ae_multiAssignFn(_self_, &(_44335_a));
			}
		}
		else {
			_case_begin_1b49a87c2:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:457:13"));;
			}
		}
		_match_end_1b49a83a4:;
	};
}



inline jule::Fn<void(void)> _1b1c689a8_matchExpr(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054d17e_Match> _46133_m) {
	if ((!(_1b0613046_IsConst(_46133_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1ad3823a0_IsBool(_46133_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1ad37eca4_ReadBool(_46133_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46133_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1b1c68d1b_case(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054d17e_Match> _47128_m, jule::Ptr<_1b054dcb7_Case> _47143_c) {
	if (((_47143_c.get()._field_Exprs.len() != 0LL) && (!(_47128_m.get()._field_Comptime)))) {
		if (((_47128_m.get()._field_Cases.len() > 0LL) && (_47128_m.get()._field_Cases[0LL] == _47143_c))) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47143_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b49ad8e8:;
			if (it != expr_end) {
				jule::I64 _47818_i = it - expr->begin();
				jule::Ptr<_1b0612672_Data> _47825_expr = *it;
				{
					{
						
						if ((!(_47128_m.get()._field_TypeMatch))) {
							_case_begin_1b49b4316:;
							{
								jule::Fn<void(void)> _48125_caseExpr = _1b1c689a8_matchExpr(_self_, _47128_m);;
								if (_1b0613387_GoodOperand(_47128_m.get()._field_Expr.ptr(), &(_47825_expr))) {
									if ((_48125_caseExpr != nullptr)) {
										_48125_caseExpr();
										_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47825_expr.get()._field_Model);
								} else {
									_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47825_expr.get()._field_Model);
									if ((_48125_caseExpr != nullptr)) {
										_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48125_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b49aee8d:;
							{
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1b06477a6_TypeKind> _49729_tk = _47825_expr.get()._field_Model.cast_ptr<_1b06477a6_TypeKind>(&__jule_any_type90);;
								if ((_1b064b9a8_Trait(_47128_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1b1c6e53b_boolean(_self_.get()._field_oc.get()._field_ec, (_1b064a435_Sptr(_47825_expr.get()._field_Kind.ptr()) != nullptr));
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(static_cast<jule::I64>(_1b0eecd4d_findTypeOffset(_self_.get()._field_oc.ptr(), _1b064b9a8_Trait(_47128_m.get()._field_Expr.get()._field_Kind.ptr()), _47825_expr.get()._field_Kind))));
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50529_j = _1b0eebee5_pushAnyType(_self_.get()._field_oc, _49729_tk);;
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_50529_j));
								};
							}
						}
						_match_end_1b49aedc2:;
					};
					if (((_47143_c.get()._field_Exprs.len() - _47818_i) > 1LL)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1b49ad8e8:;
				++it;
				_47818_i++;
				goto _iter_begin_1b49ad8e8;
			}
			_iter_end_1b49ad8e8:;
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47128_m.get()._field_Default == _47143_c) && (_47128_m.get()._field_Cases.len() != 0LL))) {
		_1b0eeb863_indent(_self_.get()._field_oc);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c875ed_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47143_c))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47143_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1b0eeb863_indent(_self_.get()._field_oc);
		_1b1c6aa21_scope(_self_, _47143_c.get()._field_Scope);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c690c4_matchSt(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054d17e_Match> _53931_m) {
	if (((_53931_m.get()._field_Cases.len() == 0LL) && (_53931_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_53931_m.get()._field_Comptime && ((_53931_m.get()._field_Default == nullptr) || (_53931_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	if (((!(_53931_m.get()._field_Comptime)) && (!(_1b0613046_IsConst(_53931_m.get()._field_Expr.ptr()))))) {
		if ((_1b12026d4_Copy && _1b1c6b192_isCopyOptimizable(&(_53931_m.get()._field_Expr)))) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _53931_m.get()._field_Expr.get()._field_Model);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1b0eeb863_indent(_self_.get()._field_oc);
	};
	if ((_53931_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_53931_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b49c1972:;
			if (it != expr_end) {
				jule::Ptr<_1b054dcb7_Case> _56725_c = *it;
				{
					if ((_56725_c == nullptr)) {
						goto _iter_next_1b49c1972;
					};
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b0eeb863_indent(_self_.get()._field_oc);
					_1b1c68d1b_case(_self_, _53931_m, _56725_c);
				}
				_iter_next_1b49c1972:;
				++it;
				goto _iter_begin_1b49c1972;
			}
			_iter_end_1b49c1972:;
		};
	};
	if ((_53931_m.get()._field_Default != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b1c68d1b_case(_self_, _53931_m, _53931_m.get()._field_Default);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c87334_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_53931_m))));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c6937c_fallSt(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054e3b1_FallSt> _59426_f) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c875ed_caseBegin(_59426_f.get()._field_DestCase));
}



inline void _1b1c69635_breakSt(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054b5de_BreakSt> _59927_b) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_59927_b.get()._field_It != 0LLU)) {
		_1b0eeb269_write(_self_.get()._field_oc, static__1b1c869d7_iterEnd(_59927_b.get()._field_It));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, static__1b1c87334_matchEnd(_59927_b.get()._field_Mtch));
	};
}



inline void _1b1c698dd_setResult(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054e746_RetSt> _60833_r) {
	if ((_60833_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _60833_r.get()._field_Expr);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1b0eeb863_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1b0612672_Data>> _61617_datas = _60833_r.get()._field_Expr.cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
	{
		auto expr = &(_61617_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49caa9c:;
		if (it != expr_end) {
			jule::I64 _61713_i = it - expr->begin();
			jule::Ptr<_1b0612672_Data> _61716_data = *it;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_61713_i));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61716_data.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1b0eeb863_indent(_self_.get()._field_oc);
			}
			_iter_next_1b49caa9c:;
			++it;
			_61713_i++;
			goto _iter_begin_1b49caa9c;
		}
		_iter_end_1b49caa9c:;
	};
}



inline void _1b1c69b96_retSt(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b054e746_RetSt> _62729_r) {
	if (_1b0508d71_IsVoid(_62729_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62729_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62729_r.get()._field_Func.get()._field_Result));
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62729_r.get()._field_Expr);
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62729_r.get()._field_Expr);
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62729_r.get()._field_Expr != nullptr)) {
		_1b1c698dd_setResult(_self_, _62729_r);
	};
	if (_62729_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1b10162d9_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62729_r.get()._field_Func.get()._field_Result));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1b1c69e4e_var(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b05ae1bd_Var> _66327_v) {
	if ((!(_66327_v.get()._field_Constant))) {
		_1b1004195_var(_self_.get()._field_oc, _66327_v);
	};
}



inline void _1b1c6a207_mutSlicing(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b073e6e4_MutSlicingExprModel> _66934_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66934_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_1d36480ad_Production))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b0eed469_locInfo(_self_.get()._field_oc, &(_66934_m.get()._field_Token));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66934_m.get()._field_Left);
	if ((_66934_m.get()._field_Right != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _66934_m.get()._field_Right);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b1c6a4b0_st(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Any _68726_st) {
	if ((_68726_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68726_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b49d9b44:;
			{
				_1b1c6aa21_scope(_self_, _68726_st.cast_ptr<_1b0549048_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b49da529:;
			{
				_1b1c69e4e_var(_self_, _68726_st.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b49da590:;
			{
				_1b1c7b78a_model(_self_.get()._field_oc.get()._field_ec, _68726_st.cast_ptr<_1b0612672_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b49da606:;
			{
				_1b1c66401_conditional(_self_, _68726_st.cast_ptr<_1b0549b81_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b49da66c:;
			{
				_1b1c666a9_infIter(_self_, _68726_st.cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b49da6d3:;
			{
				_1b1c66962_whileIter(_self_, _68726_st.cast_ptr<_1b054a434_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b49da749:;
			{
				_1b1c66c1a_rangeIter(_self_, _68726_st.cast_ptr<_1b054ad80_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b49da7b0:;
			{
				_1b1c66ec3_cont(_self_, _68726_st.cast_ptr<_1b054b215_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b49da826:;
			{
				_1b1c6727b_label(_self_, _68726_st.cast_ptr<_1b054b8db_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b49da88c:;
			{
				_1b1c67534_gotoSt(_self_, _68726_st.cast_ptr<_1b054bcb5_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b49da903:;
			{
				_1b1c677dc_postfix(_self_, _68726_st.cast_ptr<_1b054c18e_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b49da969:;
			{
				_1b1c67a95_assign(_self_, _68726_st.cast_ptr<_1b054c645_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b49da9d0:;
			{
				_1b1c68667_multiAssign(_self_, _68726_st.cast_ptr<_1b054ca1e_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b49daa46:;
			{
				_1b1c690c4_matchSt(_self_, _68726_st.cast_ptr<_1b054d17e_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b49daaac:;
			{
				_1b1c6937c_fallSt(_self_, _68726_st.cast_ptr<_1b054e3b1_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b49dab23:;
			{
				_1b1c69635_breakSt(_self_, _68726_st.cast_ptr<_1b054b5de_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b49dab89:;
			{
				_1b1c69b96_retSt(_self_, _68726_st.cast_ptr<_1b054e746_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b49dac00:;
			{
				_1b1c7926b_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68726_st.cast_ptr<_1b0740173_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b49dac66:;
			{
				_1b1c79524_appendToSlice(_self_.get()._field_oc.get()._field_ec, _68726_st.cast_ptr<_1b074054c_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b49daccc:;
			{
				_1b1c6a207_mutSlicing(_self_, _68726_st.cast_ptr<_1b073e6e4_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else {
			_case_begin_1b49d9bee:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b49d979d:;
	};
}



inline void _1b1c6a768_scopeStmts(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b0549048_Scope>* _73735_s) {
	{
		auto expr = &((*(_73735_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b49e4c5e:;
		if (it != expr_end) {
			jule::Any _73821_st = *it;
			{
				_1b0eeb863_indent(_self_.get()._field_oc);
				_1b1c6a4b0_st(_self_, _73821_st);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b49e4c5e:;
			++it;
			goto _iter_begin_1b49e4c5e;
		}
		_iter_end_1b49e4c5e:;
	};
}



inline void _1b1c6aa21_scope(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b0549048_Scope> _74629_s) {
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	if (_74629_s.get()._field_Deferred) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b1c6a768_scopeStmts(_self_, &(_74629_s));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_74629_s.get()._field_Deferred) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1b1c6acc9_funcScope(jule::Ptr<_1b1c64d06_scopeCoder> _self_, jule::Ptr<_1b050b802_FnIns> _76233_f) {
	if ((_76233_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	if ((!(_1b0508d71_IsVoid(_76233_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1b065571a_Tuple> _76921_tup = _1b064bec5_Tup(_76233_f.get()._field_Result.ptr());;
		if ((_76921_tup != nullptr)) {
			_1b0eeb863_indent(_self_.get()._field_oc);
			_1b1015b13_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _76921_tup);
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_76921_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b49ea726:;
				if (it != expr_end) {
					jule::I64 _77422_i = it - expr->begin();
					jule::Ptr<_1b06477a6_TypeKind> _77429_t = *it;
					{
						if (_1b10186d7_shouldInitialized(&(_77429_t))) {
							_1b0eeb863_indent(_self_.get()._field_oc);
							_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_77422_i));
							_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1b1c7ba43_initExpr(_self_.get()._field_oc.get()._field_ec, _77429_t);
							_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1b49ea726:;
					++it;
					_77422_i++;
					goto _iter_begin_1b49ea726;
				}
				_iter_end_1b49ea726:;
			};
		} else if ((_76233_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1b0eeb863_indent(_self_.get()._field_oc);
			_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76233_f.get()._field_Result));
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1b10186d7_shouldInitialized(&(_76233_f.get()._field_Result))) {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b1c7ba43_initExpr(_self_.get()._field_oc.get()._field_ec, _76233_f.get()._field_Result);
			};
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1b1c6a768_scopeStmts(_self_, &(_76233_f.get()._field_Scope));
	if ((_76233_f.get()._field_Decl.get()._field_Exceptional && _1b0508d71_IsVoid(_76233_f.get()._field_Decl.ptr()))) {
		_1b0eeb863_indent(_self_.get()._field_oc);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1b1c64d06_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b1c6db12_exprCoder> static__1b1c6deca_new(jule::Ptr<_1b0eeaab5_ObjectCoder>* _10624_oc) {
	return jule::new_ptr<_1b1c6db12_exprCoder>(_1b1c6db12_exprCoder{._field_oc=(*(_10624_oc))});;
}



inline void _1b1c6e283_string(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1ad37cdb2_Const>* _11227_c) {
	jule::Str _11313_content = _1ad38003a_ReadStr((*(_11227_c)).ptr());;
	if ((_11313_content.len() == 0LL)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Str _11813_len = _1ad36c5bb_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_11313_content.len())), 10LL);;
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c7c835_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _11313_content);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b0eeb269_write(_self_.get()._field_oc, _11813_len);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c6e53b_boolean(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Bool _12727_b) {
	if (_12727_b) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1b1c6e739_nilLit(jule::Ptr<_1b1c6db12_exprCoder> _self_) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1b1c6ea7a_ftoaSpecialCases(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::F64* _13937_x) {
	{
		
		if (_1ad32120c_IsNaN((*(_13937_x)))) {
			_case_begin_1b4a1ba77:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1ad321817_IsInf((*(_13937_x)), 1LL)) {
			_case_begin_1b4a1baee:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1ad321817_IsInf((*(_13937_x)), -1LL)) {
			_case_begin_1b4a1bb76:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b4a1b99a:;
			{
				return false;;
			}
		}
		_match_end_1b4a1b8ce:;
	};
	return true;;
}



inline void _1b1c6ed33_float32(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1ad37cdb2_Const>* _15328_c) {
	jule::F64 _15413_x = _1ad380a74_AsF64((*(_15328_c)).ptr());;
	if (_1b1c6ea7a_ftoaSpecialCases(_self_, &(_15413_x))) {
		return;;
	};
	{
		
		if ((_15413_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b4a1e805:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15413_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b4a1e86b:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b4a1e173:;
			{
				_1b1c7cbcb_ftoa(&(_self_.get()._field_oc.get()._field_Obj), _15413_x, 32LL);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1b4a1e11d:;
	};
}



inline void _1b1c700db_float64(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1ad37cdb2_Const>* _17228_c) {
	jule::F64 _17313_x = _1ad380a74_AsF64((*(_17228_c)).ptr());;
	if (_1b1c6ea7a_ftoaSpecialCases(_self_, &(_17313_x))) {
		return;;
	};
	{
		
		if ((_17313_x == jule::MAX_F64)) {
			_case_begin_1b4a222db:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17313_x == jule::MIN_F64)) {
			_case_begin_1b4a22352:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b4a21b59:;
			{
				_1b1c7cbcb_ftoa(&(_self_.get()._field_oc.get()._field_Obj), _17313_x, 64LL);
			}
		}
		_match_end_1b4a21b04:;
	};
}



inline void _1b1c70394_constant(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1ad37cdb2_Const> _19032_c) {
	{
		
		if (_1ad382636_IsStr(_19032_c.ptr())) {
			_case_begin_1b4a23b6c:;
			{
				_1b1c6e283_string(_self_, &(_19032_c));
			}
		}
		else if (_1ad3823a0_IsBool(_19032_c.ptr())) {
			_case_begin_1b4a23bd3:;
			{
				_1b1c6e53b_boolean(_self_, _1ad37eca4_ReadBool(_19032_c.ptr()));
			}
		}
		else if (_1ad3828bc_IsF64(_19032_c.ptr())) {
			_case_begin_1b4a23c49:;
			{
				{
					
					if (_19032_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1b4a25db1:;
						{
							_1b1c6ed33_float32(_self_, &(_19032_c));
						}
					}
					else {
						_case_begin_1b4a2592c:;
						{
							_1b1c700db_float64(_self_, &(_19032_c));
						}
					}
					_match_end_1b4a25861:;
				};
			}
		}
		else if (_1ad381d83_IsI64(_19032_c.ptr())) {
			_case_begin_1b4a23cb0:;
			{
				_1b1c7ceb7_itoa(&(_self_.get()._field_oc.get()._field_Obj), static_cast<jule::I64>(_1ad37e787_ReadI64(_19032_c.ptr())));
			}
		}
		else if (_1ad382119_IsU64(_19032_c.ptr())) {
			_case_begin_1b4a2450d:;
			{
				_1b1c7d2a3_utoa(&(_self_.get()._field_oc.get()._field_Obj), static_cast<jule::U64>(_1ad37ea1d_ReadU64(_19032_c.ptr())));
			}
		}
		else if (_1ad382b53_IsNil(_19032_c.ptr())) {
			_case_begin_1b4a24574:;
			{
				_1b1c6e739_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b4a23b06:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b4a23a3a:;
	};
}



inline void _1b1c707b2_divByZeroBinary(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1aa49b1d1_Token>* _21436_op, jule::Ptr<_1b04e9a32_OperandExprModel>* _21453_l, jule::Ptr<_1b04e9a32_OperandExprModel>* _21480_r) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21436_op)).get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b4a288a8:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == static_cast<jule::U64>(64LLU) || _match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b4a2891e:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1b4a28853:;
	};
	if ((!(_1d36480ad_Production))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b0eed469_locInfo(_self_.get()._field_oc, _21436_op);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b1c71e56_possibleRefExpr(_self_, (*(_21453_l)).get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b1c71e56_possibleRefExpr(_self_, (*(_21480_r)).get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c70a6a_unsafeBinary(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ea02c_BinopExprModel> _23636_m) {
	if (((_23636_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(50LLU)) || (_23636_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(51LLU)))) {
		if (_1b1c7dec9_isAny(&(_23636_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1b0648895_IsNil(_23636_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1b1c7dec9_isAny(&(_23636_m.get()._field_Right.get()._field_Kind)))))) {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
				if ((_23636_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(51LLU))) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _24625_i = _1b0eebee5_pushAnyType(_self_.get()._field_oc, _23636_m.get()._field_Right.get()._field_Kind);;
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_24625_i));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1b1c71e56_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b1c71e56_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c71e56_possibleRefExpr(_self_, _23636_m.get()._field_Left.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b0eeb269_write(_self_.get()._field_oc, _23636_m.get()._field_Op.get()._field_Kind);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b1c71e56_possibleRefExpr(_self_, _23636_m.get()._field_Right.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c70d23_binary(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ea02c_BinopExprModel> _26730_m) {
	{
		auto &_match_expr{ _26730_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(63LLU) || _match_expr == static_cast<jule::U64>(64LLU)) {
			_case_begin_1b4a3450c:;
			{
				if ((_1b064b722_Struct(_26730_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1b1c707b2_divByZeroBinary(_self_, &(_26730_m.get()._field_Op), &(_26730_m.get()._field_Left), &(_26730_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1b4a34463:;
	};
	_1b1c70a6a_unsafeBinary(_self_, _26730_m);
}



inline void _1b1c710cb_var(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05ae1bd_Var> _27927_m) {
	if (_27927_m.get()._field_Binded) {
		jule::Ptr<_1b04884b5_Directive> _28117_d = _1b1018055_findDirective(&(_27927_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28117_d != nullptr)) {
			_1b0eeb269_write(_self_.get()._field_oc, _1b10083b9_concatAllParts(_28117_d.get()._field_Args));
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c86454_var(_27927_m));
}



inline void _1b1c71384_structureIns(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04e5951_StructIns> _29036_m) {
	_1b0eeb269_write(_self_.get()._field_oc, _1b100e8cb_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29036_m));
}



inline void _1b1c7163c_unary(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ea406_UnaryExprModel> _29429_m) {
	{
		auto &_match_expr{ _29429_m.get()._field_Op.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(67LLU)) {
			_case_begin_1b4a38cc5:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1b1c71e56_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(62LLU)) {
			_case_begin_1b4a38d4c:;
			{
				if ((_1d36480ad_Production || (_1b064a435_Sptr(_29429_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b4a38c1a;
				};
				_1b1c71e56_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1b0eed469_locInfo(_self_.get()._field_oc, &(_29429_m.get()._field_Op));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1b4a38c1a:;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b0eeb269_write(_self_.get()._field_oc, _29429_m.get()._field_Op.get()._field_Kind);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c71e56_possibleRefExpr(_self_, _29429_m.get()._field_Expr.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b1c718e5_structureLit(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04eacca_StructLitExprModel> _31836_m) {
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c85dc1_structureIns(&(_31836_m.get()._field_Strct)));
	if (_31836_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_31836_m.get()._field_Args.len() > 0LL)) {
		_julec_label_1b4a404d5:;
		{
			auto expr = &(_31836_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4a40606:;
			if (it != expr_end) {
				jule::I64 _33117_i = it - expr->begin();
				jule::Ptr<_1b04e4da1_FieldIns> _33120_f = *it;
				{
					{
						auto expr = &(_31836_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b4a41272:;
						if (it != expr_end) {
							jule::Ptr<_1b04ea934_StructArgExprModel> _33229_arg = *it;
							{
								if ((_33229_arg.get()._field_Field == _33120_f)) {
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1b0eeb269_write(_self_.get()._field_oc, static__1b1c8618a_field(&(_33229_arg.get()._field_Field.get()._field_Decl)));
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1b1c71e56_possibleRefExpr(_self_, _33229_arg.get()._field_Expr.get()._field_Model);
									if (((_31836_m.get()._field_Strct.get()._field_Fields.len() - _33117_i) > 1LL)) {
										_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1b4a40606;
								};
							}
							_iter_next_1b4a41272:;
							++it;
							goto _iter_begin_1b4a41272;
						}
						_iter_end_1b4a41272:;
					};
				}
				_iter_next_1b4a40606:;
				++it;
				_33117_i++;
				goto _iter_begin_1b4a40606;
			}
			_iter_end_1b4a40606:;
		};
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c71b9d_allocStructure(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04eb0c7_AllocStructLitExprModel> _34938_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c85dc1_structureIns(&(_34938_m.get()._field_Lit.get()._field_Strct)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b1c718e5_structureLit(_self_, _34938_m.get()._field_Lit);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c71e56_possibleRefExpr(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Any _35735_expr) {
	{
		auto &_match_expr{ _35735_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4a4651e:;
			{
				jule::Ptr<_1b05ae1bd_Var> _36017_v = _35735_expr.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
				if (_36017_v.get()._field_Reference) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1b1c7b78a_model(_self_, _35735_expr);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1b4a464b9:;
	};
	_1b1c7b78a_model(_self_, _35735_expr);
}



inline void _1b1c72374_castTraitFromTrait(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04eb65a_CastingExprModel>* _37143_m, jule::Ptr<_1b051bb97_Trait> _37169_t1, jule::Ptr<_1b051bb97_Trait> _37185_t2) {
	_1b1c71e56_possibleRefExpr(_self_, (*(_37143_m)).get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c85574_traitDecl(_37169_t1));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b0eed1b1_pushAndWriteMaskMapper(_self_.get()._field_oc, _37169_t1, _37185_t2);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c7262c_casting(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04eb65a_CastingExprModel> _38631_m) {
	{
		
		if (_1b1c7dec9_isAny(&(_38631_m.get()._field_Kind))) {
			_case_begin_1b4a4a6aa:;
			{
				if (_1b0648895_IsNil(_38631_m.get()._field_ExprKind.ptr())) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1b064abd8_TypeEnum(_38631_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
					return;;
				};
				jule::I64 _39717_i = _1b0eebee5_pushAnyType(_self_.get()._field_oc, _38631_m.get()._field_ExprKind);;
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _38631_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b4a4bd82:;
						{
							jule::Ptr<_1b0650627_Prim> _40121_prim = _1b064a19e_Prim(_38631_m.get()._field_ExprKind.ptr());;
							if (((_40121_prim != nullptr) && _1ad37c1ad_IsInt(_40121_prim.get()._field_Kind))) {
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1b0eeb269_write(_self_.get()._field_oc, _1b100bb4d_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40121_prim));
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1b4a4d1a2;
							};
							goto _case_begin_1b4a4d207;
						}
					}
					else {
						_case_begin_1b4a4d207:;
						{
							_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
						}
					}
					_match_end_1b4a4d1a2:;
				};
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_39717_i));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1b1c7dec9_isAny(&(_38631_m.get()._field_ExprKind))) {
			_case_begin_1b4a4a732:;
			{
				_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1b064a435_Sptr(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1b064a435_Sptr(_38631_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				};
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1d36480ad_Production))) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b0eed469_locInfo(_self_.get()._field_oc, &(_38631_m.get()._field_Token));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(static_cast<jule::I64>(_1b0eebee5_pushAnyType(_self_.get()._field_oc, _38631_m.get()._field_Kind))));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1b064a6bb_Ptr(_38631_m.get()._field_ExprKind.ptr()) != nullptr) || (_1b064a6bb_Ptr(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4a4a7a9:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1b064b9a8_Trait(_38631_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b4a4a831:;
			{
				if ((_1b064b9a8_Trait(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b1c72374_castTraitFromTrait(_self_, &(_38631_m), _1b064b9a8_Trait(_38631_m.get()._field_Kind.ptr()), _1b064b9a8_Trait(_38631_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1b064a435_Sptr(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1b064a435_Sptr(_38631_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				};
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_1d36480ad_Production))) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b0eed469_locInfo(_self_.get()._field_oc, &(_38631_m.get()._field_Token));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(static_cast<jule::I64>(_1b0eecd4d_findTypeOffset(_self_.get()._field_oc.ptr(), _1b064b9a8_Trait(_38631_m.get()._field_ExprKind.ptr()), _38631_m.get()._field_Kind))));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1b064b9a8_Trait(_38631_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4a4a8a8:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(static_cast<jule::I64>(_1b0eecd4d_findTypeOffset(_self_.get()._field_oc.ptr(), _1b064b9a8_Trait(_38631_m.get()._field_Kind.ptr()), _38631_m.get()._field_ExprKind))));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1b4a4a567:;
	};
	jule::Ptr<_1b0650627_Prim> _47813_prim = _1b064a19e_Prim(_38631_m.get()._field_Kind.ptr());;
	jule::Ptr<_1b0650627_Prim> _47913_eprim = _1b064a19e_Prim(_38631_m.get()._field_ExprKind.ptr());;
	if ((((_47913_eprim != nullptr) && (_47813_prim != nullptr)) && _1b0653aae_IsStr(_47813_prim.ptr()))) {
		if (_1b065201e_IsU8(_47913_eprim.ptr())) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _38631_m.get()._field_Kind));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b1c71e56_possibleRefExpr(_self_, _38631_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c728d5_models(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Slice<jule::Any> _49730_args) {
	if ((_49730_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_49730_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a66ee0:;
		if (it != expr_end) {
			jule::I64 _50114_i = it - expr->begin();
			jule::Any _50121_a = *it;
			{
				_1b1c71e56_possibleRefExpr(_self_, _50121_a);
				if (((_49730_args.len() - _50114_i) > 1LL)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b4a66ee0:;
			++it;
			_50114_i++;
			goto _iter_begin_1b4a66ee0;
		}
		_iter_end_1b4a66ee0:;
	};
}



inline void _1b1c72b8d_args(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec00c_FnCallExprModel>* _50929_m) {
	jule::I64 _51017_j = 0LL;;
	if (((((*(_50929_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_50929_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_50929_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1b0507545_IsSelf((*(_50929_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51017_j)++;
	};
	{
		auto expr = &((*(_50929_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a695db:;
		if (it != expr_end) {
			jule::I64 _51513_i = it - expr->begin();
			jule::Any _51516_arg = *it;
			{
				jule::Ptr<_1b050a856_ParamIns> _51617_p = (*(_50929_m)).get()._field_Func.get()._field_Params[_51017_j];;
				if (((_51617_p.get()._field_Decl != nullptr) && _51617_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _51516_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b4a6b940:;
							{
								jule::Ptr<_1b05ae1bd_Var> _52025_v = _51516_arg.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
								if (_52025_v.get()._field_Reference) {
									_1b1c7b78a_model(_self_, _51516_arg);
									goto _julec_label_1b4a6e239;
								};
							}
						}
						_match_end_1b4a6b8da:;
					};
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b1c7b78a_model(_self_, _51516_arg);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_1b4a6e239;
				};
				_1b1c71e56_possibleRefExpr(_self_, _51516_arg);
				_julec_label_1b4a6e239:;
				if ((((*(_50929_m)).get()._field_Args.len() - _51513_i) > 1LL)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51017_j)++;
			}
			_iter_next_1b4a695db:;
			++it;
			_51513_i++;
			goto _iter_begin_1b4a695db;
		}
		_iter_end_1b4a695db:;
	};
}



inline void _1b1c72e46_modelForCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Any _54036_expr) {
	{
		auto &_match_expr{ _54036_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b4a707ac:;
			{
				_1b1c766db_funcIns(_self_, _54036_expr.cast_ptr<_1b050b802_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b4a70834:;
			{
				jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _54621_ssie = _54036_expr.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_54621_ssie.get()._field_Method != nullptr)) {
					_1b1c766db_funcIns(_self_, _54621_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1b4a70746:;
	};
	_1b1c71e56_possibleRefExpr(_self_, _54036_expr);
}



inline void _1b1c731ee_pushCallInf(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec00c_FnCallExprModel>* _55532_m) {
	if ((_1d36480ad_Production || ((!((*(_55532_m)).get()._field_Func.get()._field_Anon)) && (!(_1b1c7d946_isBuiltinCallHasDebuginf(_55532_m)))))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_55532_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_55532_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b4a73738:;
				{
					if ((*(_55532_m)).get()._field_Expr.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1b4a7397a;
				}
			}
			else {
				_case_begin_1b4a7397a:;
				{
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1b4a73925:;
		};
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1b0eed469_locInfo(_self_.get()._field_oc, &((*(_55532_m)).get()._field_Token));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_55532_m)).get()._field_Args.len() != 0LL)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1b1c73540_isWrapped(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec00c_FnCallExprModel>* _58034_m) {
	if ((((!(_1b050cc87_IsBuiltin((*(_58034_m)).get()._field_Func.ptr()))) && ((*(_58034_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1b0507545_IsSelf((*(_58034_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58034_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b4a77000:;
				{
					jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _58425_ssie = (*(_58034_m)).get()._field_Expr.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1b05077cb_IsRef((*(_58034_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1b064a435_Sptr(_58425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b4a789c4:;
							{
								goto _match_end_1b4a77c6a;
							}
						}
						else {
							_case_begin_1b4a77cd1:;
							{
								if ((_1b064b722_Struct(_58425_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_58425_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1b0eeb269_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1b1c7b78a_model(_self_, _58425_ssie.get()._field_Expr.get()._field_Model);
										_1b0eeb269_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b4a77c6a:;
					};
				}
			}
			_match_end_1b4a76e9a:;
		};
	};
	return false;;
}



inline void _1b1c737e8_pureFuncCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec00c_FnCallExprModel>* _60437_m) {
	jule::Bool _60513_wrapped = _1b1c73540_isWrapped(_self_, _60437_m);;
	_1b1c72e46_modelForCall(_self_, (*(_60437_m)).get()._field_Expr);
	if ((!(_1b050cc87_IsBuiltin((*(_60437_m)).get()._field_Func.ptr())))) {
		if (((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_60437_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1b101841d_hasDirective(&((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_60437_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4a7cba4:;
					if (it != expr_end) {
						jule::I64 _61126_i = it - expr->begin();
						jule::Ptr<_1b0645dc0_InsGeneric> _61133_g = *it;
						{
							_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61133_g.get()._field_Kind));
							if ((((*(_60437_m)).get()._field_Func.get()._field_Generics.len() - _61126_i) > 1LL)) {
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1b4a7cba4:;
						++it;
						_61126_i++;
						goto _iter_begin_1b4a7cba4;
					}
					_iter_end_1b4a7cba4:;
				};
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1b1c731ee_pushCallInf(_self_, _60437_m);
	jule::Bool _62217_locinfo = false;;
	if ((((!(_1b050cc87_IsBuiltin((*(_60437_m)).get()._field_Func.ptr()))) && ((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1b0507545_IsSelf((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_60437_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b4a8157b:;
				{
					jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _62625_ssie = (*(_60437_m)).get()._field_Expr.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1b05077cb_IsRef((*(_60437_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1b4a84e86:;
							{
								_1b1c71e56_possibleRefExpr(_self_, _62625_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1b064a435_Sptr(_62625_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b4a84eec:;
							{
								_1b1c71e56_possibleRefExpr(_self_, _62625_ssie.get()._field_Expr.get()._field_Model);
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_1d36480ad_Production))) {
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1b0eed469_locInfo(_self_.get()._field_oc, &((*(_60437_m)).get()._field_Token));
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1b4a823e5:;
							{
								if ((_1b064b722_Struct(_62625_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _62625_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b4a82bba:;
											{
												jule::Ptr<_1b05ae1bd_Var> _64333_v = _62625_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
												if (_64333_v.get()._field_Reference) {
													goto _match_end_1b4a82ec8;
												};
												goto _case_begin_1b4a8302d;
											}
										}
										else {
											_case_begin_1b4a8302d:;
											{
												_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1b4a82ec8:;
									};
								};
								if (_60513_wrapped) {
									_1b0eeb269_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1b1c7b78a_model(_self_, _62625_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1b4a8237e:;
					};
					if (((*(_60437_m)).get()._field_Args.len() > 0LL)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1b4a815e2:;
				{
					_1b1c71e56_possibleRefExpr(_self_, (*(_60437_m)).get()._field_Expr.cast_ptr<_1b04ee20c_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_1d36480ad_Production))) {
						_62217_locinfo=true;
					};
					if (((*(_60437_m)).get()._field_Args.len() > 0LL)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1b4a81526:;
		};
	};
	_1b1c72b8d_args(_self_, _60437_m);
	if (_62217_locinfo) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1b0eed469_locInfo(_self_.get()._field_oc, &((*(_60437_m)).get()._field_Token));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_60513_wrapped) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1b1c73aa1_coFuncCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec00c_FnCallExprModel>* _68535_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1aa364275_StrBuilder _68817_head = static__1aa364594_New(32LL);;
	_1aa36d03c_WriteStr(&_68817_head, jule::Str("std::thread([", 13));
	if (((*(_68535_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		_1aa36d03c_WriteStr(&_68817_head, jule::Str("_self_", 6));
		if (((*(_68535_m)).get()._field_Args.len() > 0LL)) {
			_1aa36d03c_WriteStr(&_68817_head, jule::Str(", ", 2));
		};
	};
	{
		auto expr = &((*(_68535_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a8da3e:;
		if (it != expr_end) {
			jule::I64 _69613_i = it - expr->begin();
			jule::Any _69616_arg = *it;
			{
				if ((_69613_i > 0LL)) {
					_1aa36d03c_WriteStr(&_68817_head, jule::Str(", ", 2));
				};
				{
					auto &_match_expr{ _69616_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b4a90b40:;
						{
							jule::Ptr<_1b05ae1bd_Var> _70225_v = _69616_arg.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
							_1aa36d03c_WriteStr(&_68817_head, static__1b1c86454_var(_70225_v));
							goto _iter_next_1b4a8da3e;
						}
					}
					_match_end_1b4a9039d:;
				};
				jule::Str _70617_name = (jule::Str("_co_arg_", 8) + _1ad36c885_Itoa(_69613_i));;
				_1aa36d03c_WriteStr(&_68817_head, _70617_name);
				_1b0eeb863_indent(_self_.get()._field_oc);
				_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_68535_m)).get()._field_Func.get()._field_Params[_69613_i].get()._field_Kind));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_68535_m)).get()._field_Func.get()._field_Params[_69613_i].get()._field_Decl.get()._field_Reference) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1b0eeb269_write(_self_.get()._field_oc, _70617_name);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b1c71e56_possibleRefExpr(_self_, _69616_arg);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _71817_argS = jule::Any(_70617_name, &__jule_any_type5);;
				(*(_68535_m)).get()._field_Args[_69613_i]=(*(((jule::Any*)((&(_71817_argS))))));
			}
			_iter_next_1b4a8da3e:;
			++it;
			_69613_i++;
			goto _iter_begin_1b4a8da3e;
		}
		_iter_end_1b4a8da3e:;
	};
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1aa36cc84_Write(&_self_.get()._field_oc.get()._field_Obj, _1aa36e2d5_Buf(&_68817_head));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b1c737e8_pureFuncCall(_self_, _68535_m);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c73e14_writeUseExpr(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050b802_FnIns>* _73637_f, jule::Ptr<_1b0612672_Data> _73652_d) {
	if ((_1b064bec5_Tup(_73652_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b1c71e56_possibleRefExpr(_self_, _73652_d.get()._field_Model);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1b05010aa_TupleExprModel> _74217_tup = _73652_d.get()._field_Model.cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88);;
	_1b1015b13_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1b064bec5_Tup((*(_73637_f)).get()._field_Result.ptr()));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74217_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a98ce1:;
		if (it != expr_end) {
			jule::I64 _74513_i = it - expr->begin();
			jule::Ptr<_1b0612672_Data> _74516_data = *it;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_74513_i));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1b1c71e56_possibleRefExpr(_self_, _74516_data.get()._field_Model);
				if (((_74217_tup.get()._field_Datas.len() - _74513_i) > 1LL)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1b4a98ce1:;
			++it;
			_74513_i++;
			goto _iter_begin_1b4a98ce1;
		}
		_iter_end_1b4a98ce1:;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1b1c741bc_funcCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec00c_FnCallExprModel> _75732_m) {
	if (_75732_m.get()._field_IsCo) {
		_1b1c73aa1_coFuncCall(_self_, &(_75732_m));
		return;;
	};
	if (((_1b050cc87_IsBuiltin(_75732_m.get()._field_Func.ptr()) || (!(_75732_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_75732_m.get()._field_Except != nullptr) && (_75732_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1b1c737e8_pureFuncCall(_self_, &(_75732_m));
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1b1c737e8_pureFuncCall(_self_, &(_75732_m));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	if ((_75732_m.get()._field_Except != nullptr)) {
		if (((_75732_m.get()._field_Func.get()._field_Result == nullptr) || (!(_75732_m.get()._field_Assigned)))) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1b1c6aa21_scope(_self_.get()._field_oc.get()._field_sc, _75732_m.get()._field_Except);
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78321_forwarded = _1b1c7d67c_isForwarded(&(_75732_m.get()._field_Except));;
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78321_forwarded) {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _78825_stmt = _75732_m.get()._field_Except.get()._field_Stmts[(_75732_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _78825_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1b4aa5b11:;
					{
						_75732_m.get()._field_Except.get()._field_Stmts=_75732_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_75732_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1b0eeb467_addIndent(_self_.get()._field_oc);
						_1b1c6a768_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_75732_m.get()._field_Except));
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1b0eeb863_indent(_self_.get()._field_oc);
						_1b1c73e14_writeUseExpr(_self_, &(_75732_m.get()._field_Func), _78825_stmt.cast_ptr<_1b0612672_Data>(&__jule_any_type24));
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1b0eeb665_doneIndent(_self_.get()._field_oc);
						_1b0eeb863_indent(_self_.get()._field_oc);
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1b4aa5748:;
					{
						_1b1c6aa21_scope(_self_.get()._field_oc.get()._field_sc, _75732_m.get()._field_Except);
					}
				}
				_match_end_1b4aa56e3:;
			};
			if (_78321_forwarded) {
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1b1c7ba43_initExpr(_self_, _75732_m.get()._field_Func.get()._field_Result);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1b0eeb665_doneIndent(_self_.get()._field_oc);
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1b0eed469_locInfo(_self_.get()._field_oc, &(_75732_m.get()._field_Token));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1b0508d71_IsVoid(_75732_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1b0eeb863_indent(_self_.get()._field_oc);
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1b0eeb665_doneIndent(_self_.get()._field_oc);
	};
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b1c74475_slice(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec3d6_SliceExprModel> _82829_m) {
	if ((_82829_m.get()._field_Elems.len() == 0LL)) {
		_1b0eeb269_write(_self_.get()._field_oc, _1b100d435_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _82829_m.get()._field_ElemKind));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, _1b100d435_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _82829_m.get()._field_ElemKind));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1b1c728d5_models(_self_, _82829_m.get()._field_Elems);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b1c7472d_indexing(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ec88c_IndexingExprModel> _84032_m) {
	_1b1c71e56_possibleRefExpr(_self_, _84032_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_1d36480ad_Production || (_1b064a6bb_Ptr(_84032_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1b064bc3e_Map(_84032_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1b1c7dc10_isExprComesFromBind(&(_84032_m.get()._field_Expr))) {
			_case_begin_1b4ab0b93:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b1c71e56_possibleRefExpr(_self_, _84032_m.get()._field_Index.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b4ab12d1:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1b0eed469_locInfo(_self_.get()._field_oc, &(_84032_m.get()._field_Token));
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1b1c71e56_possibleRefExpr(_self_, _84032_m.get()._field_Index.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b4ab126a:;
	};
}



inline void _1b1c749d6_unsafeIndexing(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b073ecdd_UnsafeIndexingExprModel> _86038_m) {
	_1b1c71e56_possibleRefExpr(_self_, _86038_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_1d36480ad_Production || (_1b064a6bb_Ptr(_86038_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1b064bc3e_Map(_86038_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4ab49cc:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b1c71e56_possibleRefExpr(_self_, _86038_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b4ab51a3:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1b1c71e56_possibleRefExpr(_self_, _86038_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b4ab513c:;
	};
}



inline void _1b1c74c8e_anonFunc(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ecc66_AnonFnExprModel> _87732_m) {
	_1b0eeb269_write(_self_.get()._field_oc, _1b10111d5_func(_self_.get()._field_oc.get()._field_tc.ptr(), _87732_m.get()._field_Func));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1b1003a79_paramsIns(_self_.get()._field_oc, &(_87732_m.get()._field_Func.get()._field_Params));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1b1010a53_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_87732_m.get()._field_Func));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b1c6acc9_funcScope(_self_.get()._field_oc.get()._field_sc, _87732_m.get()._field_Func);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c75047_mapExpr(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ed5e6_MapExprModel> _88831_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _88831_m.get()._field_KeyKind));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _88831_m.get()._field_ValKind));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_88831_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_88831_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b4abd3dc:;
			if (it != expr_end) {
				jule::I64 _89518_i = it - expr->begin();
				jule::Ptr<_1b04ed140_KeyValPairExprModel> _89525_pair = *it;
				{
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1b1c71e56_possibleRefExpr(_self_, _89525_pair.get()._field_Key);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1b1c71e56_possibleRefExpr(_self_, _89525_pair.get()._field_Val);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_88831_m.get()._field_Entries.len() - _89518_i) > 1LL)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1b4abd3dc:;
				++it;
				_89518_i++;
				goto _iter_begin_1b4abd3dc;
			}
			_iter_end_1b4abd3dc:;
		};
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b1c75300_slicing(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04edb79_SlicingExprModel> _90931_m) {
	_1b1c71e56_possibleRefExpr(_self_, _90931_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_1d36480ad_Production))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b0eed469_locInfo(_self_.get()._field_oc, &(_90931_m.get()._field_Token));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b1c71e56_possibleRefExpr(_self_, _90931_m.get()._field_Left);
	if ((_90931_m.get()._field_Right != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b1c71e56_possibleRefExpr(_self_, _90931_m.get()._field_Right);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c755a8_traitSub(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04ee20c_TraitSubIdentExprModel> _92532_m) {
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c85574_traitDecl(_92532_m.get()._field_Trt));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1b1c71e56_possibleRefExpr(_self_, _92532_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c84ee1_func(&(_92532_m.get()._field_Method)));
}



inline void _1b1c75861_structureSub(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _93436_m) {
	_1b1c71e56_possibleRefExpr(_self_, _93436_m.get()._field_Expr.get()._field_Model);
	if ((_93436_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1b064a6bb_Ptr(_93436_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1b064a435_Sptr(_93436_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_1d36480ad_Production))) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1b0eed469_locInfo(_self_.get()._field_oc, &(_93436_m.get()._field_Token));
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c8618a_field(&(_93436_m.get()._field_Field.get()._field_Decl)));
}



inline void _1b1c75b19_commonIdent(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050072a_CommonIdentExprModel> _95531_m) {
	_1b0eeb269_write(_self_.get()._field_oc, _95531_m.get()._field_Ident);
}



inline void _1b1c75dc2_commonSub(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0500cad_CommonSubIdentExprModel> _95933_m) {
	_1b1c71e56_possibleRefExpr(_self_, _95933_m.get()._field_Expr);
	{
		
		if ((_1b064a6bb_Ptr(_95933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b4acb0cb:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1b064a435_Sptr(_95933_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b4acb6a3:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_1d36480ad_Production))) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b0eed469_locInfo(_self_.get()._field_oc, &(_95933_m.get()._field_Token));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1b4acb63c:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1b4acb5c6:;
	};
	_1b0eeb269_write(_self_.get()._field_oc, _95933_m.get()._field_Ident);
}



inline void _1b1c7617a_array(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050042d_ArrayExprModel> _97829_m) {
	_1b0eeb269_write(_self_.get()._field_oc, _1b100ec1c_array(_self_.get()._field_oc.get()._field_tc.ptr(), _97829_m.get()._field_Kind));
	if ((_97829_m.get()._field_Elems.len() == 0LL)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_97829_m.get()._field_Elems.len() == 2LL) && (_97829_m.get()._field_Elems[1LL] == nullptr))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b1c71e56_possibleRefExpr(_self_, _97829_m.get()._field_Elems[0LL]);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1b1c728d5_models(_self_, _97829_m.get()._field_Elems);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1b1c76433_funcInsCommon(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050b802_FnIns> _100137_m) {
	_1b0eeb269_write(_self_.get()._field_oc, _1b10111d5_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100137_m));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c766db_funcIns(_self_, _100137_m);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c766db_funcIns(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050b802_FnIns> _100831_m) {
	if (((_100831_m.get()._field_Decl != nullptr) && _100831_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_1b04884b5_Directive> _101017_d = _1b1018055_findDirective(&(_100831_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101017_d != nullptr)) {
			_1b0eeb269_write(_self_.get()._field_oc, _1b10083b9_concatAllParts(_101017_d.get()._field_Args));
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c852aa_funcIns(&(_100831_m)));
}



inline void _1b1c76994_tuple(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05010aa_TupleExprModel> _101929_m) {
	{
		auto expr = &(_101929_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b462e02a:;
		if (it != expr_end) {
			jule::I64 _102014_i = it - expr->begin();
			jule::Ptr<_1b0612672_Data> _102021_d = *it;
			{
				_1b1c71e56_possibleRefExpr(_self_, _102021_d.get()._field_Model);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_101929_m.get()._field_Datas.len() - _102014_i) > 1LL)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b0eeb863_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1b462e02a:;
			++it;
			_102014_i++;
			goto _iter_begin_1b462e02a;
		}
		_iter_end_1b462e02a:;
	};
}



inline void _1b1c76c4c_newCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0502034_BuiltinNewCallExprModel> _103031_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103031_m.get()._field_Kind));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103031_m.get()._field_Init != nullptr)) {
		_1b1c71e56_possibleRefExpr(_self_, _103031_m.get()._field_Init);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c77005_outCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0501484_BuiltinOutCallExprModel> _104031_m) {
	if ((_104031_m.get()._field_Debug && _1d36480ad_Production)) {
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1b1c71e56_possibleRefExpr(_self_, _104031_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c772ad_outlnCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050185d_BuiltinOutlnCallExprModel> _104933_m) {
	if ((_104933_m.get()._field_Debug && _1d36480ad_Production)) {
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b1c71e56_possibleRefExpr(_self_, _104933_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c77566_panicCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050240d_BuiltinPanicCallExprModel> _105833_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1b1c71e56_possibleRefExpr(_self_, _105833_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1b0eed469_locInfo(_self_.get()._field_oc, &(_105833_m.get()._field_Token));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b1c7781e_assertCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel> _106634_m) {
	if (_1d36480ad_Production) {
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1b1c71e56_possibleRefExpr(_self_, _106634_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1b1c7c835_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _106634_m.get()._field_Log);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1b0eed469_locInfo(_self_.get()._field_oc, &(_106634_m.get()._field_Token));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b1c77ac7_errorCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05045ec_BuiltinErrorCallExprModel> _107933_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1b0508d71_IsVoid(_107933_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _107933_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b463a90a:;
				{
					jule::Ptr<_1b05ae1bd_Var> _108421_v = _107933_m.get()._field_Err.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
					if (_108421_v.get()._field_Ident.equal("error", 5)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1b463a630:;
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1b10162d9_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_107933_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _107933_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b463d556:;
				{
					jule::Ptr<_1b05ae1bd_Var> _109621_v = _107933_m.get()._field_Err.get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
					if (_109621_v.get()._field_Ident.equal("error", 5)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1b463d501:;
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1b1c71e56_possibleRefExpr(_self_, _107933_m.get()._field_Err.get()._field_Model);
	jule::I64 _110513_i = _1b0eebee5_pushAnyType(_self_.get()._field_oc, _107933_m.get()._field_Err.get()._field_Kind);;
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_110513_i));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b1c77d80_copyCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0504223_BuiltinCopyCallExprModel> _111132_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1b1c71e56_possibleRefExpr(_self_, _111132_m.get()._field_Dest.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1b064a19e_Prim(_111132_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1b1c71e56_possibleRefExpr(_self_, _111132_m.get()._field_Src.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1b064a19e_Prim(_111132_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c78138_lenCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0503541_BuiltinLenCallExprModel> _112731_m) {
	_1b1c71e56_possibleRefExpr(_self_, _112731_m.get()._field_Expr.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1b1c783e1_capCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b050383d_BuiltinCapCallExprModel> _113231_m) {
	_1b1c71e56_possibleRefExpr(_self_, _113231_m.get()._field_Expr.get()._field_Model);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1b1c78699_deleteCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel> _113734_m) {
	_1b1c71e56_possibleRefExpr(_self_, _113734_m.get()._field_Dest.get()._field_Model);
	if ((_113734_m.get()._field_Key != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1b1c71e56_possibleRefExpr(_self_, _113734_m.get()._field_Key.get()._field_Model);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1b1c78952_makeCallSlice(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>* _114838_m) {
	jule::Ptr<_1b0654b26_Slc> _114917_slice = _1b064b205_Slc((*(_114838_m)).get()._field_Kind.ptr());;
	_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_114838_m)).get()._field_Kind));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b1c71e56_possibleRefExpr(_self_, (*(_114838_m)).get()._field_Len);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_114838_m)).get()._field_Cap != nullptr)) {
		_1b1c71e56_possibleRefExpr(_self_, (*(_114838_m)).get()._field_Cap);
	} else {
		_1b1c71e56_possibleRefExpr(_self_, (*(_114838_m)).get()._field_Len);
	};
	if (_1b10186d7_shouldInitialized(&(_114917_slice.get()._field_Elem))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b1c7ba43_initExpr(_self_, _114917_slice.get()._field_Elem);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c78c0a_makeCallStr(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel>* _116636_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b1c71e56_possibleRefExpr(_self_, (*(_116636_m)).get()._field_Len);
	if (((*(_116636_m)).get()._field_Cap != nullptr)) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b1c71e56_possibleRefExpr(_self_, (*(_116636_m)).get()._field_Cap);
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c78eb3_makeCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel> _117732_m) {
	if ((_1b064b205_Slc(_117732_m.get()._field_Kind.ptr()) != nullptr)) {
		_1b1c78952_makeCallSlice(_self_, &(_117732_m));
		return;;
	};
	_1b1c78c0a_makeCallStr(_self_, &(_117732_m));
}



inline void _1b1c7926b_pushToSlice(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0740173_PushToSliceExprModel> _118535_m) {
	;
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{ ", 2));
	_1b0eeb269_write(_self_.get()._field_oc, _1b100d435_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _118535_m.get()._field_Elems.get()._field_ElemKind));
	jule::Bool _119317_ptr = false;;
	{
		auto &_match_expr{ _118535_m.get()._field_Dest };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b4650dc6:;
			{
				jule::Ptr<_1b04ea406_UnaryExprModel> _119721_u = _118535_m.get()._field_Dest.cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74);;
				if ((_1b064a6bb_Ptr(_119721_u.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" *__jule_push_dest = ", 21));
					_1b1c71e56_possibleRefExpr(_self_, _119721_u.get()._field_Expr.get()._field_Model);
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("; ", 2));
					_119317_ptr=true;
					goto _match_end_1b465225c;
				};
				goto _case_begin_1b46522b2;
			}
		}
		else {
			_case_begin_1b46522b2:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" &__jule_push_dest = ", 21));
				_1b1c71e56_possibleRefExpr(_self_, _118535_m.get()._field_Dest);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("; ", 2));
			}
		}
		_match_end_1b465225c:;
	};
	if ((_118535_m.get()._field_Elems.get()._field_Elems.len() == 1LL)) {
		if (_119317_ptr) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->push(", 23));
		} else {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.push(", 22));
		};
		_1b1c71e56_possibleRefExpr(_self_, _118535_m.get()._field_Elems.get()._field_Elems[0LL]);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("); }", 4));
		return;;
	};
	if (_119317_ptr) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_push_dest.alloc_for_append(", 34));
	};
	_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(static_cast<jule::I64>(_118535_m.get()._field_Elems.get()._field_Elems.len())));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("); ", 3));
	{
		auto expr = &(_118535_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4656ddd:;
		if (it != expr_end) {
			jule::Any _123121_e = *it;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("__jule_push_dest", 16));
				if (_119317_ptr) {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("->__push(", 9));
				} else {
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				};
				_1b1c71e56_possibleRefExpr(_self_, _123121_e);
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("); ", 3));
			}
			_iter_next_1b4656ddd:;
			++it;
			goto _iter_begin_1b4656ddd;
		}
		_iter_end_1b4656ddd:;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b1c79524_appendToSlice(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b074054c_AppendToSliceExprModel> _124537_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b1c71e56_possibleRefExpr(_self_, _124537_m.get()._field_Dest);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	_1b1c71e56_possibleRefExpr(_self_, _124537_m.get()._field_Slice);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b1c797cc_appendCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0503244_BuiltinAppendCallExprModel> _125334_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1b1c71e56_possibleRefExpr(_self_, _125334_m.get()._field_Dest);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b1c71e56_possibleRefExpr(_self_, _125334_m.get()._field_Elements);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c79a85_cloneCall(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0501b5a_BuiltinCloneCallExprModel> _126133_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1b1c71e56_possibleRefExpr(_self_, _126133_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c79d3d_sizeof(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05048e9_SizeofExprModel> _126730_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1b1c71e56_possibleRefExpr(_self_, _126730_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c7a0e6_alignof(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0504be6_AlignofExprModel> _127331_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1b1c71e56_possibleRefExpr(_self_, _127331_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c7a39e_runeLit(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0504ee3_RuneExprModel> _127927_m) {
	if ((_127927_m.get()._field_Code <= 127LL)) {
		_1aa36d2e5_WriteByte(&_self_.get()._field_oc.get()._field_Obj, '\'');
		jule::Str _128221_b = _1b1c7c219_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_127927_m.get()._field_Code)));;
		if (_128221_b.equal("'", 1)) {
			_1aa36d2e5_WriteByte(&_self_.get()._field_oc.get()._field_Obj, '\\');
		};
		_1aa36d03c_WriteStr(&_self_.get()._field_oc.get()._field_Obj, _128221_b);
		_1aa36d2e5_WriteByte(&_self_.get()._field_oc.get()._field_Obj, '\'');
		return;;
	};
	_1b1c7ceb7_itoa(&(_self_.get()._field_oc.get()._field_Obj), static_cast<jule::I64>(static_cast<jule::I64>(_127927_m.get()._field_Code)));
}



inline void _1b1c7a657_structureStatic(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0500054_StructStaticIdentExprModel> _129339_m) {
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c852aa_funcIns(&(_129339_m.get()._field_Method)));
}



inline void _1b1c7a910_integratedToStr(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05052e0_IntegratedToStrExprModel> _129739_m) {
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1b1c71e56_possibleRefExpr(_self_, _129739_m.get()._field_Expr);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b1c7abb8_backendEmit(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05056b9_BackendEmitExprModel> _130335_m) {
	if ((_130335_m.get()._field_Exprs.len() == 0LL)) {
		_1b0eeb269_write(_self_.get()._field_oc, _130335_m.get()._field_Code);
		return;;
	};
	jule::I64 _130813_n = _1aa36dcb8_Len(&_self_.get()._field_oc.get()._field_Obj);;
	jule::Slice<jule::Any> _130917_args = jule::Slice<jule::Any>::alloc(_130335_m.get()._field_Exprs.len(), _130335_m.get()._field_Exprs.len());;
	{
		auto expr = &(_130335_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b466654b:;
		if (it != expr_end) {
			jule::I64 _131014_i = it - expr->begin();
			jule::Any _131021_expr = *it;
			{
				_1b1c71e56_possibleRefExpr(_self_, _131021_expr);
				jule::Slice<jule::U8> _131221_buf = _1aa36e2d5_Buf(&_self_.get()._field_oc.get()._field_Obj);;
				_130917_args[_131014_i]=jule::Any(static_cast<jule::Str>(_131221_buf.slice(_130813_n)), &__jule_any_type5);
				{
					_1aa36e58d_SetBuf(&_self_.get()._field_oc.get()._field_Obj, _131221_buf.slice(0LL, _130813_n));
				};
			}
			_iter_next_1b466654b:;
			++it;
			_131014_i++;
			goto _iter_begin_1b466654b;
		}
		_iter_end_1b466654b:;
	};
	_1b0eeb269_write(_self_.get()._field_oc, _1b072c68d_Format(_130335_m.get()._field_Code, _130917_args));
}



inline void _1b1c7ae71_free(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b05059b6_FreeExprModel> _131928_m) {
	_1b1c71e56_possibleRefExpr(_self_, _131928_m.get()._field_Expr);
	if (_1d364791a_RC) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1b1c7b229_strComp(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b073e11c_StrCompExprModel> _132831_m) {
	if (_132831_m.get()._field_NotEq) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Str _133213_s = _1ad38003a_ReadStr(_132831_m.get()._field_Right.ptr());;
	_1b1c71e56_possibleRefExpr(_self_, _132831_m.get()._field_Left);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1b1c7c835_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _133213_s);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(static_cast<jule::I64>(_133213_s.len())));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_132831_m.get()._field_NotEq) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b1c7b4d2_inlineStdInternalNosafeStobs(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b0740849_InlineStdInternalNosafeStobs> _134452_m) {
	_1b1c71e56_possibleRefExpr(_self_, _134452_m.get()._field_Str);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
}



inline void _1b1c7b78a_model(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Any _134929_m) {
	{
		auto &_match_expr{ _134929_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b4670c5e:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, _134929_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b46706ed:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _134929_m.cast_ptr<_1b06477a6_TypeKind>(&__jule_any_type90)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b467090c:;
			{
				_1b1c70394_constant(_self_, _134929_m.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4670973:;
			{
				_1b1c710cb_var(_self_, _134929_m.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b46709d9:;
			{
				_1b1c71384_structureIns(_self_, _134929_m.cast_ptr<_1b04e5951_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b4670a50:;
			{
				_1b1c76433_funcInsCommon(_self_, _134929_m.cast_ptr<_1b050b802_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b4671567:;
			{
				_1b1c70a6a_unsafeBinary(_self_, _134929_m.cast_ptr<_1b073e9e1_UnsafeBinopExprModel>(&__jule_any_type128).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b46715cd:;
			{
				_1b1c70d23_binary(_self_, _134929_m.cast_ptr<_1b04ea02c_BinopExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b4671655:;
			{
				_1b1c7163c_unary(_self_, _134929_m.cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b46716cc:;
			{
				_1b1c718e5_structureLit(_self_, _134929_m.cast_ptr<_1b04eacca_StructLitExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b4671754:;
			{
				_1b1c71b9d_allocStructure(_self_, _134929_m.cast_ptr<_1b04eb0c7_AllocStructLitExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b46717cb:;
			{
				_1b1c7262c_casting(_self_, _134929_m.cast_ptr<_1b04eb65a_CastingExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b4671853:;
			{
				_1b1c741bc_funcCall(_self_, _134929_m.cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1b46718ca:;
			{
				_1b1c74475_slice(_self_, _134929_m.cast_ptr<_1b04ec3d6_SliceExprModel>(&__jule_any_type83));
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b4671952:;
			{
				_1b1c7617a_array(_self_, _134929_m.cast_ptr<_1b050042d_ArrayExprModel>(&__jule_any_type91));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b46719c9:;
			{
				_1b1c749d6_unsafeIndexing(_self_, _134929_m.cast_ptr<_1b073ecdd_UnsafeIndexingExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b4671a51:;
			{
				_1b1c7472d_indexing(_self_, _134929_m.cast_ptr<_1b04ec88c_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b4671ac8:;
			{
				_1b1c74c8e_anonFunc(_self_, _134929_m.cast_ptr<_1b04ecc66_AnonFnExprModel>(&__jule_any_type104));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b4671b50:;
			{
				_1b1c75047_mapExpr(_self_, _134929_m.cast_ptr<_1b04ed5e6_MapExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b4671bc7:;
			{
				_1b1c75300_slicing(_self_, _134929_m.cast_ptr<_1b04edb79_SlicingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b4671c4e:;
			{
				_1b1c755a8_traitSub(_self_, _134929_m.cast_ptr<_1b04ee20c_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b4671cc6:;
			{
				_1b1c75861_structureSub(_self_, _134929_m.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b4671d4d:;
			{
				_1b1c75b19_commonIdent(_self_, _134929_m.cast_ptr<_1b050072a_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b4671dc5:;
			{
				_1b1c75dc2_commonSub(_self_, _134929_m.cast_ptr<_1b0500cad_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b4671e4c:;
			{
				_1b1c76994_tuple(_self_, _134929_m.cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b4671ec4:;
			{
				_1b1c77005_outCall(_self_, _134929_m.cast_ptr<_1b0501484_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b467204b:;
			{
				_1b1c772ad_outlnCall(_self_, _134929_m.cast_ptr<_1b050185d_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b46720c3:;
			{
				_1b1c76c4c_newCall(_self_, _134929_m.cast_ptr<_1b0502034_BuiltinNewCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b467214a:;
			{
				_1b1c77566_panicCall(_self_, _134929_m.cast_ptr<_1b050240d_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b46721c2:;
			{
				_1b1c7781e_assertCall(_self_, _134929_m.cast_ptr<_1b05028b4_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b4672249:;
			{
				_1b1c77ac7_errorCall(_self_, _134929_m.cast_ptr<_1b05045ec_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b46722c1:;
			{
				_1b1c78eb3_makeCall(_self_, _134929_m.cast_ptr<_1b0502d6a_BuiltinMakeCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b4672348:;
			{
				_1b1c797cc_appendCall(_self_, _134929_m.cast_ptr<_1b0503244_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b46723c0:;
			{
				_1b1c79a85_cloneCall(_self_, _134929_m.cast_ptr<_1b0501b5a_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b4672447:;
			{
				_1b1c77d80_copyCall(_self_, _134929_m.cast_ptr<_1b0504223_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b46724be:;
			{
				_1b1c78138_lenCall(_self_, _134929_m.cast_ptr<_1b0503541_BuiltinLenCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b4672546:;
			{
				_1b1c783e1_capCall(_self_, _134929_m.cast_ptr<_1b050383d_BuiltinCapCallExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b46725bd:;
			{
				_1b1c78699_deleteCall(_self_, _134929_m.cast_ptr<_1b0503eae_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b4672645:;
			{
				_1b1c79d3d_sizeof(_self_, _134929_m.cast_ptr<_1b05048e9_SizeofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b46726bc:;
			{
				_1b1c7a0e6_alignof(_self_, _134929_m.cast_ptr<_1b0504be6_AlignofExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b4672744:;
			{
				_1b1c7a39e_runeLit(_self_, _134929_m.cast_ptr<_1b0504ee3_RuneExprModel>(&__jule_any_type89));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b46727bb:;
			{
				_1b1c7a657_structureStatic(_self_, _134929_m.cast_ptr<_1b0500054_StructStaticIdentExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b4672843:;
			{
				_1b1c7a910_integratedToStr(_self_, _134929_m.cast_ptr<_1b05052e0_IntegratedToStrExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b46728ba:;
			{
				_1b1c7abb8_backendEmit(_self_, _134929_m.cast_ptr<_1b05056b9_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b4672942:;
			{
				_1b1c7ae71_free(_self_, _134929_m.cast_ptr<_1b05059b6_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b46729b9:;
			{
				_1b1c7b229_strComp(_self_, _134929_m.cast_ptr<_1b073e11c_StrCompExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b4672a41:;
			{
				_1b1c7b4d2_inlineStdInternalNosafeStobs(_self_, _134929_m.cast_ptr<_1b0740849_InlineStdInternalNosafeStobs>(&__jule_any_type130));
			}
		}
		else {
			_case_begin_1b4670896:;
			{
				_1b0eeb269_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b4670841:;
	};
}



inline void _1b1c7ba43_initExpr(jule::Ptr<_1b1c6db12_exprCoder> _self_, jule::Ptr<_1b06477a6_TypeKind> _145032_t) {
	if (_1b0649665_NilCompatible(_145032_t.ptr())) {
		if ((_1b064a6bb_Ptr(_145032_t.ptr()) != nullptr)) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1b065571a_Tuple> _146017_tup = _1b064bec5_Tup(_145032_t.ptr());;
	if ((_146017_tup != nullptr)) {
		_1b1015b13_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _146017_tup);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_146017_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b47ebe84:;
			if (it != expr_end) {
				jule::I64 _146418_i = it - expr->begin();
				jule::Ptr<_1b06477a6_TypeKind> _146425_tt = *it;
				{
					if ((!(_1b10186d7_shouldInitialized(&(_146425_tt))))) {
						goto _iter_next_1b47ebe84;
					};
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1b0eeb269_write(_self_.get()._field_oc, _1ad36c885_Itoa(_146418_i));
					_1b0eeb269_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1b1c7ba43_initExpr(_self_, _146425_tt);
					if (((_146017_tup.get()._field_Types.len() - _146418_i) > 1LL)) {
						_1b0eeb269_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1b47ebe84:;
				++it;
				_146418_i++;
				goto _iter_begin_1b47ebe84;
			}
			_iter_end_1b47ebe84:;
		};
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1b051e392_Enum> _147917_enm = _1b064a952_Enum(_145032_t.ptr());;
	if ((_147917_enm != nullptr)) {
		_1b1c7b78a_model(_self_, _147917_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1b0650627_Prim> _148413_prim = _1b064a19e_Prim(_145032_t.ptr());;
	if ((_148413_prim != nullptr)) {
		if (_1ad37c7b8_IsNum(_148413_prim.get()._field_Kind)) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1b0653828_IsBool(_148413_prim.ptr())) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1b0653aae_IsStr(_148413_prim.ptr())) {
			_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1b064ae6e_Arr(_145032_t.ptr()) != nullptr)) {
		jule::Ptr<_1b0656e47_Arr> _149621_arr = _1b064ae6e_Arr(_145032_t.ptr());;
		_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b1c7ba43_initExpr(_self_, _149621_arr.get()._field_Elem);
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1b04e5951_StructIns> _150317_s = _1b064b722_Struct(_145032_t.ptr());;
	if ((((_150317_s != nullptr) && _150317_s.get()._field_Decl.get()._field_Binded) && (_1b1018055_findDirective(&(_150317_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, _1b1011526_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _145032_t));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b1c6db12_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b1c7e6e4_deriveCoder> static__1b1c7eaac_new(jule::Ptr<_1b0eeaab5_ObjectCoder> _1323_oc) {
	return jule::new_ptr<_1b1c7e6e4_deriveCoder>(_1b1c7e6e4_deriveCoder{._field_oc=_1323_oc});;
}



inline jule::Str _1b1c7eded_cloneFuncDecl(_1b1c7e6e4_deriveCoder* _self_, jule::Ptr<_1b04e2871_Struct>* _1733_s) {
	_1aa364275_StrBuilder _1817_obj = static__1aa364594_New(51LL);;
	_1aa36d03c_WriteStr(&_1817_obj, _1b100e58a_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1733_s))));
	_1aa36d03c_WriteStr(&_1817_obj, jule::Str(" clone(void) const ", 19));
	return _1aa36d834_Str(&_1817_obj);;
}



inline jule::Str _1b1c8023e_cloneFuncDef(_1b1c7e6e4_deriveCoder* _self_, jule::Ptr<_1b04e2871_Struct>* _2432_s) {
	jule::Str _2513_strct = _1b100e58a_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2432_s)));;
	_1aa364275_StrBuilder _2617_obj = static__1aa364594_New(static_cast<jule::I64>(((_2513_strct.len() << 1LL) + 21LL)));;
	_1aa36d03c_WriteStr(&_2617_obj, _2513_strct);
	_1aa36d2e5_WriteByte(&_2617_obj, ' ');
	_1aa36d03c_WriteStr(&_2617_obj, _2513_strct);
	_1aa36d03c_WriteStr(&_2617_obj, jule::Str("::clone(void) const ", 20));
	return _1aa36d834_Str(&_2617_obj);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b1c7e6e4_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b1c812a6_TestCoder> static__1b1c816e6_New(jule::Ptr<_1b0eeaab5_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1b1c812a6_TestCoder>(_1b1c812a6_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b1c8197c_findTestingPackage(jule::Ptr<_1b1c812a6_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48097bb:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1b48097bb:;
			++it;
			goto _iter_begin_1b48097bb;
		}
		_iter_end_1b48097bb:;
	};
	return nullptr;;
}



inline void _1b1c81c35_appendTest(jule::Ptr<_1b1c812a6_TestCoder> _self_, jule::Ptr<_1b050b802_FnIns> _4334_f) {
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b1c82472_callTmReset(_self_);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1b1c7c835_cstrLit(&(_self_.get()._field_oc.get()._field_Obj), _4334_f.get()._field_Decl.get()._field_Ident);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c852aa_funcIns(&(_4334_f)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1b1c81edd_appendPackageTests(jule::Ptr<_1b1c812a6_TestCoder> _self_, jule::Ptr<_1b056d3ad_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b481122e:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4811a6a:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _6025_f = *it;
						{
							if (_1b101841d_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1b1c81c35_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1b4811a6a:;
						++it;
						goto _iter_begin_1b4811a6a;
					}
					_iter_end_1b4811a6a:;
				};
			}
			_iter_next_1b481122e:;
			++it;
			goto _iter_begin_1b481122e;
		}
		_iter_end_1b481122e:;
	};
}



inline jule::Bool _1b1c82274_readyTestingPackage(jule::Ptr<_1b1c812a6_TestCoder> _self_) {
	jule::Ptr<_1b056a487_ImportInfo> _6917_p = _1b1c8197c_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1b056b664_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1b04e69b8_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1b04e69b8_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1b04e69b8_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1b1c82472_callTmReset(jule::Ptr<_1b1c812a6_TestCoder> _self_) {
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c84ee1_func(&(_self_.get()._field_tmReset)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b1c82670_callTmFailed(jule::Ptr<_1b1c812a6_TestCoder> _self_) {
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c84ee1_func(&(_self_.get()._field_tmFailed)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b1c8286d_callTmSkipped(jule::Ptr<_1b1c812a6_TestCoder> _self_) {
	_1b0eeb269_write(_self_.get()._field_oc, static__1b1c84ee1_func(&(_self_.get()._field_tmSkipped)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b1c82a6b_Serialize(jule::Ptr<_1b1c812a6_TestCoder> _self_) {
	_1b10079c3_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1b10077c5_end(_self_.get()._field_oc);
	});;
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	if ((!(_1b1c82274_readyTestingPackage(_self_)))) {
		_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1b0eeb665_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1b0eeb269_write(_self_.get()._field_oc, _1b100c2d0_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1b100e8cb_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1b0eeb269_write(_self_.get()._field_oc, _1b100e8cb_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1b0eeb467_addIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1b1c82670_callTmFailed(_self_);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1b1c8286d_callTmSkipped(_self_);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1b1c81edd_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1b0eeb665_doneIndent(_self_.get()._field_oc);
	_1b0eeb863_indent(_self_.get()._field_oc);
	_1b0eeb269_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b1c812a6_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline void static__1b1c84474_writeIdentTo(_1aa364275_StrBuilder* _3333_buf, jule::Str* _3351_ident) {
	{
		auto expr = _3351_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4822e66:;
		if (it != expr_end) {
			jule::U8 *_3416_b = it;
			{
				if (((*(_3416_b)) >= 128LLU)) {
					goto _julec_label_1b48232a7;
				};
			}
			_iter_next_1b4822e66:;
			++it;
			goto _iter_begin_1b4822e66;
		}
		_iter_end_1b4822e66:;
	};
	_1aa36d03c_WriteStr(_3333_buf, (*(_3351_ident)));
	return;;
	_julec_label_1b48232a7:;
	{
		auto expr = static_cast<jule::Slice<jule::I32>>((*(_3351_ident)));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b482431e:;
		if (it != expr_end) {
			jule::I32 _4416_r = *it;
			{
				if ((_4416_r < 128LL)) {
					_1aa36d2e5_WriteByte(_3333_buf, static_cast<jule::U8>(static_cast<jule::U8>(_4416_r)));
					goto _iter_next_1b482431e;
				};
				_1aa36d03c_WriteStr(_3333_buf, _1ad36c5bb_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_4416_r)), 15LL));
			}
			_iter_next_1b482431e:;
			++it;
			goto _iter_begin_1b482431e;
		}
		_iter_end_1b482431e:;
	};
}



inline jule::Str static__1b1c847e8_toOut(jule::Str* _6122_ident, jule::Uintptr _6134_addr) {
	if ((_6134_addr != 0LLU)) {
		_1aa364275_StrBuilder _6321_obj = static__1aa364594_New(40LL);;
		_1aa36d2e5_WriteByte(&_6321_obj, '_');
		_1aa36d03c_WriteStr(&_6321_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_6134_addr)), 15LL));
		_1aa36d2e5_WriteByte(&_6321_obj, '_');
		static__1b1c84474_writeIdentTo(&(_6321_obj), _6122_ident);
		return _1aa36d834_Str(&_6321_obj);;
	};
	_1aa364275_StrBuilder _7017_obj = static__1aa364594_New(static_cast<jule::I64>(((*(_6122_ident)).len() + 1LL)));;
	_1aa36d2e5_WriteByte(&_7017_obj, '_');
	static__1b1c84474_writeIdentTo(&(_7017_obj), _6122_ident);
	return _1aa36d834_Str(&_7017_obj);;
}



inline jule::Str static__1b1c84c27_toLocal(jule::I64 _8223_row, jule::I64 _8233_col, jule::Str* _8244_ident) {
	_1aa364275_StrBuilder _8317_obj = static__1aa364594_New(40LL);;
	_1aa36d2e5_WriteByte(&_8317_obj, '_');
	_1aa36d03c_WriteStr(&_8317_obj, _1ad36c885_Itoa(_8223_row));
	_1aa36d03c_WriteStr(&_8317_obj, _1ad36c885_Itoa(_8233_col));
	_1aa36d2e5_WriteByte(&_8317_obj, '_');
	static__1b1c84474_writeIdentTo(&(_8317_obj), _8244_ident);
	return _1aa36d834_Str(&_8317_obj);;
}



inline jule::Str static__1b1c84ee1_func(jule::Ptr<_1b05088ed_Fn>* _9321_f) {
	{
		
		if ((*(_9321_f)).get()._field_Binded) {
			_case_begin_1b482adb4:;
			{
				return (*(_9321_f)).get()._field_Ident;;
			}
		}
		else if ((*(_9321_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1b482a6aa:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1b0509107_IsMethod((*(_9321_f)).ptr())) {
			_case_begin_1b482a721:;
			{
				jule::Str _10021_obj = static__1b1c847e8_toOut(&((*(_9321_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
				if ((*(_9321_f)).get()._field_Statically) {
					_10021_obj=(jule::Str("static_", 7) + _10021_obj);
					return _10021_obj;;
				};
				return _10021_obj;;
			}
		}
		else {
			_case_begin_1b4829896:;
			{
				return static__1b1c847e8_toOut(&((*(_9321_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_9321_f)))));;
			}
		}
		_match_end_1b4829ec3:;
	};
}



inline jule::Str static__1b1c852aa_funcIns(jule::Ptr<_1b050b802_FnIns>* _11224_f) {
	if (_1b050cc87_IsBuiltin((*(_11224_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_11224_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_11224_f)).get()._field_Decl.get()._field_Binded || ((*(_11224_f)).get()._field_Generics.len() == 0LL))) {
		return static__1b1c84ee1_func(&((*(_11224_f)).get()._field_Decl));;
	};
	return static__1b1c847e8_toOut(&((*(_11224_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11224_f)))));;
}



inline jule::Str static__1b1c85574_traitDecl(jule::Ptr<_1b051bb97_Trait> _12525_t) {
	return static__1b1c847e8_toOut(&(_12525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_12525_t)));;
}



inline jule::Str static__1b1c8583d_param(jule::Ptr<_1b0506e29_Param>* _13022_p) {
	if ((_1aa49de09_IsAnonIdent((*(_13022_p)).get()._field_Ident) || _1aa49db40_IsIgnoreIdent((*(_13022_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1b0507545_IsSelf((*(_13022_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_13022_p)).get()._field_Token == nullptr)) {
		return static__1b1c84c27_toLocal(0LL, 0LL, &((*(_13022_p)).get()._field_Ident));;
	};
	return static__1b1c84c27_toLocal((*(_13022_p)).get()._field_Token.get()._field_Row, (*(_13022_p)).get()._field_Token.get()._field_Column, &((*(_13022_p)).get()._field_Ident));;
}



inline jule::Str static__1b1c85b07_structure(jule::Ptr<_1b04e2871_Struct>* _14426_s) {
	if ((*(_14426_s)).get()._field_Binded) {
		if (_1b101841d_hasDirective(&((*(_14426_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_14426_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_14426_s)).get()._field_Ident);;
	};
	return static__1b1c847e8_toOut(&((*(_14426_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_14426_s)))));;
}



inline jule::Str static__1b1c85dc1_structureIns(jule::Ptr<_1b04e5951_StructIns>* _15529_s) {
	if (((*(_15529_s)).get()._field_Decl.get()._field_Binded || ((*(_15529_s)).get()._field_Generics.len() == 0LL))) {
		return static__1b1c85b07_structure(&((*(_15529_s)).get()._field_Decl));;
	};
	return static__1b1c847e8_toOut(&((*(_15529_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_15529_s)))));;
}



inline jule::Str static__1b1c8618a_field(jule::Ptr<_1b04de97d_Field>* _16322_f) {
	if ((*(_16322_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_16322_f)).get()._field_Ident;;
	};
	_1aa364275_StrBuilder _16717_obj = static__1aa364594_New(static_cast<jule::I64>((7LL + (*(_16322_f)).get()._field_Ident.len())));;
	_1aa36d03c_WriteStr(&_16717_obj, jule::Str("_field_", 7));
	static__1b1c84474_writeIdentTo(&(_16717_obj), &((*(_16322_f)).get()._field_Ident));
	return _1aa36d834_Str(&_16717_obj);;
}



inline jule::Str static__1b1c86454_var(jule::Ptr<_1b05ae1bd_Var> _17423_v) {
	{
		
		if (_17423_v.get()._field_Binded) {
			_case_begin_1b4835220:;
			{
				return _17423_v.get()._field_Ident;;
			}
		}
		else if (_17423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1b4835286:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_17423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1b48352ec:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_17423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1b4835363:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_17423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1b48355e9:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1ad36c885_Itoa(_17423_v.get()._field_RetOrder));;
			}
		}
		else if ((_17423_v.get()._field_Scope != nullptr)) {
			_case_begin_1b4835660:;
			{
				return static__1b1c84c27_toLocal(_17423_v.get()._field_Token.get()._field_Row, _17423_v.get()._field_Token.get()._field_Column, &(_17423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1b48351a9:;
			{
				return static__1b1c847e8_toOut(&(_17423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_17423_v)));;
			}
		}
		_match_end_1b4834de0:;
	};
}



inline jule::Str static__1b1c8671d_iterBegin(jule::Uintptr _19625_it) {
	_1aa364275_StrBuilder _19717_obj = static__1aa364594_New(30LL);;
	_1aa36d03c_WriteStr(&_19717_obj, jule::Str("_iter_begin_", 12));
	_1aa36d03c_WriteStr(&_19717_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19625_it)), 15LL));
	return _1aa36d834_Str(&_19717_obj);;
}



inline jule::Str static__1b1c869d7_iterEnd(jule::Uintptr _20423_it) {
	_1aa364275_StrBuilder _20517_obj = static__1aa364594_New(30LL);;
	_1aa36d03c_WriteStr(&_20517_obj, jule::Str("_iter_end_", 10));
	_1aa36d03c_WriteStr(&_20517_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20423_it)), 15LL));
	return _1aa36d834_Str(&_20517_obj);;
}



inline jule::Str static__1b1c86ca1_iterNext(jule::Uintptr _21224_it) {
	_1aa364275_StrBuilder _21317_obj = static__1aa364594_New(30LL);;
	_1aa36d03c_WriteStr(&_21317_obj, jule::Str("_iter_next_", 11));
	_1aa36d03c_WriteStr(&_21317_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_21224_it)), 15LL));
	return _1aa36d834_Str(&_21317_obj);;
}



inline jule::Str static__1b1c8706a_label(jule::Uintptr _22021_u) {
	_1aa364275_StrBuilder _22117_obj = static__1aa364594_New(30LL);;
	_1aa36d03c_WriteStr(&_22117_obj, jule::Str("_julec_label_", 13));
	_1aa36d03c_WriteStr(&_22117_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22021_u)), 15LL));
	return _1aa36d834_Str(&_22117_obj);;
}



inline jule::Str static__1b1c87334_matchEnd(jule::Uintptr _22824_m) {
	_1aa364275_StrBuilder _22917_obj = static__1aa364594_New(30LL);;
	_1aa36d03c_WriteStr(&_22917_obj, jule::Str("_match_end_", 11));
	_1aa36d03c_WriteStr(&_22917_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_22824_m)), 15LL));
	return _1aa36d834_Str(&_22917_obj);;
}



inline jule::Str static__1b1c875ed_caseBegin(jule::Uintptr _23625_c) {
	_1aa364275_StrBuilder _23717_obj = static__1aa364594_New(30LL);;
	_1aa36d03c_WriteStr(&_23717_obj, jule::Str("_case_begin_", 12));
	_1aa36d03c_WriteStr(&_23717_obj, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_23625_c)), 15LL));
	return _1aa36d834_Str(&_23717_obj);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b1c83e46_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0ee8ec0_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0ee9597_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "ti:" << _Src._field_ti << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b0ee9971_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b100a70c_Str(_1b100a388_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1b100aa4d_Equal(jule::Ptr<_1b100a388_customType> _self_, jule::Ptr<_1b06477a6_TypeKind> _4021_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b100a388_customType _Src) {
	_Stream << _1b100a70c_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b100ae7c_typeCoder> static__1b100b4bb_new(jule::Ptr<_1b0eeaab5_ObjectCoder>* _6424_oc) {
	jule::Ptr<_1b100ae7c_typeCoder> _6517_tc = jule::new_ptr<_1b100ae7c_typeCoder>(_1b100ae7c_typeCoder{._field_oc=(*(_6424_oc)), });;
	_6517_tc.get()._field_rc=static__1b101422c_new(&(_6517_tc));
	return _6517_tc;;
}



inline jule::Str _1b100b80c_toType(_1b100ae7c_typeCoder* _self_, jule::Str _7129_id) {
	if ((!_7129_id.equal("uintptr", 7))) {
		_7129_id=_1ad36ea30_RealKindOf(_7129_id);
	};
	_1aa364275_StrBuilder _7517_obj = static__1aa364594_New(32LL);;
	_1aa36d03c_WriteStr(&_7517_obj, jule::Str("jule::", 6));
	if (((97LL <= _7129_id[0LL]) && (_7129_id[0LL] <= 122LLU))) {
		_1aa36d2e5_WriteByte(&_7517_obj, static_cast<jule::U8>((_7129_id[0LL] - 32LLU)));
	} else {
		_1aa36d2e5_WriteByte(&_7517_obj, _7129_id[0LL]);
	};
	_1aa36d03c_WriteStr(&_7517_obj, _7129_id.slice(1LL));
	return _1aa36d834_Str(&_7517_obj);;
}



inline jule::Str _1b100bb4d_prim(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b0650627_Prim> _8723_p) {
	return _1b100b80c_toType(_self_, _1b0650968_Str(_8723_p.ptr()));;
}



inline jule::Str _1b100be8e_tuple(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b065571a_Tuple> _9228_t) {
	_1aa364275_StrBuilder _9317_obj = static__1aa364594_New(32LL);;
	_1aa36d03c_WriteStr(&_9317_obj, jule::Str("std::tuple<", 11));
	{
		auto expr = &(_9228_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3be833c:;
		if (it != expr_end) {
			jule::I64 _9514_i = it - expr->begin();
			jule::Ptr<_1b06477a6_TypeKind> _9521_tk = *it;
			{
				_1aa36d03c_WriteStr(&_9317_obj, _1b1011526_kind(_self_, _9521_tk));
				if (((_9228_t.get()._field_Types.len() - _9514_i) > 1LL)) {
					_1aa36d2e5_WriteByte(&_9317_obj, ',');
				};
			}
			_iter_next_1b3be833c:;
			++it;
			_9514_i++;
			goto _iter_begin_1b3be833c;
		}
		_iter_end_1b3be833c:;
	};
	_1aa36d2e5_WriteByte(&_9317_obj, '>');
	return _1aa36d834_Str(&_9317_obj);;
}



inline jule::Str _1b100c2d0_asSptr(_1b100ae7c_typeCoder* _self_, jule::Str _10625_elem) {
	_1aa364275_StrBuilder _10717_obj = static__1aa364594_New(static_cast<jule::I64>((11LL + _10625_elem.len())));;
	_1aa36d03c_WriteStr(&_10717_obj, jule::Str("jule::Ptr<", 10));
	_1aa36d03c_WriteStr(&_10717_obj, _10625_elem);
	_1aa36d2e5_WriteByte(&_10717_obj, '>');
	return _1aa36d834_Str(&_10717_obj);;
}



inline jule::Str _1b100c621_sptr(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b0654153_Sptr> _11527_sptr) {
	return _1b100c2d0_asSptr(_self_, _1b1011526_kind(_self_, _11527_sptr.get()._field_Elem));;
}



inline jule::Str _1b100c962_ptr(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b065791a_Ptr> _12026_p) {
	;
	if (_1b0658454_IsUnsafe(_12026_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	return (_1b1011526_kind(_self_, _12026_p.get()._field_Elem) + jule::Str("*", 1));;
}



inline jule::Str _1b100cca3_enumDecl(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b051e392_Enum> _12931_e) {
	return _1b1011526_kind(_self_, _12931_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1b100d0e4_typeEnumDecl(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b0520a9c_TypeEnum> _13435_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1b100d435_asSlice(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b06477a6_TypeKind> _13830_elem) {
	_1aa364275_StrBuilder _13917_obj = static__1aa364594_New(45LL);;
	_1aa36d03c_WriteStr(&_13917_obj, jule::Str("jule::Slice<", 12));
	_1aa36d03c_WriteStr(&_13917_obj, _1b1011526_kind(_self_, _13830_elem));
	_1aa36d2e5_WriteByte(&_13917_obj, '>');
	return _1aa36d834_Str(&_13917_obj);;
}



inline jule::Str _1b100d776_slice(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b0654b26_Slc> _14728_s) {
	return _1b100d435_asSlice(_self_, _14728_s.get()._field_Elem);;
}



inline jule::Str _1b100dab7_mapType(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b06562ba_Map> _15230_m) {
	_1aa364275_StrBuilder _15317_obj = static__1aa364594_New(43LL);;
	_1aa36d03c_WriteStr(&_15317_obj, jule::Str("jule::Map<", 10));
	_1aa36d03c_WriteStr(&_15317_obj, _1b1011526_kind(_self_, _15230_m.get()._field_Key));
	_1aa36d2e5_WriteByte(&_15317_obj, ',');
	_1aa36d03c_WriteStr(&_15317_obj, _1b1011526_kind(_self_, _15230_m.get()._field_Val));
	_1aa36d2e5_WriteByte(&_15317_obj, '>');
	return _1aa36d834_Str(&_15317_obj);;
}



inline jule::Str _1b100de08_traitIdent(_1b100ae7c_typeCoder* _self_, jule::Str _16229_ident) {
	_1aa364275_StrBuilder _16317_obj = static__1aa364594_New(static_cast<jule::I64>((13LL + _16229_ident.len())));;
	_1aa36d03c_WriteStr(&_16317_obj, jule::Str("jule::Trait<", 12));
	_1aa36d03c_WriteStr(&_16317_obj, _16229_ident);
	_1aa36d2e5_WriteByte(&_16317_obj, '>');
	return _1aa36d834_Str(&_16317_obj);;
}



inline jule::Str _1b100e249_traitDecl(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b051bb97_Trait> _17128_t) {
	return _1b100de08_traitIdent(_self_, static__1b1c85574_traitDecl(_17128_t));;
}



inline jule::Str _1b100e58a_structure(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b04e2871_Struct> _17628_s) {
	_1aa364275_StrBuilder _17717_rep = static__1aa364594_New(32LL);;
	if ((_17628_s.get()._field_Binded && (!(_1b101841d_hasDirective(&(_17628_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		_1aa36d03c_WriteStr(&_17717_rep, jule::Str("struct ", 7));
	};
	_1aa36d03c_WriteStr(&_17717_rep, static__1b1c85b07_structure(&(_17628_s)));
	return _1aa36d834_Str(&_17717_rep);;
}



inline jule::Str _1b100e8cb_structureIns(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b04e5951_StructIns> _18635_s) {
	if (_18635_s.get()._field_Decl.get()._field_Binded) {
		_1aa364275_StrBuilder _18821_ident = static__1aa364594_New(32LL);;
		_1aa36d03c_WriteStr(&_18821_ident, static__1b1c85dc1_structureIns(&(_18635_s)));
		if ((_18635_s.get()._field_Generics.len() > 0LL)) {
			_1aa36d2e5_WriteByte(&_18821_ident, '<');
			{
				auto expr = &(_18635_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b3c0777a:;
				if (it != expr_end) {
					jule::I64 _19222_i = it - expr->begin();
					jule::Ptr<_1b0645dc0_InsGeneric> _19229_g = *it;
					{
						_1aa36d03c_WriteStr(&_18821_ident, _1b1011526_kind(_self_, _19229_g.get()._field_Kind));
						if (((_18635_s.get()._field_Generics.len() - _19222_i) > 1LL)) {
							_1aa36d2e5_WriteByte(&_18821_ident, ',');
						};
					}
					_iter_next_1b3c0777a:;
					++it;
					_19222_i++;
					goto _iter_begin_1b3c0777a;
				}
				_iter_end_1b3c0777a:;
			};
			_1aa36d2e5_WriteByte(&_18821_ident, '>');
		};
		jule::Ptr<_1b04884b5_Directive> _20017_d = _1b1018055_findDirective(&(_18635_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_20017_d != nullptr)) {
			jule::Str _20225_buf = _1aa36d834_Str(&_18821_ident);;
			_1aa36da32_Clear(&_18821_ident);
			_1aa36d03c_WriteStr(&_18821_ident, _1b10083b9_concatAllParts(_20017_d.get()._field_Args));
			_1aa36d03c_WriteStr(&_18821_ident, jule::Str("::", 2));
			_1aa36d03c_WriteStr(&_18821_ident, _20225_buf);
		};
		return _1aa36d834_Str(&_18821_ident);;
	};
	return static__1b1c85dc1_structureIns(&(_18635_s));;
}



inline jule::Str _1b100ec1c_array(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b0656e47_Arr> _21428_a) {
	_1aa364275_StrBuilder _21517_obj = static__1aa364594_New(45LL);;
	_1aa36d03c_WriteStr(&_21517_obj, jule::Str("jule::Array<", 12));
	_1aa36d03c_WriteStr(&_21517_obj, _1b1011526_kind(_self_, _21428_a.get()._field_Elem));
	_1aa36d2e5_WriteByte(&_21517_obj, ',');
	_1aa36d03c_WriteStr(&_21517_obj, _1ad36c885_Itoa(_21428_a.get()._field_N));
	_1aa36d2e5_WriteByte(&_21517_obj, '>');
	return _1aa36d834_Str(&_21517_obj);;
}



inline jule::Str _1b101039e_paramIns(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b050a856_ParamIns>* _24132_p) {
	_1aa364275_StrBuilder _24217_obj = static__1aa364594_New(32LL);;
	if ((*(_24132_p)).get()._field_Decl.get()._field_Variadic) {
		_1aa36d03c_WriteStr(&_24217_obj, jule::Str("jule::Slice<", 12));
		_1aa36d03c_WriteStr(&_24217_obj, _1b1011526_kind(_self_, (*(_24132_p)).get()._field_Kind));
		_1aa36d2e5_WriteByte(&_24217_obj, '>');
	} else {
		_1aa36d03c_WriteStr(&_24217_obj, _1b1011526_kind(_self_, (*(_24132_p)).get()._field_Kind));
	};
	if ((*(_24132_p)).get()._field_Decl.get()._field_Reference) {
		_1aa36d2e5_WriteByte(&_24217_obj, '*');
	};
	return _1aa36d834_Str(&_24217_obj);;
}



inline void _1b1010a53_funcInsResult(_1b100ae7c_typeCoder* _self_, _1aa364275_StrBuilder* _27137_s, jule::Ptr<_1b050b802_FnIns>* _27157_f) {
	if (_1b0508d71_IsVoid((*(_27157_f)).get()._field_Decl.ptr())) {
		if ((*(_27157_f)).get()._field_Decl.get()._field_Exceptional) {
			_1aa36d03c_WriteStr(_27137_s, jule::Str("jule::VoidExceptional", 21));
		} else {
			_1aa36d03c_WriteStr(_27137_s, jule::Str("void", 4));
		};
		return;;
	};
	if ((*(_27157_f)).get()._field_Decl.get()._field_Exceptional) {
		_1aa36d03c_WriteStr(_27137_s, jule::Str("jule::Exceptional<", 18));
		_1b10162d9_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*(_27157_f)).get()._field_Result));
		_1aa36d2e5_WriteByte(_27137_s, '>');
		return;;
	};
	_1b10162d9_codeMut1((*(_self_))._field_rc.ptr(), _27137_s, &((*(_27157_f)).get()._field_Result));
}



inline jule::Str _1b1010d94_anonFunc(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b050b802_FnIns> _28931_f) {
	if (((_28931_f.get()._field_Result != nullptr) && (_1b064bec5_Tup(_28931_f.get()._field_Result.ptr()) != nullptr))) {
		_1b0eec29d_pushResultIns((*(_self_))._field_oc, &(_28931_f));
	};
	_1aa364275_StrBuilder _29317_decl = static__1aa364594_New(20LL);;
	_1b1010a53_funcInsResult(_self_, &(_29317_decl), &(_28931_f));
	_1aa36d2e5_WriteByte(&_29317_decl, '(');
	if ((_28931_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_28931_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3c194e5:;
			if (it != expr_end) {
				jule::I64 _29718_i = it - expr->begin();
				jule::Ptr<_1b050a856_ParamIns> _29725_param = *it;
				{
					if (_1b0507545_IsSelf(_29725_param.get()._field_Decl.ptr())) {
						goto _iter_next_1b3c194e5;
					};
					_1aa36d03c_WriteStr(&_29317_decl, _1b101039e_paramIns(_self_, &(_29725_param)));
					if (((_28931_f.get()._field_Params.len() - _29718_i) > 1LL)) {
						_1aa36d2e5_WriteByte(&_29317_decl, ',');
					};
				}
				_iter_next_1b3c194e5:;
				++it;
				_29718_i++;
				goto _iter_begin_1b3c194e5;
			}
			_iter_end_1b3c194e5:;
		};
	} else {
		_1aa36d03c_WriteStr(&_29317_decl, jule::Str("void", 4));
	};
	_1aa36d2e5_WriteByte(&_29317_decl, ')');
	return _1aa36d834_Str(&_29317_decl);;
}



inline jule::Str _1b10111d5_func(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b050b802_FnIns> _31427_f) {
	_1aa364275_StrBuilder _31517_obj = static__1aa364594_New(42LL);;
	_1aa36d03c_WriteStr(&_31517_obj, jule::Str("jule::Fn<", 9));
	_1aa36d03c_WriteStr(&_31517_obj, _1b1010d94_anonFunc(_self_, _31427_f));
	_1aa36d2e5_WriteByte(&_31517_obj, '>');
	return _1aa36d834_Str(&_31517_obj);;
}



inline jule::Str _1b1011526_kind(_1b100ae7c_typeCoder* _self_, jule::Ptr<_1b06477a6_TypeKind> _32327_k) {
	{
		
		if ((_1b064b722_Struct(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dae3:;
			{
				return _1b100e8cb_structureIns(_self_, _1b064b722_Struct(_32327_k.ptr()));;
			}
		}
		else if (_1b064860e_Binded(_32327_k.ptr())) {
			_case_begin_1b3c1db6a:;
			{
				return _32327_k.get()._field_BindIdent;;
			}
		}
		else if ((_1b064a19e_Prim(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dbe2:;
			{
				return _1b100bb4d_prim(_self_, _1b064a19e_Prim(_32327_k.ptr()));;
			}
		}
		else if ((_1b064bec5_Tup(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dc69:;
			{
				return _1b100be8e_tuple(_self_, _1b064bec5_Tup(_32327_k.ptr()));;
			}
		}
		else if ((_1b064a435_Sptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dce1:;
			{
				return _1b100c621_sptr(_self_, _1b064a435_Sptr(_32327_k.ptr()));;
			}
		}
		else if ((_1b064a6bb_Ptr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dd68:;
			{
				return _1b100c962_ptr(_self_, _1b064a6bb_Ptr(_32327_k.ptr()));;
			}
		}
		else if ((_1b064a952_Enum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dde0:;
			{
				return _1b100cca3_enumDecl(_self_, _1b064a952_Enum(_32327_k.ptr()));;
			}
		}
		else if ((_1b064abd8_TypeEnum(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1de67:;
			{
				return _1b100d0e4_typeEnumDecl(_self_, _1b064abd8_TypeEnum(_32327_k.ptr()));;
			}
		}
		else if ((_1b064b205_Slc(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1dede:;
			{
				return _1b100d776_slice(_self_, _1b064b205_Slc(_32327_k.ptr()));;
			}
		}
		else if ((_1b064bc3e_Map(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1e066:;
			{
				return _1b100dab7_mapType(_self_, _1b064bc3e_Map(_32327_k.ptr()));;
			}
		}
		else if ((_1b064b9a8_Trait(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1e0dd:;
			{
				return _1b100e249_traitDecl(_self_, _1b064b9a8_Trait(_32327_k.ptr()));;
			}
		}
		else if ((_1b064ae6e_Arr(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1e165:;
			{
				return _1b100ec1c_array(_self_, _1b064ae6e_Arr(_32327_k.ptr()));;
			}
		}
		else if ((_1b064b48b_Fn(_32327_k.ptr()) != nullptr)) {
			_case_begin_1b3c1e1dc:;
			{
				return _1b10111d5_func(_self_, _1b064b48b_Fn(_32327_k.ptr()));;
			}
		}
		_match_end_1b3c1d917:;
	};
	{
		auto &_match_expr{ _32327_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1b3c1e297:;
			{
				return _32327_k.get()._field_Kind.cast_ptr<_1b100a388_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1b3c25875:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1b3c25820:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b100ae7c_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b1013c54_resultCoder> static__1b101422c_new(jule::Ptr<_1b100ae7c_typeCoder>* _37724_tc) {
	return jule::new_ptr<_1b1013c54_resultCoder>(_1b1013c54_resultCoder{._field_tc=(*(_37724_tc))});;
}



inline void _1b1014590_ptr(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _38127_s, jule::Ptr<_1b065791a_Ptr> _38146_p) {
	_1aa36d03c_WriteStr(_38127_s, jule::Str("p", 1));
	_1b1015e76_codeMut(_self_, _38127_s, &(_38146_p.get()._field_Elem));
}



inline void _1b1014903_sptr(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _38628_s, jule::Ptr<_1b0654153_Sptr> _38647_p) {
	_1aa36d03c_WriteStr(_38628_s, jule::Str("x", 1));
	_1b1015e76_codeMut(_self_, _38628_s, &(_38647_p.get()._field_Elem));
}



inline void _1b1014c66_mapType(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _39131_s, jule::Ptr<_1b06562ba_Map> _39150_p) {
	_1aa36d03c_WriteStr(_39131_s, jule::Str("m", 1));
	_1b1015e76_codeMut(_self_, _39131_s, &(_39150_p.get()._field_Key));
	_1b1015e76_codeMut(_self_, _39131_s, &(_39150_p.get()._field_Val));
}



inline void _1b10150c9_slice(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _39729_s, jule::Ptr<_1b0654b26_Slc> _39748_slc) {
	_1aa36d03c_WriteStr(_39729_s, jule::Str("s", 1));
	_1b1015e76_codeMut(_self_, _39729_s, &(_39748_slc.get()._field_Elem));
}



inline void _1b101543c_arr(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _40227_s, jule::Ptr<_1b0656e47_Arr> _40246_arr) {
	_1aa36d03c_WriteStr(_40227_s, jule::Str("a", 1));
	_1aa36d03c_WriteStr(_40227_s, _1ad36c5bb_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_40246_arr.get()._field_N)), 16LL));
	_1b1015e76_codeMut(_self_, _40227_s, &(_40246_arr.get()._field_Elem));
}



inline void _1b10157a0_func(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _40828_s, jule::Ptr<_1b050b802_FnIns> _40847_f) {
	_1aa36d03c_WriteStr(_40828_s, jule::Str("f", 1));
	{
		auto expr = &(_40847_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c2bc33:;
		if (it != expr_end) {
			jule::Ptr<_1b050a856_ParamIns> _41021_p = *it;
			{
				if (_41021_p.get()._field_Decl.get()._field_Reference) {
					_1aa36d03c_WriteStr(_40828_s, jule::Str("r", 1));
				};
				_1b1015e76_codeMut(_self_, _40828_s, &(_41021_p.get()._field_Kind));
			}
			_iter_next_1b3c2bc33:;
			++it;
			goto _iter_begin_1b3c2bc33;
		}
		_iter_end_1b3c2bc33:;
	};
	if ((_40847_f.get()._field_Result != nullptr)) {
		_1b1015e76_codeMut(_self_, _40828_s, &(_40847_f.get()._field_Result));
	};
}



inline void _1b1015b13_tup(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _42127_s, jule::Ptr<_1b065571a_Tuple> _42146_tup) {
	{
		auto expr = &(_42146_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c2dc68:;
		if (it != expr_end) {
			jule::Ptr<_1b06477a6_TypeKind> _42221_t = *it;
			{
				_1aa36d03c_WriteStr(_42127_s, jule::Str("__jule_tuple_", 13));
				_1b1015e76_codeMut(_self_, _42127_s, &(_42221_t));
			}
			_iter_next_1b3c2dc68:;
			++it;
			goto _iter_begin_1b3c2dc68;
		}
		_iter_end_1b3c2dc68:;
	};
}



inline void _1b1015e76_codeMut(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _42831_s, jule::Ptr<_1b06477a6_TypeKind>* _42851_t) {
	{
		auto &_match_expr{ (*(_42851_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b3c2edbd:;
			{
				_1b1014590_ptr(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b065791a_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1b3c30176:;
			{
				_1b1014903_sptr(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b0654153_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1b3c301dc:;
			{
				_1b1014c66_mapType(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b06562ba_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1b3c30253:;
			{
				_1b10150c9_slice(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b0654b26_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1b3c302ca:;
			{
				_1b101543c_arr(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b0656e47_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b3c3075e:;
			{
				_1b10157a0_func(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b050b802_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b3c307d6:;
			{
				jule::Ptr<_1b051e392_Enum> _44317_te = (*(_42851_t)).get()._field_Kind.cast_ptr<_1b051e392_Enum>(3);;
				_1aa36d03c_WriteStr(_42831_s, static__1b1c847e8_toOut(&(_44317_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44317_te))));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b3c3085d:;
			{
				jule::Ptr<_1b0520a9c_TypeEnum> _44617_te = (*(_42851_t)).get()._field_Kind.cast_ptr<_1b0520a9c_TypeEnum>(4);;
				_1aa36d03c_WriteStr(_42831_s, static__1b1c847e8_toOut(&(_44617_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_44617_te))));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b3c308d5:;
			{
				jule::Ptr<_1b04e5951_StructIns> _44921_si = (*(_42851_t)).get()._field_Kind.cast_ptr<_1b04e5951_StructIns>(0);;
				_1aa36d03c_WriteStr(_42831_s, static__1b1c85dc1_structureIns(&(_44921_si)));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b3c3095c:;
			{
				jule::Ptr<_1b051bb97_Trait> _45221_trt = (*(_42851_t)).get()._field_Kind.cast_ptr<_1b051bb97_Trait>(2);;
				_1aa36d03c_WriteStr(_42831_s, static__1b1c85574_traitDecl(_45221_trt));
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1b3c309d4:;
			{
				_1aa36d03c_WriteStr(_42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b0650627_Prim>(20).get()._field_Kind);
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1b3c30a5b:;
			{
				_1b1015b13_tup(_self_, _42831_s, (*(_42851_t)).get()._field_Kind.cast_ptr<_1b065571a_Tuple>(23));
			}
		}
		else {
			_case_begin_1b3c30110:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:459:13"));;
			}
		}
		_match_end_1b3c300aa:;
	};
}



inline void _1b10162d9_codeMut1(_1b1013c54_resultCoder* _self_, _1aa364275_StrBuilder* _46332_s, jule::Ptr<_1b06477a6_TypeKind>* _46352_t) {
	jule::Ptr<_1b065571a_Tuple> _46417_tup = _1b064bec5_Tup((*(_46352_t)).ptr());;
	if ((_46417_tup != nullptr)) {
		_1b1015b13_tup(_self_, _46332_s, _46417_tup);
	} else {
		_1aa36d03c_WriteStr(_46332_s, _1b1011526_kind((*(_self_))._field_tc.ptr(), (*(_46352_t))));
	};
}



inline jule::Str _1b10165e7_code(_1b1013c54_resultCoder* _self_, jule::Ptr<_1b06477a6_TypeKind>* _47228_t) {
	_1aa364275_StrBuilder _47317_s = static__1aa364594_New(20LL);;
	_1b1015e76_codeMut(_self_, &(_47317_s), _47228_t);
	return _1aa36d834_Str(&_47317_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1b1013c54_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b4c6d23a_Name(_1b4c6d3e4_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b4c6d6d0_What(_1b4c6d3e4_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b4c6d823_Reset(_1b4c6d3e4_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b4c6d966_Short(_1b4c6d3e4_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4c6d3e4_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b4c7188c_Name(_1b4c71c55_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b4c719d0_What(_1b4c71c55_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b4c72041_Reset(_1b4c71c55_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b4c72184_Short(_1b4c71c55_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4c71c55_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b4c75088_Name(_1b4c75451_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b4c751cb_What(_1b4c75451_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b4c7573c_Reset(_1b4c75451_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b4c75880_Short(_1b4c75451_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4c75451_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b4c787c8_Name(_1b4c78b91_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b4c7891b_What(_1b4c78b91_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b4c78e7c_Reset(_1b4c78b91_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b4c790c0_Short(_1b4c78b91_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4c78b91_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b4c7bec4_Name(_1b4c7c38c_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b4c7c117_What(_1b4c7c38c_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b4c7c678_Reset(_1b4c7c38c_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b4c7c7bb_Short(_1b4c7c38c_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b4c7c38c_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b1080ba0_FlagSet> static__1b1080e8b_New(void) {
	return jule::new_ptr<_1b1080ba0_FlagSet>(_1b1080ba0_FlagSet{._field_flags=jule::Slice<jule::Trait<_1b107e0ee_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1b107e0ee_CommonFlag> _1b108140e_FindFlag(_1b1080ba0_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4c86b27:;
		if (it != expr_end) {
			jule::Trait<_1b107e0ee_CommonFlag> _7221_flag = *it;
			{
				if ((_1b107e0ee_CommonFlag_mptr_data[(_7221_flag).type_offset]._1b104ca5c_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1b4c86b27:;
			++it;
			goto _iter_begin_1b4c86b27;
		}
		_iter_end_1b4c86b27:;
	};
	return nullptr;;
}



inline jule::Trait<_1b107e0ee_CommonFlag> _1b1081750_FindFlagShort(_1b1080ba0_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4c88431:;
		if (it != expr_end) {
			jule::Trait<_1b107e0ee_CommonFlag> _8221_flag = *it;
			{
				if ((_1b107e0ee_CommonFlag_mptr_data[(_8221_flag).type_offset]._1b104cc05_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1b4c88431:;
			++it;
			goto _iter_begin_1b4c88431;
		}
		_iter_end_1b4c88431:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b1081d27_Parse(_1b1080ba0_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1b1083631_argParser _11617_ap = _1b1083631_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1b1084b2c_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline jule::Ptr<_1b4c7c38c_Flag> _1b48ab20d_addFlagCommon(_1b1080ba0_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b48ac9c3:;
			{
				goto _match_end_1b48ac95c;
			}
		}
		_match_end_1b48ac95c:;
	};
	if ((_1b108140e_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b1081750_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b4c7c38c_Flag> _14817_flag = jule::new_ptr<_1b4c7c38c_Flag>(_1b4c7c38c_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1b107e0ee_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1b107e0ee_CommonFlag>(_14817_flag, 4)); };
	return _14817_flag;;
}

inline jule::Ptr<_1b4c78b91_Flag> _1b48b42c1_addFlagCommon(_1b1080ba0_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b48b5a42:;
			{
				goto _match_end_1b48b59cb;
			}
		}
		_match_end_1b48b59cb:;
	};
	if ((_1b108140e_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1b1081750_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b4c78b91_Flag> _14817_flag = jule::new_ptr<_1b4c78b91_Flag>(_1b4c78b91_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	{ jule::Slice<jule::Trait<_1b107e0ee_CommonFlag>> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait<_1b107e0ee_CommonFlag>(_14817_flag, 3)); };
	return _14817_flag;;
}



inline void _1b48a9195_AddVar(_1b1080ba0_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b4c7c38c_Flag> _17617_flag = _1b48ab20d_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1b48b228b_AddVar(_1b1080ba0_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b4c78b91_Flag> _17617_flag = _1b48b42c1_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1b1080ba0_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1b4c90119_parseInteger(_1b1083631_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b4c92abc:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1aa34e42a_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b4c9313e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1aa34e42a_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b4c92e1e:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1aa34e42a_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b4c92e85:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b4c9278c:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b4c92726:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b4c9265a:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b4c978b3_parseInteger(_1b1083631_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b4c9a322:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1aa34e42a_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b4c9a894:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1aa34e42a_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b4c9a674:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1aa34e42a_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b4c9a6da:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b4c99ee2:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b4c99e7b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b4c99db0:;
	};
	return __jule_func_result;;
}



inline jule::Str _1b1083e4a_getData(_1b1083631_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1b10841c0_processFlag(_1b1083631_argParser* _self_, jule::Trait<_1b107e0ee_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b4c8c556:;
			{
				jule::Ptr<_1b4c78b91_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1b4c78b91_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1b4c8c501:;
	};
	jule::Str _22513_data = _1b1083e4a_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b107e0ee_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b104ca5c_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b4c8e217:;
			{
				jule::Ptr<_1b4c6d3e4_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1b4c6d3e4_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b4c90119_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1ad35b016_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b107e0ee_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b104ca5c_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b4c8e27d:;
			{
				jule::Ptr<_1b4c71c55_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1b4c71c55_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b4c978b3_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1ad35aa60_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b107e0ee_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b104ca5c_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b4c8e2e4:;
			{
				jule::Ptr<_1b4c75451_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1b4c75451_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1ad362968_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1b107e0ee_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1b104ca5c_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b4c8e35a:;
			{
				(*((*(_21735_flag)).cast_ptr<_1b4c7c38c_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1b4c8d8ba:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b1084478_singleDash(_1b1083631_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b50a8a:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1b107e0ee_CommonFlag> _26321_flag = _1b1081750_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1b10841c0_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b4b50a8a:;
			++it;
			goto _iter_begin_1b4b50a8a;
		}
		_iter_end_1b4b50a8a:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b1084731_doubleDash(_1b1083631_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1b107e0ee_CommonFlag> _27617_flag = _1b108140e_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1b10841c0_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b108492e_tryArg(_1b1083631_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1b1084731_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1b1084478_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_28413_arg); };
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b1084b2c_parse(_1b1083631_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1b108492e_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b4b57c4b:;
	}
	_iter_end_1b4b57c4b:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1b1083631_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b0eeaab5_ObjectCoder> static__1b0eeaeb1_New(jule::Ptr<_1b11eb5ce_IR>* _9524_ir, _1b0ee8ec0_SerializationInfo _9533_info) {
	jule::Ptr<_1b0eeaab5_ObjectCoder> _9617_oc = jule::new_ptr<_1b0eeaab5_ObjectCoder>(_1b0eeaab5_ObjectCoder{._field_ir=(*(_9524_ir)), ._field_info=_9533_info, });;
	_9617_oc.get()._field_ec=static__1b1c6deca_new(&(_9617_oc));
	_9617_oc.get()._field_sc=static__1b1c65411_new(&(_9617_oc));
	_9617_oc.get()._field_tc=static__1b100b4bb_new(&(_9617_oc));
	_9617_oc.get()._field_dc=static__1b1c7eaac_new(_9617_oc);
	return _9617_oc;;
}



inline void _1b0eeb269_write(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Str _10725_s) {
	_1aa36d03c_WriteStr(&_self_.get()._field_Obj, _10725_s);
}



inline void _1b0eeb467_addIndent(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{ jule::Slice<jule::U8> &__jule_push_dest = _self_.get()._field_indentBuffer; __jule_push_dest.push(9LLU); };
}



inline void _1b0eeb665_doneIndent(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1b0eeb863_indent(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1aa36cc84_Write(&_self_.get()._field_Obj, _self_.get()._field_indentBuffer);
}



inline jule::I64 _1b0eebba4_findAnyType(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b06477a6_TypeKind>* _12636_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b246da:;
		if (it != expr_end) {
			jule::I64 _12714_i = it - expr->begin();
			jule::Ptr<_1b06477a6_TypeKind> _12721_at = *it;
			{
				if (_1b0647eb0_Equal(_12721_at, (*(_12636_t)))) {
					return _12714_i;;
				};
			}
			_iter_next_1b4b246da:;
			++it;
			_12714_i++;
			goto _iter_begin_1b4b246da;
		}
		_iter_end_1b4b246da:;
	};
	return -1LL;;
}



inline jule::I64 _1b0eebee5_pushAnyType(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b06477a6_TypeKind> _13535_t) {
	if ((_1b064a952_Enum(_13535_t.ptr()) != nullptr)) {
		_13535_t=_1b064a952_Enum(_13535_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I64 _13917_i = _1b0eebba4_findAnyType(_self_, &(_13535_t));;
	if ((_13917_i != -1LL)) {
		return _13917_i;;
	};
	_13917_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	{ jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> &__jule_push_dest = _self_.get()._field_anyTypeMap; __jule_push_dest.push(_13535_t); };
	jule::Str _14513_si = _1ad36c885_Itoa(_13917_i);;
	if ((_1b064a435_Sptr(_13535_t.ptr()) != nullptr)) {
		jule::Str _14717_elem_kind = _1b1011526_kind(_self_.get()._field_tc.ptr(), _1b064a435_Sptr(_13535_t.ptr()).get()._field_Elem);;
		jule::Str _14817_kind = _1b100c2d0_asSptr(_self_.get()._field_tc.ptr(), _14717_elem_kind);;
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("void __jule_any_type", 20));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14717_elem_kind);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("__jule_any_type", 15));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14817_kind);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52));
	} else {
		jule::Bool _17417_comparable = _1b0648db2_Comparable(_13535_t.ptr());;
		jule::Str _17517_kind = _1b1011526_kind(_self_.get()._field_tc.ptr(), _13535_t);;
		if (_17517_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1b0647b6e_Str(_13535_t.ptr()));
		};
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("void __jule_any_type", 20));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(">().dealloc(); }\n", 17));
		if (_17417_comparable) {
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("*>(alloc) == *reinterpret_cast<", 31));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("*>(other); }\n", 13));
		};
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Str __jule_any_type", 25));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76));
		if ((_1b064a6bb_Ptr(_13535_t.ptr()) == nullptr)) {
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("const ", 6));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
		} else {
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("* const", 7));
		};
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("*>(alloc)); }\n", 14));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("struct jule::Any::Type ", 23));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("__jule_any_type", 15));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("{.dealloc=__jule_any_type", 25));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_dealloc, ", 10));
		if (_17417_comparable) {
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(".eq=__jule_any_type", 19));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_eq, ", 5));
		};
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(".to_str=__jule_any_type", 23));
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
		_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_to_str};\n", 10));
		if (_17417_comparable) {
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Bool __jule_any_type", 26));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_compare(const jule::Any &any, const ", 37));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _17517_kind);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(" &other) { return any.type == &__jule_any_type", 46));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(" && __jule_any_type", 19));
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _14513_si);
			_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("_eq(any.data.alloc, (void*)&other); }\n", 38));
		};
	};
	return _13917_i;;
}



inline void _1b0eec29d_pushResultIns(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b050b802_FnIns>* _24338_f) {
	jule::Str _24413_s = _1b10165e7_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24338_f)).get()._field_Result));;
	jule::Bool _24517_ok = false;;
	_self_.get()._field_resultMap.lookup(_24413_s, nullptr, &(_24517_ok));
	if (_24517_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24413_s]=false;
	_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, jule::Str("struct ", 7));
	_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, _24413_s);
	_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, jule::Str(" {\n", 3));
	{
		auto expr = &(_1b064bec5_Tup((*(_24338_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b3d2c5:;
		if (it != expr_end) {
			jule::I64 _25314_i = it - expr->begin();
			jule::Ptr<_1b06477a6_TypeKind> _25321_t = *it;
			{
				_1aa36d2e5_WriteByte(&_self_.get()._field_resultDecls, 9LLU);
				_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, _1b1011526_kind(_self_.get()._field_tc.ptr(), _25321_t));
				_1aa36d2e5_WriteByte(&_self_.get()._field_resultDecls, ' ');
				_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, jule::Str("__jule_result_arg", 17));
				_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, _1ad36c885_Itoa(_25314_i));
				_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, jule::Str(";\n", 2));
			}
			_iter_next_1b4b3d2c5:;
			++it;
			_25314_i++;
			goto _iter_begin_1b4b3d2c5;
		}
		_iter_end_1b4b3d2c5:;
	};
	_1aa36d03c_WriteStr(&_self_.get()._field_resultDecls, jule::Str("};\n", 3));
}



inline void _1b0eec556_pushResult(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b05088ed_Fn>* _26435_f) {
	if ((_1b0508d71_IsVoid((*(_26435_f)).ptr()) || ((*(_26435_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26817_n = (*(_26435_f)).get()._field_Instances.len();;
	if (((*(_26435_f)).get()._field_Generics.len() == 0LL)) {
		_26817_n=1LL;
	};
	{
		auto expr = (*(_26435_f)).get()._field_Instances.slice(0LL, _26817_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b4b424b6:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _27221_ins = *it;
			{
				_1b0eec29d_pushResultIns(_self_, &(_27221_ins));
			}
			_iter_next_1b4b424b6:;
			++it;
			goto _iter_begin_1b4b424b6;
		}
		_iter_end_1b4b424b6:;
	};
}



inline jule::I64 _1b0eec952_findTypeOffsetS(_1b0eeaab5_ObjectCoder* _self_, jule::Ptr<_1b051bb97_Trait> _27730_t, jule::Ptr<_1b04e5951_StructIns> _27745_s) {
	if ((_27730_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b43990:;
		if (it != expr_end) {
			jule::Ptr<_1b0ee9597_traitHash> *_28116_hash = it;
			{
				if ((((*(_28116_hash)).get()._field_t == _27730_t) && ((*(_28116_hash)).get()._field_s == _27745_s))) {
					return (*(_28116_hash)).get()._field_i;;
				};
			}
			_iter_next_1b4b43990:;
			++it;
			goto _iter_begin_1b4b43990;
		}
		_iter_end_1b4b43990:;
	};
	return -1LL;;
}



inline jule::I64 _1b0eecd4d_findTypeOffset(_1b0eeaab5_ObjectCoder* _self_, jule::Ptr<_1b051bb97_Trait> _28929_t, jule::Ptr<_1b06477a6_TypeKind> _28944_k) {
	if ((_28929_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1b04e5951_StructIns> _29317_s = nullptr;;
	if ((_1b064a435_Sptr(_28944_k.ptr()) != nullptr)) {
		_28944_k=_1b064a435_Sptr(_28944_k.ptr()).get()._field_Elem;
	};
	_29317_s=_1b064b722_Struct(_28944_k.ptr());
	if ((_29317_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1b0eec952_findTypeOffsetS(_self_, _28929_t, _29317_s));;
}



inline void _1b0eed1b1_pushAndWriteMaskMapper(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b051bb97_Trait> _30446_t1, jule::Ptr<_1b051bb97_Trait> _30462_t2) {
	_1aa364275_StrBuilder _30517_ident = static__1aa364594_New(32LL);;
	_1aa36d03c_WriteStr(&_30517_ident, jule::Str("__jule_trait_offset_mapper_", 27));
	_1aa36d03c_WriteStr(&_30517_ident, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30462_t2))), 15LL));
	_1aa36d03c_WriteStr(&_30517_ident, jule::Str("_to_", 4));
	_1aa36d03c_WriteStr(&_30517_ident, _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30446_t1))), 15LL));
	_1aa36cc84_Write(&_self_.get()._field_Obj, _1aa36e2d5_Buf(&_30517_ident));
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b48665:;
		if (it != expr_end) {
			_1b0ee9971_traitCast _31316_m = *it;
			{
				if (((_31316_m._field_t1 == _30446_t1) && (_31316_m._field_t2 == _30462_t2))) {
					return;;
				};
			}
			_iter_next_1b4b48665:;
			++it;
			goto _iter_begin_1b4b48665;
		}
		_iter_end_1b4b48665:;
	};
	{ jule::Slice<_1b0ee9971_traitCast> &__jule_push_dest = _self_.get()._field_traitCastMap; __jule_push_dest.push(_1b0ee9971_traitCast{._field_t1=_30446_t1, ._field_t2=_30462_t2}); };
	;
	_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("jule::Int", 9));
	_1aa36d2e5_WriteByte(&_self_.get()._field_anyObj, ' ');
	_1aa36cc84_Write(&_self_.get()._field_anyObj, _1aa36e2d5_Buf(&_30517_ident));
	_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("(const jule::Int offset) noexcept { ", 36));
	{
		auto expr = &(_30446_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b486ceb1:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _33221_s1 = *it;
			{
				{
					auto expr = &(_30462_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b486da2d:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> _33320_s2 = *it;
						{
							if ((_33221_s1 == _33320_s2)) {
								{
									auto expr = &(_33221_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b486e776:;
									if (it != expr_end) {
										jule::Ptr<_1b04e5951_StructIns> _33533_s1i = *it;
										{
											jule::I64 _33629_i1 = _1b0eec952_findTypeOffsetS(_self_.ptr(), _30446_t1, _33533_s1i);;
											jule::I64 _33729_i2 = _1b0eec952_findTypeOffsetS(_self_.ptr(), _30462_t2, _33533_s1i);;
											_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("if (offset == ", 14));
											_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _1ad36c885_Itoa(_33729_i2));
											_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(") return ", 9));
											_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _1ad36c885_Itoa(_33629_i1));
											_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("; ", 2));
										}
										_iter_next_1b486e776:;
										++it;
										goto _iter_begin_1b486e776;
									}
									_iter_end_1b486e776:;
								};
							};
						}
						_iter_next_1b486da2d:;
						++it;
						goto _iter_begin_1b486da2d;
					}
					_iter_end_1b486da2d:;
				};
			}
			_iter_next_1b486ceb1:;
			++it;
			goto _iter_begin_1b486ceb1;
		}
		_iter_end_1b486ceb1:;
	};
	_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str(" return ", 8));
	_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, _1ad36c885_Itoa(0LL));
	_1aa36d03c_WriteStr(&_self_.get()._field_anyObj, jule::Str("; }\n", 4));
}



inline void _1b0eed469_locInfo(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1aa49b1d1_Token>* _35328_t) {
	jule::Str *_35414_loc = &((*(_35328_t)).get()._field_File.get()._field_Path);;
	if (_1d36480ad_Production) {
		{
			
			if (_1aa34e42a_HasPrefix((*(_35414_loc)), _1aa6405ea_PathStdlib)) {
				_case_begin_1b4874182:;
				{
					_1b1c7c505_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)).slice((_1aa372382_Dir(_1aa6405ea_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1aa34e42a_HasPrefix((*(_35414_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1b4873d52:;
				{
					_1b1c7c505_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)).slice((_1aa372382_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1b4873cdb:;
				{
					_1b1c7c505_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)));
				}
			}
			_match_end_1b4873c20:;
		};
	} else {
		_1b1c7c505_cstrBytes(&(_self_.get()._field_Obj), (*(_35414_loc)));
	};
	_1b0eeb269_write(_self_, jule::Str(":", 1));
	_1b0eeb269_write(_self_, _1ad36c885_Itoa((*(_35328_t)).get()._field_Row));
	_1b0eeb269_write(_self_, jule::Str(":", 1));
	_1b0eeb269_write(_self_, _1ad36c885_Itoa((*(_35328_t)).get()._field_Column));
}



inline void _1b0eed667_head(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0ee14b2_Time _38013_time = static__1b0ee1a78_Now();;
	_1b0ee0cdb_AbsTime _38113_abs = _1b0ee3261_Abs(&_38013_time);;
	_1b0eeb269_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1b0eeb269_write(_self_, jule::Str("// JuleC version: ", 18));
	_1b0eeb269_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1b0eeb269_write(_self_, jule::Str("\n", 1));
	_1b0eeb269_write(_self_, jule::Str("// Date: ", 9));
	_1b0eeb269_write(_self_, _1ad36c203_FmtUint(_38113_abs._field_Day, 10LL));
	_1b0eeb269_write(_self_, jule::Str("/", 1));
	_1b0eeb269_write(_self_, _1ad36c203_FmtUint(_38113_abs._field_Month, 10LL));
	_1b0eeb269_write(_self_, jule::Str("/", 1));
	_1b0eeb269_write(_self_, _1ad36c203_FmtUint(_38113_abs._field_Year, 10LL));
	_1b0eeb269_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1b0eeb269_write(_self_, _self_.get()._field_info._field_Compiler);
	_1b0eeb269_write(_self_, jule::Str(" ", 1));
	_1b0eeb269_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	if (_1d36480ad_Production) {
		_1b0eeb269_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1d364791a_RC))) {
		_1b0eeb269_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1d3647ce4_Safety))) {
		_1b0eeb269_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1b0eed865_links(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n\n#include \"", 12));
	_1b0eeb269_write(_self_, _1aa640e14_PathApi);
	_1b0eeb269_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1b0eed865_links(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b487cde4:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _41816_used = *it;
			{
				{
					
					if ((!(_41816_used.get()._field_Binded))) {
						_case_begin_1b487d983:;
						{
							goto _iter_next_1b487cde4;
						}
					}
					else if (_1aa3b6706_IsStdHeaderPath(_41816_used.get()._field_Path)) {
						_case_begin_1b487da0a:;
						{
							_1b0eeb269_write(_self_, jule::Str("#include ", 9));
							_1b0eeb269_write(_self_, _41816_used.get()._field_Path);
							_1b0eeb269_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_1aa3b69ae_IsValidHeaderExt(_1aa371958_Ext(_41816_used.get()._field_Path))) {
						_case_begin_1b487da82:;
						{
							_1b0eeb269_write(_self_, jule::Str("#include \"", 10));
							_1b0eeb269_write(_self_, _41816_used.get()._field_Path);
							_1b0eeb269_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1b487d862:;
				};
			}
			_iter_next_1b487cde4:;
			++it;
			goto _iter_begin_1b487cde4;
		}
		_iter_end_1b487cde4:;
	};
}



inline void _1b0eedb1d_prepareStructure(_1b0eeaab5_ObjectCoder* _self_, jule::Ptr<_1b04e2871_Struct>* _43440_s) {
	{
		auto expr = &((*(_43440_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48801d2:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _43521_ins = *it;
			{
				{
					auto expr = &(_43521_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4881568:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _43625_m = *it;
						{
							if (_43625_m.get()._field_Statically) {
								goto _iter_next_1b4881568;
							};
							{
								auto expr = &(_43625_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b4882129:;
								if (it != expr_end) {
									jule::Ptr<_1b050b802_FnIns> _44029_mins = *it;
									{
										jule::Ptr<_1b050a856_ParamIns> _44129_p = _44029_mins.get()._field_Params[0LL];;
										if ((!(_1b05077cb_IsRef(_44129_p.get()._field_Decl.ptr())))) {
											_44129_p.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b100a388_customType>(_1b100a388_customType{._field_kind=(_1b1011526_kind((*(_self_))._field_tc.ptr(), _44129_p.get()._field_Kind) + jule::Str("*", 1))}), 27)});
										} else {
											_44129_p.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b100a388_customType>(_1b100a388_customType{._field_kind=_1b1011526_kind((*(_self_))._field_tc.ptr(), _44129_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1b4882129:;
									++it;
									goto _iter_begin_1b4882129;
								}
								_iter_end_1b4882129:;
							};
						}
						_iter_next_1b4881568:;
						++it;
						goto _iter_begin_1b4881568;
					}
					_iter_end_1b4881568:;
				};
			}
			_iter_next_1b48801d2:;
			++it;
			goto _iter_begin_1b48801d2;
		}
		_iter_end_1b48801d2:;
	};
}



inline void _1b0eedd1b_prepareStructures(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48827cd:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _46121_s = *it;
			{
				if ((_46121_s.get()._field_Token != nullptr)) {
					_1b0eedb1d_prepareStructure(_self_.ptr(), &(_46121_s));
				};
			}
			_iter_next_1b48827cd:;
			++it;
			goto _iter_begin_1b48827cd;
		}
		_iter_end_1b48827cd:;
	};
}



inline void _1b0eee0c4_iterPackages(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)> _46832_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4885acd:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _46921_used = *it;
			{
				if ((!(_46921_used.get()._field_Binded))) {
					_46832_f(&(_46921_used.get()._field_Package));
				};
			}
			_iter_next_1b4885acd:;
			++it;
			goto _iter_begin_1b4885acd;
		}
		_iter_end_1b4885acd:;
	};
	_46832_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1b0eee2c2_buildTraitMap(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eee0c4_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>([=](jule::Ptr<_1b056d3ad_Package>* _47835_pkg) mutable -> void {
		_1b10080ab_iterFiles(_47835_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>([=](jule::Ptr<_1b060c44c_SymbolTable>* _47936_file) mutable -> void {
			{
				auto expr = &((*(_47936_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b4888c8a:;
				if (it != expr_end) {
					jule::Ptr<_1b051bb97_Trait> _48029_t = *it;
					{
						if ((_48029_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_48029_t.get()._field_Implemented.len() == 0LL)) {
							jule::Ptr<_1b0ee9597_traitHash> _48533_hash = jule::new_ptr<_1b0ee9597_traitHash>(_1b0ee9597_traitHash{._field_t=_48029_t, ._field_s=nullptr, ._field_i=0LL});;
							_1aa364275_StrBuilder _49033_b = static__1aa364594_New(static_cast<jule::I64>(_48029_t.get()._field_Ident.len()));;
							static__1b1c84474_writeIdentTo(&(_49033_b), &(_48029_t.get()._field_Ident));
							_48533_hash.get()._field_ti=_1aa36d834_Str(&_49033_b);
							{ jule::Slice<jule::Ptr<_1b0ee9597_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(_48533_hash); };
							goto _iter_next_1b4888c8a;
						};
						jule::I64 _49629_i = 0LL;;
						{
							auto expr = &(_48029_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b4889582:;
							if (it != expr_end) {
								jule::Ptr<_1b04e2871_Struct> _49733_s = *it;
								{
									{
										auto expr = &(_49733_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b488c794:;
										if (it != expr_end) {
											jule::Ptr<_1b04e5951_StructIns> _49837_ins = *it;
											{
												jule::Ptr<_1b0ee9597_traitHash> _49937_hash = jule::new_ptr<_1b0ee9597_traitHash>(_1b0ee9597_traitHash{._field_t=_48029_t, ._field_s=_49837_ins, ._field_i=_49629_i});;
												_1aa364275_StrBuilder _50437_b = static__1aa364594_New(static_cast<jule::I64>(_48029_t.get()._field_Ident.len()));;
												static__1b1c84474_writeIdentTo(&(_50437_b), &(_48029_t.get()._field_Ident));
												_49937_hash.get()._field_ti=_1aa36d834_Str(&_50437_b);
												{ jule::Slice<jule::Ptr<_1b0ee9597_traitHash>> &__jule_push_dest = _self_.get()._field_tmap; __jule_push_dest.push(_49937_hash); };
												(_49629_i)++;
											}
											_iter_next_1b488c794:;
											++it;
											goto _iter_begin_1b488c794;
										}
										_iter_end_1b488c794:;
									};
								}
								_iter_next_1b4889582:;
								++it;
								goto _iter_begin_1b4889582;
							}
							_iter_end_1b4889582:;
						};
						_1b1008d59_pushMethodsFromInherits(&(_48029_t), &(_48029_t));
					}
					_iter_next_1b4888c8a:;
					++it;
					goto _iter_begin_1b4888c8a;
				}
				_iter_end_1b4888c8a:;
			};
		}));
	}));
}



inline void _1b0eee4c0_traitDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eee0c4_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>([=](jule::Ptr<_1b056d3ad_Package>* _52035_pkg) mutable -> void {
		_1b10080ab_iterFiles(_52035_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>([=](jule::Ptr<_1b060c44c_SymbolTable>* _52136_file) mutable -> void {
			{
				auto expr = &((*(_52136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b4890c3c:;
				if (it != expr_end) {
					jule::Ptr<_1b051bb97_Trait> _52229_t = *it;
					{
						if ((_52229_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1b0eeb863_indent(_self_);
						_1b0eeb269_write(_self_, jule::Str("struct ", 7));
						_1b0eeb269_write(_self_, static__1b1c85574_traitDecl(_52229_t));
						_1b0eeb269_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1b4890c3c:;
					++it;
					goto _iter_begin_1b4890c3c;
				}
				_iter_end_1b4890c3c:;
			};
		}));
	}));
}



inline void _1b0eee778_structurePlainDecl(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e2871_Struct>* _53543_s) {
	{
		auto expr = &((*(_53543_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4889461:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _53621_ins = *it;
			{
				_1b0eeb269_write(_self_, jule::Str("struct ", 7));
				_1b0eeb269_write(_self_, static__1b1c85dc1_structureIns(&(_53621_ins)));
				_1b0eeb269_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b4889461:;
			++it;
			goto _iter_begin_1b4889461;
		}
		_iter_end_1b4889461:;
	};
}



inline void _1b0eee976_structurePlainDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4891413:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _54421_s = *it;
			{
				if ((_54421_s.get()._field_Token != nullptr)) {
					_1b0eee778_structurePlainDecl(_self_, &(_54421_s));
				};
			}
			_iter_next_1b4891413:;
			++it;
			goto _iter_begin_1b4891413;
		}
		_iter_end_1b4891413:;
	};
}



inline void _1b0eeec2e_fieldDecl(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e4da1_FieldIns>* _55134_f) {
	_1b0eeb269_write(_self_, _1b1011526_kind(_self_.get()._field_tc.ptr(), (*(_55134_f)).get()._field_Kind));
	_1b0eeb269_write(_self_, jule::Str(" ", 1));
	_1b0eeb269_write(_self_, static__1b1c8618a_field(&((*(_55134_f)).get()._field_Decl)));
	if (((*(_55134_f)).get()._field_Default == nullptr)) {
		if (_1b10186d7_shouldInitialized(&((*(_55134_f)).get()._field_Kind))) {
			_1b0eeb269_write(_self_, jule::Str(" = ", 3));
			_1b1c7ba43_initExpr(_self_.get()._field_ec, (*(_55134_f)).get()._field_Kind);
		};
	} else {
		_1b0eeb269_write(_self_, jule::Str(" = ", 3));
		_1b1c71e56_possibleRefExpr(_self_.get()._field_ec, (*(_55134_f)).get()._field_Default.get()._field_Model);
	};
	_1b0eeb269_write(_self_, jule::Str(";", 1));
}



inline void _1b0eeeed7_structureDestructor(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _56944_s) {
	;
	jule::Ptr<_1b05088ed_Fn> _57213_disposeMethod = _1b04e69b8_FindMethod((*(_56944_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _57317_disposed = static__1b05b0620_Dispose(_57213_disposeMethod);;
	if ((!(_57317_disposed))) {
		return;;
	};
	_1b0eeb269_write(_self_, jule::Str("~", 1));
	_1b0eeb269_write(_self_, static__1b1c85dc1_structureIns(_56944_s));
	_1b0eeb269_write(_self_, jule::Str("(void) { ", 9));
	_1b0eeb269_write(_self_, static__1b1c84ee1_func(&(_57213_disposeMethod)));
	_1b0eeb269_write(_self_, jule::Str("(this); }", 9));
}



inline void _1b1000290_structureDeriveDefsDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _58545_s) {
	if (_1b04e4312_IsDerives((*(_58545_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, _1b1c7eded_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_58545_s)).get()._field_Decl)));
		_1b0eeb269_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1b1000603_structureOperatorEq(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Str* _59340_ident, jule::Ptr<_1b04e5951_StructIns>* _59357_s) {
	if ((!((*(_59357_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_59357_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1b1000d84_structureOperator(_self_, _59340_ident, &((*(_59357_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1b0eeb863_indent(_self_);
	if (_1b120364c_Inline) {
		_1b0eeb269_write(_self_, jule::Str("inline ", 7));
	};
	_1b0eeb269_write(_self_, jule::Str("bool operator==(", 16));
	_1b0eeb269_write(_self_, (*(_59340_ident)));
	_1b0eeb269_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_59357_s)).get()._field_Fields.len() > 0LL)) {
		_1b0eeb467_addIndent(_self_);
		_1b0eeb269_write(_self_, jule::Str("\n", 1));
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, jule::Str("return ", 7));
		_1b0eeb467_addIndent(_self_);
		jule::Bool _61621_writed = false;;
		{
			auto expr = &((*(_59357_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b48a007b:;
			if (it != expr_end) {
				jule::Ptr<_1b04e4da1_FieldIns> _61725_f = *it;
				{
					jule::Ptr<_1b04e5951_StructIns> _61921_strct = _1b064b722_Struct(_61725_f.get()._field_Kind.ptr());;
					if ((((_61921_strct != nullptr) && (_61921_strct.get()._field_Decl != nullptr)) && _61921_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1b48a007b;
					};
					if (_61621_writed) {
						_1b0eeb269_write(_self_, jule::Str(" &&", 3));
					};
					_61621_writed=true;
					_1b0eeb269_write(_self_, jule::Str("\n", 1));
					_1b0eeb863_indent(_self_);
					_1b0eeb269_write(_self_, jule::Str("this->", 6));
					jule::Str _63021_fIdent = static__1b1c8618a_field(&(_61725_f.get()._field_Decl));;
					_1b0eeb269_write(_self_, _63021_fIdent);
					_1b0eeb269_write(_self_, jule::Str(" == _other.", 11));
					_1b0eeb269_write(_self_, _63021_fIdent);
				}
				_iter_next_1b48a007b:;
				++it;
				goto _iter_begin_1b48a007b;
			}
			_iter_end_1b48a007b:;
		};
		_1b0eeb665_doneIndent(_self_);
		if ((!(_61621_writed))) {
			_1b0eeb269_write(_self_, jule::Str("true", 4));
		};
		_1b0eeb269_write(_self_, jule::Str(";\n", 2));
		_1b0eeb665_doneIndent(_self_);
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, jule::Str("}", 1));
	} else {
		_1b0eeb269_write(_self_, jule::Str(" return true; }", 15));
	};
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b1000966_structureOperatorNotEq(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Str* _64943_ident, jule::Ptr<_1b04e5951_StructIns>* _64960_s) {
	if ((!((*(_64960_s)).get()._field_Comparable))) {
		return;;
	};
	_1b0eeb863_indent(_self_);
	if (_1b120364c_Inline) {
		_1b0eeb269_write(_self_, jule::Str("inline ", 7));
	};
	_1b0eeb269_write(_self_, jule::Str("bool operator!=(", 16));
	_1b0eeb269_write(_self_, (*(_64943_ident)));
	_1b0eeb269_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1b1000d84_structureOperator(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Str* _66338_ident, jule::Ptr<_1b050b802_FnIns>* _66355_f, jule::Str _66366_op) {
	if (((*(_66355_f)) == nullptr)) {
		return;;
	};
	jule::Bool _66813_unary = ((*(_66355_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _66913_assignment = _1b0508d71_IsVoid((*(_66355_f)).get()._field_Decl.ptr());;
	_1b0eeb863_indent(_self_);
	if (_1b120364c_Inline) {
		_1b0eeb269_write(_self_, jule::Str("inline ", 7));
	};
	if (_66913_assignment) {
		_1b0eeb269_write(_self_, (*(_66338_ident)));
		_1b0eeb269_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1b064a19e_Prim((*(_66355_f)).get()._field_Result.ptr()) == nullptr)) {
			_1b0eeb269_write(_self_, (*(_66338_ident)));
		} else {
			_1b0eeb269_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1b0eeb269_write(_self_, jule::Str(" operator", 9));
	_1b0eeb269_write(_self_, _66366_op);
	_1b0eeb269_write(_self_, jule::Str("(", 1));
	if ((!(_66813_unary))) {
		jule::Ptr<_1b050a856_ParamIns> _69121_p = (*(_66355_f)).get()._field_Params[1LL];;
		_1b0eeb269_write(_self_, _1b101039e_paramIns(_self_.get()._field_tc.ptr(), &(_69121_p)));
		_1b0eeb269_write(_self_, jule::Str(" _other", 7));
	};
	_1b0eeb269_write(_self_, jule::Str(") { ", 4));
	if ((!(_66913_assignment))) {
		_1b0eeb269_write(_self_, jule::Str("return ", 7));
	};
	_1b0eeb269_write(_self_, static__1b1c852aa_funcIns(_66355_f));
	if ((!(_66813_unary))) {
		_1b0eeb269_write(_self_, jule::Str("(this, _other); ", 16));
		if (_66913_assignment) {
			_1b0eeb269_write(_self_, jule::Str("return *this; ", 14));
		};
		_1b0eeb269_write(_self_, jule::Str("}", 1));
	} else {
		_1b0eeb269_write(_self_, jule::Str("(this); }", 9));
	};
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b100113c_structureOperators(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _71243_s) {
	jule::Str _71313_ident = static__1b1c85dc1_structureIns(_71243_s);;
	_1b1000603_structureOperatorEq(_self_, &(_71313_ident), _71243_s);
	_1b1000966_structureOperatorNotEq(_self_, &(_71313_ident), _71243_s);
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1b1000d84_structureOperator(_self_, &(_71313_ident), &((*(_71243_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1b10013e5_structureInsDecl(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _75141_s) {
	{
		auto expr = &((*(_75141_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b353e128:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _75221_m = *it;
			{
				if (_1b10093dc_isHeadDecl(&(_75221_m))) {
					_1b100288b_funcDecl(_self_, &(_75221_m), false);
				};
			}
			_iter_next_1b353e128:;
			++it;
			goto _iter_begin_1b353e128;
		}
		_iter_end_1b353e128:;
	};
	_1b0eeb269_write(_self_, jule::Str("struct ", 7));
	jule::Str _75913_outIdent = static__1b1c85dc1_structureIns(_75141_s);;
	_1b0eeb269_write(_self_, _75913_outIdent);
	_1b0eeb269_write(_self_, jule::Str(" {\n", 3));
	_1b0eeb467_addIndent(_self_);
	{
		auto expr = &((*(_75141_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b6a59a:;
		if (it != expr_end) {
			jule::Ptr<_1b04e4da1_FieldIns> _76521_f = *it;
			{
				_1b0eeb863_indent(_self_);
				_1b0eeec2e_fieldDecl(_self_, &(_76521_f));
				_1b0eeb269_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1b3b6a59a:;
			++it;
			goto _iter_begin_1b3b6a59a;
		}
		_iter_end_1b3b6a59a:;
	};
	_1b0eeb863_indent(_self_);
	_1b0eeeed7_structureDestructor(_self_, _75141_s);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_1b1000290_structureDeriveDefsDecls(_self_, _75141_s);
	_1b100113c_structureOperators(_self_, _75141_s);
	_1b0eeb269_write(_self_, jule::Str("\n", 1));
	_1b0eeb665_doneIndent(_self_);
	_1b0eeb863_indent(_self_);
	_1b0eeb269_write(_self_, jule::Str("};", 2));
}



inline void _1b100169d_structureDecl(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e2871_Struct>* _78538_s) {
	{
		auto expr = &((*(_78538_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b6d78a:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _78621_ins = *it;
			{
				_1b10013e5_structureInsDecl(_self_, &(_78621_ins));
			}
			_iter_next_1b3b6d78a:;
			++it;
			goto _iter_begin_1b3b6d78a;
		}
		_iter_end_1b3b6d78a:;
	};
}



inline void _1b100189b_structureDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b6ded8:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _79221_s = *it;
			{
				if ((_79221_s.get()._field_Token != nullptr)) {
					_1b100169d_structureDecl(_self_, &(_79221_s));
					_1b0eeb269_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1b3b6ded8:;
			++it;
			goto _iter_begin_1b3b6ded8;
		}
		_iter_end_1b3b6ded8:;
	};
}



inline void _1b1001a99_structureMethodDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b6eb32:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _80121_s = *it;
			{
				if ((_80121_s.get()._field_Token != nullptr)) {
					{
						auto expr = &(_80121_s.get()._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b3b7164a:;
						if (it != expr_end) {
							jule::Ptr<_1b04e5951_StructIns> _80329_ins = *it;
							{
								{
									auto expr = &(_80329_ins.get()._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b3b71e86:;
									if (it != expr_end) {
										jule::Ptr<_1b05088ed_Fn> _80433_m = *it;
										{
											if ((!(_1b10093dc_isHeadDecl(&(_80433_m))))) {
												_1b0eec556_pushResult(_self_, &(_80433_m));
												_1b100288b_funcDecl(_self_, &(_80433_m), false);
											};
										}
										_iter_next_1b3b71e86:;
										++it;
										goto _iter_begin_1b3b71e86;
									}
									_iter_end_1b3b71e86:;
								};
							}
							_iter_next_1b3b7164a:;
							++it;
							goto _iter_begin_1b3b7164a;
						}
						_iter_end_1b3b7164a:;
					};
				};
			}
			_iter_next_1b3b6eb32:;
			++it;
			goto _iter_begin_1b3b6eb32;
		}
		_iter_end_1b3b6eb32:;
	};
}



inline void _1b1001d52_paramsDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>* _81636_params) {
	if (((*(_81636_params)).len() == 0LL)) {
		_1b0eeb269_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b0eeb269_write(_self_, jule::Str("(", 1));
	{
		auto expr = _81636_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b71c55:;
		if (it != expr_end) {
			jule::I64 _82314_i = it - expr->begin();
			jule::Ptr<_1b050a856_ParamIns> _82321_p = *it;
			{
				_1b0eeb269_write(_self_, _1b101039e_paramIns(_self_.get()._field_tc.ptr(), &(_82321_p)));
				if ((((*(_81636_params)).len() - _82314_i) > 1LL)) {
					_1b0eeb269_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b3b71c55:;
			++it;
			_82314_i++;
			goto _iter_begin_1b3b71c55;
		}
		_iter_end_1b3b71c55:;
	};
	_1b0eeb269_write(_self_, jule::Str(")", 1));
}



inline void _1b10021b5_funcHead(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b050b802_FnIns>* _83333_f, jule::Bool _83344_ptr) {
	if ((((!(_83344_ptr)) && _1b120364c_Inline) && (!(_1b050938d_IsEntryPoint((*(_83333_f)).get()._field_Decl.ptr()))))) {
		_1b0eeb269_write(_self_, jule::Str("inline ", 7));
	};
	_1b1010a53_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _83333_f);
	if (_83344_ptr) {
		_1b0eeb269_write(_self_, jule::Str("(*", 2));
		_1b0eeb269_write(_self_, static__1b1c852aa_funcIns(_83333_f));
		_1b0eeb269_write(_self_, jule::Str(")", 1));
	} else {
		_1b0eeb269_write(_self_, jule::Str(" ", 1));
		_1b0eeb269_write(_self_, static__1b1c852aa_funcIns(_83333_f));
	};
}



inline void _1b1002528_funcDeclIns(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b050b802_FnIns>* _84836_f, jule::Bool _84847_ptr) {
	_1b0eeb863_indent(_self_);
	_1b10021b5_funcHead(_self_, _84836_f, _84847_ptr);
	_1b1001d52_paramsDecls(_self_, &((*(_84836_f)).get()._field_Params));
	_1b0eeb269_write(_self_, jule::Str(";\n", 2));
}



inline void _1b100288b_funcDecl(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b05088ed_Fn>* _85533_f, jule::Bool _85541_ptr) {
	{
		auto expr = &((*(_85533_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b79565:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _85621_c = *it;
			{
				_1b1002528_funcDeclIns(_self_, &(_85621_c), _85541_ptr);
			}
			_iter_next_1b3b79565:;
			++it;
			goto _iter_begin_1b3b79565;
		}
		_iter_end_1b3b79565:;
	};
}



inline void _1b1002ca9_funcDeclTrait(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b051bb97_Trait>* _86138_t, jule::Ptr<_1b05088ed_Fn>* _86154_f, jule::Bool _86162_ptr) {
	{
		auto expr = &((*(_86154_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b7a6cb:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _86221_c = *it;
			{
				jule::Ptr<_1b06477a6_TypeKind> _86321_k = _86221_c.get()._field_Params[0LL].get()._field_Kind;;
				_86221_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_86138_t)), 2)});
				_1b1002528_funcDeclIns(_self_, &(_86221_c), _86162_ptr);
				_86221_c.get()._field_Params[0LL].get()._field_Kind=_86321_k;
			}
			_iter_next_1b3b7a6cb:;
			++it;
			goto _iter_begin_1b3b7a6cb;
		}
		_iter_end_1b3b7a6cb:;
	};
}



inline void _1b1002ea7_funcDecls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eee0c4_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>([=](jule::Ptr<_1b056d3ad_Package>* _87135_pkg) mutable -> void {
		_1b10080ab_iterFiles(_87135_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>([=](jule::Ptr<_1b060c44c_SymbolTable>* _87236_file) mutable -> void {
			{
				auto expr = &((*(_87236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b3b7e46b:;
				if (it != expr_end) {
					jule::Ptr<_1b05088ed_Fn> _87329_f = *it;
					{
						if (((!(_87329_f.get()._field_Binded)) && (_87329_f.get()._field_Token != nullptr))) {
							_1b0eec556_pushResult(_self_, &(_87329_f));
							_1b100288b_funcDecl(_self_, &(_87329_f), false);
						};
					}
					_iter_next_1b3b7e46b:;
					++it;
					goto _iter_begin_1b3b7e46b;
				}
				_iter_end_1b3b7e46b:;
			};
		}));
	}));
}



inline void _1b100331a_traitDataTypeMethods(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b051bb97_Trait>* _88345_owner, jule::Ptr<_1b051bb97_Trait>* _88365_t) {
	{
		auto expr = &((*(_88365_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b7aba4:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _88421_m = *it;
			{
				jule::Ptr<_1b050b802_FnIns> _88521_ins = _88421_m.get()._field_Instances[0LL];;
				jule::Ptr<_1b050a856_ParamIns> _88621_p = _88521_ins.get()._field_Params[0LL];;
				_88621_p.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_88365_t)), 2)});
				{
					auto expr = _88521_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1b3b8235e:;
					if (it != expr_end) {
						jule::I64 _89018_i = it - expr.begin();
						jule::Ptr<_1b050a856_ParamIns> _89025_ip = *it;
						{
							if (_1aa49de09_IsAnonIdent(_89025_ip.get()._field_Decl.get()._field_Ident)) {
								_89025_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1ad36c885_Itoa(_89018_i));
							};
						}
						_iter_next_1b3b8235e:;
						++it;
						_89018_i++;
						goto _iter_begin_1b3b8235e;
					}
					_iter_end_1b3b8235e:;
				};
				if ((!(_1d36480ad_Production))) {
					jule::Ptr<_1b050a856_ParamIns> _89625_lp = _88521_ins.get()._field_Params[(_88521_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _89625_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1b3b8496b:;
							{
								goto _match_end_1b3b8455e;
							}
						}
						else {
							_case_begin_1b3b845b4:;
							{
								{ jule::Slice<jule::Ptr<_1b050a856_ParamIns>> &__jule_push_dest = _88521_ins.get()._field_Params; __jule_push_dest.push(jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b100a388_customType>(_1b100a388_customType{._field_kind=jule::Str("const char*", 11)}), 27)})})); };
							}
						}
						_match_end_1b3b8455e:;
					};
				};
				_1b0eec556_pushResult(_self_, &(_88421_m));
				_1b1002ca9_funcDeclTrait(_self_, _88345_owner, &(_88421_m), true);
			}
			_iter_next_1b3b7aba4:;
			++it;
			goto _iter_begin_1b3b7aba4;
		}
		_iter_end_1b3b7aba4:;
	};
}



inline void _1b1003518_traitDataTypes(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eee0c4_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>([=](jule::Ptr<_1b056d3ad_Package>* _91935_pkg) mutable -> void {
		_1b10080ab_iterFiles(_91935_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>([=](jule::Ptr<_1b060c44c_SymbolTable>* _92036_file) mutable -> void {
			{
				auto expr = &((*(_92036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b3b87c16:;
				if (it != expr_end) {
					jule::Ptr<_1b051bb97_Trait> _92129_t = *it;
					{
						if ((_92129_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_92129_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1b3b87c16;
						};
						_1b0eeb269_write(_self_, jule::Str("struct ", 7));
						_1b0eeb269_write(_self_, static__1b1c85574_traitDecl(_92129_t));
						_1b0eeb269_write(_self_, jule::Str("MptrData", 8));
						_1b0eeb269_write(_self_, jule::Str(" {\n", 3));
						_1b0eeb467_addIndent(_self_);
						_1b100331a_traitDataTypeMethods(_self_, &(_92129_t), &(_92129_t));
						_1b0eeb665_doneIndent(_self_);
						_1b0eeb863_indent(_self_);
						_1b0eeb269_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1b3b87c16:;
					++it;
					goto _iter_begin_1b3b87c16;
				}
				_iter_end_1b3b87c16:;
			};
		}));
	}));
}



inline void _1b10037c1_paramIns(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b050a856_ParamIns>* _94233_p) {
	_1b0eeb269_write(_self_, _1b101039e_paramIns(_self_.get()._field_tc.ptr(), _94233_p));
	_1b0eeb269_write(_self_, jule::Str(" ", 1));
	_1b0eeb269_write(_self_, static__1b1c8583d_param(&((*(_94233_p)).get()._field_Decl)));
}



inline void _1b1003a79_paramsIns(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1b050a856_ParamIns>>* _94834_params) {
	if (((*(_94834_params)).len() == 0LL)) {
		_1b0eeb269_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b0eeb269_write(_self_, jule::Str("(", 1));
	{
		auto expr = _94834_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b8b951:;
		if (it != expr_end) {
			jule::I64 _95414_i = it - expr->begin();
			jule::Ptr<_1b050a856_ParamIns> _95421_p = *it;
			{
				_1b10037c1_paramIns(_self_, &(_95421_p));
				if ((((*(_94834_params)).len() - _95414_i) > 1LL)) {
					_1b0eeb269_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b3b8b951:;
			++it;
			_95414_i++;
			goto _iter_begin_1b3b8b951;
		}
		_iter_end_1b3b8b951:;
	};
	_1b0eeb269_write(_self_, jule::Str(")", 1));
}



inline void _1b1003ddc_varInitExpr(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b05ae1bd_Var>* _96336_v, jule::Fn<void(void)> _96345_init) {
	if ((*(_96336_v)).get()._field_Statically) {
		_1b0eeb269_write(_self_, jule::Str("static ", 7));
	};
	_1b0eeb269_write(_self_, _1b1011526_kind(_self_.get()._field_tc.ptr(), (*(_96336_v)).get()._field_Kind.get()._field_Kind));
	_1b0eeb269_write(_self_, jule::Str(" ", 1));
	if ((*(_96336_v)).get()._field_Reference) {
		_1b0eeb269_write(_self_, jule::Str("*", 1));
	};
	_1b0eeb269_write(_self_, static__1b1c86454_var((*(_96336_v))));
	if ((_96345_init != nullptr)) {
		_1b0eeb269_write(_self_, jule::Str(" = ", 3));
		_96345_init();
	};
	_1b0eeb269_write(_self_, jule::Str(";", 1));
}



inline void _1b1004195_var(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b05ae1bd_Var> _98127_v) {
	if (_1aa49db40_IsIgnoreIdent(_98127_v.get()._field_Ident)) {
		return;;
	};
	if (((_98127_v.get()._field_Value != nullptr) && (_98127_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_98127_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_98127_v.get()._field_Reference) {
				_1b1003ddc_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b0eeb269_write(_self_, jule::Str("&(", 2));
					_1b1c7b78a_model(_self_.get()._field_ec, _98127_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1b0eeb269_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1b1003ddc_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b1c71e56_possibleRefExpr(_self_.get()._field_ec, _98127_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1b1003ddc_varInitExpr(_self_, &(_98127_v), nullptr);
		return;;
	};
	if (_98127_v.get()._field_Reference) {
		_1b1003ddc_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b0eeb269_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1b10186d7_shouldInitialized(&(_98127_v.get()._field_Kind.get()._field_Kind))) {
		_1b1003ddc_varInitExpr(_self_, &(_98127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b1c7ba43_initExpr(_self_.get()._field_ec, _98127_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1b1003ddc_varInitExpr(_self_, &(_98127_v), nullptr);
}



inline void _1b100444d_funcIns(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b050b802_FnIns>* _101232_f) {
	_1b10021b5_funcHead(_self_, _101232_f, false);
	_1b1003a79_paramsIns(_self_, &((*(_101232_f)).get()._field_Params));
	_1b0eeb269_write(_self_, jule::Str(" ", 1));
	_1b1c6acc9_funcScope(_self_.get()._field_sc, (*(_101232_f)));
	if (((*(_101232_f)).get()._field_Scope != nullptr)) {
		_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1b1004706_func(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b05088ed_Fn>* _102229_f) {
	{
		auto expr = &((*(_102229_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b998d7:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _102321_ins = *it;
			{
				_1b100444d_funcIns(_self_, &(_102321_ins));
			}
			_iter_next_1b3b998d7:;
			++it;
			goto _iter_begin_1b3b998d7;
		}
		_iter_end_1b3b998d7:;
	};
}



inline void _1b1004a69_funcTrait(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b0ee9597_traitHash>* _102834_hash, jule::Ptr<_1b05088ed_Fn>* _102857_f) {
	jule::Str _102913_ident = (*(_102857_f)).get()._field_Ident;;
	{
		auto expr = &((*(_102857_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b9aad6:;
		if (it != expr_end) {
			jule::Ptr<_1b050b802_FnIns> _103021_ins = *it;
			{
				_103021_ins.get()._field_Scope=nullptr;
				_1aa364275_StrBuilder _103321_s = static__1aa364594_New(static_cast<jule::I64>((((((*(_102857_f)).get()._field_Ident.len() + _102913_ident.len()) + (*(_102834_hash)).get()._field_ti.len()) + 2LL) + 4LLU)));;
				_1aa36d03c_WriteStr(&_103321_s, _102913_ident);
				_1aa36d2e5_WriteByte(&_103321_s, '_');
				_1aa36d03c_WriteStr(&_103321_s, (*(_102834_hash)).get()._field_ti);
				_1aa36d2e5_WriteByte(&_103321_s, '_');
				_1aa36d03c_WriteStr(&_103321_s, _1ad36c885_Itoa((*(_102834_hash)).get()._field_i));
				(*(_102857_f)).get()._field_Ident=_1aa36d834_Str(&_103321_s);
				jule::Ptr<_1b06477a6_TypeKind> _104221_k = _103021_ins.get()._field_Params[0LL].get()._field_Kind;;
				_103021_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_102834_hash)).get()._field_t, 2)});
				_1b100444d_funcIns(_self_, &(_103021_ins));
				_103021_ins.get()._field_Params[0LL].get()._field_Kind=_104221_k;
			}
			_iter_next_1b3b9aad6:;
			++it;
			goto _iter_begin_1b3b9aad6;
		}
		_iter_end_1b3b9aad6:;
	};
	(*(_102857_f)).get()._field_Ident=_102913_ident;
}



inline void _1b1004dcc_traitWrapper(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b05088ed_Fn>* _105037_m, jule::Ptr<_1b0ee9597_traitHash>* _105050_hash) {
	_1b1004a69_funcTrait(_self_, _105050_hash, _105037_m);
	if (((*(_105050_hash)).get()._field_s == nullptr)) {
		if (_1d36480ad_Production) {
			_1b0eeb269_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1b0eeb269_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _106213_ptr = (!(_1b05077cb_IsRef((*(_105037_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1b05088ed_Fn> _106417_sm = _1b04e69b8_FindMethod((*(_105050_hash)).get()._field_s.ptr(), (*(_105037_m)).get()._field_Ident, false);;
	if (((_106417_sm == nullptr) || (_106417_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1b0eeb467_addIndent(_self_);
	_1b0eeb269_write(_self_, jule::Str("{\n", 2));
	_1b0eeb863_indent(_self_);
	if ((_106417_sm.get()._field_Exceptional || (!(_1b0508d71_IsVoid(_106417_sm.ptr()))))) {
		_1b0eeb269_write(_self_, jule::Str("return ", 7));
	};
	_1b0eeb269_write(_self_, static__1b1c84ee1_func(&(_106417_sm)));
	_1b0eeb269_write(_self_, jule::Str("(", 1));
	if (_106213_ptr) {
		_1b0eeb269_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1b0eeb269_write(_self_, _1b100e8cb_structureIns(_self_.get()._field_tc.ptr(), (*(_105050_hash)).get()._field_s));
		_1b0eeb269_write(_self_, jule::Str(">(", 2));
		if ((!(_1d36480ad_Production))) {
			_1b0eeb269_write(_self_, jule::Str("_00___file", 10));
		};
		_1b0eeb269_write(_self_, jule::Str(")", 1));
	} else {
		_1b0eeb269_write(_self_, jule::Str("_self_.data.as<", 15));
		_1b0eeb269_write(_self_, _1b100e58a_structure(_self_.get()._field_tc.ptr(), _106417_sm.get()._field_Owner));
		_1b0eeb269_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_105037_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b3ba4cee:;
		if (it != expr_end) {
			jule::Ptr<_1b0506e29_Param> _109016_mp = *it;
			{
				_1b0eeb269_write(_self_, jule::Str(", ", 2));
				_1b0eeb269_write(_self_, static__1b1c8583d_param(&(_109016_mp)));
			}
			_iter_next_1b3ba4cee:;
			++it;
			goto _iter_begin_1b3ba4cee;
		}
		_iter_end_1b3ba4cee:;
	};
	_1b0eeb269_write(_self_, jule::Str(");\n}\n", 5));
	_1b0eeb665_doneIndent(_self_);
}



inline void _1b10050ca_traitWrappers(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ba0723:;
		if (it != expr_end) {
			jule::Ptr<_1b0ee9597_traitHash> _109921_hash = *it;
			{
				{
					auto expr = &(_109921_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b3ba91cc:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _110025_m = *it;
						{
							_1b1004dcc_traitWrapper(_self_, &(_110025_m), &(_109921_hash));
						}
						_iter_next_1b3ba91cc:;
						++it;
						goto _iter_begin_1b3ba91cc;
					}
					_iter_end_1b3ba91cc:;
				};
			}
			_iter_next_1b3ba0723:;
			++it;
			goto _iter_begin_1b3ba0723;
		}
		_iter_end_1b3ba0723:;
	};
}



inline void _1b100543d_traitDataMethods(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b051bb97_Trait>* _110641_t, jule::Ptr<_1b0ee9597_traitHash>* _110653_hash) {
	{
		auto expr = &((*(_110641_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3ba9aa1:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _110721_m = *it;
			{
				jule::Str _110817_mIdent = static__1b1c84ee1_func(&(_110721_m));;
				_1b0eeb863_indent(_self_);
				_1b0eeb269_write(_self_, jule::Str(".", 1));
				_1b0eeb269_write(_self_, _110817_mIdent);
				_1b0eeb269_write(_self_, jule::Str("=", 1));
				_1b0eeb269_write(_self_, _110817_mIdent);
				_1b0eeb269_write(_self_, jule::Str("_", 1));
				_1b0eeb269_write(_self_, (*(_110653_hash)).get()._field_ti);
				_1b0eeb269_write(_self_, jule::Str("_", 1));
				_1b0eeb269_write(_self_, _1ad36c885_Itoa((*(_110653_hash)).get()._field_i));
				_1b0eeb269_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1b3ba9aa1:;
			++it;
			goto _iter_begin_1b3ba9aa1;
		}
		_iter_end_1b3ba9aa1:;
	};
}



inline void _1b10057a1_traitData(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b0ee9597_traitHash>* _112234_hash, jule::Ptr<_1b051bb97_Trait>* _112257_old) {
	if (((*(_112234_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _112613_ident = static__1b1c85574_traitDecl((*(_112234_hash)).get()._field_t);;
	if (((*(_112234_hash)).get()._field_t != (*(_112257_old)))) {
		if (((*(_112257_old)) != nullptr)) {
			_1b0eeb665_doneIndent(_self_);
			_1b0eeb863_indent(_self_);
			_1b0eeb269_write(_self_, jule::Str("};\n", 3));
		};
		_1b0eeb269_write(_self_, jule::Str("static ", 7));
		_1b0eeb269_write(_self_, _112613_ident);
		_1b0eeb269_write(_self_, jule::Str("MptrData ", 9));
		_1b0eeb269_write(_self_, _112613_ident);
		_1b0eeb269_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_112257_old))=(*(_112234_hash)).get()._field_t;
		_1b0eeb467_addIndent(_self_);
	};
	_1b0eeb863_indent(_self_);
	_1b0eeb269_write(_self_, jule::Str("{\n", 2));
	_1b0eeb467_addIndent(_self_);
	_1b100543d_traitDataMethods(_self_, &((*(_112234_hash)).get()._field_t), _112234_hash);
	_1b0eeb665_doneIndent(_self_);
	_1b0eeb863_indent(_self_);
	_1b0eeb269_write(_self_, jule::Str("},\n", 3));
}



inline void _1b100599e_traitDatas(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	jule::Ptr<_1b051bb97_Trait> _115117_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bb2889:;
		if (it != expr_end) {
			jule::Ptr<_1b0ee9597_traitHash> _115221_hash = *it;
			{
				_1b10057a1_traitData(_self_, &(_115221_hash), &(_115117_old));
			}
			_iter_next_1b3bb2889:;
			++it;
			goto _iter_begin_1b3bb2889;
		}
		_iter_end_1b3bb2889:;
	};
	if ((_115117_old != nullptr)) {
		_1b0eeb665_doneIndent(_self_);
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1b1005b9c_globals(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bb41b5:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _116321_v = *it;
			{
				_1b0eeb269_write(_self_, _1b1011526_kind(_self_.get()._field_tc.ptr(), _116321_v.get()._field_Kind.get()._field_Kind));
				_1b0eeb269_write(_self_, jule::Str(" ", 1));
				_1b0eeb269_write(_self_, static__1b1c86454_var(_116321_v));
				_1b0eeb269_write(_self_, jule::Str(" = ", 3));
				_1b1c7b78a_model(_self_.get()._field_ec, _116321_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1b0eeb269_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b3bb41b5:;
			++it;
			goto _iter_begin_1b3bb41b5;
		}
		_iter_end_1b3bb41b5:;
	};
}



inline void _1b1005d9a_decls(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eee4c0_traitDecls(_self_);
	_1b0eee976_structurePlainDecls(_self_);
	_1b100189b_structureDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_1aa36dcb8_Len(&_self_.get()._field_Obj));
	_1b1001a99_structureMethodDecls(_self_);
	_1b1002ea7_funcDecls(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_1b1003518_traitDataTypes(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_1b10050ca_traitWrappers(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_1b100599e_traitDatas(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_1aa36dcb8_Len(&_self_.get()._field_Obj));
	_1b1005b9c_globals(_self_);
}



inline void _1b1006153_structureMethods(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _119141_s) {
	{
		auto expr = &((*(_119141_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bb9b05:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _119221_f = *it;
			{
				_1b1004706_func(_self_, &(_119221_f));
				_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b3bb9b05:;
			++it;
			goto _iter_begin_1b3bb9b05;
		}
		_iter_end_1b3bb9b05:;
	};
}



inline void _1b100640b_structureDeriveDefs(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _119844_s) {
	if (_1b04e4312_IsDerives((*(_119844_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b0eeb269_write(_self_, _1b1c8023e_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_119844_s)).get()._field_Decl)));
		_1b0eeb269_write(_self_, jule::Str("{\n", 2));
		_1b0eeb467_addIndent(_self_);
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, _1b100e8cb_structureIns(_self_.get()._field_tc.ptr(), (*(_119844_s))));
		_1b0eeb269_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_119844_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3bbc102:;
			if (it != expr_end) {
				jule::Ptr<_1b04e4da1_FieldIns> _120620_f = *it;
				{
					jule::Str _120721_ident = static__1b1c8618a_field(&(_120620_f.get()._field_Decl));;
					_1b0eeb863_indent(_self_);
					_1b0eeb269_write(_self_, jule::Str("clone.", 6));
					_1b0eeb269_write(_self_, _120721_ident);
					_1b0eeb269_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1b0eeb269_write(_self_, _120721_ident);
					_1b0eeb269_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1b3bbc102:;
				++it;
				goto _iter_begin_1b3bbc102;
			}
			_iter_end_1b3bbc102:;
		};
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, jule::Str("return clone;\n", 14));
		_1b0eeb665_doneIndent(_self_);
		_1b0eeb269_write(_self_, jule::Str("}", 1));
	};
}



inline void _1b10066b4_structureOstream(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _122241_s) {
	_1b0eeb863_indent(_self_);
	_1b0eeb269_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1b0eeb269_write(_self_, static__1b1c85dc1_structureIns(_122241_s));
	_1b0eeb269_write(_self_, jule::Str(" _Src) {\n", 9));
	_1b0eeb467_addIndent(_self_);
	_1b0eeb863_indent(_self_);
	jule::Ptr<_1b05088ed_Fn> _123017_fts = _1b04e69b8_FindMethod((*(_122241_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1b05b08d9_Str(_123017_fts)) {
		_1b0eeb269_write(_self_, jule::Str("_Stream << ", 11));
		_1b0eeb269_write(_self_, static__1b1c84ee1_func(&(_123017_fts)));
		_1b0eeb269_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1b0eeb269_write(_self_, jule::Str("_Stream << \"", 12));
		_1b1c7c505_cstrBytes(&(_self_.get()._field_Obj), (*(_122241_s)).get()._field_Decl.get()._field_Ident);
		_1b0eeb269_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_122241_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3bc326d:;
			if (it != expr_end) {
				jule::I64 _124018_i = it - expr->begin();
				jule::Ptr<_1b04e4da1_FieldIns> _124025_f = *it;
				{
					_1b0eeb863_indent(_self_);
					_1b0eeb269_write(_self_, jule::Str("_Stream << \"", 12));
					_1b1c7c505_cstrBytes(&(_self_.get()._field_Obj), _124025_f.get()._field_Decl.get()._field_Ident);
					_1b0eeb269_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1b04e5951_StructIns> _124721_strct = _1b064b722_Struct(_124025_f.get()._field_Kind.ptr());;
					if ((((_124721_strct != nullptr) && (_124721_strct.get()._field_Decl != nullptr)) && _124721_strct.get()._field_Decl.get()._field_Binded)) {
						_1b0eeb269_write(_self_, jule::Str(" cpp.", 5));
						_1b0eeb269_write(_self_, static__1b1c8618a_field(&(_124025_f.get()._field_Decl)));
						_1b0eeb269_write(_self_, jule::Str("\"", 1));
					} else {
						_1b0eeb269_write(_self_, jule::Str("\" << _Src.", 10));
						_1b0eeb269_write(_self_, static__1b1c8618a_field(&(_124025_f.get()._field_Decl)));
					};
					if (((_124018_i + 1LL) < (*(_122241_s)).get()._field_Fields.len())) {
						_1b0eeb269_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1b0eeb269_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1b3bc326d:;
				++it;
				_124018_i++;
				goto _iter_begin_1b3bc326d;
			}
			_iter_end_1b3bc326d:;
		};
		_1b0eeb863_indent(_self_);
		_1b0eeb269_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1b0eeb863_indent(_self_);
	_1b0eeb269_write(_self_, jule::Str("return _Stream;\n", 16));
	_1b0eeb665_doneIndent(_self_);
	_1b0eeb269_write(_self_, jule::Str("}", 1));
}



inline void _1b100696c_structureIns(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e5951_StructIns>* _127337_s) {
	_1b1006153_structureMethods(_self_, _127337_s);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_1b100640b_structureDeriveDefs(_self_, _127337_s);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	_1b10066b4_structureOstream(_self_, _127337_s);
}



inline void _1b1006c25_structure(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b04e2871_Struct>* _128134_s) {
	{
		auto expr = &((*(_128134_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bca990:;
		if (it != expr_end) {
			jule::Ptr<_1b04e5951_StructIns> _128221_ins = *it;
			{
				_1b100696c_structureIns(_self_, &(_128221_ins));
				_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b3bca990:;
			++it;
			goto _iter_begin_1b3bca990;
		}
		_iter_end_1b3bca990:;
	};
}



inline void _1b1006e23_structures(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bcb1cc:;
		if (it != expr_end) {
			jule::Ptr<_1b04e2871_Struct> _128921_s = *it;
			{
				if ((_128921_s.get()._field_Token != nullptr)) {
					_1b1006c25_structure(_self_, &(_128921_s));
					_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b3bcb1cc:;
			++it;
			goto _iter_begin_1b3bcb1cc;
		}
		_iter_end_1b3bcb1cc:;
	};
}



inline void _1b1007121_funcs(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eee0c4_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>([=](jule::Ptr<_1b056d3ad_Package>* _129835_pkg) mutable -> void {
		_1b10080ab_iterFiles(_129835_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>([=](jule::Ptr<_1b060c44c_SymbolTable>* _129936_file) mutable -> void {
			{
				auto expr = &((*(_129936_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b3bceab5:;
				if (it != expr_end) {
					jule::Ptr<_1b05088ed_Fn> _130029_f = *it;
					{
						if (((!(_1d3647651_Test)) && _1b101841d_hasDirective(&(_130029_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1b3bceab5;
						};
						if (((!(_130029_f.get()._field_Binded)) && (_130029_f.get()._field_Token != nullptr))) {
							_1b1004706_func(_self_, &(_130029_f));
							_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1b3bceab5:;
					++it;
					goto _iter_begin_1b3bceab5;
				}
				_iter_end_1b3bceab5:;
			};
		}));
	}));
}



inline void _1b10073c9_pushInit(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_, jule::Ptr<_1b056d3ad_Package>* _131333_pkg) {
	_1b10080ab_iterFiles(_131333_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)>([=](jule::Ptr<_1b060c44c_SymbolTable>* _131432_file) mutable -> void {
		{
			auto expr = &((*(_131432_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3bd1ee6:;
			if (it != expr_end) {
				jule::Ptr<_1b05088ed_Fn> _131520_f = *it;
				{
					if (_131520_f.get()._field_Ident.equal("init", 4)) {
						_1b0eeb863_indent(_self_);
						_1b0eeb269_write(_self_, static__1b1c84ee1_func(&(_131520_f)));
						_1b0eeb269_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1b3bd1ee6:;
				++it;
				goto _iter_begin_1b3bd1ee6;
			}
			_iter_end_1b3bd1ee6:;
		};
	}));
}



inline void _1b10075c7_initCaller(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eeb269_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1b0eeb467_addIndent(_self_);
	_1b0eee0c4_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1b056d3ad_Package>*)>([=](jule::Ptr<_1b056d3ad_Package>* _132835_pkg) mutable -> void {
		_1b10073c9_pushInit(_self_, _132835_pkg);
	}));
	_1b0eeb665_doneIndent(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n}", 2));
}



inline void _1b10077c5_end(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eeb269_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_1d3647651_Test) {
		_1b0eeb269_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1b0eeb269_write(_self_, jule::Str("entry_point();", 14));
	};
	_1b0eeb269_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1b10079c3_serializeHead(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b0eedd1b_prepareStructures(_self_);
	_1b0eee2c2_buildTraitMap(_self_);
	_1b0eed667_head(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n", 1));
	_1b1005d9a_decls(_self_);
	if ((_1aa36dcb8_Len(&_self_.get()._field_resultDecls) > 0LL)) {
		jule::Slice<jule::U8> _136321_head = jule::clone(_1aa36e2d5_Buf(&_self_.get()._field_Obj).slice(0LL, _self_.get()._field_headPos));;
		(_136321_head).append(_1aa36e2d5_Buf(&_self_.get()._field_resultDecls));;
		_self_.get()._field_declPos+=_1aa36dcb8_Len(&_self_.get()._field_resultDecls);
		(_136321_head).append(_1aa36e2d5_Buf(&_self_.get()._field_Obj).slice(_self_.get()._field_headPos));;
		{
			_1aa36e58d_SetBuf(&_self_.get()._field_Obj, _136321_head);
		};
	};
	_1b0eeb269_write(_self_, jule::Str("\n", 1));
	_1b1006e23_structures(_self_);
	_1b1007121_funcs(_self_);
	_1b10075c7_initCaller(_self_);
	_1b0eeb269_write(_self_, jule::Str("\n\n", 2));
	if ((_1aa36dcb8_Len(&_self_.get()._field_anyObj) > 0LL)) {
		jule::Slice<jule::U8> _137721_head = jule::clone(_1aa36e2d5_Buf(&_self_.get()._field_Obj).slice(0LL, _self_.get()._field_declPos));;
		(_137721_head).append(_1aa36e2d5_Buf(&_self_.get()._field_anyObj));;
		(_137721_head).append(_1aa36e2d5_Buf(&_self_.get()._field_Obj).slice(_self_.get()._field_declPos));;
		{
			_1aa36e58d_SetBuf(&_self_.get()._field_Obj, _137721_head);
		};
	};
}



inline void _1b1007bc1_Serialize(jule::Ptr<_1b0eeaab5_ObjectCoder> _self_) {
	_1b10079c3_serializeHead(_self_);
	_1b10077c5_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b0eeaab5_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b0b9d180_ObjectDeadCode> static__1b0b9d49e_new(jule::Ptr<_1b11eb5ce_IR>* _3424_ir) {
	return jule::new_ptr<_1b0b9d180_ObjectDeadCode>(_1b0b9d180_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1b44b5037_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b051bb97_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1b051bb97_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b44b6cd6:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1b44b6ad8:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44b6d4c:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b44b6d4c:;
			++it;
			_5213_i++;
			goto _iter_begin_1b44b6d4c;
		}
		_iter_end_1b44b6d4c:;
	};
	return false;;
}

inline jule::Bool _1b44b9e82_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b050b802_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1b050b802_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b44bbdeb:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1b44bbd41:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44bca01:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b44bca01:;
			++it;
			_5213_i++;
			goto _iter_begin_1b44bca01;
		}
		_iter_end_1b44bca01:;
	};
	return false;;
}

inline jule::Bool _1b44c23a7_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b04e5951_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1b04e5951_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b44c5267:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1b44c50d0:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44c5344:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b44c5344:;
			++it;
			_5213_i++;
			goto _iter_begin_1b44c5344;
		}
		_iter_end_1b44c5344:;
	};
	return false;;
}

inline jule::Bool _1b44c77a8_isLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b05ae1bd_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b44c9436:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1b44c9315:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44c93c0:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b44c93c0:;
			++it;
			_5213_i++;
			goto _iter_begin_1b44c93c0;
		}
		_iter_end_1b44c93c0:;
	};
	return false;;
}



inline void _1b44b5433_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b051bb97_Trait> _6035_t) {
	{
		
{
			_case_begin_1b44b8cc7:;
			{
				{ jule::Slice<jule::Ptr<_1b051bb97_Trait>> &__jule_push_dest = _self_.get()._field_live._field_traits; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b44b8ac9:;
	};
}

inline void _1b44ba59d_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b050b802_FnIns> _6035_t) {
	{
		
{
			_case_begin_1b44be56e:;
			{
				{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b44be44d:;
	};
}

inline void _1b44c161a_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b04e5951_StructIns> _6035_t) {
	{
		
{
			_case_begin_1b44c2d8b:;
			{
				{ jule::Slice<jule::Ptr<_1b04e5951_StructIns>> &__jule_push_dest = _self_.get()._field_live._field_structs; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b44c2c04:;
	};
}

inline void _1b44c7ba4_pushLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b05ae1bd_Var> _6035_t) {
	{
		
{
			_case_begin_1b44cb7ac:;
			{
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _self_.get()._field_live._field_vars; __jule_push_dest.push(_6035_t); };
			}
		}
		_match_end_1b44cb702:;
	};
}



inline void _1b0b9dd51_setReferencesAsLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b050e99d_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1b0510196_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1b05104d7_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b44b3d8d:;
					{
						jule::Ptr<_1b051bb97_Trait> _8225_t = _7921_ref.cast_ptr<_1b051bb97_Trait>(&__jule_any_type10);;
						if (_1b44b5037_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1b44b3200;
						};
						_1b44b5433_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b44b4ab4:;
							if (it != expr_end) {
								jule::Ptr<_1b05088ed_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b44b8876:;
										if (it != expr_end) {
											jule::Ptr<_1b050b802_FnIns> _8833_mins = *it;
											{
												if (_1b44b9e82_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1b44b8876;
												};
												_1b44ba59d_pushLive(_self_, _8833_mins);
												_1b0b9dd51_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1b44b8876:;
											++it;
											goto _iter_begin_1b44b8876;
										}
										_iter_end_1b44b8876:;
									};
								}
								_iter_next_1b44b4ab4:;
								++it;
								goto _iter_begin_1b44b4ab4;
							}
							_iter_end_1b44b4ab4:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b44b3e04:;
					{
						jule::Ptr<_1b050b802_FnIns> _9725_f = _7921_ref.cast_ptr<_1b050b802_FnIns>(&__jule_any_type7);;
						if (_1b44b9e82_isLive(_self_, &(_9725_f))) {
							goto _match_end_1b44b3871;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1b44c23a7_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1b44c161a_pushLive(_self_, _9725_f.get()._field_Owner);
								_1b0b9dd51_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1b44ba59d_pushLive(_self_, _9725_f);
						_1b0b9dd51_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b44b3e6a:;
					{
						jule::Ptr<_1b05ae1bd_Var> _11025_v = _7921_ref.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8);;
						if (_1b44c77a8_isLive(_self_, &(_11025_v))) {
							goto _match_end_1b44b3871;
						};
						_1b44c7ba4_pushLive(_self_, _11025_v);
						_1b0b9dd51_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b44b3ee2:;
					{
						jule::Ptr<_1b04e5951_StructIns> _11725_s = _7921_ref.cast_ptr<_1b04e5951_StructIns>(&__jule_any_type9);;
						if (_1b44c23a7_isLive(_self_, &(_11725_s))) {
							goto _match_end_1b44b3871;
						};
						_1b44c161a_pushLive(_self_, _11725_s);
						_1b0b9dd51_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b44cde63:;
							if (it != expr_end) {
								jule::Ptr<_1b05088ed_Fn> _12329_m = *it;
								{
									{
										auto expr = &(_12329_m.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b44ceb67:;
										if (it != expr_end) {
											jule::Ptr<_1b050b802_FnIns> _12433_ins = *it;
											{
												if (_1b44b9e82_isLive(_self_, &(_12433_ins))) {
													goto _iter_next_1b44ceb67;
												};
												if (_1b1390036_isTraitMethod(&(_11725_s), &(_12433_ins))) {
													_1b44ba59d_pushLive(_self_, _12433_ins);
													_1b0b9dd51_setReferencesAsLive(_self_, &(_12433_ins.get()._field_Refers));
												};
											}
											_iter_next_1b44ceb67:;
											++it;
											goto _iter_begin_1b44ceb67;
										}
										_iter_end_1b44ceb67:;
									};
								}
								_iter_next_1b44cde63:;
								++it;
								goto _iter_begin_1b44cde63;
							}
							_iter_end_1b44cde63:;
						};
					}
				}
				_match_end_1b44b3871:;
			};
		}
	_iter_next_1b44b3200:;
	}
	_iter_end_1b44b3200:;;
}



inline void _1b0b9e109_inits(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b056d3ad_Package>* _14130_pkg) {
	{
		auto expr = &((*(_14130_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44b8326:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _14221_file = *it;
			{
				{
					auto expr = &(_14221_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44d1691:;
					if (it != expr_end) {
						jule::Ptr<_1b05088ed_Fn> _14325_f = *it;
						{
							if (_14325_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1b050b802_FnIns> _14529_ins = _14325_f.get()._field_Instances[0LL];;
								{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_14529_ins); };
								_1b0b9dd51_setReferencesAsLive(_self_, &(_14529_ins.get()._field_Refers));
							};
						}
						_iter_next_1b44d1691:;
						++it;
						goto _iter_begin_1b44d1691;
					}
					_iter_end_1b44d1691:;
				};
			}
			_iter_next_1b44b8326:;
			++it;
			goto _iter_begin_1b44b8326;
		}
		_iter_end_1b44b8326:;
	};
}



inline void _1b0b9e3b2_collectLivePackage(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b056d3ad_Package>* _15343_pkg) {
	_1b0b9e109_inits(_self_, _15343_pkg);
	if (_1d3647651_Test) {
		{
			auto expr = &((*(_15343_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b44d41ee:;
			if (it != expr_end) {
				jule::Ptr<_1b060c44c_SymbolTable> _15925_file = *it;
				{
					{
						auto expr = &(_15925_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b44d4a3a:;
						if (it != expr_end) {
							jule::Ptr<_1b05088ed_Fn> _16029_f = *it;
							{
								if (_1b138eb6d_hasDirective(&(_16029_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1b050b802_FnIns> _16233_ins = _16029_f.get()._field_Instances[0LL];;
									{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_16233_ins); };
									_1b0b9dd51_setReferencesAsLive(_self_, &(_16233_ins.get()._field_Refers));
								};
							}
							_iter_next_1b44d4a3a:;
							++it;
							goto _iter_begin_1b44d4a3a;
						}
						_iter_end_1b44d4a3a:;
					};
				}
				_iter_next_1b44d41ee:;
				++it;
				goto _iter_begin_1b44d41ee;
			}
			_iter_end_1b44d41ee:;
		};
	};
}



inline void _1b0b9e5b0_collectLive(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44d4122:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _17221_used = *it;
			{
				if ((!(_17221_used.get()._field_Binded))) {
					_1b0b9e3b2_collectLivePackage(_self_, &(_17221_used.get()._field_Package));
				};
			}
			_iter_next_1b44d4122:;
			++it;
			goto _iter_begin_1b44d4122;
		}
		_iter_end_1b44d4122:;
	};
	_1b0b9e3b2_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1b05088ed_Fn> _18017_main = _1b056e942_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1b050b802_FnIns> _18117_ins = _18017_main.get()._field_Instances[0LL];;
	{ jule::Slice<jule::Ptr<_1b050b802_FnIns>> &__jule_push_dest = _self_.get()._field_live._field_fns; __jule_push_dest.push(_18117_ins); };
	_1b0b9dd51_setReferencesAsLive(_self_, &(_18117_ins.get()._field_Refers));
}



inline void _1b0b9e868_removeDeadGlobals(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _18642_vars) {
	jule::I64 _18717_i = 0LL;;
	while ((_18717_i < (*(_18642_vars)).len())) {
		{
			jule::Ptr<_1b05ae1bd_Var> _18917_v = (*(_18642_vars))[_18717_i];;
			if (_1b44c77a8_isLive(_self_, &(_18917_v))) {
				(_18717_i)++;
				goto _iter_next_1b44d9457;
			};
			(*(_18642_vars))=jule::append((*(_18642_vars)).slice(0LL, _18717_i),(*(_18642_vars)).slice((_18717_i + 1LL)));
		}
	_iter_next_1b44d9457:;
	}
	_iter_end_1b44d9457:;;
}



inline void _1b0b9eb21_removeDeadFns(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b05088ed_Fn>>* _19838_funcs) {
	jule::I64 _19917_i = 0LL;;
	while ((_19917_i < (*(_19838_funcs)).len())) {
		{
			jule::Ptr<_1b05088ed_Fn> _20121_f = (*(_19838_funcs))[_19917_i];;
			jule::I64 _20221_j = 0LL;;
			while ((_20221_j < _20121_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1b050b802_FnIns> _20421_ins = _20121_f.get()._field_Instances[_20221_j];;
					if (_1b44b9e82_isLive(_self_, &(_20421_ins))) {
						(_20221_j)++;
						goto _iter_next_1b44dc449;
					};
					_20121_f.get()._field_Instances=jule::append(_20121_f.get()._field_Instances.slice(0LL, _20221_j),_20121_f.get()._field_Instances.slice((_20221_j + 1LL)));
				}
			_iter_next_1b44dc449:;
			}
			_iter_end_1b44dc449:;;
			if ((_20121_f.get()._field_Instances.len() == 0LL)) {
				(*(_19838_funcs))=jule::append((*(_19838_funcs)).slice(0LL, _19917_i),(*(_19838_funcs)).slice((_19917_i + 1LL)));
				goto _iter_next_1b44db646;
			};
			(_19917_i)++;
		}
	_iter_next_1b44db646:;
	}
	_iter_end_1b44db646:;;
}



inline void _1b0b9edc9_removeDeadStructs(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b04e2871_Struct>>* _21942_structs) {
	jule::I64 _22017_i = 0LL;;
	while ((_22017_i < (*(_21942_structs)).len())) {
		{
			jule::Ptr<_1b04e2871_Struct> _22221_s = (*(_21942_structs))[_22017_i];;
			jule::I64 _22321_j = 0LL;;
			while ((_22321_j < _22221_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1b04e5951_StructIns> _22525_ins = _22221_s.get()._field_Instances[_22321_j];;
					_1b0b9eb21_removeDeadFns(_self_, &(_22525_ins.get()._field_Methods));
					if (((_22525_ins.get()._field_Methods.len() != 0LL) || _1b44c23a7_isLive(_self_, &(_22525_ins)))) {
						(_22321_j)++;
						goto _iter_next_1b44e1184;
					};
					_22221_s.get()._field_Instances=jule::append(_22221_s.get()._field_Instances.slice(0LL, _22321_j),_22221_s.get()._field_Instances.slice((_22321_j + 1LL)));
				}
			_iter_next_1b44e1184:;
			}
			_iter_end_1b44e1184:;;
			if ((_22221_s.get()._field_Instances.len() == 0LL)) {
				(*(_21942_structs))=jule::append((*(_21942_structs)).slice(0LL, _22017_i),(*(_21942_structs)).slice((_22017_i + 1LL)));
				goto _iter_next_1b44e0381;
			};
			(_22017_i)++;
		}
	_iter_next_1b44e0381:;
	}
	_iter_end_1b44e0381:;;
}



inline void _1b0ba0182_removeDeadTraits(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1b051bb97_Trait>>* _24141_traits) {
	jule::I64 _24217_i = 0LL;;
	while ((_24217_i < (*(_24141_traits)).len())) {
		{
			jule::Ptr<_1b051bb97_Trait> _24421_t = (*(_24141_traits))[_24217_i];;
			if ((!(_1b44b5037_isLive(_self_, &(_24421_t))))) {
				(*(_24141_traits))=jule::append((*(_24141_traits)).slice(0LL, _24217_i),(*(_24141_traits)).slice((_24217_i + 1LL)));
				goto _iter_next_1b44e47e7;
			};
			jule::I64 _24921_j = 0LL;;
			while ((_24921_j < _24421_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1b04e2871_Struct> _25121_s = _24421_t.get()._field_Implemented[_24921_j];;
					if ((_25121_s.get()._field_Instances.len() > 0LL)) {
						(_24921_j)++;
						goto _iter_next_1b44e5177;
					};
					_24421_t.get()._field_Implemented=jule::append(_24421_t.get()._field_Implemented.slice(0LL, _24921_j),_24421_t.get()._field_Implemented.slice((_24921_j + 1LL)));
				}
			_iter_next_1b44e5177:;
			}
			_iter_end_1b44e5177:;;
			(_24217_i)++;
		}
	_iter_next_1b44e47e7:;
	}
	_iter_end_1b44e47e7:;;
}



inline void _1b0ba043a_removeDeadsFile(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b060c44c_SymbolTable>* _26240_file) {
	_1b0b9eb21_removeDeadFns(_self_, &((*(_26240_file)).get()._field_Funcs));
	_1b0b9edc9_removeDeadStructs(_self_, &((*(_26240_file)).get()._field_Structs));
	_1b0ba0182_removeDeadTraits(_self_, &((*(_26240_file)).get()._field_Traits));
	_1b0b9e868_removeDeadGlobals(_self_, &((*(_26240_file)).get()._field_Vars));
}



inline void _1b0ba06e3_removeDeadsPackage(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_, jule::Ptr<_1b056d3ad_Package>* _26943_pkg) {
	{
		auto expr = &((*(_26943_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44e94bc:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _27021_file = *it;
			{
				_1b0ba043a_removeDeadsFile(_self_, &(_27021_file));
			}
			_iter_next_1b44e94bc:;
			++it;
			goto _iter_begin_1b44e94bc;
		}
		_iter_end_1b44e94bc:;
	};
}



inline void _1b138de03_removeDeads(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44e9c1a:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _27621_used = *it;
			{
				if ((!(_27621_used.get()._field_Binded))) {
					_1b0ba06e3_removeDeadsPackage(_self_, &(_27621_used.get()._field_Package));
				};
			}
			_iter_next_1b44e9c1a:;
			++it;
			goto _iter_begin_1b44e9c1a;
		}
		_iter_end_1b44e9c1a:;
	};
	_1b0ba06e3_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1b138e101_elimanate(jule::Ptr<_1b0b9d180_ObjectDeadCode> _self_) {
	_1b0b9e5b0_collectLive(_self_);
	_1b138de03_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b0b9d180_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1b11eb5ce_IR__jule_tuple_s_1aa3c3a21_Log static__1b11eba41_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1b11eb5ce_IR__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	jule::Ptr<_1b11e8b1a_JuleImporter> _2817_importer = static__1b11e9016_New(_1b11ed526_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1b0487184_Ast>> _2918_files;;
	jule::Slice<_1aa3c3a21_Log> _2929_logs;;
	({
		__jule_tuple_sx_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11ea501_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b056d3ad_Package> _3918_pkg;;
	({
		__jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b0668c28_AnalyzePackage(_2918_files, jule::Trait<_1b0567572_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1b11eb5ce_IR> _4417_ir = jule::new_ptr<_1b11eb5ce_IR>(_1b11eb5ce_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1b11e929c_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1b11ed317_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1b11ec02a_appendStructs(_1b11eb5ce_IR* _self_, jule::Ptr<_1b056d3ad_Package>* _5633_p, jule::Slice<jule::Ptr<_1b04e2871_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b447bb14:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b447c41c:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1b04e2871_Struct>> &__jule_push_dest = (*(_5657_buffer)); __jule_push_dest.push(_5825_s); };
							};
						}
						_iter_next_1b447c41c:;
						++it;
						goto _iter_begin_1b447c41c;
					}
					_iter_end_1b447c41c:;
				};
			}
			_iter_next_1b447bb14:;
			++it;
			goto _iter_begin_1b447bb14;
		}
		_iter_end_1b447bb14:;
	};
}



inline jule::Slice<jule::Ptr<_1b04e2871_Struct>> _1b11ec2b1_GetAllStructures(_1b11eb5ce_IR* _self_) {
	jule::Slice<jule::Ptr<_1b04e2871_Struct>> _6917_buffer = nullptr;;
	_1b11ec02a_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b447c917:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1b11ec02a_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1b447c917:;
			++it;
			goto _iter_begin_1b447c917;
		}
		_iter_end_1b447c917:;
	};
	return _6917_buffer;;
}



inline void _1b11ec624_appendGlobals(_1b11eb5ce_IR* _self_, jule::Ptr<_1b056d3ad_Package>* _7933_p, jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b447e892:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b448019a:;
					if (it != expr_end) {
						jule::Ptr<_1b05ae1bd_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_7957_buffer)); __jule_push_dest.push(_8125_v); };
							};
						}
						_iter_next_1b448019a:;
						++it;
						goto _iter_begin_1b448019a;
					}
					_iter_end_1b448019a:;
				};
			}
			_iter_next_1b447e892:;
			++it;
			goto _iter_begin_1b447e892;
		}
		_iter_end_1b447e892:;
	};
}



inline jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _1b11ec8aa_GetAllGlobals(_1b11eb5ce_IR* _self_) {
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _9217_buffer = nullptr;;
	_1b11ec624_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4481652:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1b11ec624_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1b4481652:;
			++it;
			goto _iter_begin_1b4481652;
		}
		_iter_end_1b4481652:;
	};
	return _9217_buffer;;
}



inline void _1b11ecaa8_Order(_1b11eb5ce_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1b11ec2b1_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1b11ec8aa_GetAllGlobals(_self_);
	static__1b11ee989_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1b11eebba_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1b11eb5ce_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b04e5cc5_Str(_1b04e5951_StructIns* _self_) {
	_1aa364275_StrBuilder _25117_kind = static__1aa364594_New(32LL);;
	_1aa36d03c_WriteStr(&_25117_kind, (*(_self_))._field_Decl.get()._field_Ident);
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		_1aa36d2e5_WriteByte(&_25117_kind, '[');
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b3049c44:;
			if (it != expr_end) {
				jule::I64 _25517_i = it - expr->begin();
				jule::Ptr<_1b0645dc0_InsGeneric> *_25520_g = it;
				{
					_1aa36d03c_WriteStr(&_25117_kind, _1b0647b6e_Str((*(_25520_g)).get()._field_Kind.ptr()));
					if ((_25517_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						_1aa36d2e5_WriteByte(&_25117_kind, ',');
					};
				}
				_iter_next_1b3049c44:;
				++it;
				_25517_i++;
				goto _iter_begin_1b3049c44;
			}
			_iter_end_1b3049c44:;
		};
		_1aa36d2e5_WriteByte(&_25117_kind, ']');
	};
	return _1aa36d834_Str(&_25117_kind);;
}



inline jule::Bool _1b04e6116_Equal(jule::Ptr<_1b04e5951_StructIns> _self_, jule::Ptr<_1b06477a6_TypeKind> _26721_other) {
	jule::Ptr<_1b04e5951_StructIns> _26813_s = _1b064b722_Struct(_26721_other.ptr());;
	if ((_26813_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26813_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26813_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _28117_i = 0LL;;
	for (; (_28117_i < _self_.get()._field_Generics.len()); (_28117_i)++) {
		{
			if ((!(_1b0647eb0_Equal(_self_.get()._field_Generics[_28117_i].get()._field_Kind, _26813_s.get()._field_Generics[_28117_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b304d918:;
	}
	_iter_end_1b304d918:;;
	return true;;
}



inline jule::Bool _1b04e65bc_Same(_1b04e5951_StructIns* _self_, jule::Ptr<_1b04e5951_StructIns> _29519_s) {
	if ((((*(_self_))._field_Decl != _29519_s.get()._field_Decl) || (_29519_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3050123:;
		if (it != expr_end) {
			jule::I64 _29913_i = it - expr->begin();
			jule::Ptr<_1b0645dc0_InsGeneric> *_29916_g = it;
			{
				jule::Ptr<_1b0645dc0_InsGeneric> _30017_g2 = _29519_s.get()._field_Generics[_29913_i];;
				if ((((*(_29916_g)).get()._field_Kind.get()._field_BindIdent != _30017_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1b0647eb0_Equal((*(_29916_g)).get()._field_Kind, _30017_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b3050123:;
			++it;
			_29913_i++;
			goto _iter_begin_1b3050123;
		}
		_iter_end_1b3050123:;
	};
	return true;;
}



inline jule::Ptr<_1b05088ed_Fn> _1b04e69b8_FindMethod(_1b04e5951_StructIns* _self_, jule::Str _31029_ident, jule::Bool _31041_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3052aa4:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _31121_f = *it;
			{
				if (((_31121_f.get()._field_Statically == _31041_statically) && (_31121_f.get()._field_Ident == _31029_ident))) {
					return _31121_f;;
				};
			}
			_iter_next_1b3052aa4:;
			++it;
			goto _iter_begin_1b3052aa4;
		}
		_iter_end_1b3052aa4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b04e4da1_FieldIns> _1b04e6d09_FindField(_1b04e5951_StructIns* _self_, jule::Str _32128_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30529b6:;
		if (it != expr_end) {
			jule::Ptr<_1b04e4da1_FieldIns> _32221_f = *it;
			{
				if ((_32221_f.get()._field_Decl.get()._field_Ident == _32128_ident)) {
					return _32221_f;;
				};
			}
			_iter_next_1b30529b6:;
			++it;
			goto _iter_begin_1b30529b6;
		}
		_iter_end_1b30529b6:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b04e714a_FindStatic(_1b04e5951_StructIns* _self_, jule::Str _33229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3054ab7:;
		if (it != expr_end) {
			jule::Ptr<_1b05ae1bd_Var> _33321_v = *it;
			{
				if ((_33321_v.get()._field_Ident == _33229_ident)) {
					return _33321_v;;
				};
			}
			_iter_next_1b3054ab7:;
			++it;
			goto _iter_begin_1b3054ab7;
		}
		_iter_end_1b3054ab7:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b04e5951_StructIns _Src) {
	_Stream << _1b04e5cc5_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1aa5dd257_Cmd> static__1aa5dd675_New(jule::Str _2619_path) {
	return jule::new_ptr<_1aa5dd257_Cmd>(_1aa5dd257_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _1aa5dd873_Spawn(_1aa5dd257_Cmd* _self_) {
	({
		auto except = _1aa63d84b_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1aa5ddd07_Wait(_1aa5dd257_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _1aa63dcd0_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _1aa63d84b_spawn(_1aa5dd257_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:78:13"));;
	};
	jule::Str _8013_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8113_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8113_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_1ba0c09c7_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
		_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1b1386b87:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b138603d:;
			{
				_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				jule::Slice<jule::Str> _9621_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9621_args[0LL]=_8013_path;
				(_9621_args).append((*(_self_))._field_Args);;
				({
					auto except = _1aa63d5e8_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_1aa63d3b7_execvp(&(_8013_path), &(_9621_args));
				jule::Str _10117_code = _1aa6396d2_Itoa(static_cast<jule::I64>(_1ba02b647_GetLastErrno()));;
				{
					_1ba0dde46_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])), (&(_10117_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10117_code.len())));
				};
				_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				_1aa6400de_Exit(1LL);
			}
		}
		else {
			_case_begin_1b13817a8:;
			{
				_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[1LL])));
				jule::Array<jule::U8,16> _10721_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10817_n = _1ba0dd671_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])), (&(_10721_buf[0LL])), 16LLU);;
				_1ba0dda17_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8113_pipe[0LL])));
				if ((_10817_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11222_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1aa5deb0a_AtoiBp((&(_10721_buf[0LL])), _10817_n);
						_11222_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_1aa63e572_processErrorFromCode(_11222_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1b1383d4e:;
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _1aa63dcd0_wait(_1aa5dd257_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:130:13"));;
	};
	jule::I64 _13217_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13217_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_1aa63e7c5_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13217_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1aa5dd257_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _1ba08038d_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1ba0b11b0_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	jule::I64 _7313_n = 0LL;;
	{
		for (; (_6924_s[_7313_n] != 0LLU); (_7313_n)++) {
			{
			}
		_iter_next_1b10abd96:;
		}
		_iter_end_1b10abd96:;;
	};
	if ((_7313_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _8013_buf = jule::Slice<jule::U8>::alloc(_7313_n, _7313_n, 0);;
	_7313_n=0LL;
	{
		for (; (_6924_s[_7313_n] != 0LLU); (_7313_n)++) {
			{
				_8013_buf[_7313_n]=_6924_s[_7313_n];
			}
		_iter_next_1b02183aa:;
		}
		_iter_end_1b02183aa:;;
	};
	return static_cast<jule::Str>(_8013_buf);;
}



inline jule::I64 _1ba02b647_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _1ba0c09c7_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _1ba0c0d4b_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _1ba0c127a_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _1ba0c15ee_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _1ba0c1ae9_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _1ba0c1db3_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _1ba0c217c_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _1ba0c2a84_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _1ba0c2d4d_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _1ba0c3117_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _1ba0dd671_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _1ba0dda17_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _1ba0dde46_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _1ba0de177_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _1ba10714b_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline jule::I64 _1ba1d0eb1_getLastOsError(void) {
	jule::I64 _309_err = _1ba02b647_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b0268570:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b0267e32:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1b0267ea9:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1b0268031:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b0268295:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b026830b:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b0268372:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1b0267daa:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1b0267d55:;
	};
}



inline jule::Slice<jule::Str> _1ba1d1a0b_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _1ba1d1ea1_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _1ba1d2e2a_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _1ba1d2e2a_getwd(void) {
	jule::U8* _1113_buff = _1ba0c15ee_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_1ba1d0eb1_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _159_pwd = _1ba0b11b0_BytePtrToStr(_1113_buff);;
	{
		_1ba08038d_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _1aa18b102_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1aa1eb23e__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1aa204841_isExcludingLatin(_1aa19535e_Letter, _7613_r);;
}



inline jule::Bool _1aa203bb4_is16(jule::Slice<_1aa201e26_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2620b45:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_1aa201e26_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b2620b45:;
				++it;
				_19313_i++;
				goto _iter_begin_1b2620b45;
			}
			_iter_end_1b2620b45:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_1aa201e26_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1b261e8d0:;
	}
	_iter_end_1b261e8d0:;;
	return false;;
}



inline jule::Bool _1aa204038_is32(jule::Slice<_1aa202454_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2624880:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_1aa202454_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b2624880:;
				++it;
				_23013_i++;
				goto _iter_begin_1b2624880;
			}
			_iter_end_1b2624880:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_1aa202454_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1b26247a3:;
	}
	_iter_end_1b26247a3:;;
	return false;;
}



inline jule::Bool _1aa204841_isExcludingLatin(jule::Ptr<_1aa20290a_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1aa201e26_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _1aa203bb4_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_1aa202454_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _1aa204038_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _1aa204b0a_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1aa1eb23e__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1aa204841_isExcludingLatin(_1aa19b8b5_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _1aa30d186_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _1aa30bedc_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_1aa30c570_acceptRange _1969_accept = _1aa30c87d_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1aa30d791_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_1aa3102ba_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1b2668c7b;
			};
		}
	_iter_next_1b2668c7b:;
	}
	_iter_end_1b2668c7b:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1aa30e5e9_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _1aa30e96d_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1aa30e96d_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1b267b574:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1b2949710:;
			{
				_41242_r=128LL;
				goto _case_begin_1b267ae36;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1b267ae36:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1b267adc0:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1b267ad59:;
	};
}



inline jule::I64 _1aa310001_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1b29533b7;
			};
			jule::U8 _48213_x = _1aa30bedc_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1b29533b7;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1b29533b7;
			};
			_1aa30c570_acceptRange _49213_accept = _1aa30c87d_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1b29533b7:;
	}
	_iter_end_1b29533b7:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1aa3102ba_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _1aa33a867_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2973b46:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1b2973b46:;
			++it;
			_399_i++;
			goto _iter_begin_1b2973b46;
		}
		_iter_end_1b2973b46:;
	};
	return -1LL;;
}



inline jule::I64 _1aa34ce95_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1b29755b5:;
	}
	_iter_end_1b29755b5:;;
	return -1LL;;
}



inline jule::I64 _1aa34d34c_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_1aa33a867_FindByte(_1ba10714b_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _1aa34d6c1_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_1aa34ce95_FindLastByte(_1ba10714b_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _1aa34db33_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	_1aa364275_StrBuilder _2013_ss = static__1aa364594_New(static_cast<jule::I64>((_1211_s.len() * _1223_n)));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_1aa36d03c_WriteStr(&_2013_ss, _1211_s);
		}
	_iter_next_1b2994590:;
	}
	_iter_end_1b2994590:;;
	return _1aa36d834_Str(&_2013_ss);;
}



inline jule::Bool _1aa34e0a6_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1b299743e:;
	}
	_iter_end_1b299743e:;;
	return true;;
}



inline jule::Bool _1aa34e42a_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _1aa34e0a6_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _1aa34e8d1_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1b2999287:;
	}
	_iter_end_1b2999287:;;
	return true;;
}



inline jule::Bool _1aa34ec22_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _1aa34e8d1_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _1aa350151_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_1aa34e0a6_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1b299c169:;
	}
	_iter_end_1b299c169:;;
	return -1LL;;
}



inline jule::I64 _1aa350a14_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1b29a048b:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1b29a0117;
					};
				}
			_iter_next_1b29a127d:;
			}
			_iter_end_1b29a127d:;;
			return _9413_j;;
		}
	_iter_next_1b29a0117:;
	}
	_iter_end_1b29a0117:;;
	return -1LL;;
}



inline jule::I64 _1aa350d88_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_1aa350a14_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _1aa352263_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1b29a88a1:;
	}
	_iter_end_1b29a88a1:;;
	return -1LL;;
}



inline jule::I64 _1aa352b15_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_1aa34d6c1_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _1aa353a06_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _1ba10714b_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _1ba10714b_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1aa352263_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1b29adbe7:;
	}
	_iter_end_1b29adbe7:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1aa3542a9_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _1aa350151_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1b29b4e73;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i, _27613_j)); };
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1b29b4e73:;
	}
	_iter_end_1b29b4e73:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _26713_parts; __jule_push_dest.push(_26210_s.slice(_27413_i)); };
	};
	return _26713_parts;;
}



inline jule::Bool _1aa35462d_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_1aa350151_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _1aa35519a_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_1aa353a06_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _1aa35551e_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _1aa350151_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1b29ba198;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1b29ba198:;
	}
	_iter_end_1b29ba198:;;
	return _31613_n;;
}



inline jule::Str _1aa355a08_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _1aa35551e_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	_1aa364275_StrBuilder _34513_ss = static__1aa364594_New(static_cast<jule::I64>((_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len())))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _1aa350151_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1b29bdb19;
			};
			_1aa36d03c_WriteStr(&_34513_ss, _33212_s.slice(_34613_i, _34813_j));
			_1aa36d03c_WriteStr(&_34513_ss, _33230_new);
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1b29bdb19:;
	}
	_iter_end_1b29bdb19:;;
	_1aa36d03c_WriteStr(&_34513_ss, _33212_s.slice(_34613_i));
	return _1aa36d834_Str(&_34513_ss);;
}



inline void _1aa3527a2_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1aa352263_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1b29c3e0a:;
	}
	_iter_end_1b29c3e0a:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _1aa356ba2_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _1ba10714b_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _1ba10714b_Stobs(&(_40321_cutset));;
	_1aa3527a2_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _1aa356e8d_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d791_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1aa352263_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1b29c6a56:;
	}
	_iter_end_1b29c6a56:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _1aa357686_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _1ba10714b_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _1ba10714b_Stobs(&(_43417_cutset));;
	_1aa3527a2_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_1aa356e8d_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _1aa357a0a_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b29ca7c4:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b29ca84b:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1b29ca5d7:;
	};
	jule::I64 _45113_n = 0LL;;
	{
		auto expr = &(_4449_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b29cac25:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_n+=(*(_45212_part)).len();
				(_45113_n)++;
			}
			_iter_next_1b29cac25:;
			++it;
			goto _iter_begin_1b29cac25;
		}
		_iter_end_1b29cac25:;
	};
	_1aa364275_StrBuilder _45613_s = static__1aa364594_New(_45113_n);;
	_1aa36d03c_WriteStr(&_45613_s, _4449_parts[0LL]);
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b29cbb38:;
		if (it != expr_end) {
			jule::Str *_45812_part = it;
			{
				_1aa36d03c_WriteStr(&_45613_s, _44423_sep);
				_1aa36d03c_WriteStr(&_45613_s, (*(_45812_part)));
			}
			_iter_next_1b29cbb38:;
			++it;
			goto _iter_begin_1b29cbb38;
		}
		_iter_end_1b29cbb38:;
	};
	return _1aa36d834_Str(&_45613_s);;
}



inline jule::Str _1aa370c76_Clean(jule::Str _10914_path) {
	jule::Str _1109_originalPath = _10914_path;;
	jule::I64 _1119_volLen = _1aa373a6a_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1119_volLen);;
	if (_10914_path.empty()) {
		if ((((_1119_volLen > 1LL) && _1aa373493_IsPathSep(_1109_originalPath[0LL])) && _1aa373493_IsPathSep(_1109_originalPath[1LL]))) {
			return _1aa37134d_FromSlash(_1109_originalPath);;
		};
		return (_1109_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1209_rooted = _1aa373493_IsPathSep(_10914_path[0LL]);;
	jule::I64 _1279_n = _10914_path.len();;
	_1aa36ee1d_lazyBuff _12813_out = _1aa36ee1d_lazyBuff{._field_path=_1ba10714b_Stobs(&(_10914_path)), ._field_volAndPath=_1109_originalPath, ._field_volLen=_1119_volLen};;
	jule::I64 _13314_r = 0;;
	jule::I64 _13321_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13314_r = ___jule_assign_arg;
		_13321_dotdot = _1___jule_assign_arg;
	});
	if (_1209_rooted) {
		_1aa370627_append(&_12813_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13314_r = ___jule_assign_arg;
			_13321_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13314_r < _1279_n)) {
		{
			{
				
				if (_1aa373493_IsPathSep(_10914_path[_13314_r])) {
					_case_begin_1b29dd8c5:;
					{
						(_13314_r)++;
					}
				}
				else if (((_10914_path[_13314_r] == '.') && (((_13314_r + 1LL) == _1279_n) || _1aa373493_IsPathSep(_10914_path[(_13314_r + 1LL)])))) {
					_case_begin_1b29da40a:;
					{
						(_13314_r)++;
					}
				}
				else if ((((_10914_path[_13314_r] == '.') && (_10914_path[(_13314_r + 1LL)] == '.')) && (((_13314_r + 2LL) == _1279_n) || _1aa373493_IsPathSep(_10914_path[(_13314_r + 2LL)])))) {
					_case_begin_1b29da471:;
					{
						_13314_r+=2LL;
						{
							
							if ((_12813_out._field_w > _13321_dotdot)) {
								_case_begin_1b29e1642:;
								{
									(_12813_out._field_w)--;
									while (((_12813_out._field_w > _13321_dotdot) && (!(_1aa373493_IsPathSep(static_cast<jule::U8>(_1aa37036e_index(&_12813_out, _12813_out._field_w))))))) {
										{
											(_12813_out._field_w)--;
										}
									_iter_next_1b29e21c0:;
									}
									_iter_end_1b29e21c0:;;
								}
							}
							else if ((!(_1209_rooted))) {
								_case_begin_1b29e19d8:;
								{
									if ((_12813_out._field_w > 0LL)) {
										_1aa370627_append(&_12813_out, 47LLU);
									};
									_1aa370627_append(&_12813_out, '.');
									_1aa370627_append(&_12813_out, '.');
									_13321_dotdot=_12813_out._field_w;
								}
							}
							_match_end_1b29e1972:;
						};
					}
				}
				else {
					_case_begin_1b29da394:;
					{
						if (((_1209_rooted && (_12813_out._field_w != 1LL)) || ((!(_1209_rooted)) && (_12813_out._field_w != 0LL)))) {
							_1aa370627_append(&_12813_out, 47LLU);
						};
						;
						for (; ((_13314_r < _1279_n) && (!(_1aa373493_IsPathSep(_10914_path[_13314_r])))); (_13314_r)++) {
							{
								_1aa370627_append(&_12813_out, _10914_path[_13314_r]);
							}
						_iter_next_1b29dd3b9:;
						}
						_iter_end_1b29dd3b9:;;
					}
				}
				_match_end_1b29da064:;
			};
		}
	_iter_next_1b29d99ae:;
	}
	_iter_end_1b29d99ae:;;
	if ((_12813_out._field_w == 0LL)) {
		_1aa370627_append(&_12813_out, '.');
	};
	return _1aa37134d_FromSlash(_1aa3708ad_string(&_12813_out));;
}



inline jule::Str _1aa37134d_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1aa37168e_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1aa374175_join(_2269_elem);;
}



inline jule::Str _1aa371958_Ext(jule::Str _2318_path) {
	jule::I64 _23213_i = (_2318_path.len() - 1LL);;
	for (; ((_23213_i >= 0LL) && (!(_1aa373493_IsPathSep(_2318_path[_23213_i])))); (_23213_i)--) {
		{
			if ((_2318_path[_23213_i] == '.')) {
				return _2318_path.slice(_23213_i);;
			};
		}
	_iter_next_1b29e5547:;
	}
	_iter_end_1b29e5547:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1aa371c22_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24710_abs_path;;
	jule::Bool _24720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1aa373dab_abs(_2468_path);
		_24710_abs_path = __jule_assign_result.__jule_result_arg0;
		_24720_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24710_abs_path;
	__jule_func_result.__jule_result_arg1 = _24720_ok;
	return __jule_func_result;;
}



inline jule::Str _1aa371edb_Base(jule::Str _25513_path) {
	if (_25513_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25513_path.len() > 0LL) && _1aa373493_IsPathSep(_25513_path[(_25513_path.len() - 1LL)]))) {
		{
			(_25513_path).mut_slice(0LL, (_25513_path.len() - 1LL));;
		}
	_iter_next_1b29e7b76:;
	}
	_iter_end_1b29e7b76:;;
	(_25513_path).mut_slice(_1aa37264b_VolumeName(_25513_path).len());;
	jule::I64 _26613_i = (_25513_path.len() - 1LL);;
	while (((_26613_i >= 0LL) && (!(_1aa373493_IsPathSep(_25513_path[_26613_i]))))) {
		{
			(_26613_i)--;
		}
	_iter_next_1b29e934d:;
	}
	_iter_end_1b29e934d:;;
	if ((_26613_i >= 0LL)) {
		(_25513_path).mut_slice((_26613_i + 1LL));;
	};
	if (_25513_path.empty()) {
		return jule::Str("/", 1);;
	};
	return _25513_path;;
}



inline jule::Str _1aa372382_Dir(jule::Str _2868_path) {
	jule::Str _2879_vol = _1aa37264b_VolumeName(_2868_path);;
	jule::I64 _28813_i = (_2868_path.len() - 1LL);;
	while (((_28813_i >= _2879_vol.len()) && (!(_1aa373493_IsPathSep(_2868_path[_28813_i]))))) {
		{
			(_28813_i)--;
		}
	_iter_next_1b29eb42c:;
	}
	_iter_end_1b29eb42c:;;
	jule::Str _2929_dir = _1aa370c76_Clean(_2868_path.slice(_2879_vol.len(), (_28813_i + 1LL)));;
	if ((_2929_dir.equal(".", 1) && (_2879_vol.len() > 2LL))) {
		return _2879_vol;;
	};
	return (_2879_vol + _2929_dir);;
}



inline jule::Str _1aa37264b_VolumeName(jule::Str _30415_path) {
	return _1aa37134d_FromSlash(_30415_path.slice(0LL, _1aa373a6a_volumeNameLen(_30415_path)));;
}



inline jule::Bool _1aa373493_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1aa3737a1_IsAbs(jule::Str _5310_path) {
	return _1aa34e42a_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I64 _1aa373a6a_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1aa373dab_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1aa3737a1_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1aa370c76_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _1ba1d1ea1_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _1aa374175_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1aa374175_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b13375c7:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _1aa370c76_Clean(_1aa357a0a_Join(_739_elem.slice(_749_i), jule::Str("/", 1)));;
				};
			}
			_iter_next_1b13375c7:;
			++it;
			_749_i++;
			goto _iter_begin_1b13375c7;
		}
		_iter_end_1b13375c7:;
	};
	return jule::Str();;
}



inline jule::I64 _1ba0ee4c8_getLastFsError(void) {
	jule::I64 _729_err = _1ba02b647_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b1345a25:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b13451ea:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1b13453c6:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1b134543c:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b13454a3:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b1345519:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1b1345b57:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b1345bbd:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b1345c34:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b1345c9a:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b1345d22:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b1345d99:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b1345e21:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b1345e98:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b1346020:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1b1346097:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b134611e:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b1346196:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b134621d:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1b1346295:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1b134631c:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b1346394:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b134641b:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b1346493:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b134651a:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1b1346592:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1b1346619:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1b1346691:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1b1345360:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1b134530a:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1aa5deb0a_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1b136b265:;
	}
	_iter_end_1b136b265:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _1aa6396d2_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _1aa6399e0_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _1aa6399e0_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _1aa6399e0_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Slice<jule::U8> _1813_buf = jule::Slice<jule::U8>::alloc(20LL, 20LL, 0);;
	jule::I64 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1b1372d1b:;
	}
	_iter_end_1b1372d1b:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	_1813_buf=_1813_buf.slice(_1913_i);
	return static_cast<jule::Str>(_1813_buf);;
}



inline jule::Slice<char*> _1aa63d043_strSliceToCstrSlice(jule::Slice<jule::Str>* _3525_s) {
	jule::Slice<char*> _3613_cs = jule::Slice<char*>::alloc(((*(_3525_s)).len() + 1LL), ((*(_3525_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3525_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2aab5ec:;
		if (it != expr_end) {
			jule::I64 _379_i = it - expr->begin();
			{
				_3613_cs[_379_i]=((char*)((&((*(_3525_s))[_379_i][0LL]))));
			}
			_iter_next_1b2aab5ec:;
			++it;
			_379_i++;
			goto _iter_begin_1b2aab5ec;
		}
		_iter_end_1b2aab5ec:;
	};
	_3613_cs[(_3613_cs.len() - 1LL)]=nullptr;
	return _3613_cs;;
}



inline jule::I64 _1aa63d3b7_execvp(jule::Str* _4412_file, jule::Slice<jule::Str>* _4424_argv) {
	jule::Slice<char*> _459_cargv = _1aa63d043_strSliceToCstrSlice(_4424_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4412_file))[0LL])))), (char*const*)(&(_459_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _1aa63d5e8_setenv(jule::Slice<jule::Str>* _5112_envv) {
	;
	{
		auto expr = _5112_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2aae5ab:;
		if (it != expr_end) {
			jule::Str *_5312_env = it;
			{
				jule::I64 _5413_i = _1aa34d34c_FindByteStr(_5312_env, '=');;
				if ((_5413_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _5917_key = (*(_5312_env)).slice(0LL, _5413_i);;
					if ((((*(_5312_env)).len() - _5413_i) == 1LL)) {
						jule::Str _6121_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_5917_key[0LL])))), ((char*)((&(_6121_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6621_val = (*(_5312_env)).slice((_5413_i + 1LL));;
						if ((setenv(((char*)((&(_5917_key[0LL])))), ((char*)((&(_6621_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1b2aae5ab:;
			++it;
			goto _iter_begin_1b2aae5ab;
		}
		_iter_end_1b2aae5ab:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _1aa63e572_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1b2ab4050:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b2aae8a8:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1b2ab0a41:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1b2ab3c86:;
	};
}



inline jule::I64 _1aa63e7c5_getLastProcessError(void) {
	return _1aa63e572_processErrorFromCode(static_cast<jule::I64>(_1ba02b647_GetLastErrno()));;
}



inline void _1aa6400de_Exit(jule::I64 _129_code) {
	_1ba0de177_Exit(_129_code);
}



inline jule::Str _1aa6402ed_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _1aa3b6706_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1aa3b69ae_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1aa3b533c_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad504423:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1ad504423:;
			++it;
			goto _iter_begin_1ad504423;
		}
		_iter_end_1ad504423:;
	};
	return false;;
}



inline jule::Bool _1aa3b6c78_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1aa3b4968_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad505974:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1ad505974:;
			++it;
			goto _iter_begin_1ad505974;
		}
		_iter_end_1ad505974:;
	};
	{
		auto expr = &(_1aa3b6607_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5058a8:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1ad5058a8:;
			++it;
			goto _iter_begin_1ad5058a8;
		}
		_iter_end_1ad5058a8:;
	};
	return false;;
}



inline jule::Str _1aa3c3e83_Logf(jule::Str _3189_fmt, jule::Slice<jule::Any> _31822_args) {
	return _1aa5352d1_applyFmt(_3189_fmt, _31822_args);;
}



inline jule::Str _1aa534c4d_argToStr(jule::Any _32213_arg) {
	{
		auto &_match_expr{ _32213_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1ad506117:;
			{
				return _32213_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1ad507aa8:;
			{
				return jule::Str::from_byte(_32213_arg.cast<jule::U8>(&__jule_any_type131));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1ad507b1e:;
			{
				return jule::Str::from_rune(_32213_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1ad5074d1:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1ad50747b:;
	};
}



inline jule::I64 _1aa534e18_findNextFmt(jule::Str _33516_fmt) {
	{
		auto expr = &(_33516_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad508889:;
		if (it != expr_end) {
			jule::I64 _3369_i = it - expr->begin();
			jule::U8 *_33612_b = it;
			{
				if (((*(_33612_b)) == '@')) {
					return _3369_i;;
				};
			}
			_iter_next_1ad508889:;
			++it;
			_3369_i++;
			goto _iter_begin_1ad508889;
		}
		_iter_end_1ad508889:;
	};
	return -1LL;;
}



inline jule::Str _1aa5352d1_applyFmt(jule::Str _34417_fmt, jule::Slice<jule::Any> _34427_args) {
	_1aa364275_StrBuilder _34513_s = static__1aa364594_New(32LL);;
	{
		auto expr = &(_34427_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5092d5:;
		if (it != expr_end) {
			jule::Any *_34612_arg = it;
			{
				jule::I64 _34713_i = _1aa534e18_findNextFmt(_34417_fmt);;
				if ((_34713_i == -1LL)) {
					goto _iter_end_1ad5092d5;
				};
				_1aa36d03c_WriteStr(&_34513_s, _34417_fmt.slice(0LL, _34713_i));
				_1aa36d03c_WriteStr(&_34513_s, _1aa534c4d_argToStr((*(_34612_arg))));
				(_34417_fmt).mut_slice((_34713_i + 1LL));;
			}
			_iter_next_1ad5092d5:;
			++it;
			goto _iter_begin_1ad5092d5;
		}
		_iter_end_1ad5092d5:;
	};
	_1aa36d03c_WriteStr(&_34513_s, _34417_fmt);
	return _1aa36d834_Str(&_34513_s);;
}



inline jule::Bool _1aa53637b_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _1aa5377cd_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _1aa537aa8_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _1aa537d72_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _1aa5381b3_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _1aa53847c_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _1aa538746_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _1aa538a10_IsUnix(jule::Str _5511_os) {
	return (_1aa537aa8_IsDarwin(_5511_os) || _1aa537d72_IsLinux(_5511_os));;
}



inline jule::Bool _1aa538da6_Is32Bit(jule::Str _5812_arch) {
	return _1aa5381b3_IsI386(_5812_arch);;
}



inline jule::Bool _1aa539170_Is64Bit(jule::Str _6112_arch) {
	return (_1aa53847c_IsAmd64(_6112_arch) || _1aa538746_IsArm64(_6112_arch));;
}



inline void _1aa6415c9_init(void) {
	jule::Str _2513_path = _1aa6402ed_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_1aa640b06_PathWd=({
			auto except = _1ba1d1ea1_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_1aa64084d_PathExec=_1aa372382_Dir(_2513_path);
		_1aa6405ea_PathStdlib=_1aa37168e_Join(jule::Slice<jule::Str>::make({_1aa64084d_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_1aa640e14_PathApi=_1aa37168e_Join(jule::Slice<jule::Str>::make({_1aa64084d_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _1aa49b91d_IsUnaryOp(jule::U64 _33414_id) {
	{
		auto expr = &(_1aa400751_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5588a6:;
		if (it != expr_end) {
			jule::U64 *_33512_op = it;
			{
				if ((_33414_id == (*(_33512_op)))) {
					return true;;
				};
			}
			_iter_next_1ad5588a6:;
			++it;
			goto _iter_begin_1ad5588a6;
		}
		_iter_end_1ad5588a6:;
	};
	return false;;
}



inline jule::Bool _1aa49bc2b_IsBinOp(jule::U64 _34412_id) {
	{
		auto expr = &(_1aa495098_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad558c19:;
		if (it != expr_end) {
			jule::U64 *_34512_op = it;
			{
				if ((_34412_id == (*(_34512_op)))) {
					return true;;
				};
			}
			_iter_next_1ad558c19:;
			++it;
			goto _iter_begin_1ad558c19;
		}
		_iter_end_1ad558c19:;
	};
	return false;;
}



inline jule::Bool _1aa49c336_IsStr(jule::Str _36410_k) {
	return ((!(_36410_k.empty())) && ((_36410_k[0LL] == '\"') || _1aa49c600_IsRawStr(_36410_k)));;
}



inline jule::Bool _1aa49c600_IsRawStr(jule::Str _36713_k) {
	return ((!(_36713_k.empty())) && (_36713_k[0LL] == '`'));;
}



inline jule::Bool _1aa49c8b9_IsRune(jule::Str _37111_k) {
	return ((!(_37111_k.empty())) && (_37111_k[0LL] == '\''));;
}



inline jule::Bool _1aa49d2e3_IsFloat(jule::Str _38012_k) {
	if (_1aa34e42a_HasPrefix(_38012_k, jule::Str("0x", 2))) {
		return _1aa35519a_ContainsAny(_38012_k, jule::Str(".pP", 3));;
	};
	return _1aa35519a_ContainsAny(_38012_k, jule::Str(".eE", 3));;
}



inline jule::Bool _1aa49d5ac_IsNum(jule::Str _38810_k) {
	if (_38810_k.empty()) {
		return false;;
	};
	jule::U8 _3939_b = _38810_k[0LL];;
	return ((_3939_b == '.') || (('0' <= _3939_b) && (_3939_b <= '9')));;
}



inline jule::Bool _1aa49db40_IsIgnoreIdent(jule::Str _40318_ident) {
	return _40318_ident.equal("_", 1);;
}



inline jule::Bool _1aa49de09_IsAnonIdent(jule::Str _40616_ident) {
	return _40616_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _1aa49e48c_IsSpace(jule::I32 _41912_r) {
	{
		auto expr = &(_1aa400454_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad5612e8:;
		if (it != expr_end) {
			jule::I32 *_42012_cr = it;
			{
				if ((_41912_r == (*(_42012_cr)))) {
					return true;;
				};
			}
			_iter_next_1ad5612e8:;
			++it;
			goto _iter_begin_1ad5612e8;
		}
		_iter_end_1ad5612e8:;
	};
	return false;;
}



inline jule::Bool _1aa49e910_IsLetter(jule::I32 _42913_r) {
	return _1aa18b102_IsLetter(_42913_r);;
}



inline jule::Bool _1aa49ee93_IsDecimal(jule::U8 _44914_b) {
	return (('0' <= _44914_b) && (_44914_b <= '9'));;
}



inline jule::Bool _1aa4a025c_IsBinary(jule::U8 _45213_b) {
	return ((_45213_b == '0') || (_45213_b == '1'));;
}



inline jule::Bool _1aa4a0526_IsOctal(jule::U8 _45512_b) {
	return (('0' <= _45512_b) && (_45512_b <= '7'));;
}



inline jule::Bool _1aa4a07e0_IsHex(jule::U8 _45810_b) {
	{
		
		if ((('0' <= _45810_b) && (_45810_b <= '9'))) {
			_case_begin_1ad565022:;
			{
				return true;;
			}
		}
		else if ((('a' <= _45810_b) && (_45810_b <= 'f'))) {
			_case_begin_1ad565099:;
			{
				return true;;
			}
		}
		else if ((('A' <= _45810_b) && (_45810_b <= 'F'))) {
			_case_begin_1ad565121:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad564e56:;
			{
				return false;;
			}
		}
		_match_end_1ad563dab:;
	};
}



inline jule::Bool _1aa4a0aa9_IsAssign(jule::U64 _47313_id) {
	return (((((((_47313_id == static_cast<jule::U64>(1LLU)) || (_47313_id == static_cast<jule::U64>(27LLU))) || (_47313_id == static_cast<jule::U64>(30LLU))) || (_47313_id == static_cast<jule::U64>(32LLU))) || (_47313_id == static_cast<jule::U64>(24LLU))) || (_47313_id == static_cast<jule::U64>(74LLU))) || (_47313_id == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1aa4a0d73_IsPostfixOp(jule::U64 _48416_id) {
	{
		auto expr = &(_1aa495692_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad56692a:;
		if (it != expr_end) {
			jule::U64 *_48512_op = it;
			{
				if ((_48416_id == (*(_48512_op)))) {
					return true;;
				};
			}
			_iter_next_1ad56692a:;
			++it;
			goto _iter_begin_1ad56692a;
		}
		_iter_end_1ad56692a:;
	};
	return false;;
}



inline jule::Bool _1aa4a113c_IsAssignOp(jule::U64 _49415_id) {
	if (_1aa4a0d73_IsPostfixOp(_49415_id)) {
		return true;;
	};
	{
		auto expr = &(_1aa49598e_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad56892c:;
		if (it != expr_end) {
			jule::U64 *_49812_op = it;
			{
				if ((_49415_id == (*(_49812_op)))) {
					return true;;
				};
			}
			_iter_next_1ad56892c:;
			++it;
			goto _iter_begin_1ad56892c;
		}
		_iter_end_1ad56892c:;
	};
	return false;;
}



inline jule::Ptr<_1aa4a199a_File> _1aa4a2d42_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_1aa4a199a_File>(_1aa4a199a_File{._field_Path=_5715_path, });;
}



inline _1aa3c3a21_Log _1aa4a488d_makeErr(jule::I64 _10012_row, jule::I64 _10022_col, jule::Ptr<_1aa4a199a_File>* _10033_f, jule::Str _10043_fmt, jule::Slice<jule::Any> _10056_args) {
	return _1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_10012_row, ._field_Column=_10022_col, ._field_Path=(*(_10033_f)).get()._field_Path, ._field_Text=_1aa3c3e83_Logf(_10043_fmt, _10056_args), };;
}



inline jule::Bool _1aa4a4c56_bytesHasPrefix(jule::Slice<jule::U8>* _11020_bytes, jule::Str _11035_prefix) {
	if (((*(_11020_bytes)).len() < _11035_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11035_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad57375b:;
		if (it != expr_end) {
			jule::I64 _1149_i = it - expr->begin();
			{
				if (((*(_11020_bytes))[_1149_i] != _11035_prefix[_1149_i])) {
					return false;;
				};
			}
			_iter_next_1ad57375b:;
			++it;
			_1149_i++;
			goto _iter_begin_1ad57375b;
		}
		_iter_end_1ad57375b:;
	};
	return true;;
}



inline jule::Str _1aa4a50ca_floatFmtE(jule::Slice<jule::U8>* _12215_txt, jule::I64 _12232_i) {
	jule::Str __jule_func_result;
	(_12232_i)++;
	if ((_12232_i >= (*(_12215_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12813_b = (*(_12215_txt))[_12232_i];;
	if ((_12813_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12813_b == '+') || (_12813_b == '-'))) {
		(_12232_i)++;
		if ((_12232_i >= (*(_12215_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12215_txt))[_12232_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1429_first = _12232_i;;
	for (; (_12232_i < (*(_12215_txt)).len()); (_12232_i)++) {
		{
			_12813_b=(*(_12215_txt))[_12232_i];
			if (((_12813_b != '_') && (!(_1aa49ee93_IsDecimal(_12813_b))))) {
				goto _iter_end_1ad5757c4;
			};
		}
	_iter_next_1ad5757c4:;
	}
	_iter_end_1ad5757c4:;;
	if ((_12232_i == _1429_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_12215_txt)).slice(0LL, _12232_i));
	return __jule_func_result;;
}



inline jule::Str _1aa4a5493_floatFmtP(jule::Slice<jule::U8>* _15615_txt, jule::I64 _15628_i) {
	return _1aa4a50ca_floatFmtE(_15615_txt, _15628_i);;
}



inline jule::Str _1aa4a5817_floatFmtDotnp(jule::Slice<jule::U8>* _16019_txt, jule::I64 _16036_i) {
	if (((*(_16019_txt))[_16036_i] != '.')) {
		return jule::Str();;
	};
	(_16036_i)++;
	_julec_label_1ad578585:;
	for (; (_16036_i < (*(_16019_txt)).len()); (_16036_i)++) {
		{
			jule::U8 _16813_b = (*(_16019_txt))[_16036_i];;
			{
				
				if ((_16813_b == '_') || _1aa49ee93_IsDecimal(_16813_b)) {
					_case_begin_1ad579146:;
					{
						goto _iter_next_1ad5784ca;
					}
				}
				else if (_1aa4a7220_isFloatFmtP(_16813_b, _16036_i)) {
					_case_begin_1ad5791bd:;
					{
						return _1aa4a5493_floatFmtP(_16019_txt, _16036_i);;
					}
				}
				else {
					_case_begin_1ad57907a:;
					{
						goto _iter_end_1ad5784ca;
					}
				}
				_match_end_1ad579025:;
			};
		}
	_iter_next_1ad5784ca:;
	}
	_iter_end_1ad5784ca:;;
	return jule::Str();;
}



inline jule::Str _1aa4a5b8b_floatFmtDotfp(jule::Slice<jule::U8>* _18119_txt, jule::I64 _18136_i) {
	_18136_i+=2LL;
	return _1aa4a50ca_floatFmtE(_18119_txt, _18136_i);;
}



inline jule::Str _1aa4a6010_floatFmtDotp(jule::Slice<jule::U8>* _18618_txt, jule::I64 _18635_i) {
	(_18635_i)++;
	return _1aa4a50ca_floatFmtE(_18618_txt, _18635_i);;
}



inline jule::Str _1aa4a6494_floatNum(jule::Slice<jule::U8>* _19114_txt, jule::I64 _19131_i) {
	jule::Str __jule_func_result;
	(_19131_i)++;
	if ((_19131_i >= (*(_19114_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)));
		return __jule_func_result;;
	};
	if (((*(_19114_txt))[_19131_i] == '_')) {
		(_19131_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
		return __jule_func_result;;
	};
	for (; (_19131_i < (*(_19114_txt)).len()); (_19131_i)++) {
		{
			jule::U8 _20113_b = (*(_19114_txt))[_19131_i];;
			if (((_19131_i > 1LL) && ((_20113_b == 'e') || (_20113_b == 'E')))) {
				__jule_func_result = _1aa4a50ca_floatFmtE(_19114_txt, _19131_i);
				return __jule_func_result;;
			};
			if (((_20113_b != '_') && (!(_1aa49ee93_IsDecimal(_20113_b))))) {
				goto _iter_end_1ad57c08e;
			};
		}
	_iter_next_1ad57c08e:;
	}
	_iter_end_1ad57c08e:;;
	if ((_19131_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_19114_txt)).slice(0LL, _19131_i));
	return __jule_func_result;;
}



inline jule::Str _1aa4a675d_commonNum(jule::Slice<jule::U8>* _21615_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21713_i = 0LL;;
	_julec_label_1ad57db1d:;
	for (; (_21713_i < (*(_21615_txt)).len()); (_21713_i)++) {
		{
			jule::U8 _22013_b = (*(_21615_txt))[_21713_i];;
			{
				
				if ((_22013_b == '.')) {
					_case_begin_1ad57ee93:;
					{
						__jule_func_result = _1aa4a6494_floatNum(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((_22013_b == '_')) {
					_case_begin_1ad58001a:;
					{
						goto _iter_next_1ad57e3b0;
					}
				}
				else if (_1aa4a6d9b_isFloatFmtE(_22013_b, _21713_i)) {
					_case_begin_1ad580092:;
					{
						__jule_func_result = _1aa4a50ca_floatFmtE(_21615_txt, _21713_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1aa49ee93_IsDecimal(_22013_b)))) {
					_case_begin_1ad580119:;
					{
						goto _iter_end_1ad57e3b0;
					}
				}
				_match_end_1ad57edc7:;
			};
		}
	_iter_next_1ad57e3b0:;
	}
	_iter_end_1ad57e3b0:;;
	if ((_21713_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21615_txt)).slice(0LL, _21713_i));
	return __jule_func_result;;
}



inline jule::Str _1aa4a6a27_binaryNum(jule::Slice<jule::U8>* _23915_txt) {
	jule::Str __jule_func_result;
	if ((!(_1aa4a4c56_bytesHasPrefix(_23915_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23915_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _24813_i = 2LL;;
	for (; (_24813_i < (*(_23915_txt)).len()); (_24813_i)++) {
		{
			if ((((*(_23915_txt))[_24813_i] != '_') && (!(_1aa4a025c_IsBinary((*(_23915_txt))[_24813_i]))))) {
				goto _iter_end_1ad582ea7;
			};
		}
	_iter_next_1ad582ea7:;
	}
	_iter_end_1ad582ea7:;;
	if ((_24813_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23915_txt)).slice(0LL, _24813_i));
	return __jule_func_result;;
}



inline jule::Bool _1aa4a6d9b_isFloatFmtE(jule::U8 _26116_b, jule::I64 _26125_i) {
	return ((_26125_i > 0LL) && ((_26116_b == 'e') || (_26116_b == 'E')));;
}



inline jule::Bool _1aa4a7220_isFloatFmtP(jule::U8 _26516_b, jule::I64 _26525_i) {
	return ((_26525_i > 0LL) && ((_26516_b == 'p') || (_26516_b == 'P')));;
}



inline jule::Bool _1aa4a7594_isFloatFmtDotnp(jule::Slice<jule::U8>* _26921_txt, jule::I64 _26938_i) {
	if (((*(_26921_txt))[_26938_i] != '.')) {
		return false;;
	};
	(_26938_i)++;
	_julec_label_1ad585b14:;
	for (; (_26938_i < (*(_26921_txt)).len()); (_26938_i)++) {
		{
			jule::U8 _27613_b = (*(_26921_txt))[_26938_i];;
			{
				
				if ((_27613_b == '_') || _1aa49ee93_IsDecimal(_27613_b)) {
					_case_begin_1ad5869c2:;
					{
						goto _iter_next_1ad585c46;
					}
				}
				else if (_1aa4a7220_isFloatFmtP(_27613_b, _26938_i)) {
					_case_begin_1ad586a49:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1ad586906:;
					{
						goto _iter_end_1ad585c46;
					}
				}
				_match_end_1ad5868a1:;
			};
		}
	_iter_next_1ad585c46:;
	}
	_iter_end_1ad585c46:;;
	return false;;
}



inline jule::Bool _1aa4a7918_isFloatFmtDotp(jule::Slice<jule::U8>* _29020_txt, jule::I64 _29033_i) {
	{
		
		if (((*(_29020_txt)).len() < 3LL)) {
			_case_begin_1ad587d03:;
			{
				goto _case_begin_1ad587d7a;
			}
		}
		else if (((*(_29020_txt))[_29033_i] != '.')) {
			_case_begin_1ad587d7a:;
			{
				goto _case_begin_1ad587e02;
			}
		}
		else if ((((*(_29020_txt))[(_29033_i + 1LL)] != 'p') && ((*(_29020_txt))[(_29033_i + 1LL)] != 'P'))) {
			_case_begin_1ad587e02:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad587c26:;
			{
				return true;;
			}
		}
		_match_end_1ad587b5a:;
	};
}



inline jule::Bool _1aa4a7c8c_isFloatFmtDotfp(jule::Slice<jule::U8>* _30321_txt, jule::I64 _30334_i) {
	{
		
		if (((*(_30321_txt)).len() < 4LL)) {
			_case_begin_1ad589a6e:;
			{
				goto _case_begin_1ad589ae6;
			}
		}
		else if (((*(_30321_txt))[_30334_i] != '.')) {
			_case_begin_1ad589ae6:;
			{
				goto _case_begin_1ad589b6d;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 1LL)] != 'f') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'F'))) {
			_case_begin_1ad589b6d:;
			{
				goto _case_begin_1ad589dc1;
			}
		}
		else if ((((*(_30321_txt))[(_30334_i + 2LL)] != 'p') && ((*(_30321_txt))[(_30334_i + 1LL)] != 'P'))) {
			_case_begin_1ad589dc1:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1ad589662:;
			{
				return true;;
			}
		}
		_match_end_1ad589596:;
	};
}



inline jule::Str _1aa4a8210_octalNum(jule::Slice<jule::U8>* _31814_txt) {
	jule::Str __jule_func_result;
	if (((*(_31814_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31814_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32613_octalStart = 1LL;;
	jule::Bool _32813_o = false;;
	if (((*(_31814_txt))[1LL] == 'o')) {
		if (((*(_31814_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32613_octalStart)++;
		_32813_o=true;
	};
	jule::I64 _33713_i = _32613_octalStart;;
	for (; (_33713_i < (*(_31814_txt)).len()); (_33713_i)++) {
		{
			jule::U8 _33913_b = (*(_31814_txt))[_33713_i];;
			if ((_33913_b == '.')) {
				if (_32813_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1aa4a6494_floatNum(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (_1aa4a6d9b_isFloatFmtE(_33913_b, _33713_i)) {
				__jule_func_result = _1aa4a50ca_floatFmtE(_31814_txt, _33713_i);
				return __jule_func_result;;
			};
			if (((_33913_b != '_') && (!(_1aa4a0526_IsOctal(_33913_b))))) {
				goto _iter_end_1ad58dcb5;
			};
		}
	_iter_next_1ad58dcb5:;
	}
	_iter_end_1ad58dcb5:;;
	if ((_33713_i == _32613_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31814_txt)).slice(0LL, _33713_i));
	return __jule_func_result;;
}



inline jule::Str _1aa4a84c9_hexNum(jule::Slice<jule::U8>* _36012_txt) {
	jule::Str __jule_func_result;
	if (((*(_36012_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36012_txt))[0LL] != '0') || (((*(_36012_txt))[1LL] != 'x') && ((*(_36012_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _36913_i = 2LL;;
	_julec_label_1ad592bcb:;
	for (; (_36913_i < (*(_36012_txt)).len()); (_36913_i)++) {
		{
			jule::U8 _37213_b = (*(_36012_txt))[_36913_i];;
			{
				
				if (_1aa4a7918_isFloatFmtDotp(_36012_txt, _36913_i)) {
					_case_begin_1ad593902:;
					{
						__jule_func_result = _1aa4a6010_floatFmtDotp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa4a7c8c_isFloatFmtDotfp(_36012_txt, _36913_i)) {
					_case_begin_1ad593979:;
					{
						__jule_func_result = _1aa4a5b8b_floatFmtDotfp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa4a7220_isFloatFmtP(_37213_b, _36913_i)) {
					_case_begin_1ad593a01:;
					{
						__jule_func_result = _1aa4a5493_floatFmtP(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (_1aa4a7594_isFloatFmtDotnp(_36012_txt, _36913_i)) {
					_case_begin_1ad593a78:;
					{
						__jule_func_result = _1aa4a5817_floatFmtDotnp(_36012_txt, _36913_i);
						return __jule_func_result;;
					}
				}
				else if (((_37213_b != '_') && (!(_1aa4a07e0_IsHex(_37213_b))))) {
					_case_begin_1ad593b00:;
					{
						goto _iter_end_1ad592d63;
					}
				}
				_match_end_1ad593825:;
			};
		}
	_iter_next_1ad592d63:;
	}
	_iter_end_1ad592d63:;;
	if ((_36913_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_36012_txt)).slice(0LL, _36913_i));
	return __jule_func_result;;
}



inline jule::Str _1aa4a884d_hexEscape(jule::Slice<jule::U8>* _39315_txt, jule::I64 _39328_n) {
	jule::Str __jule_func_result;
	if (((*(_39315_txt)).len() < _39328_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _39913_i = 2LL;;
	for (; (_39913_i < _39328_n); (_39913_i)++) {
		{
			if ((!(_1aa4a07e0_IsHex((*(_39315_txt))[_39913_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1ad596174:;
	}
	_iter_end_1ad596174:;;
	__jule_func_result=static_cast<jule::Str>((*(_39315_txt)).slice(0LL, _39328_n));
	return __jule_func_result;;
}



inline jule::Str _1aa4a8b17_bigUnicodePointEscape(jule::Slice<jule::U8>* _41127_txt) {
	return _1aa4a884d_hexEscape(_41127_txt, 10LL);;
}



inline jule::Str _1aa4a8dd1_littleUnicodePointEscape(jule::Slice<jule::U8>* _41630_txt) {
	return _1aa4a884d_hexEscape(_41630_txt, 6LL);;
}



inline jule::Str _1aa4a919a_hexByteEscape(jule::Slice<jule::U8>* _42119_txt) {
	return _1aa4a884d_hexEscape(_42119_txt, 4LL);;
}



inline jule::Str _1aa4a9464_byteEscape(jule::Slice<jule::U8>* _42616_txt) {
	jule::Str __jule_func_result;
	if (((*(_42616_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1aa4a0526_IsOctal((*(_42616_txt))[1LL]))) || (!(_1aa4a0526_IsOctal((*(_42616_txt))[2LL])))) || (!(_1aa4a0526_IsOctal((*(_42616_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42616_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1aa3c3a21_Log> _1aa4ae458_Lex(jule::Ptr<_1aa4a199a_File> _80912_f, jule::I64 _80922_mode) {
	if ((_80912_f == nullptr)) {
		return nullptr;;
	};
	_1aa4a9bd4_lex _81413_lex = _1aa4a9bd4_lex{._field_mode=_80922_mode, ._field_file=_80912_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_1aa4ac9ea_newLine(&_81413_lex);
	_1aa4aa7c8_lex(&_81413_lex);
	if ((_81413_lex._field_errors.len() > 0LL)) {
		return _81413_lex._field_errors;;
	};
	_80912_f.get()._field_Tokens=_81413_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1ad30d5b2_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1ad315eb0_Len64(_6119_x)));;
}



inline jule::I64 _1ad30e519_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1ad310240_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1ad30ee76_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ad30dbcd__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1ad310240_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1ad30e294__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1ad315be6_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1ad315eb0_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ad316c4c_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1ad318556_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _1ad1c8108_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1ad1c8416_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1ad1c86d0_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1ad1c8a21_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1ad1cb0c8_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b2d0b0ee:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1ad321817_IsInf(_4714_f, 0LL) || _1ad32120c_IsNaN(_4714_f)) {
			_case_begin_1b2d0b176:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1b2d0b022:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ad321ad1_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _1ad1c86d0_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ad1c8a21_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1ad320dee_NaN(void) {
	return static_cast<jule::F64>(_1ad1c8a21_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1ad32120c_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1ad3214c6_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_1ad1c8a21_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_1ad1c8a21_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1ad321817_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1ad321ad1_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1ad3240ab_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1ad3235b6_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ad32120c_IsNaN(_1118_x) || _1ad321817_IsInf(_1118_x, 1LL)) {
			_case_begin_1b2d49813:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1b2d4988a:;
			{
				return static_cast<jule::F64>(_1ad320dee_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1b2d49912:;
			{
				return static_cast<jule::F64>(_1ad3214c6_Inf(-1LL));;
			}
		}
		_match_end_1b2d49747:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ad1cb0c8_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1ad3240ab_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_1ad1c8a21_F64FromBits(static_cast<jule::U64>((_1ad1c86d0_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1ad32aca5_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1ad3240ab_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1b2845d48:;
		}
		_iter_end_1b2845d48:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1ad32b5ad_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ad1cb0c8_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1ad3235b6_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1ad355ae3_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1ad3561cb_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1ad359575_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1ad3561cb_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1ad3548b1_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1b3235cba:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_1ad1c8108_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1ad3548b1_floatInfo>)((&(_1ad354cac_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b3235a12:;
			{
				_8313_bits=static_cast<jule::U64>(_1ad1c86d0_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1ad3548b1_floatInfo>)((&(_1ad3550ba_f64info))));
			}
		}
		else {
			_case_begin_1b3235638:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1b32355d3:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1b3239571:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1b323b41e:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1b323a462:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1b323a3eb:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1b323a330:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b32396a3:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1b323888e:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1b3238a04:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1ad358673_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1ad358d7c_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1ad355560_decimalSlice _13213_digs = _1ad355560_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1ad36453b_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b323e82e:;
				{
					_8258_prec=static_cast<jule::I64>(_1ad359575_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b323e895:;
				{
					_8258_prec=static_cast<jule::I64>(_1ad359575_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b323e90b:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1b323d9c6:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b3241545:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b3241743:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1b32416cc:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1b3241677:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1ad363271_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1ad363716_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1ad35684c_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1ad357023_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1ad35684c_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1ad3548b1_floatInfo* _18327_flt) {
	_1ad368353_decimal _18413_d = _1ad368353_decimal{};;
	_1ad36870a_assign(&_18413_d, _1835_mant);
	_1ad3689b3_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1ad355560_decimalSlice _18713_digs = _1ad355560_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1ad357474_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1ad355560_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b32477d2:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b32485b3:;
				{
					_18233_prec=static_cast<jule::I64>(_1ad359575_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b3248629:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1b324845e:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b3249c35:;
				{
					_1ad3692cc_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b3249cac:;
				{
					_1ad3692cc_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b3249d34:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1ad3692cc_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1b3249b8b:;
		};
		_18713_digs=_1ad355560_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1ad357023_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1ad357023_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1ad355560_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1b324d101:;
			{
				return _1ad357a18_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b324d167:;
			{
				return _1ad358002_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1b324d1cd:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1ad357a18_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1ad358002_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1ad359575_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1b324d013:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1ad357474_roundShortest(_1ad368353_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1ad3548b1_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1ad368353_decimal _28713_upper = _1ad368353_decimal{};;
	_1ad36870a_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1ad3689b3_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1ad368353_decimal _30613_lower = _1ad368353_decimal{};;
	_1ad36870a_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1ad3689b3_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1b3259ddd;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1b325e981:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1b325e9e7:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1b325ea5d:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1b325e8d7:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1b3262566:;
					{
						_1ad3692cc_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1b32625cc:;
					{
						_1ad368c6b_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1b3262643:;
					{
						_1ad369024_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1b32624bc:;
			};
		}
	_iter_next_1b3259ddd:;
	}
	_iter_end_1b3259ddd:;;
}



inline jule::Slice<jule::U8> _1ad357a18_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1ad355560_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	if ((_39654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('.'); };
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1ad359201_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			(_39613_dst).append(_39637_d._field_d.slice(_41217_i, _41313_m));;
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b326711a:;
		}
		_iter_end_1b326711a:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_39665_fmt); };
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.push(_40313_ch); };
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1b326912d:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0'))); };
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1b3269716:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1b3268c21:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _39613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1b32684a1:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1ad358002_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1ad355560_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('-'); };
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1ad359201_min(_45137_d._field_nd, _45137_d._field_dp);;
		(_45113_dst).append(_45137_d._field_d.slice(0LL, _45917_m));;
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1b326cebc:;
		}
		_iter_end_1b326cebc:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('0'); };
	};
	if ((_45154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push('.'); };
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45113_dst; __jule_push_dest.push(_47221_ch); };
			}
		_iter_next_1b326d1cb:;
		}
		_iter_end_1b326d1cb:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1ad358673_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1ad3548b1_floatInfo* _48463_flt) {
	if (_48426_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ad36d534_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('p'); };
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48413_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ad36d534_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1ad358d7c_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1ad3548b1_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1b327381e:;
	}
	_iter_end_1b327381e:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_50637_fmt); __jule_push_dest.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU))))); };
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		while ((_5079_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1b327a23d:;
		}
		_iter_end_1b327a23d:;;
	} else if ((_50626_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push('.'); };
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]); };
				_5079_mant<<=4LLU;
			}
		_iter_next_1b327b272:;
		}
		_iter_end_1b327b272:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1ad35a1ad_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.push(_56613_ch); };
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1b3278747:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1b327d571:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		else {
			_case_begin_1b327dbae:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _50613_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0'))); __jule_push_dest.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0'))); };
			}
		}
		_match_end_1b327ca6a:;
	};
	return _50613_dst;;
}



inline jule::I64 _1ad359201_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1ad359575_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1ad35a1ad_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__1abb9a8e0_ConvError _1ad35a631_parseUint(jule::Str* _5119_s, jule::I64 _5131_base, jule::I64 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1abb9a8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if ((*(_5119_s)).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1b3284e90:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1b3284d91:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1ad35a1ad_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1b32868dc:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ad35a1ad_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1b3286810:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ad35a1ad_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1b32864d0:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1b3286469:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1b328639d:;
					};
				};
			}
		}
		else {
			_case_begin_1b3284324:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1b3284676:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=64LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1b3290660:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1b3290011:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1b3290286:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5131_base)) + 1LLU));
			}
		}
		_match_end_1b3290220:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1b329192a:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b3291991:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1b329030d:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3292673:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1b32938a5:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1ad35a1ad_lower(_10912_c)) && (_1ad35a1ad_lower(_10912_c) <= 'z'))) {
						_case_begin_1b3293795:;
						{
							_11017_d=static_cast<jule::U8>(((_1ad35a1ad_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1b32933bb:;
						{
							goto _iter_next_1b3292673;
						}
					}
					else {
						_case_begin_1b3293355:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1b3293300:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1b3292673:;
			++it;
			goto _iter_begin_1b3292673;
		}
		_iter_end_1b3292673:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1ad35aa60_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad35a631_parseUint(&(_14618_s), _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1ad35b016_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad35a631_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1ad35bc09_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ad1c8a21_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1ad30d5b2_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(_4122_man, _1ad35ca62_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(_4122_man, _1ad35ca62_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ad1c8a21_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ad35c149_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ad1c8416_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1ad30d5b2_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(_11022_man, _1ad35ca62_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(_11022_man, _1ad35ca62_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_1ad1c8416_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1ad35dea3_commonPrefixLenIgnoreCase(jule::Slice<jule::U8>* _4631_s, jule::Str _4642_prefix) {
	jule::I64 _4713_n = _4642_prefix.len();;
	if ((_4713_n > (*(_4631_s)).len())) {
		_4713_n=static_cast<jule::I64>((*(_4631_s)).len());
	};
	jule::I64 _5113_i = 0LL;;
	for (; (_5113_i < _4713_n); (_5113_i)++) {
		{
			jule::U8 _5317_c = (*(_4631_s))[_5113_i];;
			if ((('A' <= _5317_c) && (_5317_c <= 'Z'))) {
				_5317_c+=32LL;
			};
			if ((_5317_c != _4642_prefix[_5113_i])) {
				return _5113_i;;
			};
		}
	_iter_next_1b32b7225:;
	}
	_iter_end_1b32b7225:;;
	return _4713_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ad35e2b1_special(jule::Slice<jule::U8> _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7313_sign = 1LL;;
	jule::I64 _7413_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1b32baca6:;
			{
				if ((_6912_s[0LL] == '-')) {
					_7313_sign=-1LL;
				};
				_7413_nsign=1LL;
				{
					jule::Slice<jule::U8>* _8321_sp = (&(_6912_s));;
					(*(_8321_sp))=(*(_8321_sp)).slice(1LL);
				};
				goto _case_begin_1b32bad2d;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1b32bad2d:;
			{
				jule::I64 _8817_caseN = _1ad35dea3_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("infinity", 8));;
				if (((3LL < _8817_caseN) && (_8817_caseN < 8LL))) {
					_8817_caseN=3LL;
				};
				if (((_8817_caseN == 3LL) || (_8817_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ad3214c6_Inf(_7313_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7413_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1b32bada5:;
			{
				if ((_1ad35dea3_commonPrefixLenIgnoreCase(&(_6912_s), jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ad320dee_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b32babda:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ad35e57a_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1b32c1372:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1b32c15e7:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1b32c152b:;
	};
	jule::U64 _12213_base = 10LLU;;
	jule::I64 _12313_maxMantDigits = 19LL;;
	jule::U8 _12413_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1ad35a1ad_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_12213_base=16LLU;
		_12313_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_12413_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _13213_sawdot = false;;
	jule::Bool _13313_sawdigits = false;;
	jule::I64 _13413_nd = 0LL;;
	jule::I64 _13513_ndMant = 0LL;;
	jule::I64 _13613_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13813_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13813_c == '_')) {
					_case_begin_1b32c660d:;
					{
						goto _iter_next_1b32c0ccd;
					}
				}
				else if ((_13813_c == '.')) {
					_case_begin_1b32c6685:;
					{
						if (_13213_sawdot) {
							goto _julec_label_1b32caeb4;
						};
						_13213_sawdot=true;
						_13613_dp=_13413_nd;
						goto _iter_next_1b32c0ccd;
					}
				}
				else if ((('0' <= _13813_c) && (_13813_c <= '9'))) {
					_case_begin_1b32c670c:;
					{
						_13313_sawdigits=true;
						if (((_13813_c == '0') && (_13413_nd == 0LL))) {
							(_13613_dp)--;
							goto _iter_next_1b32c0ccd;
						};
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_12213_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13813_c - '0'));
							(_13513_ndMant)++;
						} else if ((_13813_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b32c0ccd;
					}
				}
				else if ((((_12213_base == 16LLU) && ('a' <= _1ad35a1ad_lower(_13813_c))) && (_1ad35a1ad_lower(_13813_c) <= 'f'))) {
					_case_begin_1b32c6784:;
					{
						_13313_sawdigits=true;
						(_13413_nd)++;
						if ((_13513_ndMant < _12313_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1ad35a1ad_lower(_13813_c) - 'a') + 10LLU));
							(_13513_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1b32c0ccd;
					}
				}
				_match_end_1b32c6531:;
			};
			goto _iter_end_1b32c0ccd;
		}
	_iter_next_1b32c0ccd:;
	}
	_iter_end_1b32c0ccd:;;
	_julec_label_1b32caeb4:;
	if ((!(_13313_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_13213_sawdot))) {
		_13613_dp=_13413_nd;
	};
	if ((_12213_base == 16LLU)) {
		_13613_dp*=4LL;
		_13513_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1ad35a1ad_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _12413_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I64 _20117_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_20117_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _21117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1b32ce21a;
				};
				if ((_21117_e < 10000LL)) {
					_21117_e=static_cast<jule::I64>((((_21117_e * 10LL) + static_cast<jule::I64>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1b32ce21a:;
		}
		_iter_end_1b32ce21a:;;
		_13613_dp+=(_21117_e * _20117_esign);
	} else if ((_12213_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13613_dp - _13513_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1ad361109_atof64exact(jule::U64 _48616_mantissa, jule::I64 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48616_mantissa >> _1ad3550ba_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48616_mantissa));
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1b32d7a4d:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1b32d7ac5:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1ad36049e_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1ad36049e_f64pow10[_48635_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1b32d7b4c:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1ad36049e_f64pow10[(-(_48635_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b32d74ed:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ad361538_atof32exact(jule::U64 _52016_mantissa, jule::I64 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_52016_mantissa >> _1ad354cac_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_52016_mantissa));
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1b32dbe3c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1b32dbeb4:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1ad3607e0_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1ad3607e0_f32pow10[_52035_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1b32dc03b:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1ad3607e0_f32pow10[(-(_52035_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b32db8dc:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1abb9a8e0_ConvError _1ad361acc_atofHex(_1ad3548b1_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I64 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1abb9a8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5579_maxExp = ((static_cast<jule::I64>((1LL << (*(_55613_flt))._field_expbits)) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I64 _5589_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I64>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && ((_55633_mantissa >> ((*(_55613_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55633_mantissa<<=1LLU;
			(_55652_exp)--;
		}
	_iter_next_1b32e1381:;
	}
	_iter_end_1b32e1381:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while (((_55633_mantissa >> ((1LLU + (*(_55613_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1b32e311e:;
	}
	_iter_end_1b32e311e:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5589_minExp - 2LL)))) {
		{
			_55633_mantissa=static_cast<jule::U64>(((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU)));
			(_55652_exp)++;
		}
	_iter_next_1b32e2e21:;
	}
	_iter_end_1b32e2e21:;;
	jule::U64 _58813_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa>>=2LLU;
	_58813_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_58813_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == (1LLU << (1LLU + (*(_55613_flt))._field_mantbits)))) {
			_55633_mantissa>>=1LLU;
			(_55652_exp)++;
		};
	};
	if (((_55633_mantissa >> (*(_55613_flt))._field_mantbits) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I64 _60313_err = static_cast<jule::I64>(0LL);;
	if ((_55652_exp > _5579_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55613_flt))._field_mantbits)));
		_55652_exp=static_cast<jule::I64>((_5579_maxExp + 1LL));
		_60313_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _61013_bits = (_55633_mantissa & ((1LLU << (*(_55613_flt))._field_mantbits) - 1LLU));;
	_61013_bits|=(static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55613_flt))._field_expbits) - 1LL)))) << (*(_55613_flt))._field_mantbits);
	if (_55662_neg) {
		_61013_bits|=((1LLU << (*(_55613_flt))._field_mantbits) << (*(_55613_flt))._field_expbits);
	};
	if (((*(_55613_flt)) == _1ad354cac_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_1ad1c8416_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_61013_bits)))));
		__jule_func_result.__jule_result_arg1 = _60313_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ad1c8a21_F64FromBits(_61013_bits));
	__jule_func_result.__jule_result_arg1 = _60313_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError _1ad361ea6_atof32(jule::Str* _62112_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _62314_val = 0;;
		jule::I64 _62319__n = 0;;
		jule::Bool _62323_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad35e2b1_special(_1ba10714b_Stobs(_62112_s));
			_62314_val = __jule_assign_result.__jule_result_arg0;
			_62319__n = __jule_assign_result.__jule_result_arg1;
			_62323_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62323_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_62314_val));
			__jule_func_result.__jule_result_arg1 = _62319__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62910_mantissa = 0;;
	jule::I64 _62920_exp = 0;;
	jule::Bool _62925_neg = false;;
	jule::Bool _62930_trunc = false;;
	jule::Bool _62937_hex = false;;
	jule::I64 _62942__n = 0;;
	jule::Bool _62950_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad35e57a_readFloat(_62112_s);
		_62910_mantissa = __jule_assign_result.__jule_result_arg0;
		_62920_exp = __jule_assign_result.__jule_result_arg1;
		_62925_neg = __jule_assign_result.__jule_result_arg2;
		_62930_trunc = __jule_assign_result.__jule_result_arg3;
		_62937_hex = __jule_assign_result.__jule_result_arg4;
		_62942__n = __jule_assign_result.__jule_result_arg5;
		_62950_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62942__n;
	if ((!(_62950_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62937_hex) {
		jule::F64 _63617_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad361acc_atofHex(&(_1ad354cac_f32info), _62910_mantissa, _62920_exp, _62925_neg, _62930_trunc);
			_63617_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63617_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62930_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ad361538_atof32exact(_62910_mantissa, _62920_exp, _62925_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62950_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ad35c149_eiselLemire32(_62910_mantissa, _62920_exp, _62925_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62950_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62950_ok) {
			if ((!(_62930_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65821_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ad35c149_eiselLemire32(static_cast<jule::U64>((_62910_mantissa + 1LLU)), _62920_exp, _62925_neg);
				_65821_fUp = __jule_assign_result.__jule_result_arg0;
				_62950_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62950_ok && (__jule_func_result.__jule_result_arg0 == _65821_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ad368353_decimal _66713_d = _1ad368353_decimal{};;
	if ((!(_1ad35ec1d_set(&_66713_d, _1ba10714b_Stobs(_62112_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _67110_b = 0;;
	jule::Bool _67113_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ad36005e_floatBits(&_66713_d, &(_1ad354cac_f32info));
		_67110_b = __jule_assign_result.__jule_result_arg0;
		_67113_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_1ad1c8416_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_67110_b))));
	if (_67113_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError _1ad362270_atof64(jule::Str* _67912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _68114_val = 0;;
		jule::I64 _68119__n = 0;;
		jule::Bool _68123_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad35e2b1_special(_1ba10714b_Stobs(_67912_s));
			_68114_val = __jule_assign_result.__jule_result_arg0;
			_68119__n = __jule_assign_result.__jule_result_arg1;
			_68123_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68123_ok) {
			__jule_func_result.__jule_result_arg0 = _68114_val;
			__jule_func_result.__jule_result_arg1 = _68119__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68710_mantissa = 0;;
	jule::I64 _68720_exp = 0;;
	jule::Bool _68725_neg = false;;
	jule::Bool _68730_trunc = false;;
	jule::Bool _68737_hex = false;;
	jule::I64 _68742__n = 0;;
	jule::Bool _68750_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad35e57a_readFloat(_67912_s);
		_68710_mantissa = __jule_assign_result.__jule_result_arg0;
		_68720_exp = __jule_assign_result.__jule_result_arg1;
		_68725_neg = __jule_assign_result.__jule_result_arg2;
		_68730_trunc = __jule_assign_result.__jule_result_arg3;
		_68737_hex = __jule_assign_result.__jule_result_arg4;
		_68742__n = __jule_assign_result.__jule_result_arg5;
		_68750_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68742__n;
	if ((!(_68750_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68737_hex) {
		({
			__jule_tuple_f64__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad361acc_atofHex(&(_1ad3550ba_f64info), _68710_mantissa, _68720_exp, _68725_neg, _68730_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68730_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ad361109_atof64exact(_68710_mantissa, _68720_exp, _68725_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68750_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ad35bc09_eiselLemire64(_68710_mantissa, _68720_exp, _68725_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68750_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68750_ok) {
			if ((!(_68730_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71521_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ad35bc09_eiselLemire64(static_cast<jule::U64>((_68710_mantissa + 1LLU)), _68720_exp, _68725_neg);
				_71521_fUp = __jule_assign_result.__jule_result_arg0;
				_68750_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68750_ok && (__jule_func_result.__jule_result_arg0 == _71521_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ad368353_decimal _72413_d = _1ad368353_decimal{};;
	if ((!(_1ad35ec1d_set(&_72413_d, _1ba10714b_Stobs(_67912_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72810_b = 0;;
	jule::Bool _72813_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ad36005e_floatBits(&_72413_d, &(_1ad3550ba_f64info));
		_72810_b = __jule_assign_result.__jule_result_arg0;
		_72813_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_1ad1c8a21_F64FromBits(_72810_b));
	if (_72813_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError _1ad3625e4_parseFloatPrefix(jule::Str* _73622_s, jule::I64 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _73814_f = 0;;
		jule::I64 _73817_n = 0;;
		jule::I64 _73820_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad361ea6_atof32(_73622_s);
			_73814_f = __jule_assign_result.__jule_result_arg0;
			_73817_n = __jule_assign_result.__jule_result_arg1;
			_73820_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73814_f));
		__jule_func_result.__jule_result_arg1 = _73817_n;
		__jule_func_result.__jule_result_arg2 = _73820_err;
		return __jule_func_result;;
	};
	jule::F64 _74110_f = 0;;
	jule::I64 _74113_n = 0;;
	jule::I64 _74116_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad362270_atof64(_73622_s);
		_74110_f = __jule_assign_result.__jule_result_arg0;
		_74113_n = __jule_assign_result.__jule_result_arg1;
		_74116_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _74110_f;
	__jule_func_result.__jule_result_arg1 = _74113_n;
	__jule_func_result.__jule_result_arg2 = _74116_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1ad362968_ParseFloat(jule::Str _76915_s, jule::I64 _76923_bitSize) {
	jule::F64 _77010_f = 0;;
	jule::I64 _77013_n = 0;;
	jule::I64 _77016_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1abb9a8e0_ConvError __jule_assign_result = _1ad3625e4_parseFloatPrefix(&(_76915_s), _76923_bitSize);
		_77010_f = __jule_assign_result.__jule_result_arg0;
		_77013_n = __jule_assign_result.__jule_result_arg1;
		_77016_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_77013_n != _76915_s.len()) && ((_77016_err == static_cast<jule::I64>(0LL)) || (_77016_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_77016_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_77016_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _77010_f);;
}



inline void _1ad363271_ryuFtoaFixed32(_1ad355560_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1ad315be6_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1ad364805_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3661b9_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1ad36696c_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1ad364063_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1ad363716_ryuFtoaFixed64(_1ad355560_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1ad315eb0_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1ad364805_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3665e8_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1ad36696c_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1ad364063_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1ad364063_formatDecimal(_1ad355560_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1ad363a57_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1b3327de0:;
	}
	_iter_end_1b3327de0:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1b332a8c6:;
	}
	_iter_end_1b332a8c6:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1b3331beb:;
	}
	_iter_end_1b3331beb:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1ad36453b_ryuFtoaShortest(_1ad355560_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1ad3548b1_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1ad310240_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1ad365619_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1ad364eed_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1ad365619_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1ad364805_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1ad354cac_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3661b9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3661b9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3661b9_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3665e8_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3665e8_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ad3665e8_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1ad36696c_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1ad36696c_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1ad36696c_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1ad365619_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1ad364805_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1ad364abe_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ad364eed_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1ad3548b1_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1ad365619_ryuDigits(_1ad355560_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ad366c36_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ad366c36_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ad366c36_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1ad365c8a_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1ad365c8a_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1b334ee5b:;
		}
		_iter_end_1b334ee5b:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1ad365c8a_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1b33529b9:;
	}
	_iter_end_1b33529b9:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1b33534d1:;
	}
	_iter_end_1b33534d1:;;
}



inline void _1ad365c8a_ryuDigits32(_1ad355560_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1b33552e6;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1b33552e6:;
	}
	_iter_end_1b33552e6:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1b335b6a4:;
	}
	_iter_end_1b335b6a4:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ad3661b9_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1ad35ca62_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1ad364abe_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ad3665e8_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1ad35ca62_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ad364abe_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad318556_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1ad316c4c_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ad36696c_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1b3369c23:;
	}
	_iter_end_1b3369c23:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1ad366c36_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1ad369ba1_trim(_1ad368353_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1b336d3b9:;
	}
	_iter_end_1b336d3b9:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1ad369e8c_rightShift(_1ad368353_decimal* _28420_a, jule::U64 _28432_k) {
	jule::I64 _28513_r = 0LL;;
	jule::I64 _28613_w = 0LL;;
	jule::U64 _28913_n = 0LLU;;
	for (; ((_28913_n >> _28432_k) == 0LLU); (_28513_r)++) {
		{
			if ((_28513_r >= (*(_28420_a))._field_nd)) {
				if ((_28913_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while (((_28913_n >> _28432_k) == 0LLU)) {
					{
						_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
						(_28513_r)++;
					}
				_iter_next_1b3371b3c:;
				}
				_iter_end_1b3371b3c:;;
				goto _iter_end_1b337008b;
			};
			jule::U64 _30313_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _30313_c) - '0'));
		}
	_iter_next_1b337008b:;
	}
	_iter_end_1b337008b:;;
	(*(_28420_a))._field_dp-=(_28513_r - 1LL);
	jule::U64 _3089_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _28432_k)) - 1LLU));;
	for (; (_28513_r < (*(_28420_a))._field_nd); (_28513_r)++) {
		{
			jule::U64 _31213_c = static_cast<jule::U64>((*(_28420_a))._field_d[_28513_r]);;
			jule::U64 _31313_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_31313_dig + '0')));
			(_28613_w)++;
			_28913_n=static_cast<jule::U64>((((_28913_n * 10LLU) + _31213_c) - '0'));
		}
	_iter_next_1b33735de:;
	}
	_iter_end_1b33735de:;;
	while ((_28913_n > 0LLU)) {
		{
			jule::U64 _32213_dig = (_28913_n >> _28432_k);;
			_28913_n&=_3089_mask;
			if ((_28613_w < 800LL)) {
				(*(_28420_a))._field_d[_28613_w]=static_cast<jule::U8>(static_cast<jule::U8>((_32213_dig + '0')));
				(_28613_w)++;
			} else if ((_32213_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_28913_n=static_cast<jule::U64>((_28913_n * 10LLU));
		}
	_iter_next_1b3373c93:;
	}
	_iter_end_1b3373c93:;;
	(*(_28420_a))._field_nd=_28613_w;
	_1ad369ba1_trim(_28420_a);
}



inline jule::Bool _1ad36a443_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I64 _33835_end, jule::Str* _33846_s) {
	jule::I64 _33913_i = 0LL;;
	for (; (_33913_i < (*(_33846_s)).len()); (_33913_i)++) {
		{
			if ((_33913_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_33913_i] != (*(_33846_s))[_33913_i])) {
				return (_33821_b[_33913_i] < (*(_33846_s))[_33913_i]);;
			};
		}
	_iter_next_1b3377c0e:;
	}
	_iter_end_1b3377c0e:;;
	return false;;
}



inline void _1ad36a6eb_leftShift(_1ad368353_decimal* _35219_a, jule::U64 _35231_k) {
	jule::I64 _35313_delta = _1ad367c59_leftCheats[static_cast<jule::I64>(_35231_k)]._field_delta;;
	if (_1ad36a443_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &(_1ad367c59_leftCheats[static_cast<jule::I64>(_35231_k)]._field_cutoff))) {
		(_35313_delta)--;
	};
	jule::I64 _35813_r = (*(_35219_a))._field_nd;;
	jule::I64 _35913_w = ((*(_35219_a))._field_nd + _35313_delta);;
	jule::U64 _36213_n = 0LLU;;
	(_35813_r)--;
	for (; (_35813_r >= 0LL); (_35813_r)--) {
		{
			_36213_n+=((static_cast<jule::U64>((*(_35219_a))._field_d[_35813_r]) - '0') << _35231_k);
			jule::U64 _36613_quo = (_36213_n / 10LLU);;
			jule::U64 _36713_rem = (_36213_n - (10LLU * _36613_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_36713_rem + '0')));
			} else if ((_36713_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_36613_quo;
		}
	_iter_next_1b337b152:;
	}
	_iter_end_1b337b152:;;
	while ((_36213_n > 0LLU)) {
		{
			jule::U64 _37913_quo = (_36213_n / 10LLU);;
			jule::U64 _38013_rem = (_36213_n - (10LLU * _37913_quo));;
			(_35913_w)--;
			if ((_35913_w < 800LL)) {
				(*(_35219_a))._field_d[_35913_w]=static_cast<jule::U8>(static_cast<jule::U8>((_38013_rem + '0')));
			} else if ((_38013_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_36213_n=_37913_quo;
		}
	_iter_next_1b337b62a:;
	}
	_iter_end_1b337b62a:;;
	(*(_35219_a))._field_nd+=_35313_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_35313_delta;
	_1ad369ba1_trim(_35219_a);
}



inline jule::Bool _1ad36aa70_shouldRoundUp(_1ad368353_decimal* _39919_a, jule::I64 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && ((((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1ad36c203_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1ad36cbc6_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ad36d534_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1ad36c5bb_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1ad36cbc6_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ad36d534_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1ad36c885_Itoa(jule::I64 _809_i) {
	return _1ad36c5bb_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1ad36cbc6_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1ad36ce90_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1ad36d534_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1b33b59c7:;
		}
		_iter_end_1b33b59c7:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1ad36ce90_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1ad30e519_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1b33bde86:;
		}
		_iter_end_1b33bde86:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1b33be706:;
		}
		_iter_end_1b33be706:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1ad36ea30_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b33d8544:;
			{
				return _1ad36e029_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b33d85aa:;
			{
				return _1ad36e2e3_SysUint;;
			}
		}
		else {
			_case_begin_1b33d8005:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b33d572d:;
	};
}



inline jule::I64 _1ad36ece9_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b33d96aa:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1b33d97dc:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1b33d9853:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1b33d98b9:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b33d9930:;
			{
				return _1ad36dc1b_BitSize;;
			}
		}
		else {
			_case_begin_1b33d92c0:;
			{
				return -1LL;;
			}
		}
		_match_end_1b33d9259:;
	};
}



inline jule::Str _1ad37013a_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b33db36b:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b33dbc73:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b33dbcd9:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b33dbd50:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1b33db811:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b33db79a:;
	};
}



inline jule::Str _1ad370404_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b33dc108:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b33dcee9:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b33dd060:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b33dd0c6:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1b33dc999:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b33dc933:;
	};
}



inline jule::Str _1ad3706bd_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b33dd390:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b33de281:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1b33ddc31:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b33ddbba:;
	};
}



inline jule::Bool _1ad371317_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1ad362968_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1ad3715d1_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b33e4242:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b33e3a5a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b33e264c:;
	};
}



inline jule::I64 _1ad37189a_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1b33e9c5e:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1b33e9ce7:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1b33e9d6e:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b33e9874:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b33e97ec:;
	};
}



inline jule::I64 _1ad371b64_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1b33eb799:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1b33eb854:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1b33eb8ba:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b33eb25a:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b33ead4d:;
	};
}



inline void _1ad371cda_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1aa641497_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1b33ec712:;
				{
					_1ad36dc1b_BitSize=64LLU;
					_1ad36e029_SysInt=jule::Str("i64", 3);
					_1ad36e2e3_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1b33ec79a:;
				{
					_1ad36dc1b_BitSize=32LLU;
					_1ad36e029_SysInt=jule::Str("i32", 3);
					_1ad36e2e3_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1b33ec68a:;
		};
	};
}



inline void _1ad371e61_init(void) {
	_1ad371cda_UpdateTarget();
}



inline jule::I64 _1ad375cbc_MinI(jule::Str _6113_k) {
	_6113_k=_1ad36ea30_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b33eba41:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b33ee901:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b33ee967:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b33ee9cd:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b33ebb73:;
			{
				return 0LL;;
			}
		}
		_match_end_1b33ebb1d:;
	};
}



inline jule::I64 _1ad3760ca_MaxI(jule::Str _7913_k) {
	_7913_k=_1ad36ea30_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b33eec75:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b340100c:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b3401073:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b34010d9:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b340068d:;
			{
				return 0LL;;
			}
		}
		_match_end_1b3400d97:;
	};
}



inline jule::U64 _1ad376394_MaxU(jule::Str _9713_k) {
	_9713_k=_1ad36ea30_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b3401381:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b3402618:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b340267e:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b34026e5:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b3401c99:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b34024a3:;
	};
}



inline jule::F64 _1ad3765c5_Min(jule::Str _11512_k) {
	_11512_k=_1ad36ea30_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1ad375cbc_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b3404cbe:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b3404708:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b3404186:;
			{
				return 0LL;;
			}
		}
		_match_end_1b3404450:;
	};
}



inline jule::F64 _1ad37688e_Max(jule::Str _13312_k) {
	_13312_k=_1ad36ea30_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1ad3760ca_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1ad376394_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b3407134:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b3406a6d:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b34064a7:;
			{
				return 0LL;;
			}
		}
		_match_end_1b34067b5:;
	};
}



inline jule::Bool _1ad376d12_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1ad377120_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1ad3773d9_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1ad37772a_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1ad3779e4_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1ad377cad_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1ad378077_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1ad37841d_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1ad3786d7_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1ad3789a1_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1ad378d25_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b340c656:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b340c964:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b340cbd9:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b340cc50:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b340ccb6:;
			{
				return _1ad376d12_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b340cd2c:;
			{
				return _1ad377120_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b340ce3c:;
			{
				return _1ad3773d9_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b340cea3:;
			{
				return _1ad37772a_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b340d019:;
			{
				return _1ad3779e4_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b340d080:;
			{
				return _1ad377cad_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b340d107:;
			{
				return _1ad378077_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b340d17e:;
			{
				return _1ad37841d_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b340d206:;
			{
				return _1ad3786d7_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b340d27d:;
			{
				return _1ad3789a1_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b340d305:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b340d37c:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1b340c7bb:;
			{
				return false;;
			}
		}
		_match_end_1b34074ec:;
	};
}



inline jule::Bool _1ad3790de_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1ad3793a8_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1ad379672_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1ad37993b_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1ad379dae_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1ad37a178_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1ad37a442_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1ad37a70b_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1ad37aa80_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b341543e:;
			{
				return _1ad37bad6_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b34157a2:;
			{
				return _1ad37bde4_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b3415829:;
			{
				return _1ad37bde4_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b3415a7c:;
			{
				return _1ad3790de_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b3415b04:;
			{
				return _1ad3793a8_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b3415b7b:;
			{
				return _1ad379672_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b3415c03:;
			{
				return _1ad37993b_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b3415cd0:;
			{
				return _1ad379dae_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b3415d57:;
			{
				return _1ad37a178_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b3415dce:;
			{
				return _1ad37a442_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b3415e56:;
			{
				return _1ad37a70b_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b3415ecd:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b341563c:;
			{
				return false;;
			}
		}
		_match_end_1b34155b5:;
	};
}



inline jule::Bool _1ad37bad6_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1ad37bde4_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1ad37c1ad_IsInt(jule::Str _4610_k) {
	return (_1ad37bad6_IsSigInt(_4610_k) || _1ad37bde4_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1ad37c4ee_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1ad37c7b8_IsNum(jule::Str _5610_k) {
	return (_1ad37c1ad_IsInt(_5610_k) || _1ad37c4ee_IsFloat(_5610_k));;
}



inline jule::Bool _1ad37ca82_IsSigNum(jule::Str _6113_k) {
	return (_1ad37bad6_IsSigInt(_6113_k) || _1ad37c4ee_IsFloat(_6113_k));;
}



inline void _1ad386dcc_lshiftUnsig(_1ad37cdb2_Const* _59021_c, _1ad37cdb2_Const* _59032_x) {
	jule::U64 _5919_l = _1ad3807dd_AsU64(_59021_c);;
	jule::U64 _5929_r = _1ad3807dd_AsU64(_59032_x);;
	_1ad3810d5_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1ad38720c_rshiftUnsig(_1ad37cdb2_Const* _59621_c, _1ad37cdb2_Const* _59632_x) {
	jule::U64 _5979_l = _1ad3807dd_AsU64(_59621_c);;
	jule::U64 _5989_r = _1ad3807dd_AsU64(_59632_x);;
	_1ad3810d5_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1b0587509_FindModuleFile(jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3432cca:;
		if (it != expr_end) {
			jule::Ptr<_1ba100e58_DirEntry> *_1312_d = it;
			{
				if (((!(_1ba10ea5a_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b3432cca:;
			++it;
			goto _iter_begin_1b3432cca;
		}
		_iter_end_1b3432cca:;
	};
	return false;;
}



inline jule::Str _1b05877d4_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_1ba100e58_DirEntry>> _2617_dirents = ({
				auto except = static__1aa3746c5_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b3433b22;
				} jule::Slice<jule::Ptr<_1ba100e58_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1b0587509_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_1aa372382_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1b3433b22;
			};
		}
	_iter_next_1b3433b22:;
	}
	_iter_end_1b3433b22:;;
	return jule::Str();;
}



inline jule::Slice<_1aa3c3a21_Log> _1b0587a9d_CheckModuleFile(jule::Str* _4621_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__1ba10c849_Read(_1aa37168e_Join(jule::Slice<jule::Str>::make({(*(_4621_path)),jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_1aa3c3a21_Log>::make({_1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _1aa357686_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_1aa3c3a21_Log>::make({_1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Bool _1b05885d7_IsPub(jule::Str* _1011_ident) {
	if (((*(_1011_ident))[0LL] < 128LLU)) {
		jule::U8 _1213_b = (*(_1011_ident))[0LL];;
		return (('A' <= _1213_b) && (_1213_b <= 'Z'));;
	};
	jule::I32 _1510_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune(_1ba10714b_Stobs(_1011_ident));
		_1510_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1aa204b0a_IsUpper(_1510_r);;
}



inline jule::Bool _1b05cdeac_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1b05e6843_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1b05e7448_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1b05e69ec_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1b05e6d3d_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				(_4713_s).append(_1b05e77bc_strEsqSeq(_4210_bytes, &(_4813_i)));;
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_1aa30e5e9_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1b343e567:;
	}
	_iter_end_1b343e567:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1b05e7107_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b3443181:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b3443208:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b3443280:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b3443307:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b344337e:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b3443406:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b344347d:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b3443505:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b344357c:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b3443604:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b344303d:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1b05e7448_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1b05e7107_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b3447a9d:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1ad35aa60_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b3447d12:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1ad35aa60_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b3447d78:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ad35aa60_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1b3446706:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1ad35aa60_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1b34466a1:;
	};
}



inline jule::Slice<jule::U8> _1b05e77bc_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1b05e7448_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _1b07292a0_findFormatPrefix(jule::Slice<jule::U8>* _1122_bytes, jule::I64* _1138_start) {
	jule::I64 _1213_i = (*(_1138_start));;
	while ((_1213_i < (*(_1122_bytes)).len())) {
		{
			jule::I32 _1414_r = 0;;
			jule::I64 _1417_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_1122_bytes)).slice(_1213_i));
				_1414_r = __jule_assign_result.__jule_result_arg0;
				_1417_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1414_r == '{')) {
				return _1213_i;;
			};
			_1213_i+=_1417_size;
		}
	_iter_next_1b3478480:;
	}
	_iter_end_1b3478480:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1b0729668_getFormatRange(jule::I64* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I64 _299_start = (*(_2824_i));;
	jule::I64 _3013_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _3214_r = 0;;
			jule::I64 _3217_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1aa30d186_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_3214_r = __jule_assign_result.__jule_result_arg0;
				_3217_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_3217_size;
			{
				auto &_match_expr{ _3214_r };
				
				if (_match_expr == '{') {
					_case_begin_1b347ac35:;
					{
						(_3013_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b347ad12:;
					{
						(_3013_braces)--;
						if ((_3013_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_299_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1b347a65d:;
			};
		}
	_iter_next_1b3479e98:;
	}
	_iter_end_1b3479e98:;;
	return nullptr;;
}



inline void _1b0729954_FmtByDefault(_1aa364275_StrBuilder* _4822_buf, jule::Any* _4840_arg) {
	if (((*(_4840_arg)) == nullptr)) {
		_1aa36d03c_WriteStr(_4822_buf, jule::Str("<nil>", 5));
		return;;
	};
	{
		auto &_match_expr{ (*(_4840_arg)) };
		
		if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b347c264:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad355ae3_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F32>(&__jule_any_type132))), 'g', -1LL, 32LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b347c94b:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad355ae3_FmtFloat(static_cast<jule::F64>((*(_4840_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b347c40c:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c5bb_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I8>(&__jule_any_type133)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b347c473:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c5bb_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I16>(&__jule_any_type134)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b347ca7d:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c5bb_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b347cae4:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c5bb_FmtInt(static_cast<jule::I64>((*(_4840_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b347cb5a:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c203_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U8>(&__jule_any_type131)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b347cbc1:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c203_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U16>(&__jule_any_type135)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1b347cc37:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c203_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U32>(&__jule_any_type136)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b347cc9d:;
			{
				_1aa36d03c_WriteStr(_4822_buf, _1ad36c203_FmtUint(static_cast<jule::U64>((*(_4840_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL));
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b347cd14:;
			{
				_1aa36d03c_WriteStr(_4822_buf, (*(_4840_arg)).cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b347cd7a:;
			{
				if ((*(_4840_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					_1aa36d03c_WriteStr(_4822_buf, jule::Str("true", 4));
				} else {
					_1aa36d03c_WriteStr(_4822_buf, jule::Str("false", 5));
				};
			}
		}
		else {
			_case_begin_1b347bc58:;
			{
				_1aa36d03c_WriteStr(_4822_buf, jule::to_str((*(_4840_arg))));
			}
		}
		_match_end_1b347b131:;
	};
}



inline void _1b0729d72_applyFmtByDefault(_1aa364275_StrBuilder* _8727_buf, jule::I64* _8749_j, jule::Slice<jule::Any> _8757_args) {
	jule::Any _889_arg = _8757_args[(*(_8749_j))];;
	((*(_8749_j)))++;
	_1b0729954_FmtByDefault(_8727_buf, &(_889_arg));
}



inline void _1b072a2c3_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1aa364275_StrBuilder* _9536_buf, jule::I64* _9558_j, jule::Slice<jule::Any> _9566_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1b0729d72_applyFmtByDefault(_9536_buf, _9558_j, _9566_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		_1aa36d03c_WriteStr(_9536_buf, jule::Str("{}", 2));
		return;;
	};
	_1aa36cc84_Write(_9536_buf, (*(_9518_fmt)));
}



inline jule::Str _1b072a614_Format(jule::Str* _11412_fmt, jule::Slice<jule::Any> _11422_args) {
	if ((_11422_args.len() == 0LL)) {
		return (*(_11412_fmt));;
	};
	jule::Slice<jule::U8> _11813_fmtBytes = _1ba10714b_Stobs(_11412_fmt);;
	_1aa364275_StrBuilder _11913_buf = static__1aa364594_New(static_cast<jule::I64>((*(_11412_fmt)).len()));;
	jule::I64 _12013_j = 0LL;;
	jule::I64 _12113_last = 0LL;;
	jule::I64 _12213_i = _1b07292a0_findFormatPrefix(&(_11813_fmtBytes), &(_12113_last));;
	for (; (_12213_i != -1LL); _12213_i=static_cast<jule::I64>(_1b07292a0_findFormatPrefix(&(_11813_fmtBytes), &(_12213_i)))) {
		{
			_1aa36cc84_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last, _12213_i));
			jule::Slice<jule::U8> _12517_format = _1b0729668_getFormatRange(&(_12213_i), &(_11813_fmtBytes));;
			if ((_12517_format == nullptr)) {
				goto _iter_next_1b34894a2;
			};
			_1b072a2c3_applyFmt(&(_12517_format), &(_11913_buf), &(_12013_j), _11422_args);
			if ((_12013_j >= _11422_args.len())) {
				_1aa36cc84_Write(&_11913_buf, _11813_fmtBytes.slice(_12213_i));
				_12113_last=static_cast<jule::I64>(_11813_fmtBytes.len());
				goto _iter_end_1b34894a2;
			};
			_12113_last=_12213_i;
		}
	_iter_next_1b34894a2:;
	}
	_iter_end_1b34894a2:;;
	if ((_12113_last < _11813_fmtBytes.len())) {
		_1aa36cc84_Write(&_11913_buf, _11813_fmtBytes.slice(_12113_last));
	};
	return _1aa36d834_Str(&_11913_buf);;
}



inline jule::Str _1b072c68d_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1b072a614_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1b050dace_parameterUsesGenerics(jule::Ptr<_1b050a856_ParamIns>* _38431_p, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>* _38446_generics) {
	if (_1b0507545_IsSelf((*(_38431_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1b06632a5_kindUsesGenerics(&((*(_38431_p)).get()._field_Kind), _38446_generics);;
}



inline jule::Ptr<_1b064ec20_TypeSymbol> _1b051132e_buildType(jule::Ptr<_1b04c1ba2_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1b06137b6_Value> _1b051163c_buildExpr(jule::Ptr<_1b04c5ed6_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b0511906_buildTypeAlias(jule::Ptr<_1b04d85e2_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1b06469b4_TypeAlias>(_1b06469b4_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1b051132e_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1b04de97d_Field> _1b0511c47_buildField(jule::Ptr<_1b04dbdba_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1b04de97d_Field>(_1b04de97d_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1b051132e_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1b04de97d_Field>> _1b0512011_buildFields(jule::Slice<jule::Ptr<_1b04dbdba_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1b04de97d_Field>> _13513_fields = jule::Slice<jule::Ptr<_1b04de97d_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b308140c:;
		if (it != expr_end) {
			jule::Ptr<_1b04dbdba_FieldDecl> _13617_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b04de97d_Field>> &__jule_push_dest = _13513_fields; __jule_push_dest.push(_1b0511c47_buildField(_13617_decl)); };
			}
			_iter_next_1b308140c:;
			++it;
			goto _iter_begin_1b308140c;
		}
		_iter_end_1b308140c:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1b04e2871_Struct> _1b05122ca_buildStruct(jule::Ptr<_1b04dc7b1_StructDecl> _14220_decl) {
	return jule::new_ptr<_1b04e2871_Struct>(_1b04e2871_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1b0512011_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1b0506e29_Param> _1b0512594_buildParam(jule::Ptr<_1b04d24dc_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1b051132e_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1b0506e29_Param>> _1b051293a_buildParams(jule::Slice<jule::Ptr<_1b04d24dc_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1b0506e29_Param>> _16613_params = jule::Slice<jule::Ptr<_1b0506e29_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b30845ca:;
		if (it != expr_end) {
			jule::Ptr<_1b04d24dc_ParamDecl> _16717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b0506e29_Param>> &__jule_push_dest = _16613_params; __jule_push_dest.push(_1b0512594_buildParam(_16717_decl)); };
			}
			_iter_next_1b30845ca:;
			++it;
			goto _iter_begin_1b30845ca;
		}
		_iter_end_1b30845ca:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1b0506698_RetType> _1b0512c04_buildRetType(jule::Ptr<_1b04c4a95_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1b0506698_RetType>(_1b0506698_RetType{._field_Kind=_1b051132e_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1b05088ed_Fn> _1b0512ebd_buildFunc(jule::Ptr<_1b04d393e_FnDecl> _18318_decl) {
	return jule::new_ptr<_1b05088ed_Fn>(_1b05088ed_Fn{._field_Token=_18318_decl.get()._field_Token, ._field_Global=_18318_decl.get()._field_Global, ._field_Unsafety=_18318_decl.get()._field_Unsafety, ._field_Public=_18318_decl.get()._field_Public, ._field_Binded=_18318_decl.get()._field_Binded, ._field_Statically=_18318_decl.get()._field_Statically, ._field_Exceptional=_18318_decl.get()._field_Exceptional, ._field_Ident=_18318_decl.get()._field_Ident, ._field_Directives=_18318_decl.get()._field_Directives, ._field_Scope=_18318_decl.get()._field_Scope, ._field_Generics=_18318_decl.get()._field_Generics, ._field_Result=_1b0512c04_buildRetType(_18318_decl.get()._field_Result), ._field_Params=_1b051293a_buildParams(&(_18318_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1b05088ed_Fn>> _1b0513287_buildMethods(jule::Slice<jule::Ptr<_1b04d393e_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1b05088ed_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1b05088ed_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b308839d:;
		if (it != expr_end) {
			jule::Ptr<_1b04d393e_FnDecl> _20317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b05088ed_Fn>> &__jule_push_dest = _20213_methods; __jule_push_dest.push(_1b0512ebd_buildFunc(_20317_decl)); };
			}
			_iter_next_1b308839d:;
			++it;
			goto _iter_begin_1b308839d;
		}
		_iter_end_1b308839d:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1b064ec20_TypeSymbol>> _1b0513551_buildTraitInherits(jule::Slice<jule::Ptr<_1b04c1ba2_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1b064ec20_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1b064ec20_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3089525:;
		if (it != expr_end) {
			jule::Ptr<_1b04c1ba2_TypeDecl> _21117_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1b064ec20_TypeSymbol>> &__jule_push_dest = _21013_symbols; __jule_push_dest.push(_1b051132e_buildType(_21117_it)); };
			}
			_iter_next_1b3089525:;
			++it;
			goto _iter_begin_1b3089525;
		}
		_iter_end_1b3089525:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1b051bb97_Trait> _1b051381a_buildTrait(jule::Ptr<_1b04dceed_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1b051bb97_Trait>(_1b051bb97_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1b0513551_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1b0513287_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1b051d825_EnumItem> _1b0513ad4_buildEnumItem(jule::Ptr<_1b04da0a5_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1b051d825_EnumItem>(_1b051d825_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1b051163c_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1b051d825_EnumItem>> _1b0513d9d_buildEnumItems(jule::Slice<jule::Ptr<_1b04da0a5_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1b051d825_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1b051d825_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b308ad1d:;
		if (it != expr_end) {
			jule::Ptr<_1b04da0a5_EnumItemDecl> _23717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b051d825_EnumItem>> &__jule_push_dest = _23613_items; __jule_push_dest.push(_1b0513ad4_buildEnumItem(_23717_decl)); };
			}
			_iter_next_1b308ad1d:;
			++it;
			goto _iter_begin_1b308ad1d;
		}
		_iter_end_1b308ad1d:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1b051e392_Enum> _1b0514321_buildEnum(jule::Ptr<_1b04dab66_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1b051e392_Enum>(_1b051e392_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1b051132e_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1b0513d9d_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1b05204c5_TypeEnumItem> _1b05145da_buildTypeEnumItem(jule::Ptr<_1b04db491_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1b05204c5_TypeEnumItem>(_1b05204c5_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1b051132e_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>> _1b05148a4_buildTypeEnumItems(jule::Slice<jule::Ptr<_1b04db491_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b308e8e3:;
		if (it != expr_end) {
			jule::Ptr<_1b04db491_TypeEnumItemDecl> _26317_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b05204c5_TypeEnumItem>> &__jule_push_dest = _26213_items; __jule_push_dest.push(_1b05145da_buildTypeEnumItem(_26317_decl)); };
			}
			_iter_next_1b308e8e3:;
			++it;
			goto _iter_begin_1b308e8e3;
		}
		_iter_end_1b308e8e3:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0514b6d_buildTypeEnum(jule::Ptr<_1b04dbb01_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1b0520a9c_TypeEnum>(_1b0520a9c_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1b05148a4_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b0514e37_buildVar(jule::Ptr<_1b04d4a1c_VarDecl> _27817_decl) {
	return jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1b051132e_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1b051163c_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1b050ec9a_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _1b0515201_buildVars(jule::Slice<jule::Ptr<_1b04d4a1c_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1b05ae1bd_Var>> _29613_vars = jule::Slice<jule::Ptr<_1b05ae1bd_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3093188:;
		if (it != expr_end) {
			jule::Ptr<_1b04d4a1c_VarDecl> _29717_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = _29613_vars; __jule_push_dest.push(_1b0514e37_buildVar(_29717_decl)); };
			}
			_iter_next_1b3093188:;
			++it;
			goto _iter_begin_1b3093188;
		}
		_iter_end_1b3093188:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1b0543b14_Impl> _1b05154ba_buildImpl(jule::Ptr<_1b04dd65d_Impl> _30318_decl) {
	return jule::new_ptr<_1b0543b14_Impl>(_1b0543b14_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1b0513287_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1b0515201_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1b0612672_Data> _1b053e604_buildAsComptimeMethodData(jule::Ptr<_1b050b802_FnIns>* _139635_f) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_1b056a487_ImportInfo> _1b053e912_findComptimePackage(jule::Ptr<_1b058b4db_Sema>* _140429_s) {
	return _1b058b981_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1b056a487_ImportInfo>)>([=](jule::Ptr<_1b056a487_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1b0612672_Data> _1b053ec86_buildComptimeTypeInfoData(jule::Ptr<_1b058b4db_Sema>* _141035_s, jule::Ptr<_1b06477a6_TypeKind>* _141050_t) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_1b058ad26_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b053eeb7_buildComptimeValue(jule::Ptr<_1b0612672_Data>* _141828_d) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0538a1b_comptimeValue>(_1b0538a1b_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _1b0542e87_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1b06477a6_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1b2a02873:;
			{
				jule::Ptr<_1b0650627_Prim> _14513_prim = _1b064a19e_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1ad37ca82_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1b2a02ad7:;
			{
				jule::Ptr<_1b0650627_Prim> _15113_prim = _1b064a19e_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1ad37bde4_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1b2a02b5e:;
			{
				jule::Ptr<_1b0650627_Prim> _15713_prim = _1b064a19e_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1ad37c4ee_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1b2a02e06:;
			{
				jule::Ptr<_1b0650627_Prim> _16313_prim = _1b064a19e_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1ad37c7b8_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1b2a02e6c:;
			{
				return _1b0649148_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1b2a02ed3:;
			{
				return (!(_1b0649148_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1b2a03049:;
			{
				return _1b0648db2_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1b2a03159:;
			{
				return _1b06493ce_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1b2a029b6:;
			{
				return false;;
			}
		}
		_match_end_1b2a0293e:;
	};
}



inline jule::Bool _1b0543295_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1b0541282_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a03203:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1b2a03203:;
			++it;
			goto _iter_begin_1b2a03203;
		}
		_iter_end_1b2a03203:;
	};
	return false;;
}



inline jule::Ptr<_1b055134c_scopeChecker> _1b0545d25_newScopeCheckerBase(jule::Ptr<_1b058b4db_Sema>* _5829_s, jule::Ptr<_1b050b802_FnIns> _5843_owner) {
	return jule::new_ptr<_1b055134c_scopeChecker>(_1b055134c_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1b060c44c_SymbolTable>(), });;
}



inline jule::Ptr<_1b055134c_scopeChecker> _1b05461dd_newScopeChecker(jule::Ptr<_1b058b4db_Sema>* _6625_s, jule::Ptr<_1b050b802_FnIns> _6639_owner) {
	jule::Ptr<_1b055134c_scopeChecker> _6713_base = _1b0545d25_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1b054eda6_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1b0550439_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1b054eda6_scopeLabel> _1b0546562_findLabelParent(jule::Str* _7621_ident, jule::Ptr<_1b055134c_scopeChecker> _7637_scope) {
	jule::Ptr<_1b054eda6_scopeLabel> _7713_label = _1b0554d56_findLabelScope(_7637_scope, _7621_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7637_scope.get()._field_parent == nullptr) || (_7637_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7637_scope=_7637_scope.get()._field_parent;
			_7713_label=_1b0554d56_findLabelScope(_7637_scope, _7621_ident);
		}
	_iter_next_1b2a1c1a6:;
	}
	_iter_end_1b2a1c1a6:;;
	return _7713_label;;
}



inline jule::Bool _1b054692a_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1b0549048_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b2a1d707:;
			{
				jule::Ptr<_1b04ec00c_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b2a1d76d:;
			{
				jule::Ptr<_1b0612672_Data> _9813_d = _9021_Model.cast_ptr<_1b0612672_Data>(&__jule_any_type24);;
				return _1b054692a_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1b2a1d6a2:;
	};
	return false;;
}



inline jule::Bool _1b0546c9e_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1b0549048_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b2a20550:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1b0549048_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b2a205c7:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1b0549e7d_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b2a2064e:;
			{
				jule::Ptr<_1b054ad80_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1b054ad80_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1b054692a_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b2a208a2:;
			{
				jule::Ptr<_1b054a434_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1b054a434_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1b054692a_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1b054692a_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b2a20918:;
			{
				jule::Ptr<_1b054d17e_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1b054d17e_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a24158:;
					if (it != expr_end) {
						jule::Ptr<_1b054dcb7_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b2a24a1b:;
								if (it != expr_end) {
									jule::Ptr<_1b0612672_Data> *_12420_expr = it;
									{
										if (_1b054692a_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1b2a24a1b:;
									++it;
									goto _iter_begin_1b2a24a1b;
								}
								_iter_end_1b2a24a1b:;
							};
						}
						_iter_next_1b2a24158:;
						++it;
						goto _iter_begin_1b2a24158;
					}
					_iter_end_1b2a24158:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b2a2097e:;
			{
				jule::Ptr<_1b0549b81_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1b0549b81_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a2637a:;
					if (it != expr_end) {
						jule::Ptr<_1b0549466_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1b054692a_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1b2a2637a:;
						++it;
						goto _iter_begin_1b2a2637a;
					}
					_iter_end_1b2a2637a:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b2a209e5:;
			{
				jule::Ptr<_1b0612672_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1b0612672_Data>(&__jule_any_type24);;
				return _1b054692a_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1b2a1dc8a:;
			{
				return false;;
			}
		}
		_match_end_1b2a1dc35:;
	};
}



inline jule::I64 _1b0547123_countMatchType(jule::Ptr<_1b054d17e_Match>* _14720_m, jule::Ptr<_1b06477a6_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1b0647b6e_Str((*(_14732_t)).ptr());;
	_julec_label_1b2a288aa:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2a28ca6:;
		if (it != expr_end) {
			jule::Ptr<_1b054dcb7_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1b2a28ca6;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2a29702:;
					if (it != expr_end) {
						jule::Ptr<_1b0612672_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1b2a28ca6;
							};
							if ((_1499_kind == _1b0647b6e_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1b06477a6_TypeKind>(&__jule_any_type90).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1b2a29702:;
						++it;
						goto _iter_begin_1b2a29702;
					}
					_iter_end_1b2a29702:;
				};
			}
			_iter_next_1b2a28ca6:;
			++it;
			goto _iter_begin_1b2a28ca6;
		}
		_iter_end_1b2a28ca6:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1b0612672_Data>> _1b05473dc_getDatasFromTupleData(jule::Ptr<_1b0612672_Data>* _17131_d) {
	if ((_1b064bec5_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type88) {
				_case_begin_1b2a2d66d:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1b05010aa_TupleExprModel>(&__jule_any_type88).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1b2a2b270:;
				{
					jule::Ptr<_1b065571a_Tuple> _17721_t = _1b064bec5_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1b0612672_Data>> _17821_r = jule::Slice<jule::Ptr<_1b0612672_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b2a2beeb:;
						if (it != expr_end) {
							jule::Ptr<_1b06477a6_TypeKind> _17925_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1b0612672_Data>> &__jule_push_dest = _17821_r; __jule_push_dest.push(jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_17925_kind, ._field_Mutable=true, })); };
							}
							_iter_next_1b2a2beeb:;
							++it;
							goto _iter_begin_1b2a2beeb;
						}
						_iter_end_1b2a2beeb:;
					};
					return _17821_r;;
				}
			}
			_match_end_1b2a2b21a:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1b0612672_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1b0547ca0_checkMut(jule::Ptr<_1b058b4db_Sema>* _20618_s, jule::Ptr<_1b0612672_Data>* _20629_left, jule::Ptr<_1b0612672_Data> _20646_right, jule::Ptr<_1aa49b1d1_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1b2a311ba:;
			{
				_1b058e126_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1b0649148_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1b2a31242:;
			{
				if (((_20660_op.get()._field_Id != static_cast<jule::U64>(71LLU)) && (_1b064b722_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1b058e126_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b2a310ee:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2a31088:;
	};
}



inline jule::Bool _1b0548289_checkAssign(jule::Ptr<_1b058b4db_Sema>* _22521_s, jule::Ptr<_1b0612672_Data>* _22536_left, jule::Ptr<_1b0612672_Data> _22553_right, jule::Ptr<_1aa49b1d1_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1b050b802_FnIns> _2269_f = _1b064b48b_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1b058e126_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1b0613046_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1b2a35510:;
			{
				_1b058e126_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1b058e489_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1b2a35587:;
			{
				_1b058e126_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1b0547ca0_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1b2a3560e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b2a35444:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b2a34de4:;
	};
}



inline jule::Bool _1b0548553_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b2a3283c:;
			{
				return (!((*(_24731_n)).cast_ptr<_1b04d072c_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b2a374ce:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2a35d18:;
			{
				return false;;
			}
		}
		_match_end_1b2a35cb3:;
	};
}



inline jule::Bool _1b054881c_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1b2a379eb:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b2a3825a:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1b0612672_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1b2a3902a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b2a3938d:;
						{
							return false;;
						}
					}
					_match_end_1b2a39338:;
				};
			}
		}
		else {
			_case_begin_1b2a38007:;
			{
				return false;;
			}
		}
		_match_end_1b2a37ea2:;
	};
}



inline jule::Bool _1b0548ad6_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b2a39536:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b2a38b0c:;
			{
				return false;;
			}
		}
		_match_end_1b2a38aa7:;
	};
}



inline jule::U64 _1b0563161_removeEqFromOp(jule::U64 _213419_op) {
	{
		auto &_match_expr{ _213419_op };
		
		if (_match_expr == static_cast<jule::U64>(40LLU)) {
			_case_begin_1b2a39b85:;
			{
				return static_cast<jule::U64>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(41LLU)) {
			_case_begin_1b2a3a59d:;
			{
				return static_cast<jule::U64>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(42LLU)) {
			_case_begin_1b2a3a614:;
			{
				return static_cast<jule::U64>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(43LLU)) {
			_case_begin_1b2a3a735:;
			{
				return static_cast<jule::U64>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(44LLU)) {
			_case_begin_1b2a3a79b:;
			{
				return static_cast<jule::U64>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(45LLU)) {
			_case_begin_1b2a3a812:;
			{
				return static_cast<jule::U64>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(46LLU)) {
			_case_begin_1b2a3a889:;
			{
				return static_cast<jule::U64>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(47LLU)) {
			_case_begin_1b2a3a911:;
			{
				return static_cast<jule::U64>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(48LLU)) {
			_case_begin_1b2a3a9cc:;
			{
				return static_cast<jule::U64>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(49LLU)) {
			_case_begin_1b2a3aa43:;
			{
				return static_cast<jule::U64>(66LLU);;
			}
		}
		else {
			_case_begin_1b2a3a2b2:;
			{
				return _213419_op;;
			}
		}
		_match_end_1b2a3a25c:;
	};
}



inline jule::Ptr<_1b05ae1bd_Var> _1b056796d_findVarInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _4626_files, jule::Str* _4650_ident, jule::Bool _4662_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e19273:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1b05ae1bd_Var> _4817_v = _1b060cd32_FindVar(_4717_f.ptr(), (*(_4650_ident)), _4662_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1b2e19273:;
			++it;
			goto _iter_begin_1b2e19273;
		}
		_iter_end_1b2e19273:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b0567de1_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _5832_files, jule::Str* _5856_ident, jule::Bool _5868_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e1a6c5:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1b06469b4_TypeAlias> _6017_ta = _1b060d22d_FindTypeAlias(_5917_f.ptr(), (*(_5856_ident)), _5868_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1b2e1a6c5:;
			++it;
			goto _iter_begin_1b2e1a6c5;
		}
		_iter_end_1b2e1a6c5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b04e2871_Struct> _1b0568320_findStructInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _7029_files, jule::Str* _7053_ident, jule::Bool _7065_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e1bb27:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1b04e2871_Struct> _7217_s = _1b060d629_FindStruct(_7117_f.ptr(), (*(_7053_ident)), _7065_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1b2e1bb27:;
			++it;
			goto _iter_begin_1b2e1bb27;
		}
		_iter_end_1b2e1bb27:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b05088ed_Fn> _1b05687c6_findFnInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _8225_files, jule::Str* _8249_ident, jule::Bool _8261_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e1d079:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1b05088ed_Fn> _8417_f = _1b060da25_FindFn(_8317_file.ptr(), (*(_8249_ident)), _8261_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1b2e1d079:;
			++it;
			goto _iter_begin_1b2e1d079;
		}
		_iter_end_1b2e1d079:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b051bb97_Trait> _1b0568b17_findTraitInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _9428_files, jule::Str* _9452_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e1d673:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1b051bb97_Trait> _9617_t = _1b060dd66_FindTrait(_9517_f.ptr(), (*(_9452_ident)));;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1b2e1d673:;
			++it;
			goto _iter_begin_1b2e1d673;
		}
		_iter_end_1b2e1d673:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b051e392_Enum> _1b0568e8b_findEnumInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _10627_files, jule::Str* _10651_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e20510:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1b051e392_Enum> _10817_e = _1b060e1a7_FindEnum(_10717_f.ptr(), (*(_10651_ident)));;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1b2e20510:;
			++it;
			goto _iter_begin_1b2e20510;
		}
		_iter_end_1b2e20510:;
	};
	return nullptr;;
}



inline jule::Ptr<_1b0520a9c_TypeEnum> _1b0569310_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _11831_files, jule::Str* _11855_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e21775:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1b0520a9c_TypeEnum> _12017_e = _1b060e4e8_FindTypeEnum(_11917_f.ptr(), (*(_11855_ident)));;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1b2e21775:;
			++it;
			goto _iter_begin_1b2e21775;
		}
		_iter_end_1b2e21775:;
	};
	return nullptr;;
}



inline jule::Any _1b056984e_defByIdentPackage(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e22c2c:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1b06104b6_defByIdent(_13017_file.ptr(), _12951_ident, _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1b2e22c2c:;
			++it;
			goto _iter_begin_1b2e22c2c;
		}
		_iter_end_1b2e22c2c:;
	};
	return nullptr;;
}



inline jule::Bool _1b0570888_isStdPackage(jule::Str* _35518_f, jule::Str _35526_p) {
	return _1aa34e42a_HasPrefix((*(_35518_f)), _1aa37168e_Join(jule::Slice<jule::Str>::make({_1aa6405ea_PathStdlib,_35526_p})));;
}



inline jule::Bool _1b0588b7b_isValidModelForRef(jule::Any* _1328_m) {
	{
		auto &_match_expr{ (*(_1328_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b2e32e07:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b2e32e6d:;
			{
				jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _1817_model = (*(_1328_m)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1b0588b7b_isValidModelForRef(&(_1817_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b2e32ed4:;
			{
				jule::Ptr<_1b04ee20c_TraitSubIdentExprModel> _2117_model = (*(_1328_m)).cast_ptr<_1b04ee20c_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1b0588b7b_isValidModelForRef(&(_2117_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b2e3304a:;
			{
				jule::Ptr<_1b04ea406_UnaryExprModel> _2417_unary = (*(_1328_m)).cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74);;
				if ((_2417_unary.get()._field_Op.get()._field_Id != static_cast<jule::U64>(62LLU))) {
					return false;;
				};
				if ((_1b064a6bb_Ptr(_2417_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1b064a435_Sptr(_2417_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1b0588b7b_isValidModelForRef(&(_2417_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1b2e32d91:;
			{
				return false;;
			}
		}
		_match_end_1b2e3292e:;
	};
}



inline _1aa3c3a21_Log _1b05891a9_compilerErr(jule::Ptr<_1aa49b1d1_Token>* _4217_token, jule::Bool _4232_line, jule::Str _4244_fmt, jule::Slice<jule::Any> _4257_args) {
	_1aa3c3a21_Log _4313_log = _1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4217_token)).get()._field_Row, ._field_Column=(*(_4217_token)).get()._field_Column, ._field_Path=(*(_4217_token)).get()._field_File.get()._field_Path, ._field_Text=_1aa3c3e83_Logf(_4244_fmt, _4257_args), };;
	if (_4232_line) {
		_4313_log._field_Line=_1aa4a2979_GetRow((*(_4217_token)).get()._field_File.ptr(), (*(_4217_token)).get()._field_Row);
	};
	return _4313_log;;
}



inline jule::Bool _1b058952d_impIsLookupable(jule::Ptr<_1b056a487_ImportInfo>* _5621_i, jule::Str* _5638_ident) {
	if ((*(_5621_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5621_i)).get()._field_ImportAll))) {
		if (((*(_5621_i)).get()._field_Selected.len() > 0LL)) {
			return _1b056cd19_existIdent((*(_5621_i)).ptr(), (*(_5638_ident)));;
		};
	};
	return (*(_5621_i)).get()._field_ImportAll;;
}



inline void _1b05897d6_appendRetVars(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _6823_dest, jule::Ptr<_1b050b802_FnIns>* _6842_f) {
	if ((_1b0508d71_IsVoid((*(_6842_f)).get()._field_Decl.ptr()) || ((*(_6842_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1b06477a6_TypeKind>> _7313_types = _1b050ca01_Types((*(_6842_f)).ptr());;
	{
		auto expr = &((*(_6842_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e3ae32:;
		if (it != expr_end) {
			jule::I64 _7410_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _7417_ident = *it;
			{
				if ((_1aa49db40_IsIgnoreIdent(_7417_ident.get()._field_Kind) || _1aa49de09_IsAnonIdent(_7417_ident.get()._field_Kind))) {
					goto _iter_next_1b2e3ae32;
				};
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_6823_dest)); __jule_push_dest.push(jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Scope=(*(_6842_f)).get()._field_Scope, ._field_Token=_7417_ident, ._field_Ident=_7417_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_7313_types[_7410_i]}), ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()}), ._field_RetOrder=_7410_i, })); };
			}
			_iter_next_1b2e3ae32:;
			++it;
			_7410_i++;
			goto _iter_begin_1b2e3ae32;
		}
		_iter_end_1b2e3ae32:;
	};
	if ((((*(_6842_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6823_dest)).len() == 1LL))) {
		(*(_6823_dest))[((*(_6823_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1b0589ac2_appendParamVars(jule::Slice<jule::Ptr<_1b05ae1bd_Var>>* _9825_dest, jule::Ptr<_1b050b802_FnIns>* _9844_f) {
	if (((*(_9844_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9844_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e3eb4a:;
		if (it != expr_end) {
			jule::Ptr<_1b050a856_ParamIns> _10317_p = *it;
			{
				if ((_1aa49db40_IsIgnoreIdent(_10317_p.get()._field_Decl.get()._field_Ident) || _1aa49de09_IsAnonIdent(_10317_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1b2e3eb4a;
				};
				jule::Ptr<_1b05ae1bd_Var> _10817_v = jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Scope=(*(_9844_f)).get()._field_Scope, ._field_Token=_10317_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10317_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10317_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10317_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(), ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()}), });;
				{
					
					if (_1b0507545_IsSelf(_10317_p.get()._field_Decl.ptr())) {
						_case_begin_1b2e43302:;
						{
							_10817_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1b0647300_Kind>((*(_9844_f)).get()._field_Owner, 0)});
							_10817_v.get()._field_Reference=(!(_1b05077cb_IsRef(_10317_p.get()._field_Decl.ptr())));
							if (_1b05077cb_IsRef(_10317_p.get()._field_Decl.ptr())) {
								_10817_v.get()._field_Ident=_10817_v.get()._field_Ident.slice(1LL);
								_10817_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654153_Sptr>(_1b0654153_Sptr{._field_Elem=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_BindIdent=_10817_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10817_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10317_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1b2e43214:;
						{
							_10817_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654b26_Slc>(_1b0654b26_Slc{._field_Elem=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_BindIdent=_10317_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10317_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1b2e42db2:;
						{
							_10817_v.get()._field_Kind.get()._field_Kind=_10317_p.get()._field_Kind;
						}
					}
					_match_end_1b2e42c91:;
				};
				{ jule::Slice<jule::Ptr<_1b05ae1bd_Var>> &__jule_push_dest = (*(_9825_dest)); __jule_push_dest.push(_10817_v); };
			}
			_iter_next_1b2e3eb4a:;
			++it;
			goto _iter_begin_1b2e3eb4a;
		}
		_iter_end_1b2e3eb4a:;
	};
}



inline void _1b0589dad_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>>* _15834_dest, jule::Ptr<_1b050b802_FnIns>* _15859_f) {
	jule::I64 _15913_size = (*(_15859_f)).get()._field_Generics.len();;
	if (((*(_15859_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15913_size+=(*(_15859_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15913_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15859_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e48901:;
		if (it != expr_end) {
			jule::I64 _16810_i = it - expr->begin();
			jule::Ptr<_1b0645dc0_InsGeneric> _16817_g = *it;
			{
				jule::Ptr<_1b04cde89_GenericDecl> _16917_decl = (*(_15859_f)).get()._field_Decl.get()._field_Generics[_16810_i];;
				{ jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1b06469b4_TypeAlias>(_1b06469b4_TypeAlias{._field_Scope=(*(_15859_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16917_decl.get()._field_Token, ._field_Ident=_16917_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_16817_g.get()._field_Kind}), })); };
			}
			_iter_next_1b2e48901:;
			++it;
			_16810_i++;
			goto _iter_begin_1b2e48901;
		}
		_iter_end_1b2e48901:;
	};
	if (((*(_15859_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1b04e5951_StructIns> _18117_owner = (*(_15859_f)).get()._field_Owner;;
		{
			auto expr = &(_18117_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b2e49a34:;
			if (it != expr_end) {
				jule::I64 _18214_i = it - expr->begin();
				jule::Ptr<_1b0645dc0_InsGeneric> _18221_g = *it;
				{
					jule::Ptr<_1b04cde89_GenericDecl> _18321_decl = _18117_owner.get()._field_Decl.get()._field_Generics[_18214_i];;
					{ jule::Slice<jule::Ptr<_1b06469b4_TypeAlias>> &__jule_push_dest = (*(_15834_dest)); __jule_push_dest.push(jule::new_ptr<_1b06469b4_TypeAlias>(_1b06469b4_TypeAlias{._field_Scope=(*(_15859_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18321_decl.get()._field_Token, ._field_Ident=_18321_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_18221_g.get()._field_Kind}), })); };
				}
				_iter_next_1b2e49a34:;
				++it;
				_18214_i++;
				goto _iter_begin_1b2e49a34;
			}
			_iter_end_1b2e49a34:;
		};
	};
}



inline jule::Ptr<_1b060c44c_SymbolTable> _1b058a232_findFile(jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>* _19618_files, jule::Ptr<_1aa4a199a_File>* _19642_handler) {
	{
		auto expr = _19618_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e4b926:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _19717_fl = *it;
			{
				if ((_19717_fl.get()._field_File == (*(_19642_handler)))) {
					return _19717_fl;;
				};
			}
			_iter_next_1b2e4b926:;
			++it;
			goto _iter_begin_1b2e4b926;
		}
		_iter_end_1b2e4b926:;
	};
	return nullptr;;
}



inline void _1b058a6d8_pushSuggestion(_1aa3c3a21_Log* _20530_log, jule::Str _20541_fmt, jule::Slice<jule::Any> _20554_args) {
	_20530_log->_field_Suggestion=_1aa3c3e83_Logf(_20541_fmt, _20554_args);
}



inline void _1b05ac4a7_pushImplemented(jule::Ptr<_1b051bb97_Trait> _292224_t, jule::Ptr<_1b04e2871_Struct>* _292240_d) {
	_julec_label_1b2e4e96d:;
	{
		
		if ((_292224_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1b2e50188:;
			{
				{
					auto expr = &(_292224_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2e50b4a:;
					if (it != expr_end) {
						jule::Ptr<_1b04e2871_Struct> _292616_s = *it;
						{
							if ((_292616_s == (*(_292240_d)))) {
								goto _match_end_1b2e4eb8d;
							};
						}
						_iter_next_1b2e50b4a:;
						++it;
						goto _iter_begin_1b2e50b4a;
					}
					_iter_end_1b2e50b4a:;
				};
				goto _case_begin_1b2e4ec04;
			}
		}
		else {
			_case_begin_1b2e4ec04:;
			{
				{ jule::Slice<jule::Ptr<_1b04e2871_Struct>> &__jule_push_dest = _292224_t.get()._field_Implemented; __jule_push_dest.push((*(_292240_d))); };
			}
		}
		_match_end_1b2e4eb8d:;
	};
	{
		auto expr = &(_292224_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e5162e:;
		if (it != expr_end) {
			jule::Ptr<_1b064ec20_TypeSymbol> _293517_i = *it;
			{
				_1b05ac4a7_pushImplemented(_1b064b9a8_Trait(_293517_i.get()._field_Kind.ptr()), _292240_d);
			}
			_iter_next_1b2e5162e:;
			++it;
			goto _iter_begin_1b2e5162e;
		}
		_iter_end_1b2e5162e:;
	};
}



inline void _1b05ac793_pushImplements(jule::Ptr<_1b04e2871_Struct>* _294024_s, jule::Ptr<_1b051bb97_Trait> _294040_t) {
	_julec_label_1b2e521ac:;
	{
		
		if (((*(_294024_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1b2e528c7:;
			{
				{
					auto expr = &((*(_294024_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b2e53389:;
					if (it != expr_end) {
						jule::Ptr<_1b051bb97_Trait> _294416_b = *it;
						{
							if ((_294416_b == _294040_t)) {
								goto _match_end_1b2e523cc;
							};
						}
						_iter_next_1b2e53389:;
						++it;
						goto _iter_begin_1b2e53389;
					}
					_iter_end_1b2e53389:;
				};
				goto _case_begin_1b2e52443;
			}
		}
		else {
			_case_begin_1b2e52443:;
			{
				{ jule::Slice<jule::Ptr<_1b051bb97_Trait>> &__jule_push_dest = (*(_294024_s)).get()._field_Implements; __jule_push_dest.push(_294040_t); };
			}
		}
		_match_end_1b2e523cc:;
	};
	{
		auto expr = &(_294040_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2e53d6d:;
		if (it != expr_end) {
			jule::Ptr<_1b064ec20_TypeSymbol> _295317_i = *it;
			{
				_1b05ac793_pushImplements(_294024_s, _1b064b9a8_Trait(_295317_i.get()._field_Kind.ptr()));
			}
			_iter_next_1b2e53d6d:;
			++it;
			goto _iter_begin_1b2e53d6d;
		}
		_iter_end_1b2e53d6d:;
	};
}



inline jule::Bool _1b05e805e_traitHasReferenceReceiver(jule::Ptr<_1b051bb97_Trait>* _2731_t) {
	{
		auto expr = &((*(_2731_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3b5ad1b:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> *_2812_f = it;
			{
				if ((*(_2812_f)).get()._field_Statically) {
					goto _iter_next_1b3b5ad1b;
				};
				jule::Ptr<_1b0506e29_Param> _3413_p = (*(_2812_f)).get()._field_Params[0LL];;
				if ((_1b05077cb_IsRef(_3413_p.ptr()) && _1b0507545_IsSelf(_3413_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b3b5ad1b:;
			++it;
			goto _iter_begin_1b3b5ad1b;
		}
		_iter_end_1b3b5ad1b:;
	};
	return false;;
}



inline jule::Bool _1b05e83e4_floatAssignable(jule::Str* _4221_kind, jule::Ptr<_1b0612672_Data>* _4233_d) {
	jule::Str _439_value = _1ad355ae3_FmtFloat(static_cast<jule::F64>(_1ad380a74_AsF64((*(_4233_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1ad371317_CheckBitFloat(_439_value, static_cast<jule::I64>(_1ad36ece9_BitsizeOf((*(_4221_kind)))));;
}



inline jule::Bool _1b05e8768_sigAssignable(jule::Str _4718_kind, jule::Ptr<_1b0612672_Data>* _4730_d) {
	jule::F64 _489_min = _1ad3765c5_Min(_4718_kind);;
	jule::F64 _499_max = _1ad37688e_Max(_4718_kind);;
	{
		
		if (_1ad3828bc_IsF64((*(_4730_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3b5e79d:;
			{
				jule::F64 _5213_x = _1ad3802c1_ReadF64((*(_4730_d)).get()._field_Constant.ptr());;
				jule::F64 _5314_i = 0;;
				jule::F64 _5317_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ad32aca5_Modf(_5213_x);
					_5314_i = __jule_assign_result.__jule_result_arg0;
					_5317_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5317_frac != 0LL)) {
					return false;;
				};
				return ((_5314_i >= _489_min) && (_5314_i <= _499_max));;
			}
		}
		else if (_1ad382119_IsU64((*(_4730_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3b5e825:;
			{
				jule::F64 _5913_x = _1ad380a74_AsF64((*(_4730_d)).get()._field_Constant.ptr());;
				if ((_5913_x <= _499_max)) {
					return true;;
				};
			}
		}
		else if (_1ad381d83_IsI64((*(_4730_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3b5e89c:;
			{
				jule::F64 _6413_x = _1ad380a74_AsF64((*(_4730_d)).get()._field_Constant.ptr());;
				return ((_489_min <= _6413_x) && (_6413_x <= _499_max));;
			}
		}
		_match_end_1b3b5e66b:;
	};
	return false;;
}



inline jule::Bool _1b05e8b31_unsigAssignable(jule::Str _7020_kind, jule::Ptr<_1b0612672_Data>* _7032_d) {
	jule::F64 _719_max = _1ad37688e_Max(_7020_kind);;
	if (((*(_7032_d)).get()._field_IsRune && _7020_kind.equal("u8", 2))) {
		return _1b05cdeac_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1ad37e787_ReadI64((*(_7032_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1ad3828bc_IsF64((*(_7032_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3b64264:;
			{
				jule::F64 _7813_x = _1ad3802c1_ReadF64((*(_7032_d)).get()._field_Constant.ptr());;
				if ((_7813_x < 0LL)) {
					return false;;
				};
				jule::F64 _8214_i = 0;;
				jule::F64 _8217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ad32aca5_Modf(_7813_x);
					_8214_i = __jule_assign_result.__jule_result_arg0;
					_8217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8217_frac != 0LL)) {
					return false;;
				};
				return (_8214_i <= _719_max);;
			}
		}
		else if (_1ad382119_IsU64((*(_7032_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3b642ca:;
			{
				jule::F64 _8813_x = _1ad380a74_AsF64((*(_7032_d)).get()._field_Constant.ptr());;
				if ((_8813_x <= _719_max)) {
					return true;;
				};
			}
		}
		else if (_1ad381d83_IsI64((*(_7032_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3b64341:;
			{
				jule::F64 _9313_x = _1ad380a74_AsF64((*(_7032_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9313_x) && (_9313_x <= _719_max));;
			}
		}
		_match_end_1b3b63c03:;
	};
	return false;;
}



inline jule::Bool _1b05e8ea5_intAssignable(jule::Str _9918_kind, jule::Ptr<_1b0612672_Data>* _9930_d) {
	{
		
		if (_1ad37bad6_IsSigInt(_9918_kind)) {
			_case_begin_1b2b4b89b:;
			{
				return _1b05e8768_sigAssignable(_9918_kind, _9930_d);;
			}
		}
		else if (_1ad37bde4_IsUnsigInt(_9918_kind)) {
			_case_begin_1b2b4b912:;
			{
				return _1b05e8b31_unsigAssignable(_9918_kind, _9930_d);;
			}
		}
		else {
			_case_begin_1b2b4b802:;
			{
				return false;;
			}
		}
		_match_end_1b2b4b758:;
	};
}



inline void _1b0605665_checkMutRiskOfStructLit(jule::Ptr<_1b058b4db_Sema>* _94433_s, jule::Ptr<_1b04eacca_StructLitExprModel>* _94444_m) {
	{
		auto expr = &((*(_94444_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b2b4c638:;
		if (it != expr_end) {
			jule::Ptr<_1b04ea934_StructArgExprModel> *_94512_arg = it;
			{
				if ((*(_94512_arg)).get()._field_Field.get()._field_Decl.get()._field_Mutable) {
					goto _iter_next_1b2b4c638;
				};
				if (((!((*(_94512_arg)).get()._field_Expr.get()._field_Mutable)) && _1b0649148_Mutable((*(_94512_arg)).get()._field_Expr.get()._field_Kind.ptr()))) {
					_1b058e126_pushErr((*(_94433_s)).ptr(), (*(_94512_arg)).get()._field_Token, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_94512_arg)).get()._field_Expr.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
			}
			_iter_next_1b2b4c638:;
			++it;
			goto _iter_begin_1b2b4c638;
		}
		_iter_end_1b2b4c638:;
	};
}



inline jule::Ptr<_1b06477a6_TypeKind> _1b060b209_lenKind(void) {
	return _1b072ebce_primInt;;
}



inline jule::Bool _1b060b55b_isGoodValueToInfer(jule::Ptr<_1b0612672_Data>* _140824_d) {
	return (!(_1b0612a29_IsNil((*(_140824_d)).ptr())));;
}



inline jule::Ptr<_1b04884b5_Directive> _1b0640ea8_findDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _425523_directives, jule::Str _425554_d) {
	{
		auto expr = _425523_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c80b33:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _425617_dr = *it;
			{
				if ((_425617_dr.get()._field_Tag.get()._field_Kind == _425554_d)) {
					return _425617_dr;;
				};
			}
			_iter_next_1b3c80b33:;
			++it;
			goto _iter_begin_1b3c80b33;
		}
		_iter_end_1b3c80b33:;
	};
	return nullptr;;
}



inline jule::Any _1b0641371_findBuiltinsImport(jule::Str* _426424_ident, jule::Ptr<_1b056a487_ImportInfo> _426436_imp) {
	return _1b0733430_findPackageBuiltinDef(&(_426436_imp.get()._field_LinkPath), _426424_ident);;
}



inline void _1b06415a2_fitBitsize(jule::Ptr<_1b0612672_Data>* _427120_d) {
	jule::Ptr<_1b0650627_Prim> _427213_prim = _1b064a19e_Prim((*(_427120_d)).get()._field_Kind.ptr());;
	jule::I64 _42739_z = _1ad36ece9_BitsizeOf(_1b0650968_Str(_427213_prim.ptr()));;
	if ((_42739_z == 64LLU)) {
		return;;
	};
	jule::I64 _427813_k = 0LL;;
	{
		
		if (_1ad381d83_IsI64((*(_427120_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3c83dde:;
			{
				_427813_k=static_cast<jule::I64>(_1ad37189a_BitsizeOfInt(static_cast<jule::I64>(_1ad37e787_ReadI64((*(_427120_d)).get()._field_Constant.ptr()))));
				if ((_427813_k > _42739_z)) {
					(*(_427120_d)).get()._field_Constant.get()._field_Kind=_1ad37013a_IntFromBits(_427813_k);
					(*(_427120_d)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias((*(_427120_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1ad382119_IsU64((*(_427120_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3c83e66:;
			{
				_427813_k=static_cast<jule::I64>(_1ad371b64_BitsizeOfUint(static_cast<jule::U64>(_1ad37ea1d_ReadU64((*(_427120_d)).get()._field_Constant.ptr()))));
				if ((_427813_k > _42739_z)) {
					(*(_427120_d)).get()._field_Constant.get()._field_Kind=_1ad370404_UintFromBits(_427813_k);
					(*(_427120_d)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias((*(_427120_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1ad3828bc_IsF64((*(_427120_d)).get()._field_Constant.ptr())) {
			_case_begin_1b3c83edd:;
			{
				_427813_k=static_cast<jule::I64>(_1ad3715d1_BitsizeOfFloat(static_cast<jule::F64>(_1ad3802c1_ReadF64((*(_427120_d)).get()._field_Constant.ptr()))));
				if ((_427813_k > _42739_z)) {
					(*(_427120_d)).get()._field_Constant.get()._field_Kind=_1ad3706bd_FloatFromBits(_427813_k);
					(*(_427120_d)).get()._field_Kind=_1b07320ee_findBuiltinTypeAlias((*(_427120_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1b3c83d23:;
	};
}



inline void _1b06418d2_makeStructLitAlloc(jule::Ptr<_1b0612672_Data>* _430128_d, jule::Ptr<_1b04eacca_StructLitExprModel>* _430143_lit) {
	(*(_430128_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654153_Sptr>(_1b0654153_Sptr{._field_Elem=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_430143_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_430128_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b04eb0c7_AllocStructLitExprModel>(_1b04eb0c7_AllocStructLitExprModel{._field_Lit=(*(_430143_lit))}), &__jule_any_type116);
}



inline jule::Ptr<_1b05ae1bd_Var> _1b0641c56_buildErrorVar(jule::Ptr<_1b0549048_Scope>* _431223_s, jule::Ptr<_1b04c9cdc_FnCallExpr>* _431239_fc) {
	return jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Scope=(*(_431223_s)), ._field_Token=(*(_431239_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>()}), });;
}



inline jule::Any _1b06420ca_findBuiltinsSema(jule::Str* _432722_ident, jule::Ptr<_1b058b4db_Sema> _432738_s) {
	{
		auto expr = &(_432738_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3c8b413:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _432817_imp = *it;
			{
				if ((_432817_imp.get()._field_ImportAll || _1b056cd19_existIdent(_432817_imp.ptr(), (*(_432722_ident))))) {
					jule::Any _433021_def = _1b0641371_findBuiltinsImport(_432722_ident, _432817_imp);;
					if ((_433021_def != nullptr)) {
						return _433021_def;;
					};
				};
			}
			_iter_next_1b3c8b413:;
			++it;
			goto _iter_begin_1b3c8b413;
		}
		_iter_end_1b3c8b413:;
	};
	jule::Str _433813_ppath = _1aa4a211b_Dir(_432738_s.get()._field_file.get()._field_File.ptr());;
	if (_1aa34e42a_HasPrefix(_433813_ppath, _1aa6405ea_PathStdlib)) {
		(_433813_ppath).mut_slice(_1aa6405ea_PathStdlib.len());;
		_433813_ppath=(jule::Str("std", 3) + _1aa355a08_Replace(_433813_ppath, jule::Str("/", 1), jule::Str("::", 2), -1LL));
		return _1b0733430_findPackageBuiltinDef(&(_433813_ppath), _432722_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1b0642394_isOkForShifting(jule::Ptr<_1b0612672_Data>* _435225_d) {
	if (_1b0613046_IsConst((*(_435225_d)).ptr())) {
		{
			
			if (_1ad381d83_IsI64((*(_435225_d)).get()._field_Constant.ptr())) {
				_case_begin_1b3c8e56a:;
				{
					return (_1ad37e787_ReadI64((*(_435225_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1ad382119_IsU64((*(_435225_d)).get()._field_Constant.ptr())) {
				_case_begin_1b3c8e5e2:;
				{
					return true;;
				}
			}
			else if (_1ad3828bc_IsF64((*(_435225_d)).get()._field_Constant.ptr())) {
				_case_begin_1b3c8e669:;
				{
					return (_1ad3802c1_ReadF64((*(_435225_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1b3c8e48d:;
				{
					return false;;
				}
			}
			_match_end_1b3c8e3d3:;
		};
	};
	jule::Ptr<_1b0650627_Prim> _43659_prim = _1b064a19e_Prim((*(_435225_d)).get()._field_Kind.ptr());;
	return ((_43659_prim != nullptr) && _1ad37c1ad_IsInt(_1b0650968_Str(_43659_prim.ptr())));;
}



inline jule::Bool _1b064276d_isInstancedStruct(jule::Ptr<_1b04e5951_StructIns> _436922_s) {
	return (_436922_s.get()._field_Decl.get()._field_Generics.len() == _436922_s.get()._field_Generics.len());;
}



inline jule::Bool _1b0642ae2_isPtrArithmeticCompatible(jule::Ptr<_1b0612672_Data>* _437335_l, jule::Ptr<_1b0612672_Data>* _437350_r) {
	jule::Ptr<_1b065791a_Ptr> _43749_ptr = _1b064a6bb_Ptr((*(_437350_r)).get()._field_Kind.ptr());;
	if ((_43749_ptr != nullptr)) {
		return _1b0647eb0_Equal(_1b064a6bb_Ptr((*(_437335_l)).get()._field_Kind.ptr()).get()._field_Elem, _43749_ptr.get()._field_Elem);;
	};
	if (_1b0613046_IsConst((*(_437350_r)).ptr())) {
		return _1b05e8ea5_intAssignable(jule::Str("int", 3), _437350_r);;
	};
	_1b05e948e_typeCompatibilityChecker _438113_tcc = _1b05e948e_typeCompatibilityChecker{._field_dest=_1b072ebce_primInt, ._field_src=(*(_437350_r)).get()._field_Kind, };;
	return _1b05eab55_check(&_438113_tcc);;
}



inline void _1b0642dcd_applyCastKindModel(jule::Ptr<_1b0612672_Data>* _438828_d, jule::Ptr<_1b06477a6_TypeKind>* _438843_t) {
	(*(_438828_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b04eb65a_CastingExprModel>(_1b04eb65a_CastingExprModel{._field_Expr=(*(_438828_d)).get()._field_Model, ._field_Kind=(*(_438843_t)), ._field_ExprKind=(*(_438828_d)).get()._field_Kind}), &__jule_any_type99);
}



inline void _1b06431b9_applyCastKind(jule::Ptr<_1b0612672_Data>* _439623_d, jule::Ptr<_1b06477a6_TypeKind>* _439638_t) {
	_1b0642dcd_applyCastKindModel(_439623_d, _439638_t);
	(*(_439623_d)).get()._field_Kind=(*(_439638_t));
}



inline jule::Ptr<_1b0612672_Data> _1b06433c8_buildVoidData(void) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072d8d1_primVoid, });;
}



inline jule::Str _1b0643692_checkDataForIntegerIndexing(jule::Ptr<_1b0612672_Data>* _440737_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_440737_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1b064a19e_Prim((*(_440737_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b3c96495:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1ad37c1ad_IsInt(_1b0650968_Str(_1b064a19e_Prim((*(_440737_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b3c9650b:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1b0613046_IsConst((*(_440737_d)).ptr())) {
			_case_begin_1b3c96572:;
			{
				if ((_1ad380a74_AsF64((*(_440737_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1b064a19e_Prim((*(_440737_d)).get()._field_Kind.ptr()) == nullptr) || _1b0613046_IsConst((*(_440737_d)).ptr()) || (_1ad36ea30_RealKindOf(_1b0650968_Str(_1b064a19e_Prim((*(_440737_d)).get()._field_Kind.ptr()).ptr())) != _1ad36ea30_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1b3c965e9:;
			{
				_1b06431b9_applyCastKind(_440737_d, &(_1b072ebce_primInt));
			}
		}
		_match_end_1b3c96143:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1b064397d_applyCastModelByEnum(jule::Ptr<_1b0612672_Data>* _443230_d, jule::Ptr<_1b051e392_Enum> _443244_e) {
	if ((_443244_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1b0650627_Prim> _44369_p = _1b064a19e_Prim(_443244_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1b0653aae_IsStr(_44369_p.ptr())) {
		return;;
	};
	_1b0642dcd_applyCastKindModel(_443230_d, &(_443244_e.get()._field_Kind.get()._field_Kind));
}



inline void _1b0643c69_castConstByType(jule::Str* _444321_t, jule::Ptr<_1b0612672_Data>* _444334_d) {
	{
		
		if (_1ad37bad6_IsSigInt((*(_444321_t)))) {
			_case_begin_1b3c9aaa4:;
			{
				{
					auto _match_expr{ _1ad36ece9_BitsizeOf(_1ad36ea30_RealKindOf((*(_444321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b3c9b70e:;
						{
							_1ad380d2c_SetI64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1ad380557_AsI64((*(_444334_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b3c9b775:;
						{
							_1ad380d2c_SetI64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1ad380557_AsI64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b3c9b7db:;
						{
							_1ad380d2c_SetI64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1ad380557_AsI64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b3c9b852:;
						{
							_1ad380d2c_SetI64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1ad380557_AsI64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b3c9b3bd:;
				};
			}
		}
		else if (_1ad37bde4_IsUnsigInt((*(_444321_t)))) {
			_case_begin_1b3c9ab2b:;
			{
				{
					auto _match_expr{ _1ad36ece9_BitsizeOf(_1ad36ea30_RealKindOf((*(_444321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b38639ad:;
						{
							_1ad3810d5_SetU64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1ad3807dd_AsU64((*(_444334_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b3863a24:;
						{
							_1ad3810d5_SetU64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1ad3807dd_AsU64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b3863a8a:;
						{
							_1ad3810d5_SetU64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1ad3807dd_AsU64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b3863b01:;
						{
							_1ad3810d5_SetU64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1ad3807dd_AsU64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b38636c2:;
				};
			}
		}
		else if (_1ad37c4ee_IsFloat((*(_444321_t)))) {
			_case_begin_1b3c9aba3:;
			{
				{
					auto _match_expr{ _1ad36ece9_BitsizeOf(_1ad36ea30_RealKindOf((*(_444321_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b38667d5:;
						{
							_1ad3818ee_SetF64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1ad380a74_AsF64((*(_444334_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b386685c:;
						{
							_1ad3818ee_SetF64((*(_444334_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1ad380a74_AsF64((*(_444334_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b381da01:;
				};
			}
		}
		_match_end_1b3c9a983:;
	};
}



inline void _1b064420e_updateModelToGenericIns(jule::Any* _447733_m, jule::Ptr<_1b050b802_FnIns>* _447752_f) {
	{
		auto &_match_expr{ (*(_447733_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b38683ca:;
			{
				(*(_447733_m))=jule::Any((*(_447752_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b3868452:;
			{
				(*(_447733_m)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_447752_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b38684c9:;
			{
				(*(_447733_m)).cast_ptr<_1b0500054_StructStaticIdentExprModel>(&__jule_any_type102).get()._field_Method=(*(_447752_f));
			}
		}
		_match_end_1b3868353:;
	};
}



inline jule::Bool _1b0644583_pushSubIdentFromExpr(jule::Any _448829_expr, jule::Ptr<_1b04c25a9_SubIdentTypeDecl>* _448850_t) {
	{
		auto &_match_expr{ _448829_expr };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b3869ae6:;
			{
				jule::Ptr<_1b04c7911_IdentExpr> _449117_e = _448829_expr.cast_ptr<_1b04c7911_IdentExpr>(&__jule_any_type86);;
				{ jule::Slice<jule::Ptr<_1b04c22ac_IdentTypeDecl>> &__jule_push_dest = (*(_448850_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_449117_e.get()._field_Token, ._field_Ident=_449117_e.get()._field_Ident, })); };
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b3869b5c:;
			{
				jule::Ptr<_1b04c91c6_SubIdentExpr> _449717_e = _448829_expr.cast_ptr<_1b04c91c6_SubIdentExpr>(&__jule_any_type92);;
				if ((!(_1b0644583_pushSubIdentFromExpr(_449717_e.get()._field_Expr.get()._field_Kind, _448850_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1b04c22ac_IdentTypeDecl>> &__jule_push_dest = (*(_448850_t)).get()._field_Idents; __jule_push_dest.push(jule::new_ptr<_1b04c22ac_IdentTypeDecl>(_1b04c22ac_IdentTypeDecl{._field_Token=_449717_e.get()._field_Ident, ._field_Ident=_449717_e.get()._field_Ident.get()._field_Kind, })); };
			}
		}
		else {
			_case_begin_1b3869a80:;
			{
				return false;;
			}
		}
		_match_end_1b3868e14:;
	};
	return true;;
}



inline jule::Str _1b064484c_constoa(jule::Ptr<_1ad37cdb2_Const>* _451113_c) {
	{
		
		if (_1ad381d83_IsI64((*(_451113_c)).ptr())) {
			_case_begin_1b3869d16:;
			{
				return _1ad36c5bb_FmtInt(static_cast<jule::I64>(_1ad37e787_ReadI64((*(_451113_c)).ptr())), 10LL);;
			}
		}
		else if (_1ad382119_IsU64((*(_451113_c)).ptr())) {
			_case_begin_1b386c38a:;
			{
				return _1ad36c203_FmtUint(static_cast<jule::U64>(_1ad37ea1d_ReadU64((*(_451113_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1b386c1ae:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b386b972:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0644bc1_evalEnumStatic(jule::Ptr<_1b051e392_Enum>* _452224_enm, jule::Ptr<_1b051d825_EnumItem>* _452241_item) {
	jule::Ptr<_1b0612672_Data> _452313_d = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>((*(_452224_enm)), 3)}), });;
	if (((*(_452241_item)) != nullptr)) {
		_452313_d.get()._field_Constant=jule::new_ptr<_1ad37cdb2_Const>((*((*(_452241_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_452313_d.get()._field_Model=jule::Any(_452313_d.get()._field_Constant, &__jule_any_type19);
		_1b064397d_applyCastModelByEnum(&(_452313_d), (*(_452224_enm)));
	};
	return _452313_d;;
}



inline jule::Ptr<_1b04eacca_StructLitExprModel> _1b0644e8a_isLitBased(jule::Any* _453920_m) {
	{
		auto &_match_expr{ (*(_453920_m)) };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b3870c95:;
			{
				return (*(_453920_m)).cast_ptr<_1b04eacca_StructLitExprModel>(&__jule_any_type101);;
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b3870d0b:;
			{
				return (*(_453920_m)).cast_ptr<_1b04eb0c7_AllocStructLitExprModel>(&__jule_any_type116).get()._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b3870d72:;
			{
				jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _454617_ssi = (*(_453920_m)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1b0644e8a_isLitBased(&(_454617_ssi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b3870dd8:;
			{
				jule::Ptr<_1b04eb65a_CastingExprModel> _454917_c = (*(_453920_m)).cast_ptr<_1b04eb65a_CastingExprModel>(&__jule_any_type99);;
				return _1b0644e8a_isLitBased(&(_454917_c.get()._field_Expr));;
			}
		}
		else {
			_case_begin_1b3870aca:;
			{
				return nullptr;;
			}
		}
		_match_end_1b386ec1c:;
	};
}



inline jule::Bool _1b06632a5_kindUsesGenerics(jule::Ptr<_1b06477a6_TypeKind>* _174126_k, jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>* _174141_generics) {
	{
		auto expr = _174141_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d8cb74:;
		if (it != expr_end) {
			jule::Ptr<_1b04cde89_GenericDecl> *_174212_g = it;
			{
				if (static__1b0662d76_exist(&((*(_174212_g)).get()._field_Ident), _174126_k)) {
					return true;;
				};
			}
			_iter_next_1b3d8cb74:;
			++it;
			goto _iter_begin_1b3d8cb74;
		}
		_iter_end_1b3d8cb74:;
	};
	return false;;
}



inline jule::Bool _1b066366d_hasDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _175122_directives, jule::Str _175153_tag) {
	{
		auto expr = _175122_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d8d218:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _175217_dr = *it;
			{
				if ((_175217_dr.get()._field_Tag.get()._field_Kind == _175153_tag)) {
					return true;;
				};
			}
			_iter_next_1b3d8d218:;
			++it;
			goto _iter_begin_1b3d8d218;
		}
		_iter_end_1b3d8d218:;
	};
	return false;;
}



inline jule::Bool _1b0663937_canGetPtr(jule::Ptr<_1b0612672_Data>* _176019_d) {
	if (((!((*(_176019_d)).get()._field_Lvalue)) || _1b0613046_IsConst((*(_176019_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1b064b48b_Fn((*(_176019_d)).get()._field_Kind.ptr()) != nullptr) || (_1b064a952_Enum((*(_176019_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1b3d8eec8:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b3d8ee40:;
			{
				return true;;
			}
		}
		_match_end_1b3d8e967:;
	};
}



inline jule::Bool _1b0663c78_isValidForSptrType(jule::Ptr<_1b06477a6_TypeKind>* _177328_t) {
	jule::Ptr<_1b04e5951_StructIns> _177413_s = _1b064b722_Struct((*(_177328_t)).ptr());;
	if ((((_177413_s != nullptr) && (_177413_s.get()._field_Decl != nullptr)) && _177413_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1b0664042_isValidForRef(jule::Ptr<_1b06477a6_TypeKind>* _178223_t) {
	return (_1b064b48b_Fn((*(_178223_t)).ptr()) == nullptr);;
}



inline jule::Bool _1b066430b_isBuiltinStrConvertable(jule::Ptr<_1b06477a6_TypeKind>* _178533_t) {
	return ((((!(_1b0648b2b_Void((*(_178533_t)).ptr()))) && (_1b064b48b_Fn((*(_178533_t)).ptr()) == nullptr)) && (_1b064bec5_Tup((*(_178533_t)).ptr()) == nullptr)) && (!(_1b064c25b_comptime((*(_178533_t)).ptr()))));;
}



inline jule::Str _1b06645c5_buildLinkPathByTokens(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _178927_tokens) {
	jule::I64 _179013_n = 0LL;;
	{
		auto expr = _178927_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d938d3:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_179112_token = it;
			{
				_179013_n+=(*(_179112_token)).get()._field_Kind.len();
				_179013_n+=2LL;
			}
			_iter_next_1b3d938d3:;
			++it;
			goto _iter_begin_1b3d938d3;
		}
		_iter_end_1b3d938d3:;
	};
	_1aa364275_StrBuilder _179513_s = static__1aa364594_New(_179013_n);;
	{
		auto expr = _178927_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3d93a37:;
		if (it != expr_end) {
			jule::I64 _17969_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> *_179612_token = it;
			{
				_1aa36d03c_WriteStr(&_179513_s, (*(_179612_token)).get()._field_Kind);
				if ((((*(_178927_tokens)).len() - _17969_i) > 1LL)) {
					_1aa36d03c_WriteStr(&_179513_s, jule::Str("::", 2));
				};
			}
			_iter_next_1b3d93a37:;
			++it;
			_17969_i++;
			goto _iter_begin_1b3d93a37;
		}
		_iter_end_1b3d93a37:;
	};
	return _1aa36d834_Str(&_179513_s);;
}



inline jule::Ptr<_1b0650627_Prim> _1b066496b_buildPrimType(jule::Str _180518_kind) {
	return jule::new_ptr<_1b0650627_Prim>(_1b0650627_Prim{._field_Kind=_180518_kind});;
}



inline jule::Ptr<_1b04e2871_Struct> _1b0664c35_getStructFromKind(jule::Ptr<_1b06477a6_TypeKind> _181126_k) {
	{
		
		if ((_181126_k == nullptr)) {
			_case_begin_1b40070b8:;
			{
				return nullptr;;
			}
		}
		else if ((_1b064b722_Struct(_181126_k.ptr()) != nullptr)) {
			_case_begin_1b4007140:;
			{
				return _1b064b722_Struct(_181126_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1b064a435_Sptr(_181126_k.ptr()) != nullptr)) {
			_case_begin_1b40073e8:;
			{
				return _1b0664c35_getStructFromKind(_1b064a435_Sptr(_181126_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1b064b205_Slc(_181126_k.ptr()) != nullptr)) {
			_case_begin_1b400745e:;
			{
				return _1b0664c35_getStructFromKind(_1b064b205_Slc(_181126_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1b064ae6e_Arr(_181126_k.ptr()) != nullptr)) {
			_case_begin_1b40074c5:;
			{
				return _1b0664c35_getStructFromKind(_1b064ae6e_Arr(_181126_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1b064a6bb_Ptr(_181126_k.ptr()) != nullptr)) {
			_case_begin_1b400753b:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1b4005c76:;
			{
				return nullptr;;
			}
		}
		_match_end_1b4005baa:;
	};
}



inline void _1b0665021_applyImplicitCast(jule::Ptr<_1b06477a6_TypeKind>* _183327_dest, jule::Ptr<_1b0612672_Data>* _183349_d) {
	if (_1b0648895_IsNil((*(_183349_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1b0650627_Prim> _18379_destPrim = _1b064a19e_Prim((*(_183327_dest)).ptr());;
	jule::Ptr<_1b0650627_Prim> _18389_prim = _1b064a19e_Prim((*(_183349_d)).get()._field_Kind.ptr());;
	if ((_18379_destPrim != nullptr)) {
		if (_1b0653d45_IsAny(_18379_destPrim.ptr())) {
			if (((_18389_prim == nullptr) || (!(_1b0653d45_IsAny(_18389_prim.ptr()))))) {
				_1b06431b9_applyCastKind(_183349_d, _183327_dest);
			};
			return;;
		};
		if (((((((!(_1b064860e_Binded((*(_183349_d)).get()._field_Kind.ptr()))) && (!((*(_183349_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_183349_d)).get()._field_Lvalue))) && (!(_1b0613046_IsConst((*(_183349_d)).ptr())))) && (_18389_prim != nullptr)) && _1ad37c7b8_IsNum(_18389_prim.get()._field_Kind))) {
			_1b06431b9_applyCastKind(_183349_d, _183327_dest);
		};
		return;;
	};
	jule::Ptr<_1b051bb97_Trait> _18579_dt = _1b064b9a8_Trait((*(_183327_dest)).ptr());;
	if ((_18579_dt != nullptr)) {
		jule::Ptr<_1b051bb97_Trait> _185913_bt = _1b064b9a8_Trait((*(_183349_d)).get()._field_Kind.ptr());;
		if (((_185913_bt == nullptr) || (_185913_bt != _18579_dt))) {
			_1b0642dcd_applyCastKindModel(_183349_d, _183327_dest);
			return;;
		};
	};
	if (((_1b064abd8_TypeEnum((*(_183327_dest)).ptr()) != nullptr) && (_1b064abd8_TypeEnum((*(_183349_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1b0642dcd_applyCastKindModel(_183349_d, _183327_dest);
		return;;
	};
}



inline jule::Bool _1b06652da_validTypeForXof(jule::Ptr<_1b06477a6_TypeKind>* _187225_t) {
	return ((!(_1b0648b2b_Void((*(_187225_t)).ptr()))) && (_1b064b48b_Fn((*(_187225_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1b060c44c_SymbolTable__jule_tuple_s_1aa3c3a21_Log _1b0668376_buildSymbols(jule::Ptr<_1b0487184_Ast>* _1622_ast, jule::Trait<_1b0567572_Importer>* _1638_importer, jule::Ptr<_1b0515a81_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1b060c44c_SymbolTable__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	jule::Ptr<_1b0515a81_symbolBuilder> _1713_sb = jule::new_ptr<_1b0515a81_symbolBuilder>(_1b0515a81_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1b051b070_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log _1b06687e9_analyzePackage(jule::Slice<jule::Ptr<_1b0487184_Ast>>* _3024_files, jule::Trait<_1b0567572_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b410a71b:;
		if (it != expr_end) {
			jule::Ptr<_1b0487184_Ast> _3317_f = *it;
			{
				jule::Ptr<_1b060c44c_SymbolTable> _3418_table;;
				jule::Slice<_1aa3c3a21_Log> _3429_errors;;
				({
					__jule_tuple_x_1b060c44c_SymbolTable__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b0668376_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1b060c44c_SymbolTable>> &__jule_push_dest = _3213_tables; __jule_push_dest.push(_3418_table); };
			}
			_iter_next_1b410a71b:;
			++it;
			goto _iter_begin_1b410a71b;
		}
		_iter_end_1b410a71b:;
	};
	jule::Ptr<_1b058b4db_Sema> _4113_sema = jule::new_ptr<_1b058b4db_Sema>(_1b058b4db_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1b058a8b4_commonSemaMeta>()});;
	_1b05aa6e7_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1b056d3ad_Package> _5013_pkg = jule::new_ptr<_1b056d3ad_Package>(_1b056d3ad_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log _1b0668c28_AnalyzePackage(jule::Slice<jule::Ptr<_1b0487184_Ast>> _7423_files, jule::Trait<_1b0567572_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1b056d3ad_Package> _7814_package;;
	jule::Slice<_1aa3c3a21_Log> _7827_logs;;
	({
		__jule_tuple_x_1b056d3ad_Package__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b06687e9_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1b050b802_FnIns> _1b072cea7_findBuiltinFunc(jule::Str* _2321_ident) {
	{
		auto &_match_expr{ (*(_2321_ident)) };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b4113ea5:;
			{
				static jule::Ptr<_1b050b802_FnIns> _2620_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0734970_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b411424c:;
			{
				static jule::Ptr<_1b050b802_FnIns> _2920_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0735058_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b41142c4:;
			{
				static jule::Ptr<_1b050b802_FnIns> _3220_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0735487_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b4114527:;
			{
				static jule::Ptr<_1b050b802_FnIns> _3520_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b07358b6_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b411459e:;
			{
				static jule::Ptr<_1b050b802_FnIns> _3820_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0735ce5_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b4114626:;
			{
				static jule::Ptr<_1b050b802_FnIns> _4120_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0736224_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b411469d:;
			{
				static jule::Ptr<_1b050b802_FnIns> _4420_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0736b3c_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b411477a:;
			{
				static jule::Ptr<_1b050b802_FnIns> _4720_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b07382d1_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b4114802:;
			{
				static jule::Ptr<_1b050b802_FnIns> _5020_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0738a84_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1b4114879:;
			{
				static jule::Ptr<_1b050b802_FnIns> _5320_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0739645_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b4114901:;
			{
				static jule::Ptr<_1b050b802_FnIns> _5620_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0739a0d_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b4114978:;
			{
				static jule::Ptr<_1b050b802_FnIns> _5920_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b0739e3c_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1b41140d7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b41115e0:;
	};
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b072d2b5_primTypeAlias(jule::Ptr<_1b06477a6_TypeKind>* _6623_k) {
	return jule::new_ptr<_1b06469b4_TypeAlias>(_1b06469b4_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1b05ae1bd_Var> _1b0731dbd_findBuiltinVar(jule::Str* _9420_ident) {
	{
		auto &_match_expr{ (*(_9420_ident)) };
		
		if (_match_expr == jule::Str("nil", 3)) {
			_case_begin_1b411c695:;
			{
				static jule::Ptr<_1b05ae1bd_Var> _9720_v = jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=jule::new_ptr<_1b064ec20_TypeSymbol>(_1b064ec20_TypeSymbol{._field_Kind=_1b072d5c3_primNil}), ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Constant=static__1ad37e127_NewNil()})}), });;
				return _9720_v;;
			}
		}
		else if (_match_expr == jule::Str("true", 4)) {
			_case_begin_1b411c70b:;
			{
				static jule::Ptr<_1b05ae1bd_Var> _11220_v = jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("bool", 4)).get()._field_Kind, ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Constant=static__1ad37d885_NewBool(true)})}), });;
				return _11220_v;;
			}
		}
		else if (_match_expr == jule::Str("false", 5)) {
			_case_begin_1b411c772:;
			{
				static jule::Ptr<_1b05ae1bd_Var> _12520_v = jule::new_ptr<_1b05ae1bd_Var>(_1b05ae1bd_Var{._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Kind=_1b07320ee_findBuiltinTypeAlias(jule::Str("bool", 4)).get()._field_Kind, ._field_Value=jule::new_ptr<_1b06137b6_Value>(_1b06137b6_Value{._field_Data=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Constant=static__1ad37d885_NewBool(false)})}), });;
				return _12520_v;;
			}
		}
		else {
			_case_begin_1b411c62e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b411b683:;
	};
}



inline jule::Ptr<_1b06469b4_TypeAlias> _1b07320ee_findBuiltinTypeAlias(jule::Str _14225_ident) {
	{
		auto &_match_expr{ _14225_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b3e6e23e:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _14520_t = _1b072d2b5_primTypeAlias(&(_1b072db9a_primAny));;
				return _14520_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b3e6e591:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _14820_t = _1b072d2b5_primTypeAlias(&(_1b072dea8_primStr));;
				return _14820_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b3e6e827:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _15120_t = _1b072d2b5_primTypeAlias(&(_1b072e272_primBool));;
				return _15120_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b3e6e88d:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _15420_t = _1b072d2b5_primTypeAlias(&(_1b072e53b_primUintptr));;
				return _15420_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b3e6e904:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _15720_t = _1b072d2b5_primTypeAlias(&(_1b072e805_primUint));;
				return _15720_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b3e6e96a:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _16020_t = _1b072d2b5_primTypeAlias(&(_1b072ebce_primInt));;
				return _16020_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b3e6ea7a:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _16320_t = _1b072d2b5_primTypeAlias(&(_1b072ee98_primI8));;
				return _16320_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b3e6eae1:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _16620_t = _1b072d2b5_primTypeAlias(&(_1b0730262_primI16));;
				return _16620_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b3e6eb57:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _16920_t = _1b072d2b5_primTypeAlias(&(_1b07307e5_primI64));;
				return _16920_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b3e6ebbd:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _17220_t = _1b072d2b5_primTypeAlias(&(_1b0730d78_primU16));;
				return _17220_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b3e6ec45:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _17520_t = _1b072d2b5_primTypeAlias(&(_1b0731142_primU32));;
				return _17520_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b3e6ecbc:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _17820_t = _1b072d2b5_primTypeAlias(&(_1b07315b5_primU64));;
				return _17820_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b3e6ed44:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _18120_t = _1b072d2b5_primTypeAlias(&(_1b073187e_primF32));;
				return _18120_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b3e6edbb:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _18420_t = _1b072d2b5_primTypeAlias(&(_1b0731b48_primF64));;
				return _18420_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b3e6ee43:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _18720_t = _1b072d2b5_primTypeAlias(&(_1b0730aae_primU8));;
				return _18720_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1b3e6eeba:;
			{
				static jule::Ptr<_1b06469b4_TypeAlias> _19020_t = _1b072d2b5_primTypeAlias(&(_1b073052b_primI32));;
				return _19020_t;;
			}
		}
		else {
			_case_begin_1b3e6e3d7:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3e6e360:;
	};
}



inline jule::Any _1b07323b8_findBuiltinDef(jule::Str* _19720_ident) {
	jule::Ptr<_1b05ae1bd_Var> _19813_v = _1b0731dbd_findBuiltinVar(_19720_ident);;
	if ((_19813_v != nullptr)) {
		return jule::Any(_19813_v, &__jule_any_type8);;
	};
	jule::Ptr<_1b050b802_FnIns> _20213_f = _1b072cea7_findBuiltinFunc(_19720_ident);;
	if ((_20213_f != nullptr)) {
		return jule::Any(_20213_f, &__jule_any_type7);;
	};
	jule::Ptr<_1b06469b4_TypeAlias> _20613_ta = _1b07320ee_findBuiltinTypeAlias((*(_19720_ident)));;
	if ((_20613_ta != nullptr)) {
		return jule::Any(_20613_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1b0732682_findBuiltinDefStdDebug(jule::Str* _21328_ident) {
	{
		auto &_match_expr{ (*(_21328_ident)) };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1b3e79975:;
			{
				static jule::Ptr<_1b050b802_FnIns> _21620_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073d759_builtinCallerStdDebugOut), });;
				return jule::Any(_21620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1b3e799db:;
			{
				static jule::Ptr<_1b050b802_FnIns> _21920_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073db88_builtinCallerStdDebugOutln), });;
				return jule::Any(_21920_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b3e79359:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3e78127:;
	};
}



inline jule::Any _1b073294b_findBuiltinDefStdMem(jule::Str* _22626_ident) {
	{
		auto &_match_expr{ (*(_22626_ident)) };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1b3e7b3a0:;
			{
				static jule::Ptr<_1b050b802_FnIns> _22920_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073c15e_builtinCallerStdMemSizeOf), });;
				return jule::Any(_22920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1b3e7b416:;
			{
				static jule::Ptr<_1b050b802_FnIns> _23220_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073c58d_builtinCallerStdMemAlignOf), });;
				return jule::Any(_23220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1b3e7b47c:;
			{
				static jule::Ptr<_1b050b802_FnIns> _23520_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073c9bc_builtinCallerStdMemFree), });;
				return jule::Any(_23520_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b3e7b339:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3e79ea3:;
	};
}



inline jule::Any _1b0732ce2_findBuiltinDefStdComptime(jule::Str* _24231_ident) {
	{
		auto &_match_expr{ (*(_24231_ident)) };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1b3e7d7c0:;
			{
				static jule::Ptr<_1b050b802_FnIns> _24520_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073a36b_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_24520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1b3e7d836:;
			{
				static jule::Ptr<_1b050b802_FnIns> _24820_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073a79a_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_24820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1b3e7d8ad:;
			{
				static jule::Ptr<_1b050b802_FnIns> _25120_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073ae93_builtinCallerStdComptimeRange), });;
				return jule::Any(_25120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1b3e7d935:;
			{
				static jule::Ptr<_1b050b802_FnIns> _25420_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073b3c2_builtinCallerStdComptimeLine), });;
				return jule::Any(_25420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1b3e7dc10:;
			{
				static jule::Ptr<_1b050b802_FnIns> _25720_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073b801_builtinCallerStdComptimeFile), });;
				return jule::Any(_25720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1b3e7dc87:;
			{
				static jule::Ptr<_1b050b802_FnIns> _26020_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073bc30_builtinCallerStdComptimeFiles), });;
				return jule::Any(_26020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b3e7d759:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3e7cd96:;
	};
}



inline jule::Any _1b07330ab_findBuiltinDefStdJuleIntegrated(jule::Str* _26737_ident) {
	{
		auto &_match_expr{ (*(_26737_ident)) };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1b3e82ae3:;
			{
				static jule::Ptr<_1b050b802_FnIns> _27020_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073cdeb_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_27020_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1b3e82b59:;
			{
				static jule::Ptr<_1b050b802_FnIns> _27320_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_Decl=jule::new_ptr<_1b05088ed_Fn>(_1b05088ed_Fn{._field_Generics=jule::Slice<jule::Ptr<_1b04cde89_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073d32a_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_27320_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b3e82a7c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3e7e1b6:;
	};
}



inline jule::Any _1b0733430_findPackageBuiltinDef(jule::Str* _28527_linkPath, jule::Str* _28543_ident) {
	{
		auto &_match_expr{ (*(_28527_linkPath)) };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1b3e84e36:;
			{
				return _1b0732ce2_findBuiltinDefStdComptime(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b3e84e9c:;
			{
				return _1b0732682_findBuiltinDefStdDebug(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b3e85013:;
			{
				return _1b073294b_findBuiltinDefStdMem(_28543_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b3e85079:;
			{
				return _1b07330ab_findBuiltinDefStdJuleIntegrated(_28543_ident);;
			}
		}
		else {
			_case_begin_1b3e84c5a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b3e83b5a:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b073385e_builtinCallerCommonPlain(jule::Ptr<_1b0614366_Eval>* _30034_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _30049_fc, jule::Ptr<_1b0612672_Data>* _30071_d) {
	jule::Ptr<_1b050b802_FnIns> _30113_f = _1b064b48b_Fn((*(_30071_d)).get()._field_Kind.ptr());;
	_1b0602c17_fnCallArgChecker _30313_fcac = _1b0602c17_fnCallArgChecker{._field_e=(*(_30034_e)), ._field_args=(*(_30049_fc)).get()._field_Args, ._field_errorToken=(*(_30049_fc)).get()._field_Token, ._field_f=_30113_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1b06052be_check(&_30313_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1b04ec00c_FnCallExprModel> _31413_model = jule::new_ptr<_1b04ec00c_FnCallExprModel>(_1b04ec00c_FnCallExprModel{._field_Token=(*(_30049_fc)).get()._field_Token, ._field_Func=_30113_f, ._field_Expr=(*(_30071_d)).get()._field_Model, ._field_Args=_30313_fcac._field_argModels, });;
	if ((_30113_f.get()._field_Result == nullptr)) {
		(*(_30071_d))=_1b06433c8_buildVoidData();
	} else {
		(*(_30071_d))=jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_30113_f.get()._field_Result, });
	};
	(*(_30071_d)).get()._field_Model=jule::Any(_31413_model, &__jule_any_type35);
	return (*(_30071_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0733c8d_builtinCallerCommon(jule::Ptr<_1b0614366_Eval>* _33329_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _33344_fc, jule::Ptr<_1b0612672_Data>* _33366_d) {
	return _1b073385e_builtinCallerCommonPlain(_33329_e, _33344_fc, _33366_d);;
}



inline jule::Ptr<_1b0612672_Data> _1b07341bc_builtinCallerCommonMut(jule::Ptr<_1b0614366_Eval>* _33732_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _33747_fc, jule::Ptr<_1b0612672_Data>* _33769_d) {
	if ((!((*(_33769_d)).get()._field_Mutable))) {
		_1b06148b6_pushErr((*(_33732_e)).ptr(), (*(_33747_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1b0733c8d_builtinCallerCommon(_33732_e, _33747_fc, _33769_d);;
}



inline jule::Ptr<_1b0612672_Data> _1b0734541_builtinCallerError(jule::Ptr<_1b0614366_Eval>* _34428_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _34443_fc) {
	if (((*(_34443_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34443_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _35213_expr = _1b0637598_evalExpr((*(_34428_e)), (*(_34443_fc)).get()._field_Args[0LL]);;
	if ((_35213_expr == nullptr)) {
		return nullptr;;
	};
	if (_1b0612a29_IsNil(_35213_expr.ptr())) {
		_1b06148b6_pushErr((*(_34428_e)).ptr(), (*(_34443_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b0612672_Data> _36113_d = _1b06433c8_buildVoidData();;
	_36113_d.get()._field_Model=jule::Any(jule::new_ptr<_1b05045ec_BuiltinErrorCallExprModel>(_1b05045ec_BuiltinErrorCallExprModel{._field_Err=_35213_expr}), &__jule_any_type23);
	return _36113_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0734970_builtinCallerOut(jule::Ptr<_1b0614366_Eval>* _36626_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _36641_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_36641_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_36626_e)).ptr(), (*(_36641_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_36641_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_36626_e)).ptr(), (*(_36641_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _37513_expr = _1b0637598_evalExpr((*(_36626_e)), (*(_36641_fc)).get()._field_Args[0LL]);;
	if ((_37513_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b066430b_isBuiltinStrConvertable(&(_37513_expr.get()._field_Kind))))) {
		_1b06148b6_pushErr((*(_36626_e)).ptr(), (*(_36641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _38513_d = _1b06433c8_buildVoidData();;
	_38513_d.get()._field_Model=jule::Any(jule::new_ptr<_1b0501484_BuiltinOutCallExprModel>(_1b0501484_BuiltinOutCallExprModel{._field_Expr=_37513_expr.get()._field_Model, }), &__jule_any_type28);
	return _38513_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0735058_builtinCallerOutln(jule::Ptr<_1b0614366_Eval>* _39028_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _39043_fc, jule::Ptr<_1b0612672_Data>* _39065_d) {
	(*(_39065_d))=_1b0734970_builtinCallerOut(_39028_e, _39043_fc, _39065_d);
	if (((*(_39065_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_39065_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b050185d_BuiltinOutlnCallExprModel>(_1b050185d_BuiltinOutlnCallExprModel{._field_Expr=(*(_39065_d)).get()._field_Model.cast_ptr<_1b0501484_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_39065_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0735487_builtinCallerNew(jule::Ptr<_1b0614366_Eval>* _40226_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _40241_fc, jule::Ptr<_1b0612672_Data>* _40263_d) {
	if (((*(_40241_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_40241_fc)).get()._field_Args.len() > 2LL)) {
		_1b06148b6_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _41113_t = _1b0636784_evalExprKind((*(_40226_e)), (*(_40241_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_41113_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_41113_t.get()._field_Decl))) {
		_1b06148b6_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1b0663c78_isValidForSptrType(&(_41113_t.get()._field_Kind))))) {
		jule::Ptr<_1b04e5951_StructIns> _42217_s = _1b064b722_Struct(_41113_t.get()._field_Kind.ptr());;
		if ((((_42217_s != nullptr) && (_42217_s.get()._field_Decl != nullptr)) && _42217_s.get()._field_Decl.get()._field_Binded)) {
			_1b06148b6_pushErr((*(_40226_e)).ptr(), (*(_40241_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_40263_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0654153_Sptr>(_1b0654153_Sptr{._field_Elem=_41113_t.get()._field_Kind}), 21)});
	if (((*(_40241_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1b06477a6_TypeKind> _43617_old = (*(_40226_e)).get()._field_prefix;;
		(*(_40226_e)).get()._field_prefix=_41113_t.get()._field_Kind;
		jule::Ptr<_1b0612672_Data> _43917_init = _1b0637598_evalExpr((*(_40226_e)), (*(_40241_fc)).get()._field_Args[1LL]);;
		(*(_40226_e)).get()._field_prefix=_43617_old;
		if ((_43917_init != nullptr)) {
			jule::Ptr<_1aa49b1d1_Token> _44421_token = (*(_40241_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1b059a143_checkValidityForInitExpr((*(_40226_e)).get()._field_s, (!((*(_40226_e)).get()._field_immutable)), false, &(_41113_t.get()._field_Kind), &(_43917_init), &(_44421_token));
			_1b0596b34_checkAssignType((*(_40226_e)).get()._field_s, false, &(_41113_t.get()._field_Kind), &(_43917_init), _44421_token);
			(*(_40263_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0502034_BuiltinNewCallExprModel>(_1b0502034_BuiltinNewCallExprModel{._field_Kind=_41113_t.get()._field_Kind, ._field_Init=_43917_init.get()._field_Model}), &__jule_any_type117);
		};
	} else {
		(*(_40263_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0502034_BuiltinNewCallExprModel>(_1b0502034_BuiltinNewCallExprModel{._field_Kind=_41113_t.get()._field_Kind, }), &__jule_any_type117);
	};
	return (*(_40263_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b07358b6_builtinCallerPanic(jule::Ptr<_1b0614366_Eval>* _46428_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _46443_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_46443_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_46428_e)).ptr(), (*(_46443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_46443_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_46428_e)).ptr(), (*(_46443_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _47313_expr = _1b0637598_evalExpr((*(_46428_e)), (*(_46443_fc)).get()._field_Args[0LL]);;
	if ((_47313_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b064a19e_Prim(_47313_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1b0653aae_IsStr(_1b064a19e_Prim(_47313_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1b06148b6_pushErr((*(_46428_e)).ptr(), (*(_46443_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b0612672_Data> _48213_d = _1b06433c8_buildVoidData();;
	_48213_d.get()._field_Model=jule::Any(jule::new_ptr<_1b050240d_BuiltinPanicCallExprModel>(_1b050240d_BuiltinPanicCallExprModel{._field_Token=(*(_46443_fc)).get()._field_Token, ._field_Expr=_47313_expr.get()._field_Model}), &__jule_any_type30);
	return _48213_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0735ce5_builtinCallerMake(jule::Ptr<_1b0614366_Eval>* _49027_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _49042_fc, jule::Ptr<_1b0612672_Data>* _49064_d) {
	if (((*(_49042_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_49042_fc)).get()._field_Args.len() == 1LL)) {
			_1b06148b6_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1b06148b6_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _50013_t = _1b0636784_evalExprKind((*(_49027_e)), (*(_49042_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_50013_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_50013_t.get()._field_Decl))) {
		_1b06148b6_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_49042_fc)).get()._field_Args.len() > 3LL)) {
		_1b06148b6_pushErr((*(_49027_e)).ptr(), (*(_49042_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_49064_d)).get()._field_Kind=_50013_t.get()._field_Kind;
	jule::Ptr<_1b0612672_Data> _51613_lenExpr = _1b0637598_evalExpr(_1b0596282_evalp((*(_49027_e)).get()._field_s, (*(_49027_e)).get()._field_lookup, _50013_t.get()._field_Kind), (*(_49042_fc)).get()._field_Args[1LL]);;
	if ((_51613_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1b061d31a_checkIntegerIndexingByData((*(_49027_e)).ptr(), &(_51613_lenExpr), (*(_49042_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1b0502d6a_BuiltinMakeCallExprModel> _52313_model = jule::new_ptr<_1b0502d6a_BuiltinMakeCallExprModel>(_1b0502d6a_BuiltinMakeCallExprModel{._field_Kind=_50013_t.get()._field_Kind, ._field_Len=_51613_lenExpr.get()._field_Model, });;
	(*(_49064_d)).get()._field_Model=jule::Any(_52313_model, &__jule_any_type118);
	if (((*(_49042_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1b0612672_Data> _52917_capExpr = _1b0637598_evalExpr(_1b0596282_evalp((*(_49027_e)).get()._field_s, (*(_49027_e)).get()._field_lookup, _50013_t.get()._field_Kind), (*(_49042_fc)).get()._field_Args[2LL]);;
		if ((_52917_capExpr == nullptr)) {
			return (*(_49064_d));;
		};
		_1b061d31a_checkIntegerIndexingByData((*(_49027_e)).ptr(), &(_52917_capExpr), (*(_49042_fc)).get()._field_Args[2LL].get()._field_Token);
		_52313_model.get()._field_Cap=_52917_capExpr.get()._field_Model;
	};
	return (*(_49064_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0736224_builtinCallerAppend(jule::Ptr<_1b0614366_Eval>* _53929_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _53944_fc, jule::Ptr<_1b0612672_Data>* _53966_d) {
	if (((*(_53944_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_53944_fc)).get()._field_Args.len() == 1LL)) {
			_1b06148b6_pushErr((*(_53929_e)).ptr(), (*(_53944_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1b06148b6_pushErr((*(_53929_e)).ptr(), (*(_53944_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _54913_t = _1b0637598_evalExpr((*(_53929_e)), (*(_53944_fc)).get()._field_Args[0LL]);;
	if ((_54913_t == nullptr)) {
		return nullptr;;
	};
	if ((_1b064b205_Slc(_54913_t.get()._field_Kind.ptr()) == nullptr)) {
		_1b06148b6_pushErr((*(_53929_e)).ptr(), (*(_53944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b050b802_FnIns> _55913_f = jule::new_ptr<_1b050b802_FnIns>(_1b050b802_FnIns{._field_Params=jule::Slice<jule::Ptr<_1b050a856_ParamIns>>::make({jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Mutable=true, }), ._field_Kind=_54913_t.get()._field_Kind}),jule::new_ptr<_1b050a856_ParamIns>(_1b050a856_ParamIns{._field_Decl=jule::new_ptr<_1b0506e29_Param>(_1b0506e29_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1b064b205_Slc(_54913_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_54913_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1b0612672_Data>(jule::Ptr<_1b0614366_Eval>*,jule::Ptr<_1b04c9cdc_FnCallExpr>*,jule::Ptr<_1b0612672_Data>*)>(_1b073385e_builtinCallerCommonPlain), });;
	(*(_53966_d)).get()._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(_55913_f, 1)});
	(*(_53966_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b050072a_CommonIdentExprModel>(_1b050072a_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_53966_d))=_1b073385e_builtinCallerCommonPlain(_53929_e, _53944_fc, _53966_d);
	if (((*(_53966_d)) != nullptr)) {
		jule::Ptr<_1b04ec00c_FnCallExprModel> _58717_model = (*(_53966_d)).get()._field_Model.cast_ptr<_1b04ec00c_FnCallExprModel>(&__jule_any_type35);;
		(*(_53966_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0503244_BuiltinAppendCallExprModel>(_1b0503244_BuiltinAppendCallExprModel{._field_Dest=_58717_model.get()._field_Args[0LL], ._field_Elements=_58717_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_53966_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b073670d_callerCopySlice(jule::Ptr<_1b0612672_Data>* _59625_dest, jule::Ptr<_1b0614366_Eval>* _59643_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _59658_fc, jule::Ptr<_1b0612672_Data>* _59680_d) {
	if ((!((*(_59625_dest)).get()._field_Mutable))) {
		_1b06148b6_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b0612672_Data> _60113_src = _1b0637598_evalExpr((*(_59643_e)), (*(_59658_fc)).get()._field_Args[1LL]);;
	if ((_60113_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b0654b26_Slc> _60513_slc = _1b064b205_Slc(_60113_src.get()._field_Kind.ptr());;
	if ((_60513_slc != nullptr)) {
		if (((!(_60113_src.get()._field_Mutable)) && _1b0649148_Mutable(_60513_slc.get()._field_Elem.ptr()))) {
			_1b06148b6_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1b0647eb0_Equal((*(_59625_dest)).get()._field_Kind, _60113_src.get()._field_Kind)))) {
			_1b06148b6_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_59625_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_60113_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1b0650627_Prim> _61513_destPrim = _1b064a19e_Prim(_1b064b205_Slc((*(_59625_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1b0650627_Prim> _61613_prim = _1b064a19e_Prim(_60113_src.get()._field_Kind.ptr());;
		if (((((_61513_destPrim == nullptr) || (_61613_prim == nullptr)) || (!(_1b0653aae_IsStr(_61613_prim.ptr())))) || (!(_1b065201e_IsU8(_61513_destPrim.ptr()))))) {
			_1b06148b6_pushErr((*(_59643_e)).ptr(), (*(_59658_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str((*(_59625_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_60113_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_59680_d)).get()._field_Kind=_1b060b209_lenKind();
	(*(_59680_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0504223_BuiltinCopyCallExprModel>(_1b0504223_BuiltinCopyCallExprModel{._field_Dest=(*(_59625_dest)), ._field_Src=_60113_src}), &__jule_any_type32);
	return (*(_59680_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0736b3c_builtinCallerCopy(jule::Ptr<_1b0614366_Eval>* _63027_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _63042_fc, jule::Ptr<_1b0612672_Data>* _63064_d) {
	if (((*(_63042_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_63042_fc)).get()._field_Args.len() == 1LL)) {
			_1b06148b6_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1b06148b6_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_63042_fc)).get()._field_Args.len() > 2LL)) {
		_1b06148b6_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _64313_dest = _1b0637598_evalExpr((*(_63027_e)), (*(_63042_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_64313_dest == nullptr)) {
			_case_begin_1b1ce58e2:;
			{
				return nullptr;;
			}
		}
		else if ((_1b064b205_Slc(_64313_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1ce6283:;
			{
				return _1b073670d_callerCopySlice(&(_64313_dest), _63027_e, _63042_fc, _63064_d);;
			}
		}
		else {
			_case_begin_1b1ce554b:;
			{
				_1b06148b6_pushErr((*(_63027_e)).ptr(), (*(_63042_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1ce424d:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0736eb1_callerLenSlice(jule::Ptr<_1b0612672_Data>* _65524_expr, jule::Ptr<_1b0612672_Data>* _65542_d) {
	(*(_65542_d)).get()._field_Kind=_1b060b209_lenKind();
	(*(_65542_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0503541_BuiltinLenCallExprModel>(_1b0503541_BuiltinLenCallExprModel{._field_Expr=(*(_65524_expr))}), &__jule_any_type119);
	return (*(_65542_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0737335_callerLenMap(jule::Ptr<_1b0612672_Data>* _66322_expr, jule::Ptr<_1b0612672_Data>* _66340_d) {
	(*(_66340_d)).get()._field_Kind=_1b060b209_lenKind();
	(*(_66340_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0503541_BuiltinLenCallExprModel>(_1b0503541_BuiltinLenCallExprModel{._field_Expr=(*(_66322_expr))}), &__jule_any_type119);
	return (*(_66340_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b07376a9_callerLenArr(jule::Ptr<_1b0612672_Data>* _67122_expr, jule::Ptr<_1b0612672_Data>* _67140_d) {
	(*(_67140_d)).get()._field_Kind=_1b060b209_lenKind();
	(*(_67140_d)).get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1b064ae6e_Arr((*(_67122_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_67140_d)).get()._field_Model=jule::Any((*(_67140_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_67140_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0737a2d_callerLenStr(jule::Ptr<_1b0612672_Data>* _67822_expr, jule::Ptr<_1b0612672_Data>* _67840_d) {
	(*(_67840_d)).get()._field_Kind=_1b060b209_lenKind();
	if (_1b0613046_IsConst((*(_67822_expr)).ptr())) {
		(*(_67840_d)).get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1ad38003a_ReadStr((*(_67822_expr)).get()._field_Constant.ptr()).len())));
		(*(_67840_d)).get()._field_Model=jule::Any((*(_67840_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_67840_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b0503541_BuiltinLenCallExprModel>(_1b0503541_BuiltinLenCallExprModel{._field_Expr=(*(_67822_expr))}), &__jule_any_type119);
	};
	return (*(_67840_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0737da2_callerLenComptime(jule::Ptr<_1b0612672_Data>* _69127_d, jule::I64 _69137_n) {
	(*(_69127_d)).get()._field_Kind=_1b060b209_lenKind();
	(*(_69127_d)).get()._field_Constant=static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_69137_n)));
	(*(_69127_d)).get()._field_Model=jule::Any((*(_69127_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_69127_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b07382d1_builtinCallerLen(jule::Ptr<_1b0614366_Eval>* _69826_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _69841_fc, jule::Ptr<_1b0612672_Data>* _69863_d) {
	if (((*(_69841_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_69826_e)).ptr(), (*(_69841_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_69841_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_69826_e)).ptr(), (*(_69841_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _70613_dest = _1b0637257_evalExpr1((*(_69826_e)), (*(_69841_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_70613_dest == nullptr)) {
			_case_begin_1b1d000b1:;
			{
				return nullptr;;
			}
		}
		else if ((_1b064b205_Slc(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d00952:;
			{
				return _1b0736eb1_callerLenSlice(&(_70613_dest), _69863_d);;
			}
		}
		else if ((_1b064ae6e_Arr(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d009b8:;
			{
				return _1b07376a9_callerLenArr(&(_70613_dest), _69863_d);;
			}
		}
		else if ((_1b064bc3e_Map(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d00a2e:;
			{
				return _1b0737335_callerLenMap(&(_70613_dest), _69863_d);;
			}
		}
		else if (((_1b064a19e_Prim(_70613_dest.get()._field_Kind.ptr()) != nullptr) && _1b0653aae_IsStr(_1b064a19e_Prim(_70613_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b1ceec81:;
			{
				return _1b0737a2d_callerLenStr(&(_70613_dest), _69863_d);;
			}
		}
		else if ((_1b064c4e2_comptimeStructFields(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1ceece7:;
			{
				return _1b0737da2_callerLenComptime(_69863_d, static_cast<jule::I64>(_1b064c4e2_comptimeStructFields(_70613_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1b064ca0e_comptimeEnumFields(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1ceed5d:;
			{
				return _1b0737da2_callerLenComptime(_69863_d, static_cast<jule::I64>(_1b064ca0e_comptimeEnumFields(_70613_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1b064d7ce_comptimeTypeInfos(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1ceedc4:;
			{
				return _1b0737da2_callerLenComptime(_69863_d, static_cast<jule::I64>(_1b064d7ce_comptimeTypeInfos(_70613_dest.get()._field_Kind.ptr()).get()._field_types.len()));;
			}
		}
		else if ((_1b064d02b_comptimeParams(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d00aea:;
			{
				return _1b0737da2_callerLenComptime(_69863_d, static_cast<jule::I64>(_1b064d02b_comptimeParams(_70613_dest.get()._field_Kind.ptr()).get()._field_params.len()));;
			}
		}
		else if ((_1b064dceb_comptimeStatics(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d00b61:;
			{
				return _1b0737da2_callerLenComptime(_69863_d, static_cast<jule::I64>(_1b064dceb_comptimeStatics(_70613_dest.get()._field_Kind.ptr()).get()._field_fields.len()));;
			}
		}
		else if ((_1b064e835_comptimeFiles(_70613_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d00bc7:;
			{
				return _1b0737da2_callerLenComptime(_69863_d, static_cast<jule::I64>(_1b064e835_comptimeFiles(_70613_dest.get()._field_Kind.ptr()).get()._field_files.len()));;
			}
		}
		else {
			_case_begin_1b1ceec1a:;
			{
				_1b06148b6_pushErr((*(_69826_e)).ptr(), (*(_69841_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1ced91c:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0738655_callerCapSlice(jule::Ptr<_1b0612672_Data>* _73624_expr, jule::Ptr<_1b0612672_Data>* _73642_d) {
	(*(_73642_d)).get()._field_Kind=_1b060b209_lenKind();
	(*(_73642_d)).get()._field_Model=jule::Any(jule::new_ptr<_1b050383d_BuiltinCapCallExprModel>(_1b050383d_BuiltinCapCallExprModel{._field_Expr=(*(_73624_expr))}), &__jule_any_type120);
	return (*(_73642_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0738a84_builtinCallerCap(jule::Ptr<_1b0614366_Eval>* _74426_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _74441_fc, jule::Ptr<_1b0612672_Data>* _74463_d) {
	if (((*(_74441_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_74441_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _75213_dest = _1b0637598_evalExpr((*(_74426_e)), (*(_74441_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_75213_dest == nullptr)) {
			_case_begin_1b1d0b001:;
			{
				return nullptr;;
			}
		}
		else if (_75213_dest.get()._field_Decl) {
			_case_begin_1b1d0b892:;
			{
				_1b06148b6_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b064b205_Slc(_75213_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d0b908:;
			{
				return _1b0738655_callerCapSlice(&(_75213_dest), _74463_d);;
			}
		}
		else {
			_case_begin_1b1d0ab5a:;
			{
				_1b06148b6_pushErr((*(_74426_e)).ptr(), (*(_74441_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1d0985c:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b073906d_callerDeleteMap(jule::Ptr<_1b0614366_Eval>* _76725_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _76740_fc, jule::Ptr<_1b0612672_Data>* _76762_expr, jule::Ptr<_1b0612672_Data>* _76780_d) {
	if ((!((*(_76762_expr)).get()._field_Mutable))) {
		_1b06148b6_pushErr((*(_76725_e)).ptr(), (*(_76740_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_76780_d))=_1b06433c8_buildVoidData();
	jule::Ptr<_1b0503eae_BuiltinDeleteCallExprModel> _77213_model = jule::new_ptr<_1b0503eae_BuiltinDeleteCallExprModel>(_1b0503eae_BuiltinDeleteCallExprModel{._field_Dest=(*(_76762_expr)), });;
	if (((*(_76740_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1b0612672_Data> _77617_key = _1b0637598_evalExpr((*(_76725_e)), (*(_76740_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_77617_key == nullptr)) {
				_case_begin_1b1d11655:;
				{
					return nullptr;;
				}
			}
			else if (_77617_key.get()._field_Decl) {
				_case_begin_1b1d10577:;
				{
					_1b06148b6_pushErr((*(_76725_e)).ptr(), (*(_76740_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b1d10511:;
				{
					;
					jule::Ptr<_1b06477a6_TypeKind> _78521_keyType = _1b064bc3e_Map((*(_76762_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1b0596b34_checkAssignType((*(_76725_e)).get()._field_s, false, &(_78521_keyType), &(_77617_key), (*(_76740_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b1d1049a:;
		};
		_77213_model.get()._field_Key=_77617_key;
	};
	(*(_76780_d)).get()._field_Model=jule::Any(_77213_model, &__jule_any_type33);
	return (*(_76780_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b0739645_builtinCallerDelete(jule::Ptr<_1b0614366_Eval>* _79629_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _79644_fc, jule::Ptr<_1b0612672_Data>* _79666_d) {
	if (((*(_79644_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_79644_fc)).get()._field_Args.len() > 2LL)) {
		_1b06148b6_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _80413_dest = _1b0637598_evalExpr((*(_79629_e)), (*(_79644_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_80413_dest == nullptr)) {
			_case_begin_1b1d15e40:;
			{
				return nullptr;;
			}
		}
		else if (_80413_dest.get()._field_Decl) {
			_case_begin_1b1d167d1:;
			{
				_1b06148b6_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1b064bc3e_Map(_80413_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d16847:;
			{
				return _1b073906d_callerDeleteMap(_79629_e, _79644_fc, &(_80413_dest), _79666_d);;
			}
		}
		else {
			_case_begin_1b1d15a99:;
			{
				_1b06148b6_pushErr((*(_79629_e)).ptr(), (*(_79644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b1d1479b:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b0739a0d_builtinCallerClone(jule::Ptr<_1b0614366_Eval>* _81928_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _81943_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_81943_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_81943_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _82813_d = _1b0637598_evalExpr((*(_81928_e)), (*(_81943_fc)).get()._field_Args[0LL]);;
	if ((_82813_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b0649b82_SupportsCloning(_82813_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1b064b205_Slc(_82813_d.get()._field_Kind.ptr()) != nullptr) || (_1b064bc3e_Map(_82813_d.get()._field_Kind.ptr()) != nullptr) || (_1b064ae6e_Arr(_82813_d.get()._field_Kind.ptr()) != nullptr) || (_1b064a435_Sptr(_82813_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b1d1b2a8:;
				{
					{
						_1b06148b6_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_82813_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1b064b722_Struct(_82813_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b1d1ab48:;
				{
					{
						_1b06148b6_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_82813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1b1d1aad2:;
				{
					{
						_1b06148b6_pushErr((*(_81928_e)).ptr(), (*(_81943_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_82813_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1b1d1aa16:;
		};
	};
	_82813_d.get()._field_Mutable=true;
	_82813_d.get()._field_Model=jule::Any(jule::new_ptr<_1b0501b5a_BuiltinCloneCallExprModel>(_1b0501b5a_BuiltinCloneCallExprModel{._field_Expr=_82813_d.get()._field_Model}), &__jule_any_type27);
	return _82813_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b0739e3c_builtinCallerAssert(jule::Ptr<_1b0614366_Eval>* _86129_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _86144_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_86144_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86144_fc)).get()._field_Args.len() > 2LL)) {
		_1b06148b6_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _87013_expr = _1b0637598_evalExpr((*(_86129_e)), (*(_86144_fc)).get()._field_Args[0LL]);;
	if ((_87013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1b064a19e_Prim(_87013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1b0653828_IsBool(_1b064a19e_Prim(_87013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1b06148b6_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b05028b4_BuiltinAssertCallExprModel> _87913_model = jule::new_ptr<_1b05028b4_BuiltinAssertCallExprModel>(_1b05028b4_BuiltinAssertCallExprModel{._field_Token=(*(_86144_fc)).get()._field_Token, ._field_Expr=_87013_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_86144_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1b0612672_Data> _88717_log = _1b0637598_evalExpr((*(_86129_e)), (*(_86144_fc)).get()._field_Args[1LL]);;
		if ((_88717_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1b0613046_IsConst(_88717_log.ptr()))) || (_1b064a19e_Prim(_88717_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1b0653aae_IsStr(_1b064a19e_Prim(_88717_log.get()._field_Kind.ptr()).ptr()))))) {
			_1b06148b6_pushErr((*(_86129_e)).ptr(), (*(_86144_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_88717_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_87913_model.get()._field_Log=_1ad38003a_ReadStr(_88717_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1b0612672_Data> _90013_d = _1b06433c8_buildVoidData();;
	_90013_d.get()._field_Model=jule::Any(_87913_model, &__jule_any_type31);
	return _90013_d;;
}



inline jule::Ptr<_1b0612672_Data> _1b073a36b_builtinCallerStdComptimeTypeOf(jule::Ptr<_1b0614366_Eval>* _90540_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _90555_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_90555_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_90555_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _91413_d = _1b0636784_evalExprKind((*(_90540_e)), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_91413_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b050b802_FnIns> _9189_f = _1b064b48b_Fn(_91413_d.get()._field_Kind.ptr());;
	if ((_9189_f != nullptr)) {
		if (_1b050cc87_IsBuiltin(_9189_f.ptr())) {
			_1b06148b6_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9189_f.get()._field_Generics.len() != _9189_f.get()._field_Decl.get()._field_Generics.len())) {
			_1b06148b6_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1b04e5951_StructIns> _9299_s = _1b064b722_Struct(_91413_d.get()._field_Kind.ptr());;
	if (((_9299_s != nullptr) && (_9299_s.get()._field_Generics.len() != _9299_s.get()._field_Decl.get()._field_Generics.len()))) {
		_1b06148b6_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1b064c25b_comptime(_91413_d.get()._field_Kind.ptr())) {
		_1b06148b6_pushErr((*(_90540_e)).ptr(), (*(_90555_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_91413_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053ec86_buildComptimeTypeInfoData(&((*(_90540_e)).get()._field_s), &(_91413_d.get()._field_Kind));;
}



inline jule::Ptr<_1b0612672_Data> _1b073a79a_builtinCallerStdComptimeValueOf(jule::Ptr<_1b0614366_Eval>* _94141_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _94156_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_94156_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_94141_e)).ptr(), (*(_94156_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_94156_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_94141_e)).ptr(), (*(_94156_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _94913_d = _1b0637598_evalExpr((*(_94141_e)), (*(_94156_fc)).get()._field_Args[0LL]);;
	if ((_94913_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b060b55b_isGoodValueToInfer(&(_94913_d))))) {
		_1b06148b6_pushErr((*(_94141_e)).ptr(), (*(_94156_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_94913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1b053eeb7_buildComptimeValue(&(_94913_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind> _96118_kind) {
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b0522e45_comptimeRange>(_1b0522e45_comptimeRange{._field_kind=_96118_kind}), 5)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b073ae93_builtinCallerStdComptimeRange(jule::Ptr<_1b0614366_Eval>* _97139_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _97154_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_97154_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_97154_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _98013_d = _1b0636784_evalExprKind((*(_97139_e)), (*(_97154_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_98013_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1b064c4e2_comptimeStructFields(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b4160c9e:;
			{
				return _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>(_1b064c4e2_comptimeStructFields(_98013_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1b064ca0e_comptimeEnumFields(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d38a23:;
			{
				return _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>(_1b064ca0e_comptimeEnumFields(_98013_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1b064d7ce_comptimeTypeInfos(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d38a89:;
			{
				return _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>(_1b064d7ce_comptimeTypeInfos(_98013_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1b064d02b_comptimeParams(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d38b00:;
			{
				return _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>(_1b064d02b_comptimeParams(_98013_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1b064dceb_comptimeStatics(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d386b0:;
			{
				return _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>(_1b064dceb_comptimeStatics(_98013_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1b064e835_comptimeFiles(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b1d38726:;
			{
				return _1b073aa64_rangeData(jule::Trait<_1b0522c58_comptimeRangeKind>(_1b064e835_comptimeFiles(_98013_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1b1d38649:;
			{
				_1b06148b6_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_98013_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b1d383d5:;
	};
}



inline jule::Ptr<_1b0612672_Data> _1b073b3c2_builtinCallerStdComptimeLine(jule::Ptr<_1b0614366_Eval>* _100338_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _100353_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_100353_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_100338_e)).ptr(), (*(_100353_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1ad37cdb2_Const> _100713_constant = static__1ad37d302_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_100353_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072ebce_primInt, ._field_Model=jule::Any(_100713_constant, &__jule_any_type19), ._field_Constant=_100713_constant});;
}



inline jule::Ptr<_1b0612672_Data> _1b073b801_builtinCallerStdComptimeFile(jule::Ptr<_1b0614366_Eval>* _101538_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _101553_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_101553_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_101538_e)).ptr(), (*(_101553_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b053c965_comptimeFile>(_1b053c965_comptimeFile{._field_file=(*(_101538_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b073bc30_builtinCallerStdComptimeFiles(jule::Ptr<_1b0614366_Eval>* _102839_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _102854_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_102854_fc)).get()._field_Args.len() > 0LL)) {
		_1b06148b6_pushErr((*(_102839_e)).ptr(), (*(_102854_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=jule::new_ptr<_1b06477a6_TypeKind>(_1b06477a6_TypeKind{._field_Kind=jule::Trait<_1b0647300_Kind>(jule::new_ptr<_1b053b36a_comptimeFiles>(_1b053b36a_comptimeFiles{._field_files=(*(_102839_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_1b0612672_Data> _1b073c15e_builtinCallerStdMemSizeOf(jule::Ptr<_1b0614366_Eval>* _104135_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _104150_fc, jule::Ptr<_1b0612672_Data>* ) {
	jule::Ptr<_1b0612672_Data> _104213_result = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e805_primUint, });;
	if (((*(_104150_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _104213_result;;
	};
	if (((*(_104150_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _105413_d = _1b0636784_evalExprKind((*(_104135_e)), (*(_104150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_105413_d == nullptr)) {
		return _104213_result;;
	};
	if ((!(_1b06652da_validTypeForXof(&(_105413_d.get()._field_Kind))))) {
		_1b06148b6_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_105413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_104213_result.get()._field_Model=jule::Any(jule::new_ptr<_1b05048e9_SizeofExprModel>(_1b05048e9_SizeofExprModel{._field_Expr=_105413_d.get()._field_Model}), &__jule_any_type121);
	return _104213_result;;
}



inline jule::Ptr<_1b0612672_Data> _1b073c58d_builtinCallerStdMemAlignOf(jule::Ptr<_1b0614366_Eval>* _106636_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _106651_fc, jule::Ptr<_1b0612672_Data>* ) {
	jule::Ptr<_1b0612672_Data> _106713_result = jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072e805_primUint, });;
	if (((*(_106651_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106713_result;;
	};
	if (((*(_106651_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _107913_d = _1b0636784_evalExprKind((*(_106636_e)), (*(_106651_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107913_d == nullptr)) {
		return _106713_result;;
	};
	if ((!(_1b06652da_validTypeForXof(&(_107913_d.get()._field_Kind))))) {
		_1b06148b6_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1b0647b6e_Str(_107913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106713_result.get()._field_Model=jule::Any(jule::new_ptr<_1b0504be6_AlignofExprModel>(_1b0504be6_AlignofExprModel{._field_Expr=_107913_d.get()._field_Model}), &__jule_any_type122);
	return _106713_result;;
}



inline jule::Ptr<_1b0612672_Data> _1b073c9bc_builtinCallerStdMemFree(jule::Ptr<_1b0614366_Eval>* _109133_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _109148_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_109148_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_109148_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _110013_d = _1b0637598_evalExpr((*(_109133_e)), (*(_109148_fc)).get()._field_Args[0LL]);;
	if ((_110013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b06498eb_PerformsRC(_110013_d.get()._field_Kind.ptr())))) {
		_1b06148b6_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1b0612672_Data> _110913_result = _1b06433c8_buildVoidData();;
	_110913_result.get()._field_Model=jule::Any(jule::new_ptr<_1b05059b6_FreeExprModel>(_1b05059b6_FreeExprModel{._field_Expr=_110013_d.get()._field_Model}), &__jule_any_type34);
	return _110913_result;;
}



inline jule::Ptr<_1b0612672_Data> _1b073cdeb_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1b0614366_Eval>* _111445_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _111460_fc, jule::Ptr<_1b0612672_Data>* ) {
	if (((*(_111460_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_111460_fc)).get()._field_Args.len() > 1LL)) {
		_1b06148b6_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1b0612672_Data> _112313_d = _1b0637598_evalExpr((*(_111445_e)), (*(_111460_fc)).get()._field_Args[0LL]);;
	if ((_112313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1b066430b_isBuiltinStrConvertable(&(_112313_d.get()._field_Kind))))) {
		_1b06148b6_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1b0612672_Data>(_1b0612672_Data{._field_Kind=_1b072dea8_primStr, ._field_Model=jule::Any(jule::new_ptr<_1b05052e0_IntegratedToStrExprModel>(_1b05052e0_IntegratedToStrExprModel{._field_Expr=_112313_d.get()._field_Model}), &__jule_any_type123), });;
}



inline jule::Ptr<_1b0612672_Data> _1b073d32a_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1b0614366_Eval>* _114144_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _114159_fc, jule::Ptr<_1b0612672_Data>* _114181_d) {
	if ((!(_1b06153ab_isUnsafe((*(_114144_e)).ptr())))) {
		_1b06148b6_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_114159_fc)).get()._field_Args.len() < 1LL)) {
		_1b06148b6_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _115113_argd = _1b0637598_evalExpr((*(_114144_e)), (*(_114159_fc)).get()._field_Args[0LL]);;
	if ((_115113_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1b064a19e_Prim(_115113_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1b0653aae_IsStr(_1b064a19e_Prim(_115113_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1b06148b6_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1b0647b6e_Str(_115113_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1b0613046_IsConst(_115113_argd.ptr()))) || (!(_1ad382636_IsStr(_115113_argd.get()._field_Constant.ptr()))))) {
		_1b06148b6_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1b0612672_Data> _116613_r = _1b06433c8_buildVoidData();;
	jule::Ptr<_1b050b802_FnIns> _116813_f = _1b064b48b_Fn((*(_114181_d)).get()._field_Kind.ptr());;
	if ((_116813_f.get()._field_Generics.len() > 0LL)) {
		_116613_r.get()._field_Kind=_116813_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1b05056b9_BackendEmitExprModel> _117313_model = jule::new_ptr<_1b05056b9_BackendEmitExprModel>(_1b05056b9_BackendEmitExprModel{._field_Code=_1ad38003a_ReadStr(_115113_argd.get()._field_Constant.ptr()), });;
	if (((*(_114159_fc)).get()._field_Args.len() > 1LL)) {
		_117313_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_114159_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_114159_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b4184ec1:;
			if (it != expr_end) {
				jule::Ptr<_1b04c5ed6_Expr> _117921_arg = *it;
				{
					_115113_argd=_1b0636ac5_eval1((*(_114144_e)), _117921_arg);
					if ((_115113_argd == nullptr)) {
						return nullptr;;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _117313_model.get()._field_Exprs; __jule_push_dest.push(_115113_argd.get()._field_Model); };
				}
				_iter_next_1b4184ec1:;
				++it;
				goto _iter_begin_1b4184ec1;
			}
			_iter_end_1b4184ec1:;
		};
	};
	_116613_r.get()._field_Model=jule::Any(_117313_model, &__jule_any_type25);
	return _116613_r;;
}



inline jule::Ptr<_1b0612672_Data> _1b073d759_builtinCallerStdDebugOut(jule::Ptr<_1b0614366_Eval>* _119234_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _119249_fc, jule::Ptr<_1b0612672_Data>* _119271_d) {
	(*(_119271_d))=_1b0734970_builtinCallerOut(_119234_e, _119249_fc, _119271_d);
	if (((*(_119271_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119271_d)).get()._field_Model.cast_ptr<_1b0501484_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_119271_d));;
}



inline jule::Ptr<_1b0612672_Data> _1b073db88_builtinCallerStdDebugOutln(jule::Ptr<_1b0614366_Eval>* _120136_e, jule::Ptr<_1b04c9cdc_FnCallExpr>* _120151_fc, jule::Ptr<_1b0612672_Data>* _120173_d) {
	(*(_120173_d))=_1b0735058_builtinCallerOutln(_120136_e, _120151_fc, _120173_d);
	if (((*(_120173_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_120173_d)).get()._field_Model.cast_ptr<_1b050185d_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_120173_d));;
}



inline jule::Ptr<_1b116c594_FileInfo> _1b11b1d36_ParseFile(jule::Ptr<_1aa4a199a_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1b116c594_FileInfo> _2713_finf = jule::new_ptr<_1b116c594_FileInfo>();;
	({
		__jule_tuple_x_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = _1b11b240d_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log _1b11b240d_parseFileset(jule::Ptr<_1aa4a199a_File> _5521_f) {
	__jule_tuple_x_1b0487184_Ast__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	jule::Ptr<_1b11d2b6a_parser> _5613_p = jule::new_ptr<_1b11d2b6a_parser>();;
	_1b11e373b_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1b04d1ca0_ScopeTree> _1b11b2d8c_newScope(void) {
	return jule::new_ptr<_1b04d1ca0_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b11b3211_isSt(jule::Ptr<_1aa49b1d1_Token> _499_current, jule::Ptr<_1aa49b1d1_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(3LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1b11b3585_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1aa49b1d1_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(17LLU)) || (_1aa49bc2b_IsBinOp(_6113_prev.get()._field_Id) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1b11b394d_nextStPos(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _6815_tokens, jule::I64 _6833_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _6913_braceN = 0LL;;
	jule::I64 _7013_i = _6833_start;;
	for (; (_7013_i < (*(_6815_tokens)).len()); (_7013_i)++) {
		{
			jule::Bool _7217_ok = false;;
			jule::Bool _7317_terminated = false;;
			jule::Ptr<_1aa49b1d1_Token> _7413_tok = (*(_6815_tokens))[_7013_i];;
			{
				auto &_match_expr{ _7413_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b42113e3:;
					{
						if (((_6913_braceN == 0LL) && (_7013_i > _6833_start))) {
							if ((!(_1b11b3585_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b11b3211_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
									_7217_ok = __jule_assign_result.__jule_result_arg0;
									_7317_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_7217_ok) {
									goto _julec_label_1b42110e6;
								};
							};
						};
						(_6913_braceN)++;
						goto _iter_next_1b420ed1a;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b4211459:;
					{
						(_6913_braceN)--;
						if (((_6913_braceN == 0LL) && ((_7013_i + 1LL) < (*(_6815_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b11b3211_isSt((*(_6815_tokens))[(_7013_i + 1LL)], _7413_tok);
								_7217_ok = __jule_assign_result.__jule_result_arg0;
								_7317_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_7217_ok) {
								(_7013_i)++;
								goto _julec_label_1b42110e6;
							};
						};
						goto _iter_next_1b420ed1a;
					}
				}
				_match_end_1b421138d:;
			};
			if ((_6913_braceN != 0LL)) {
				goto _iter_next_1b420ed1a;
			};
			if ((_7013_i > _6833_start)) {
				if (_1b11b3585_prevIsIncompleteExpr(_6815_tokens, &(_7013_i))) {
					goto _iter_next_1b420ed1a;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b11b3211_isSt(_7413_tok, (*(_6815_tokens))[(_7013_i - 1LL)]);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b11b3211_isSt(_7413_tok, _7413_tok);
					_7217_ok = __jule_assign_result.__jule_result_arg0;
					_7317_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7217_ok))) {
				goto _iter_next_1b420ed1a;
			};
			_julec_label_1b42110e6:;
			if (_7317_terminated) {
				(_7013_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7013_i;
			__jule_func_result.__jule_result_arg1 = _7317_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b420ed1a:;
	}
	_iter_end_1b420ed1a:;;
	__jule_func_result.__jule_result_arg0 = _7013_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool _1b11b3cc2_skipSt(jule::I64* _13016_i, jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _13028_tokens) {
	__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1319_start = (*(_13016_i));;
	jule::Bool _13213_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1b11b394d_nextStPos(&(_13028_tokens), _1319_start);
		(*(_13016_i)) = __jule_assign_result.__jule_result_arg0;
		_13213_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _13413_stTokens = _13028_tokens.slice(_1319_start, (*(_13016_i)));;
	if (_13213_terminated) {
		if ((_13413_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool __jule_assign_result = _1b11b3cc2_skipSt(_13016_i, _13028_tokens);
				_13413_stTokens = __jule_assign_result.__jule_result_arg0;
				_13213_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13413_stTokens;
			__jule_func_result.__jule_result_arg1 = _13213_terminated;
			return __jule_func_result;;
		};
		_13413_stTokens=_13413_stTokens.slice(0LL, (_13413_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13413_stTokens;
	__jule_func_result.__jule_result_arg1 = _13213_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1b11b4102_stmt>> _1b11b44a9_splitStmts(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _15220_tokens) {
	jule::Slice<jule::Ptr<_1b11b4102_stmt>> _15313_stmts = jule::Slice<jule::Ptr<_1b11b4102_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15413_pos = 0LL;;
	while ((_15413_pos < (*(_15220_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _15618_stmt;;
			jule::Bool _15624_terminated = false;;
			({
				__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_bool __jule_assign_result = _1b11b3cc2_skipSt(&(_15413_pos), (*(_15220_tokens)));
				_15618_stmt = __jule_assign_result.__jule_result_arg0;
				_15624_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1b11b4102_stmt>> &__jule_push_dest = _15313_stmts; __jule_push_dest.push(jule::new_ptr<_1b11b4102_stmt>(_1b11b4102_stmt{._field_tokens=_15618_stmt, ._field_terminated=_15624_terminated})); };
		}
	_iter_next_1b421ad59:;
	}
	_iter_end_1b421ad59:;;
	return _15313_stmts;;
}



inline jule::Bool _1b11cc78b_isTypeOp(jule::U64* _88214_id) {
	return ((((*(_88214_id)) == static_cast<jule::U64>(65LLU)) || ((*(_88214_id)) == static_cast<jule::U64>(54LLU))) || ((*(_88214_id)) == static_cast<jule::U64>(62LLU)));;
}



inline jule::Bool _1b11cca99_isTypeRange(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _88921_tokens) {
	jule::Bool _89013_op = false;;
	{
		auto expr = _88921_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42c09e1:;
		if (it != expr_end) {
			jule::I64 _8919_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _89112_token = *it;
			{
				if ((_89112_token.get()._field_Id == static_cast<jule::U64>(76LLU))) {
					if (_89013_op) {
						return true;;
					};
					jule::I64 _89621_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _89721_lTokens = (*(_88921_tokens)).slice(_8919_i);;
					{
						auto expr = &(_89721_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b42c32b8:;
						if (it != expr_end) {
							jule::Ptr<_1aa49b1d1_Token> _89820_lToken = *it;
							{
								{
									auto &_match_expr{ _89820_lToken.get()._field_Id };
									
									if (_match_expr == static_cast<jule::U64>(76LLU)) {
										_case_begin_1b42c3c7a:;
										{
											(_89621_rangeN)++;
											goto _iter_next_1b42c32b8;
										}
									}
									else if (_match_expr == static_cast<jule::U64>(77LLU)) {
										_case_begin_1b42c3d02:;
										{
											(_89621_rangeN)--;
											goto _iter_next_1b42c32b8;
										}
									}
									_match_end_1b42c3be2:;
								};
								if ((_89621_rangeN == 0LL)) {
									return _1b11cc78b_isTypeOp(&(_89820_lToken.get()._field_Id));;
								};
							}
							_iter_next_1b42c32b8:;
							++it;
							goto _iter_begin_1b42c32b8;
						}
						_iter_end_1b42c32b8:;
					};
					return true;;
				};
				if ((!(_1b11cc78b_isTypeOp(&(_89112_token.get()._field_Id))))) {
					return false;;
				};
				_89013_op=true;
			}
			_iter_next_1b42c09e1:;
			++it;
			_8919_i++;
			goto _iter_begin_1b42c09e1;
		}
		_iter_end_1b42c09e1:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _1b11ccd63_getBlockExpr(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _92222_tokens) {
	jule::I64 _92313_braceN = 0LL;;
	jule::I64 _92413_skipToNextBraceClose = 0LL;;
	{
		auto expr = _92222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42c56e9:;
		if (it != expr_end) {
			jule::I64 _9259_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _92512_tok = *it;
			{
				{
					auto &_match_expr{ _92512_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(13LLU) || _match_expr == static_cast<jule::U64>(14LLU) || _match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b42c64ec:;
						{
							(_92413_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b42c6574:;
						{
							if (((_92313_braceN > 0LL) || (_92413_skipToNextBraceClose > 0LL))) {
								if ((_92413_skipToNextBraceClose > 0LL)) {
									(_92413_skipToNextBraceClose)--;
								};
								(_92313_braceN)++;
								goto _match_end_1b42c6442;
							};
							return (*(_92222_tokens)).slice(0LL, _9259_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b42c65eb:;
						{
							(_92313_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b42c6673:;
						{
							(_92313_braceN)--;
						}
					}
					_match_end_1b42c6442:;
				};
			}
			_iter_next_1b42c56e9:;
			++it;
			_9259_i++;
			goto _iter_begin_1b42c56e9;
		}
		_iter_end_1b42c56e9:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token _1b11cd22b_splitDelim(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _95220_tokens, jule::U64 _95238_delim) {
	__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_func_result;
	jule::I64 _95313_rangeN = 0LL;;
	{
		auto expr = _95220_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42c8e7d:;
		if (it != expr_end) {
			jule::I64 _9549_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _95412_token = *it;
			{
				{
					auto &_match_expr{ _95412_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b42c9b71:;
						{
							(_95313_rangeN)++;
							goto _iter_next_1b42c8e7d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b42c9be8:;
						{
							(_95313_rangeN)--;
						}
					}
					else if (_match_expr == _95238_delim) {
						_case_begin_1b42c9c70:;
						{
							if ((_95313_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _96725_l = (*(_95220_tokens)).slice(0LL, _9549_i);;
								jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _96825_r = (*(_95220_tokens)).slice((_9549_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _96725_l;
								__jule_func_result.__jule_result_arg1 = _96825_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1b42c9ac7:;
				};
			}
			_iter_next_1b42c8e7d:;
			++it;
			_9549_i++;
			goto _iter_begin_1b42c8e7d;
		}
		_iter_end_1b42c8e7d:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1b11cd4e5_findLowestPrecOp(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _97822_tokens) {
	jule::U8 _98313_prec = 255LLU;;
	jule::I64 _98413_precPos = -1LL;;
	jule::I64 _98613_braceN = 0LL;;
	jule::Bool _98713_skipToNextBraceOpen = false;;
	{
		auto expr = _97822_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b42cd16e:;
		if (it != expr_end) {
			jule::I64 _9889_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> *_98812_token = it;
			{
				{
					auto &_match_expr{ (*(_98812_token)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU)) {
						_case_begin_1b42cdda6:;
						{
							_98713_skipToNextBraceOpen=false;
							goto _case_begin_1b42cde2d;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(74LLU) || _match_expr == static_cast<jule::U64>(76LLU)) {
						_case_begin_1b42cde2d:;
						{
							(_98613_braceN)++;
							goto _iter_next_1b42cd16e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(75LLU) || _match_expr == static_cast<jule::U64>(77LLU)) {
						_case_begin_1b42cdea5:;
						{
							(_98613_braceN)--;
							goto _iter_next_1b42cd16e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(13LLU)) {
						_case_begin_1b42ce02c:;
						{
							_98713_skipToNextBraceOpen=true;
							goto _iter_next_1b42cd16e;
						}
					}
					_match_end_1b42cdceb:;
				};
				{
					
					if (_98713_skipToNextBraceOpen) {
						_case_begin_1b42d0490:;
						{
							goto _iter_next_1b42cd16e;
						}
					}
					else if ((_9889_i == 0LL)) {
						_case_begin_1b42d0517:;
						{
							goto _iter_next_1b42cd16e;
						}
					}
					else if ((_98613_braceN > 0LL)) {
						_case_begin_1b42d058e:;
						{
							goto _iter_next_1b42cd16e;
						}
					}
					else if ((!(_1aa49bc2b_IsBinOp((*(_98812_token)).get()._field_Id)))) {
						_case_begin_1b42d0616:;
						{
							goto _iter_next_1b42cd16e;
						}
					}
					_match_end_1b42d023c:;
				};
				jule::Ptr<_1aa49b1d1_Token> _101713_left = (*(_97822_tokens))[(_9889_i - 1LL)];;
				if ((_1aa49b91d_IsUnaryOp(_101713_left.get()._field_Id) || (_101713_left.get()._field_Id == static_cast<jule::U64>(8LLU)))) {
					goto _iter_next_1b42cd16e;
				};
				if (((_9889_i > 1LL) && (_101713_left.get()._field_Id == static_cast<jule::U64>(77LLU)))) {
					jule::Ptr<_1aa49b1d1_Token> _102517_lleft = (*(_97822_tokens))[(_9889_i - 2LL)];;
					if ((_102517_lleft.get()._field_Id == static_cast<jule::U64>(76LLU))) {
						if ((((*(_98812_token)).get()._field_Id == static_cast<jule::U64>(65LLU)) || ((*(_98812_token)).get()._field_Id == static_cast<jule::U64>(62LLU)))) {
							goto _iter_next_1b42cd16e;
						};
					};
				};
				jule::U8 _103413_p = _1aa49b555_Prec((*(_98812_token)).ptr());;
				if (((_103413_p != 0LLU) && (_103413_p <= _98313_prec))) {
					_98313_prec=_103413_p;
					_98413_precPos=_9889_i;
				};
			}
			_iter_next_1b42cd16e:;
			++it;
			_9889_i++;
			goto _iter_begin_1b42cd16e;
		}
		_iter_end_1b42cd16e:;
	};
	return _98413_precPos;;
}



inline jule::Ptr<_1b04c7911_IdentExpr> _1b11cd7ae_buildIdentExpr(jule::Ptr<_1aa49b1d1_Token>* _104324_token) {
	return jule::new_ptr<_1b04c7911_IdentExpr>(_1b04c7911_IdentExpr{._field_Token=(*(_104324_token)), ._field_Ident=(*(_104324_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_int _1b11cda78_getRangeExprTokens(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _105128_tokens) {
	__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _105213_rangeN = 0LL;;
	jule::I64 _105313_i = ((*(_105128_tokens)).len() - 1LL);;
	for (; (_105313_i >= 0LL); (_105313_i)--) {
		{
			jule::Ptr<_1aa49b1d1_Token> _105513_tok = (*(_105128_tokens))[_105313_i];;
			{
				auto &_match_expr{ _105513_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b42d6aa1:;
					{
						(_105213_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b42d6b28:;
					{
						(_105213_rangeN)--;
					}
				}
				_match_end_1b42d65d9:;
			};
			if ((_105213_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105128_tokens)).slice(0LL, _105313_i);
				__jule_func_result.__jule_result_arg1 = _105213_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b42d5e68:;
	}
	_iter_end_1b42d5e68:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _105213_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1b11ce87b_checkAssignTokens(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1aa4a0aa9_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b445933e:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_2112_t = it;
			{
				{
					auto &_match_expr{ (*(_2112_t)).get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4459d12:;
						{
							(_2013_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b4459d89:;
						{
							(_2013_braceN)--;
						}
					}
					_match_end_1b4459c79:;
				};
				{
					
					if ((_2013_braceN < 0LL)) {
						_case_begin_1b445ac25:;
						{
							return false;;
						}
					}
					else if ((_2013_braceN > 0LL)) {
						_case_begin_1b445ac8b:;
						{
							goto _iter_next_1b445933e;
						}
					}
					else if (_1aa4a113c_IsAssignOp((*(_2112_t)).get()._field_Id) || ((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(38LLU))) {
						_case_begin_1b445ad13:;
						{
							return true;;
						}
					}
					_match_end_1b445ab7b:;
				};
			}
			_iter_next_1b445933e:;
			++it;
			goto _iter_begin_1b445933e;
		}
		_iter_end_1b445933e:;
	};
	return false;;
}



inline _1aa3c3a21_Log _1b11d0a58_makeErr(jule::I64 _5112_row, jule::I64 _5122_col, jule::Ptr<_1aa4a199a_File>* _5133_f, jule::Str _5143_fmt, jule::Slice<jule::Any> _5156_args) {
	return _1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5112_row, ._field_Column=_5122_col, ._field_Path=(*(_5133_f)).get()._field_Path, ._field_Text=_1aa3c3e83_Logf(_5143_fmt, _5156_args), };;
}



inline jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _1b11d1053_range(jule::I64* _6915_i, jule::U64 _6923_open, jule::U64 _6938_close, jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _6959_tokens) {
	if (((*(_6915_i)) >= (*(_6959_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1aa49b1d1_Token> _739_tok = (*(_6959_tokens))[(*(_6915_i))];;
	if ((_739_tok.get()._field_Id != _6923_open)) {
		return nullptr;;
	};
	((*(_6915_i)))++;
	jule::I64 _7813_rangeN = 1LL;;
	jule::I64 _799_start = (*(_6915_i));;
	for (; ((_7813_rangeN != 0LL) && ((*(_6915_i)) < (*(_6959_tokens)).len())); ((*(_6915_i)))++) {
		{
			jule::Ptr<_1aa49b1d1_Token> _8113_token = (*(_6959_tokens))[(*(_6915_i))];;
			{
				auto &_match_expr{ _8113_token.get()._field_Id };
				
				if (_match_expr == _6923_open) {
					_case_begin_1b4460b4d:;
					{
						(_7813_rangeN)++;
					}
				}
				else if (_match_expr == _6938_close) {
					_case_begin_1b4460bc5:;
					{
						(_7813_rangeN)--;
					}
				}
				_match_end_1b4460741:;
			};
		}
	_iter_next_1b445ee38:;
	}
	_iter_end_1b445ee38:;;
	return (*(_6959_tokens)).slice(_799_start, ((*(_6915_i)) - 1LL));;
}



inline __jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token _1b11d131c_rangeLast(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _9919_tokens) {
	__jule_tuple_sx_1aa49b1d1_Token__jule_tuple_sx_1aa49b1d1_Token __jule_func_result;
	if (((*(_9919_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U64 _1039_first = (*(_9919_tokens))[((*(_9919_tokens)).len() - 1LL)].get()._field_Id;;
	if ((((_1039_first != static_cast<jule::U64>(73LLU)) && (_1039_first != static_cast<jule::U64>(76LLU))) && (_1039_first != static_cast<jule::U64>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_9919_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_1aa49b1d1_Token> _11213_token = (*(_9919_tokens))[_11013_i];;
			{
				auto &_match_expr{ _11213_token.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
					_case_begin_1b4464b30:;
					{
						(_10913_braceN)++;
						goto _iter_next_1b44640a2;
					}
				}
				else if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
					_case_begin_1b4464ba7:;
					{
						(_10913_braceN)--;
					}
				}
				_match_end_1b4464668:;
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_9919_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_9919_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b44640a2:;
	}
	_iter_end_1b44640a2:;;
	__jule_func_result.__jule_result_arg0 = (*(_9919_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log _1b11d17c3_parts(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _13715_tokens, jule::U64 _13733_id, jule::Bool _13746_exprMust) {
	__jule_tuple_ssx_1aa49b1d1_Token__jule_tuple_s_1aa3c3a21_Log __jule_func_result;
	if (((*(_13715_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> _14213_parts = nullptr;;
	jule::Slice<_1aa3c3a21_Log> _14313_errors = nullptr;;
	jule::I64 _14513_rangeN = 0LL;;
	jule::I64 _14613_last = 0LL;;
	{
		auto expr = _13715_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b446291e:;
		if (it != expr_end) {
			jule::I64 _1479_i = it - expr->begin();
			jule::Ptr<_1aa49b1d1_Token> _14712_token = *it;
			{
				{
					auto &_match_expr{ _14712_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(72LLU) || _match_expr == static_cast<jule::U64>(76LLU) || _match_expr == static_cast<jule::U64>(74LLU)) {
						_case_begin_1b4468e0e:;
						{
							(_14513_rangeN)++;
							goto _iter_next_1b446291e;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(73LLU) || _match_expr == static_cast<jule::U64>(77LLU) || _match_expr == static_cast<jule::U64>(75LLU)) {
						_case_begin_1b4468e86:;
						{
							(_14513_rangeN)--;
						}
					}
					_match_end_1b4468d76:;
				};
				if ((_14513_rangeN > 0LL)) {
					goto _iter_next_1b446291e;
				};
				if ((_14712_token.get()._field_Id == _13733_id)) {
					if ((_13746_exprMust && ((_1479_i - _14613_last) <= 0LL))) {
						_1aa3c3a21_Log _16621_err = _1b11d0a58_makeErr(_14712_token.get()._field_Row, _14712_token.get()._field_Column, &(_14712_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						{ jule::Slice<_1aa3c3a21_Log> &__jule_push_dest = _14313_errors; __jule_push_dest.push(_16621_err); };
					};
					{ jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last, _1479_i)); };
					_14613_last=static_cast<jule::I64>((_1479_i + 1LL));
				};
			}
			_iter_next_1b446291e:;
			++it;
			_1479_i++;
			goto _iter_begin_1b446291e;
		}
		_iter_end_1b446291e:;
	};
	if ((_14613_last < (*(_13715_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push((*(_13715_tokens)).slice(_14613_last)); };
	} else if ((!(_13746_exprMust))) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1aa49b1d1_Token>>> &__jule_push_dest = _14213_parts; __jule_push_dest.push(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>()); };
	};
	__jule_func_result.__jule_result_arg0 = _14213_parts;
	__jule_func_result.__jule_result_arg1 = _14313_errors;
	return __jule_func_result;;
}



inline jule::U64 _1b11d1a8c_getCloseOfBrace(jule::U64 _18320_left) {
	{
		auto &_match_expr{ _18320_left };
		
		if (_match_expr == static_cast<jule::U64>(75LLU)) {
			_case_begin_1b412458c:;
			{
				return static_cast<jule::U64>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(73LLU)) {
			_case_begin_1b4124603:;
			{
				return static_cast<jule::U64>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(77LLU)) {
			_case_begin_1b4124669:;
			{
				return static_cast<jule::U64>(76LLU);;
			}
		}
		else {
			_case_begin_1b4124526:;
			{
				return _18320_left;;
			}
		}
		_match_end_1b4123910:;
	};
}



inline _1aa3c3a21_Log _1b11d1ebb_compilerErr(jule::Ptr<_1aa49b1d1_Token>* _19617_token, jule::Str* _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	return _1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_19617_token)).get()._field_Row, ._field_Column=(*(_19617_token)).get()._field_Column, ._field_Path=(*(_19617_token)).get()._field_File.get()._field_Path, ._field_Text=_1aa3c3e83_Logf((*(_19633_fmt)), _19646_args), ._field_Line=_1aa4a2979_GetRow((*(_19617_token)).get()._field_File.ptr(), (*(_19617_token)).get()._field_Row), };;
}



inline void _1b11d2362_pushSuggestion(_1aa3c3a21_Log* _20730_log, jule::Str _20741_fmt, jule::Slice<jule::Any> _20754_args) {
	_20730_log->_field_Suggestion=_1aa3c3e83_Logf(_20741_fmt, _20754_args);
}



inline jule::Str _1b11d2708_tokstoa(jule::Slice<jule::Ptr<_1aa49b1d1_Token>>* _21113_tokens) {
	jule::I64 _21213_n = 0LL;;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4127b56:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_21312_token = it;
			{
				_21213_n+=(*(_21312_token)).get()._field_Kind.len();
			}
			_iter_next_1b4127b56:;
			++it;
			goto _iter_begin_1b4127b56;
		}
		_iter_end_1b4127b56:;
	};
	_1aa364275_StrBuilder _21613_s = static__1aa364594_New(_21213_n);;
	{
		auto expr = _21113_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4127cdd:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_21712_token = it;
			{
				_1aa36d03c_WriteStr(&_21613_s, (*(_21712_token)).get()._field_Kind);
			}
			_iter_next_1b4127cdd:;
			++it;
			goto _iter_begin_1b4127cdd;
		}
		_iter_end_1b4127cdd:;
	};
	return _1aa36d834_Str(&_21613_s);;
}



inline jule::Ptr<_1b04c1ba2_TypeDecl> _1b11e4231_buildVoidType(void) {
	return jule::new_ptr<_1b04c1ba2_TypeDecl>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1b082dbbd_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b45e4661:;
			{
				__jule_func_result.__jule_result_arg0=_1aa5377cd_IsWindows(_1aa6411cd_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b45e46c7:;
			{
				__jule_func_result.__jule_result_arg0=_1aa537aa8_IsDarwin(_1aa6411cd_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b45e43a8:;
			{
				__jule_func_result.__jule_result_arg0=_1aa537d72_IsLinux(_1aa6411cd_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b45e441e:;
			{
				__jule_func_result.__jule_result_arg0=_1aa538a10_IsUnix(_1aa6411cd_Os);
			}
		}
		else {
			_case_begin_1b45e3d58:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b45e4298:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1b082dd11_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b45e68d8:;
			{
				__jule_func_result.__jule_result_arg0=_1aa5381b3_IsI386(_1aa641497_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b45e65b9:;
			{
				__jule_func_result.__jule_result_arg0=_1aa53847c_IsAmd64(_1aa641497_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b45e6630:;
			{
				__jule_func_result.__jule_result_arg0=_1aa538746_IsArm64(_1aa641497_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b45e6696:;
			{
				__jule_func_result.__jule_result_arg0=_1aa539170_Is64Bit(_1aa641497_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b45e670c:;
			{
				__jule_func_result.__jule_result_arg0=_1aa538da6_Is32Bit(_1aa641497_Arch);
			}
		}
		else {
			_case_begin_1b45e6069:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b45e64a9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b08488b9_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_1aa371edb_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _1aa371958_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _1aa352b15_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dbbd_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dd11_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_1aa352b15_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dbbd_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dd11_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dd11_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dbbd_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1b082dbbd_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1b0849a41_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1aa6411cd_Os); };
	if (_1aa538a10_IsUnix(_1aa6411cd_Os)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str("unix", 4)); };
	};
}



inline void _1b0849cb6_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1aa641497_Arch); };
	if (_1aa539170_Is64Bit(_1aa641497_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x64", 3)); };
	};
	if (_1aa538da6_Is32Bit(_1aa641497_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str("x32", 3)); };
	};
}



inline void _1b084a0a2_initVars(jule::Slice<jule::Str>* _5518_vars, _1b0849722_CompileInfo* _5532_info) {
	_1b0849a41_setOsVars(_5518_vars);
	_1b0849cb6_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b4601ddd:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("clang", 5)); };
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b4601e54:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("gcc", 3)); };
			}
		}
		_match_end_1b46027e5:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b4602e33:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp14", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b4602e99:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp17", 5)); };
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b46032c9:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str("cpp20", 5)); };
			}
		}
		_match_end_1b4602cac:;
	};
}



inline jule::Slice<jule::U8> _1b11e8356_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__1ba10c849_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_1aa6400de_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1aa3c3a21_Log _1b11e8631_flatCompilerErr(jule::Str _4120_text) {
	return _1aa3c3a21_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1b11ece4e_pushPasses(jule::Ptr<_1b056d3ad_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44716a8:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _11217_f = *it;
			{
				_julec_label_1b4471e5b:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b4472126:;
					if (it != expr_end) {
						_1b0510ebb_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1b4472126;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b4472a2d:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b4472126;
										};
									}
									_iter_next_1b4472a2d:;
									++it;
									goto _iter_begin_1b4472a2d;
								}
								_iter_end_1b4472a2d:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_11144_passes)); __jule_push_dest.push(_11416_pass._field_Text); };
						}
						_iter_next_1b4472126:;
						++it;
						goto _iter_begin_1b4472126;
					}
					_iter_end_1b4472126:;
				};
			}
			_iter_next_1b44716a8:;
			++it;
			goto _iter_begin_1b44716a8;
		}
		_iter_end_1b44716a8:;
	};
}



inline jule::Slice<jule::Str> _1b11ed317_getAllUniquePasses(jule::Ptr<_1b056d3ad_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1b056a487_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1b11ece4e_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b447459b:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1b11ece4e_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1b447459b:;
			++it;
			goto _iter_begin_1b447459b;
		}
		_iter_end_1b447459b:;
	};
	return _12913_passes;;
}



inline _1b0849722_CompileInfo _1b11ed526_buildCompileInfo(void) {
	_1b0849722_CompileInfo _14213_info = _1b0849722_CompileInfo{._field_Prod=_1d36480ad_Production, ._field_Test=_1d3647651_Test, };;
	{
		auto &_match_expr{ _1d36457e7_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b44757cd:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b4475899:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1b4475190:;
	};
	{
		auto &_match_expr{ _1d3646d37_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b4476449:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b447569b:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b4475c1d:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1b447668b:;
	};
	return _14213_info;;
}



inline void _1b138e431_EliminateDefines(jule::Ptr<_1b11eb5ce_IR>* _29026_ir) {
	jule::Ptr<_1b0b9d180_ObjectDeadCode> _29113_ocd = static__1b0b9d49e_new(_29026_ir);;
	_1b138e101_elimanate(_29113_ocd);
}



inline jule::Ptr<_1b04884b5_Directive> _1b138e7e9_findDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _29623_directives, jule::Str _29654_tag) {
	{
		auto expr = _29623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44ae9c1:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _29717_dr = *it;
			{
				if ((_29717_dr.get()._field_Tag.get()._field_Kind == _29654_tag)) {
					return _29717_dr;;
				};
			}
			_iter_next_1b44ae9c1:;
			++it;
			goto _iter_begin_1b44ae9c1;
		}
		_iter_end_1b44ae9c1:;
	};
	return nullptr;;
}



inline jule::Bool _1b138eb6d_hasDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _30618_directives, jule::Str _30649_tag) {
	return (_1b138e7e9_findDirective(_30618_directives, _30649_tag) != nullptr);;
}



inline jule::Bool _1b1390036_isTraitMethod(jule::Ptr<_1b04e5951_StructIns>* _31123_owner, jule::Ptr<_1b050b802_FnIns>* _31143_f) {
	{
		auto expr = &((*(_31123_owner)).get()._field_Decl.get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44b097d:;
		if (it != expr_end) {
			jule::Ptr<_1b051bb97_Trait> _31217_t = *it;
			{
				if ((_1b051c846_FindMethod(_31217_t.ptr(), (*(_31143_f)).get()._field_Decl.get()._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1b44b097d:;
			++it;
			goto _iter_begin_1b44b097d;
		}
		_iter_end_1b44b097d:;
	};
	return false;;
}



inline void _1b139403a_eliminateDeadCodeOfScope(jule::Ptr<_1b0549048_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1b054b8db_Label>> _2429_labels = jule::Slice<jule::Ptr<_1b054b8db_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1b054bcb5_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1b054bcb5_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1b1390d39_scopeDeadCode> _24413_sdc = jule::new_ptr<_1b1390d39_scopeDeadCode>(_1b1390d39_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1b054b8db_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1b054bcb5_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1b1393c0a_optimizeStmts(_24413_sdc);
	};
}



inline void _1b13942b0_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1b05088ed_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44ebd60:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b44ee945:;
					if (it != expr_end) {
						jule::Ptr<_1b050b802_FnIns> _25621_ins = *it;
						{
							_1b139403a_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1b44ee945:;
						++it;
						goto _iter_begin_1b44ee945;
					}
					_iter_end_1b44ee945:;
				};
			}
			_iter_next_1b44ebd60:;
			++it;
			goto _iter_begin_1b44ebd60;
		}
		_iter_end_1b44ebd60:;
	};
}



inline void _1b13944e1_eliminateFunctionsScopePackage(jule::Ptr<_1b056d3ad_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b44ee747:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _26317_f = *it;
			{
				_1b13942b0_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1b44ee747:;
			++it;
			goto _iter_begin_1b44ee747;
		}
		_iter_end_1b44ee747:;
	};
}



inline void _1b1394799_eliminateScopePackage(jule::Ptr<_1b056d3ad_Package>* _26831_pkg) {
	_1b13944e1_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1b13949ca_EliminateScopes(jule::Ptr<_1b11eb5ce_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1b056a487_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1b1394799_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1b4501161:;
	}
	_iter_end_1b4501161:;;
	_1b1394799_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1b074560c_isStdPackage(jule::Str* _38918_f, jule::Str _38926_p) {
	return _1aa34e42a_HasPrefix((*(_38918_f)), _1aa37168e_Join(jule::Slice<jule::Str>::make({_1aa6405ea_PathStdlib,_38926_p})));;
}



inline jule::Bool _1b074591a_isConstantValidConditionalCase(jule::Ptr<_1b0549466_If>* _39336_i) {
	{
		auto &_match_expr{ (*(_39336_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b4574877:;
			{
				jule::Ptr<_1ad37cdb2_Const> _39613_c = (*(_39336_i)).get()._field_Expr.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
				return (_1ad3823a0_IsBool(_39613_c.ptr()) && _1ad37eca4_ReadBool(_39613_c.ptr()));;
			}
		}
		_match_end_1b4574822:;
	};
	return false;;
}



inline jule::Bool _1b0745bd4_isUnreachableExpr(jule::Any* _40223_expr) {
	{
		auto &_match_expr{ (*(_40223_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b4574c0c:;
			{
				jule::Ptr<_1ad37cdb2_Const> _40513_c = (*(_40223_expr)).cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19);;
				return (_1ad3823a0_IsBool(_40513_c.ptr()) && (!(_1ad37eca4_ReadBool(_40513_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b4574c73:;
			{
				jule::Ptr<_1b04ea02c_BinopExprModel> _40813_m = (*(_40223_expr)).cast_ptr<_1b04ea02c_BinopExprModel>(&__jule_any_type115);;
				if ((_40813_m.get()._field_Op.get()._field_Id == static_cast<jule::U64>(54LLU))) {
					return (_1b0745bd4_isUnreachableExpr(&(_40813_m.get()._field_Left.get()._field_Model)) || _1b0745bd4_isUnreachableExpr(&(_40813_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1b4574ba7:;
	};
	return false;;
}



inline jule::Bool _1b0746025_isConstantValidMatchCase(jule::Ptr<_1b054dcb7_Case>* _41730_case) {
	{
		auto expr = &((*(_41730_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b457746d:;
		if (it != expr_end) {
			jule::Ptr<_1b0612672_Data> *_41812_expr = it;
			{
				if (((_1b0613046_IsConst((*(_41812_expr)).ptr()) && _1ad3823a0_IsBool((*(_41812_expr)).get()._field_Constant.ptr())) && _1ad37eca4_ReadBool((*(_41812_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b457746d:;
			++it;
			goto _iter_begin_1b457746d;
		}
		_iter_end_1b457746d:;
	};
	return false;;
}



inline jule::Bool _1b07462de_isUnreachableConditionalCase(jule::Ptr<_1b0549466_If>* _42634_i) {
	return _1b0745bd4_isUnreachableExpr(&((*(_42634_i)).get()._field_Expr));;
}



inline jule::Bool _1b07465a8_isUnreachableMatchCase(jule::Ptr<_1b054dcb7_Case>* _43028_case) {
	{
		auto expr = &((*(_43028_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b457964b:;
		if (it != expr_end) {
			jule::Ptr<_1b0612672_Data> *_43112_expr = it;
			{
				if ((!(_1b0745bd4_isUnreachableExpr(&((*(_43112_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b457964b:;
			++it;
			goto _iter_begin_1b457964b;
		}
		_iter_end_1b457964b:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1b074ec54_checkForBitShiftOpt(jule::Ptr<_1b04e9a32_OperandExprModel>* _48225_l, jule::Ptr<_1b04e9a32_OperandExprModel>* _48248_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1ad37c1ad_IsInt(_1b0647b6e_Str((*(_48225_l)).get()._field_Kind.ptr())))) || (!(_1ad37c1ad_IsInt(_1b0647b6e_Str((*(_48248_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_48248_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b471c767:;
			{
				goto _match_end_1b471d191;
			}
		}
		else {
			_case_begin_1b471d2d4:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1b471d191:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1ad3807dd_AsU64((*(_48248_r)).get()._field_Model.cast_ptr<_1ad37cdb2_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4969_j = _1ad32b5ad_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4979_z = static_cast<jule::U64>(_4969_j);;
	if ((static_cast<jule::F64>(_4979_z) != _4969_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4979_z;
	return __jule_func_result;;
}



inline jule::Bool _1b075011c_areSameLvalueExprModel(jule::Any* _50528_l, jule::Any* _50543_r) {
	{
		auto &_match_expr{ (*(_50528_l)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b472135e:;
			{
				return ((*(_50543_r)) == (*(_50528_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b47213c5:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type71) {
						_case_begin_1b4721c66:;
						{
							goto _match_end_1b472200d;
						}
					}
					else {
						_case_begin_1b4722063:;
						{
							return false;;
						}
					}
					_match_end_1b472200d:;
				};
				jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _51813_lsi = (*(_50528_l)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
				jule::Ptr<_1b04eea9d_StructSubIdentExprModel> _51913_rsi = (*(_50543_r)).cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_51813_lsi.get()._field_Field != _51913_rsi.get()._field_Field)) {
					return false;;
				};
				return _1b075011c_areSameLvalueExprModel(&(_51813_lsi.get()._field_Expr.get()._field_Model), &(_51913_rsi.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b472143b:;
			{
				{
					auto &_match_expr{ (*(_50543_r)) };
					
					if (_match_expr.type == &__jule_any_type74) {
						_case_begin_1b4723cce:;
						{
							jule::Ptr<_1b04ea406_UnaryExprModel> _53117_ul = (*(_50528_l)).cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74);;
							jule::Ptr<_1b04ea406_UnaryExprModel> _53217_ur = (*(_50543_r)).cast_ptr<_1b04ea406_UnaryExprModel>(&__jule_any_type74);;
							if (((_53117_ul.get()._field_Op.get()._field_Id != _53217_ur.get()._field_Op.get()._field_Id) || (_53117_ul.get()._field_Op.get()._field_Kind != _53217_ur.get()._field_Op.get()._field_Kind))) {
								return false;;
							};
							return _1b075011c_areSameLvalueExprModel(&(_53117_ul.get()._field_Expr.get()._field_Model), &(_53217_ur.get()._field_Expr.get()._field_Model));;
						}
					}
					_match_end_1b4723839:;
				};
			}
		}
		_match_end_1b4720c10:;
	};
	return false;;
}



inline void _1b075089d_doInternalNosafeStobs(_1b0747444_exprOptimizer* _727_op, _1b1200935_stdCacheData* _747_data, jule::Ptr<_1b04ec00c_FnCallExprModel>* _772_m) {
	jule::Any _813_model = jule::Any(jule::new_ptr<_1b0740849_InlineStdInternalNosafeStobs>(_1b0740849_InlineStdInternalNosafeStobs{._field_Str=(*(_772_m)).get()._field_Args[0LL]}), &__jule_any_type130);;
	{
		(*((*(_727_op))._field_model))=(*(((jule::Any*)((&(_813_model))))));
	};
}



inline void _1b12010c8_buildCache(jule::Ptr<_1b11eb5ce_IR>* _2720_ir) {
	_1b120131a_buildStdInternalNosafeCache(_2720_ir);
}



inline void _1b120131a_buildStdInternalNosafeCache(jule::Ptr<_1b11eb5ce_IR>* _3137_ir) {
	jule::Ptr<_1b056d3ad_Package> _3213_p = _1b1201ded_getPackage(_3137_ir, &(_1b12004e5_stdPackageInternalNosafe));;
	if ((_3213_p == nullptr)) {
		return;;
	};
	_1b12016b1_pushCache(&(_3213_p), jule::Str("Stobs", 5), jule::Fn<void(_1b0747444_exprOptimizer*,_1b1200935_stdCacheData*,jule::Ptr<_1b04ec00c_FnCallExprModel>*)>(_1b075089d_doInternalNosafeStobs));
}



inline void _1b12016b1_pushCache(jule::Ptr<_1b056d3ad_Package>* _4119_p, jule::Str _4132_ident, jule::Fn<void(_1b0747444_exprOptimizer*,_1b1200935_stdCacheData*,jule::Ptr<_1b04ec00c_FnCallExprModel>*)> _4144_do) {
	jule::Ptr<_1b050b802_FnIns> _4213_f = _1b1201a79_getFunc(_4119_p, &(_4132_ident));;
	_1b1200d64_stdCache[static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_4213_f))]=_1b1200935_stdCacheData{._field_f=_4213_f, ._field_do=_4144_do};
}



inline jule::Ptr<_1b050b802_FnIns> _1b1201a79_getFunc(jule::Ptr<_1b056d3ad_Package>* _5017_p, jule::Str* _5031_ident) {
	;
	jule::Ptr<_1b05088ed_Fn> _5213_f = _1b056e942_FindFn((*(_5017_p)).ptr(), (*(_5031_ident)), false);;
	if ((_5213_f == nullptr)) {
		return nullptr;;
	};
	return _5213_f.get()._field_Instances[0LL];;
}



inline jule::Ptr<_1b056d3ad_Package> _1b1201ded_getPackage(jule::Ptr<_1b11eb5ce_IR>* _5920_ir, jule::Str* _5930_path) {
	{
		auto expr = &((*(_5920_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4771cb6:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> _6017_u = *it;
			{
				if ((_6017_u.get()._field_Std && (_6017_u.get()._field_LinkPath == (*(_5930_path))))) {
					return _6017_u.get()._field_Package;;
				};
			}
			_iter_next_1b4771cb6:;
			++it;
			goto _iter_begin_1b4771cb6;
		}
		_iter_end_1b4771cb6:;
	};
	return nullptr;;
}



inline void _1b1204560_PushOptLevel(jule::I64 _3217_level) {
	jule::Bool _339_l1 = (_3217_level >= static_cast<jule::I64>(1LL));;
	jule::Bool _349_l2 = (_3217_level >= static_cast<jule::I64>(2LL));;
	_1b12026d4_Copy=_339_l1;
	_1b12029e2_Deadcode=_339_l1;
	_1b1202cab_Append=_339_l1;
	_1b12030b9_Math=_339_l1;
	_1b1203383_Access=_339_l1;
	_1b120364c_Inline=_339_l1;
	_1b1203916_Ptr=_339_l1;
	_1b1203ce0_Cond=_339_l1;
	_1b12040a9_Str=_339_l1;
	_1b1204373_StdInternalNosafe=_349_l2;
}



inline void _1b139e84d_detectEnabled(void) {
	_1b139c296_exprEnabled=((((_1b1203916_Ptr || _1b12030b9_Math) || _1b1203383_Access) || _1b1203ce0_Cond) || _1b1204373_StdInternalNosafe);
	_1b139c54e_scopeEnabled=(((_1b1203ce0_Cond || _1b1202cab_Append) || _1b12026d4_Copy) || _1b12040a9_Str);
	_1b139c818_stdEnabled=_1b1204373_StdInternalNosafe;
}



inline void _1b13c8734_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_1aa6400de_Exit(1LL);
}



inline jule::U64 _1b0ee35a2_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::Bool _1b1c6b192_isCopyOptimizable(jule::Ptr<_1b0612672_Data>* _81123_expr) {
	if ((!((*(_81123_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81123_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b47d10bc:;
			{
				return false;;
			}
		}
		_match_end_1b47d1067:;
	};
	return true;;
}



inline jule::Bool _1b1c6b55a_isIterCopyOptimizable(jule::Ptr<_1b0612672_Data>* _82227_expr, jule::Ptr<_1b05ae1bd_Var>* _82241_v) {
	if (((!((*(_82227_expr)).get()._field_Lvalue)) && (!(_1b0649148_Mutable((*(_82227_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82241_v)).get()._field_Mutable)) && (!((*(_82227_expr)).get()._field_Mutable)));;
}



inline jule::Str _1b1c7be0b_decomposeCommonEsq(jule::U8 _151523_b) {
	{
		auto &_match_expr{ _151523_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b4a02cb1:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b4a03421:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b4a02e7b:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b4a02ee2:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b4a03058:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b4a030be:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b4a035db:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b4a03652:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b4a036b8:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b4a0372e:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1b4a02e15:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b49ec261:;
	};
}



inline jule::Str _1b1c7c219_sbtoa(jule::U8 _154210_b) {
	if ((_154210_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_154210_b < 128LLU)) {
		jule::Str _154713_seq = _1b1c7be0b_decomposeCommonEsq(_154210_b);;
		if ((!(_154713_seq.empty()))) {
			return _154713_seq;;
		};
		if (((32LL <= _154210_b) && (_154210_b <= 126LLU))) {
			return jule::Str::from_byte(_154210_b);;
		};
	};
	jule::Str _15559_seq = _1ad36c203_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_154210_b)), 8LL);;
	if ((_15559_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15559_seq);;
	};
	return (jule::Str("\\", 1) + _15559_seq);;
}



inline void _1b1c7c505_cstrBytes(_1aa364275_StrBuilder* _156219_s, jule::Str _156234_ctx) {
	{
		auto expr = &(_156234_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4a07975:;
		if (it != expr_end) {
			jule::U8 *_156312_b = it;
			{
				_1aa36d03c_WriteStr(_156219_s, _1b1c7c219_sbtoa((*(_156312_b))));
			}
			_iter_next_1b4a07975:;
			++it;
			goto _iter_begin_1b4a07975;
		}
		_iter_end_1b4a07975:;
	};
}



inline void _1b1c7c835_cstrLit(_1aa364275_StrBuilder* _156817_s, jule::Str _156832_ctx) {
	_1aa36d2e5_WriteByte(_156817_s, '\"');
	_1b1c7c505_cstrBytes(_156817_s, _156832_ctx);
	_1aa36d2e5_WriteByte(_156817_s, '\"');
}



inline void _1b1c7cbcb_ftoa(_1aa364275_StrBuilder* _157414_s, jule::F64 _157429_f, jule::I64 _157437_bitsize) {
	if ((_157437_bitsize != 32LL)) {
		if ((_157429_f == static_cast<jule::F64>(static_cast<jule::I64>(_157429_f)))) {
			_1b1c7ceb7_itoa(_157414_s, static_cast<jule::I64>(static_cast<jule::I64>(_157429_f)));
			return;;
		};
		if ((_157429_f == static_cast<jule::F64>(static_cast<jule::U64>(_157429_f)))) {
			_1b1c7d2a3_utoa(_157414_s, static_cast<jule::U64>(static_cast<jule::U64>(_157429_f)));
			return;;
		};
	};
	jule::Str _15859_m = _1ad355ae3_FmtFloat(_157429_f, 'f', -1LL, _157437_bitsize);;
	_1aa36d03c_WriteStr(_157414_s, _15859_m);
	if ((!(_1aa35462d_Contains(_15859_m, jule::Str(".", 1))))) {
		_1aa36d03c_WriteStr(_157414_s, jule::Str(".0", 2));
	};
}



inline void _1b1c7ceb7_itoa(_1aa364275_StrBuilder* _159214_s, jule::I64 _159229_x) {
	{
		
		if ((_159229_x == jule::MAX_I64)) {
			_case_begin_1b4a0c738:;
			{
				_1aa36d03c_WriteStr(_159214_s, jule::Str("jule::MAX_I64", 13));
				return;;
			}
		}
		else if ((_159229_x == jule::MIN_I64)) {
			_case_begin_1b4a0c7b0:;
			{
				_1aa36d03c_WriteStr(_159214_s, jule::Str("jule::MIN_I64", 13));
				return;;
			}
		}
		_match_end_1b4a0c628:;
	};
	_1aa36d03c_WriteStr(_159214_s, _1ad36c5bb_FmtInt(_159229_x, 10LL));
	if (_1aa539170_Is64Bit(jule::Str("amd64", 5))) {
		_1aa36d2e5_WriteByte(_159214_s, 'L');
	};
	_1aa36d2e5_WriteByte(_159214_s, 'L');
}



inline void _1b1c7d2a3_utoa(_1aa364275_StrBuilder* _160914_s, jule::U64 _160929_x) {
	{
		
		if ((_160929_x == jule::MAX_U64)) {
			_case_begin_1b4a0e8b1:;
			{
				_1aa36d03c_WriteStr(_160914_s, jule::Str("jule::MAX_U64", 13));
				return;;
			}
		}
		_match_end_1b4a0e7b2:;
	};
	_1aa36d03c_WriteStr(_160914_s, _1ad36c203_FmtUint(_160929_x, 10LL));
	if (_1aa539170_Is64Bit(jule::Str("amd64", 5))) {
		_1aa36d2e5_WriteByte(_160914_s, 'L');
	};
	_1aa36d03c_WriteStr(_160914_s, jule::Str("LU", 2));
}



inline jule::Bool _1b1c7d67c_isForwarded(jule::Ptr<_1b0549048_Scope>* _162317_s) {
	jule::Any _16249_last = (*(_162317_s)).get()._field_Stmts[((*(_162317_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _16249_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b4a119a1:;
			{
				{
					auto &_match_expr{ _16249_last.cast_ptr<_1b0612672_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b4a11c7b:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b4a126e9:;
						{
							return false;;
						}
					}
					_match_end_1b4a12694:;
				};
			}
		}
		else {
			_case_begin_1b4a11aa0:;
			{
				return true;;
			}
		}
		_match_end_1b4a112ca:;
	};
}



inline jule::Bool _1b1c7d946_isBuiltinCallHasDebuginf(jule::Ptr<_1b04ec00c_FnCallExprModel>* _163830_m) {
	if ((!(_1b050cc87_IsBuiltin((*(_163830_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_163830_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b4a12d59:;
			{
				return (*(_163830_m)).get()._field_Expr.cast_ptr<_1b0500cad_CommonSubIdentExprModel>(&__jule_any_type73).get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1b4a13387:;
			{
				return false;;
			}
		}
		_match_end_1b4a13332:;
	};
}



inline jule::Bool _1b1c7dc10_isExprComesFromBind(jule::Ptr<_1b0612672_Data>* _165025_d) {
	{
		auto &_match_expr{ (*(_165025_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b4a14454:;
			{
				return (*(_165025_d)).get()._field_Model.cast_ptr<_1b05ae1bd_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b4a144ba:;
			{
				return (*(_165025_d)).get()._field_Model.cast_ptr<_1b04eea9d_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1b4a13b29:;
			{
				return false;;
			}
		}
		_match_end_1b4a13ac4:;
	};
}



inline jule::Bool _1b1c7dec9_isAny(jule::Ptr<_1b06477a6_TypeKind>* _166215_t) {
	if ((_1b064abd8_TypeEnum((*(_166215_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1b0650627_Prim> _16669_prim = _1b064a19e_Prim((*(_166215_t)).ptr());;
	return ((_16669_prim != nullptr) && _1b0653d45_IsAny(_16669_prim.ptr()));;
}



inline void _1b10080ab_iterFiles(jule::Ptr<_1b056d3ad_Package>* _139019_pkg, jule::Fn<void(jule::Ptr<_1b060c44c_SymbolTable>*)> _139034_f) {
	{
		auto expr = &((*(_139019_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b484024c:;
		if (it != expr_end) {
			jule::Ptr<_1b060c44c_SymbolTable> _139117_file = *it;
			{
				_139034_f(&(_139117_file));
			}
			_iter_next_1b484024c:;
			++it;
			goto _iter_begin_1b484024c;
		}
		_iter_end_1b484024c:;
	};
}



inline jule::Str _1b10083b9_concatAllParts(jule::Slice<jule::Ptr<_1aa49b1d1_Token>> _139719_parts) {
	jule::I64 _139813_n = 0LL;;
	{
		auto expr = &(_139719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b48413e6:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_139912_part = it;
			{
				_139813_n+=(*(_139912_part)).get()._field_Kind.len();
			}
			_iter_next_1b48413e6:;
			++it;
			goto _iter_begin_1b48413e6;
		}
		_iter_end_1b48413e6:;
	};
	if ((_139813_n == 0LL)) {
		return jule::Str();;
	};
	_1aa364275_StrBuilder _140513_s = static__1aa364594_New(_139813_n);;
	{
		auto expr = &(_139719_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4840cdb:;
		if (it != expr_end) {
			jule::Ptr<_1aa49b1d1_Token> *_140612_p = it;
			{
				_1aa36d03c_WriteStr(&_140513_s, (*(_140612_p)).get()._field_Kind);
			}
			_iter_next_1b4840cdb:;
			++it;
			goto _iter_begin_1b4840cdb;
		}
		_iter_end_1b4840cdb:;
	};
	return _1aa36d834_Str(&_140513_s);;
}



inline jule::Bool _1b100873d_containsTraitMethod(jule::Ptr<_1b051bb97_Trait>* _141329_t, jule::Str* _141341_ident) {
	{
		auto expr = &((*(_141329_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4841bee:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _141412_m = *it;
			{
				if ((_141412_m.get()._field_Ident == (*(_141341_ident)))) {
					return true;;
				};
			}
			_iter_next_1b4841bee:;
			++it;
			goto _iter_begin_1b4841bee;
		}
		_iter_end_1b4841bee:;
	};
	return false;;
}



inline void _1b1008a6d_pushMethodsFromInherit(jule::Ptr<_1b051bb97_Trait>* _142532_dest, jule::Ptr<_1b051bb97_Trait>* _142551_src) {
	_1b1008d59_pushMethodsFromInherits(_142532_dest, _142551_src);
	{
		auto expr = &((*(_142551_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b108d5:;
		if (it != expr_end) {
			jule::Ptr<_1b05088ed_Fn> _142717_m = *it;
			{
				if ((!(_1b100873d_containsTraitMethod(_142532_dest, &(_142717_m.get()._field_Ident))))) {
					{ jule::Slice<jule::Ptr<_1b05088ed_Fn>> &__jule_push_dest = (*(_142532_dest)).get()._field_Methods; __jule_push_dest.push(_142717_m); };
				};
			}
			_iter_next_1b4b108d5:;
			++it;
			goto _iter_begin_1b4b108d5;
		}
		_iter_end_1b4b108d5:;
	};
}



inline void _1b1008d59_pushMethodsFromInherits(jule::Ptr<_1b051bb97_Trait>* _143633_dest, jule::Ptr<_1b051bb97_Trait>* _143652_src) {
	{
		auto expr = &((*(_143652_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b11089:;
		if (it != expr_end) {
			jule::Ptr<_1b064ec20_TypeSymbol> _143717_inh = *it;
			{
				jule::Ptr<_1b051bb97_Trait> _143817_t2 = _1b064b9a8_Trait(_143717_inh.get()._field_Kind.ptr());;
				_1b1008a6d_pushMethodsFromInherit(_143633_dest, &(_143817_t2));
			}
			_iter_next_1b4b11089:;
			++it;
			goto _iter_begin_1b4b11089;
		}
		_iter_end_1b4b11089:;
	};
}



inline jule::Bool _1b1009123_isOpMethod(jule::Ptr<_1b05088ed_Fn>* _144416_m) {
	if ((((*(_144416_m)).get()._field_Generics.len() > 0LL) || ((*(_144416_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1b050b802_FnIns> _14489_mi = (*(_144416_m)).get()._field_Instances[0LL];;
	;
	;
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_14489_mi == _14489_mi.get()._field_Owner.get()._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1b10093dc_isHeadDecl(jule::Ptr<_1b05088ed_Fn>* _146020_m) {
	if ((((*(_146020_m)).get()._field_Generics.len() > 0LL) || ((*(_146020_m)).get()._field_Instances.len() == 0LL))) {
		return false;;
	};
	if (_1b1009123_isOpMethod(_146020_m)) {
		return true;;
	};
	jule::Ptr<_1b050b802_FnIns> _146713_mi = (*(_146020_m)).get()._field_Instances[0LL];;
	;
	return static__1b05b0620_Dispose(_1b04e69b8_FindMethod(_146713_mi.get()._field_Owner.ptr(), jule::Str("Dispose", 7), false));;
}



inline jule::Ptr<_1b04884b5_Directive> _1b1018055_findDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _48023_directives, jule::Str _48054_tag) {
	{
		auto expr = _48023_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b3bdc82b:;
		if (it != expr_end) {
			jule::Ptr<_1b04884b5_Directive> _48117_dr = *it;
			{
				if ((_48117_dr.get()._field_Tag.get()._field_Kind == _48054_tag)) {
					return _48117_dr;;
				};
			}
			_iter_next_1b3bdc82b:;
			++it;
			goto _iter_begin_1b3bdc82b;
		}
		_iter_end_1b3bdc82b:;
	};
	return nullptr;;
}



inline jule::Bool _1b101841d_hasDirective(jule::Slice<jule::Ptr<_1b04884b5_Directive>>* _49018_directives, jule::Str _49049_tag) {
	return (_1b1018055_findDirective(_49018_directives, _49049_tag) != nullptr);;
}



inline jule::Bool _1b10186d7_shouldInitialized(jule::Ptr<_1b06477a6_TypeKind>* _49727_t) {
	jule::Ptr<_1b0650627_Prim> _4989_prim = _1b064a19e_Prim((*(_49727_t)).ptr());;
	if ((_4989_prim != nullptr)) {
		return ((!(_1b0653d45_IsAny(_4989_prim.ptr()))) && (!(_1b0653aae_IsStr(_4989_prim.ptr()))));;
	};
	{
		
		if ((_1b064a435_Sptr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be0103:;
			{
				return false;;
			}
		}
		else if ((_1b064bc3e_Map((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be0169:;
			{
				return false;;
			}
		}
		else if ((_1b064b205_Slc((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be01e1:;
			{
				return false;;
			}
		}
		else if ((_1b064b9a8_Trait((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be0268:;
			{
				return false;;
			}
		}
		else if ((_1b064b48b_Fn((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be02e0:;
			{
				return false;;
			}
		}
		else if ((_1b064ae6e_Arr((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be0367:;
			{
				jule::Ptr<_1b0656e47_Arr> _51417_arr = _1b064ae6e_Arr((*(_49727_t)).ptr());;
				return _1b10186d7_shouldInitialized(&(_51417_arr.get()._field_Elem));;
			}
		}
		else if ((_1b064b722_Struct((*(_49727_t)).ptr()) != nullptr)) {
			_case_begin_1b3be03de:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b3bde498:;
			{
				return true;;
			}
		}
		_match_end_1b3bde8d8:;
	};
}



inline void _1aa6445dd_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _1aa644863_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1aa6445dd_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _1aa644401_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1aa644401_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b66089:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1b4b66089:;
			++it;
			goto _iter_begin_1b4b66089;
		}
		_iter_end_1b4b66089:;
	};
	_1aa364275_StrBuilder _4913_s = static__1aa364594_New(32LL);;
	;
	{
		auto expr = &(_1aa644401_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b67882:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_1aa36d03c_WriteStr(&_4913_s, (*(_5112_part))[0LL]);
				_1aa36d03c_WriteStr(&_4913_s, _1aa34db33_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL))));
				_1aa36d03c_WriteStr(&_4913_s, (*(_5112_part))[1LL]);
				if (((_519_i + 1LL) < 5LL)) {
					_1aa36d2e5_WriteByte(&_4913_s, '\n');
				};
			}
			_iter_next_1b4b67882:;
			++it;
			_519_i++;
			goto _iter_begin_1b4b67882;
		}
		_iter_end_1b4b67882:;
	};
	jule::outln(_4913_s);
}



inline void _1aa644a94_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1aa6445dd_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _1aa644c92_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _1aa644e18_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _1aa645149_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1aa6445dd_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b4b6da31:;
			{
				_1aa644c92_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b4b6d954:;
			{
				_1aa644e18_toolDistarch();
			}
		}
		else {
			_case_begin_1b4b6d0b3:;
			{
				_1aa6445dd_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1b4b6d514:;
	};
}



inline void _1aa64537a_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1aa6445dd_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _1d36457e7_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _1d3646d37_CppStd));
}



inline void _1aa645688_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1aa6445dd_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b4b7223d:;
			{
				({
					auto except = static__1ba10cbe0_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1aa6445dd_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b4b71b33:;
			{
				_1aa6445dd_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b4b71c87:;
	};
}



inline jule::Bool _1aa645952_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b4b737c2:;
			{
				_1aa644863_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b4b73838:;
			{
				_1aa644a94_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b4b7389e:;
			{
				_1aa645149_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b4b73915:;
			{
				_1aa64537a_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b4b7310c:;
			{
				_1aa645688_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b4b73096:;
			{
				return false;;
			}
		}
		_match_end_1b4b7298b:;
	};
	return true;;
}



inline void _1aa645ac8_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _1ba1d1a0b_Args();;
	if ((_18913_args.len() < 2LL)) {
		_1aa645ac8_showInfo();
		return;;
	};
	if (_1aa645952_processCommand(&(_18913_args))) {
		return;;
	};
	_1b1089604_compileCommand(&(_18913_args));
}



inline void _1b1086403_init(void) {
	_1d36457e7_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_1ba10bd87_File> _1b10866cd_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _1aa372382_Dir((*(_4316_path)));;
	({
		auto except = static__1ba10193c_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__1aa374906_Create(_449_dir);
				if (!except.ok()) {
					_1b13c8734_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1ba10c580_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1b13c8734_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1b1086854_clearObjects(void) {
	({
		auto except = static__1ba1000ab_Remove(_1b1087a53_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__1aa374b37_Remove(_1b1085ba5_OutDir);
}



inline void _1b1086b84_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_1aa5dd257_Cmd> _7313_cmd = static__1aa5dd675_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_1aa3542a9_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _1aa5dd873_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b4b79a81:;
					{
						static__1b13c4ab5_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b4b791ac:;
					{
						static__1b13c4ab5_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b4b793bb:;
					{
						static__1b13c4ab5_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b4b79322:;
			};
			_1b13c8734_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _1aa5ddd07_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _1d36457e7_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1b13c4ab5_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1b13c8734_Throw(jule::Str());
	};
	_1b1086854_clearObjects();
}



inline jule::Bool _1b1086e4d_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _1aa352b15_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _1aa3b6c78_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1b108717e_pushCompCmdClang(_1aa364275_StrBuilder* _10726_cmd) {
	_1aa36d03c_WriteStr(_10726_cmd, jule::Str("-Wno-everything ", 16));
	_1aa36d03c_WriteStr(_10726_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _1d3646d37_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b4b7c413:;
			{
				_1aa36d03c_WriteStr(_10726_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b4b7d3d1:;
			{
				_1aa36d03c_WriteStr(_10726_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b4b7d447:;
			{
				_1aa36d03c_WriteStr(_10726_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_1b4b7c930:;
	};
	_1aa36d2e5_WriteByte(_10726_cmd, ' ');
	if (_1d36480ad_Production) {
		_1aa36d03c_WriteStr(_10726_cmd, jule::Str("-O3 ", 4));
		_1aa36d03c_WriteStr(_10726_cmd, jule::Str("-flto ", 6));
		_1aa36d03c_WriteStr(_10726_cmd, jule::Str("-DNDEBUG ", 9));
		_1aa36d03c_WriteStr(_10726_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_1aa36d03c_WriteStr(_10726_cmd, jule::Str("-O0 ", 4));
	};
}



inline void _1b10873b0_pushCompCmdGcc(_1aa364275_StrBuilder* _13324_cmd) {
	_1aa36d03c_WriteStr(_13324_cmd, jule::Str("-w ", 3));
	_1aa36d03c_WriteStr(_13324_cmd, jule::Str("--std=", 6));
	{
		auto &_match_expr{ _1d3646d37_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b4b81527:;
			{
				_1aa36d03c_WriteStr(_13324_cmd, jule::Str("c++14", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b4b7ea64:;
			{
				_1aa36d03c_WriteStr(_13324_cmd, jule::Str("c++17", 5));
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b4b7eaca:;
			{
				_1aa36d03c_WriteStr(_13324_cmd, jule::Str("c++20", 5));
			}
		}
		_match_end_1b4b814c2:;
	};
	_1aa36d2e5_WriteByte(_13324_cmd, ' ');
	if (_1d36480ad_Production) {
		_1aa36d03c_WriteStr(_13324_cmd, jule::Str("-O3 ", 4));
		_1aa36d03c_WriteStr(_13324_cmd, jule::Str("-DNDEBUG ", 9));
		_1aa36d03c_WriteStr(_13324_cmd, jule::Str("-fomit-frame-pointer ", 21));
	} else {
		_1aa36d03c_WriteStr(_13324_cmd, jule::Str("-O0 ", 4));
	};
}



inline __jule_tuple_str__jule_tuple_str _1b1087844_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1b11eb5ce_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_1d3646ad4_CompilerPath);;
	_1aa364275_StrBuilder _16113_cmd = static__1aa364594_New(64LL);;
	{
		auto &_match_expr{ _1d36457e7_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b4b844c5:;
			{
				_1b10873b0_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b4b8499d:;
			{
				_1b108717e_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1b4b846b2:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b8533e:;
		if (it != expr_end) {
			jule::Ptr<_1b056a487_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1b1086e4d_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_1aa36d03c_WriteStr(&_16113_cmd, (*(_17112_u)).get()._field_Path);
					_1aa36d2e5_WriteByte(&_16113_cmd, ' ');
				};
			}
			_iter_next_1b4b8533e:;
			++it;
			goto _iter_begin_1b4b8533e;
		}
		_iter_end_1b4b8533e:;
	};
	if ((!(_1b1086249_Out.empty()))) {
		_1aa36d03c_WriteStr(&_16113_cmd, jule::Str("-o ", 3));
		_1aa36d03c_WriteStr(&_16113_cmd, _1b1086249_Out);
		_1aa36d2e5_WriteByte(&_16113_cmd, ' ');
	};
	_1aa36d03c_WriteStr(&_16113_cmd, _15918_sourcePath);
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b4b872a8:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				_1aa36d2e5_WriteByte(&_16113_cmd, ' ');
				_1aa36d03c_WriteStr(&_16113_cmd, (*(_18612_pass)));
			}
			_iter_next_1b4b872a8:;
			++it;
			goto _iter_begin_1b4b872a8;
		}
		_iter_end_1b4b872a8:;
	};
	if (_1aa6411cd_Os.equal("windows", 7)) {
		_1aa36d03c_WriteStr(&_16113_cmd, jule::Str(" -lshell32", 10));
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _1aa36d834_Str(&_16113_cmd);
	return __jule_func_result;;
}



inline jule::Str _1b1087a53_getCompilePath(void) {
	return _1aa37168e_Join(jule::Slice<jule::Str>::make({_1b1085ba5_OutDir,_1b1085e80_OutName}));;
}



inline void _1b1087c84_applyTargetIndependentOptimizations(jule::Ptr<_1b11eb5ce_IR>* _20545_ir) {
	jule::Ptr<_1b139ca9e_Optimizer> _20613_opt = static__1b139cede_New(_20545_ir);;
	_1b139e5c8_Optimize(_20613_opt.ptr());
}



inline void _1b1087e0a_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1d36457e7_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b4b88e25:;
			{
				_1b13c8734_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b4b89860:;
			{
				if (_1d3646ad4_CompilerPath.empty()) {
					_1d3646ad4_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b4b89541:;
			{
				if (_1d3646ad4_CompilerPath.empty()) {
					_1d3646ad4_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b4b894ca:;
			{
				_1b13c8734_Throw((jule::Str("invalid option value for --compiler: ", 37) + _1d36457e7_Compiler));
			}
		}
		_match_end_1b4b89277:;
	};
}



inline void _1b108813b_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1b13c8734_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1b108836c_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1b13c8734_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1b108859d_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1b13c8734_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _1aa3542a9_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1b13c8734_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1b108836c_checkTargetOs(_25310_os);
		_1aa6411cd_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1b108813b_checkTargetArch(_25314_arch);
		_1aa641497_Arch=_25314_arch;
	};
	_1ad371cda_UpdateTarget();
}



inline void _1b10887ce_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1b13c8734_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b4b90d0b:;
			{
				goto _match_end_1b4b90d94;
			}
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b4b9127e:;
			{
				_1b1204560_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else if (_match_expr == jule::Str("L2", 2)) {
			_case_begin_1b4b912e5:;
			{
				_1b1204560_PushOptLevel(static_cast<jule::I64>(2LL));
			}
		}
		else {
			_case_begin_1b4b91218:;
			{
				_1b13c8734_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1b4b90d94:;
	};
}



inline void _1b1088b64_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1d3646d37_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b4b9135b:;
			{
				goto _match_end_1b4b92439;
			}
		}
		else {
			_case_begin_1b4b9211a:;
			{
				_1b13c8734_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _1d3646d37_CppStd));
			}
		}
		_match_end_1b4b92439:;
	};
}



inline jule::Slice<jule::Str> _1b1088dc8_checkFlags(jule::Slice<jule::Str>* _29416_args) {
	jule::Str _29513_opt = jule::Str("L0", 2);;
	jule::Str _29613_target = jule::Str("native-native", 13);;
	jule::Ptr<_1b1080ba0_FlagSet> _29813_fs = static__1b1080e8b_New();;
	_1b48a9195_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29513_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1b48a9195_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29613_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1b48a9195_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1b1086249_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d36470bd_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d3647387_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1b48a9195_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d36457e7_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1b48a9195_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d3646ad4_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d36480ad_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d364791a_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d3647ce4_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1b48a9195_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1d3646d37_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b12026d4_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b12029e2_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b1202cab_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b12030b9_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b1203383_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b120364c_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b1203916_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b1203ce0_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b12040a9_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	_1b48b228b_AddVar(_29813_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1b1204373_StdInternalNosafe)))), jule::Str("opt-internal-nosafe", 19), 0LL, jule::Str("Special optimizations for std::internal::nosafe", 47));
	jule::Slice<jule::Str> _32213_content = ({
		auto except = _1b1081d27_Parse(_29813_fs.ptr(), (*(_29416_args)));
		(except.ok()) ? (except.result) : ({
			_1b13c8734_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1b1087e0a_checkCompilerFlag();
	_1b1088b64_checkCppStdFlag();
	_1b108859d_checkTargetFlag(&(_29613_target));
	_1b10887ce_checkOptFlag(&(_29513_opt));
	return _32213_content;;
}



inline void _1b1089109_setupSemaFlags(jule::I64* _33524_flags) {
	if (_1d36470bd_Shadowing) {
		(*(_33524_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1b11eb5ce_IR> _1b10893c3_buildIr(jule::Slice<jule::Str>* _34113_args) {
	jule::Slice<jule::Str> _3429_content = _1b1088dc8_checkFlags(_34113_args);;
	jule::I64 _34413_semaFlags = static_cast<jule::I64>(0LL);;
	_1b1089109_setupSemaFlags(&(_34413_semaFlags));
	if ((_3429_content.len() == 0LL)) {
		_1b13c8734_Throw(_1aa3c3e83_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3429_content.len() > 1LL)) {
		_1b13c8734_Throw((jule::Str("undefined content: ", 19) + _3429_content[1LL]));
	};
	jule::Str _35214_path;;
	jule::Bool _35220_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1aa371c22_Abs(_3429_content[0LL]);
		_35214_path = __jule_assign_result.__jule_result_arg0;
		_35220_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_35220_ok))) {
		_1b13c8734_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_1ba10e681_Status> _3589_inf = ({
		auto except = static__1ba10193c_Of(_1aa6405ea_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1b13c8734_Throw(_1aa3c3e83_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_1ba10e681_Status>(nullptr);});
	});;
	if ((!(_1ba10ea5a_IsDir(_3589_inf.ptr())))) {
		_1b13c8734_Throw(_1aa3c3e83_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1b11eb5ce_IR> _36614_ir;;
	jule::Slice<_1aa3c3a21_Log> _36618_logs;;
	({
		__jule_tuple_x_1b11eb5ce_IR__jule_tuple_s_1aa3c3a21_Log __jule_assign_result = static__1b11eba41_Build(_35214_path, _34413_semaFlags);
		_36614_ir = __jule_assign_result.__jule_result_arg0;
		_36618_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36614_ir == nullptr) && (_36618_logs == nullptr))) {
		_1b13c8734_Throw(_1aa3c3e83_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_35214_path, &__jule_any_type5)})));
	};
	if ((_36618_logs != nullptr)) {
		static__1b13c7c61_PrintLogs(&(_36618_logs));
		_1b13c8734_Throw(jule::Str());
	};
	return _36614_ir;;
}



inline void _1b1089604_compileCommand(jule::Slice<jule::Str>* _38124_args) {
	(*(_38124_args))=(*(_38124_args)).slice(1LL);
	if ((*(_38124_args))[0LL].equal("test", 4)) {
		_1d3647651_Test=true;
		(*(_38124_args))=(*(_38124_args)).slice(1LL);
	};
	jule::Ptr<_1b11eb5ce_IR> _38713_ir = _1b10893c3_buildIr(_38124_args);;
	;
	if ((!(_1d3647651_Test))) {
		jule::Ptr<_1b05088ed_Fn> _39217_main = _1b056e942_FindFn(_38713_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_39217_main == nullptr)) {
			_1b13c8734_Throw(_1aa3c3e83_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1b1087c84_applyTargetIndependentOptimizations(&(_38713_ir));
	_1b11ecaa8_Order(_38713_ir.ptr());
	jule::Str _4039_compPath = _1b1087a53_getCompilePath();;
	jule::Str _40410_compiler;;
	jule::Str _40420_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1b1087844_genCompileCmd(_4039_compPath, &(_38713_ir));
		_40410_compiler = __jule_assign_result.__jule_result_arg0;
		_40420_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1b0eeaab5_ObjectCoder> _40613_oc = static__1b0eeaeb1_New(&(_38713_ir), _1b0ee8ec0_SerializationInfo{._field_Compiler=_40410_compiler, ._field_CompilerCommand=_40420_compilerCmd});;
	if (_1d3647651_Test) {
		jule::Ptr<_1b1c812a6_TestCoder> _41117_tc = static__1b1c816e6_New(&(_40613_oc));;
		_1b1c82a6b_Serialize(_41117_tc);
	} else {
		_1b1007bc1_Serialize(_40613_oc);
	};
	jule::Ptr<_1ba10bd87_File> _41713_file = _1b10866cd_openOutput(&(_4039_compPath));;
	({
		auto except = _1ba100540_Write(_41713_file.ptr(), _1aa36e2d5_Buf(&_40613_oc.get()._field_Obj));
		if (!except.ok()) {
			_1b13c8734_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _1ba10db25_Close(_41713_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:421:5"));
	});
	if ((!(_1d3647387_Transpilation))) {
		_1b1086b84_compileIr(_40410_compiler, _40420_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1aa6415c9_init();
	_1ad371e61_init();
	_1b1086403_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}