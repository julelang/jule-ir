// Auto generated by JuleC.
// JuleC version: jule0.0.15 @master
// Date: 24/7/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include "std/jule/integrated/integrated.hpp"                                   
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   


struct _1d21502d1_comptimeRangeKind{};
struct _1d21903cb_Importer{};
struct _1d21d18d4_Kind{};
struct _1d2200172_Lookup{};
struct _1d2a64b90_CommonFlag{};
struct _22b87db91_Range16;
struct _22b87e114_Range32;
struct _22b87e587_RangeTable;
struct _22b962bdc_acceptRange;
struct _22b9a406e_lazyBuff;
struct _22a8aadbc_DirEntry;
struct _22a8ab131_Directory;
struct _22a8b8490_File;
struct _22a8baa8b_Status;
struct _22bb1d529_cmdAttrs;
struct _22ba3c6bd_Log;
struct _22be1281d_Token;
struct _22be17ba8_File;
struct _22be1998a_kindPair;
struct _22be204eb_lex;
struct _1e76be42d_floatInfo;
struct _1e76c0055_decimalSlice;
struct _1e76d1473_leftCheat;
struct _1e76d1e46_decimal;
struct _1e76e5cc3_Const;
struct _1d05aa7a4_Ast;
struct _1d05ab651_Node;
struct _1d05aba4c_Directive;
struct _1d05de563_TypeDecl;
struct _1d05deb29_IdentTypeDecl;
struct _1d05dee15_SubIdentTypeDecl;
struct _1d05e0289_NamespaceTypeDecl;
struct _1d05e0575_SptrTypeDecl;
struct _1d05e0971_SlcTypeDecl;
struct _1d05e0c5c_TupleTypeDecl;
struct _1d05e1048_PtrTypeDecl;
struct _1d05e171e_ArrTypeDecl;
struct _1d05e1e28_MapTypeDecl;
struct _1d05e22d0_RetTypeDecl;
struct _1d05e36dd_Expr;
struct _1d05e39c9_RangeExpr;
struct _1d05e407e_UseExpr;
struct _1d05e436a_TupleExpr;
struct _1d05e4722_LitExpr;
struct _1d05e4d60_UnsafeExpr;
struct _1d05e52d3_IdentExpr;
struct _1d05e59dc_UnaryExpr;
struct _1d05e5d94_VariadicExpr;
struct _1d05e624b_CastExpr;
struct _1d05e6603_NsSelectionExpr;
struct _1d05e6a76_SubIdentExpr;
struct _1d05e6ee9_BinopExpr;
struct _1d05e7604_FnCallExpr;
struct _1d05e8083_FieldExprPair;
struct _1d05e8858_StructLit;
struct _1d05e8ccb_BraceLit;
struct _1d05e9639_KeyValPair;
struct _1d05e9d21_SliceExpr;
struct _1d05ea690_IndexingExpr;
struct _1d05eac9a_SlicingExpr;
struct _1d05eb086_Constraint;
struct _1d05eb509_GenericDecl;
struct _1d05eb8b1_LabelSt;
struct _1d05ebc68_GotoSt;
struct _1d05ec054_FallSt;
struct _1d05ec65e_AssignLeft;
struct _1d05ecb9d_AssignSt;
struct _1d05eda8e_Stmt;
struct _1d05ee199_ScopeTree;
struct _1d05ee870_ParamDecl;
struct _1d0600b90_FnDecl;
struct _1d0601b6e_VarDecl;
struct _1d0602026_RetSt;
struct _1d0602686_Iter;
struct _1d0602e5b_WhileKind;
struct _1d06037ec_RangeKind;
struct _1d0603ba4_BreakSt;
struct _1d060405b_ContSt;
struct _1d06044ce_If;
struct _1d0604886_Else;
struct _1d0604d09_Conditional;
struct _1d06054d0_TypeAliasDecl;
struct _1d0605953_Case;
struct _1d0606129_MatchCase;
struct _1d06068bb_UseDecl;
struct _1d0606d3e_EnumItemDecl;
struct _1d0607867_EnumDecl;
struct _1d060813c_TypeEnumItemDecl;
struct _1d0608747_TypeEnumDecl;
struct _1d06089ab_FieldDecl;
struct _1d0609308_StructDecl;
struct _1d06099ce_TraitDecl;
struct _1d060a0d9_Impl;
struct _1d060b2e9_Field;
struct _1d060d0a9_Operators;
struct _1d060ddbd_Struct;
struct _1d06111de_FieldIns;
struct _1d0615b83_OperandExprModel;
struct _1d061614a_BinopExprModel;
struct _1d0616502_UnaryExprModel;
struct _1d06168ed_StructArgExprModel;
struct _1d0616ca5_StructLitExprModel;
struct _1d06170b3_AllocStructLitExprModel;
struct _1d0617613_CastingExprModel;
struct _1d0617eb5_FnCallExprModel;
struct _1d061836c_SliceExprModel;
struct _1d06187e0_IndexingExprModel;
struct _1d0618b97_AnonFnExprModel;
struct _1d061904e_KeyValPairExprModel;
struct _1d06194c2_MapExprModel;
struct _1d0619a11_SlicingExprModel;
struct _1d061a050_TraitSubIdentExprModel;
struct _1d061a836_StructSubIdentExprModel;
struct _1d061abcc_StructStaticIdentExprModel;
struct _1d061b095_ArrayExprModel;
struct _1d061b381_CommonIdentExprModel;
struct _1d061b8e2_CommonSubIdentExprModel;
struct _1d061bbde_TupleExprModel;
struct _1d061c0b8_BuiltinOutCallExprModel;
struct _1d061c4a3_BuiltinOutlnCallExprModel;
struct _1d061c7c2_BuiltinCloneCallExprModel;
struct _1d061cbac_BuiltinNewCallExprModel;
struct _1d061d097_BuiltinPanicCallExprModel;
struct _1d061d54d_BuiltinAssertCallExprModel;
struct _1d061da04_BuiltinMakeCallExprModel;
struct _1d061ddde_BuiltinAppendCallExprModel;
struct _1d061e20d_BuiltinLenCallExprModel;
struct _1d061e52c_BuiltinCapCallExprModel;
struct _1d061ebd1_BuiltinDeleteCallExprModel;
struct _1d0620044_BuiltinCopyCallExprModel;
struct _1d062042e_BuiltinErrorCallExprModel;
struct _1d062072b_SizeofExprModel;
struct _1d0620a17_AlignofExprModel;
struct _1d0620d03_RuneExprModel;
struct _1d0621111_IntegratedToStrExprModel;
struct _1d06214c9_BackendEmitExprModel;
struct _1d06217b5_FreeExprModel;
struct _1d0622277_RetType;
struct _1d0622981_Param;
struct _1d06242bd_Fn;
struct _1d06260a0_ParamIns;
struct _1d0626e6e_FnIns;
struct _1d0629dc8_ReferenceStack;
struct _1d062b209_Pass;
struct _1d2147141_symbolBuilder;
struct _1d21494c8_Trait;
struct _1d214b266_EnumItem;
struct _1d214bc5b_Enum;
struct _1d214cc90_TypeEnumItem;
struct _1d214d356_TypeEnum;
struct _1d21504ac_comptimeRange;
struct _1d2150ea2_comptimeStructField;
struct _1d2152998_comptimeStructFields;
struct _1d2153ea5_comptimeStatic;
struct _1d21559e0_comptimeStatics;
struct _1d2156ea8_comptimeEnumField;
struct _1d21581c9_comptimeEnumFields;
struct _1d215972a_comptimeParam;
struct _1d215b7c6_comptimeParams;
struct _1d215cc8e_comptimeTypeInfos;
struct _1d215e257_comptimeTypeInfo;
struct _1d2164c52_comptimeValue;
struct _1d216734d_comptimeFiles;
struct _1d2168816_comptimeFile;
struct _1d216c70a_constraintChecker;
struct _1d216e5a8_Impl;
struct _1d2174613_Scope;
struct _1d2174a0e_If;
struct _1d2174cea_Else;
struct _1d217516e_Conditional;
struct _1d217545a_InfIter;
struct _1d21758cd_WhileIter;
struct _1d21762b3_RangeIter;
struct _1d21766ae_ContSt;
struct _1d2176a66_BreakSt;
struct _1d2176d52_Label;
struct _1d217713d_GotoSt;
struct _1d21774e5_Postfix;
struct _1d2177968_Assign;
struct _1d2177d20_MultiAssign;
struct _1d217842a_Match;
struct _1d2178e75_Case;
struct _1d217952a_FallSt;
struct _1d217989e_RetSt;
struct _1d2179ea9_scopeLabel;
struct _1d217a42c_scopeGoto;
struct _1d217b241_scopeChecker;
struct _1d218be99_directiveChecker;
struct _1d219307c_ImportInfo;
struct _1d2195bb7_Package;
struct _1d219a837_commonSemaMeta;
struct _1d219b34e_Sema;
struct _1d21b8404_missingRetChecker;
struct _1d21ba615_IterRelation;
struct _1d21bb65a_Var;
struct _1d21bc408_FuncPattern;
struct _1d03e2993_typeCompatibilityChecker;
struct _1d03e45bb_assignTypeChecker;
struct _1d03e60a1_dynamicTypeAnnotation;
struct _1d03ea968_fnCallArgChecker;
struct _1d03ed372_structLitChecker;
struct _1d03eee56_rangeChecker;
struct _1d0402453_retTypeChecker;
struct _1d040428a_SymbolTable;
struct _1d0408c95_Data;
struct _1d0409d1d_Value;
struct _1d040a813_Eval;
struct _1d062bca9_unaryEval;
struct _1d062d805_binaryEval;
struct _1d21d05b4_InsGeneric;
struct _1d21d10ed_TypeAlias;
struct _1d21d1d46_TypeKind;
struct _1d21d8be9_TypeSymbol;
struct _1d21d9568_Prim;
struct _1d21dccec_Sptr;
struct _1d21dd759_Slc;
struct _1d21de2d7_Tuple;
struct _1d21ded10_Map;
struct _1d21e0904_Arr;
struct _1d21e1361_Ptr;
struct _1d21e22a7_referencer;
struct _1d21e3187_typeChecker;
struct _1d21ea579_identTypeLookup;
struct _1d2592eb5_FileInfo;
struct _1d25dca59_stmt;
struct _1d25dd384_scopeParser;
struct _1d25e9868_exprBuilder;
struct _1d260619e_assignInfo;
struct _1d2609a98_parser;
struct _1d261a7bd_typeBuilder;
struct _1d2004a7b_CompileInfo;
struct _1d2005dce_directiveEval;
struct _1d261e6c3_JuleImporter;
struct _1d2624475_OrderedDefines;
struct _1d26246d9_defineOrderer;
struct _1d075e66c_liveTable;
struct _1d079541c_scopeDeadCode;
struct _1d0799377_exprDeadCode;
struct _1d06556ea_StrCompExprModel;
struct _1d0655ab3_StrAppendExprModel;
struct _1d0655d9e_UnsafeBinopExprModel;
struct _1d0656234_UnsafeIndexingExprModel;
struct _1d06565b9_PushToSliceExprModel;
struct _1d0656b08_MutSlicingExprModel;
struct _1d0656ed2_StrInsertBeginExprModel;
struct _1d06581e2_scopeOptimizer;
struct _1d1ecaea3_exprOptimizer;
struct _1d07a11e7_Optimizer;
struct _1e29a188b_AnsiEscape;
struct _1e29a2e20_Logger;
struct _1b5a6b312_AbsTime;
struct _1b5a6b9a5_Time;
struct _1b56e9e08_scopeCoder;
struct _1b5703351_exprCoder;
struct _1b5712ae1_deriveCoder;
struct _1b57144c7_TestCoder;
struct _1b59d2e27_identCoder;
struct _1b5a74194_SerializationInfo;
struct _1b5a7465b_traitHash;
struct _1b5a74a13_traitCast;
struct _1b5a83868_customType;
struct _1b5a842d6_typeCoder;
struct _1b5a8bd9e_resultCoder;
struct _1b84c6077_Flag;
struct _1b84c9a09_Flag;
struct _1b84cd1b1_Flag;
struct _1b84d18ac_Flag;
struct _1b84d5064_Flag;
struct _1d2a66642_FlagSet;
struct _1b5a936d0_argParser;
struct _1b5a75a36_ObjectCoder;
struct _1d075ea35_ObjectDeadCode;
struct _1d2621e34_IR;
struct _1d0611bd4_StructIns;
struct _22bac9925_Cmd;
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d0408c95_Data__jule_tuple_x_1d0408c95_Data {
	jule::Ptr<_1d0408c95_Data> __jule_result_arg0;
	jule::Ptr<_1d0408c95_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1d0605953_Case__jule_tuple_bool {
	jule::Ptr<_1d0605953_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d0605953_Case__jule_tuple_x_1d0604886_Else {
	jule::Slice<jule::Ptr<_1d0605953_Case>> __jule_result_arg0;
	jule::Ptr<_1d0604886_Else> __jule_result_arg1;
};
struct __jule_tuple__1d05ed85d_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool {
	jule::Ptr<_1d05ecb9d_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1d05de563_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1d05e22d0_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log {
	jule::Slice<jule::Ptr<_1d05aa7a4_Ast>> __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_22ba3c6bd_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d2621e34_IR__jule_tuple_s_22ba3c6bd_Log {
	jule::Ptr<_1d2621e34_IR> __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__21113c954_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I64 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__21113c954_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__21113c954_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::I64 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I64 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I64 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1d040428a_SymbolTable__jule_tuple_s_22ba3c6bd_Log {
	jule::Ptr<_1d040428a_SymbolTable> __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log {
	jule::Ptr<_1d2195bb7_Package> __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log {
	jule::Ptr<_1d05aa7a4_Ast> __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_22be1281d_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_22be1281d_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token {
	jule::Slice<jule::Ptr<_22be1281d_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_22be1281d_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_22be1281d_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_22be1281d_Token>> __jule_result_arg0;
	jule::I64 __jule_result_arg1;
};
struct __jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> __jule_result_arg0;
	jule::Slice<_22ba3c6bd_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct _22b87db91_Range16 {
	jule::U16 _field_Lo = 0;
	jule::U16 _field_Hi = 0;
	jule::U16 _field_Stride = 0;
	

	_22b87db91_Range16(void) = default;

	inline bool operator==(_22b87db91_Range16 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22b87db91_Range16 _other) { return !this->operator==(_other); }


};
struct _22b87e114_Range32 {
	jule::U32 _field_Lo = 0;
	jule::U32 _field_Hi = 0;
	jule::U32 _field_Stride = 0;
	

	_22b87e114_Range32(void) = default;

	inline bool operator==(_22b87e114_Range32 _other) {
		return 
			this->_field_Lo == _other._field_Lo &&
			this->_field_Hi == _other._field_Hi &&
			this->_field_Stride == _other._field_Stride;
	}

	inline bool operator!=(_22b87e114_Range32 _other) { return !this->operator==(_other); }


};
struct _22b87e587_RangeTable {
	jule::Slice<_22b87db91_Range16> _field_R16;
	jule::Slice<_22b87e114_Range32> _field_R32;
	jule::I64 _field_LatinOffset = 0;
	

	_22b87e587_RangeTable(void) = default;


};
struct _22b962bdc_acceptRange {
	jule::U8 _field_lo = 0;
	jule::U8 _field_hi = 0;
	

	_22b962bdc_acceptRange(void) = default;

	inline bool operator==(_22b962bdc_acceptRange _other) {
		return 
			this->_field_lo == _other._field_lo &&
			this->_field_hi == _other._field_hi;
	}

	inline bool operator!=(_22b962bdc_acceptRange _other) { return !this->operator==(_other); }


};
inline jule::U8 _22b9a44e2_index(_22b9a406e_lazyBuff*, jule::I64);
inline void _22b9a4767_append(_22b9a406e_lazyBuff*, jule::U8);
inline jule::Str _22b9a49cb_string(_22b9a406e_lazyBuff*);
struct _22b9a406e_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I64 _field_w = 0;
	jule::Str _field_volAndPath;
	jule::I64 _field_volLen = 0;
	

	_22b9a406e_lazyBuff(void) = default;


};
struct _22a8aadbc_DirEntry {
	jule::Str _field_Name;
	jule::Ptr<_22a8baa8b_Status> _field_Stat;
	

	_22a8aadbc_DirEntry(void) = default;

	inline bool operator==(_22a8aadbc_DirEntry _other) {
		return 
			this->_field_Name == _other._field_Name &&
			this->_field_Stat == _other._field_Stat;
	}

	inline bool operator!=(_22a8aadbc_DirEntry _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>> static__22b9a8480_Read(jule::Str);
inline jule::VoidExceptional static__22b9a868e_Create(jule::Str);
inline jule::VoidExceptional static__22b9a889d_Remove(jule::Str);
struct _22a8ab131_Directory {
	

	_22a8ab131_Directory(void) = default;

	inline bool operator==(_22a8ab131_Directory _other) { return true; }

	inline bool operator!=(_22a8ab131_Directory _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_22a8b8490_File>> static__22a8a9dee_Open(jule::Str, jule::I64, jule::I64);
inline jule::VoidExceptional static__22a8aa10d_Remove(jule::Str);
inline jule::Exceptional<jule::I64> _22a8aa51a_Write(_22a8b8490_File*, jule::Slice<jule::U8>);
inline jule::Exceptional<jule::I64> _22a8aa828_Read(_22a8b8490_File*, jule::Slice<jule::U8>);
inline jule::Ptr<_22a8b8490_File> static__22a8b8902_New(jule::Uintptr);
inline jule::Exceptional<jule::Ptr<_22a8b8490_File>> static__22a8b8b99_Create(jule::Str);
inline jule::Exceptional<jule::Slice<jule::U8>> static__22a8b8e41_Read(jule::Str);
inline jule::VoidExceptional static__22a8b9293_Write(jule::Str, jule::Slice<jule::U8>, jule::I64);
inline jule::VoidExceptional static__22a8b95e5_WriteStr(jule::Str, jule::Str*, jule::I64);
inline jule::Exceptional<jule::I64> _22a8b9aac_Seek(_22a8b8490_File*, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _22a8b9dba_WriteStr(_22a8b8490_File*, jule::Str*);
inline jule::VoidExceptional _22a8ba096_Close(_22a8b8490_File*);
struct _22a8b8490_File {
	jule::Uintptr _field_handle = 0;
	

	_22a8b8490_File(void) = default;

	inline bool operator==(_22a8b8490_File _other) {
		return 
			this->_field_handle == _other._field_handle;
	}

	inline bool operator!=(_22a8b8490_File _other) { return !this->operator==(_other); }


};
inline jule::Exceptional<jule::Ptr<_22a8baa8b_Status>> static__22a8ab8a1_Of(jule::Str);
inline jule::Bool _22a8bae98_IsDir(_22a8baa8b_Status*);
inline jule::Bool _22a8bb20c_IsReg(_22a8baa8b_Status*);
inline jule::U64 _22a8bb471_Size(_22a8baa8b_Status*);
struct _22a8baa8b_Status {
	jule::I64 _field_mode = 0LL;
	jule::U64 _field_size = 0;
	

	_22a8baa8b_Status(void) = default;

	inline bool operator==(_22a8baa8b_Status _other) {
		return 
			this->_field_mode == _other._field_mode &&
			this->_field_size == _other._field_size;
	}

	inline bool operator!=(_22a8baa8b_Status _other) { return !this->operator==(_other); }


};
struct _22bb1d529_cmdAttrs {
	jule::I64 _field_pid = -1LL;
	

	_22bb1d529_cmdAttrs(void) = default;

	inline bool operator==(_22bb1d529_cmdAttrs _other) {
		return 
			this->_field_pid == _other._field_pid;
	}

	inline bool operator!=(_22bb1d529_cmdAttrs _other) { return !this->operator==(_other); }


};
struct _22ba3c6bd_Log {
	jule::I64 _field_Kind = 0LL;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
	

	_22ba3c6bd_Log(void) = default;

	inline bool operator==(_22ba3c6bd_Log _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Path == _other._field_Path &&
			this->_field_Text == _other._field_Text &&
			this->_field_Line == _other._field_Line &&
			this->_field_Suggestion == _other._field_Suggestion;
	}

	inline bool operator!=(_22ba3c6bd_Log _other) { return !this->operator==(_other); }


};
inline jule::U8 _22be12bc5_Prec(_22be1281d_Token*);
struct _22be1281d_Token {
	jule::Ptr<_22be17ba8_File> _field_File;
	jule::I64 _field_Row = 0;
	jule::I64 _field_Column = 0;
	jule::Str _field_Kind;
	jule::U64 _field_Id = 0LLU;
	

	_22be1281d_Token(void) = default;

	inline bool operator==(_22be1281d_Token _other) {
		return 
			this->_field_File == _other._field_File &&
			this->_field_Row == _other._field_Row &&
			this->_field_Column == _other._field_Column &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Id == _other._field_Id;
	}

	inline bool operator!=(_22be1281d_Token _other) { return !this->operator==(_other); }


};
inline void _22be180b5_Fill(_22be17ba8_File*, jule::Slice<jule::U8>);
inline jule::Str _22be18329_Dir(_22be17ba8_File*);
inline jule::Str _22be1858d_Name(_22be17ba8_File*);
inline jule::Uintptr _22be18802_Addr(_22be17ba8_File*);
inline jule::Str _22be18b10_GetRow(_22be17ba8_File*, jule::I64);
struct _22be17ba8_File {
	jule::Str _field_Path;
	jule::Slice<jule::U8> _field_Data;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Tokens;
	

	_22be17ba8_File(void) = default;


};
struct _22be1998a_kindPair {
	jule::Str _field_kind = jule::Str("::", 2);
	jule::U64 _field_id = 0LLU;
	

	_22be1998a_kindPair(void) = default;

	inline bool operator==(_22be1998a_kindPair _other) {
		return 
			this->_field_kind == _other._field_kind &&
			this->_field_id == _other._field_id;
	}

	inline bool operator!=(_22be1998a_kindPair _other) { return !this->operator==(_other); }


};
inline void _22be20a90_pushErr(_22be204eb_lex*, jule::Str, jule::Slice<jule::Any>);
inline void _22be20dae_pushErrTok(_22be204eb_lex*, jule::Ptr<_22be1281d_Token>*, jule::Str);
inline void _22be2108a_lex(_22be204eb_lex*);
inline jule::Str _22be21398_id(_22be204eb_lex*, jule::Slice<jule::U8>*);
inline jule::Slice<jule::U8> _22be2160c_resume(_22be204eb_lex*);
inline void _22be21882_lexLineComment(_22be204eb_lex*, jule::Ptr<_22be1281d_Token>*);
inline void _22be21b07_lexRangeComment(_22be204eb_lex*, jule::Ptr<_22be1281d_Token>*);
inline jule::Str _22be21e15_num(_22be204eb_lex*, jule::Slice<jule::U8>*);
inline jule::Str _22be22223_escapeSeq(_22be204eb_lex*, jule::Slice<jule::U8>*);
inline jule::Str _22be225ca_getRune(_22be204eb_lex*, jule::Slice<jule::U8>*, jule::Bool);
inline jule::Str _22be228d8_lexRune(_22be204eb_lex*, jule::Slice<jule::U8>*);
inline jule::Str _22be22b4c_lexStr(_22be204eb_lex*);
inline jule::Bool _22be22db1_isFirstTokenOfLine(_22be204eb_lex*);
inline void _22be2308c_newLine(_22be204eb_lex*);
inline jule::Bool _22be23587_isOp(_22be204eb_lex*, jule::Slice<jule::U8>*, jule::Str, jule::U64, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _22be2393e_lexBasicOps(_22be204eb_lex*, jule::Slice<jule::U8>, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _22be23ce6_lexId(_22be204eb_lex*, jule::Slice<jule::U8>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _22be2419d_lexNum(_22be204eb_lex*, jule::Slice<jule::U8>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Ptr<_22be1281d_Token> _22be24412_token(_22be204eb_lex*);
struct _22be204eb_lex {
	jule::I64 _field_mode = 0LL;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_tokens;
	jule::Ptr<_22be17ba8_File> _field_file;
	jule::I64 _field_pos = 0;
	jule::I64 _field_column = 0;
	jule::I64 _field_row = 0;
	jule::Slice<_22ba3c6bd_Log> _field_errors;
	

	_22be204eb_lex(void) = default;


};
struct _1e76be42d_floatInfo {
	jule::U64 _field_mantbits = 0;
	jule::U64 _field_expbits = 0;
	jule::I64 _field_bias = 0;
	

	_1e76be42d_floatInfo(void) = default;

	inline bool operator==(_1e76be42d_floatInfo _other) {
		return 
			this->_field_mantbits == _other._field_mantbits &&
			this->_field_expbits == _other._field_expbits &&
			this->_field_bias == _other._field_bias;
	}

	inline bool operator!=(_1e76be42d_floatInfo _other) { return !this->operator==(_other); }


};
struct _1e76c0055_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	

	_1e76c0055_decimalSlice(void) = default;


};
struct _1e76d1473_leftCheat {
	jule::I64 _field_delta = 0;
	jule::Str _field_cutoff;
	

	_1e76d1473_leftCheat(void) = default;

	inline bool operator==(_1e76d1473_leftCheat _other) {
		return 
			this->_field_delta == _other._field_delta &&
			this->_field_cutoff == _other._field_cutoff;
	}

	inline bool operator!=(_1e76d1473_leftCheat _other) { return !this->operator==(_other); }


};
inline jule::Bool _1e76c8eb5_set(_1e76d1e46_decimal*, jule::Str);
inline __jule_tuple_u64__jule_tuple_bool _1e76c92c3_floatBits(_1e76d1e46_decimal*, _1e76be42d_floatInfo*);
inline void _1e76d2320_assign(_1e76d1e46_decimal*, jule::U64);
inline void _1e76d2595_shift(_1e76d1e46_decimal*, jule::I64);
inline void _1e76d281a_roundDown(_1e76d1e46_decimal*, jule::I64);
inline void _1e76d2a90_roundUp(_1e76d1e46_decimal*, jule::I64);
inline void _1e76d2d15_round(_1e76d1e46_decimal*, jule::I64);
inline jule::U64 _1e76d3079_roundedInteger(_1e76d1e46_decimal*);
struct _1e76d1e46_decimal {
	jule::Array<jule::U8,800> _field_d = jule::Array<jule::U8,800>(0);
	jule::I64 _field_nd = 0;
	jule::I64 _field_dp = 0;
	jule::Bool _field_neg = false;
	jule::Bool _field_trunc = false;
	

	_1e76d1e46_decimal(void) = default;

	inline bool operator==(_1e76d1e46_decimal _other) {
		return 
			this->_field_d == _other._field_d &&
			this->_field_nd == _other._field_nd &&
			this->_field_dp == _other._field_dp &&
			this->_field_neg == _other._field_neg &&
			this->_field_trunc == _other._field_trunc;
	}

	inline bool operator!=(_1e76d1e46_decimal _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6246_NewI64(jule::I64);
inline jule::Ptr<_1e76e5cc3_Const> static__1e76e64dd_NewU64(jule::U64);
inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6785_NewBool(jule::Bool);
inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6a2c_NewStr(jule::Str);
inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6cc4_NewF64(jule::F64);
inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6ec2_NewNil(void);
inline jule::I64 _1e76e75bb_ReadI64(_1e76e5cc3_Const*);
inline jule::U64 _1e76e7830_ReadU64(_1e76e5cc3_Const*);
inline jule::Bool _1e76e7a94_ReadBool(_1e76e5cc3_Const*);
inline jule::Str _1e76e7d08_ReadStr(_1e76e5cc3_Const*);
inline jule::F64 _1e76e806c_ReadF64(_1e76e5cc3_Const*);
inline jule::I64 _1e76e82d1_AsI64(_1e76e5cc3_Const*);
inline jule::U64 _1e76e8545_AsU64(_1e76e5cc3_Const*);
inline jule::F64 _1e76e87a9_AsF64(_1e76e5cc3_Const*);
inline void _1e76e8a2e_SetI64(_1e76e5cc3_Const*, jule::I64);
inline void _1e76e8ca4_SetU64(_1e76e5cc3_Const*, jule::U64);
inline void _1e76e9029_SetBool(_1e76e5cc3_Const*, jule::Bool);
inline void _1e76e929e_SetStr(_1e76e5cc3_Const*, jule::Str);
inline void _1e76e9524_SetF64(_1e76e5cc3_Const*, jule::F64);
inline void _1e76e9700_SetNil(_1e76e5cc3_Const*);
inline jule::Bool _1e76e9964_IsI64(_1e76e5cc3_Const*);
inline jule::Bool _1e76e9bc8_IsU64(_1e76e5cc3_Const*);
inline jule::Bool _1e76e9e3c_IsBool(_1e76e5cc3_Const*);
inline jule::Bool _1e76ea1a1_IsStr(_1e76e5cc3_Const*);
inline jule::Bool _1e76ea415_IsF64(_1e76e5cc3_Const*);
inline jule::Bool _1e76ea679_IsNil(_1e76e5cc3_Const*);
inline jule::Bool _1e76ea987_AreSameTypes(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eac95_And(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eb0a3_Or(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eb3b1_Eq(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eb6be_Lt(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eb9cc_LtEq(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ebcda_Gt(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ec0e8_GtEq(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ec406_Add(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ec714_Sub(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eca22_Mul(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ecd30_Div(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ed13d_Mod(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ed44b_BitwiseAnd(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ed759_BitwiseOr(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76eda67_Xor(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76edd75_Lshift(_1e76e5cc3_Const*, _1e76e5cc3_Const);
inline jule::Bool _1e76ee183_Rshift(_1e76e5cc3_Const*, _1e76e5cc3_Const);
struct _1e76e5cc3_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
	

	_1e76e5cc3_Const(void) = default;

	inline jule::Bool operator==(_1e76e5cc3_Const _other) { return _1e76eb3b1_Eq(this, _other); }

	inline bool operator!=(_1e76e5cc3_Const _other) { return !this->operator==(_other); }

	inline jule::Bool operator>(_1e76e5cc3_Const _other) { return _1e76ebcda_Gt(this, _other); }

	inline jule::Bool operator>=(_1e76e5cc3_Const _other) { return _1e76ec0e8_GtEq(this, _other); }

	inline jule::Bool operator<(_1e76e5cc3_Const _other) { return _1e76eb6be_Lt(this, _other); }

	inline jule::Bool operator<=(_1e76e5cc3_Const _other) { return _1e76eb9cc_LtEq(this, _other); }


};
struct _1d05aa7a4_Ast {
	jule::Ptr<_22be17ba8_File> _field_File;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1d06068bb_UseDecl>> _field_UseDecls;
	jule::Slice<_1d05ab651_Node> _field_Nodes;
	

	_1d05aa7a4_Ast(void) = default;


};
struct _1d05ab651_Node {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1d05ab651_Node(void) = default;

	inline bool operator==(_1d05ab651_Node _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d05ab651_Node _other) { return !this->operator==(_other); }


};
struct _1d05aba4c_Directive {
	jule::Ptr<_22be1281d_Token> _field_Tag;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Args;
	

	_1d05aba4c_Directive(void) = default;


};
struct _1d05de563_TypeDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1d05de563_TypeDecl(void) = default;

	inline bool operator==(_1d05de563_TypeDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d05de563_TypeDecl _other) { return !this->operator==(_other); }


};
struct _1d05deb29_IdentTypeDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _field_Generics;
	

	_1d05deb29_IdentTypeDecl(void) = default;


};
struct _1d05dee15_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1d05deb29_IdentTypeDecl>> _field_Idents;
	

	_1d05dee15_SubIdentTypeDecl(void) = default;


};
struct _1d05e0289_NamespaceTypeDecl {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Idents;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	

	_1d05e0289_NamespaceTypeDecl(void) = default;


};
struct _1d05e0575_SptrTypeDecl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Elem;
	

	_1d05e0575_SptrTypeDecl(void) = default;

	inline bool operator==(_1d05e0575_SptrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05e0575_SptrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d05e0971_SlcTypeDecl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Elem;
	

	_1d05e0971_SlcTypeDecl(void) = default;

	inline bool operator==(_1d05e0971_SlcTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05e0971_SlcTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d05e0c5c_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _field_Types;
	

	_1d05e0c5c_TupleTypeDecl(void) = default;


};
inline jule::Bool _1d05e13de_IsUnsafe(_1d05e1048_PtrTypeDecl*);
struct _1d05e1048_PtrTypeDecl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Elem;
	

	_1d05e1048_PtrTypeDecl(void) = default;

	inline bool operator==(_1d05e1048_PtrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d05e1048_PtrTypeDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d05e1a71_AutoSized(_1d05e171e_ArrTypeDecl*);
struct _1d05e171e_ArrTypeDecl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Elem;
	jule::Ptr<_1d05e36dd_Expr> _field_Size;
	

	_1d05e171e_ArrTypeDecl(void) = default;

	inline bool operator==(_1d05e171e_ArrTypeDecl _other) {
		return 
			this->_field_Elem == _other._field_Elem &&
			this->_field_Size == _other._field_Size;
	}

	inline bool operator!=(_1d05e171e_ArrTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d05e1e28_MapTypeDecl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Key;
	jule::Ptr<_1d05de563_TypeDecl> _field_Val;
	

	_1d05e1e28_MapTypeDecl(void) = default;

	inline bool operator==(_1d05e1e28_MapTypeDecl _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d05e1e28_MapTypeDecl _other) { return !this->operator==(_other); }


};
struct _1d05e22d0_RetTypeDecl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Idents;
	

	_1d05e22d0_RetTypeDecl(void) = default;


};
struct _1d05e36dd_Expr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Any _field_Kind = jule::Any(nullptr);
	

	_1d05e36dd_Expr(void) = default;

	inline bool operator==(_1d05e36dd_Expr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d05e36dd_Expr _other) { return !this->operator==(_other); }


};
struct _1d05e39c9_RangeExpr {
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e39c9_RangeExpr(void) = default;

	inline bool operator==(_1d05e39c9_RangeExpr _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e39c9_RangeExpr _other) { return !this->operator==(_other); }


};
struct _1d05e407e_UseExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e407e_UseExpr(void) = default;

	inline bool operator==(_1d05e407e_UseExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e407e_UseExpr _other) { return !this->operator==(_other); }


};
struct _1d05e436a_TupleExpr {
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_Expr;
	

	_1d05e436a_TupleExpr(void) = default;


};
inline jule::Bool _1d05e49db_IsNil(_1d05e4722_LitExpr*);
struct _1d05e4722_LitExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Value;
	

	_1d05e4722_LitExpr(void) = default;

	inline bool operator==(_1d05e4722_LitExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1d05e4722_LitExpr _other) { return !this->operator==(_other); }


};
struct _1d05e4d60_UnsafeExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e4d60_UnsafeExpr(void) = default;

	inline bool operator==(_1d05e4d60_UnsafeExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e4d60_UnsafeExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d05e5635_IsSelf(_1d05e52d3_IdentExpr*);
struct _1d05e52d3_IdentExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	

	_1d05e52d3_IdentExpr(void) = default;

	inline bool operator==(_1d05e52d3_IdentExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Binded == _other._field_Binded;
	}

	inline bool operator!=(_1d05e52d3_IdentExpr _other) { return !this->operator==(_other); }


};
struct _1d05e59dc_UnaryExpr {
	jule::Ptr<_22be1281d_Token> _field_Op;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e59dc_UnaryExpr(void) = default;

	inline bool operator==(_1d05e59dc_UnaryExpr _other) {
		return 
			this->_field_Op == _other._field_Op &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e59dc_UnaryExpr _other) { return !this->operator==(_other); }


};
struct _1d05e5d94_VariadicExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e5d94_VariadicExpr(void) = default;

	inline bool operator==(_1d05e5d94_VariadicExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e5d94_VariadicExpr _other) { return !this->operator==(_other); }


};
struct _1d05e624b_CastExpr {
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e624b_CastExpr(void) = default;

	inline bool operator==(_1d05e624b_CastExpr _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e624b_CastExpr _other) { return !this->operator==(_other); }


};
struct _1d05e6603_NsSelectionExpr {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Ns;
	jule::Ptr<_22be1281d_Token> _field_Ident;
	

	_1d05e6603_NsSelectionExpr(void) = default;


};
struct _1d05e6a76_SubIdentExpr {
	jule::Bool _field_IsSelf = false;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Ptr<_22be1281d_Token> _field_Ident;
	

	_1d05e6a76_SubIdentExpr(void) = default;

	inline bool operator==(_1d05e6a76_SubIdentExpr _other) {
		return 
			this->_field_IsSelf == _other._field_IsSelf &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d05e6a76_SubIdentExpr _other) { return !this->operator==(_other); }


};
struct _1d05e6ee9_BinopExpr {
	jule::Ptr<_1d05e36dd_Expr> _field_Left;
	jule::Ptr<_1d05e36dd_Expr> _field_Right;
	jule::Ptr<_22be1281d_Token> _field_Op;
	

	_1d05e6ee9_BinopExpr(void) = default;

	inline bool operator==(_1d05e6ee9_BinopExpr _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d05e6ee9_BinopExpr _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d05e7967_Unhandled(_1d05e7604_FnCallExpr*);
inline jule::Bool _1d05e7bcb_Ignored(_1d05e7604_FnCallExpr*);
struct _1d05e7604_FnCallExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_Args;
	jule::Ptr<_1d05ee199_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo = false;
	

	_1d05e7604_FnCallExpr(void) = default;


};
inline jule::Bool _1d05e83d5_IsTargeted(_1d05e8083_FieldExprPair*);
struct _1d05e8083_FieldExprPair {
	jule::Ptr<_22be1281d_Token> _field_Field;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05e8083_FieldExprPair(void) = default;

	inline bool operator==(_1d05e8083_FieldExprPair _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05e8083_FieldExprPair _other) { return !this->operator==(_other); }


};
struct _1d05e8858_StructLit {
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_Exprs;
	

	_1d05e8858_StructLit(void) = default;


};
inline jule::Bool _1d05e923d_IsEmpty(_1d05e8ccb_BraceLit*);
struct _1d05e8ccb_BraceLit {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_Exprs;
	

	_1d05e8ccb_BraceLit(void) = default;


};
struct _1d05e9639_KeyValPair {
	jule::Ptr<_1d05e36dd_Expr> _field_Key;
	jule::Ptr<_1d05e36dd_Expr> _field_Val;
	jule::Ptr<_22be1281d_Token> _field_Colon;
	

	_1d05e9639_KeyValPair(void) = default;

	inline bool operator==(_1d05e9639_KeyValPair _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val &&
			this->_field_Colon == _other._field_Colon;
	}

	inline bool operator!=(_1d05e9639_KeyValPair _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d05ea151_IsEmpty(_1d05e9d21_SliceExpr*);
struct _1d05e9d21_SliceExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_Exprs;
	

	_1d05e9d21_SliceExpr(void) = default;


};
struct _1d05ea690_IndexingExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Ptr<_1d05e36dd_Expr> _field_Index;
	

	_1d05ea690_IndexingExpr(void) = default;

	inline bool operator==(_1d05ea690_IndexingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1d05ea690_IndexingExpr _other) { return !this->operator==(_other); }


};
struct _1d05eac9a_SlicingExpr {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Ptr<_1d05e36dd_Expr> _field_Start;
	jule::Ptr<_1d05e36dd_Expr> _field_To;
	

	_1d05eac9a_SlicingExpr(void) = default;

	inline bool operator==(_1d05eac9a_SlicingExpr _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_End == _other._field_End &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Start == _other._field_Start &&
			this->_field_To == _other._field_To;
	}

	inline bool operator!=(_1d05eac9a_SlicingExpr _other) { return !this->operator==(_other); }


};
struct _1d05eb086_Constraint {
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _field_Mask;
	

	_1d05eb086_Constraint(void) = default;


};
struct _1d05eb509_GenericDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05eb086_Constraint> _field_Constraint;
	

	_1d05eb509_GenericDecl(void) = default;

	inline bool operator==(_1d05eb509_GenericDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Constraint == _other._field_Constraint;
	}

	inline bool operator!=(_1d05eb509_GenericDecl _other) { return !this->operator==(_other); }


};
struct _1d05eb8b1_LabelSt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1d05eb8b1_LabelSt(void) = default;

	inline bool operator==(_1d05eb8b1_LabelSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d05eb8b1_LabelSt _other) { return !this->operator==(_other); }


};
struct _1d05ebc68_GotoSt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_Label;
	

	_1d05ebc68_GotoSt(void) = default;

	inline bool operator==(_1d05ebc68_GotoSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d05ebc68_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d05ec054_FallSt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	

	_1d05ec054_FallSt(void) = default;

	inline bool operator==(_1d05ec054_FallSt _other) {
		return 
			this->_field_Token == _other._field_Token;
	}

	inline bool operator!=(_1d05ec054_FallSt _other) { return !this->operator==(_other); }


};
struct _1d05ec65e_AssignLeft {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d05ec65e_AssignLeft(void) = default;

	inline bool operator==(_1d05ec65e_AssignLeft _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d05ec65e_AssignLeft _other) { return !this->operator==(_other); }


};
struct _1d05ecb9d_AssignSt {
	jule::Bool _field_Declarative = false;
	jule::Ptr<_22be1281d_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1d05ec65e_AssignLeft>> _field_Left;
	jule::Ptr<_1d05e36dd_Expr> _field_Right;
	

	_1d05ecb9d_AssignSt(void) = default;


};
struct _1d05eda8e_Stmt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Data = jule::Any(nullptr);
	

	_1d05eda8e_Stmt(void) = default;

	inline bool operator==(_1d05eda8e_Stmt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d05eda8e_Stmt _other) { return !this->operator==(_other); }


};
struct _1d05ee199_ScopeTree {
	jule::Ptr<_1d05ee199_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<_1d05eda8e_Stmt> _field_Stmts;
	jule::Ptr<_22be1281d_Token> _field_End;
	

	_1d05ee199_ScopeTree(void) = default;


};
inline jule::Bool _1d05eebd3_IsSelf(_1d05ee870_ParamDecl*);
inline jule::Bool _1d05eee47_IsRef(_1d05ee870_ParamDecl*);
struct _1d05ee870_ParamDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
	

	_1d05ee870_ParamDecl(void) = default;

	inline bool operator==(_1d05ee870_ParamDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d05ee870_ParamDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0600ee2_IsAnon(_1d0600b90_FnDecl*);
struct _1d0600b90_FnDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_Directives;
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _field_Generics;
	jule::Ptr<_1d05e22d0_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>> _field_Params;
	

	_1d0600b90_FnDecl(void) = default;


};
struct _1d0601b6e_VarDecl {
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_Directives;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d0601b6e_VarDecl(void) = default;


};
struct _1d0602026_RetSt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d0602026_RetSt(void) = default;

	inline bool operator==(_1d0602026_RetSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0602026_RetSt _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d06029d8_IsInf(_1d0602686_Iter*);
struct _1d0602686_Iter {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Kind = jule::Any(nullptr);
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	

	_1d0602686_Iter(void) = default;

	inline bool operator==(_1d0602686_Iter _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d0602686_Iter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d06032ad_IsWhileNext(_1d0602e5b_WhileKind*);
struct _1d0602e5b_WhileKind {
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_22be1281d_Token> _field_NextToken;
	

	_1d0602e5b_WhileKind(void) = default;

	inline bool operator==(_1d0602e5b_WhileKind _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_NextToken == _other._field_NextToken;
	}

	inline bool operator!=(_1d0602e5b_WhileKind _other) { return !this->operator==(_other); }


};
struct _1d06037ec_RangeKind {
	jule::Ptr<_22be1281d_Token> _field_InToken;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Ptr<_1d0601b6e_VarDecl> _field_KeyA;
	jule::Ptr<_1d0601b6e_VarDecl> _field_KeyB;
	

	_1d06037ec_RangeKind(void) = default;

	inline bool operator==(_1d06037ec_RangeKind _other) {
		return 
			this->_field_InToken == _other._field_InToken &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1d06037ec_RangeKind _other) { return !this->operator==(_other); }


};
struct _1d0603ba4_BreakSt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_Label;
	

	_1d0603ba4_BreakSt(void) = default;

	inline bool operator==(_1d0603ba4_BreakSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d0603ba4_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d060405b_ContSt {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_Label;
	

	_1d060405b_ContSt(void) = default;

	inline bool operator==(_1d060405b_ContSt _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Label == _other._field_Label;
	}

	inline bool operator!=(_1d060405b_ContSt _other) { return !this->operator==(_other); }


};
struct _1d06044ce_If {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	

	_1d06044ce_If(void) = default;

	inline bool operator==(_1d06044ce_If _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d06044ce_If _other) { return !this->operator==(_other); }


};
struct _1d0604886_Else {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	

	_1d0604886_Else(void) = default;

	inline bool operator==(_1d0604886_Else _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d0604886_Else _other) { return !this->operator==(_other); }


};
struct _1d0604d09_Conditional {
	jule::Ptr<_1d06044ce_If> _field_Head;
	jule::Slice<jule::Ptr<_1d06044ce_If>> _field_Tail;
	jule::Ptr<_1d0604886_Else> _field_Default;
	

	_1d0604d09_Conditional(void) = default;


};
struct _1d06054d0_TypeAliasDecl {
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	

	_1d06054d0_TypeAliasDecl(void) = default;

	inline bool operator==(_1d06054d0_TypeAliasDecl _other) {
		return 
			this->_field_Scope == _other._field_Scope &&
			this->_field_Public == _other._field_Public &&
			this->_field_Binded == _other._field_Binded &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d06054d0_TypeAliasDecl _other) { return !this->operator==(_other); }


};
struct _1d0605953_Case {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_Exprs;
	

	_1d0605953_Case(void) = default;


};
struct _1d0606129_MatchCase {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Bool _field_TypeMatch = false;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1d0605953_Case>> _field_Cases;
	jule::Ptr<_1d0604886_Else> _field_Default;
	

	_1d0606129_MatchCase(void) = default;


};
struct _1d06068bb_UseDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Full = false;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Selected;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	

	_1d06068bb_UseDecl(void) = default;


};
inline jule::Bool _1d0607191_AutoExpr(_1d0606d3e_EnumItemDecl*);
struct _1d0606d3e_EnumItemDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	

	_1d0606d3e_EnumItemDecl(void) = default;

	inline bool operator==(_1d0606d3e_EnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0606d3e_EnumItemDecl _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0607bb9_DefaultTyped(_1d0607867_EnumDecl*);
struct _1d0607867_EnumDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>> _field_Items;
	jule::Ptr<_22be1281d_Token> _field_End;
	

	_1d0607867_EnumDecl(void) = default;


};
struct _1d060813c_TypeEnumItemDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	

	_1d060813c_TypeEnumItemDecl(void) = default;

	inline bool operator==(_1d060813c_TypeEnumItemDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d060813c_TypeEnumItemDecl _other) { return !this->operator==(_other); }


};
struct _1d0608747_TypeEnumDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_22be1281d_Token> _field_End;
	

	_1d0608747_TypeEnumDecl(void) = default;


};
struct _1d06089ab_FieldDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d05de563_TypeDecl> _field_Kind;
	jule::Ptr<_1d05e36dd_Expr> _field_Default;
	

	_1d06089ab_FieldDecl(void) = default;

	inline bool operator==(_1d06089ab_FieldDecl _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1d06089ab_FieldDecl _other) { return !this->operator==(_other); }


};
struct _1d0609308_StructDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d06089ab_FieldDecl>> _field_Fields;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _field_Generics;
	

	_1d0609308_StructDecl(void) = default;


};
struct _1d06099ce_TraitDecl {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1d0600b90_FnDecl>> _field_Methods;
	

	_1d06099ce_TraitDecl(void) = default;


};
inline jule::Bool _1d060a67d_IsTraitImpl(_1d060a0d9_Impl*);
inline jule::Bool _1d060a8e2_IsStructImpl(_1d060a0d9_Impl*);
struct _1d060a0d9_Impl {
	jule::Ptr<_22be1281d_Token> _field_End;
	jule::Ptr<_1d05de563_TypeDecl> _field_Base;
	jule::Ptr<_1d05de563_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1d0600b90_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>> _field_Statics;
	

	_1d060a0d9_Impl(void) = default;


};
inline jule::Ptr<_1d06111de_FieldIns> _1d060b6a1_instance(jule::Ptr<_1d060b2e9_Field>);
struct _1d060b2e9_Field {
	jule::Ptr<_1d060ddbd_Struct> _field_Owner;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	jule::Ptr<_1d05e36dd_Expr> _field_Default;
	

	_1d060b2e9_Field(void) = default;

	inline bool operator==(_1d060b2e9_Field _other) {
		return 
			this->_field_Owner == _other._field_Owner &&
			this->_field_Token == _other._field_Token &&
			this->_field_Public == _other._field_Public &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1d060b2e9_Field _other) { return !this->operator==(_other); }


};
struct _1d060d0a9_Operators {
	jule::Ptr<_1d0626e6e_FnIns> _field_Eq;
	jule::Ptr<_1d0626e6e_FnIns> _field_Gt;
	jule::Ptr<_1d0626e6e_FnIns> _field_GtEq;
	jule::Ptr<_1d0626e6e_FnIns> _field_Lt;
	jule::Ptr<_1d0626e6e_FnIns> _field_LtEq;
	jule::Ptr<_1d0626e6e_FnIns> _field_Shl;
	jule::Ptr<_1d0626e6e_FnIns> _field_Shr;
	jule::Ptr<_1d0626e6e_FnIns> _field_Add;
	jule::Ptr<_1d0626e6e_FnIns> _field_Sub;
	jule::Ptr<_1d0626e6e_FnIns> _field_Div;
	jule::Ptr<_1d0626e6e_FnIns> _field_Mul;
	jule::Ptr<_1d0626e6e_FnIns> _field_Mod;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitAnd;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitOr;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitXor;
	jule::Ptr<_1d0626e6e_FnIns> _field_Neg;
	jule::Ptr<_1d0626e6e_FnIns> _field_Pos;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitNot;
	jule::Ptr<_1d0626e6e_FnIns> _field_AddAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_SubAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_DivAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_MulAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_ModAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_ShlAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_ShrAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitOrAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitAndAssign;
	jule::Ptr<_1d0626e6e_FnIns> _field_BitXorAssign;
	

	_1d060d0a9_Operators(void) = default;

	inline bool operator==(_1d060d0a9_Operators _other) {
		return 
			this->_field_Eq == _other._field_Eq &&
			this->_field_Gt == _other._field_Gt &&
			this->_field_GtEq == _other._field_GtEq &&
			this->_field_Lt == _other._field_Lt &&
			this->_field_LtEq == _other._field_LtEq &&
			this->_field_Shl == _other._field_Shl &&
			this->_field_Shr == _other._field_Shr &&
			this->_field_Add == _other._field_Add &&
			this->_field_Sub == _other._field_Sub &&
			this->_field_Div == _other._field_Div &&
			this->_field_Mul == _other._field_Mul &&
			this->_field_Mod == _other._field_Mod &&
			this->_field_BitAnd == _other._field_BitAnd &&
			this->_field_BitOr == _other._field_BitOr &&
			this->_field_BitXor == _other._field_BitXor &&
			this->_field_Neg == _other._field_Neg &&
			this->_field_Pos == _other._field_Pos &&
			this->_field_BitNot == _other._field_BitNot &&
			this->_field_AddAssign == _other._field_AddAssign &&
			this->_field_SubAssign == _other._field_SubAssign &&
			this->_field_DivAssign == _other._field_DivAssign &&
			this->_field_MulAssign == _other._field_MulAssign &&
			this->_field_ModAssign == _other._field_ModAssign &&
			this->_field_ShlAssign == _other._field_ShlAssign &&
			this->_field_ShrAssign == _other._field_ShrAssign &&
			this->_field_BitOrAssign == _other._field_BitOrAssign &&
			this->_field_BitAndAssign == _other._field_BitAndAssign &&
			this->_field_BitXorAssign == _other._field_BitXorAssign;
	}

	inline bool operator!=(_1d060d0a9_Operators _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d0611bd4_StructIns> _1d060e330_instance(jule::Ptr<_1d060ddbd_Struct>);
inline jule::Ptr<_1d0611bd4_StructIns> _1d060e60a_appendInstance(_1d060ddbd_Struct*, jule::Ptr<_1d0611bd4_StructIns>*);
inline jule::Ptr<_1d06242bd_Fn> _1d060e9b2_FindMethod(_1d060ddbd_Struct*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21bb65a_Var> _1d060ecc0_FindStatic(_1d060ddbd_Struct*, jule::Str);
inline jule::Ptr<_1d060b2e9_Field> _1d06100cd_FindField(_1d060ddbd_Struct*, jule::Str);
inline jule::Bool _1d06103db_IsImplements(_1d060ddbd_Struct*, jule::Ptr<_1d21494c8_Trait>);
inline jule::Bool _1d06106e9_IsDerives(_1d060ddbd_Struct*, jule::Str);
inline jule::Bool _1d0610a07_IsUses(_1d060ddbd_Struct*, jule::Ptr<_1d060ddbd_Struct>);
inline jule::Bool _1d0610c6b_HasRefAccessible(_1d060ddbd_Struct*);
struct _1d060ddbd_Struct {
	jule::Ptr<_1d219b34e_Sema> _field_sema;
	jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _field_Uses;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d060b2e9_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1d06242bd_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_Statics;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1d21494c8_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1d0611bd4_StructIns>> _field_Instances;
	

	_1d060ddbd_Struct(void) = default;


};
struct _1d06111de_FieldIns {
	jule::Ptr<_1d060b2e9_Field> _field_Decl;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Ptr<_1d0408c95_Data> _field_Default;
	

	_1d06111de_FieldIns(void) = default;

	inline bool operator==(_1d06111de_FieldIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Default == _other._field_Default;
	}

	inline bool operator!=(_1d06111de_FieldIns _other) { return !this->operator==(_other); }


};
struct _1d0615b83_OperandExprModel {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Any _field_Model = jule::Any(nullptr);
	

	_1d0615b83_OperandExprModel(void) = default;

	inline bool operator==(_1d0615b83_OperandExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Model == _other._field_Model;
	}

	inline bool operator!=(_1d0615b83_OperandExprModel _other) { return !this->operator==(_other); }


};
struct _1d061614a_BinopExprModel {
	jule::Ptr<_1d0615b83_OperandExprModel> _field_Left;
	jule::Ptr<_1d0615b83_OperandExprModel> _field_Right;
	jule::Ptr<_22be1281d_Token> _field_Op;
	

	_1d061614a_BinopExprModel(void) = default;

	inline bool operator==(_1d061614a_BinopExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d061614a_BinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d0616502_UnaryExprModel {
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	jule::Ptr<_22be1281d_Token> _field_Op;
	

	_1d0616502_UnaryExprModel(void) = default;

	inline bool operator==(_1d0616502_UnaryExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d0616502_UnaryExprModel _other) { return !this->operator==(_other); }


};
struct _1d06168ed_StructArgExprModel {
	jule::Ptr<_1d06111de_FieldIns> _field_Field;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d06168ed_StructArgExprModel(void) = default;

	inline bool operator==(_1d06168ed_StructArgExprModel _other) {
		return 
			this->_field_Field == _other._field_Field &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d06168ed_StructArgExprModel _other) { return !this->operator==(_other); }


};
struct _1d0616ca5_StructLitExprModel {
	jule::Ptr<_1d0611bd4_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1d06168ed_StructArgExprModel>> _field_Args;
	

	_1d0616ca5_StructLitExprModel(void) = default;


};
struct _1d06170b3_AllocStructLitExprModel {
	jule::Ptr<_1d0616ca5_StructLitExprModel> _field_Lit;
	

	_1d06170b3_AllocStructLitExprModel(void) = default;

	inline bool operator==(_1d06170b3_AllocStructLitExprModel _other) {
		return 
			this->_field_Lit == _other._field_Lit;
	}

	inline bool operator!=(_1d06170b3_AllocStructLitExprModel _other) { return !this->operator==(_other); }


};
struct _1d0617613_CastingExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Ptr<_1d21d1d46_TypeKind> _field_ExprKind;
	

	_1d0617613_CastingExprModel(void) = default;

	inline bool operator==(_1d0617613_CastingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_ExprKind == _other._field_ExprKind;
	}

	inline bool operator!=(_1d0617613_CastingExprModel _other) { return !this->operator==(_other); }


};
struct _1d0617eb5_FnCallExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d0626e6e_FnIns> _field_Func;
	jule::Bool _field_IsCo = false;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1d2174613_Scope> _field_Except;
	jule::Bool _field_Assigned = false;
	

	_1d0617eb5_FnCallExprModel(void) = default;


};
struct _1d061836c_SliceExprModel {
	jule::Ptr<_1d21d1d46_TypeKind> _field_ElemKind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1d061836c_SliceExprModel(void) = default;


};
struct _1d06187e0_IndexingExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	jule::Ptr<_1d0408c95_Data> _field_Index;
	

	_1d06187e0_IndexingExprModel(void) = default;

	inline bool operator==(_1d06187e0_IndexingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Index == _other._field_Index;
	}

	inline bool operator!=(_1d06187e0_IndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d0618b97_AnonFnExprModel {
	jule::Ptr<_1d0626e6e_FnIns> _field_Func;
	jule::Bool _field_Global = false;
	

	_1d0618b97_AnonFnExprModel(void) = default;

	inline bool operator==(_1d0618b97_AnonFnExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Global == _other._field_Global;
	}

	inline bool operator!=(_1d0618b97_AnonFnExprModel _other) { return !this->operator==(_other); }


};
struct _1d061904e_KeyValPairExprModel {
	jule::Any _field_Key = jule::Any(nullptr);
	jule::Any _field_Val = jule::Any(nullptr);
	

	_1d061904e_KeyValPairExprModel(void) = default;

	inline bool operator==(_1d061904e_KeyValPairExprModel _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d061904e_KeyValPairExprModel _other) { return !this->operator==(_other); }


};
struct _1d06194c2_MapExprModel {
	jule::Ptr<_1d21d1d46_TypeKind> _field_KeyKind;
	jule::Ptr<_1d21d1d46_TypeKind> _field_ValKind;
	jule::Slice<jule::Ptr<_1d061904e_KeyValPairExprModel>> _field_Entries;
	

	_1d06194c2_MapExprModel(void) = default;


};
struct _1d0619a11_SlicingExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1d0619a11_SlicingExprModel(void) = default;

	inline bool operator==(_1d0619a11_SlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1d0619a11_SlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d061a050_TraitSubIdentExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d06242bd_Fn> _field_Method;
	jule::Ptr<_1d21494c8_Trait> _field_Trt;
	

	_1d061a050_TraitSubIdentExprModel(void) = default;

	inline bool operator==(_1d061a050_TraitSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Trt == _other._field_Trt;
	}

	inline bool operator!=(_1d061a050_TraitSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d061a836_StructSubIdentExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	jule::Ptr<_1d0626e6e_FnIns> _field_Method;
	jule::Ptr<_1d06111de_FieldIns> _field_Field;
	jule::Ptr<_1d0611bd4_StructIns> _field_Owner;
	

	_1d061a836_StructSubIdentExprModel(void) = default;

	inline bool operator==(_1d061a836_StructSubIdentExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method &&
			this->_field_Field == _other._field_Field &&
			this->_field_Owner == _other._field_Owner;
	}

	inline bool operator!=(_1d061a836_StructSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d061abcc_StructStaticIdentExprModel {
	jule::Ptr<_1d0611bd4_StructIns> _field_Structure;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d0626e6e_FnIns> _field_Method;
	

	_1d061abcc_StructStaticIdentExprModel(void) = default;

	inline bool operator==(_1d061abcc_StructStaticIdentExprModel _other) {
		return 
			this->_field_Structure == _other._field_Structure &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Method == _other._field_Method;
	}

	inline bool operator!=(_1d061abcc_StructStaticIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d061b095_ArrayExprModel {
	jule::Ptr<_1d21e0904_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
	

	_1d061b095_ArrayExprModel(void) = default;


};
struct _1d061b381_CommonIdentExprModel {
	jule::Str _field_Ident;
	

	_1d061b381_CommonIdentExprModel(void) = default;

	inline bool operator==(_1d061b381_CommonIdentExprModel _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d061b381_CommonIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d061b8e2_CommonSubIdentExprModel {
	jule::Ptr<_1d21d1d46_TypeKind> _field_ExprKind;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	

	_1d061b8e2_CommonSubIdentExprModel(void) = default;

	inline bool operator==(_1d061b8e2_CommonSubIdentExprModel _other) {
		return 
			this->_field_ExprKind == _other._field_ExprKind &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d061b8e2_CommonSubIdentExprModel _other) { return !this->operator==(_other); }


};
struct _1d061bbde_TupleExprModel {
	jule::Slice<jule::Ptr<_1d0408c95_Data>> _field_Datas;
	

	_1d061bbde_TupleExprModel(void) = default;


};
struct _1d061c0b8_BuiltinOutCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1d061c0b8_BuiltinOutCallExprModel(void) = default;

	inline bool operator==(_1d061c0b8_BuiltinOutCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1d061c0b8_BuiltinOutCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061c4a3_BuiltinOutlnCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Bool _field_Debug = false;
	

	_1d061c4a3_BuiltinOutlnCallExprModel(void) = default;

	inline bool operator==(_1d061c4a3_BuiltinOutlnCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Debug == _other._field_Debug;
	}

	inline bool operator!=(_1d061c4a3_BuiltinOutlnCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061c7c2_BuiltinCloneCallExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d061c7c2_BuiltinCloneCallExprModel(void) = default;

	inline bool operator==(_1d061c7c2_BuiltinCloneCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d061c7c2_BuiltinCloneCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061cbac_BuiltinNewCallExprModel {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Any _field_Init = jule::Any(nullptr);
	

	_1d061cbac_BuiltinNewCallExprModel(void) = default;

	inline bool operator==(_1d061cbac_BuiltinNewCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Init == _other._field_Init;
	}

	inline bool operator!=(_1d061cbac_BuiltinNewCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061d097_BuiltinPanicCallExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d061d097_BuiltinPanicCallExprModel(void) = default;

	inline bool operator==(_1d061d097_BuiltinPanicCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d061d097_BuiltinPanicCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061d54d_BuiltinAssertCallExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Log;
	

	_1d061d54d_BuiltinAssertCallExprModel(void) = default;

	inline bool operator==(_1d061d54d_BuiltinAssertCallExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Log == _other._field_Log;
	}

	inline bool operator!=(_1d061d54d_BuiltinAssertCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061da04_BuiltinMakeCallExprModel {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Any _field_Len = jule::Any(nullptr);
	jule::Any _field_Cap = jule::Any(nullptr);
	

	_1d061da04_BuiltinMakeCallExprModel(void) = default;

	inline bool operator==(_1d061da04_BuiltinMakeCallExprModel _other) {
		return 
			this->_field_Kind == _other._field_Kind &&
			this->_field_Len == _other._field_Len &&
			this->_field_Cap == _other._field_Cap;
	}

	inline bool operator!=(_1d061da04_BuiltinMakeCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061ddde_BuiltinAppendCallExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Elements = jule::Any(nullptr);
	

	_1d061ddde_BuiltinAppendCallExprModel(void) = default;

	inline bool operator==(_1d061ddde_BuiltinAppendCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elements == _other._field_Elements;
	}

	inline bool operator!=(_1d061ddde_BuiltinAppendCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061e20d_BuiltinLenCallExprModel {
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	

	_1d061e20d_BuiltinLenCallExprModel(void) = default;

	inline bool operator==(_1d061e20d_BuiltinLenCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d061e20d_BuiltinLenCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061e52c_BuiltinCapCallExprModel {
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	

	_1d061e52c_BuiltinCapCallExprModel(void) = default;

	inline bool operator==(_1d061e52c_BuiltinCapCallExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d061e52c_BuiltinCapCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d061ebd1_BuiltinDeleteCallExprModel {
	jule::Ptr<_1d0408c95_Data> _field_Dest;
	jule::Ptr<_1d0408c95_Data> _field_Key;
	

	_1d061ebd1_BuiltinDeleteCallExprModel(void) = default;

	inline bool operator==(_1d061ebd1_BuiltinDeleteCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Key == _other._field_Key;
	}

	inline bool operator!=(_1d061ebd1_BuiltinDeleteCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d0620044_BuiltinCopyCallExprModel {
	jule::Ptr<_1d0408c95_Data> _field_Dest;
	jule::Ptr<_1d0408c95_Data> _field_Src;
	

	_1d0620044_BuiltinCopyCallExprModel(void) = default;

	inline bool operator==(_1d0620044_BuiltinCopyCallExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Src == _other._field_Src;
	}

	inline bool operator!=(_1d0620044_BuiltinCopyCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d062042e_BuiltinErrorCallExprModel {
	jule::Ptr<_1d0626e6e_FnIns> _field_Func;
	jule::Ptr<_1d0408c95_Data> _field_Err;
	

	_1d062042e_BuiltinErrorCallExprModel(void) = default;

	inline bool operator==(_1d062042e_BuiltinErrorCallExprModel _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Err == _other._field_Err;
	}

	inline bool operator!=(_1d062042e_BuiltinErrorCallExprModel _other) { return !this->operator==(_other); }


};
struct _1d062072b_SizeofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d062072b_SizeofExprModel(void) = default;

	inline bool operator==(_1d062072b_SizeofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d062072b_SizeofExprModel _other) { return !this->operator==(_other); }


};
struct _1d0620a17_AlignofExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d0620a17_AlignofExprModel(void) = default;

	inline bool operator==(_1d0620a17_AlignofExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0620a17_AlignofExprModel _other) { return !this->operator==(_other); }


};
struct _1d0620d03_RuneExprModel {
	jule::I32 _field_Code = 0;
	

	_1d0620d03_RuneExprModel(void) = default;

	inline bool operator==(_1d0620d03_RuneExprModel _other) {
		return 
			this->_field_Code == _other._field_Code;
	}

	inline bool operator!=(_1d0620d03_RuneExprModel _other) { return !this->operator==(_other); }


};
struct _1d0621111_IntegratedToStrExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d0621111_IntegratedToStrExprModel(void) = default;

	inline bool operator==(_1d0621111_IntegratedToStrExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0621111_IntegratedToStrExprModel _other) { return !this->operator==(_other); }


};
struct _1d06214c9_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
	

	_1d06214c9_BackendEmitExprModel(void) = default;


};
struct _1d06217b5_FreeExprModel {
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d06217b5_FreeExprModel(void) = default;

	inline bool operator==(_1d06217b5_FreeExprModel _other) {
		return 
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d06217b5_FreeExprModel _other) { return !this->operator==(_other); }


};
struct _1d0622277_RetType {
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Idents;
	

	_1d0622277_RetType(void) = default;


};
inline jule::Ptr<_1d06260a0_ParamIns> _1d0622d49_instance(jule::Ptr<_1d0622981_Param>);
inline jule::Bool _1d06230ad_IsSelf(_1d0622981_Param*);
inline jule::Bool _1d0623322_IsRef(_1d0622981_Param*);
struct _1d0622981_Param {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Variadic = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	jule::Str _field_Ident;
	

	_1d0622981_Param(void) = default;

	inline bool operator==(_1d0622981_Param _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d0622981_Param _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d0624730_IsVoid(_1d06242bd_Fn*);
inline jule::Bool _1d0624994_IsMethod(_1d06242bd_Fn*);
inline jule::Bool _1d0624c08_IsEntryPoint(_1d06242bd_Fn*);
inline jule::Bool _1d0624e6c_IsInit(_1d06242bd_Fn*);
inline jule::Bool _1d06251d1_IsAnon(_1d06242bd_Fn*);
inline jule::Bool _1d0625445_AnyVar(_1d06242bd_Fn*);
inline jule::Ptr<_1d0626e6e_FnIns> _1d06256a9_instanceForce(jule::Ptr<_1d06242bd_Fn>);
inline jule::Ptr<_1d0626e6e_FnIns> _1d062591d_instance(jule::Ptr<_1d06242bd_Fn>);
inline jule::Ptr<_1d0626e6e_FnIns> _1d0625be8_appendInstance(_1d06242bd_Fn*, jule::Ptr<_1d0626e6e_FnIns>*);
struct _1d06242bd_Fn {
	jule::Ptr<_1d219b34e_Sema> _field_sema;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Global = false;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Exceptional = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_Directives;
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _field_Generics;
	jule::Ptr<_1d0622277_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1d0622981_Param>> _field_Params;
	jule::Ptr<_1d060ddbd_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1d0626e6e_FnIns>> _field_Instances;
	

	_1d06242bd_Fn(void) = default;


};
inline jule::Str _1d0626479_Str(_1d06260a0_ParamIns*);
struct _1d06260a0_ParamIns {
	jule::Ptr<_1d0622981_Param> _field_Decl;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	

	_1d06260a0_ParamIns(void) = default;

	inline bool operator==(_1d06260a0_ParamIns _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d06260a0_ParamIns _other) { return !this->operator==(_other); }


};
inline jule::Str _1d062729e_Str(_1d0626e6e_FnIns*);
inline jule::Bool _1d06275ac_Equal(jule::Ptr<_1d0626e6e_FnIns>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Bool _1d0627a1e_EqualFn(jule::Ptr<_1d0626e6e_FnIns>, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Bool _1d0627d2c_equalTrait(jule::Ptr<_1d0626e6e_FnIns>, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _1d0628091_Types(_1d0626e6e_FnIns*);
inline jule::Bool _1d0628305_IsBuiltin(_1d0626e6e_FnIns*);
inline jule::Bool _1d0628569_IsAnon(_1d0626e6e_FnIns*);
inline jule::Bool _1d0628877_Same(_1d0626e6e_FnIns*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Str _1d0628b85_GetKindStr(_1d0626e6e_FnIns*, jule::Bool);
struct _1d0626e6e_FnIns {
	jule::Ptr<_1d0611bd4_StructIns> _field_Owner;
	jule::Ptr<_1d06242bd_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1d21d05b4_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1d06260a0_ParamIns>> _field_Params;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Result;
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	jule::Ptr<_1d0629dc8_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon = false;
	jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)> _field_caller;
	jule::Bool _field_reloaded = false;
	

	_1d0626e6e_FnIns(void) = default;


};
inline jule::Ptr<_1d0629dc8_ReferenceStack> static__1d062a12b_new(void);
inline jule::I64 _1d062a4b1_Len(_1d0629dc8_ReferenceStack*);
inline jule::Any _1d062a7be_At(_1d0629dc8_ReferenceStack*, jule::I64);
inline void _1d062aa44_Push(_1d0629dc8_ReferenceStack*, jule::Any);
inline jule::Bool _1b763895a_Exist(_1d0629dc8_ReferenceStack*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Bool _1b764c078_Exist(_1d0629dc8_ReferenceStack*, jule::Ptr<_1d21bb65a_Var>);
inline jule::Bool _1b76d6a4c_Exist(_1d0629dc8_ReferenceStack*, jule::Ptr<_1d0611bd4_StructIns>);
inline jule::Bool _1b797555a_Exist(_1d0629dc8_ReferenceStack*, jule::Ptr<_1d21494c8_Trait>);
struct _1d0629dc8_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
	

	_1d0629dc8_ReferenceStack(void) = default;


};
struct _1d062b209_Pass {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Text;
	

	_1d062b209_Pass(void) = default;

	inline bool operator==(_1d062b209_Pass _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Text == _other._field_Text;
	}

	inline bool operator!=(_1d062b209_Pass _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d2147141_symbolBuilder> _1d03b6505_getRoot(jule::Ptr<_1d2147141_symbolBuilder>);
inline void _1d03b67ad_pushErr(_1d2147141_symbolBuilder*, jule::Ptr<_22be1281d_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1d03b6b76_pushErrText(_1d2147141_symbolBuilder*, jule::Ptr<_22be1281d_Token>*, jule::Str, jule::Slice<jule::Any>);
inline void _1d03b6e95_pushSuggestion(_1d2147141_symbolBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d03b734c_checkCppUseDeclPath(_1d2147141_symbolBuilder*, jule::Ptr<_1d06068bb_UseDecl>*, jule::Str);
inline jule::Ptr<_1d219307c_ImportInfo> _1d03b765a_buildCppHeaderImport(_1d2147141_symbolBuilder*, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Ptr<_1d219307c_ImportInfo> _1d03b7968_buildStdImport(_1d2147141_symbolBuilder*, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Ptr<_1d219307c_ImportInfo> _1d03b7c76_buildIdentImport(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Ptr<_1d219307c_ImportInfo> _1d03b8084_buildImport(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Bool _1d03b8392_checkDuplicateUseDecl(_1d2147141_symbolBuilder*, jule::Ptr<_1d219307c_ImportInfo>*);
inline void _1d03b86b1_implImportSelections(_1d2147141_symbolBuilder*, jule::Ptr<_1d219307c_ImportInfo>*, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Str _1d03b89be_getAsLinkPath(jule::Ptr<_1d2147141_symbolBuilder>, jule::Str);
inline void _1d03b8d87_pushCycleError(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d2147141_symbolBuilder>*, jule::Str, jule::Str*);
inline void _1d03b9250_pushCrossCycleError(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d2147141_symbolBuilder>*, jule::Ptr<_1d219307c_ImportInfo>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1d03b9607_checkImportCycles(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d219307c_ImportInfo>, jule::Ptr<_1d06068bb_UseDecl>*);
inline void _1d21474e8_checkPackageAccessibility(_1d2147141_symbolBuilder*, jule::Ptr<_1d06068bb_UseDecl>*, jule::Str*, jule::Str*);
inline jule::Bool _1d21478d3_importPackage(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d219307c_ImportInfo>*, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Ptr<_1d219307c_ImportInfo> _1d2147be1_importUseDecl(jule::Ptr<_1d2147141_symbolBuilder>, jule::Ptr<_1d06068bb_UseDecl>*);
inline void _1d2147dbc_importUseDecls(jule::Ptr<_1d2147141_symbolBuilder>);
inline void _1d2148142_appendNode(_1d2147141_symbolBuilder*, _1d05ab651_Node*);
inline void _1d214831d_appendNodes(_1d2147141_symbolBuilder*);
inline void _1d2148593_pushDirectivePass(_1d2147141_symbolBuilder*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d214876e_appendTopDirectives(_1d2147141_symbolBuilder*);
inline void _1d214894a_build(jule::Ptr<_1d2147141_symbolBuilder>);
struct _1d2147141_symbolBuilder {
	jule::Ptr<_1d2147141_symbolBuilder> _field_owner;
	jule::Trait<_1d21903cb_Importer> _field_importer;
	jule::Slice<_22ba3c6bd_Log> _field_errors;
	jule::Ptr<_1d05aa7a4_Ast> _field_ast;
	jule::Ptr<_1d040428a_SymbolTable> _field_table;
	

	_1d2147141_symbolBuilder(void) = default;


};
inline jule::Str _1d21498c4_Str(_1d21494c8_Trait*);
inline jule::Bool _1d2149bd2_Equal(jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Bool _1d214a067_IsBuiltin(_1d21494c8_Trait*);
inline jule::Ptr<_1d06242bd_Fn> _1d214a375_FindMethod(_1d21494c8_Trait*, jule::Str);
inline jule::Bool _1d214a683_inherits(jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Ptr<_1d06242bd_Fn> _1d214a991_findMethodInherit(_1d21494c8_Trait*, jule::Str*);
struct _1d21494c8_Trait {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public = false;
	jule::Bool _field_Mutable = false;
	jule::Slice<jule::Ptr<_1d21d8be9_TypeSymbol>> _field_Inherits;
	jule::Slice<jule::Ptr<_1d06242bd_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _field_Implemented;
	

	_1d21494c8_Trait(void) = default;


};
inline jule::Bool _1d214b651_AutoExpr(_1d214b266_EnumItem*);
struct _1d214b266_EnumItem {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d0409d1d_Value> _field_Value;
	

	_1d214b266_EnumItem(void) = default;

	inline bool operator==(_1d214b266_EnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Value == _other._field_Value;
	}

	inline bool operator!=(_1d214b266_EnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1d214c0be_Str(_1d214bc5b_Enum*);
inline jule::Bool _1d214c3cc_Equal(jule::Ptr<_1d214bc5b_Enum>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d214b266_EnumItem> _1d214c81c_FindItem(_1d214bc5b_Enum*, jule::Str);
struct _1d214bc5b_Enum {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Ptr<_1d214b266_EnumItem>> _field_Items;
	

	_1d214bc5b_Enum(void) = default;


};
struct _1d214cc90_TypeEnumItem {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	

	_1d214cc90_TypeEnumItem(void) = default;

	inline bool operator==(_1d214cc90_TypeEnumItem _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Ident == _other._field_Ident &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d214cc90_TypeEnumItem _other) { return !this->operator==(_other); }


};
inline jule::Str _1d214d686_Str(_1d214d356_TypeEnum*);
inline jule::Bool _1d214d994_Equal(jule::Ptr<_1d214d356_TypeEnum>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d214cc90_TypeEnumItem> _1d214dd90_FindItem(_1d214d356_TypeEnum*, jule::Str);
struct _1d214d356_TypeEnum {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Bool _field_Public = false;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>> _field_Items;
	

	_1d214d356_TypeEnum(void) = default;


};
inline jule::Str _1d21508a8_Str(_1d21504ac_comptimeRange*);
inline jule::Bool _1d2150bb6_Equal(jule::Ptr<_1d21504ac_comptimeRange>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1d21504ac_comptimeRange {
	jule::Trait<_1d21502d1_comptimeRangeKind> _field_kind;
	

	_1d21504ac_comptimeRange(void) = default;

	inline bool operator==(_1d21504ac_comptimeRange _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1d21504ac_comptimeRange _other) { return !this->operator==(_other); }


};
inline jule::Str _1d2151315_Str(_1d2150ea2_comptimeStructField*);
inline jule::Bool _1d2151623_Equal(jule::Ptr<_1d2150ea2_comptimeStructField>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d2151b73__Name(jule::Ptr<_1d2150ea2_comptimeStructField>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215202a__Type(jule::Ptr<_1d2150ea2_comptimeStructField>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21523d2__Public(jule::Ptr<_1d2150ea2_comptimeStructField>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21526ac_subIdent(jule::Ptr<_1d2150ea2_comptimeStructField>, jule::Str);
struct _1d2150ea2_comptimeStructField {
	jule::Ptr<_1d06111de_FieldIns> _field_field;
	

	_1d2150ea2_comptimeStructField(void) = default;

	inline bool operator==(_1d2150ea2_comptimeStructField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d2150ea2_comptimeStructField _other) { return !this->operator==(_other); }


};
inline jule::Str _1d2152d50_Str(_1d2152998_comptimeStructFields*);
inline jule::Bool _1d215315d_Equal(jule::Ptr<_1d2152998_comptimeStructFields>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d215358c_ready(_1d2152998_comptimeStructFields*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d2153955_step(_1d2152998_comptimeStructFields*, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::I64 _1d2153bb9_len(_1d2152998_comptimeStructFields*);
struct _1d2152998_comptimeStructFields {
	jule::Slice<jule::Ptr<_1d06111de_FieldIns>> _field_fields;
	

	_1d2152998_comptimeStructFields(void) = default;


};
inline jule::Str _1d2154318_Str(_1d2153ea5_comptimeStatic*);
inline jule::Bool _1d2154626_Equal(jule::Ptr<_1d2153ea5_comptimeStatic>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d2154c0e__Name(jule::Ptr<_1d2153ea5_comptimeStatic>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21550b6__Type(jule::Ptr<_1d2153ea5_comptimeStatic>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215546d__Public(jule::Ptr<_1d2153ea5_comptimeStatic>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215577b_subIdent(jule::Ptr<_1d2153ea5_comptimeStatic>, jule::Str);
struct _1d2153ea5_comptimeStatic {
	jule::Ptr<_1d21bb65a_Var> _field_field;
	

	_1d2153ea5_comptimeStatic(void) = default;

	inline bool operator==(_1d2153ea5_comptimeStatic _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d2153ea5_comptimeStatic _other) { return !this->operator==(_other); }


};
inline jule::Str _1d2155d53_Str(_1d21559e0_comptimeStatics*);
inline jule::Bool _1d2156161_Equal(jule::Ptr<_1d21559e0_comptimeStatics>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d2156590_ready(_1d21559e0_comptimeStatics*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d2156958_step(_1d21559e0_comptimeStatics*, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::I64 _1d2156bbc_len(_1d21559e0_comptimeStatics*);
struct _1d21559e0_comptimeStatics {
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_fields;
	

	_1d21559e0_comptimeStatics(void) = default;


};
inline jule::Str _1d215731b_Str(_1d2156ea8_comptimeEnumField*);
inline jule::Bool _1d2157629_Equal(jule::Ptr<_1d2156ea8_comptimeEnumField>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d2157ad0__Name(jule::Ptr<_1d2156ea8_comptimeEnumField>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2157ddd_subIdent(jule::Ptr<_1d2156ea8_comptimeEnumField>, jule::Str);
struct _1d2156ea8_comptimeEnumField {
	jule::Ptr<_1d214b266_EnumItem> _field_field;
	

	_1d2156ea8_comptimeEnumField(void) = default;

	inline bool operator==(_1d2156ea8_comptimeEnumField _other) {
		return 
			this->_field_field == _other._field_field;
	}

	inline bool operator!=(_1d2156ea8_comptimeEnumField _other) { return !this->operator==(_other); }


};
inline jule::Str _1d215864c_Str(_1d21581c9_comptimeEnumFields*);
inline jule::Bool _1d215895a_Equal(jule::Ptr<_1d21581c9_comptimeEnumFields>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d2158d12_ready(_1d21581c9_comptimeEnumFields*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d21591ca_step(_1d21581c9_comptimeEnumFields*, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::I64 _1d215943e_len(_1d21581c9_comptimeEnumFields*);
struct _1d21581c9_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1d214b266_EnumItem>> _field_fields;
	

	_1d21581c9_comptimeEnumFields(void) = default;


};
inline jule::Str _1d2159a8d_Str(_1d215972a_comptimeParam*);
inline jule::Bool _1d2159d9b_Equal(jule::Ptr<_1d215972a_comptimeParam>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d215a5b6__Name(jule::Ptr<_1d215972a_comptimeParam>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215a96d__Type(jule::Ptr<_1d215972a_comptimeParam>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215ad25__Variadic(jule::Ptr<_1d215972a_comptimeParam>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215b1cc__Reference(jule::Ptr<_1d215972a_comptimeParam>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d215b4da_subIdent(jule::Ptr<_1d215972a_comptimeParam>, jule::Str);
struct _1d215972a_comptimeParam {
	jule::Ptr<_1d06260a0_ParamIns> _field_param;
	

	_1d215972a_comptimeParam(void) = default;

	inline bool operator==(_1d215972a_comptimeParam _other) {
		return 
			this->_field_param == _other._field_param;
	}

	inline bool operator!=(_1d215972a_comptimeParam _other) { return !this->operator==(_other); }


};
inline jule::Str _1d215bb39_Str(_1d215b7c6_comptimeParams*);
inline jule::Bool _1d215be47_Equal(jule::Ptr<_1d215b7c6_comptimeParams>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d215c376_ready(_1d215b7c6_comptimeParams*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d215c73e_step(_1d215b7c6_comptimeParams*, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::I64 _1d215c9a3_len(_1d215b7c6_comptimeParams*);
struct _1d215b7c6_comptimeParams {
	jule::Slice<jule::Ptr<_1d06260a0_ParamIns>> _field_params;
	

	_1d215b7c6_comptimeParams(void) = default;


};
inline jule::Str _1d215d102_Str(_1d215cc8e_comptimeTypeInfos*);
inline jule::Bool _1d215d410_Equal(jule::Ptr<_1d215cc8e_comptimeTypeInfos>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d215d83e_ready(_1d215cc8e_comptimeTypeInfos*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d215dc07_step(_1d215cc8e_comptimeTypeInfos*, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::I64 _1d215de6b_len(_1d215cc8e_comptimeTypeInfos*);
struct _1d215cc8e_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1d215e257_comptimeTypeInfo>> _field_types;
	

	_1d215cc8e_comptimeTypeInfos(void) = default;


};
inline jule::Str _1d215e5ba_Str(_1d215e257_comptimeTypeInfo*);
inline jule::Bool _1d215e8c8_Equal(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d215eec2__Str(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2160379__Kind(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2160731__Bits(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2160ad8__Elem(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2160e90__Size(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2161347__Key(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21616ee__Value(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2161aa6__Fields(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2161e5d__Statics(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2162315__Public(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21626bc__Binded(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2162a74__Ordered(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2162e2b__Comparable(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21632d3__Mutable(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d216368a__Types(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2163a42__Exceptional(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2163de9__CanNil(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21642a1__Result(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2164658__Params(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2164966_subIdent(jule::Ptr<_1d215e257_comptimeTypeInfo>, jule::Str);
struct _1d215e257_comptimeTypeInfo {
	jule::Ptr<_1d21d1d46_TypeKind> _field_base;
	

	_1d215e257_comptimeTypeInfo(void) = default;

	inline bool operator==(_1d215e257_comptimeTypeInfo _other) {
		return 
			this->_field_base == _other._field_base;
	}

	inline bool operator!=(_1d215e257_comptimeTypeInfo _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21650b5_Str(_1d2164c52_comptimeValue*);
inline jule::Bool _1d21653c3_Equal(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d21658ce__Unwrap(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2165c86__Type(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d216613d__Lvalue(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d21664e5__Mutable(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d216689c__Const(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2166c54__Field(jule::Ptr<_1d2164c52_comptimeValue>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2167062_subIdent(jule::Ptr<_1d2164c52_comptimeValue>, jule::Str);
struct _1d2164c52_comptimeValue {
	jule::Ptr<_1d0408c95_Data> _field_data;
	

	_1d2164c52_comptimeValue(void) = default;

	inline bool operator==(_1d2164c52_comptimeValue _other) {
		return 
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1d2164c52_comptimeValue _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21676b1_Str(_1d216734d_comptimeFiles*);
inline jule::Bool _1d21679be_Equal(jule::Ptr<_1d216734d_comptimeFiles>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d2167ded_ready(_1d216734d_comptimeFiles*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d21682b6_step(_1d216734d_comptimeFiles*, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::I64 _1d216852a_len(_1d216734d_comptimeFiles*);
struct _1d216734d_comptimeFiles {
	jule::Slice<jule::Ptr<_1d040428a_SymbolTable>> _field_files;
	

	_1d216734d_comptimeFiles(void) = default;


};
inline jule::Str _1d2168b79_Str(_1d2168816_comptimeFile*);
inline jule::Bool _1d2168e87_Equal(jule::Ptr<_1d2168816_comptimeFile>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d2169460__Path(jule::Ptr<_1d2168816_comptimeFile>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2169817__Name(jule::Ptr<_1d2168816_comptimeFile>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2169bbe__Dir(jule::Ptr<_1d2168816_comptimeFile>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d2169ecc_subIdent(jule::Ptr<_1d2168816_comptimeFile>, jule::Str);
struct _1d2168816_comptimeFile {
	jule::Ptr<_1d040428a_SymbolTable> _field_file;
	

	_1d2168816_comptimeFile(void) = default;

	inline bool operator==(_1d2168816_comptimeFile _other) {
		return 
			this->_field_file == _other._field_file;
	}

	inline bool operator!=(_1d2168816_comptimeFile _other) { return !this->operator==(_other); }


};
inline jule::Fn<jule::Bool(jule::Ptr<_1d219b34e_Sema>*,jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*)> _1d216cb39_readyFn(jule::Ptr<_1d216c70a_constraintChecker>);
inline jule::Bool _1d216cd9d_readyFi(jule::Ptr<_1d216c70a_constraintChecker>);
inline jule::Bool _1d216d112_readySi(jule::Ptr<_1d216c70a_constraintChecker>);
inline jule::Bool _1d216d376_ready(jule::Ptr<_1d216c70a_constraintChecker>);
inline jule::Bool _1d216d5da_check(jule::Ptr<_1d216c70a_constraintChecker>);
struct _1d216c70a_constraintChecker {
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1d21d05b4_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _field_genericsA;
	jule::Ptr<_1d0626e6e_FnIns> _field_fi;
	jule::Ptr<_1d0611bd4_StructIns> _field_si;
	jule::Ptr<_22be1281d_Token> _field_et;
	jule::Bool _field_uniq = false;
	

	_1d216c70a_constraintChecker(void) = default;


};
inline jule::Bool _1d216e9a4_IsTraitImpl(_1d216e5a8_Impl*);
inline jule::Bool _1d216ec18_IsStructImpl(_1d216e5a8_Impl*);
struct _1d216e5a8_Impl {
	jule::Ptr<_1d05de563_TypeDecl> _field_Base;
	jule::Ptr<_1d05de563_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1d06242bd_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_Statics;
	

	_1d216e5a8_Impl(void) = default;


};
struct _1d2174613_Scope {
	jule::Ptr<_1d2174613_Scope> _field_Parent;
	jule::Bool _field_Unsafety = false;
	jule::Bool _field_Deferred = false;
	jule::Slice<jule::Any> _field_Stmts;
	

	_1d2174613_Scope(void) = default;


};
struct _1d2174a0e_If {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	

	_1d2174a0e_If(void) = default;

	inline bool operator==(_1d2174a0e_If _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d2174a0e_If _other) { return !this->operator==(_other); }


};
struct _1d2174cea_Else {
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	

	_1d2174cea_Else(void) = default;

	inline bool operator==(_1d2174cea_Else _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d2174cea_Else _other) { return !this->operator==(_other); }


};
struct _1d217516e_Conditional {
	jule::Slice<jule::Ptr<_1d2174a0e_If>> _field_Elifs;
	jule::Ptr<_1d2174cea_Else> _field_Default;
	

	_1d217516e_Conditional(void) = default;


};
struct _1d217545a_InfIter {
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	

	_1d217545a_InfIter(void) = default;

	inline bool operator==(_1d217545a_InfIter _other) {
		return 
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d217545a_InfIter _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d2175c74_IsWhileNext(_1d21758cd_WhileIter*);
struct _1d21758cd_WhileIter {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Next = jule::Any(nullptr);
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	

	_1d21758cd_WhileIter(void) = default;

	inline bool operator==(_1d21758cd_WhileIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Next == _other._field_Next &&
			this->_field_Scope == _other._field_Scope;
	}

	inline bool operator!=(_1d21758cd_WhileIter _other) { return !this->operator==(_other); }


};
struct _1d21762b3_RangeIter {
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	jule::Ptr<_1d21bb65a_Var> _field_KeyA;
	jule::Ptr<_1d21bb65a_Var> _field_KeyB;
	

	_1d21762b3_RangeIter(void) = default;

	inline bool operator==(_1d21762b3_RangeIter _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Scope == _other._field_Scope &&
			this->_field_KeyA == _other._field_KeyA &&
			this->_field_KeyB == _other._field_KeyB;
	}

	inline bool operator!=(_1d21762b3_RangeIter _other) { return !this->operator==(_other); }


};
struct _1d21766ae_ContSt {
	jule::Uintptr _field_It = 0;
	

	_1d21766ae_ContSt(void) = default;

	inline bool operator==(_1d21766ae_ContSt _other) {
		return 
			this->_field_It == _other._field_It;
	}

	inline bool operator!=(_1d21766ae_ContSt _other) { return !this->operator==(_other); }


};
struct _1d2176a66_BreakSt {
	jule::Uintptr _field_It = 0;
	jule::Uintptr _field_Mtch = 0;
	

	_1d2176a66_BreakSt(void) = default;

	inline bool operator==(_1d2176a66_BreakSt _other) {
		return 
			this->_field_It == _other._field_It &&
			this->_field_Mtch == _other._field_Mtch;
	}

	inline bool operator!=(_1d2176a66_BreakSt _other) { return !this->operator==(_other); }


};
struct _1d2176d52_Label {
	jule::Str _field_Ident;
	

	_1d2176d52_Label(void) = default;

	inline bool operator==(_1d2176d52_Label _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d2176d52_Label _other) { return !this->operator==(_other); }


};
struct _1d217713d_GotoSt {
	jule::Str _field_Ident;
	

	_1d217713d_GotoSt(void) = default;

	inline bool operator==(_1d217713d_GotoSt _other) {
		return 
			this->_field_Ident == _other._field_Ident;
	}

	inline bool operator!=(_1d217713d_GotoSt _other) { return !this->operator==(_other); }


};
struct _1d21774e5_Postfix {
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Str _field_Op;
	

	_1d21774e5_Postfix(void) = default;

	inline bool operator==(_1d21774e5_Postfix _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d21774e5_Postfix _other) { return !this->operator==(_other); }


};
struct _1d2177968_Assign {
	jule::Ptr<_1d0615b83_OperandExprModel> _field_L;
	jule::Ptr<_1d0615b83_OperandExprModel> _field_R;
	jule::Ptr<_22be1281d_Token> _field_Op;
	

	_1d2177968_Assign(void) = default;

	inline bool operator==(_1d2177968_Assign _other) {
		return 
			this->_field_L == _other._field_L &&
			this->_field_R == _other._field_R &&
			this->_field_Op == _other._field_Op;
	}

	inline bool operator!=(_1d2177968_Assign _other) { return !this->operator==(_other); }


};
struct _1d2177d20_MultiAssign {
	jule::Slice<jule::Ptr<_1d0408c95_Data>> _field_L;
	jule::Any _field_R = jule::Any(nullptr);
	

	_1d2177d20_MultiAssign(void) = default;


};
inline jule::Bool _1d2178936_IsGenericTypeMatch(_1d217842a_Match*);
struct _1d217842a_Match {
	jule::Ptr<_1d0408c95_Data> _field_Expr;
	jule::Bool _field_TypeMatch = false;
	jule::Bool _field_Comptime = false;
	jule::Slice<jule::Ptr<_1d2178e75_Case>> _field_Cases;
	jule::Ptr<_1d2178e75_Case> _field_Default;
	

	_1d217842a_Match(void) = default;


};
inline jule::Bool _1d217923e_isDefault(_1d2178e75_Case*);
struct _1d2178e75_Case {
	jule::Ptr<_1d217842a_Match> _field_Owner;
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1d0408c95_Data>> _field_Exprs;
	jule::Ptr<_1d2178e75_Case> _field_Next;
	

	_1d2178e75_Case(void) = default;


};
struct _1d217952a_FallSt {
	jule::Uintptr _field_DestCase = 0;
	

	_1d217952a_FallSt(void) = default;

	inline bool operator==(_1d217952a_FallSt _other) {
		return 
			this->_field_DestCase == _other._field_DestCase;
	}

	inline bool operator!=(_1d217952a_FallSt _other) { return !this->operator==(_other); }


};
struct _1d217989e_RetSt {
	jule::Ptr<_1d0626e6e_FnIns> _field_Func;
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d217989e_RetSt(void) = default;

	inline bool operator==(_1d217989e_RetSt _other) {
		return 
			this->_field_Func == _other._field_Func &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d217989e_RetSt _other) { return !this->operator==(_other); }


};
struct _1d2179ea9_scopeLabel {
	jule::Ptr<_22be1281d_Token> _field_token;
	jule::Ptr<_1d2176d52_Label> _field_label;
	jule::I64 _field_pos = 0;
	jule::Ptr<_1d217b241_scopeChecker> _field_scope;
	jule::Bool _field_used = false;
	

	_1d2179ea9_scopeLabel(void) = default;

	inline bool operator==(_1d2179ea9_scopeLabel _other) {
		return 
			this->_field_token == _other._field_token &&
			this->_field_label == _other._field_label &&
			this->_field_pos == _other._field_pos &&
			this->_field_scope == _other._field_scope &&
			this->_field_used == _other._field_used;
	}

	inline bool operator!=(_1d2179ea9_scopeLabel _other) { return !this->operator==(_other); }


};
struct _1d217a42c_scopeGoto {
	jule::Ptr<_1d05ebc68_GotoSt> _field_gt;
	jule::Ptr<_1d217b241_scopeChecker> _field_scope;
	jule::I64 _field_pos = 0;
	

	_1d217a42c_scopeGoto(void) = default;

	inline bool operator==(_1d217a42c_scopeGoto _other) {
		return 
			this->_field_gt == _other._field_gt &&
			this->_field_scope == _other._field_scope &&
			this->_field_pos == _other._field_pos;
	}

	inline bool operator!=(_1d217a42c_scopeGoto _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d219307c_ImportInfo> _1d217b6b4_SelectPackage(_1d217b241_scopeChecker*, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>);
inline jule::Ptr<_1d21bb65a_Var> _1d217ba6b_FindVar(_1d217b241_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d217be23_FindTypeAlias(_1d217b241_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d060ddbd_Struct> _1d217c2ca_FindStruct(_1d217b241_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06242bd_Fn> _1d217c682_FindFn(_1d217b241_scopeChecker*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21494c8_Trait> _1d217c990_FindTrait(_1d217b241_scopeChecker*, jule::Str);
inline jule::Ptr<_1d214bc5b_Enum> _1d217cc9d_FindEnum(_1d217b241_scopeChecker*, jule::Str);
inline jule::Ptr<_1d214d356_TypeEnum> _1d217d0ab_FindTypeEnum(_1d217b241_scopeChecker*, jule::Str);
inline jule::Bool _1d217d3db_isUnsafe(jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Bool _1d217d650_isRoot(_1d217b241_scopeChecker*);
inline void _1d217d82b_stop(_1d217b241_scopeChecker*);
inline jule::Bool _1d217da90_stopped(_1d217b241_scopeChecker*);
inline jule::Bool _1d217dd04_isDeferred(jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Ptr<_1d217b241_scopeChecker> _1d217e068_getRoot(jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Ptr<_1d217b241_scopeChecker> _1d217e2cc_getHardRoot(jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Ptr<_1d2176d52_Label> _1d217e5da_findLabel(_1d217b241_scopeChecker*, jule::Str);
inline jule::Ptr<_1d2179ea9_scopeLabel> _1d217e8e8_findLabelScope(jule::Ptr<_1d217b241_scopeChecker>, jule::Str);
inline jule::Ptr<_1d2179ea9_scopeLabel> _1d217ec06_findLabelAll(_1d217b241_scopeChecker*, jule::Str);
inline jule::Bool _1d21800ad_isDuplicatedIdent(_1d217b241_scopeChecker*, jule::Uintptr, jule::Str);
inline void _1d2180333_checkVarDecl(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0601b6e_VarDecl>);
inline void _1d21805a8_checkTypeAliasDecl(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d06054d0_TypeAliasDecl>);
inline jule::Ptr<_1d2174613_Scope> _1d218081c_getChild(_1d217b241_scopeChecker*);
inline void _1d2180bd5_checkChildSsc(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ee199_ScopeTree>*, jule::Ptr<_1d2174613_Scope>*, jule::Ptr<_1d217b241_scopeChecker>*);
inline jule::Ptr<_1d2174613_Scope> _1d218108c_checkChildSc(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ee199_ScopeTree>*, jule::Ptr<_1d217b241_scopeChecker>*);
inline jule::Ptr<_1d2174613_Scope> _1d218139a_checkChild(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ee199_ScopeTree>*);
inline void _1d2181620_checkAnonScope(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ee199_ScopeTree>);
inline void _1d218193e_processErrorCall(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel>*, jule::Ptr<_22be1281d_Token>);
inline void _1d2181bb4_checkExpr(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05e36dd_Expr>);
inline jule::Ptr<_1d2174a0e_If> _1d2181ec2_checkIf(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d06044ce_If>);
inline jule::Ptr<_1d2174cea_Else> _1d21822d0_checkElse(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0604886_Else>);
inline void _1d2182555_checkConditional(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0604d09_Conditional>);
inline void _1d21829b7_checkIterScopeSsc(jule::Ptr<_1d217b241_scopeChecker>, jule::Uintptr, jule::Ptr<_1d05ee199_ScopeTree>, jule::Ptr<_1d2174613_Scope>*, jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Ptr<_1d2174613_Scope> _1d2182e18_checkIterScopeSc(jule::Ptr<_1d217b241_scopeChecker>, jule::Uintptr, jule::Ptr<_1d05ee199_ScopeTree>, jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Ptr<_1d2174613_Scope> _1d21832c0_checkIterScope(jule::Ptr<_1d217b241_scopeChecker>, jule::Uintptr, jule::Ptr<_1d05ee199_ScopeTree>*);
inline void _1d2183545_checkInfIter(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0602686_Iter>*);
inline void _1d21837ba_checkWhileIter(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0602686_Iter>*);
inline void _1d2183b83_checkComptimeRangeIter(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0602686_Iter>*, jule::Ptr<_1d21762b3_RangeIter>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d2183e08_checkRangeIter(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0602686_Iter>*);
inline void _1d218417d_checkIter(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0602686_Iter>);
inline jule::Bool _1d218448b_checkValidContLabel(jule::Ptr<_1d217b241_scopeChecker>, jule::Uintptr);
inline jule::Bool _1d2184799_checkValidBreakLabel(jule::Ptr<_1d217b241_scopeChecker>, jule::Uintptr);
inline jule::Ptr<_1d21766ae_ContSt> _1d2184aa7_checkContValidScope(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d060405b_ContSt>);
inline void _1d2184d2c_checkCont(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d060405b_ContSt>);
inline void _1d21850a2_checkLabel(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05eb8b1_LabelSt>);
inline void _1d2185327_pushGoto(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ebc68_GotoSt>);
inline void _1d218559c_checkPostfix(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ecb9d_AssignSt>);
inline jule::Bool _1d21858aa_isNewAssignIdent(_1d217b241_scopeChecker*, jule::Str);
inline jule::Bool _1d2185d0b_checkStructureAssignOp(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_1d05ecb9d_AssignSt>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d2186081_checkSingleAssign(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ecb9d_AssignSt>*);
inline void _1d21865ae_processEndPartOfMultiAssign(_1d217b241_scopeChecker*, jule::Ptr<_1d2177d20_MultiAssign>*, jule::Ptr<_1d05ecb9d_AssignSt>*, jule::Ptr<_1d05ec65e_AssignLeft>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d2186845_checkMultiAssign(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ecb9d_AssignSt>*);
inline void _1d2186aba_checkAssignSt(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ecb9d_AssignSt>);
inline jule::Ptr<_1d2174613_Scope> _1d2186e72_checkCaseScope(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d2178e75_Case>*, jule::Ptr<_1d05ee199_ScopeTree>*);
inline jule::Ptr<_1d2178e75_Case> _1d218746c_checkCase(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d217842a_Match>, jule::I64, jule::Ptr<_1d0605953_Case>, jule::Ptr<_1d0408c95_Data>);
inline void _1d2187835_checkCases(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0606129_MatchCase>*, jule::Ptr<_1d217842a_Match>, jule::Ptr<_1d0408c95_Data>);
inline jule::Ptr<_1d2178e75_Case> _1d2187bdc_checkDefault(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d217842a_Match>, jule::Ptr<_1d0604886_Else>);
inline void _1d218800b_checkComptimePanic(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_22be1281d_Token>, jule::Ptr<_1d2174613_Scope>*);
inline void _1d218832a_processConstMatch(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d217842a_Match>, jule::Ptr<_1d0606129_MatchCase>*);
inline void _1d21885a0_checkTypeMatch(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0606129_MatchCase>*);
inline void _1d2188825_checkCommonMatch(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0606129_MatchCase>*);
inline void _1d2188a9a_checkMatch(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0606129_MatchCase>);
inline void _1d2188d20_checkFall(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ec054_FallSt>);
inline jule::Ptr<_1d2176a66_BreakSt> _1d218912d_checkBreakWithLabel(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0603ba4_BreakSt>);
inline jule::Ptr<_1d2176a66_BreakSt> _1d218943b_checkPlainBreak(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0603ba4_BreakSt>);
inline void _1d21896b1_checkBreak(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0603ba4_BreakSt>);
inline void _1d2189936_checkRet(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d0602026_RetSt>);
inline void _1d2189bab_checkUseExpr(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05e407e_UseExpr>);
inline void _1d2189e31_checkNode(jule::Ptr<_1d217b241_scopeChecker>, jule::Any*);
inline void _1d218a10c_checkResult(jule::Ptr<_1d217b241_scopeChecker>);
inline void _1d218a2d8_checkTree(jule::Ptr<_1d217b241_scopeChecker>);
inline void _1d218a607_checkGoto(_1d217b241_scopeChecker*, jule::Ptr<_1d217a42c_scopeGoto>*, jule::Ptr<_1d2179ea9_scopeLabel>*);
inline void _1d218a7d3_checkGotos(_1d217b241_scopeChecker*);
inline void _1d218a9ae_checkLabels(_1d217b241_scopeChecker*);
inline void _1d218ab8a_checkVars(_1d217b241_scopeChecker*);
inline void _1d218ad66_checkAliases(_1d217b241_scopeChecker*);
inline void _1d218b185_check(jule::Ptr<_1d217b241_scopeChecker>, jule::Ptr<_1d05ee199_ScopeTree>*, jule::Ptr<_1d2174613_Scope>*);
inline jule::Ptr<_1d217b241_scopeChecker> _1d218b3e9_newChildChecker(jule::Ptr<_1d217b241_scopeChecker>);
struct _1d217b241_scopeChecker {
	jule::Ptr<_22be1281d_Token> _field_calledFrom;
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Ptr<_1d0626e6e_FnIns> _field_owner;
	jule::Ptr<_1d217b241_scopeChecker> _field_parent;
	jule::I64 _field_childIndex = 0;
	jule::Ptr<_1d040428a_SymbolTable> _field_table;
	jule::Ptr<_1d2174613_Scope> _field_scope;
	jule::Ptr<_1d05ee199_ScopeTree> _field_tree;
	jule::Ptr<_1d0626e6e_FnIns> _field_result;
	jule::Uintptr _field_it = 0;
	jule::Uintptr _field_cse = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1d2179ea9_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1d217a42c_scopeGoto>>> _field_gotos;
	jule::I64 _field_i = 0;
	

	_1d217b241_scopeChecker(void) = default;

	inline bool operator==(_1d217b241_scopeChecker _other) {
		return 
			this->_field_calledFrom == _other._field_calledFrom &&
			this->_field_s == _other._field_s &&
			this->_field_owner == _other._field_owner &&
			this->_field_parent == _other._field_parent &&
			this->_field_childIndex == _other._field_childIndex &&
			this->_field_table == _other._field_table &&
			this->_field_scope == _other._field_scope &&
			this->_field_tree == _other._field_tree &&
			this->_field_result == _other._field_result &&
			this->_field_it == _other._field_it &&
			this->_field_cse == _other._field_cse &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1d217b241_scopeChecker _other) { return !this->operator==(_other); }


};
inline void _1d218c3d9_checkCdef(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218c65e_checkTypedef(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218c8d4_checkDerive(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218cb59_checkNamespace(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218cdce_checkDeprecated(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218d154_checkTest(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218d3c9_checkDirective(_1d218be99_directiveChecker*, jule::Ptr<_1d05aba4c_Directive>*);
inline void _1d218d5a5_check(_1d218be99_directiveChecker*);
struct _1d218be99_directiveChecker {
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1d05aba4c_Directive>>> _field_d;
	jule::Any _field_o;
	

	_1d218be99_directiveChecker(void) = default;

	inline bool operator==(_1d218be99_directiveChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_d == _other._field_d &&
			this->_field_o == _other._field_o;
	}

	inline bool operator!=(_1d218be99_directiveChecker _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d219307c_ImportInfo> _1d2193588_SelectPackage(_1d219307c_ImportInfo*, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>);
inline jule::Ptr<_1d21bb65a_Var> _1d2193940_FindVar(_1d219307c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d2193ce7_FindTypeAlias(_1d219307c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d060ddbd_Struct> _1d219419e_FindStruct(_1d219307c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06242bd_Fn> _1d2194556_FindFn(_1d219307c_ImportInfo*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21494c8_Trait> _1d2194864_FindTrait(_1d219307c_ImportInfo*, jule::Str);
inline jule::Ptr<_1d214bc5b_Enum> _1d2194b72_FindEnum(_1d219307c_ImportInfo*, jule::Str);
inline jule::Ptr<_1d214d356_TypeEnum> _1d2194e80_FindTypeEnum(_1d219307c_ImportInfo*, jule::Str);
inline jule::Bool _1d2195326_isLookupable(_1d219307c_ImportInfo*, jule::Str);
inline jule::Bool _1d2195634_existIdent(_1d219307c_ImportInfo*, jule::Str);
inline jule::Bool _1d21958ba_isAccessibleViaSelection(_1d219307c_ImportInfo*);
struct _1d219307c_ImportInfo {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Ident;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Std = false;
	jule::Bool _field_ImportAll = false;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_Selected;
	jule::Ptr<_1d2195bb7_Package> _field_Package;
	jule::I64 _field_ModId = 0;
	

	_1d219307c_ImportInfo(void) = default;


};
inline jule::Ptr<_1d219307c_ImportInfo> _1d219617e_SelectPackage(_1d2195bb7_Package*, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>);
inline jule::Ptr<_1d21bb65a_Var> _1d2196536_FindVar(_1d2195bb7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21968dd_FindTypeAlias(_1d2195bb7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d060ddbd_Struct> _1d2196c95_FindStruct(_1d2195bb7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06242bd_Fn> _1d219714c_FindFn(_1d2195bb7_Package*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21494c8_Trait> _1d219745a_FindTrait(_1d2195bb7_Package*, jule::Str);
inline jule::Ptr<_1d214bc5b_Enum> _1d2197768_FindEnum(_1d2195bb7_Package*, jule::Str);
inline jule::Ptr<_1d214d356_TypeEnum> _1d2197a76_FindTypeEnum(_1d2195bb7_Package*, jule::Str);
struct _1d2195bb7_Package {
	jule::Slice<jule::Ptr<_1d040428a_SymbolTable>> _field_Files;
	

	_1d2195bb7_Package(void) = default;


};
inline jule::Ptr<_1d215e257_comptimeTypeInfo> _1d219acbb_pushComptimeTypeInfo(_1d219a837_commonSemaMeta*, jule::Ptr<_1d21d1d46_TypeKind>*);
struct _1d219a837_commonSemaMeta {
	jule::Slice<jule::Ptr<_1d215e257_comptimeTypeInfo>> _field_comptimeTypeInfos;
	

	_1d219a837_commonSemaMeta(void) = default;


};
inline jule::Ptr<_1d219307c_ImportInfo> _1d219b7c2_SelectPackage(_1d219b34e_Sema*, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>);
inline jule::Ptr<_1d21bb65a_Var> _1d219bb79_FindVar(_1d219b34e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d219c031_FindTypeAlias(_1d219b34e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d060ddbd_Struct> _1d219c3d8_FindStruct(_1d219b34e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06242bd_Fn> _1d219c790_FindFn(_1d219b34e_Sema*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21494c8_Trait> _1d219ca9d_FindTrait(_1d219b34e_Sema*, jule::Str);
inline jule::Ptr<_1d214bc5b_Enum> _1d219cdab_FindEnum(_1d219b34e_Sema*, jule::Str);
inline jule::Ptr<_1d214d356_TypeEnum> _1d219d1b9_FindTypeEnum(_1d219b34e_Sema*, jule::Str);
inline jule::Bool _1d219d5d7_isFlag(_1d219b34e_Sema*, jule::I64);
inline void _1d219d85c_setCurrentFile(_1d219b34e_Sema*, jule::Ptr<_1d040428a_SymbolTable>);
inline void _1d219dc25_pushErr(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d219e044_pushSuggestion(_1d219b34e_Sema*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d219e3eb_isAccessibleDefine(_1d219b34e_Sema*, jule::Bool, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d219e84c_isDuplicatedIdent(_1d219b34e_Sema*, jule::Uintptr, jule::Str, jule::Bool);
inline void _1d219eb6b_checkDirectives(jule::Ptr<_1d219b34e_Sema>, jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Any);
inline jule::Bool _1d21a00bc_checkGenericQuantity(_1d219b34e_Sema*, jule::I64, jule::I64, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d21a0496_isDuplicatedImportSelection(_1d219b34e_Sema*, jule::Uintptr, jule::Str);
inline jule::Any _1d21a085e_getImportDef(_1d219b34e_Sema*, jule::Str, jule::Ptr<_1d219307c_ImportInfo>*);
inline jule::Bool _1b72bc446_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::Bool _1b72c10a4_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d21d10ed_TypeAlias>*);
inline jule::Bool _1b72c4bac_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Bool _1b72c894c_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Bool _1b72cc555_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d214bc5b_Enum>*);
inline jule::Bool _1b72d115d_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d214d356_TypeEnum>*);
inline jule::Bool _1b72d4c66_checkImportSelection(_1d219b34e_Sema*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Bool _1d21a1046_checkImportSelectedSelections(_1d219b34e_Sema*, jule::Ptr<_1d219307c_ImportInfo>*);
inline jule::Bool _1b72d8c48_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d21bb65a_Var>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1b72dac28_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1b72dc741_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d060ddbd_Struct>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1b72e02e3_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d06242bd_Fn>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1b72e2e50_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d21494c8_Trait>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1b72e5a02_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d214bc5b_Enum>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1b72e85a4_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d214d356_TypeEnum>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1d21a1772_checkImportAllSelections(_1d219b34e_Sema*, jule::Ptr<_1d219307c_ImportInfo>*);
inline jule::Bool _1d21a1a91_checkImportSelections(_1d219b34e_Sema*, jule::Ptr<_1d219307c_ImportInfo>*);
inline jule::Bool _1d21a1d9e_isUseAliasDuplication(_1d219b34e_Sema*, jule::Ptr<_1d219307c_ImportInfo>*);
inline jule::Bool _1d21a21ac_checkImport(_1d219b34e_Sema*, jule::Ptr<_1d219307c_ImportInfo>*);
inline void _1d21a2388_checkImports(_1d219b34e_Sema*);
inline void _1d21a2564_implFileImpls(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21a2740_implImpls(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21a291b_checkEnums(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21a2ae7_checkFileInherits(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21a2cc3_checkInherits(jule::Ptr<_1d219b34e_Sema>);
inline _1d21e3187_typeChecker _1d21a3224_typeChecker(jule::Ptr<_1d219b34e_Sema>, jule::Trait<_1d2200172_Lookup>, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>, jule::Ptr<_1d21e22a7_referencer>);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a371e_buildTypeWithRefers(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d05de563_TypeDecl>*, jule::Trait<_1d2200172_Lookup>, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>, jule::Ptr<_1d21e22a7_referencer>);
inline jule::Bool _1d21a3c19_checkTypeWithRefers(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d8be9_TypeSymbol>*, jule::Trait<_1d2200172_Lookup>, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>, jule::Ptr<_1d21e22a7_referencer>);
inline jule::Ptr<_1d216c70a_constraintChecker> _1d21a3e7d_constraintChecker(jule::Ptr<_1d219b34e_Sema>);
inline jule::Bool _1d21a4335_checkType(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d8be9_TypeSymbol>*, jule::Trait<_1d2200172_Lookup>);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a4786_buildTypeWithGenerics(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d05de563_TypeDecl>*, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>, jule::Ptr<_1d0629dc8_ReferenceStack>);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a4a94_buildType(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d05de563_TypeDecl>*);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a4da2_selectType(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d05de563_TypeDecl>*);
inline jule::Ptr<_1d040a813_Eval> _1d21a5303_evalpd(jule::Ptr<_1d219b34e_Sema>, jule::Trait<_1d2200172_Lookup>, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d21bb65a_Var>);
inline jule::Ptr<_1d040a813_Eval> _1d21a56aa_evalp(jule::Ptr<_1d219b34e_Sema>, jule::Trait<_1d2200172_Lookup>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Ptr<_1d040a813_Eval> _1d21a59b8_eval(jule::Ptr<_1d219b34e_Sema>, jule::Trait<_1d2200172_Lookup>);
inline jule::Bool _1d21a5eb3_checkAssignType(jule::Ptr<_1d219b34e_Sema>, jule::Bool, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d21a6414_checkTypeCompatibility(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a6887_buildNonGenericTypeKind(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d05de563_TypeDecl>*, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>*, jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>*);
inline jule::Bool _1d21a6c72_buildFnNonGenericTypeKinds(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>*);
inline jule::Ptr<_1d0626e6e_FnIns> _1d21a7091_getTraitCheckFnKind(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Bool _1d21a74e2_checkConstraintsFn(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Bool _1d21a7943_checkConstraintsStruct(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d0611bd4_StructIns>);
inline jule::Bool _1d21a7cea_fnEnvironment(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Fn<jule::Bool(jule::Ptr<_1d219b34e_Sema>*,jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*)>);
inline void _1d21a8070_checkFnParamKind(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06260a0_ParamIns>*);
inline jule::Bool _1d21a837d_reloadFnInsTypes(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Bool _1d21a8801_checkRefValidityForInitExpr(jule::Ptr<_1d219b34e_Sema>, jule::Bool, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1d21a8dc8_checkValidityForInitExpr(jule::Ptr<_1d219b34e_Sema>, jule::Bool, jule::Bool, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1d21a9291_checkTypeAliasDeclKind(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d10ed_TypeAlias>*, jule::Trait<_1d2200172_Lookup>);
inline void _1d21a95b0_checkTypeAliasDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d10ed_TypeAlias>*, jule::Trait<_1d2200172_Lookup>);
inline void _1d21a9835_checkTypeAliasDeclDup(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d10ed_TypeAlias>*);
inline jule::Bool _1d21a9a99_checkTypeAliasDecls(jule::Ptr<_1d219b34e_Sema>);
inline void _1b737a8ab_checkEnumItemsDup(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d214b266_EnumItem>>);
inline void _1b7384cc2_checkEnumItemsDup(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>>);
inline void _1d21aa094_checkEnumItemsStr(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d214bc5b_Enum>*);
inline void _1b7361e47_checkEnumItemInt(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d214bc5b_Enum>*, jule::Ptr<_1d21d9568_Prim>*, jule::Ptr<_1d214b266_EnumItem>*, jule::U64*);
inline void _1b736e680_checkEnumItemInt(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d214bc5b_Enum>*, jule::Ptr<_1d21d9568_Prim>*, jule::Ptr<_1d214b266_EnumItem>*, jule::I64*);
inline void _1b735d5e7_checkEnumItemsInt1(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d9568_Prim>*, jule::Ptr<_1d214bc5b_Enum>*);
inline void _1b735ce32_checkEnumItemsInt1(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21d9568_Prim>*, jule::Ptr<_1d214bc5b_Enum>*);
inline void _1d21aab44_checkEnumItemsInt(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d214bc5b_Enum>*);
inline void _1d21aadb9_checkEnumDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d214bc5b_Enum>*);
inline void _1d21ab13e_checkTypeEnumDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d214d356_TypeEnum>*);
inline jule::Bool _1d21ab3a3_checkEnumDecls(jule::Ptr<_1d219b34e_Sema>);
inline jule::Bool _1d21ab617_checkTypeEnumDecls(jule::Ptr<_1d219b34e_Sema>);
inline jule::Bool _1d21ab925_checkDeclGenerics(_1d219b34e_Sema*, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>*);
inline jule::Bool _1d21abc33_checkFnDeclParamsDup(_1d219b34e_Sema*, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Bool _1d21ac041_checkFnDeclResultDup(_1d219b34e_Sema*, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Bool _1d21ac34e_checkFnVariadicParam(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d21ac5c4_checkFnDeclPrototype(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Bool _1d21aca25_catchTraitInheritCycle(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d21494c8_Trait>, jule::Str*);
inline jule::Bool _1d21acd55__checkTraitDeclInherits(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21494c8_Trait>*);
inline void _1d21ad0db_checkTraitDeclInherits(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21494c8_Trait>*);
inline void _1d21ad361_checkTraitDeclMethod(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d21ad5d6_checkTraitDeclMethods(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21494c8_Trait>*);
inline void _1d21ad85b_checkTraitDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Bool _1d21adac0_checkTraitDecls(jule::Ptr<_1d219b34e_Sema>);
inline jule::Bool _1d21ade77_checkTraitImplMethods(_1d219b34e_Sema*, jule::Ptr<_1d21494c8_Trait>*, jule::Ptr<_1d216e5a8_Impl>*);
inline jule::Bool _1d21ae32e_implToStruct(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*, jule::Ptr<_1d216e5a8_Impl>*);
inline void _1d21ae5a4_implTrait(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d216e5a8_Impl>*);
inline void _1d21ae829_implStruct(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d216e5a8_Impl>*);
inline void _1d21aea9e_implImpl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d216e5a8_Impl>*);
inline void _1d21aedbd_checkVarDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21bb65a_Var>*, jule::Trait<_1d2200172_Lookup>);
inline void _1d21b0143_checkGlobalVarDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21bb65a_Var>*);
inline jule::Bool _1d21b03a7_checkGlobalDecls(jule::Ptr<_1d219b34e_Sema>);
inline jule::Bool _1d21b075e_checkStructTraitImpl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Bool _1d21b0a6c_checkStructImpls(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Bool _1d21b0d7a_checkStructFields(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1d21b1100_checkStructDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Bool _1d21b1364_checkStructDecls(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b15d9_checkAnonFnDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d21b185e_checkFnDecl(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Bool _1d21b1b6c_checkFuncDecls(jule::Ptr<_1d219b34e_Sema>, jule::Slice<jule::Ptr<_1d06242bd_Fn>>*);
inline jule::Bool _1d21b1dd1_checkFnDecls(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b2299_pushCycleError(_1d219b34e_Sema*, jule::Str*, jule::Str*, jule::Str*);
inline jule::Bool _1d21b26ea_checkCrossCycle(_1d219b34e_Sema*, jule::Ptr<_1d060ddbd_Struct>*, jule::Ptr<_1d060ddbd_Struct>*, jule::Str*);
inline jule::Bool _1d21b2b6d_checkStructDeriveIllegalCycles(_1d219b34e_Sema*, jule::Str, jule::Ptr<_1d060ddbd_Struct>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d21b2eae_checkStructInsDeriveClone(_1d219b34e_Sema*, jule::Ptr<_1d0611bd4_StructIns>);
inline void _1d21b319b_checkPackageDecls(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b34dc_checkDataForTypeInference(_1d219b34e_Sema*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline void _1d21b3773_checkVar(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d21b3a92_checkTypeVar(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d21bb65a_Var>*, jule::Trait<_1d2200172_Lookup>);
inline void _1d21b3c6d_checkGlobalTypes(jule::Ptr<_1d219b34e_Sema>);
inline jule::Ptr<_1d0626e6e_FnIns> _1d21b4125_readyToCheckFn(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d21b4444_checkTypeMethod(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_1d06242bd_Fn>*);
inline jule::Ptr<_1d0626e6e_FnIns> _1d21b4895_checkStructInsOp(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_1d06242bd_Fn>*, jule::Fn<jule::Bool(jule::Ptr<_1d06242bd_Fn>)>);
inline jule::Bool _1d21b4c4c_checkStructEnv(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d21b5104_precheckStructIns(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_22be1281d_Token>);
inline void _1d21b5379_checkStructIns(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1d21b55ee_checkTypeStruct(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1d21b57ca_checkStructTypes(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b5a72_checkStructInsOperators(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0611bd4_StructIns>);
inline void _1d21b5d08_precheckStructType(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1d21b5ed4_precheckStructTypes(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b6259_checkRets(_1d219b34e_Sema*, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1d21b6578_checkFnInsSc(_1d219b34e_Sema*, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_1d217b241_scopeChecker>*);
inline void _1d21b6897_checkFnInsCaller(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_22be1281d_Token>);
inline void _1d21b6b1c_checkFnIns(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1d21b6d92_checkTypeFn(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d21b7117_checkTestFn(_1d219b34e_Sema*, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1d21b738c_precheckTypeFn(jule::Ptr<_1d219b34e_Sema>, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d21b7568_precheckFnTypes(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b7744_checkFnTypes(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b7920_checkPackageTypes(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b7aeb_setFileSemaFields(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b7cc7_setSemaFields(jule::Ptr<_1d219b34e_Sema>);
inline void _1d21b804c_check(jule::Ptr<_1d219b34e_Sema>, jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*);
struct _1d219b34e_Sema {
	jule::Slice<_22ba3c6bd_Log> _field_errors;
	jule::Slice<jule::Ptr<_1d040428a_SymbolTable>> _field_files;
	jule::Ptr<_1d040428a_SymbolTable> _field_file;
	jule::I64 _field_flags = 0LL;
	jule::Ptr<_1d219a837_commonSemaMeta> _field_meta;
	

	_1d219b34e_Sema(void) = default;


};
inline _1d21b8404_missingRetChecker static__1d21b87bc_new(void);
inline jule::Bool _1d21b8a97_checkConditional(_1d21b8404_missingRetChecker*, jule::Ptr<_1d217516e_Conditional>);
inline jule::Bool _1d21b8da5_checkMatch(_1d21b8404_missingRetChecker*, jule::Ptr<_1d217842a_Match>);
inline jule::Bool _1d21b91b3_checkInfIter(_1d21b8404_missingRetChecker*, jule::Ptr<_1d217545a_InfIter>);
inline jule::Bool _1d21b94c1_checkScope(_1d21b8404_missingRetChecker*, jule::Ptr<_1d2174613_Scope>);
inline jule::Bool _1d21b97ce_check(_1d21b8404_missingRetChecker*, jule::Ptr<_1d2174613_Scope>);
struct _1d21b8404_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled = false;
	

	_1d21b8404_missingRetChecker(void) = default;


};
struct _1d21ba615_IterRelation {
	jule::Ptr<_1d21bb65a_Var> _field_Range;
	

	_1d21ba615_IterRelation(void) = default;

	inline bool operator==(_1d21ba615_IterRelation _other) {
		return 
			this->_field_Range == _other._field_Range;
	}

	inline bool operator!=(_1d21ba615_IterRelation _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d21bba23_IsInitialized(_1d21bb65a_Var*);
inline jule::Bool _1d21bbc87_IsTypeInferred(_1d21bb65a_Var*);
inline jule::Bool _1d21bbeeb_untypedConstant(_1d21bb65a_Var*);
struct _1d21bb65a_Var {
	jule::Ptr<_1d2174613_Scope> _field_Scope;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Constant = false;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Public = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Statically = false;
	jule::Bool _field_Reference = false;
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	jule::Ptr<_1d0409d1d_Value> _field_Value;
	jule::Ptr<_1d0629dc8_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_Directives;
	jule::Ptr<_1d21ba615_IterRelation> _field_IterRelation;
	jule::I64 _field_RetOrder = -2LL;
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_Depends;
	

	_1d21bb65a_Var(void) = default;


};
inline jule::Bool static__1d21bca79_Dispose(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bcd21_Str(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bd162_logical(jule::Ptr<_1d06242bd_Fn>*, jule::Str);
inline jule::Bool static__1d21bd409_Eq(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bd6a1_Gt(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bd948_GtEq(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bdbe0_Lt(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bde87_LtEq(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21be2c8_result(jule::Ptr<_1d06242bd_Fn>*, jule::Str);
inline jule::Bool static__1d21be570_Shl(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21be817_Shr(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21beaae_Add(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21bed56_Sub(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c00ed_Div(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c0395_Mul(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c063c_Mod(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c08d4_BitAnd(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c0b7b_BitOr(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c0e23_BitXor(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c1264_unary(jule::Ptr<_1d06242bd_Fn>*, jule::Str);
inline jule::Bool static__1d21c150b_Neg(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c17a3_Pos(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c1a4a_BitNot(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c1d8b_assign(jule::Ptr<_1d06242bd_Fn>*, jule::Str);
inline jule::Bool static__1d21c2133_AddAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c23ca_SubAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c2672_DivAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c2919_MulAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c2bb1_ModAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c2e58_ShlAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c3200_ShrAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c3497_BitOrAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c373e_BitAndAssign(jule::Ptr<_1d06242bd_Fn>);
inline jule::Bool static__1d21c39d6_BitXorAssign(jule::Ptr<_1d06242bd_Fn>);
struct _1d21bc408_FuncPattern {
	

	_1d21bc408_FuncPattern(void) = default;


};
inline void _1d03e2eb0_pushErr(_1d03e2993_typeCompatibilityChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d03e3224_checkTrait(_1d03e2993_typeCompatibilityChecker*);
inline jule::Bool _1d03e3488_checkPtr(_1d03e2993_typeCompatibilityChecker*);
inline jule::Bool _1d03e36ec_checkPrim(_1d03e2993_typeCompatibilityChecker*);
inline jule::Bool _1d03e3aa4_typeEnum(_1d03e2993_typeCompatibilityChecker*, jule::Ptr<_1d214d356_TypeEnum>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e3d18_checkTypeEnum(_1d03e2993_typeCompatibilityChecker*);
inline jule::Bool _1d03e407c_check(_1d03e2993_typeCompatibilityChecker*);
struct _1d03e2993_typeCompatibilityChecker {
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Ptr<_1d21d1d46_TypeKind> _field_dest;
	jule::Ptr<_1d21d1d46_TypeKind> _field_src;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	

	_1d03e2993_typeCompatibilityChecker(void) = default;

	inline bool operator==(_1d03e2993_typeCompatibilityChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_src == _other._field_src &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1d03e2993_typeCompatibilityChecker _other) { return !this->operator==(_other); }


};
inline void _1d03e4a2d_pushErr(_1d03e45bb_assignTypeChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d03e4c92_checkValidity(_1d03e45bb_assignTypeChecker*);
inline jule::Bool _1d03e5006_checkConst(_1d03e45bb_assignTypeChecker*);
inline jule::Bool _1d03e526a_isPrim(_1d03e45bb_assignTypeChecker*);
inline jule::Bool _1d03e54ce_checkCompatibility(_1d03e45bb_assignTypeChecker*);
inline jule::Bool _1d03e5743_check(_1d03e45bb_assignTypeChecker*);
struct _1d03e45bb_assignTypeChecker {
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Ptr<_1d21d1d46_TypeKind> _field_dest;
	jule::Ptr<_1d0408c95_Data> _field_d;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	

	_1d03e45bb_assignTypeChecker(void) = default;

	inline bool operator==(_1d03e45bb_assignTypeChecker _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_dest == _other._field_dest &&
			this->_field_d == _other._field_d &&
			this->_field_errorToken == _other._field_errorToken;
	}

	inline bool operator!=(_1d03e45bb_assignTypeChecker _other) { return !this->operator==(_other); }


};
inline jule::Bool _1b7507252_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1b7507582_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1b7506a37_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1b750eab7_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e6986_annotateConstraintMap(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e6c94_annotateConstraintTup(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e70a2_annotateConstraintFn(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e73d2_annotateConstraintIdent(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e7701_annotateConstraint(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _1d03e7a20_pushGeneric(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*, jule::I64);
inline jule::Bool _1d03e7d2d_annotatePrim(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e813b_annotateArr(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e8449_annotateSlc(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e8801_checkMapKey(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e8b0e_annotateMap(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e8e1c_annotateFn(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e922a_annotatePtr(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e9538_annotateSptr(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e9846_annotateStruct(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e9b54_annotateAny(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03e9e62_annotateKind(_1d03e60a1_dynamicTypeAnnotation*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d03ea1c6_annotate(_1d03e60a1_dynamicTypeAnnotation*);
struct _1d03e60a1_dynamicTypeAnnotation {
	jule::Ptr<_1d040a813_Eval> _field_e;
	jule::Ptr<_1d0626e6e_FnIns> _field_f;
	jule::Ptr<_1d06260a0_ParamIns> _field_p;
	jule::Ptr<_1d0408c95_Data> _field_a;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	jule::Ptr<_1d21d1d46_TypeKind>* _field_k = nullptr;
	jule::Ptr<_1d05de563_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _field_ignored;
	

	_1d03e60a1_dynamicTypeAnnotation(void) = default;


};
inline void _1d03eaeb8_pushErrToken(_1d03ea968_fnCallArgChecker*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d03eb2d7_pushErr(_1d03ea968_fnCallArgChecker*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_1d06260a0_ParamIns>> _1d03eb54b_getParams(_1d03ea968_fnCallArgChecker*);
inline jule::Bool _1d03eb859_checkCounts(_1d03ea968_fnCallArgChecker*, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>*);
inline jule::Bool _1d03ebcaa_checkArg(_1d03ea968_fnCallArgChecker*, jule::Ptr<_1d06260a0_ParamIns>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Bool _1d03ec162_push(_1d03ea968_fnCallArgChecker*, jule::Ptr<_1d06260a0_ParamIns>*, jule::Ptr<_1d05e36dd_Expr>);
inline jule::Bool _1d03ec519_pushVariadic(_1d03ea968_fnCallArgChecker*, jule::Ptr<_1d06260a0_ParamIns>*, jule::I64);
inline jule::Bool _1d03ec827_checkArgs(_1d03ea968_fnCallArgChecker*, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>*);
inline jule::Bool _1d03ecaad_checkDynamicTypeAnnotation(_1d03ea968_fnCallArgChecker*);
inline jule::Bool _1d03ecd33_check(_1d03ea968_fnCallArgChecker*);
struct _1d03ea968_fnCallArgChecker {
	jule::Ptr<_1d040a813_Eval> _field_e;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_args;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	jule::Ptr<_1d0626e6e_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation = false;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _field_ignored;
	

	_1d03ea968_fnCallArgChecker(void) = default;


};
inline void _1d03ed87d_pushErr(_1d03ed372_structLitChecker*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d03edb9c_pushSuggestion(_1d03ed372_structLitChecker*, jule::Str, jule::Slice<jule::Any>);
inline void _1d03ee065_pushMatch(_1d03ed372_structLitChecker*, jule::Ptr<_1d06111de_FieldIns>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline void _1d03ee384_checkPair(_1d03ed372_structLitChecker*, jule::Ptr<_1d05e8083_FieldExprPair>*, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>*);
inline jule::Bool _1d03ee692_readyExprs(_1d03ed372_structLitChecker*, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>*);
inline void _1d03ee917_check(_1d03ed372_structLitChecker*, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>*);
struct _1d03ed372_structLitChecker {
	jule::Ptr<_1d040a813_Eval> _field_e;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	jule::Ptr<_1d0611bd4_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1d06168ed_StructArgExprModel>> _field_args;
	

	_1d03ed372_structLitChecker(void) = default;


};
inline jule::Ptr<_1d21bb65a_Var> _1d040041d_buildVar(_1d03eee56_rangeChecker*, jule::Ptr<_1d0601b6e_VarDecl>*);
inline void _1d04005e9_setSizeKey(_1d03eee56_rangeChecker*);
inline void _1d04009b2_checkRangeExprValidity(_1d03eee56_rangeChecker*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _1d0400b8d_checkSlice(_1d03eee56_rangeChecker*);
inline void _1d0400d69_checkArray(_1d03eee56_rangeChecker*);
inline void _1d0401045_checkMapKeyA(_1d03eee56_rangeChecker*);
inline void _1d0401221_checkMapKeyB(_1d03eee56_rangeChecker*);
inline void _1d04013ec_checkMap(_1d03eee56_rangeChecker*);
inline void _1d04015c8_checkStr(_1d03eee56_rangeChecker*);
inline void _1d04017a4_checkComptime(_1d03eee56_rangeChecker*);
inline jule::Bool _1d0401a18_checkComptimeRange(_1d03eee56_rangeChecker*);
inline jule::Bool _1d0401c7c_check(_1d03eee56_rangeChecker*);
struct _1d03eee56_rangeChecker {
	jule::Ptr<_1d217b241_scopeChecker> _field_sc;
	jule::Ptr<_1d06037ec_RangeKind> _field_rang;
	jule::Ptr<_1d21762b3_RangeIter> _field_Kind;
	jule::Ptr<_1d0408c95_Data> _field_d;
	

	_1d03eee56_rangeChecker(void) = default;

	inline bool operator==(_1d03eee56_rangeChecker _other) {
		return 
			this->_field_sc == _other._field_sc &&
			this->_field_rang == _other._field_rang &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_d == _other._field_d;
	}

	inline bool operator!=(_1d03eee56_rangeChecker _other) { return !this->operator==(_other); }


};
inline void _1d04028e8_prepareTypes(_1d0402453_retTypeChecker*);
inline void _1d0402b6d_prepareExprs(_1d0402453_retTypeChecker*, jule::Ptr<_1d05e36dd_Expr>*);
inline void _1d0402d49_checkExprs(_1d0402453_retTypeChecker*);
inline jule::Bool _1d0403157_check(_1d0402453_retTypeChecker*, jule::Ptr<_1d05e36dd_Expr>*);
struct _1d0402453_retTypeChecker {
	jule::Ptr<_1d217b241_scopeChecker> _field_sc;
	jule::Ptr<_1d0626e6e_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _field_types;
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _field_exprs;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	jule::Any _field_model = jule::Any(nullptr);
	

	_1d0402453_retTypeChecker(void) = default;


};
inline jule::Ptr<_1d219307c_ImportInfo> _1d0404796_SelectPackage(_1d040428a_SymbolTable*, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>);
inline jule::Ptr<_1d21bb65a_Var> _1d0404b4d_FindVar(_1d040428a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d0405005_FindTypeAlias(_1d040428a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d060ddbd_Struct> _1d04053ac_FindStruct(_1d040428a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06242bd_Fn> _1d0405764_FindFn(_1d040428a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21494c8_Trait> _1d0405a72_FindTrait(_1d040428a_SymbolTable*, jule::Str);
inline jule::Ptr<_1d214bc5b_Enum> _1d0405d80_FindEnum(_1d040428a_SymbolTable*, jule::Str);
inline jule::Ptr<_1d214d356_TypeEnum> _1d040618d_FindTypeEnum(_1d040428a_SymbolTable*, jule::Str);
inline jule::Ptr<_1d21bb65a_Var> _1d0406710_findVar(_1d040428a_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d0406b61_findTypeAlias(_1d040428a_SymbolTable*, jule::Str, jule::Bool, jule::Bool);
inline jule::Any _1d0407018_defByIdent(_1d040428a_SymbolTable*, jule::Str, jule::Bool);
inline jule::Bool _1d0407469_isDuplicatedIdent(_1d040428a_SymbolTable*, jule::Uintptr, jule::Str, jule::Bool);
struct _1d040428a_SymbolTable {
	jule::Ptr<_22be17ba8_File> _field_File;
	jule::Slice<_1d062b209_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1d219307c_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1d06242bd_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1d21494c8_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1d214bc5b_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1d214d356_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1d216e5a8_Impl>> _field_Impls;
	

	_1d040428a_SymbolTable(void) = default;


};
inline jule::Bool _1d0409180_IsNil(_1d0408c95_Data*);
inline jule::Bool _1d04093e4_IsVoid(_1d0408c95_Data*);
inline jule::Bool _1d0409658_IsConst(_1d0408c95_Data*);
inline jule::Bool _1d0409966_GoodOperand(_1d0408c95_Data*, jule::Ptr<_1d0408c95_Data>*);
struct _1d0408c95_Data {
	jule::Bool _field_untyped = false;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Reference = false;
	jule::Bool _field_Lvalue = false;
	jule::Bool _field_IsRune = false;
	jule::Any _field_Model = jule::Any(nullptr);
	jule::Bool _field_Decl = false;
	jule::Ptr<_1e76e5cc3_Const> _field_Constant;
	

	_1d0408c95_Data(void) = default;

	inline bool operator==(_1d0408c95_Data _other) {
		return 
			this->_field_untyped == _other._field_untyped &&
			this->_field_Kind == _other._field_Kind &&
			this->_field_Mutable == _other._field_Mutable &&
			this->_field_Reference == _other._field_Reference &&
			this->_field_Lvalue == _other._field_Lvalue &&
			this->_field_IsRune == _other._field_IsRune &&
			this->_field_Model == _other._field_Model &&
			this->_field_Decl == _other._field_Decl &&
			this->_field_Constant == _other._field_Constant;
	}

	inline bool operator!=(_1d0408c95_Data _other) { return !this->operator==(_other); }


};
struct _1d0409d1d_Value {
	jule::Ptr<_1d05e36dd_Expr> _field_Expr;
	jule::Ptr<_1d0408c95_Data> _field_Data;
	

	_1d0409d1d_Value(void) = default;

	inline bool operator==(_1d0409d1d_Value _other) {
		return 
			this->_field_Expr == _other._field_Expr &&
			this->_field_Data == _other._field_Data;
	}

	inline bool operator!=(_1d0409d1d_Value _other) { return !this->operator==(_other); }


};
inline void _1d040ad1e_pushErr(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d040b13d_pushSuggestion(_1d040a813_Eval*, jule::Str, jule::Slice<jule::Any>);
inline void _1d040b319_allowBuiltin(_1d040a813_Eval*);
inline void _1d040b4e5_disallowBuiltin(_1d040a813_Eval*);
inline jule::Bool _1d040b759_isUnsafe(_1d040a813_Eval*);
inline jule::Bool _1d040b9bd_isGlobal(_1d040a813_Eval*);
inline jule::Bool _1d040bc98_applyNumericPrefix(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d040c00c_litNil(_1d040a813_Eval*);
inline jule::Ptr<_1d0408c95_Data> _1d040c31a_litStr(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d040c628_litBool(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d040c936_litRune(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d040cc44_litFloat(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d040d052_litInt(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d040d360_litNum(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d040d66d_evalLit(_1d040a813_Eval*, jule::Ptr<_1d05e4722_LitExpr>);
inline jule::Any _1d040d97b_findBuiltins(_1d040a813_Eval*, jule::Str);
inline jule::Any _1d040dd33_getDef(_1d040a813_Eval*, jule::Str, jule::Bool);
inline void _1b763601d_pushReference(_1d040a813_Eval*, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1b7649680_pushReference(_1d040a813_Eval*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1b76d40dd_pushReference(_1d040a813_Eval*, jule::Ptr<_1d0611bd4_StructIns>*);
inline jule::Ptr<_1d0408c95_Data> _1d040e3b6__evalEnum(_1d040a813_Eval*, jule::Ptr<_1d214bc5b_Enum>);
inline jule::Ptr<_1d0408c95_Data> _1d040e76d_evalEnum(_1d040a813_Eval*, jule::Ptr<_1d214bc5b_Enum>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d040ea7b__evalTypeEnum(_1d040a813_Eval*, jule::Ptr<_1d214d356_TypeEnum>);
inline jule::Ptr<_1d0408c95_Data> _1d040ee33_evalTypeEnum(_1d040a813_Eval*, jule::Ptr<_1d214d356_TypeEnum>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0410241__evalStruct(_1d040a813_Eval*, jule::Ptr<_1d0611bd4_StructIns>);
inline jule::Ptr<_1d0408c95_Data> _1d04105e8_evalStruct(_1d040a813_Eval*, jule::Ptr<_1d0611bd4_StructIns>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0410906_evalFnIns(_1d040a813_Eval*, jule::Ptr<_1d0626e6e_FnIns>);
inline void _1d0410c25_checkDeprecated(_1d040a813_Eval*, jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04110cc_evalFn(_1d040a813_Eval*, jule::Ptr<_1d06242bd_Fn>, jule::Ptr<_22be1281d_Token>);
inline void _1d0411495_pushIllegalCycleError(_1d040a813_Eval*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*, jule::Str*);
inline jule::Bool _1d041184c_checkCrossCycle(_1d040a813_Eval*, jule::Ptr<_1d21bb65a_Var>*, jule::Str*);
inline jule::Bool _1d0411c04_checkIllegalCycles(_1d040a813_Eval*, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04120ab_evalVar(_1d040a813_Eval*, jule::Ptr<_1d21bb65a_Var>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0412463_evalTypeAlias(_1d040a813_Eval*, jule::Ptr<_1d21d10ed_TypeAlias>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d041281a_evalDef(_1d040a813_Eval*, jule::Any, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0412b28_evalIdent(_1d040a813_Eval*, jule::Ptr<_1d05e52d3_IdentExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0412e36_evalUnary(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e59dc_UnaryExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0413244_evalVariadic(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e5d94_VariadicExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0413552_evalUnsafe(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e4d60_UnsafeExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0413860_evalArr(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e9d21_SliceExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0413cb1_evalExpSlc(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e9d21_SliceExpr>, jule::Ptr<_1d21d1d46_TypeKind>, jule::Any);
inline jule::Ptr<_1d0408c95_Data> _1d04140be_evalSliceExpr(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e9d21_SliceExpr>);
inline void _1d0414410_checkIntegerIndexingByData(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>);
inline void _1d04147d9_indexingPtr(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline void _1d0414ba2_indexingArr(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline void _1d041506a_indexingSlc(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline void _1d0415433_indexingMap(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline void _1d04157eb_indexingStr(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline void _1d0415bb4_toIndexing(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline jule::Bool _1d0416137_pushGenericsFromExprSubIdent(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e6a76_SubIdentExpr>*, jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>*, jule::Ptr<_1d05e36dd_Expr>*);
inline jule::Bool _1d0416500_pushGenericsFromData(jule::Ptr<_1d040a813_Eval>, jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>*, jule::Ptr<_1d05e36dd_Expr>*);
inline void _1d0416841_evalIdentDeclFromIndexing(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline jule::Bool _1d0416ca3_checkGenericFn(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_22be1281d_Token>*, jule::Any*);
inline void _1d04170e4_evalFnGenericFromIndexing(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05ea690_IndexingExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d0417413_evalIndexing(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05ea690_IndexingExpr>);
inline __jule_tuple_x_1d0408c95_Data__jule_tuple_x_1d0408c95_Data _1d0417721_evalSlicingExprs(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05eac9a_SlicingExpr>*);
inline void _1d0417996_slicingArr(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d0417d5e_slicingStr(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d04182c1_checkSlicing(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05eac9a_SlicingExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d04185ce_evalSlicing(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05eac9a_SlicingExpr>);
inline void _1d0418997_castPtr(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d0418d60_castStruct(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d0419228_castRef(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d04195e1_castSlc(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d0419910_castStr(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d0419cc8_castInt(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d041a191_castNum(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d041a559_castPrim(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline void _1d041a878_castConstant(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d041ac41_castTypeEnum(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline void _1d041b109_castTypeEnumT(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Ptr<_1d0408c95_Data> _1d041b55a_evalCastByTypeNData(_1d040a813_Eval*, jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d041b9ab_evalCastT(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d05e36dd_Expr>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Ptr<_1d0408c95_Data> _1d041bcb9_evalCast(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e624b_CastExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d041c0c7_evalNsSelection(_1d040a813_Eval*, jule::Ptr<_1d05e6603_NsSelectionExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d041c528_evalStructLitExplicit(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d0611bd4_StructIns>, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d041c836_evalStructLit(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e8858_StructLit>);
inline _1d21e3187_typeChecker _1d041ca9a_typeChecker(_1d040a813_Eval*);
inline jule::Ptr<_1d0408c95_Data> _1d041cda8_evalType(_1d040a813_Eval*, jule::Ptr<_1d05de563_TypeDecl>);
inline void _1d041d1c7_callTypeFn(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d041d4e6_callBuiltinFn(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d041d837_checkFnOfConcurrentCall(_1d040a813_Eval*, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_22be1281d_Token>);
inline void _1d041dc33_processExceptionalHandler(_1d040a813_Eval*, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d041e063_callFn(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d041e371_evalFnCall(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e7604_FnCallExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d041e728_evalEnumStatic(_1d040a813_Eval*, jule::Ptr<_1d214bc5b_Enum>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d041ead0_evalTypeEnumStatic(_1d040a813_Eval*, jule::Ptr<_1d214d356_TypeEnum>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d041ee87_evalStructStatic(_1d040a813_Eval*, jule::Ptr<_1d0611bd4_StructIns>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04203d8_evalTraitSubIdent(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0420905_evalStructSubIdentField(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d06111de_FieldIns>*);
inline jule::Ptr<_1d0408c95_Data> _1d0420e11_evalStructSubIdent(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_1d0611bd4_StructIns>, jule::Ptr<_1d05e6a76_SubIdentExpr>, jule::Bool);
inline jule::Ptr<_1d0408c95_Data> _1d04212b8_evalSliceSubIdent(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0421670_evalArraySubIdent(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d042197d_evalIntTypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0421c8b_evalUintTypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0422099_evalI8TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04223a7_evalI16TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04226b5_evalI32TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04229c3_evalI64TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0422cd1_evalU8TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04230de_evalU16TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04233ec_evalU32TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d042370a_evalU64TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0423a18_evalF32TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0423d26_evalF64TypeStatic(_1d040a813_Eval*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d04241cd_evalPrimStatic(_1d040a813_Eval*, jule::Str, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0408c95_Data> _1d0424585_evalTypeStatic(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_1d05e6a76_SubIdentExpr>);
inline jule::Ptr<_1d0408c95_Data> _1b77c9ac9_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d215e257_comptimeTypeInfo>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1b77cd292_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d2150ea2_comptimeStructField>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1b77d1916_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d2156ea8_comptimeEnumField>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1b77d51ab_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d215972a_comptimeParam>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1b77d8896_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d2153ea5_comptimeStatic>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1b77dc01a_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d2164c52_comptimeValue>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1b77e068e_comptimeObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d2168816_comptimeFile>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d05e6a76_SubIdentExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d0424d8d_evalObjSubIdent(_1d040a813_Eval*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_1d05e6a76_SubIdentExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d042519b_evalSubIdent(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e6a76_SubIdentExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d04254a9_evalTuple(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e436a_TupleExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0425861_evalMap(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d21ded10_Map>, jule::Ptr<_1d05e8ccb_BraceLit>);
inline jule::Ptr<_1d0408c95_Data> _1d0425b6e_evalBraceLit(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e8ccb_BraceLit>);
inline jule::Ptr<_1d0408c95_Data> _1d0425e7c_evalAnonFn(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d0600b90_FnDecl>);
inline jule::Ptr<_1d0408c95_Data> _1d042628a_evalBinop(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e6ee9_BinopExpr>);
inline jule::Ptr<_1d0408c95_Data> _1d0426598_evalExprKind(jule::Ptr<_1d040a813_Eval>, jule::Any);
inline jule::Ptr<_1d0408c95_Data> _1d04268a6_eval1(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e36dd_Expr>);
inline jule::Ptr<_1d0408c95_Data> _1d0426bb4_eval(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e36dd_Expr>);
inline jule::Ptr<_1d0408c95_Data> _1d01da3c3_evalExpr1(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e36dd_Expr>);
inline jule::Ptr<_1d0408c95_Data> _1d01dac53_evalExpr(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_1d05e36dd_Expr>);
struct _1d040a813_Eval {
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Trait<_1d2200172_Lookup> _field_lookup;
	jule::Ptr<_1d21d1d46_TypeKind> _field_prefix;
	jule::Bool _field_unsafety = false;
	jule::Bool _field_immutable = false;
	jule::Bool _field_ignored = false;
	jule::Bool _field_disBuiltin = false;
	jule::Ptr<_1d21bb65a_Var> _field_owner;
	jule::Ptr<_1d06111de_FieldIns> _field_field;
	jule::Bool _field_arg = false;
	

	_1d040a813_Eval(void) = default;

	inline bool operator==(_1d040a813_Eval _other) {
		return 
			this->_field_s == _other._field_s &&
			this->_field_lookup == _other._field_lookup &&
			this->_field_prefix == _other._field_prefix &&
			this->_field_unsafety == _other._field_unsafety &&
			this->_field_immutable == _other._field_immutable &&
			this->_field_ignored == _other._field_ignored &&
			this->_field_disBuiltin == _other._field_disBuiltin &&
			this->_field_owner == _other._field_owner &&
			this->_field_field == _other._field_field &&
			this->_field_arg == _other._field_arg;
	}

	inline bool operator!=(_1d040a813_Eval _other) { return !this->operator==(_other); }


};
inline _1d062bca9_unaryEval static__1d062c062_new(jule::Ptr<_1d040a813_Eval>);
inline void _1d062c1d8_minus(_1d062bca9_unaryEval*);
inline void _1d062c392_plus(_1d062bca9_unaryEval*);
inline void _1d062c56d_caret(_1d062bca9_unaryEval*);
inline void _1d062c749_excl(_1d062bca9_unaryEval*);
inline void _1d062c925_star(_1d062bca9_unaryEval*);
inline void _1d062cb01_amper(_1d062bca9_unaryEval*);
inline void _1d062cccc_typeDecl(_1d062bca9_unaryEval*);
inline void _1d062cea8_evalData(_1d062bca9_unaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d062d2b6_eval(_1d062bca9_unaryEval*, jule::Ptr<_1d05e59dc_UnaryExpr>);
struct _1d062bca9_unaryEval {
	jule::Ptr<_1d040a813_Eval> _field_e;
	jule::Ptr<_1d0408c95_Data> _field_d;
	jule::Ptr<_1d05e59dc_UnaryExpr> _field_u;
	

	_1d062bca9_unaryEval(void) = default;

	inline bool operator==(_1d062bca9_unaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_d == _other._field_d &&
			this->_field_u == _other._field_u;
	}

	inline bool operator!=(_1d062bca9_unaryEval _other) { return !this->operator==(_other); }


};
inline _1d062d805_binaryEval static__1d062ddcc_newPlain(jule::Ptr<_1d040a813_Eval>);
inline _1d062d805_binaryEval static__1d062e21d_new(jule::Ptr<_1d040a813_Eval>, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d062e482_checkTypeCompatibility(_1d062d805_binaryEval*);
inline jule::Bool _1d062e729_checkStructCommonOperatorCompatibility(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c5b1a_evalComptimeTypeInfo(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c5c4c_evalNil(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c5d7e_evalEnum(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c681e_evalTypeEnum(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c6a50_evalSptr(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c6cb4_evalPtr(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c7028_evalArr(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c728c_evalSlc(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c7501_evalStruct(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c7765_evalTrait(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c79c9_evalAny(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c7c3d_evalBool(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c7ea2_evalStr(_1d062d805_binaryEval*);
inline void _1d21c817d_setTypeToGreater(_1d062d805_binaryEval*);
inline void _1d21c8403_checkModData(_1d062d805_binaryEval*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d21c85ce_mod(_1d062d805_binaryEval*);
inline jule::Bool _1d21c8986_numbersAreCompatibile(_1d062d805_binaryEval*, jule::Str*, jule::Str*);
inline jule::Ptr<_1d0408c95_Data> _1d21c8bea_evalFloat(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c8e5e_evalInt(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c91c3_evalPrim(_1d062d805_binaryEval*);
inline void _1d21c939e_checkSpecialCases(_1d062d805_binaryEval*);
inline jule::Ptr<_1d0408c95_Data> _1d21c9613_evalOp(_1d062d805_binaryEval*);
inline void _1d21c9888_evalConst(_1d062d805_binaryEval*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d21c9b0d_checkData(_1d062d805_binaryEval*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d21c9cd9_checkDatas(_1d062d805_binaryEval*);
inline void _1d21ca05e_setModel(_1d062d805_binaryEval*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d21ca2d4_postEval(_1d062d805_binaryEval*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d21ca68b_solveExplicit(_1d062d805_binaryEval*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d21ca999_eval(_1d062d805_binaryEval*, jule::Ptr<_1d05e6ee9_BinopExpr>*);
struct _1d062d805_binaryEval {
	jule::Ptr<_1d040a813_Eval> _field_e;
	jule::Ptr<_1d0408c95_Data> _field_l;
	jule::Ptr<_1d0408c95_Data> _field_r;
	jule::Ptr<_22be1281d_Token> _field_op;
	

	_1d062d805_binaryEval(void) = default;

	inline bool operator==(_1d062d805_binaryEval _other) {
		return 
			this->_field_e == _other._field_e &&
			this->_field_l == _other._field_l &&
			this->_field_r == _other._field_r &&
			this->_field_op == _other._field_op;
	}

	inline bool operator!=(_1d062d805_binaryEval _other) { return !this->operator==(_other); }


};
struct _1d21d05b4_InsGeneric {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _field_Constraint;
	

	_1d21d05b4_InsGeneric(void) = default;


};
struct _1d21d10ed_TypeAlias {
	jule::Ptr<_1d05ee199_ScopeTree> _field_Scope;
	jule::Bool _field_Public = false;
	jule::Bool _field_Binded = false;
	jule::Bool _field_Used = false;
	jule::Bool _field_Generic = false;
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1d21d8be9_TypeSymbol> _field_Kind;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _field_Generics;
	

	_1d21d10ed_TypeAlias(void) = default;


};
inline jule::Str _1d21d2242_Str(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d2550_Equal(jule::Ptr<_1d21d1d46_TypeKind>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Bool _1d21d2b38_Binded(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d2d9c_IsNil(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d3111_Void(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d3375_Comparable(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d35d9_Mutable(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d384d_Ordered(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d3ab2_NilCompatible(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d3d26_PerformsRC(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d408a_SupportsCloning(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d42ee_Variadicable(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21d9568_Prim> _1d21d4563_Prim(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21dccec_Sptr> _1d21d47c7_Sptr(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21e1361_Ptr> _1d21d4a3b_Ptr(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d214bc5b_Enum> _1d21d4ca0_Enum(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d214d356_TypeEnum> _1d21d5014_TypeEnum(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21e0904_Arr> _1d21d5278_Arr(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21dd759_Slc> _1d21d54dc_Slc(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d0626e6e_FnIns> _1d21d5751_Fn(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d0611bd4_StructIns> _1d21d59b5_Struct(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21494c8_Trait> _1d21d5c29_Trait(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21ded10_Map> _1d21d5e8d_Map(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21de2d7_Tuple> _1d21d6202_Tup(_1d21d1d46_TypeKind*);
inline jule::Bool _1d21d6466_comptime(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d2152998_comptimeStructFields> _1d21d66ca_comptimeStructFields(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d2150ea2_comptimeStructField> _1d21d693e_comptimeStructField(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21581c9_comptimeEnumFields> _1d21d6ba3_comptimeEnumFields(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d2156ea8_comptimeEnumField> _1d21d6e17_comptimeEnumField(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d215b7c6_comptimeParams> _1d21d717b_comptimeParams(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d215972a_comptimeParam> _1d21d73e0_comptimeParam(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21504ac_comptimeRange> _1d21d7654_comptimeRange(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d215cc8e_comptimeTypeInfos> _1d21d78b8_comptimeTypeInfos(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d215e257_comptimeTypeInfo> _1d21d7b2c_comptimeTypeInfo(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d21559e0_comptimeStatics> _1d21d7d91_comptimeStatics(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d2153ea5_comptimeStatic> _1d21d8105_comptimeStatic(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d2164c52_comptimeValue> _1d21d8369_comptimeValue(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d2168816_comptimeFile> _1d21d85cd_comptimeFile(_1d21d1d46_TypeKind*);
inline jule::Ptr<_1d216734d_comptimeFiles> _1d21d8842_comptimeFiles(_1d21d1d46_TypeKind*);
struct _1d21d1d46_TypeKind {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic = false;
	jule::Bool _field_Variadic = false;
	jule::Trait<_1d21d18d4_Kind> _field_Kind;
	

	_1d21d1d46_TypeKind(void) = default;

	inline bool operator==(_1d21d1d46_TypeKind _other) {
		return 
			this->_field_BindIdent == _other._field_BindIdent &&
			this->_field_Generic == _other._field_Generic &&
			this->_field_Variadic == _other._field_Variadic &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d21d1d46_TypeKind _other) { return !this->operator==(_other); }


};
inline jule::Bool _1d21d90a1_checked(_1d21d8be9_TypeSymbol*);
inline void _1d21d927c_removeKind(_1d21d8be9_TypeSymbol*);
struct _1d21d8be9_TypeSymbol {
	jule::Ptr<_1d05de563_TypeDecl> _field_Decl;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Kind;
	

	_1d21d8be9_TypeSymbol(void) = default;

	inline bool operator==(_1d21d8be9_TypeSymbol _other) {
		return 
			this->_field_Decl == _other._field_Decl &&
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d21d8be9_TypeSymbol _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21d98cb_Str(_1d21d9568_Prim*);
inline jule::Bool _1d21d9bd9_Equal(jule::Ptr<_1d21d9568_Prim>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Bool _1d21da15c_IsConstraint(_1d21d9568_Prim*);
inline jule::Bool _1d21da3c1_IsI8(_1d21d9568_Prim*);
inline jule::Bool _1d21da635_IsI16(_1d21d9568_Prim*);
inline jule::Bool _1d21da899_IsI32(_1d21d9568_Prim*);
inline jule::Bool _1d21dab0d_IsI64(_1d21d9568_Prim*);
inline jule::Bool _1d21dad72_IsU8(_1d21d9568_Prim*);
inline jule::Bool _1d21db0d6_IsU16(_1d21d9568_Prim*);
inline jule::Bool _1d21db34a_IsU32(_1d21d9568_Prim*);
inline jule::Bool _1d21db5ae_IsU64(_1d21d9568_Prim*);
inline jule::Bool _1d21db823_IsF32(_1d21d9568_Prim*);
inline jule::Bool _1d21dba87_IsF64(_1d21d9568_Prim*);
inline jule::Bool _1d21dbceb_IsInt(_1d21d9568_Prim*);
inline jule::Bool _1d21dc060_IsUint(_1d21d9568_Prim*);
inline jule::Bool _1d21dc2c4_IsUintptr(_1d21d9568_Prim*);
inline jule::Bool _1d21dc538_IsBool(_1d21d9568_Prim*);
inline jule::Bool _1d21dc79c_IsStr(_1d21d9568_Prim*);
inline jule::Bool _1d21dca11_IsAny(_1d21d9568_Prim*);
struct _1d21d9568_Prim {
	jule::Str _field_Kind;
	

	_1d21d9568_Prim(void) = default;

	inline bool operator==(_1d21d9568_Prim _other) {
		return 
			this->_field_Kind == _other._field_Kind;
	}

	inline bool operator!=(_1d21d9568_Prim _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21dd160_Str(_1d21dccec_Sptr*);
inline jule::Bool _1d21dd46d_Equal(jule::Ptr<_1d21dccec_Sptr>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1d21dccec_Sptr {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Elem;
	

	_1d21dccec_Sptr(void) = default;

	inline bool operator==(_1d21dccec_Sptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d21dccec_Sptr _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21ddc65_Str(_1d21dd759_Slc*);
inline jule::Bool _1d21de073_Equal(jule::Ptr<_1d21dd759_Slc>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1d21dd759_Slc {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Elem;
	

	_1d21dd759_Slc(void) = default;

	inline bool operator==(_1d21dd759_Slc _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d21dd759_Slc _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21de64a_Str(_1d21de2d7_Tuple*);
inline jule::Bool _1d21de958_Equal(jule::Ptr<_1d21de2d7_Tuple>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1d21de2d7_Tuple {
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _field_Types;
	

	_1d21de2d7_Tuple(void) = default;


};
inline jule::Str _1d21e0173_Str(_1d21ded10_Map*);
inline jule::Bool _1d21e0481_Equal(jule::Ptr<_1d21ded10_Map>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1d21ded10_Map {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Key;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Val;
	

	_1d21ded10_Map(void) = default;

	inline bool operator==(_1d21ded10_Map _other) {
		return 
			this->_field_Key == _other._field_Key &&
			this->_field_Val == _other._field_Val;
	}

	inline bool operator!=(_1d21ded10_Map _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21e0c67_Str(_1d21e0904_Arr*);
inline jule::Bool _1d21e1075_Equal(jule::Ptr<_1d21e0904_Arr>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1d21e0904_Arr {
	jule::Bool _field_Auto = false;
	jule::I64 _field_N = 0;
	jule::Ptr<_1d21d1d46_TypeKind> _field_Elem;
	

	_1d21e0904_Arr(void) = default;

	inline bool operator==(_1d21e0904_Arr _other) {
		return 
			this->_field_Auto == _other._field_Auto &&
			this->_field_N == _other._field_N &&
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d21e0904_Arr _other) { return !this->operator==(_other); }


};
inline jule::Str _1d21e16c4_Str(_1d21e1361_Ptr*);
inline jule::Bool _1d21e19d2_Equal(jule::Ptr<_1d21e1361_Ptr>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Bool _1d21e1d34_IsUnsafe(_1d21e1361_Ptr*);
struct _1d21e1361_Ptr {
	jule::Ptr<_1d21d1d46_TypeKind> _field_Elem;
	

	_1d21e1361_Ptr(void) = default;

	inline bool operator==(_1d21e1361_Ptr _other) {
		return 
			this->_field_Elem == _other._field_Elem;
	}

	inline bool operator!=(_1d21e1361_Ptr _other) { return !this->operator==(_other); }


};
struct _1d21e22a7_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs = nullptr;
	

	_1d21e22a7_referencer(void) = default;

	inline bool operator==(_1d21e22a7_referencer _other) {
		return 
			this->_field_ident == _other._field_ident &&
			this->_field_owner == _other._field_owner &&
			this->_field_refs == _other._field_refs;
	}

	inline bool operator!=(_1d21e22a7_referencer _other) { return !this->operator==(_other); }


};
inline void _1d21e3880_pushErr(_1d21e3187_typeChecker*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d21e3a5b_allowBuiltin(_1d21e3187_typeChecker*);
inline void _1d21e3c37_disallowBuiltin(_1d21e3187_typeChecker*);
inline void _1b7970ce7_pushReference(_1d21e3187_typeChecker*, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b7973921_pushReference(_1d21e3187_typeChecker*, jule::Ptr<_1d21494c8_Trait>*);
inline void _1d21e4232_pushReferenceByKind(_1d21e3187_typeChecker*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _1d21e45ea_pushCycleError(_1d21e3187_typeChecker*, jule::Any, jule::Any, jule::Str*);
inline jule::Bool _1d21e49a2_checkCrossCycle(_1d21e3187_typeChecker*, jule::Any, jule::Str*);
inline jule::Bool _1d21e4d59_checkIllegalCycles(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Any);
inline jule::Trait<_1d21d18d4_Kind> _1d21e5211_fromTypeAlias(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Ptr<_1d21d10ed_TypeAlias>*);
inline jule::Ptr<_1d214bc5b_Enum> _1d21e55b8_fromEnum(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Ptr<_1d214bc5b_Enum>*);
inline jule::Ptr<_1d214d356_TypeEnum> _1d21e5970_fromTypeEnum(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Ptr<_1d214d356_TypeEnum>*);
inline jule::Ptr<_1d21494c8_Trait> _1d21e5d27_fromTrait(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Bool _1d21e61ce_checkStructIns(_1d21e3187_typeChecker*, jule::Ptr<_1d0611bd4_StructIns>*, jule::Ptr<_22be1281d_Token>*);
inline void _1d21e6476_appendUsedStructReference(_1d21e3187_typeChecker*, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Ptr<_1d0611bd4_StructIns> _1d21e683e_buildStructInstance(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Ptr<_1d0611bd4_StructIns> _1d21e6be6_fromStruct(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Trait<_1d21d18d4_Kind> _1d21e7004_getDef(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>*);
inline jule::Trait<_1d21d18d4_Kind> _1d21e7312_buildIdent(_1d21e3187_typeChecker*, jule::Ptr<_1d05deb29_IdentTypeDecl>);
inline jule::Trait<_1d21d18d4_Kind> _1d21e7620_buildSubIdent(_1d21e3187_typeChecker*, jule::Ptr<_1d05dee15_SubIdentTypeDecl>);
inline jule::Ptr<_1d21dccec_Sptr> _1d21e792d_buildSptrFromType(_1d21e3187_typeChecker*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Ptr<_1d21dccec_Sptr> _1d21e7c3b_buildSptr(_1d21e3187_typeChecker*, jule::Ptr<_1d05e0575_SptrTypeDecl>);
inline jule::Ptr<_1d21e1361_Ptr> _1d21e8049_buildPtrFromType(_1d21e3187_typeChecker*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Ptr<_1d21e1361_Ptr> _1d21e8357_buildPtr(_1d21e3187_typeChecker*, jule::Ptr<_1d05e1048_PtrTypeDecl>);
inline jule::Ptr<_1d21dd759_Slc> _1d21e8665_buildSlc(_1d21e3187_typeChecker*, jule::Ptr<_1d05e0971_SlcTypeDecl>);
inline jule::Ptr<_1d21e0904_Arr> _1d21e8973_buildArr(_1d21e3187_typeChecker*, jule::Ptr<_1d05e171e_ArrTypeDecl>);
inline jule::Ptr<_1d21ded10_Map> _1d21e8c81_buildMap(_1d21e3187_typeChecker*, jule::Ptr<_1d05e1e28_MapTypeDecl>);
inline jule::Ptr<_1d21de2d7_Tuple> _1d21e908e_buildTuple(_1d21e3187_typeChecker*, jule::Ptr<_1d05e0c5c_TupleTypeDecl>);
inline jule::Bool _1d21e939c_checkFnTypes(_1d21e3187_typeChecker*, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Ptr<_1d0626e6e_FnIns> _1d21e96aa_buildFn(_1d21e3187_typeChecker*, jule::Ptr<_1d0600b90_FnDecl>);
inline jule::Trait<_1d21d18d4_Kind> _1d21e99b8_buildByNamespace(_1d21e3187_typeChecker*, jule::Ptr<_1d05e0289_NamespaceTypeDecl>);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21e9cc6_build(_1d21e3187_typeChecker*, jule::Any*);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d21ea0d4_checkDecl(_1d21e3187_typeChecker*, jule::Ptr<_1d05de563_TypeDecl>*);
inline void _1d21ea359_check(_1d21e3187_typeChecker*, jule::Ptr<_1d21d8be9_TypeSymbol>*);
struct _1d21e3187_typeChecker {
	jule::Ptr<_1d219b34e_Sema> _field_s;
	jule::Trait<_1d2200172_Lookup> _field_rootLookup;
	jule::Trait<_1d2200172_Lookup> _field_lookup;
	jule::Ptr<_1d21e22a7_referencer> _field_referencer;
	jule::Ptr<_1d0629dc8_ReferenceStack> _field_refers;
	jule::Ptr<_22be1281d_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>* _field_ignoredGenerics = nullptr;
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _field_useGenerics;
	jule::Bool _field_notPlain = false;
	jule::Bool _field_disBuiltin = false;
	jule::Bool _field_selection = false;
	jule::Ptr<_1d21d10ed_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch = false;
	

	_1d21e3187_typeChecker(void) = default;


};
inline jule::Bool static__1d21ea9b9_prim(jule::Str*, jule::Ptr<_1d21d9568_Prim>);
inline jule::Bool static__1d21ead0a_exist(jule::Str*, jule::Ptr<_1d21d1d46_TypeKind>*);
struct _1d21ea579_identTypeLookup {
	

	_1d21ea579_identTypeLookup(void) = default;

	inline bool operator==(_1d21ea579_identTypeLookup _other) { return true; }

	inline bool operator!=(_1d21ea579_identTypeLookup _other) { return !this->operator==(_other); }


};
struct _1d2592eb5_FileInfo {
	jule::Ptr<_1d05aa7a4_Ast> _field_Ast;
	jule::Slice<_22ba3c6bd_Log> _field_Errors;
	

	_1d2592eb5_FileInfo(void) = default;


};
struct _1d25dca59_stmt {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_tokens;
	jule::Bool _field_terminated = false;
	

	_1d25dca59_stmt(void) = default;


};
inline void _1d25dda16_stop(_1d25dd384_scopeParser*);
inline jule::Bool _1d25ddc7a_stopped(_1d25dd384_scopeParser*);
inline jule::Bool _1d25ddede_finished(_1d25dd384_scopeParser*);
inline jule::Bool _1d25de253_isLastSt(_1d25dd384_scopeParser*);
inline void _1d25de572_pushErr(_1d25dd384_scopeParser*, jule::Ptr<_22be1281d_Token>, jule::Str);
inline void _1d25de891_pushSuggestion(_1d25dd384_scopeParser*, jule::Str, jule::Slice<jule::Any>);
inline void _1d25deb16_insertAsNext(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d25dca59_stmt> _1d25ded7a_next(_1d25dd384_scopeParser*);
inline jule::Ptr<_1d05ee199_ScopeTree> _1d25e0232_buildScope(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d0601b6e_VarDecl> _1d25e0540_buildVarSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0602026_RetSt> _1d25e084d_buildRetSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d0602686_Iter> _1d25e0b5b_buildWhileNextIter(_1d25dd384_scopeParser*, jule::Ptr<_1d25dca59_stmt>*);
inline jule::Ptr<_1d0602e5b_WhileKind> _1d25e0e69_buildWhileIterKind(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d25e1277_getRangeKindKeysTokens(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0601b6e_VarDecl> _1d25e1585_buildRangeKindKey(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>> _1d25e1893_buildRangeKindKeys(_1d25dd384_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>*);
inline void _1d25e1bd4_setupRangeKindKeysPlain(_1d25dd384_scopeParser*, jule::Ptr<_1d06037ec_RangeKind>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d25e2036_setupRangeKindKeysExplicit(_1d25dd384_scopeParser*, jule::Ptr<_1d06037ec_RangeKind>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d25e2366_setupRangeKindKeys(_1d25dd384_scopeParser*, jule::Ptr<_1d06037ec_RangeKind>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d06037ec_RangeKind> _1d25e27b7_buildRangeIterKind(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Any _1d25e2b6e_buildCommonIterKind(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Ptr<_1d0602686_Iter> _1d25e2e7c_buildCommonIter(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d0602686_Iter> _1d25e328a_buildIterSt(_1d25dd384_scopeParser*, jule::Ptr<_1d25dca59_stmt>*);
inline jule::Ptr<_1d0603ba4_BreakSt> _1d25e3598_buildBreakSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d060405b_ContSt> _1d25e38a6_buildContSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d06044ce_If> _1d25e3bb4_buildIf(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0604886_Else> _1d25e3ec2_buildElse(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0604d09_Conditional> _1d25e42d0_buildIfElseChain(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e36dd_Expr> _1d25e45dd_buildCoCallSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05ebc68_GotoSt> _1d25e48eb_buildGotoSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05ec054_FallSt> _1d25e4c09_buildFallSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d06054d0_TypeAliasDecl> _1d25e5017_buildTypeAliasSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d25e5479_pushCaseExpr(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Ptr<_22be1281d_Token>, jule::Bool, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>*);
inline jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _1d25e58ca_buildCaseExprs(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>*, jule::Bool);
inline jule::Ptr<_1d05ee199_ScopeTree> _1d25e5bd8_buildCaseScope(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline __jule_tuple_x_1d0605953_Case__jule_tuple_bool _1d25e6090_buildCase(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Bool);
inline __jule_tuple_sx_1d0605953_Case__jule_tuple_x_1d0604886_Else _1d25e6447_buildCases(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Bool);
inline jule::Ptr<_1d0606129_MatchCase> _1d25e6755_buildMatchCase(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05ee199_ScopeTree> _1d25e6a63_buildScopeSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05eb8b1_LabelSt> _1d25e6d71_buildLabelSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline __jule_tuple__1d05ed85d_StmtData__jule_tuple_bool _1d25e717e_buildIdSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d260619e_assignInfo> _1d25e748c_buildAssignInfo(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05ec65e_AssignLeft> _1d25e779a_buildAssignL(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_1d05ec65e_AssignLeft>> _1d25e7aa8_buildAssignLs(_1d25dd384_scopeParser*, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>*);
inline __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool _1d25e7db6_buildPlainAssign(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool _1d25e81c4_buildDeclAssign(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool _1d25e84d2_buildAssignSt(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e407e_UseExpr> _1d25e87e0_buildUseExpr(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d25e8aed_buildSt(_1d25dd384_scopeParser*, jule::Ptr<_1d25dca59_stmt>*);
inline void _1d25e8e1c_build(_1d25dd384_scopeParser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_1d05ee199_ScopeTree>*);
struct _1d25dd384_scopeParser {
	jule::Ptr<_1d2609a98_parser> _field_p;
	jule::Ptr<_1d05ee199_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1d25dca59_stmt>> _field_stmts;
	jule::I64 _field_pos = 0;
	

	_1d25dd384_scopeParser(void) = default;


};
inline void _1d25ea13d_pushErr(_1d25e9868_exprBuilder*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d25ea45c_pushSuggestion(_1d25e9868_exprBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d05e436a_TupleExpr> _1d25ea76a_buildTuple(_1d25e9868_exprBuilder*, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>*);
inline jule::Ptr<_1d05e4722_LitExpr> _1d25eaa78_buildLit(_1d25e9868_exprBuilder*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d05de563_TypeDecl> _1d25ead86_buildPrimitiveType(_1d25e9868_exprBuilder*, jule::Ptr<_22be1281d_Token>*);
inline jule::Any _1d25eb194_buildSingle(_1d25e9868_exprBuilder*, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d05e52d3_IdentExpr> _1d25eb4a2_buildBindIdent(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e59dc_UnaryExpr> _1d25eb7b0_buildUnary(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e6a76_SubIdentExpr> _1d25ebabd_buildObjSubIdent(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e6603_NsSelectionExpr> _1d25ebdcb_buildNsSubIdent(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d25ec1d9_buildType(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d25ec4e7_buildSubIdent(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e5d94_VariadicExpr> _1d25ec805_buildVariadic(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Any _1d25ecb13_buildOpRight(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e39c9_RangeExpr> _1d25ece43_buildBetweenParentheses(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e624b_CastExpr> _1d25ed262_tryBuildCast(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d25ed62a_pushArg(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>*, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Ptr<_22be1281d_Token>);
inline jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _1d25ed938_buildArgs(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _1d25edc46_buildCallGenerics(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e7604_FnCallExpr> _1d25ee197_buildFnCall(_1d25e9868_exprBuilder*, jule::Ptr<_22be1281d_Token>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d25ee4a5_buildParenthesesRange(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e4d60_UnsafeExpr> _1d25ee7b3_buildUnsafeExpr(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d0600b90_FnDecl> _1d25eeac1_buildAnonFn(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d25eedce_buildUnsafe(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d2600297_pushRangeLitPart(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Ptr<_22be1281d_Token>, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d26005c7_getBraceRangeLitExprParts(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e8083_FieldExprPair> _1d26008e6_buildFieldExprPair(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e36dd_Expr> _1d2600c04_buildStructLitExpr(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _1d2601012_buildStructLitExprs(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e8858_StructLit> _1d2601342_buildTypedStructLiteral(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e36dd_Expr> _1d2601661_buildBraceLitPart(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e8ccb_BraceLit> _1d260196e_buildBraceLit(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d2601c7c_buildBraceRange(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d260208a_getEnumerableParts(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05e9d21_SliceExpr> _1d2602398_buildSlice(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05ea690_IndexingExpr> _1d26027e9_buildIndexing(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Ptr<_22be1281d_Token>);
inline jule::Ptr<_1d05eac9a_SlicingExpr> _1d2602d8d_buildSlicing(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_22be1281d_Token>);
inline jule::Any _1d260319b_buildBracketRange(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Any _1d26034a9_buildData(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d2603861_buildBinop(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64);
inline jule::Any _1d2603b6e_build(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d2603e7c_buildKind(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e36dd_Expr> _1d260428a_buildFromTokens(_1d25e9868_exprBuilder*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
struct _1d25e9868_exprBuilder {
	jule::Ptr<_1d2609a98_parser> _field_p;
	

	_1d25e9868_exprBuilder(void) = default;

	inline bool operator==(_1d25e9868_exprBuilder _other) {
		return 
			this->_field_p == _other._field_p;
	}

	inline bool operator!=(_1d25e9868_exprBuilder _other) { return !this->operator==(_other); }


};
struct _1d260619e_assignInfo {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_l;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_r;
	jule::Ptr<_22be1281d_Token> _field_setter;
	jule::Bool _field_ok = false;
	

	_1d260619e_assignInfo(void) = default;


};
inline void _1d2609dc8_stop(_1d2609a98_parser*);
inline jule::Bool _1d260a13c_stopped(_1d2609a98_parser*);
inline void _1d260a505_pushErr(_1d2609a98_parser*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline void _1d260a824_pushSuggestion(_1d2609a98_parser*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d05e36dd_Expr> _1d260ab32_buildExpr(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05aba4c_Directive> _1d260ae40_buildDirective(_1d2609a98_parser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d260b1b5_pushDirective(_1d2609a98_parser*, jule::Ptr<_1d05aba4c_Directive>);
inline jule::Ptr<_1d05ee199_ScopeTree> _1d260b56c_buildScope(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>);
inline __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool _1d260b9bd__buildType(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64*, jule::Bool);
inline __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool _1d260be1e_buildType(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1d06054d0_TypeAliasDecl> _1d260c22c_buildTypeAliasDecl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d260c54b_buildVarTypeAndExpr(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d0601b6e_VarDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d260c86a_buildVarCommon(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d0601b6e_VarDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d260cc33_buildVarBegin(_1d2609a98_parser*, jule::Ptr<_1d0601b6e_VarDecl>*, jule::I64*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0601b6e_VarDecl> _1d260d041_buildVar(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05eb509_GenericDecl> _1d260d34e_buildGeneric(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _1d260d706_buildGenerics(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Ptr<_22be1281d_Token>*);
inline jule::Ptr<_1d05ee870_ParamDecl> _1d260da14_buildSelfParam(_1d2609a98_parser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d260ddcc_paramTypeBegin(_1d2609a98_parser*, jule::Ptr<_1d05ee870_ParamDecl>*, jule::I64*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d260e1eb_buildParamType(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d05ee870_ParamDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d260e51a_buildParamBody(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d05ee870_ParamDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d05ee870_ParamDecl> _1d260e828_buildParam(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d260ea9d_checkParams(_1d2609a98_parser*, jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>>*);
inline jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>> _1d260ee55_buildParams(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Bool);
inline __jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool _1d261030c_buildMultiRetType(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64*);
inline __jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool _1d26106b4_buildRetType(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64*);
inline jule::Ptr<_1d0600b90_FnDecl> _1d2610b15_buildFnPrototype(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64*, jule::Bool);
inline jule::Ptr<_1d0600b90_FnDecl> _1d2611066_buildFn(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Bool, jule::Bool);
inline jule::Slice<jule::Ptr<_22be1281d_Token>> _1d2611374_getUseDeclSelectors(_1d2609a98_parser*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d2611693_buildBindUseDecl(_1d2609a98_parser*, jule::Ptr<_1d06068bb_UseDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d26119b2_buildStdUseDecl(_1d2609a98_parser*, jule::Ptr<_1d06068bb_UseDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d2611cd1_buildIdentUseDecl(_1d2609a98_parser*, jule::Ptr<_1d06068bb_UseDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline void _1d2612100_parseUseDecl(_1d2609a98_parser*, jule::Ptr<_1d06068bb_UseDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d06068bb_UseDecl> _1d26124a7_buildUseDecl(_1d2609a98_parser*, jule::Slice<jule::Ptr<_22be1281d_Token>>, jule::Bool);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261285e_buildTypeEnumItemKind(jule::Ptr<_1d2609a98_parser>, jule::I64*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>> _1d2612b6c_buildTypeEnumItems(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0608747_TypeEnumDecl> _1d2612e7a_buildTypeEnumDecl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e36dd_Expr> _1d2613332_buildEnumItemExpr(jule::Ptr<_1d2609a98_parser>, jule::I64*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>> _1d2613640_buildEnumItems(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0607867_EnumDecl> _1d261394d_buildEnumDecl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Any _1d2613c5b_buildNodeEnumDecl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d06089ab_FieldDecl> _1d2614069_buildField(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Slice<jule::Ptr<_1d06089ab_FieldDecl>> _1d2614377_buildStructDeclFields(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d0609308_StructDecl> _1d2614685_buildStructDecl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d261490a_checkMethodReceiver(_1d2609a98_parser*, jule::Ptr<_1d0600b90_FnDecl>*);
inline void _1d2614c29_buildTraitBody(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d06099ce_TraitDecl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d06099ce_TraitDecl> _1d2615037_buildTraitDecl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0600b90_FnDecl> _1d2615345_buildBindFn(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d0601b6e_VarDecl> _1d2615653_buildBindVar(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d0609308_StructDecl> _1d2615961_buildBindStruct(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d06054d0_TypeAliasDecl> _1d2615c6e_buildBindTypeAlias(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Ptr<_1d06068bb_UseDecl> _1d261607c_buildBindUse(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Any _1d261638a_buildBind(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d0600b90_FnDecl> _1d2616698_getMethod(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d26169b7_parseImplBody(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d060a0d9_Impl>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d060a0d9_Impl> _1d2616cc5_buildImpl(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Any _1d26170d3_buildNodeData(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d2617358_applyFnMeta(_1d2609a98_parser*, jule::Ptr<_1d0600b90_FnDecl>*);
inline void _1d26175cd_applyMeta(_1d2609a98_parser*, _1d05ab651_Node*);
inline void _1d2617853_pushUseDecl(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_1d06068bb_UseDecl>*);
inline jule::Bool _1d2617b61_pushMetaNodes(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline _1d05ab651_Node _1d2617e6e_parseNode(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d26181e4_appendNode(jule::Ptr<_1d2609a98_parser>, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d2618656_removeRange(_1d2609a98_parser*, jule::I64, jule::Str, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::I64>*);
inline void _1d2618a1e_pushWrongOrderCloseErr(_1d2609a98_parser*, jule::Ptr<_22be1281d_Token>*, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::I64>*);
inline void _1d2618e81_pushRangeClose(_1d2609a98_parser*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Slice<jule::I64>*);
inline void _1d2619206_checkRanges(_1d2609a98_parser*, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline void _1d261947b_parse(jule::Ptr<_1d2609a98_parser>, jule::Ptr<_22be17ba8_File>*);
struct _1d2609a98_parser {
	jule::Ptr<_1d05aa7a4_Ast> _field_ast;
	jule::Slice<jule::Ptr<_1d05aba4c_Directive>> _field_directives;
	jule::Slice<_22ba3c6bd_Log> _field_errors;
	jule::Ptr<_1d25e9868_exprBuilder> _field_ep;
	

	_1d2609a98_parser(void) = default;


};
inline void _1d261ad84_pushErr(_1d261a7bd_typeBuilder*, jule::Ptr<_22be1281d_Token>, jule::Str);
inline void _1d261b1a3_pushSuggestion(_1d261a7bd_typeBuilder*, jule::Str, jule::Slice<jule::Any>);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261b417_buildNamespace(_1d261a7bd_typeBuilder*);
inline jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _1d261b67b_buildGenerics(_1d261a7bd_typeBuilder*);
inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d261b8e0_identGenerics(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261bb54_buildIdent(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261bdb8_buildCppLink(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261c12c_buildFn(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261c391_buildPtr(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261c605_buildSptr(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261c869_buildOp(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261cacd_buildSlc(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261cd42_buildArr(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261d0a6_buildMap(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261d31a_buildEnumerable(_1d261a7bd_typeBuilder*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261d57e_step(_1d261a7bd_typeBuilder*);
inline __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool _1d261d7e3_build(_1d261a7bd_typeBuilder*);
struct _1d261a7bd_typeBuilder {
	jule::Ptr<_1d2609a98_parser> _field_p;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _field_tokens;
	jule::I64* _field_i = nullptr;
	jule::Bool _field_err = false;
	

	_1d261a7bd_typeBuilder(void) = default;


};
struct _1d2004a7b_CompileInfo {
	jule::Bool _field_Prod = false;
	jule::Bool _field_Test = false;
	jule::Str _field_Compiler = jule::Str("clang", 5);
	jule::Str _field_CppStd = jule::Str("cpp14", 5);
	

	_1d2004a7b_CompileInfo(void) = default;

	inline bool operator==(_1d2004a7b_CompileInfo _other) {
		return 
			this->_field_Prod == _other._field_Prod &&
			this->_field_Test == _other._field_Test &&
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CppStd == _other._field_CppStd;
	}

	inline bool operator!=(_1d2004a7b_CompileInfo _other) { return !this->operator==(_other); }


};
inline void _1d200642e_pushErr(_1d2005dce_directiveEval*, jule::Ptr<_22be1281d_Token>, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d20067d6_splitOperans(_1d2005dce_directiveEval*, jule::Str, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Bool _1d2006ae4_evalDirectiveIdent(_1d2005dce_directiveEval*, jule::Str);
inline jule::Bool _1d2006e02_evalDirectivePart(_1d2005dce_directiveEval*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Bool _1d2007166_eval(_1d2005dce_directiveEval*);
struct _1d2005dce_directiveEval {
	jule::Slice<_22ba3c6bd_Log> _field_logs;
	jule::Ptr<_1d05aba4c_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
	

	_1d2005dce_directiveEval(void) = default;


};
inline jule::Ptr<_1d261e6c3_JuleImporter> static__1d261eb02_New(_1d2004a7b_CompileInfo);
inline jule::Slice<jule::Ptr<_1d219307c_ImportInfo>> _1d261ed66_AllPackages(_1d261e6c3_JuleImporter*);
inline void _1d262022e_SetModPath(_1d261e6c3_JuleImporter*, jule::Str);
inline jule::Str _1d2620493_GetModPath(_1d261e6c3_JuleImporter*);
inline jule::Str _1d26207a1_ModById(_1d261e6c3_JuleImporter*, jule::I64);
inline jule::Ptr<_1d219307c_ImportInfo> _1d2620aae_GetImport(_1d261e6c3_JuleImporter*, jule::Str);
inline __jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log _1d2620e66_ImportPackage(_1d261e6c3_JuleImporter*, jule::Str, jule::Bool);
inline void _1d26211db_Imported(_1d261e6c3_JuleImporter*, jule::Ptr<_1d219307c_ImportInfo>);
inline __jule_tuple_bool__jule_tuple_s_22ba3c6bd_Log _1d262162b_isPassBuildDirectives(_1d261e6c3_JuleImporter*, jule::Ptr<_1d05aa7a4_Ast>*);
struct _1d261e6c3_JuleImporter {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1d219307c_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
	

	_1d261e6c3_JuleImporter(void) = default;


};
struct _1d2624475_OrderedDefines {
	jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_Globals;
	

	_1d2624475_OrderedDefines(void) = default;


};
inline jule::Bool _1b66a1331_isCommonOrdered(jule::Slice<jule::Ptr<_1d060ddbd_Struct>>, jule::Ptr<_1d060ddbd_Struct>);
inline jule::Bool _1b66a5c2b_isCommonOrdered(jule::Slice<jule::Ptr<_1d21bb65a_Var>>, jule::Ptr<_1d21bb65a_Var>);
inline void _1b669ce54_orderCommon(jule::Slice<jule::Ptr<_1d060ddbd_Struct>>*);
inline void _1b669d790_orderCommon(jule::Slice<jule::Ptr<_1d21bb65a_Var>>*);
inline void static__1d26250ad_orderStructures(jule::Slice<jule::Ptr<_1d060ddbd_Struct>>*);
inline void static__1d26252bc_orderVars(jule::Slice<jule::Ptr<_1d21bb65a_Var>>*);
struct _1d26246d9_defineOrderer {
	

	_1d26246d9_defineOrderer(void) = default;

	inline bool operator==(_1d26246d9_defineOrderer _other) { return true; }

	inline bool operator!=(_1d26246d9_defineOrderer _other) { return !this->operator==(_other); }


};
struct _1d075e66c_liveTable {
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1d0626e6e_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1d0611bd4_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1d21494c8_Trait>> _field_traits;
	

	_1d075e66c_liveTable(void) = default;


};
inline void _1d07958e5_optimizeChild(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d2174613_Scope>*);
inline void _1d0795b8c_optimizeBodyChildExceptional(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d2174613_Scope>*);
inline void _1d0795e23_optimizeBodyChild(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d2174613_Scope>*);
inline void _1d0796198_optimizeExprModel(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Any*);
inline void _1d0796374_eliminateFollowed(_1d079541c_scopeDeadCode*);
inline void _1d07965e9_pushGoto(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d217713d_GotoSt>);
inline void _1d079686e_pushLabel(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d2176d52_Label>);
inline void _1d0796ae4_optimizeRangeIter(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d21762b3_RangeIter>);
inline void _1d0796d69_optimizeWhileIter(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d21758cd_WhileIter>);
inline void _1d07970de_optimizeInfIter(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d217545a_InfIter>);
inline void _1d0797364_optimizeConditional(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d217516e_Conditional>);
inline void _1d07975d9_optimizeMatch(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d217842a_Match>);
inline void _1d079785e_optimizeAssign(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d2177968_Assign>);
inline void _1d0797ad4_optimizeMultiAssign(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Ptr<_1d2177d20_MultiAssign>);
inline void _1d0797d59_optimizeStmt(jule::Ptr<_1d079541c_scopeDeadCode>, jule::Any);
inline void _1d0798035_optimizeStmts(jule::Ptr<_1d079541c_scopeDeadCode>);
struct _1d079541c_scopeDeadCode {
	jule::Ptr<_1d079541c_scopeDeadCode> _field_parent;
	jule::Ptr<_1d2174613_Scope> _field_s;
	jule::Slice<jule::Any>* _field_stmts = nullptr;
	jule::I64 _field_i = 0;
	jule::Ptr<jule::Slice<jule::Ptr<_1d2176d52_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1d217713d_GotoSt>>> _field_gotos;
	jule::Bool _field_except = false;
	

	_1d079541c_scopeDeadCode(void) = default;

	inline bool operator==(_1d079541c_scopeDeadCode _other) {
		return 
			this->_field_parent == _other._field_parent &&
			this->_field_s == _other._field_s &&
			this->_field_stmts == _other._field_stmts &&
			this->_field_i == _other._field_i &&
			this->_field_labels == _other._field_labels &&
			this->_field_gotos == _other._field_gotos &&
			this->_field_except == _other._field_except;
	}

	inline bool operator!=(_1d079541c_scopeDeadCode _other) { return !this->operator==(_other); }


};
inline _1d0799377_exprDeadCode static__1d07999a4_new(jule::Ptr<_1d079541c_scopeDeadCode>*);
inline void _1d0799c29_binary(_1d0799377_exprDeadCode*, jule::Ptr<_1d061614a_BinopExprModel>);
inline void _1d0799e9e_unary(_1d0799377_exprDeadCode*, jule::Ptr<_1d0616502_UnaryExprModel>);
inline void _1d079a224_structureLit(_1d0799377_exprDeadCode*, jule::Ptr<_1d0616ca5_StructLitExprModel>);
inline void _1d079a499_allocStructure(_1d0799377_exprDeadCode*, jule::Ptr<_1d06170b3_AllocStructLitExprModel>);
inline void _1d079a71e_casting(_1d0799377_exprDeadCode*, jule::Ptr<_1d0617613_CastingExprModel>);
inline void _1d079a994_args(_1d0799377_exprDeadCode*, jule::Slice<jule::Any>*);
inline void _1d079ac19_funcCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d0617eb5_FnCallExprModel>);
inline void _1d079ae8e_slice(_1d0799377_exprDeadCode*, jule::Ptr<_1d061836c_SliceExprModel>);
inline void _1d079b214_array(_1d0799377_exprDeadCode*, jule::Ptr<_1d061b095_ArrayExprModel>);
inline void _1d079b489_indexing(_1d0799377_exprDeadCode*, jule::Ptr<_1d06187e0_IndexingExprModel>);
inline void _1d079b70e_anonFunc(_1d0799377_exprDeadCode*, jule::Ptr<_1d0618b97_AnonFnExprModel>);
inline void _1d079b984_mapExpr(_1d0799377_exprDeadCode*, jule::Ptr<_1d06194c2_MapExprModel>);
inline void _1d079bc09_slicing(_1d0799377_exprDeadCode*, jule::Ptr<_1d0619a11_SlicingExprModel>);
inline void _1d079be7e_traitSub(_1d0799377_exprDeadCode*, jule::Ptr<_1d061a050_TraitSubIdentExprModel>);
inline void _1d079c204_structureSub(_1d0799377_exprDeadCode*, jule::Ptr<_1d061a836_StructSubIdentExprModel>);
inline void _1d079c479_commonSub(_1d0799377_exprDeadCode*, jule::Ptr<_1d061b8e2_CommonSubIdentExprModel>);
inline void _1d079c6ee_tuple(_1d0799377_exprDeadCode*, jule::Ptr<_1d061bbde_TupleExprModel>);
inline void _1d079c974_newCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061cbac_BuiltinNewCallExprModel>);
inline void _1d079cbe9_outCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel>);
inline void _1d079ce6e_outlnCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel>);
inline void _1d079d1e4_panicCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061d097_BuiltinPanicCallExprModel>);
inline void _1d079d469_assertCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel>);
inline void _1d079d6de_errorCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel>);
inline void _1d079d964_makeCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>);
inline void _1d079dbd9_appendCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel>);
inline void _1d079de5e_lenCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061e20d_BuiltinLenCallExprModel>);
inline void _1d079e1d4_capCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061e52c_BuiltinCapCallExprModel>);
inline void _1d079e459_cloneCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel>);
inline void _1d079e6ce_deleteCall(_1d0799377_exprDeadCode*, jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel>);
inline void _1d079e954_sizeof(_1d0799377_exprDeadCode*, jule::Ptr<_1d062072b_SizeofExprModel>);
inline void _1d079ebc9_alignof(_1d0799377_exprDeadCode*, jule::Ptr<_1d0620a17_AlignofExprModel>);
inline void _1d079ee4e_integratedToStr(_1d0799377_exprDeadCode*, jule::Ptr<_1d0621111_IntegratedToStrExprModel>);
inline void _1d07a01c4_free(_1d0799377_exprDeadCode*, jule::Ptr<_1d06217b5_FreeExprModel>);
inline void _1d07a0449_backendEmit(_1d0799377_exprDeadCode*, jule::Ptr<_1d06214c9_BackendEmitExprModel>);
inline void _1d07a06be_optimize(_1d0799377_exprDeadCode*, jule::Any*);
struct _1d0799377_exprDeadCode {
	jule::Ptr<_1d079541c_scopeDeadCode> _field_s;
	

	_1d0799377_exprDeadCode(void) = default;

	inline bool operator==(_1d0799377_exprDeadCode _other) {
		return 
			this->_field_s == _other._field_s;
	}

	inline bool operator!=(_1d0799377_exprDeadCode _other) { return !this->operator==(_other); }


};
struct _1d06556ea_StrCompExprModel {
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Ptr<_1e76e5cc3_Const> _field_Right;
	jule::Bool _field_NotEq = false;
	

	_1d06556ea_StrCompExprModel(void) = default;

	inline bool operator==(_1d06556ea_StrCompExprModel _other) {
		return 
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right &&
			this->_field_NotEq == _other._field_NotEq;
	}

	inline bool operator!=(_1d06556ea_StrCompExprModel _other) { return !this->operator==(_other); }


};
struct _1d0655ab3_StrAppendExprModel {
	jule::Any _field_Str = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d0655ab3_StrAppendExprModel(void) = default;

	inline bool operator==(_1d0655ab3_StrAppendExprModel _other) {
		return 
			this->_field_Str == _other._field_Str &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0655ab3_StrAppendExprModel _other) { return !this->operator==(_other); }


};
struct _1d0655d9e_UnsafeBinopExprModel {
	jule::Ptr<_1d061614a_BinopExprModel> _field_Node;
	

	_1d0655d9e_UnsafeBinopExprModel(void) = default;

	inline bool operator==(_1d0655d9e_UnsafeBinopExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d0655d9e_UnsafeBinopExprModel _other) { return !this->operator==(_other); }


};
struct _1d0656234_UnsafeIndexingExprModel {
	jule::Ptr<_1d06187e0_IndexingExprModel> _field_Node;
	

	_1d0656234_UnsafeIndexingExprModel(void) = default;

	inline bool operator==(_1d0656234_UnsafeIndexingExprModel _other) {
		return 
			this->_field_Node == _other._field_Node;
	}

	inline bool operator!=(_1d0656234_UnsafeIndexingExprModel _other) { return !this->operator==(_other); }


};
struct _1d06565b9_PushToSliceExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Ptr<_1d061836c_SliceExprModel> _field_Elems;
	

	_1d06565b9_PushToSliceExprModel(void) = default;

	inline bool operator==(_1d06565b9_PushToSliceExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Elems == _other._field_Elems;
	}

	inline bool operator!=(_1d06565b9_PushToSliceExprModel _other) { return !this->operator==(_other); }


};
struct _1d0656b08_MutSlicingExprModel {
	jule::Ptr<_22be1281d_Token> _field_Token;
	jule::Any _field_Expr = jule::Any(nullptr);
	jule::Any _field_Left = jule::Any(nullptr);
	jule::Any _field_Right = jule::Any(nullptr);
	

	_1d0656b08_MutSlicingExprModel(void) = default;

	inline bool operator==(_1d0656b08_MutSlicingExprModel _other) {
		return 
			this->_field_Token == _other._field_Token &&
			this->_field_Expr == _other._field_Expr &&
			this->_field_Left == _other._field_Left &&
			this->_field_Right == _other._field_Right;
	}

	inline bool operator!=(_1d0656b08_MutSlicingExprModel _other) { return !this->operator==(_other); }


};
struct _1d0656ed2_StrInsertBeginExprModel {
	jule::Any _field_Dest = jule::Any(nullptr);
	jule::Any _field_Expr = jule::Any(nullptr);
	

	_1d0656ed2_StrInsertBeginExprModel(void) = default;

	inline bool operator==(_1d0656ed2_StrInsertBeginExprModel _other) {
		return 
			this->_field_Dest == _other._field_Dest &&
			this->_field_Expr == _other._field_Expr;
	}

	inline bool operator!=(_1d0656ed2_StrInsertBeginExprModel _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d06581e2_scopeOptimizer> static__1d0658753_new(jule::Ptr<_1d2174613_Scope>);
inline void _1d06589c8_setCurrentStmt(_1d06581e2_scopeOptimizer*, jule::Any);
inline void _1d0658c4d_optimizeData(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d0408c95_Data>);
inline void _1d0658ec3_optimizeVar(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d21bb65a_Var>);
inline void _1d0659248_optimizeConditional(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d217516e_Conditional>);
inline void _1d0659633_buildDefaultConstatTrueCase(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2178e75_Case>, jule::I64*, jule::Ptr<_1d217842a_Match>*);
inline void _1d0659842_optimizeMatch(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d217842a_Match>);
inline void _1d0659ab7_optimizeRangeIter(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d21762b3_RangeIter>);
inline void _1d0659d3c_optimizeWhileIter(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d21758cd_WhileIter>);
inline jule::Bool _1d065a14a_substr(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2177968_Assign>);
inline jule::Bool _1d065a458_strInsert(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2177968_Assign>);
inline jule::Bool _1d065a766_strAppend(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2177968_Assign>);
inline jule::Bool _1d065aa74_strAssign(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2177968_Assign>);
inline void _1d065ace9_optimizeAssign(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2177968_Assign>);
inline void _1d065b06e_optimizeMultiAssign(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2177d20_MultiAssign>);
inline void _1d065b2e4_optimizeRet(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d217989e_RetSt>);
inline void _1d065b569_optimizeStmt(_1d06581e2_scopeOptimizer*, jule::Any);
inline void _1d065b7de_optimizeChild(_1d06581e2_scopeOptimizer*, jule::Ptr<_1d2174613_Scope>);
inline void _1d065b9ba_optimize(_1d06581e2_scopeOptimizer*);
struct _1d06581e2_scopeOptimizer {
	jule::I64 _field_i = 0;
	jule::Ptr<_1d2174613_Scope> _field_scope;
	

	_1d06581e2_scopeOptimizer(void) = default;

	inline bool operator==(_1d06581e2_scopeOptimizer _other) {
		return 
			this->_field_i == _other._field_i &&
			this->_field_scope == _other._field_scope;
	}

	inline bool operator!=(_1d06581e2_scopeOptimizer _other) { return !this->operator==(_other); }


};
inline void static__1d1ecb459_optimize(jule::Any*);
inline jule::Bool _1d1ecb756_strCond(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061614a_BinopExprModel>);
inline void _1d1ecb9cb_binary(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061614a_BinopExprModel>);
inline void _1d1ecbc51_unary(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0616502_UnaryExprModel>);
inline void _1d1ecbec6_structureLit(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0616ca5_StructLitExprModel>);
inline void _1d1ecc24b_allocStructure(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d06170b3_AllocStructLitExprModel>);
inline void _1d1ecc4c1_casting(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0617613_CastingExprModel>);
inline void _1d1ecc746_args(_1d1ecaea3_exprOptimizer*, jule::Slice<jule::Any>*);
inline void _1d1ecc9bb_scope(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d2174613_Scope>*);
inline void _1d1eccc41_funcCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0617eb5_FnCallExprModel>);
inline void _1d1ecceb6_slice(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061836c_SliceExprModel>);
inline void _1d1ecd23b_array(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061b095_ArrayExprModel>);
inline void _1d1ecd4b1_indexing(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d06187e0_IndexingExprModel>);
inline void _1d1ecd736_anonFunc(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0618b97_AnonFnExprModel>);
inline void _1d1ecd9ab_mapExpr(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d06194c2_MapExprModel>);
inline void _1d1ecdc31_slicing(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0619a11_SlicingExprModel>);
inline void _1d1ecdea6_traitSub(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061a050_TraitSubIdentExprModel>);
inline void _1d1ece22b_structureSub(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061a836_StructSubIdentExprModel>);
inline void _1d1ece4a1_commonSub(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061b8e2_CommonSubIdentExprModel>);
inline void _1d1ece726_tuple(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061bbde_TupleExprModel>);
inline void _1d1ece99b_newCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061cbac_BuiltinNewCallExprModel>);
inline void _1d1ecec21_outCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel>);
inline void _1d1ecee96_outlnCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel>);
inline void _1d1ed021b_panicCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061d097_BuiltinPanicCallExprModel>);
inline void _1d1ed0491_assertCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel>);
inline void _1d1ed0716_errorCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel>);
inline void _1d1ed098b_makeCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>);
inline void _1d1ed0c11_appendCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel>);
inline void _1d1ed0e86_lenCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061e20d_BuiltinLenCallExprModel>);
inline void _1d1ed120b_capCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061e52c_BuiltinCapCallExprModel>);
inline void _1d1ed1481_cloneCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel>);
inline void _1d1ed1706_deleteCall(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel>);
inline void _1d1ed197b_sizeof(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d062072b_SizeofExprModel>);
inline void _1d1ed1c01_alignof(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0620a17_AlignofExprModel>);
inline void _1d1ed1e76_integratedToStr(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d0621111_IntegratedToStrExprModel>);
inline void _1d1ed21eb_free(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d06217b5_FreeExprModel>);
inline void _1d1ed2471_backendEmit(_1d1ecaea3_exprOptimizer*, jule::Ptr<_1d06214c9_BackendEmitExprModel>);
inline void _1d1ed264c_do(_1d1ecaea3_exprOptimizer*);
struct _1d1ecaea3_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	

	_1d1ecaea3_exprOptimizer(void) = default;

	inline bool operator==(_1d1ecaea3_exprOptimizer _other) {
		return 
			this->_field_model == _other._field_model;
	}

	inline bool operator!=(_1d1ecaea3_exprOptimizer _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d07a11e7_Optimizer> static__1d07a169d_New(jule::Ptr<_1d2621e34_IR>*);
inline void _1d07a1923_optimizeGlobal(_1d07a11e7_Optimizer*, jule::Ptr<_1d21bb65a_Var>*);
inline void _1d07a1b98_optimizeFunction(_1d07a11e7_Optimizer*, jule::Ptr<_1d06242bd_Fn>*);
inline void _1d07a1e1d_optimizeStruct(_1d07a11e7_Optimizer*, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1d07a2193_optimizeGlobals(_1d07a11e7_Optimizer*, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d07a2418_optimizeFunctions(_1d07a11e7_Optimizer*, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d07a268d_optimizeStructs(_1d07a11e7_Optimizer*, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d07a2913_optimizePackage(_1d07a11e7_Optimizer*, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d07a2ade_Optimize(_1d07a11e7_Optimizer*);
struct _1d07a11e7_Optimizer {
	jule::Ptr<_1d2621e34_IR> _field_ir;
	

	_1d07a11e7_Optimizer(void) = default;

	inline bool operator==(_1d07a11e7_Optimizer _other) {
		return 
			this->_field_ir == _other._field_ir;
	}

	inline bool operator!=(_1d07a11e7_Optimizer _other) { return !this->operator==(_other); }


};
inline void static__1e29a0802_Reset(void);
inline void static__1e29a1a78_Print(jule::Str, jule::Str);
struct _1e29a188b_AnsiEscape {
	

	_1e29a188b_AnsiEscape(void) = default;

	inline bool operator==(_1e29a188b_AnsiEscape _other) { return true; }

	inline bool operator!=(_1e29a188b_AnsiEscape _other) { return !this->operator==(_other); }


};
inline void static__1e29a31a6_LogFlat(_22ba3c6bd_Log*);
inline void static__1e29a33b5_LogError(_22ba3c6bd_Log*);
inline void static__1e29a35c4_Log(_22ba3c6bd_Log*);
inline void static__1e29a37d3_PrintLogs(jule::Slice<_22ba3c6bd_Log>*);
struct _1e29a2e20_Logger {
	

	_1e29a2e20_Logger(void) = default;

	inline bool operator==(_1e29a2e20_Logger _other) { return true; }

	inline bool operator!=(_1e29a2e20_Logger _other) { return !this->operator==(_other); }


};
inline jule::U64 _1b5a6b6b9_Unix(_1b5a6b312_AbsTime*);
struct _1b5a6b312_AbsTime {
	jule::U64 _field_Day = 0;
	jule::U64 _field_WeekDay = 0;
	jule::U64 _field_YearDay = 0;
	jule::U64 _field_Month = 0;
	jule::U64 _field_Year = 0;
	jule::U64 _field_Second = 0;
	jule::U64 _field_Minute = 0;
	jule::U64 _field_Hour = 0;
	

	_1b5a6b312_AbsTime(void) = default;

	inline bool operator==(_1b5a6b312_AbsTime _other) {
		return 
			this->_field_Day == _other._field_Day &&
			this->_field_WeekDay == _other._field_WeekDay &&
			this->_field_YearDay == _other._field_YearDay &&
			this->_field_Month == _other._field_Month &&
			this->_field_Year == _other._field_Year &&
			this->_field_Second == _other._field_Second &&
			this->_field_Minute == _other._field_Minute &&
			this->_field_Hour == _other._field_Hour;
	}

	inline bool operator!=(_1b5a6b312_AbsTime _other) { return !this->operator==(_other); }


};
inline _1b5a6b9a5_Time static__1b5a6bd4b_Unix(jule::U64);
inline _1b5a6b9a5_Time static__1b5a6c049_Now(void);
inline jule::U64 _1b5a6c49a_Unix(_1b5a6b9a5_Time*);
inline jule::U64 _1b5a6c70e_Day(_1b5a6b9a5_Time*);
inline jule::U64 _1b5a6c973_Month(_1b5a6b9a5_Time*);
inline jule::U64 _1b5a6cbd7_Year(_1b5a6b9a5_Time*);
inline jule::U64 _1b5a6ce4b_Second(_1b5a6b9a5_Time*);
inline jule::U64 _1b5a6d1b0_Minute(_1b5a6b9a5_Time*);
inline jule::U64 _1b5a6d424_Hour(_1b5a6b9a5_Time*);
inline _1b5a6b312_AbsTime _1b5a6d688_Abs(_1b5a6b9a5_Time*);
struct _1b5a6b9a5_Time {
	jule::U64 _field_sec = 0;
	

	_1b5a6b9a5_Time(void) = default;

	inline bool operator==(_1b5a6b9a5_Time _other) {
		return 
			this->_field_sec == _other._field_sec;
	}

	inline bool operator!=(_1b5a6b9a5_Time _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b56e9e08_scopeCoder> static__1b56ea546_new(jule::Ptr<_1b5a75a36_ObjectCoder>*);
inline void _1b695c19c_iterHead(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21762b3_RangeIter>*, jule::Bool*, jule::Str*);
inline void _1b56eab84_rangeIndexIter(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21762b3_RangeIter>*);
inline void _1b56eae09_rangeHashmapIter(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21762b3_RangeIter>*);
inline void _1b56eb17e_ifCase(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2174a0e_If>);
inline void _1b56eb404_conditional(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217516e_Conditional>);
inline void _1b56eb679_infIter(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217545a_InfIter>);
inline void _1b56eb8ee_whileIter(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21758cd_WhileIter>);
inline void _1b56ebb74_rangeIter(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21762b3_RangeIter>);
inline void _1b56ebde9_cont(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21766ae_ContSt>);
inline void _1b56ec16e_label(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2176d52_Label>);
inline void _1b56ec3e4_gotoSt(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217713d_GotoSt>);
inline void _1b56ec669_postfix(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21774e5_Postfix>);
inline void _1b56ec8de_assign(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2177968_Assign>);
inline void _1b56ecb64_mapLookupAssign(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2177d20_MultiAssign>*);
inline void _1b56ecdd9_multiAssignTup(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2177d20_MultiAssign>*);
inline void _1b56ed15e_multiAssignFn(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2177d20_MultiAssign>*);
inline void _1b56ed3d4_multiAssign(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2177d20_MultiAssign>);
inline jule::Fn<void(void)> _1b56ed6e2_matchExpr(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217842a_Match>);
inline void _1b56eda11_case(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217842a_Match>, jule::Ptr<_1d2178e75_Case>);
inline void _1b56edc86_matchSt(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217842a_Match>);
inline void _1b56ee00b_fallSt(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217952a_FallSt>);
inline void _1b56ee281_breakSt(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2176a66_BreakSt>);
inline void _1b56ee506_setResult(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217989e_RetSt>);
inline void _1b56ee77b_retSt(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d217989e_RetSt>);
inline void _1b56eea01_var(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d21bb65a_Var>);
inline void _1b56eec76_strAppend(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d0655ab3_StrAppendExprModel>);
inline void _1b56eeeeb_st(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Any);
inline void _1b5700271_scopeStmts(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2174613_Scope>*);
inline void _1b57004e6_scope(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d2174613_Scope>);
inline void _1b570076b_funcScope(jule::Ptr<_1b56e9e08_scopeCoder>, jule::Ptr<_1d0626e6e_FnIns>);
struct _1b56e9e08_scopeCoder {
	jule::Ptr<_1b5a75a36_ObjectCoder> _field_oc;
	

	_1b56e9e08_scopeCoder(void) = default;

	inline bool operator==(_1b56e9e08_scopeCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b56e9e08_scopeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b5703351_exprCoder> static__1b570374c_new(jule::Ptr<_1b5a75a36_ObjectCoder>*);
inline void _1b57039c2_string(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1e76e5cc3_Const>*);
inline void _1b5703c47_boolean(jule::Ptr<_1b5703351_exprCoder>, jule::Bool);
inline void _1b5703e23_nilLit(jule::Ptr<_1b5703351_exprCoder>);
inline jule::Bool _1b5704231_ftoaSpecialCases(jule::Ptr<_1b5703351_exprCoder>, jule::F64*);
inline void _1b57044a6_float32(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1e76e5cc3_Const>*);
inline void _1b570472b_float64(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1e76e5cc3_Const>*);
inline void _1b57049a1_constant(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1e76e5cc3_Const>);
inline void _1b5704d69_divByZeroBinary(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_22be1281d_Token>*, jule::Ptr<_1d0615b83_OperandExprModel>*, jule::Ptr<_1d0615b83_OperandExprModel>*);
inline void _1b57050de_unsafeBinary(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061614a_BinopExprModel>);
inline void _1b5705364_binary(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061614a_BinopExprModel>);
inline void _1b57055d9_var(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d21bb65a_Var>);
inline void _1b570585e_structureIns(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0611bd4_StructIns>);
inline void _1b5705ad4_unary(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0616502_UnaryExprModel>);
inline void _1b5705d59_structureLit(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0616ca5_StructLitExprModel>);
inline void _1b57060ce_allocStructure(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06170b3_AllocStructLitExprModel>);
inline void _1b5706354_possibleRefExpr(jule::Ptr<_1b5703351_exprCoder>, jule::Any);
inline void _1b570671c_castTraitFromTrait(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617613_CastingExprModel>*, jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d21494c8_Trait>);
inline void _1b5706992_casting(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617613_CastingExprModel>);
inline void _1b5706c17_models(jule::Ptr<_1b5703351_exprCoder>, jule::Slice<jule::Any>);
inline void _1b5706e8c_args(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617eb5_FnCallExprModel>*);
inline void _1b5707212_modelForCall(jule::Ptr<_1b5703351_exprCoder>, jule::Any);
inline void _1b5707487_pushCallInf(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617eb5_FnCallExprModel>*);
inline jule::Bool _1b5707795_isWrapped(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617eb5_FnCallExprModel>*);
inline void _1b5707a1a_pureFuncCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617eb5_FnCallExprModel>*);
inline void _1b5707c90_coFuncCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617eb5_FnCallExprModel>*);
inline void _1b57080ae_writeUseExpr(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Ptr<_1d0408c95_Data>);
inline void _1b5708334_funcCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0617eb5_FnCallExprModel>);
inline void _1b57085a9_slice(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061836c_SliceExprModel>);
inline void _1b570882e_indexing(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06187e0_IndexingExprModel>);
inline void _1b5708aa4_unsafeIndexing(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0656234_UnsafeIndexingExprModel>);
inline void _1b5708d29_anonFunc(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0618b97_AnonFnExprModel>);
inline void _1b570909e_mapExpr(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06194c2_MapExprModel>);
inline void _1b5709324_slicing(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0619a11_SlicingExprModel>);
inline void _1b5709599_traitSub(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061a050_TraitSubIdentExprModel>);
inline void _1b570981e_structureSub(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061a836_StructSubIdentExprModel>);
inline void _1b5709a94_commonIdent(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061b381_CommonIdentExprModel>);
inline void _1b5709d19_commonSub(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061b8e2_CommonSubIdentExprModel>);
inline void _1b570a08e_array(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061b095_ArrayExprModel>);
inline void _1b570a314_funcInsCommon(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0626e6e_FnIns>);
inline void _1b570a589_funcIns(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0626e6e_FnIns>);
inline void _1b570a80e_tuple(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061bbde_TupleExprModel>);
inline void _1b570aa84_newCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061cbac_BuiltinNewCallExprModel>);
inline void _1b570ad09_outCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel>);
inline void _1b570b07e_outlnCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel>);
inline void _1b570b304_panicCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061d097_BuiltinPanicCallExprModel>);
inline void _1b570b579_assertCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel>);
inline void _1b570b7ee_errorCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel>);
inline void _1b570ba74_copyCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0620044_BuiltinCopyCallExprModel>);
inline void _1b570bce9_lenCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061e20d_BuiltinLenCallExprModel>);
inline void _1b570c06e_capCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061e52c_BuiltinCapCallExprModel>);
inline void _1b570c2e4_deleteCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel>);
inline void _1b570c569_makeCallSlice(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>*);
inline void _1b570c7de_makeCallStr(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>*);
inline void _1b570ca64_makeCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>);
inline void _1b570ccd9_pushToSlice(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06565b9_PushToSliceExprModel>);
inline void _1b570d05e_appendCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel>);
inline void _1b570d2d4_cloneCall(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel>);
inline void _1b570d559_sizeof(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d062072b_SizeofExprModel>);
inline void _1b570d7ce_alignof(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0620a17_AlignofExprModel>);
inline jule::Str _1b570dadc_runeLit(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0620d03_RuneExprModel>);
inline void _1b570dd62_structureStatic(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d061abcc_StructStaticIdentExprModel>);
inline void _1b570e0d7_integratedToStr(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0621111_IntegratedToStrExprModel>);
inline void _1b570e35c_backendEmit(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06214c9_BackendEmitExprModel>);
inline void _1b570e5d2_free(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06217b5_FreeExprModel>);
inline void _1b570e857_mutSlicing(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0656b08_MutSlicingExprModel>);
inline void _1b570eacc_strInsertBegin(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d0656ed2_StrInsertBeginExprModel>);
inline void _1b570ed52_strComp(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d06556ea_StrCompExprModel>);
inline void _1b57100c7_model(jule::Ptr<_1b5703351_exprCoder>, jule::Any);
inline void _1b571034c_initExpr(jule::Ptr<_1b5703351_exprCoder>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1b5703351_exprCoder {
	jule::Ptr<_1b5a75a36_ObjectCoder> _field_oc;
	

	_1b5703351_exprCoder(void) = default;

	inline bool operator==(_1b5703351_exprCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b5703351_exprCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b5712ae1_deriveCoder> static__1b5712ecb_new(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline jule::Str _1b57132d9_cloneFuncDecl(_1b5712ae1_deriveCoder*, jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Str _1b57135e7_cloneFuncDef(_1b5712ae1_deriveCoder*, jule::Ptr<_1d060ddbd_Struct>*);
struct _1b5712ae1_deriveCoder {
	jule::Ptr<_1b5a75a36_ObjectCoder> _field_oc;
	

	_1b5712ae1_deriveCoder(void) = default;

	inline bool operator==(_1b5712ae1_deriveCoder _other) {
		return 
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b5712ae1_deriveCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b57144c7_TestCoder> static__1b571494a_New(jule::Ptr<_1b5a75a36_ObjectCoder>*);
inline jule::Ptr<_1d219307c_ImportInfo> _1b5714bae_findTestingPackage(jule::Ptr<_1b57144c7_TestCoder>);
inline void _1b5714e34_appendTest(jule::Ptr<_1b57144c7_TestCoder>, jule::Ptr<_1d0626e6e_FnIns>);
inline void _1b57151a9_appendPackageTests(jule::Ptr<_1b57144c7_TestCoder>, jule::Ptr<_1d2195bb7_Package>*);
inline jule::Bool _1b571541d_readyTestingPackage(jule::Ptr<_1b57144c7_TestCoder>);
inline void _1b57155e9_callTmReset(jule::Ptr<_1b57144c7_TestCoder>);
inline void _1b57157c5_callTmFailed(jule::Ptr<_1b57144c7_TestCoder>);
inline void _1b57159a1_callTmSkipped(jule::Ptr<_1b57144c7_TestCoder>);
inline void _1b59d208b_Serialize(jule::Ptr<_1b57144c7_TestCoder>);
struct _1b57144c7_TestCoder {
	jule::Ptr<_1d0611bd4_StructIns> _field_t;
	jule::Ptr<_1d06242bd_Fn> _field_tmReset;
	jule::Ptr<_1d06242bd_Fn> _field_tmFailed;
	jule::Ptr<_1d06242bd_Fn> _field_tmSkipped;
	jule::Ptr<_1b5a75a36_ObjectCoder> _field_oc;
	

	_1b57144c7_TestCoder(void) = default;

	inline bool operator==(_1b57144c7_TestCoder _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_tmReset == _other._field_tmReset &&
			this->_field_tmFailed == _other._field_tmFailed &&
			this->_field_tmSkipped == _other._field_tmSkipped &&
			this->_field_oc == _other._field_oc;
	}

	inline bool operator!=(_1b57144c7_TestCoder _other) { return !this->operator==(_other); }


};
inline jule::Str static__1b59d34ee_toOut(jule::Str*, jule::Uintptr);
inline jule::Str static__1b59d38d9_toLocal(jule::I64, jule::I64, jule::Str*);
inline jule::Str static__1b59d3b81_func(jule::Ptr<_1d06242bd_Fn>*);
inline jule::Str static__1b59d3e28_funcIns(jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Str static__1b59d41c0_traitDecl(jule::Ptr<_1d21494c8_Trait>);
inline jule::Str static__1b59d4467_param(jule::Ptr<_1d0622981_Param>*);
inline jule::Str static__1b59d470e_structure(jule::Ptr<_1d060ddbd_Struct>*);
inline jule::Str static__1b59d49a6_structureIns(jule::Ptr<_1d0611bd4_StructIns>*);
inline jule::Str static__1b59d4c4d_field(jule::Ptr<_1d060b2e9_Field>*);
inline jule::Str static__1b59d4ee5_var(jule::Ptr<_1d21bb65a_Var>);
inline jule::Str static__1b59d528c_iterBegin(jule::Uintptr);
inline jule::Str static__1b59d5534_iterEnd(jule::Uintptr);
inline jule::Str static__1b59d57cb_iterNext(jule::Uintptr);
inline jule::Str static__1b59d5a73_label(jule::Str*);
inline jule::Str static__1b59d5d1a_matchEnd(jule::Uintptr);
inline jule::Str static__1b59d60b2_caseBegin(jule::Uintptr);
struct _1b59d2e27_identCoder {
	

	_1b59d2e27_identCoder(void) = default;

	inline bool operator==(_1b59d2e27_identCoder _other) { return true; }

	inline bool operator!=(_1b59d2e27_identCoder _other) { return !this->operator==(_other); }


};
struct _1b5a74194_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
	

	_1b5a74194_SerializationInfo(void) = default;

	inline bool operator==(_1b5a74194_SerializationInfo _other) {
		return 
			this->_field_Compiler == _other._field_Compiler &&
			this->_field_CompilerCommand == _other._field_CompilerCommand;
	}

	inline bool operator!=(_1b5a74194_SerializationInfo _other) { return !this->operator==(_other); }


};
struct _1b5a7465b_traitHash {
	jule::Ptr<_1d21494c8_Trait> _field_t;
	jule::Ptr<_1d0611bd4_StructIns> _field_s;
	jule::I64 _field_i = 0;
	

	_1b5a7465b_traitHash(void) = default;

	inline bool operator==(_1b5a7465b_traitHash _other) {
		return 
			this->_field_t == _other._field_t &&
			this->_field_s == _other._field_s &&
			this->_field_i == _other._field_i;
	}

	inline bool operator!=(_1b5a7465b_traitHash _other) { return !this->operator==(_other); }


};
struct _1b5a74a13_traitCast {
	jule::Ptr<_1d21494c8_Trait> _field_t1;
	jule::Ptr<_1d21494c8_Trait> _field_t2;
	

	_1b5a74a13_traitCast(void) = default;

	inline bool operator==(_1b5a74a13_traitCast _other) {
		return 
			this->_field_t1 == _other._field_t1 &&
			this->_field_t2 == _other._field_t2;
	}

	inline bool operator!=(_1b5a74a13_traitCast _other) { return !this->operator==(_other); }


};
inline jule::Str _1b5a83b21_Str(_1b5a83868_customType*);
inline jule::Bool _1b5a83e2e_Equal(jule::Ptr<_1b5a83868_customType>, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1b5a83868_customType {
	jule::Str _field_kind;
	

	_1b5a83868_customType(void) = default;

	inline bool operator==(_1b5a83868_customType _other) {
		return 
			this->_field_kind == _other._field_kind;
	}

	inline bool operator!=(_1b5a83868_customType _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b5a842d6_typeCoder> static__1b5a84825_new(jule::Ptr<_1b5a75a36_ObjectCoder>*);
inline jule::Str _1b5a84b33_toType(_1b5a842d6_typeCoder*, jule::Str);
inline jule::Str _1b5a84e41_prim(_1b5a842d6_typeCoder*, jule::Ptr<_1d21d9568_Prim>);
inline jule::Str _1b5a8524e_tuple(_1b5a842d6_typeCoder*, jule::Ptr<_1d21de2d7_Tuple>);
inline jule::Str _1b5a8555c_asSptr(_1b5a842d6_typeCoder*, jule::Str);
inline jule::Str _1b5a8586a_asPtr(_1b5a842d6_typeCoder*, jule::Str);
inline jule::Str _1b5a85b78_sptr(_1b5a842d6_typeCoder*, jule::Ptr<_1d21dccec_Sptr>);
inline jule::Str _1b5a85e86_ptr(_1b5a842d6_typeCoder*, jule::Ptr<_1d21e1361_Ptr>);
inline jule::Str _1b5a86294_enumDecl(_1b5a842d6_typeCoder*, jule::Ptr<_1d214bc5b_Enum>);
inline jule::Str _1b5a865a2_typeEnumDecl(_1b5a842d6_typeCoder*, jule::Ptr<_1d214d356_TypeEnum>);
inline jule::Str _1b5a868b0_asSlice(_1b5a842d6_typeCoder*, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Str _1b5a86bbd_slice(_1b5a842d6_typeCoder*, jule::Ptr<_1d21dd759_Slc>);
inline jule::Str _1b5a86ecb_mapType(_1b5a842d6_typeCoder*, jule::Ptr<_1d21ded10_Map>);
inline jule::Str _1b5a872d9_traitIdent(_1b5a842d6_typeCoder*, jule::Str);
inline jule::Str _1b5a875e7_traitDecl(_1b5a842d6_typeCoder*, jule::Ptr<_1d21494c8_Trait>);
inline jule::Str _1b5a87905_structure(_1b5a842d6_typeCoder*, jule::Ptr<_1d060ddbd_Struct>);
inline jule::Str _1b5a87c13_structureIns(_1b5a842d6_typeCoder*, jule::Ptr<_1d0611bd4_StructIns>);
inline jule::Str _1b5a88021_array(_1b5a842d6_typeCoder*, jule::Ptr<_1d21e0904_Arr>);
inline jule::Str _1b5a8863c_paramIns(_1b5a842d6_typeCoder*, jule::Ptr<_1d06260a0_ParamIns>*);
inline void _1b5a88c69_funcInsResult(_1b5a842d6_typeCoder*, jule::Str*, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Str _1b5a89077_anonFunc(_1b5a842d6_typeCoder*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Str _1b5a89385_func(_1b5a842d6_typeCoder*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Str _1b5a89693_kind(_1b5a842d6_typeCoder*, jule::Ptr<_1d21d1d46_TypeKind>);
struct _1b5a842d6_typeCoder {
	jule::Ptr<_1b5a75a36_ObjectCoder> _field_oc;
	jule::Ptr<_1b5a8bd9e_resultCoder> _field_rc;
	

	_1b5a842d6_typeCoder(void) = default;

	inline bool operator==(_1b5a842d6_typeCoder _other) {
		return 
			this->_field_oc == _other._field_oc &&
			this->_field_rc == _other._field_rc;
	}

	inline bool operator!=(_1b5a842d6_typeCoder _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1b5a8bd9e_resultCoder> static__1b5a8c3aa_new(jule::Ptr<_1b5a842d6_typeCoder>*);
inline void _1b5a8c6c9_ptr(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21e1361_Ptr>);
inline void _1b5a8c9e8_sptr(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21dccec_Sptr>);
inline void _1b5a8cd17_mapType(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21ded10_Map>);
inline void _1b5a8d136_slice(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21dd759_Slc>);
inline void _1b5a8d455_arr(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21e0904_Arr>);
inline void _1b5a8d774_func(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d0626e6e_FnIns>);
inline void _1b5a8da93_tup(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21de2d7_Tuple>);
inline void _1b5a8ddb2_codeMut(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _1b5a8e1d1_codeMut1(_1b5a8bd9e_resultCoder*, jule::Str*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Str _1b5a8e4ab_code(_1b5a8bd9e_resultCoder*, jule::Ptr<_1d21d1d46_TypeKind>*);
struct _1b5a8bd9e_resultCoder {
	jule::Ptr<_1b5a842d6_typeCoder> _field_tc;
	

	_1b5a8bd9e_resultCoder(void) = default;

	inline bool operator==(_1b5a8bd9e_resultCoder _other) {
		return 
			this->_field_tc == _other._field_tc;
	}

	inline bool operator!=(_1b5a8bd9e_resultCoder _other) { return !this->operator==(_other); }


};
inline jule::Str _1b84c6363_Name(_1b84c6077_Flag*);
inline jule::Str _1b84c6495_What(_1b84c6077_Flag*);
inline void _1b84c65c7_Reset(_1b84c6077_Flag*);
inline jule::I32 _1b84c6709_Short(_1b84c6077_Flag*);
struct _1b84c6077_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::I64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
	

	_1b84c6077_Flag(void) = default;

	inline bool operator==(_1b84c6077_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b84c6077_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b84c9597_Name(_1b84c9a09_Flag*);
inline jule::Str _1b84c9ce5_What(_1b84c9a09_Flag*);
inline void _1b84c9e27_Reset(_1b84c9a09_Flag*);
inline jule::I32 _1b84ca059_Short(_1b84c9a09_Flag*);
struct _1b84c9a09_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::U64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
	

	_1b84c9a09_Flag(void) = default;

	inline bool operator==(_1b84c9a09_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b84c9a09_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b84ccc4e_Name(_1b84cd1b1_Flag*);
inline jule::Str _1b84cd49c_What(_1b84cd1b1_Flag*);
inline void _1b84cd5ce_Reset(_1b84cd1b1_Flag*);
inline jule::I32 _1b84cd711_Short(_1b84cd1b1_Flag*);
struct _1b84cd1b1_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::F64 _field_default = 0;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
	

	_1b84cd1b1_Flag(void) = default;

	inline bool operator==(_1b84cd1b1_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b84cd1b1_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b84d144a_Name(_1b84d18ac_Flag*);
inline jule::Str _1b84d1b98_What(_1b84d18ac_Flag*);
inline void _1b84d1cca_Reset(_1b84d18ac_Flag*);
inline jule::I32 _1b84d1e0c_Short(_1b84d18ac_Flag*);
struct _1b84d18ac_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Bool _field_default = false;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
	

	_1b84d18ac_Flag(void) = default;

	inline bool operator==(_1b84d18ac_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b84d18ac_Flag _other) { return !this->operator==(_other); }


};inline jule::Str _1b84d4b02_Name(_1b84d5064_Flag*);
inline jule::Str _1b84d5350_What(_1b84d5064_Flag*);
inline void _1b84d5482_Reset(_1b84d5064_Flag*);
inline jule::I32 _1b84d55b4_Short(_1b84d5064_Flag*);
struct _1b84d5064_Flag {
	jule::Str _field_name;
	jule::I32 _field_short = 0;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
	

	_1b84d5064_Flag(void) = default;

	inline bool operator==(_1b84d5064_Flag _other) {
		return 
			this->_field_name == _other._field_name &&
			this->_field_short == _other._field_short &&
			this->_field_default == _other._field_default &&
			this->_field_what == _other._field_what &&
			this->_field_data == _other._field_data;
	}

	inline bool operator!=(_1b84d5064_Flag _other) { return !this->operator==(_other); }


};
inline jule::Ptr<_1d2a66642_FlagSet> static__1d2a6692d_New(void);
inline jule::Trait<_1d2a64b90_CommonFlag> _1d2a66db2_FindFlag(_1d2a66642_FlagSet*, jule::Str);
inline jule::Trait<_1d2a64b90_CommonFlag> _1d2a671c0_FindFlagShort(_1d2a66642_FlagSet*, jule::I32);
inline jule::Slice<jule::Trait<_1d2a64b90_CommonFlag>> _1d2a67434_Flags(_1d2a66642_FlagSet*);
inline jule::Exceptional<jule::Slice<jule::Str>> _1b5a922a0_Parse(_1d2a66642_FlagSet*, jule::Slice<jule::Str>);
inline void _1b5a92536_Reset(_1d2a66642_FlagSet*);
inline jule::Ptr<_1b84d5064_Flag> _1b854d286_addFlagCommon(_1d2a66642_FlagSet*, jule::Str, jule::I32, jule::Str);
inline jule::Ptr<_1b84d18ac_Flag> _1b85560c4_addFlagCommon(_1d2a66642_FlagSet*, jule::Str, jule::I32, jule::Str);
inline void _1b854b1b8_AddVar(_1d2a66642_FlagSet*, jule::Ptr<jule::Str>, jule::Str, jule::I32, jule::Str);
inline void _1b855406c_AddVar(_1d2a66642_FlagSet*, jule::Ptr<jule::Bool>, jule::Str, jule::I32, jule::Str);
struct _1d2a66642_FlagSet {
	jule::Slice<jule::Trait<_1d2a64b90_CommonFlag>> _field_flags;
	

	_1d2a66642_FlagSet(void) = default;


};
inline __jule_tuple_i64__jule_tuple_bool _1b84ec6db_parseInteger(_1b5a936d0_argParser*, jule::Str*, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>);
inline __jule_tuple_u64__jule_tuple_bool _1b8504c43_parseInteger(_1b5a936d0_argParser*, jule::Str*, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>);
inline jule::Str _1b5a93ed8_getData(_1b5a936d0_argParser*);
inline jule::VoidExceptional _1b5a9425d_processFlag(_1b5a936d0_argParser*, jule::Trait<_1d2a64b90_CommonFlag>*);
inline jule::VoidExceptional _1b5a944d3_singleDash(_1b5a936d0_argParser*, jule::Str*);
inline jule::VoidExceptional _1b5a94758_doubleDash(_1b5a936d0_argParser*, jule::Str*);
inline jule::VoidExceptional _1b5a94934_tryArg(_1b5a936d0_argParser*);
inline jule::VoidExceptional _1b5a94b10_parse(_1b5a936d0_argParser*);
struct _1b5a936d0_argParser {
	_1d2a66642_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I64 _field_i = 0;
	

	_1b5a936d0_argParser(void) = default;


};
inline jule::Ptr<_1b5a75a36_ObjectCoder> static__1b5a75e54_New(jule::Ptr<_1d2621e34_IR>*, _1b5a74194_SerializationInfo);
inline void _1b5a761c9_write(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Str);
inline void _1b5a763a5_addIndent(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a76581_doneIndent(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7675c_indent(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline jule::I64 _1b5a76a6a_findAnyType(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::I64 _1b5a76d78_pushAnyType(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1b5a770ed_pushResultIns(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1b5a77373_pushResult(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d06242bd_Fn>*);
inline jule::I64 _1b5a7772a_findTypeOffsetS(_1b5a75a36_ObjectCoder*, jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d0611bd4_StructIns>);
inline jule::I64 _1b5a77ad2_findTypeOffset(_1b5a75a36_ObjectCoder*, jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1b5a77e01_pushAndWriteMaskMapper(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d21494c8_Trait>);
inline void _1b5a78176_locInfo(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_22be1281d_Token>*);
inline void _1b5a78352_head(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7852d_links(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a787a3_prepareStructure(_1b5a75a36_ObjectCoder*, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1b5a7897e_prepareStructures(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a78c04_iterPackages(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>);
inline void _1b5a78dd0_buildTraitMap(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a790ab_traitDecls(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a79331_structurePlainDecl(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1b5a7950c_structurePlainDecls(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a79782_fieldDecl(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d06111de_FieldIns>*);
inline void _1b5a79a07_structureDestructor(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a79c9e_structureDeriveDefsDecls(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a7a0ce_structureOperatorEq(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Str*, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a7a3ed_structureOperatorNotEq(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Str*, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a7a7b6_structureOperator(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Str*, jule::Ptr<_1d0626e6e_FnIns>*, jule::Str);
inline void _1b5a7aa3b_structureOperators(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a7acb1_structureInsDecl(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a7b036_structureDecl(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1b5a7b212_structureDecls(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7b487_paramsDecls(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>*);
inline void _1b5a7b7a6_funcHead(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Bool);
inline void _1b5a7bac5_funcDeclIns(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0626e6e_FnIns>*, jule::Bool);
inline void _1b5a7bde4_funcDecl(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d06242bd_Fn>*, jule::Bool);
inline void _1b5a7c2ac_funcDeclTrait(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21494c8_Trait>*, jule::Ptr<_1d06242bd_Fn>*, jule::Bool);
inline void _1b5a7c488_funcDecls(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7c7a7_traitDataTypeMethods(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21494c8_Trait>*, jule::Ptr<_1d21494c8_Trait>*);
inline void _1b5a7c983_traitDataTypes(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7cc08_paramIns(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d06260a0_ParamIns>*);
inline void _1b5a7ce7d_paramsIns(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>*);
inline void _1b5a7d29c_varInitExpr(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21bb65a_Var>*, jule::Fn<void(void)>);
inline void _1b5a7d522_var(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21bb65a_Var>);
inline void _1b5a7d797_funcIns(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1b5a7da1c_func(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d06242bd_Fn>*);
inline void _1b5a7dd3b_funcTrait(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1b5a7465b_traitHash>*, jule::Ptr<_1d06242bd_Fn>*);
inline void _1b5a7e15a_traitWrapper(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d06242bd_Fn>*, jule::Ptr<_1b5a7465b_traitHash>*);
inline void _1b5a7e336_traitWrappers(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7e655_traitDataMethods(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d21494c8_Trait>*, jule::Ptr<_1b5a7465b_traitHash>*);
inline void _1b5a7e974_traitData(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1b5a7465b_traitHash>*, jule::Ptr<_1d21494c8_Trait>*);
inline void _1b5a7eb50_traitDatas(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a7ed2b_globals(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a80007_decls(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a8027c_structureMethods(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a80502_structureDeriveDefs(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a80777_structureOstream(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a809ec_structureIns(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d0611bd4_StructIns>*);
inline void _1b5a80c72_structure(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1b5a80e4d_structures(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a81129_funcs(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a8139e_pushInit(jule::Ptr<_1b5a75a36_ObjectCoder>, jule::Ptr<_1d2195bb7_Package>*);
inline void _1b5a8157a_initCaller(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a81756_end(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a81932_serializeHead(jule::Ptr<_1b5a75a36_ObjectCoder>);
inline void _1b5a81b0d_Serialize(jule::Ptr<_1b5a75a36_ObjectCoder>);
struct _1b5a75a36_ObjectCoder {
	jule::Str _field_Obj;
	jule::Slice<jule::Str> _field_resultDecls;
	jule::Str _field_anyObj;
	jule::Ptr<_1d2621e34_IR> _field_ir;
	_1b5a74194_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1b5a7465b_traitHash>> _field_tmap;
	jule::Str _field_indentBuffer;
	jule::Map<jule::Str,jule::Bool> _field_resultMap;
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _field_anyTypeMap;
	jule::Slice<_1b5a74a13_traitCast> _field_traitCastMap;
	jule::Ptr<_1b5703351_exprCoder> _field_ec;
	jule::Ptr<_1b56e9e08_scopeCoder> _field_sc;
	jule::Ptr<_1b5a842d6_typeCoder> _field_tc;
	jule::Ptr<_1b5712ae1_deriveCoder> _field_dc;
	jule::I64 _field_headPos = 0;
	jule::I64 _field_declPos = 0;
	

	_1b5a75a36_ObjectCoder(void) = default;


};
inline jule::Ptr<_1d075ea35_ObjectDeadCode> static__1d07918ad_new(jule::Ptr<_1d2621e34_IR>*);
inline jule::Bool _1b66cc78b_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Bool _1b66d23b7_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Bool _1b66d939c_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d0611bd4_StructIns>*);
inline jule::Bool _1b66e01d8_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d21bb65a_Var>*);
inline void _1b66ccadd_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d21494c8_Trait>);
inline void _1b66d2e12_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d0626e6e_FnIns>);
inline void _1b66d8e29_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d0611bd4_StructIns>);
inline void _1b66e053a_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d21bb65a_Var>);
inline void _1d07921b6_setReferencesAsLive(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d0629dc8_ReferenceStack>*);
inline void _1d079243b_inits(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d07926b1_collectLivePackage(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d079288c_collectLive(jule::Ptr<_1d075ea35_ObjectDeadCode>);
inline void _1d0792b12_removeDeadGlobals(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d21bb65a_Var>>*);
inline void _1d0792d87_removeDeadFns(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d06242bd_Fn>>*);
inline void _1d079310c_removeDeadStructs(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d060ddbd_Struct>>*);
inline void _1d0793382_removeDeadTraits(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Slice<jule::Ptr<_1d21494c8_Trait>>*);
inline void _1d0793607_removeDeadsFile(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d040428a_SymbolTable>*);
inline void _1d079387c_removeDeadsPackage(jule::Ptr<_1d075ea35_ObjectDeadCode>, jule::Ptr<_1d2195bb7_Package>*);
inline void _1d0793a58_removeDeads(jule::Ptr<_1d075ea35_ObjectDeadCode>);
inline void _1d0793c34_elimanate(jule::Ptr<_1d075ea35_ObjectDeadCode>);
struct _1d075ea35_ObjectDeadCode {
	_1d075e66c_liveTable _field_live;
	jule::Ptr<_1d2621e34_IR> _field_ir;
	

	_1d075ea35_ObjectDeadCode(void) = default;


};
inline __jule_tuple_x_1d2621e34_IR__jule_tuple_s_22ba3c6bd_Log static__1d26223b8_Build(jule::Str, jule::I64);
inline void _1d2622819_appendStructs(_1d2621e34_IR*, jule::Ptr<_1d2195bb7_Package>*, jule::Slice<jule::Ptr<_1d060ddbd_Struct>>*);
inline jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _1d2622a7d_GetAllStructures(_1d2621e34_IR*);
inline void _1d2622d9c_appendGlobals(_1d2621e34_IR*, jule::Ptr<_1d2195bb7_Package>*, jule::Slice<jule::Ptr<_1d21bb65a_Var>>*);
inline jule::Slice<jule::Ptr<_1d21bb65a_Var>> _1d2623111_GetAllGlobals(_1d2621e34_IR*);
inline void _1d26232dc_Order(_1d2621e34_IR*);
struct _1d2621e34_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1d2195bb7_Package> _field_Main;
	jule::Slice<jule::Ptr<_1d219307c_ImportInfo>> _field_Used;
	_1d2624475_OrderedDefines _field_Ordered;
	

	_1d2621e34_IR(void) = default;


};
inline jule::Str _1d061208b_Str(_1d0611bd4_StructIns*);
inline jule::Bool _1d0612399_Equal(jule::Ptr<_1d0611bd4_StructIns>, jule::Ptr<_1d21d1d46_TypeKind>);
inline jule::Bool _1d06127c8_Same(_1d0611bd4_StructIns*, jule::Ptr<_1d0611bd4_StructIns>);
inline jule::Ptr<_1d06242bd_Fn> _1d0612b80_FindMethod(_1d0611bd4_StructIns*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06111de_FieldIns> _1d0612e8d_FindField(_1d0611bd4_StructIns*, jule::Str);
inline jule::Ptr<_1d21bb65a_Var> _1d061329b_FindStatic(_1d0611bd4_StructIns*, jule::Str);
struct _1d0611bd4_StructIns {
	jule::Bool _field_Checked = false;
	jule::Ptr<_1d060ddbd_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1d21d05b4_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1d06111de_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1d06242bd_Fn>> _field_Methods;
	jule::Bool _field_Mutable = false;
	jule::Bool _field_Comparable = false;
	jule::Ptr<_1d0629dc8_ReferenceStack> _field_Refers;
	_1d060d0a9_Operators _field_Operators;
	

	_1d0611bd4_StructIns(void) = default;


};
inline jule::Ptr<_22bac9925_Cmd> static__22bac9d76_New(jule::Str);
inline jule::VoidExceptional _22baca052_Spawn(_22bac9925_Cmd*);
inline jule::VoidExceptional _22baca22d_Kill(_22bac9925_Cmd*);
inline jule::Exceptional<jule::I64> _22baca492_Wait(_22bac9925_Cmd*);
inline jule::VoidExceptional _22bb1e195_spawn(_22bac9925_Cmd*);
inline jule::VoidExceptional _22bb1e371_kill(_22bac9925_Cmd*);
inline jule::Exceptional<jule::I64> _22bb1e5d5_wait(_22bac9925_Cmd*);
struct _22bac9925_Cmd {
	_22bb1d529_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
	

	_22bac9925_Cmd(void) = default;


};
inline void _22a83d459_Free(void*);
inline jule::Str _22a867d13_BytePtrToStr(jule::U8*);
inline jule::I64 _2299ab3ca_GetLastErrno(void);
inline jule::I64 _22a87674a_Fcntl(jule::I64, jule::I64, jule::I64);
inline jule::I64 _22a876a8b_Stat(jule::U8*, struct stat*);
inline jule::I64 _22a876e76_Open(jule::U8*, jule::I64, jule::I64);
inline jule::U8* _22a8772b7_Getcwd(jule::U8*, jule::U64);
inline DIR* _22a877790_Opendir(jule::U8*);
inline struct dirent* _22a87c8a5_Readdir(DIR*);
inline jule::I64 _22a87cb3b_Closedir(DIR*);
inline jule::I64 _22a87d4bb_Mkdir(jule::U8*, jule::I64);
inline jule::I64 _22a87d763_Rmdir(jule::U8*);
inline jule::I64 _22a87da0a_Unlink(jule::U8*);
inline jule::I64 _22a89897b_Seek(jule::I64, jule::I64, jule::I64);
inline jule::I64 _22a898d66_Read(jule::I64, void*, jule::U64);
inline jule::I64 _22a8991da_Close(jule::I64);
inline jule::I64 _22a8995c5_Write(jule::I64, void*, jule::U64);
inline void _22a8997d4_Exit(jule::I64);
inline jule::Slice<jule::U8> _22a8b6c85_Stobs(jule::Str*);
inline void _22a8b7439_PushToStrBuffer(jule::Str*, jule::Slice<jule::U8>);
inline jule::I64 _22a968661_getLastOsError(void);
inline jule::Slice<jule::Str> _22a969145_Args(void);
inline jule::Exceptional<jule::Str> _22a9695b8_WorkingDir(void);
inline jule::Exceptional<jule::Str> _22a96a4dc_getwd(void);
inline jule::Bool _22b817c7e_IsLetter(jule::I32);
inline jule::Bool _22b880753_is16(jule::Slice<_22b87db91_Range16>, jule::U16);
inline jule::Bool _22b880a94_is32(jule::Slice<_22b87e114_Range32>, jule::U32);
inline jule::Bool _22b881336_isExcludingLatin(jule::Ptr<_22b87e587_RangeTable>, jule::I32);
inline jule::Bool _22b8815cd_IsUpper(jule::I32);
inline __jule_tuple_i32__jule_tuple_int _22b96377b_DecodeRune(jule::Slice<jule::U8>);
inline __jule_tuple_i32__jule_tuple_int _22b963a9a_DecodeRuneStr(jule::Str);
inline __jule_tuple_i32__jule_tuple_int _22b963d42_DecodeLastRune(jule::Slice<jule::U8>);
inline jule::Slice<jule::U8> _22b964ae0_AppendRune(jule::Slice<jule::U8>, jule::I32);
inline jule::Slice<jule::U8> _22b964e31_appendRuneNonASCII(jule::Slice<jule::U8>, jule::I32);
inline jule::I64 _22b965470_RuneCountStr(jule::Str);
inline jule::Bool _22b965717_RuneStart(jule::U8);
inline jule::I64 _22b9873e8_FindByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _22b999718_FindLastByte(jule::Slice<jule::U8>, jule::U8);
inline jule::I64 _22b9999d2_FindByteStr(jule::Str*, jule::U8);
inline jule::I64 _22b999d23_FindLastByteStr(jule::Str*, jule::U8);
inline jule::Str _22b99a1db_Repeat(jule::Str, jule::I64);
inline jule::Bool _22b99a61a_hasPrefix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _22b99a95b_HasPrefix(jule::Str, jule::Str);
inline jule::Bool _22b99adbd_hasSuffix(jule::Str*, jule::Str*, jule::I64);
inline jule::Bool _22b99b1cb_HasSuffix(jule::Str, jule::Str);
inline jule::I64 _22b99b5b6_FindAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _22b99be02_FindLastAt(jule::Str, jule::Str, jule::I64);
inline jule::I64 _22b99c243_FindLast(jule::Str, jule::Str);
inline jule::I64 _22b99d4db_findRune(jule::Slice<jule::U8>*, jule::I32);
inline jule::I64 _22b99dd27_FindLastByte(jule::Str, jule::U8);
inline jule::I64 _22b99eb3b_FindAny(jule::Str, jule::Str);
inline jule::Slice<jule::Str> _22b9a0367_Split(jule::Str, jule::Str, jule::I64);
inline jule::Bool _22b9a06a8_Contains(jule::Str, jule::Str);
inline jule::Bool _22b9a117b_ContainsAny(jule::Str, jule::Str);
inline jule::I64 _22b9a14bc_Count(jule::Str, jule::Str);
inline jule::Str _22b9a1951_Replace(jule::Str, jule::Str, jule::Str, jule::I64);
inline void _22b99d9b4_trimLeft(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _22b9a2a0c_TrimLeft(jule::Str, jule::Str);
inline void _22b9a2cb5_trimRight(jule::Slice<jule::U8>*, jule::Slice<jule::U8>*);
inline jule::Str _22b9a3447_Trim(jule::Str, jule::Str);
inline jule::Str _22b9a3788_Join(jule::Slice<jule::Str>, jule::Str);
inline jule::Str _22b9a4d2d_Clean(jule::Str);
inline jule::Str _22b9a53b1_FromSlash(jule::Str);
inline jule::Str _22b9a56d0_Join(jule::Slice<jule::Str>);
inline jule::Str _22b9a5977_Ext(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22b9a5c1e_Abs(jule::Str);
inline jule::Str _22b9a5eb6_Base(jule::Str);
inline jule::Str _22b9a633a_Dir(jule::Str);
inline jule::Str _22b9a65d2_VolumeName(jule::Str);
inline jule::Bool _22b9a7391_IsPathSep(jule::U8);
inline jule::Bool _22b9a767c_IsAbs(jule::Str);
inline jule::I64 _22b9a7924_volumeNameLen(jule::Str);
inline __jule_tuple_str__jule_tuple_bool _22b9a7c43_abs(jule::Str);
inline jule::Str _22b9a7eda_join(jule::Slice<jule::Str>);
inline jule::I64 _22a8a9591_getLastFsError(void);
inline __jule_tuple_int__jule_tuple_bool _22bacb3d8_AtoiBp(jule::U8*, jule::I64);
inline jule::Str _22bb1a108_Itoa(jule::I64);
inline jule::Str _22bb1a3e4_Utoa(jule::U64);
inline jule::Slice<char*> _22bb1d8c0_strSliceToCstrSlice(jule::Slice<jule::Str>*);
inline jule::I64 _22bb1dc11_execvp(jule::Str*, jule::Slice<jule::Str>*);
inline jule::VoidExceptional _22bb1de20_setenv(jule::Slice<jule::Str>*);
inline jule::I64 _22bb1eccd_processErrorFromCode(jule::I64);
inline jule::I64 _22bb20020_getLastProcessError(void);
inline void _22bb207c3_Exit(jule::I64);
inline jule::Str _22bb209c1_Executable(void);
inline jule::Bool _22ba2eb99_IsStdHeaderPath(jule::Str);
inline jule::Bool _22ba2ee52_IsValidHeaderExt(jule::Str);
inline jule::Bool _22ba301e9_IsValidCppExt(jule::Str);
inline jule::Str _22ba3cb0d_Logf(jule::Str, jule::Slice<jule::Any>);
inline jule::Str _22ba3cde9_argToStr(jule::Any);
inline jule::I64 _22ba3d191_findNextFmt(jule::Str);
inline jule::Str _22ba3d526_applyFmt(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22ba3e59e_IsTopDirective(jule::Str);
inline jule::Bool _22ba409ce_IsWindows(jule::Str);
inline jule::Bool _22ba40c87_IsDarwin(jule::Str);
inline jule::Bool _22ba4102e_IsLinux(jule::Str);
inline jule::Bool _22ba4134d_IsI386(jule::Str);
inline jule::Bool _22ba415e5_IsAmd64(jule::Str);
inline jule::Bool _22ba4188c_IsArm64(jule::Str);
inline jule::Bool _22ba41b34_IsUnix(jule::Str);
inline jule::Bool _22ba41ea8_Is32Bit(jule::Str);
inline jule::Bool _22ba42250_Is64Bit(jule::Str);
inline void _22bb21c58_init(void);
inline jule::Bool _22be13027_IsUnaryOp(jule::Str);
inline jule::Bool _22be13313_IsBinOp(jule::Str);
inline jule::Bool _22be138c9_IsStr(jule::Str);
inline jule::Bool _22be13b71_IsRawStr(jule::Str);
inline jule::Bool _22be13e18_IsRune(jule::Str);
inline jule::Bool _22be14534_IsBool(jule::Str);
inline jule::Bool _22be147cb_IsFloat(jule::Str);
inline jule::Bool _22be14a73_IsNum(jule::Str);
inline jule::Bool _22be150b2_IsIgnoreIdent(jule::Str);
inline jule::Bool _22be15359_IsAnonIdent(jule::Str);
inline jule::Bool _22be15898_IsSpace(jule::I32);
inline jule::Bool _22be15ce9_IsLetter(jule::I32);
inline jule::Bool _22be16338_IsDecimal(jule::U8);
inline jule::Bool _22be165d0_IsBinary(jule::U8);
inline jule::Bool _22be16877_IsOctal(jule::U8);
inline jule::Bool _22be16b1e_IsHex(jule::U8);
inline jule::Bool _22be16db6_IsAssign(jule::U64);
inline jule::Bool _22be1715d_IsPostfixOp(jule::Str);
inline jule::Bool _22be17405_IsAssignOp(jule::Str);
inline jule::Ptr<_22be17ba8_File> _22be18e62_NewFileSet(jule::Str);
inline _22ba3c6bd_Log _22be1a705_makeErr(jule::I64, jule::I64, jule::Ptr<_22be17ba8_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _22be1aa8a_bytesHasPrefix(jule::Slice<jule::U8>*, jule::Str);
inline jule::Str _22be1adcb_floatFmtE(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1b261_floatFmtP(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1b5a2_floatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1b8e3_floatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1bc34_floatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1c185_floatNum(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1c42c_commonNum(jule::Slice<jule::U8>*);
inline jule::Str _22be1c6c4_binaryNum(jule::Slice<jule::U8>*);
inline jule::Bool _22be1ca15_isFloatFmtE(jule::U8, jule::I64);
inline jule::Bool _22be1cd56_isFloatFmtP(jule::U8, jule::I64);
inline jule::Bool _22be1d197_isFloatFmtDotnp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _22be1d4d8_isFloatFmtDotp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Bool _22be1d829_isFloatFmtDotfp(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1dc7a_octalNum(jule::Slice<jule::U8>*);
inline jule::Str _22be1e022_hexNum(jule::Slice<jule::U8>*);
inline jule::Str _22be1e363_hexEscape(jule::Slice<jule::U8>*, jule::I64);
inline jule::Str _22be1e60a_bigUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _22be1e8c4_littleUnicodePointEscape(jule::Slice<jule::U8>*);
inline jule::Str _22be1ea7d_hexByteEscape(jule::Slice<jule::U8>*);
inline jule::Str _22be1ed14_byteEscape(jule::Slice<jule::U8>*);
inline jule::Slice<_22ba3c6bd_Log> _22be2480d_Lex(jule::Ptr<_22be17ba8_File>, jule::I64);
inline jule::I64 _1e7679a37_LeadingZeros64(jule::U64);
inline jule::I64 _1e767a96c_TrailingZeros(jule::U64);
inline jule::I64 _1e767b363_TrailingZeros32(jule::U32);
inline jule::I64 _1e767b60a_TrailingZeros64(jule::U64);
inline jule::I64 _1e7681c1a_Len32(jule::U32);
inline jule::I64 _1e7681eb2_Len64(jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1e7682b72_Add64(jule::U64, jule::U64, jule::U64);
inline __jule_tuple_u64__jule_tuple_u64 _1e7684305_Mul64(jule::U64, jule::U64);
inline jule::U32 _211614d3d_F32Bits(jule::F32);
inline jule::F32 _211615129_F32FromBits(jule::U32);
inline jule::U64 _2116153c1_F64Bits(jule::F64);
inline jule::F64 _2116156e0_F64FromBits(jule::U64);
inline __jule_tuple_f64__jule_tuple_int _211617bcb_Frexp(jule::F64);
inline jule::F64 _1e768b2da_NaN(void);
inline jule::Bool _1e768b5c6_IsNaN(jule::F64);
inline jule::F64 _1e768b86d_Inf(jule::I64);
inline jule::Bool _1e768bb7b_IsInf(jule::F64, jule::I64);
inline __jule_tuple_f64__jule_tuple_int _1e768be23_normalize(jule::F64);
inline jule::F64 _1e768d809_Log(jule::F64);
inline jule::F64 _1e768e19a_Abs(jule::F64);
inline __jule_tuple_f64__jule_tuple_f64 _1e7695adb_Modf(jule::F64);
inline jule::F64 _1e76963a0_Log2(jule::F64);
inline jule::Str _1e76c0594_FmtFloat(jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e76c0b16_genericFtoa(jule::Slice<jule::U8>, jule::F64, jule::U8, jule::I64, jule::I64);
inline jule::Slice<jule::U8> _1e76c1287_bigFtoa(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e76be42d_floatInfo*);
inline jule::Slice<jule::U8> _1e76c18d6_fmtDigits(jule::Slice<jule::U8>, jule::Bool, jule::Bool, _1e76c0055_decimalSlice, jule::I64, jule::U8);
inline void _1e76c1cd2_roundShortest(_1e76d1e46_decimal*, jule::U64, jule::I64, _1e76be42d_floatInfo*);
inline jule::Slice<jule::U8> _1e76c2310_fmtE(jule::Slice<jule::U8>, jule::Bool, _1e76c0055_decimalSlice, jule::I64, jule::U8);
inline jule::Slice<jule::U8> _1e76c2794_fmtF(jule::Slice<jule::U8>, jule::Bool, _1e76c0055_decimalSlice, jule::I64);
inline jule::Slice<jule::U8> _1e76c2d9e_fmtB(jule::Slice<jule::U8>, jule::Bool, jule::U64, jule::I64, _1e76be42d_floatInfo*);
inline jule::Slice<jule::U8> _1e76c3520_fmtX(jule::Slice<jule::U8>, jule::I64, jule::U8, jule::Bool, jule::U64, jule::I64, _1e76be42d_floatInfo*);
inline jule::I64 _1e76c3861_min(jule::I64, jule::I64);
inline jule::I64 _1e76c3ba2_max(jule::I64, jule::I64);
inline jule::U8 _1e76c47b8_lower(jule::U8);
inline __jule_tuple_u64__jule_tuple__21113c954_ConvError _1e76c4be7_parseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::U64> _1e76c50d2_ParseUint(jule::Str, jule::I64, jule::I64);
inline jule::Exceptional<jule::I64> _1e76c5544_ParseInt(jule::Str, jule::I64, jule::I64);
inline __jule_tuple_f64__jule_tuple_bool _1e76c615a_eiselLemire64(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1e76c6556_eiselLemire32(jule::U64, jule::I64, jule::Bool);
inline jule::I64 _1e76c826c_commonPrefixLenIgnoreCase(jule::Str, jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1e76c8569_special(jule::Str);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1e76c8811_readFloat(jule::Str);
inline __jule_tuple_f64__jule_tuple_bool _1e76ca291_atof64exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f32__jule_tuple_bool _1e76ca67b_atof32exact(jule::U64, jule::I64, jule::Bool);
inline __jule_tuple_f64__jule_tuple__21113c954_ConvError _1e76cac53_atofHex(jule::Str, _1e76be42d_floatInfo*, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__21113c954_ConvError _1e76cb10a_atof32(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError _1e76cb3a2_atof64(jule::Str);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError _1e76cb6e3_parseFloatPrefix(jule::Str, jule::I64);
inline jule::Exceptional<jule::F64> _1e76cba34_ParseFloat(jule::Str, jule::I64);
inline void _1e76cc2a4_ryuFtoaFixed32(_1e76c0055_decimalSlice*, jule::U32, jule::I64, jule::I64);
inline void _1e76cc6e4_ryuFtoaFixed64(_1e76c0055_decimalSlice*, jule::U64, jule::I64, jule::I64);
inline void _1e76cceca_formatDecimal(_1e76c0055_decimalSlice*, jule::U64, jule::Bool, jule::Bool, jule::I64);
inline void _1e76cd44d_ryuFtoaShortest(_1e76c0055_decimalSlice*, jule::U64, jule::I64, _1e76be42d_floatInfo*);
inline jule::I64 _1e76cd6e5_mulByLog2Log10(jule::I64);
inline jule::I64 _1e76cd98c_mulByLog10Log2(jule::I64);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1e76cdd77_computeBounds(jule::U64, jule::I64, _1e76be42d_floatInfo*);
inline void _1e76ce41b_ryuDigits(_1e76c0055_decimalSlice*, jule::U64, jule::U64, jule::U64, jule::Bool, jule::Bool);
inline void _1e76cea04_ryuDigits32(_1e76c0055_decimalSlice*, jule::U32, jule::U32, jule::U32, jule::Bool, jule::Bool, jule::I64);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1e76cedde_mult64bitPow10(jule::U32, jule::I64, jule::I64);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1e76d02c9_mult128bitPow10(jule::U64, jule::I64, jule::I64);
inline jule::Bool _1e76d061a_divisibleByPow5(jule::U64, jule::I64);
inline __jule_tuple_u32__jule_tuple_u32 _1e76d08b2_divmod1e9(jule::U64);
inline void _1e76d362e_trim(_1e76d1e46_decimal*);
inline void _1e76d38d7_rightShift(_1e76d1e46_decimal*, jule::U64);
inline jule::Bool _1e76d3d49_prefixIsLessThan(jule::Array<jule::U8,800>, jule::I64, jule::Str);
inline void _1e76d40be_leftShift(_1e76d1e46_decimal*, jule::U64);
inline jule::Bool _1e76d4410_shouldRoundUp(_1e76d1e46_decimal*, jule::I64);
inline jule::Str _1e76d5a2c_FmtUint(jule::U64, jule::I64);
inline jule::Str _1e76d5db2_FmtInt(jule::I64, jule::I64);
inline jule::Str _1e76d6159_Itoa(jule::I64);
inline jule::Str _1e76d6478_small(jule::I64);
inline jule::Bool _1e76d6720_isPowerOfTwo(jule::I64);
inline __jule_tuple_su8__jule_tuple_str _1e76d6c4d_fmtBits(jule::Slice<jule::U8>, jule::U64, jule::I64, jule::Bool, jule::Bool);
inline jule::Str _1e76d815b_RealKindOf(jule::Str);
inline jule::I64 _1e76d8403_BitsizeOf(jule::Str);
inline jule::Str _1e76d8722_IntFromBits(jule::I64);
inline jule::Str _1e76d89b9_UintFromBits(jule::I64);
inline jule::Str _1e76d8c61_FloatFromBits(jule::I64);
inline jule::Bool _1e76d9811_CheckBitFloat(jule::Str, jule::I64);
inline jule::I64 _1e76d9aa8_BitsizeOfFloat(jule::F64);
inline jule::I64 _1e76d9d50_BitsizeOfInt(jule::I64);
inline jule::I64 _1e76da0e7_BitsizeOfUint(jule::U64);
inline void _1e76da25c_UpdateTarget(void);
inline void _1e76da3c2_init(void);
inline jule::I64 _1e76de20b_MinI(jule::Str);
inline jule::I64 _1e76de4e7_MaxI(jule::Str);
inline jule::U64 _1e76de78e_MaxU(jule::Str);
inline jule::F64 _1e76de99d_Min(jule::Str);
inline jule::F64 _1e76dec45_Max(jule::Str);
inline jule::Bool _1e76e0196_IsI8Compatible(jule::Str);
inline jule::Bool _1e76e0482_IsI16Compatible(jule::Str);
inline jule::Bool _1e76e0729_IsI32Compatible(jule::Str);
inline jule::Bool _1e76e0a48_IsI64Compatible(jule::Str);
inline jule::Bool _1e76e0ce0_IsU8Compatible(jule::Str);
inline jule::Bool _1e76e1087_IsU16Compatible(jule::Str);
inline jule::Bool _1e76e132e_IsU32Compatible(jule::Str);
inline jule::Bool _1e76e16a3_IsU64Compatible(jule::Str);
inline jule::Bool _1e76e194a_IsF32Compatible(jule::Str);
inline jule::Bool _1e76e1be2_IsF64Compatible(jule::Str);
inline jule::Bool _1e76e2033_TypesAreCompatible(jule::Str, jule::Str);
inline jule::Bool _1e76e22ca_IsI16Greater(jule::Str);
inline jule::Bool _1e76e2572_IsI32Greater(jule::Str);
inline jule::Bool _1e76e2819_IsI64Greater(jule::Str);
inline jule::Bool _1e76e2ab1_IsU16Greater(jule::Str);
inline jule::Bool _1e76e3012_IsU32Greater(jule::Str);
inline jule::Bool _1e76e32a9_IsU64Greater(jule::Str);
inline jule::Bool _1e76e3551_IsF32Greater(jule::Str);
inline jule::Bool _1e76e37e8_IsF64Greater(jule::Str);
inline jule::Bool _1e76e3b39_IsGreater(jule::Str, jule::Str);
inline jule::Bool _1e76e4b6d_IsSigInt(jule::Str);
inline jule::Bool _1e76e4e59_IsUnsigInt(jule::Str);
inline jule::Bool _1e76e5201_IsInt(jule::Str);
inline jule::Bool _1e76e5520_IsFloat(jule::Str);
inline jule::Bool _1e76e57b7_IsNum(jule::Str);
inline jule::Bool _1e76e5a5e_IsSigNum(jule::Str);
inline void _1e76ee4e6_lshiftUnsig(_1e76e5cc3_Const*, _1e76e5cc3_Const*);
inline void _1e76ee7e3_rshiftUnsig(_1e76e5cc3_Const*, _1e76e5cc3_Const*);
inline jule::Bool _1d03c833b_IsAscii(jule::I32);
inline jule::I32 _1d03e0001_ToRune(jule::Slice<jule::U8>);
inline jule::Str _1d03e0298_ToRawStr(jule::Slice<jule::U8>);
inline jule::Str _1d03e05b7_ToStr(jule::Slice<jule::U8>);
inline __jule_tuple_u8__jule_tuple_bool _1d03e085e_tryBtoaCommonEsq(jule::Slice<jule::U8>);
inline jule::I32 _1d03e0b6c_runeFromEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::Slice<jule::U8> _1d03e0ead_strEsqSeq(jule::Slice<jule::U8>, jule::I64*);
inline jule::I64 _1d064cb87_findFormatPrefix(jule::Slice<jule::U8>*, jule::I64*);
inline jule::Slice<jule::U8> _1d064d01c_getFormatRange(jule::I64*, jule::Slice<jule::U8>*);
inline void _1d064d2c5_FmtByDefault(jule::Str*, jule::Any*);
inline void _1d064d69e_applyFmtByDefault(jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline void _1d064da9a_applyFmt(jule::Slice<jule::U8>*, jule::Str*, jule::I64*, jule::Slice<jule::Any>);
inline jule::Str _1d064dda8_Format(jule::Str*, jule::Slice<jule::Any>);
inline jule::Str _1d0650cab_Format(jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d0629081_parameterUsesGenerics(jule::Ptr<_1d06260a0_ParamIns>*, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>*);
inline jule::Ptr<_1d21d8be9_TypeSymbol> _1d062b55b_buildType(jule::Ptr<_1d05de563_TypeDecl>);
inline jule::Ptr<_1d0409d1d_Value> _1d062b847_buildExpr(jule::Ptr<_1d05e36dd_Expr>);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d062bade_buildTypeAlias(jule::Ptr<_1d06054d0_TypeAliasDecl>);
inline jule::Ptr<_1d060b2e9_Field> _1d2143538_buildField(jule::Ptr<_1d06089ab_FieldDecl>);
inline jule::Slice<jule::Ptr<_1d060b2e9_Field>> _1d21437d0_buildFields(jule::Slice<jule::Ptr<_1d06089ab_FieldDecl>>*);
inline jule::Ptr<_1d060ddbd_Struct> _1d2143a77_buildStruct(jule::Ptr<_1d0609308_StructDecl>);
inline jule::Ptr<_1d0622981_Param> _1d2143d1e_buildParam(jule::Ptr<_1d05ee870_ParamDecl>);
inline jule::Slice<jule::Ptr<_1d0622981_Param>> _1d21441d7_buildParams(jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>>*);
inline jule::Ptr<_1d0622277_RetType> _1d214447e_buildRetType(jule::Ptr<_1d05e22d0_RetTypeDecl>);
inline jule::Ptr<_1d06242bd_Fn> _1d2144726_buildFn(jule::Ptr<_1d0600b90_FnDecl>);
inline jule::Slice<jule::Ptr<_1d06242bd_Fn>> _1d21449bd_buildMethods(jule::Slice<jule::Ptr<_1d0600b90_FnDecl>>*);
inline jule::Slice<jule::Ptr<_1d21d8be9_TypeSymbol>> _1d2144c65_buildTraitInherits(jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>*);
inline jule::Ptr<_1d21494c8_Trait> _1d214500c_buildTrait(jule::Ptr<_1d06099ce_TraitDecl>);
inline jule::Ptr<_1d214b266_EnumItem> _1d21452a4_buildEnumItem(jule::Ptr<_1d0606d3e_EnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d214b266_EnumItem>> _1d214554b_buildEnumItems(jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>>*);
inline jule::Ptr<_1d214bc5b_Enum> _1d2145a24_buildEnum(jule::Ptr<_1d0607867_EnumDecl>);
inline jule::Ptr<_1d214cc90_TypeEnumItem> _1d2145cbb_buildTypeEnumItem(jule::Ptr<_1d060813c_TypeEnumItemDecl>);
inline jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>> _1d2146063_buildTypeEnumItems(jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>>*);
inline jule::Ptr<_1d214d356_TypeEnum> _1d214630a_buildTypeEnum(jule::Ptr<_1d0608747_TypeEnumDecl>);
inline jule::Ptr<_1d21bb65a_Var> _1d21465a2_buildVar(jule::Ptr<_1d0601b6e_VarDecl>);
inline jule::Slice<jule::Ptr<_1d21bb65a_Var>> _1d2146849_buildVars(jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>>);
inline jule::Ptr<_1d216e5a8_Impl> _1d2146ae1_buildImpl(jule::Ptr<_1d060a0d9_Impl>);
inline jule::Ptr<_1d0408c95_Data> _1d216a351_buildAsComptimeMethodData(jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Ptr<_1d219307c_ImportInfo> _1d216a53d_findComptimePackage(jule::Ptr<_1d219b34e_Sema>*);
inline jule::Ptr<_1d0408c95_Data> _1d216a8a1_buildComptimeTypeInfoData(jule::Ptr<_1d219b34e_Sema>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Ptr<_1d0408c95_Data> _1d216abd1_buildComptimeValue(jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d216d9d6_matchConstraint(jule::Str*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d216dcc2_isBuiltinConstraint(jule::Str*);
inline jule::Ptr<_1d217b241_scopeChecker> _1d2171643_newScopeCheckerBase(jule::Ptr<_1d219b34e_Sema>*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Ptr<_1d217b241_scopeChecker> _1d21719c8_newScopeChecker(jule::Ptr<_1d219b34e_Sema>*, jule::Ptr<_1d0626e6e_FnIns>);
inline jule::Ptr<_1d2179ea9_scopeLabel> _1d2171d19_findLabelParent(jule::Str, jule::Ptr<_1d217b241_scopeChecker>);
inline jule::Bool _1d217219e_modelIsGotoScope(jule::Any, jule::Ptr<_1d2174613_Scope>*);
inline jule::Bool _1d21724e0_stmtIsGotoScope(jule::Any*, jule::Ptr<_1d2174613_Scope>*);
inline jule::I64 _1d2172831_countMatchType(jule::Ptr<_1d217842a_Match>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Slice<jule::Ptr<_1d0408c95_Data>> _1d2172ac8_getDatasFromTupleData(jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d2173414_checkMut(jule::Ptr<_1d219b34e_Sema>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d2173898_checkAssign(jule::Ptr<_1d219b34e_Sema>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d2173b40_isValidAstStForNextSt(jule::Any*);
inline jule::Bool _1d2173dd7_isValidStForNextSt(jule::Any*);
inline jule::Bool _1d217417e_stmtIsDef(jule::Any*);
inline jule::Ptr<_1d21bb65a_Var> _1d2190794_findVarInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d2190bc3_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1d060ddbd_Struct> _1d21910ad_findStructInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1d06242bd_Fn> _1d2191520_findFnInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str, jule::Bool);
inline jule::Ptr<_1d21494c8_Trait> _1d219182d_findTraitInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1d214bc5b_Enum> _1d2191b6e_findEnumInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str);
inline jule::Ptr<_1d214d356_TypeEnum> _1d2191eb0_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str);
inline jule::Any _1d21924aa_defByIdentPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Str*, jule::Bool);
inline jule::Bool _1d2197e72_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1d2198bcb_isValidModelForRef(jule::Any*);
inline _22ba3c6bd_Log _1d2199171_compilerErr(jule::Ptr<_22be1281d_Token>*, jule::Bool, jule::Str, jule::Slice<jule::Any>);
inline jule::Bool _1d21994b2_impIsLookupable(jule::Ptr<_1d219307c_ImportInfo>*, jule::Str);
inline void _1d21997ae_appendRetVars(jule::Slice<jule::Ptr<_1d21bb65a_Var>>*, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1d2199a67_appendParamVars(jule::Slice<jule::Ptr<_1d21bb65a_Var>>*, jule::Ptr<_1d0626e6e_FnIns>*);
inline void _1d2199d42_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Ptr<_1d040428a_SymbolTable> _1d219a194_findFile(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>*, jule::Ptr<_22be17ba8_File>*);
inline void _1d219a606_pushSuggestion(_22ba3c6bd_Log*, jule::Str, jule::Slice<jule::Any>);
inline void _1d21b9b42_pushImplemented(jule::Ptr<_1d21494c8_Trait>, jule::Ptr<_1d060ddbd_Struct>*);
inline void _1d21b9dea_pushImplements(jule::Ptr<_1d060ddbd_Struct>*, jule::Ptr<_1d21494c8_Trait>);
inline jule::Bool _1d03e1684_traitHasReferenceReceiver(jule::Ptr<_1d21494c8_Trait>*);
inline jule::Bool _1d03e19c5_floatAssignable(jule::Str, jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d03e1d16_sigAssignable(jule::Str, jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d03e219b_unsigAssignable(jule::Str, jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d03e24dc_intAssignable(jule::Str, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d21d1d46_TypeKind> _1d0403388_lenKind(void);
inline jule::Ptr<_1d05aba4c_Directive> _1d21cad95_findDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Str);
inline jule::Any _1d21cb22a_findBuiltinsImport(jule::Str, jule::Ptr<_1d219307c_ImportInfo>);
inline void _1d21cb439_fitBitsize(jule::Ptr<_1d0408c95_Data>*);
inline void _1d21cb69d_makeStructLitAlloc(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0616ca5_StructLitExprModel>*);
inline jule::Ptr<_1d21bb65a_Var> _1d21cb9de_buildErrorVar(jule::Ptr<_1d2174613_Scope>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Any _1d21cbd30_findBuiltinsSema(jule::Str, jule::Ptr<_1d219b34e_Sema>);
inline jule::Bool _1d21cc0c7_isOkForShifting(jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d21cc47e_isInstancedStruct(jule::Ptr<_1d0611bd4_StructIns>);
inline jule::Bool _1d21cc7e2_isPtrArithmeticCompatible(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d21cca34_applyCastKindModel(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _1d21cccdc_applyCastKind(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Ptr<_1d0408c95_Data> _1d21cceda_buildVoidData(void);
inline jule::Str _1d21cd2a4_checkDataForIntegerIndexing(jule::Ptr<_1d0408c95_Data>*);
inline void _1d21cd56d_applyCastModelByEnum(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d214bc5b_Enum>);
inline void _1d21cd826_castConstByType(jule::Str*, jule::Ptr<_1d0408c95_Data>*);
inline void _1d21cdd32_updateModelToGenericIns(jule::Any*, jule::Ptr<_1d0626e6e_FnIns>*);
inline jule::Bool _1d21ce074_pushSubIdentFromExpr(jule::Any, jule::Ptr<_1d05dee15_SubIdentTypeDecl>*);
inline jule::Str _1d21ce31b_constoa(jule::Ptr<_1e76e5cc3_Const>*);
inline jule::Ptr<_1d0408c95_Data> _1d21ce65c_evalEnumStatic(jule::Ptr<_1d214bc5b_Enum>*, jule::Ptr<_1d214b266_EnumItem>*);
inline jule::Bool _1d21eb206_kindUsesGenerics(jule::Ptr<_1d21d1d46_TypeKind>*, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>*);
inline jule::Bool _1d21eb58b_hasDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Str);
inline jule::Bool _1d21eb833_canGetPtr(jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d21ebb52_isValidForSptrType(jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d21ebde9_isValidForRef(jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Bool _1d21ec1b3_isBuiltinStrConvertable(jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Str _1d21ec438_buildLinkPathByTokens(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d21d9568_Prim> _1d21ec7e0_buildPrimType(jule::Str);
inline jule::Ptr<_1d060ddbd_Struct> _1d21eca87_getStructFromKind(jule::Ptr<_1d21d1d46_TypeKind>);
inline void _1d21ecd40_applyImplicitCast(jule::Ptr<_1d21d1d46_TypeKind>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d21ed0d7_validTypeForXof(jule::Ptr<_1d21d1d46_TypeKind>*);
inline __jule_tuple_x_1d040428a_SymbolTable__jule_tuple_s_22ba3c6bd_Log _1d2200d87_buildSymbols(jule::Ptr<_1d05aa7a4_Ast>*, jule::Trait<_1d21903cb_Importer>*, jule::Ptr<_1d2147141_symbolBuilder>);
inline __jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log _1d22012b6_analyzePackage(jule::Slice<jule::Ptr<_1d05aa7a4_Ast>>*, jule::Trait<_1d21903cb_Importer>*, jule::I64*);
inline __jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log _1d22016a1_AnalyzePackage(jule::Slice<jule::Ptr<_1d05aa7a4_Ast>>, jule::Trait<_1d21903cb_Importer>, jule::I64);
inline jule::Ptr<_1d0626e6e_FnIns> _1d0640916_findBuiltinFn(jule::Str);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d0640c02_primTypeAlias(jule::Ptr<_1d21d1d46_TypeKind>*);
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d064451e_findBuiltinTypeAlias(jule::Str);
inline jule::Any _1d064472d_findBuiltinDef(jule::Str);
inline jule::Any _1d06449c5_findBuiltinDefStdDebug(jule::Str);
inline jule::Any _1d0644c6c_findBuiltinDefStdMem(jule::Str);
inline jule::Any _1d0645036_findBuiltinDefStdComptime(jule::Str);
inline jule::Any _1d06453dd_findBuiltinDefStdJuleIntegrated(jule::Str);
inline jule::Any _1d06456b8_findPackageBuiltinDef(jule::Str, jule::Str);
inline jule::Ptr<_1d0408c95_Data> _1d0645ac5_builtinCallerCommonPlain(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0645ec1_builtinCallerCommon(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d06463ab_builtinCallerCommonMut(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d06466ec_builtinCallerError(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*);
inline jule::Ptr<_1d0408c95_Data> _1d0646ad7_builtinCallerOut(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0646ec2_builtinCallerOutln(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d06475dd_builtinCallerNew(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e14ea_builtinCallerPanic(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e18d5_builtinCallerMake(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e1cc0_builtinCallerAppend(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e2254_callerCopySlice(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e26d8_callerCopyStr(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e2ac3_builtinCallerCopy(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e2e14_callerLenSlice(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e3255_callerLenMap(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e3596_callerLenArr(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e38d7_callerLenStr(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e3cc2_builtinCallerLen(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e4113_callerCapSlice(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e4454_callerCapStr(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e483e_builtinCallerCap(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d23e4cc3_callerDeleteMap(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0650e65_builtinCallerDelete(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d06512b7_builtinCallerClone(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d06516a2_builtinCallerAssert(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0651aae_builtinCallerStdComptimeTypeOf(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0651e99_builtinCallerStdComptimeValueOf(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>);
inline jule::Ptr<_1d0408c95_Data> _1d065265e_builtinCallerStdComptimeRange(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0652a7c_builtinCallerStdComptimeLine(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0652e9a_builtinCallerStdComptimeFile(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0653374_builtinCallerStdComptimeFiles(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0653792_builtinCallerStdMemSizeOf(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0653bb0_builtinCallerStdMemAlignOf(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d06540cd_builtinCallerStdMemFree(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d065450c_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d065492a_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0654d6a_builtinCallerStdDebugOut(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Ptr<_1d0408c95_Data> _1d0655255_builtinCallerStdDebugOutln(jule::Ptr<_1d040a813_Eval>*, jule::Ptr<_1d05e7604_FnCallExpr>*, jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1d0200350_FindModuleFile(jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>*);
inline jule::Str _1d02005a3_FindModuleFileDeep(jule::Str);
inline jule::Slice<_22ba3c6bd_Log> _1d020084a_CheckModuleFile(jule::Str);
inline jule::Ptr<_1d2592eb5_FileInfo> _1d2595abc_ParseFile(jule::Ptr<_22be17ba8_File>);
inline __jule_tuple_x_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log _1d25db030_parseFileset(jule::Ptr<_22be17ba8_File>);
inline jule::Ptr<_1d05ee199_ScopeTree> _1d25db959_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1d25dbc45_isSt(jule::Ptr<_22be1281d_Token>, jule::Ptr<_22be1281d_Token>);
inline jule::Bool _1d25dc086_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64*);
inline __jule_tuple_int__jule_tuple_bool _1d25dc41b_nextStPos(jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::I64);
inline __jule_tuple_sx_22be1281d_Token__jule_tuple_bool _1d25dc75c_skipSt(jule::I64*, jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Slice<jule::Ptr<_1d25dca59_stmt>> _1d25dce00_splitStmts(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Bool _1d26045dc_isTypeOp(jule::Str*);
inline jule::Bool _1d26048c8_isTypeRange(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Slice<jule::Ptr<_22be1281d_Token>> _1d2604b70_getBlockExpr(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline __jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token _1d2605005_splitDelim(jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::U64);
inline jule::I64 _1d260529c_findLowestPrecOp(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Ptr<_1d05e52d3_IdentExpr> _1d2605544_buildIdentExpr(jule::Ptr<_22be1281d_Token>*);
inline __jule_tuple_sx_22be1281d_Token__jule_tuple_int _1d26057db_getRangeExprTokens(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Bool _1d2606545_checkAssignTokens(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline _22ba3c6bd_Log _1d2607766_makeErr(jule::I64, jule::I64, jule::Ptr<_22be17ba8_File>*, jule::Str, jule::Slice<jule::Any>);
inline jule::Slice<jule::Ptr<_22be1281d_Token>> _1d2607c3e_range(jule::I64*, jule::Str, jule::Str, jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline __jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token _1d2607ed6_rangeLast(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline __jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log _1d26083c1_partsKind(jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::Str, jule::Bool);
inline __jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log _1d26087ab_parts(jule::Slice<jule::Ptr<_22be1281d_Token>>*, jule::U64, jule::Bool);
inline jule::Str _1d2608a53_getCloseKindOfBrace(jule::Str);
inline _22ba3c6bd_Log _1d2608e3d_compilerErr(jule::Ptr<_22be1281d_Token>*, jule::Str*, jule::Slice<jule::Any>);
inline void _1d260936c_pushSuggestion(_22ba3c6bd_Log*, jule::Str, jule::Slice<jule::Any>);
inline jule::Str _1d2609614_tokstoa(jule::Slice<jule::Ptr<_22be1281d_Token>>*);
inline jule::Bool _1d2619756_isPub(jule::Str*);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261a0e7_buildVoidType(void);
inline jule::Ptr<_1d05de563_TypeDecl> _1d261a339_buildPrimType(jule::Ptr<_22be1281d_Token>);
inline __jule_tuple_bool__jule_tuple_bool _1d20035b3_checkOs(jule::Str);
inline __jule_tuple_bool__jule_tuple_bool _1d200385a_checkArch(jule::Str);
inline jule::Bool _1d2003b02_isPassFileAnnotation(jule::Str);
inline void _1d2004d89_setOsVars(jule::Slice<jule::Str>*);
inline void _1d20050dc_setArchVars(jule::Slice<jule::Str>*);
inline void _1d2005395_initVars(jule::Slice<jule::Str>*, _1d2004a7b_CompileInfo*);
inline jule::Slice<jule::U8> _1d261dea8_readBuff(jule::Str);
inline _22ba3c6bd_Log _1d261e23e_flatCompilerErr(jule::Str);
inline void _1d2623650_pushPasses(jule::Ptr<_1d2195bb7_Package>*, jule::Slice<jule::Str>*);
inline jule::Slice<jule::Str> _1d26239d5_getAllUniquePasses(jule::Ptr<_1d2195bb7_Package>*, jule::Slice<jule::Ptr<_1d219307c_ImportInfo>>);
inline _1d2004a7b_CompileInfo _1d2623bd3_buildCompileInfo(void);
inline void _1d0793eed_EliminateDefines(jule::Ptr<_1d2621e34_IR>*);
inline jule::Ptr<_1d05aba4c_Directive> _1d0794383_findDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Str);
inline jule::Bool _1d07946c4_hasDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Str);
inline void _1d0798321_eliminateDeadCodeOfScope(jule::Ptr<_1d2174613_Scope>);
inline void _1d07985a7_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1d06242bd_Fn>>*);
inline void _1d07987e9_eliminateFunctionsScopePackage(jule::Ptr<_1d2195bb7_Package>*);
inline void _1d0798a91_eliminateScopePackage(jule::Ptr<_1d2195bb7_Package>*);
inline void _1d0798ca0_EliminateScopes(jule::Ptr<_1d2621e34_IR>*);
inline jule::Bool _1d065bdb6_isStdPackage(jule::Str, jule::Str);
inline jule::Bool _1d065c1c4_isConstantValidConditionalCase(jule::Ptr<_1d2174a0e_If>*);
inline jule::Bool _1d065c47c_isUnreachableExpr(jule::Any*);
inline jule::Bool _1d065c7bd_isConstantValidMatchCase(jule::Ptr<_1d2178e75_Case>*);
inline jule::Bool _1d065ca65_isUnreachableConditionalCase(jule::Ptr<_1d2174a0e_If>*);
inline jule::Bool _1d065cd1d_isUnreachableMatchCase(jule::Ptr<_1d2178e75_Case>*);
inline __jule_tuple_bool__jule_tuple_u64 _1d1ed2a48_checkForBitShiftOpt(jule::Ptr<_1d0615b83_OperandExprModel>*, jule::Ptr<_1d0615b83_OperandExprModel>*);
inline void _1d221540c_PushOptLevel(jule::I64);
inline void _1d07a2d0e_detectEnabled(void);
inline void _1e29a420c_Throw(jule::Str);
inline jule::U64 _1b5a6d941_unix(void);
inline jule::U64 _1b5a6dc4e_unixYearToSeconds(jule::U64, jule::Bool*);
inline jule::U64 _1b5a6e0d4_unixMonthToSeconds(jule::U64, jule::Bool);
inline jule::Bool _1b5700abd_isCopyOptimizable(jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1b5700e53_isIterCopyOptimizable(jule::Ptr<_1d0408c95_Data>*, jule::Ptr<_1d21bb65a_Var>*);
inline jule::Str _1b571069e_decomposeCommonEsq(jule::U8);
inline jule::Str _1b571098a_sbtoa(jule::U8);
inline jule::Str _1b5710c32_cstrBytes(jule::Slice<jule::U8>);
inline jule::Str _1b5711051_cstrLit(jule::Slice<jule::U8>);
inline jule::Str _1b571135e_ftoa(jule::F64, jule::I64);
inline jule::Str _1b5711606_itoa(jule::I64);
inline jule::Str _1b571189d_utoa(jule::U64);
inline jule::Bool _1b5711c55_isForwarded(jule::Ptr<_1d2174613_Scope>*);
inline jule::Bool _1b571201e_isBuiltinCallHasDebuginf(jule::Ptr<_1d0617eb5_FnCallExprModel>*);
inline jule::Bool _1b5712250_isExprComesFromBind(jule::Ptr<_1d0408c95_Data>*);
inline jule::Bool _1b57124e7_isAny(jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _1b5a81e71_iterFiles(jule::Ptr<_1d2195bb7_Package>*, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>);
inline jule::Str _1b5a8225c_concatAllParts(jule::Slice<jule::Ptr<_22be1281d_Token>>);
inline jule::Bool _1b5a8259d_containsTraitMethod(jule::Ptr<_1d21494c8_Trait>*, jule::Str*);
inline void _1b5a8289a_pushMethodsFromInherit(jule::Ptr<_1d21494c8_Trait>*, jule::Ptr<_1d21494c8_Trait>*);
inline void _1b5a82b75_pushMethodsFromInherits(jule::Ptr<_1d21494c8_Trait>*, jule::Ptr<_1d21494c8_Trait>*);
inline jule::Ptr<_1d05aba4c_Directive> _1b5a90d92_findDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Str);
inline jule::Bool _1b5a91227_hasDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>*, jule::Str);
inline jule::Bool _1b5a914be_shouldInitialized(jule::Ptr<_1d21d1d46_TypeKind>*);
inline void _22bb24b4b_printErrorMessage(jule::Str);
inline void _22bb24d9e_help(jule::Slice<jule::Str>*);
inline void _22bb250ad_version(jule::Slice<jule::Str>*);
inline void _22bb2529a_toolDistos(void);
inline void _22bb25410_toolDistarch(void);
inline void _22bb2561e_tool(jule::Slice<jule::Str>*);
inline void _22bb2582d_julenv(jule::Slice<jule::Str>*);
inline void _22bb25b19_mod(jule::Slice<jule::Str>*);
inline jule::Bool _22bb25db1_processCommand(jule::Slice<jule::Str>*);
inline void _22bb26026_showInfo(void);
void entry_point(void);
inline void _1b5a961e9_init(void);
inline jule::Ptr<_22a8b8490_File> _1b5a964a2_openOutput(jule::Str*);
inline void _1b5a96617_clearObjects(void);
inline void _1b5a96914_compileIr(jule::Str, jule::Str);
inline jule::Bool _1b5a96bab_isCppSourceFile(jule::Str);
inline void _1b5a96dba_pushCompCmdClang(jule::Str*);
inline void _1b5a970c9_pushCompCmdGcc(jule::Str*);
inline __jule_tuple_str__jule_tuple_str _1b5a9752a_genCompileCmd(jule::Str, jule::Ptr<_1d2621e34_IR>*);
inline jule::Str _1b5a97728_getCompilePath(void);
inline void _1b5a9796a_applyTargetIndependentOptimizations(jule::Ptr<_1d2621e34_IR>*);
inline void _1b5a97ad0_checkCompilerFlag(void);
inline void _1b5a97c9a_checkTargetArch(jule::Str);
inline void _1b5a97ea9_checkTargetOs(jule::Str);
inline void _1b5a981b8_checkTargetFlag(jule::Str*);
inline void _1b5a983c7_checkOptFlag(jule::Str*);
inline void _1b5a9874b_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1b5a989d2_checkFlags(jule::Slice<jule::Str>*);
inline void _1b5a98be1_setupSemaFlags(jule::I64*);
inline jule::Ptr<_1d2621e34_IR> _1b5a98e88_buildIr(jule::Slice<jule::Str>*);
inline void _1b5a99197_compileCommand(jule::Slice<jule::Str>*);


struct _1d21502d1_comptimeRangeKindMptrData {
	void(*_1d214ea61_ready)(jule::Trait<_1d21502d1_comptimeRangeKind>, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
	void(*_1d214ee29_step)(jule::Trait<_1d21502d1_comptimeRangeKind>, jule::I64, jule::Ptr<_1d21bb65a_Var>*, jule::Ptr<_1d21bb65a_Var>*);
	jule::I64(*_1d215018d_len)(jule::Trait<_1d21502d1_comptimeRangeKind>);
};

struct _1d21903cb_ImporterMptrData {
	void(*_1d218e2ed_SetModPath)(jule::Trait<_1d21903cb_Importer>, jule::Str);
	jule::Str(*_1d218e540_GetModPath)(jule::Trait<_1d21903cb_Importer>);
	jule::Str(*_1d218e84d_ModById)(jule::Trait<_1d21903cb_Importer>, jule::I64);
	jule::Ptr<_1d219307c_ImportInfo>(*_1d218eb5b_GetImport)(jule::Trait<_1d21903cb_Importer>, jule::Str);
	__jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log(*_1d2190013_ImportPackage)(jule::Trait<_1d21903cb_Importer>, jule::Str, jule::Bool);
	void(*_1d2190288_Imported)(jule::Trait<_1d21903cb_Importer>, jule::Ptr<_1d219307c_ImportInfo>);
};

struct _1d21d18d4_KindMptrData {
	jule::Str(*_1d21d1483_Str)(jule::Trait<_1d21d18d4_Kind>);
	jule::Bool(*_1d21d1791_Equal)(jule::Trait<_1d21d18d4_Kind>, jule::Ptr<_1d21d1d46_TypeKind>);
};

struct _1d2200172_LookupMptrData {
	jule::Ptr<_1d219307c_ImportInfo>(*_1d21ed637_SelectPackage)(jule::Trait<_1d2200172_Lookup>, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>);
	jule::Ptr<_1d21bb65a_Var>(*_1d21ed9de_FindVar)(jule::Trait<_1d2200172_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d21d10ed_TypeAlias>(*_1d21edd96_FindTypeAlias)(jule::Trait<_1d2200172_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d060ddbd_Struct>(*_1d21ee24d_FindStruct)(jule::Trait<_1d2200172_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d06242bd_Fn>(*_1d21ee605_FindFn)(jule::Trait<_1d2200172_Lookup>, jule::Str, jule::Bool);
	jule::Ptr<_1d21494c8_Trait>(*_1d21ee913_FindTrait)(jule::Trait<_1d2200172_Lookup>, jule::Str);
	jule::Ptr<_1d214bc5b_Enum>(*_1d21eec21_FindEnum)(jule::Trait<_1d2200172_Lookup>, jule::Str);
	jule::Ptr<_1d214d356_TypeEnum>(*_1d220002e_FindTypeEnum)(jule::Trait<_1d2200172_Lookup>, jule::Str);
};

struct _1d2a64b90_CommonFlagMptrData {
	jule::Str(*_1d2a34e7e_Name)(jule::Trait<_1d2a64b90_CommonFlag>);
	jule::I32(*_1d2a3516b_Short)(jule::Trait<_1d2a64b90_CommonFlag>);
	jule::Str(*_1d2a64871_What)(jule::Trait<_1d2a64b90_CommonFlag>);
	void(*_1d2a64a4c_Reset)(jule::Trait<_1d2a64b90_CommonFlag>);
};



inline void _1d214ea61_ready_comptimeRangeKind_0(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::Ptr<_1d21bb65a_Var>* _1329_keyA, jule::Ptr<_1d21bb65a_Var>* _1346_keyB) {
	_1d215358c_ready(_self_.safe_ptr<_1d2152998_comptimeStructFields>(), _1329_keyA, _1346_keyB);
}
inline void _1d214ee29_step_comptimeRangeKind_0(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1d21bb65a_Var>* _1436_keyA, jule::Ptr<_1d21bb65a_Var>* _1453_keyB) {
	_1d2153955_step(_self_.safe_ptr<_1d2152998_comptimeStructFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1d215018d_len_comptimeRangeKind_0(jule::Trait<_1d21502d1_comptimeRangeKind> _self_) {
	return _1d2153bb9_len(_self_.safe_ptr<_1d2152998_comptimeStructFields>());
}
inline void _1d214ea61_ready_comptimeRangeKind_1(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::Ptr<_1d21bb65a_Var>* _1329_keyA, jule::Ptr<_1d21bb65a_Var>* _1346_keyB) {
	_1d2156590_ready(_self_.safe_ptr<_1d21559e0_comptimeStatics>(), _1329_keyA, _1346_keyB);
}
inline void _1d214ee29_step_comptimeRangeKind_1(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1d21bb65a_Var>* _1436_keyA, jule::Ptr<_1d21bb65a_Var>* _1453_keyB) {
	_1d2156958_step(_self_.safe_ptr<_1d21559e0_comptimeStatics>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1d215018d_len_comptimeRangeKind_1(jule::Trait<_1d21502d1_comptimeRangeKind> _self_) {
	return _1d2156bbc_len(_self_.safe_ptr<_1d21559e0_comptimeStatics>());
}
inline void _1d214ea61_ready_comptimeRangeKind_2(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::Ptr<_1d21bb65a_Var>* _1329_keyA, jule::Ptr<_1d21bb65a_Var>* _1346_keyB) {
	_1d2158d12_ready(_self_.safe_ptr<_1d21581c9_comptimeEnumFields>(), _1329_keyA, _1346_keyB);
}
inline void _1d214ee29_step_comptimeRangeKind_2(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1d21bb65a_Var>* _1436_keyA, jule::Ptr<_1d21bb65a_Var>* _1453_keyB) {
	_1d21591ca_step(_self_.safe_ptr<_1d21581c9_comptimeEnumFields>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1d215018d_len_comptimeRangeKind_2(jule::Trait<_1d21502d1_comptimeRangeKind> _self_) {
	return _1d215943e_len(_self_.safe_ptr<_1d21581c9_comptimeEnumFields>());
}
inline void _1d214ea61_ready_comptimeRangeKind_3(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::Ptr<_1d21bb65a_Var>* _1329_keyA, jule::Ptr<_1d21bb65a_Var>* _1346_keyB) {
	_1d215c376_ready(_self_.safe_ptr<_1d215b7c6_comptimeParams>(), _1329_keyA, _1346_keyB);
}
inline void _1d214ee29_step_comptimeRangeKind_3(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1d21bb65a_Var>* _1436_keyA, jule::Ptr<_1d21bb65a_Var>* _1453_keyB) {
	_1d215c73e_step(_self_.safe_ptr<_1d215b7c6_comptimeParams>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1d215018d_len_comptimeRangeKind_3(jule::Trait<_1d21502d1_comptimeRangeKind> _self_) {
	return _1d215c9a3_len(_self_.safe_ptr<_1d215b7c6_comptimeParams>());
}
inline void _1d214ea61_ready_comptimeRangeKind_4(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::Ptr<_1d21bb65a_Var>* _1329_keyA, jule::Ptr<_1d21bb65a_Var>* _1346_keyB) {
	_1d215d83e_ready(_self_.safe_ptr<_1d215cc8e_comptimeTypeInfos>(), _1329_keyA, _1346_keyB);
}
inline void _1d214ee29_step_comptimeRangeKind_4(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1d21bb65a_Var>* _1436_keyA, jule::Ptr<_1d21bb65a_Var>* _1453_keyB) {
	_1d215dc07_step(_self_.safe_ptr<_1d215cc8e_comptimeTypeInfos>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1d215018d_len_comptimeRangeKind_4(jule::Trait<_1d21502d1_comptimeRangeKind> _self_) {
	return _1d215de6b_len(_self_.safe_ptr<_1d215cc8e_comptimeTypeInfos>());
}
inline void _1d214ea61_ready_comptimeRangeKind_5(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::Ptr<_1d21bb65a_Var>* _1329_keyA, jule::Ptr<_1d21bb65a_Var>* _1346_keyB) {
	_1d2167ded_ready(_self_.safe_ptr<_1d216734d_comptimeFiles>(), _1329_keyA, _1346_keyB);
}
inline void _1d214ee29_step_comptimeRangeKind_5(jule::Trait<_1d21502d1_comptimeRangeKind> _self_, jule::I64 _1423_i, jule::Ptr<_1d21bb65a_Var>* _1436_keyA, jule::Ptr<_1d21bb65a_Var>* _1453_keyB) {
	_1d21682b6_step(_self_.safe_ptr<_1d216734d_comptimeFiles>(), _1423_i, _1436_keyA, _1453_keyB);
}
inline jule::I64 _1d215018d_len_comptimeRangeKind_5(jule::Trait<_1d21502d1_comptimeRangeKind> _self_) {
	return _1d216852a_len(_self_.safe_ptr<_1d216734d_comptimeFiles>());
}
inline void _1d218e2ed_SetModPath_Importer_0(jule::Trait<_1d21903cb_Importer> _self_, jule::Str _1729_path) {
	_1d262022e_SetModPath(_self_.safe_ptr<_1d261e6c3_JuleImporter>(), _1729_path);
}
inline jule::Str _1d218e540_GetModPath_Importer_0(jule::Trait<_1d21903cb_Importer> _self_) {
	return _1d2620493_GetModPath(_self_.safe_ptr<_1d261e6c3_JuleImporter>());
}
inline jule::Str _1d218e84d_ModById_Importer_0(jule::Trait<_1d21903cb_Importer> _self_, jule::I64 _2522_id) {
	return _1d26207a1_ModById(_self_.safe_ptr<_1d261e6c3_JuleImporter>(), _2522_id);
}
inline jule::Ptr<_1d219307c_ImportInfo> _1d218eb5b_GetImport_Importer_0(jule::Trait<_1d21903cb_Importer> _self_, jule::Str _3128_path) {
	return _1d2620aae_GetImport(_self_.safe_ptr<_1d261e6c3_JuleImporter>(), _3128_path);
}
inline __jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log _1d2190013_ImportPackage_Importer_0(jule::Trait<_1d21903cb_Importer> _self_, jule::Str _3732_path, jule::Bool _3743_update_mod) {
	return _1d2620e66_ImportPackage(_self_.safe_ptr<_1d261e6c3_JuleImporter>(), _3732_path, _3743_update_mod);
}
inline void _1d2190288_Imported_Importer_0(jule::Trait<_1d21903cb_Importer> _self_, jule::Ptr<_1d219307c_ImportInfo> _4131__0) {
	_1d26211db_Imported(_self_.safe_ptr<_1d261e6c3_JuleImporter>(), _4131__0);
}
inline jule::Str _1d21d1483_Str_Kind_0(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d061208b_Str(_self_.safe_ptr<_1d0611bd4_StructIns>());
}
inline jule::Bool _1d21d1791_Equal_Kind_0(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d0612399_Equal(_self_.data.as<_1d0611bd4_StructIns>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_1(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d062729e_Str(_self_.safe_ptr<_1d0626e6e_FnIns>());
}
inline jule::Bool _1d21d1791_Equal_Kind_1(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d06275ac_Equal(_self_.data.as<_1d0626e6e_FnIns>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_2(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21498c4_Str(_self_.safe_ptr<_1d21494c8_Trait>());
}
inline jule::Bool _1d21d1791_Equal_Kind_2(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2149bd2_Equal(_self_.data.as<_1d21494c8_Trait>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_3(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d214c0be_Str(_self_.safe_ptr<_1d214bc5b_Enum>());
}
inline jule::Bool _1d21d1791_Equal_Kind_3(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d214c3cc_Equal(_self_.data.as<_1d214bc5b_Enum>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_4(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d214d686_Str(_self_.safe_ptr<_1d214d356_TypeEnum>());
}
inline jule::Bool _1d21d1791_Equal_Kind_4(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d214d994_Equal(_self_.data.as<_1d214d356_TypeEnum>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_5(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21508a8_Str(_self_.safe_ptr<_1d21504ac_comptimeRange>());
}
inline jule::Bool _1d21d1791_Equal_Kind_5(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2150bb6_Equal(_self_.data.as<_1d21504ac_comptimeRange>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_6(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d2151315_Str(_self_.safe_ptr<_1d2150ea2_comptimeStructField>());
}
inline jule::Bool _1d21d1791_Equal_Kind_6(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2151623_Equal(_self_.data.as<_1d2150ea2_comptimeStructField>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_7(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d2152d50_Str(_self_.safe_ptr<_1d2152998_comptimeStructFields>());
}
inline jule::Bool _1d21d1791_Equal_Kind_7(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d215315d_Equal(_self_.data.as<_1d2152998_comptimeStructFields>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_8(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d2154318_Str(_self_.safe_ptr<_1d2153ea5_comptimeStatic>());
}
inline jule::Bool _1d21d1791_Equal_Kind_8(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2154626_Equal(_self_.data.as<_1d2153ea5_comptimeStatic>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_9(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d2155d53_Str(_self_.safe_ptr<_1d21559e0_comptimeStatics>());
}
inline jule::Bool _1d21d1791_Equal_Kind_9(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2156161_Equal(_self_.data.as<_1d21559e0_comptimeStatics>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_10(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d215731b_Str(_self_.safe_ptr<_1d2156ea8_comptimeEnumField>());
}
inline jule::Bool _1d21d1791_Equal_Kind_10(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2157629_Equal(_self_.data.as<_1d2156ea8_comptimeEnumField>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_11(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d215864c_Str(_self_.safe_ptr<_1d21581c9_comptimeEnumFields>());
}
inline jule::Bool _1d21d1791_Equal_Kind_11(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d215895a_Equal(_self_.data.as<_1d21581c9_comptimeEnumFields>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_12(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d2159a8d_Str(_self_.safe_ptr<_1d215972a_comptimeParam>());
}
inline jule::Bool _1d21d1791_Equal_Kind_12(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2159d9b_Equal(_self_.data.as<_1d215972a_comptimeParam>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_13(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d215bb39_Str(_self_.safe_ptr<_1d215b7c6_comptimeParams>());
}
inline jule::Bool _1d21d1791_Equal_Kind_13(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d215be47_Equal(_self_.data.as<_1d215b7c6_comptimeParams>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_14(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d215d102_Str(_self_.safe_ptr<_1d215cc8e_comptimeTypeInfos>());
}
inline jule::Bool _1d21d1791_Equal_Kind_14(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d215d410_Equal(_self_.data.as<_1d215cc8e_comptimeTypeInfos>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_15(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d215e5ba_Str(_self_.safe_ptr<_1d215e257_comptimeTypeInfo>());
}
inline jule::Bool _1d21d1791_Equal_Kind_15(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d215e8c8_Equal(_self_.data.as<_1d215e257_comptimeTypeInfo>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_16(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21650b5_Str(_self_.safe_ptr<_1d2164c52_comptimeValue>());
}
inline jule::Bool _1d21d1791_Equal_Kind_16(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21653c3_Equal(_self_.data.as<_1d2164c52_comptimeValue>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_17(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21676b1_Str(_self_.safe_ptr<_1d216734d_comptimeFiles>());
}
inline jule::Bool _1d21d1791_Equal_Kind_17(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21679be_Equal(_self_.data.as<_1d216734d_comptimeFiles>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_18(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d2168b79_Str(_self_.safe_ptr<_1d2168816_comptimeFile>());
}
inline jule::Bool _1d21d1791_Equal_Kind_18(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d2168e87_Equal(_self_.data.as<_1d2168816_comptimeFile>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_19(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21d2242_Str(_self_.safe_ptr<_1d21d1d46_TypeKind>());
}
inline jule::Bool _1d21d1791_Equal_Kind_19(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21d2550_Equal(_self_.data.as<_1d21d1d46_TypeKind>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_20(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21d98cb_Str(_self_.safe_ptr<_1d21d9568_Prim>());
}
inline jule::Bool _1d21d1791_Equal_Kind_20(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21d9bd9_Equal(_self_.data.as<_1d21d9568_Prim>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_21(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21dd160_Str(_self_.safe_ptr<_1d21dccec_Sptr>());
}
inline jule::Bool _1d21d1791_Equal_Kind_21(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21dd46d_Equal(_self_.data.as<_1d21dccec_Sptr>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_22(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21ddc65_Str(_self_.safe_ptr<_1d21dd759_Slc>());
}
inline jule::Bool _1d21d1791_Equal_Kind_22(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21de073_Equal(_self_.data.as<_1d21dd759_Slc>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_23(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21de64a_Str(_self_.safe_ptr<_1d21de2d7_Tuple>());
}
inline jule::Bool _1d21d1791_Equal_Kind_23(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21de958_Equal(_self_.data.as<_1d21de2d7_Tuple>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_24(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21e0173_Str(_self_.safe_ptr<_1d21ded10_Map>());
}
inline jule::Bool _1d21d1791_Equal_Kind_24(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21e0481_Equal(_self_.data.as<_1d21ded10_Map>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_25(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21e0c67_Str(_self_.safe_ptr<_1d21e0904_Arr>());
}
inline jule::Bool _1d21d1791_Equal_Kind_25(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21e1075_Equal(_self_.data.as<_1d21e0904_Arr>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_26(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1d21e16c4_Str(_self_.safe_ptr<_1d21e1361_Ptr>());
}
inline jule::Bool _1d21d1791_Equal_Kind_26(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1d21e19d2_Equal(_self_.data.as<_1d21e1361_Ptr>(), _5621_other);
}
inline jule::Str _1d21d1483_Str_Kind_27(jule::Trait<_1d21d18d4_Kind> _self_) {
	return _1b5a83b21_Str(_self_.safe_ptr<_1b5a83868_customType>());
}
inline jule::Bool _1d21d1791_Equal_Kind_27(jule::Trait<_1d21d18d4_Kind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _5621_other) {
	return _1b5a83e2e_Equal(_self_.data.as<_1b5a83868_customType>(), _5621_other);
}
inline jule::Ptr<_1d219307c_ImportInfo> _1d21ed637_SelectPackage_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _932_selector) {
	return _1d217b6b4_SelectPackage(_self_.safe_ptr<_1d217b241_scopeChecker>(), _932_selector);
}
inline jule::Ptr<_1d21bb65a_Var> _1d21ed9de_FindVar_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d217ba6b_FindVar(_self_.safe_ptr<_1d217b241_scopeChecker>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21edd96_FindTypeAlias_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d217be23_FindTypeAlias(_self_.safe_ptr<_1d217b241_scopeChecker>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d060ddbd_Struct> _1d21ee24d_FindStruct_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d217c2ca_FindStruct(_self_.safe_ptr<_1d217b241_scopeChecker>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d06242bd_Fn> _1d21ee605_FindFn_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d217c682_FindFn(_self_.safe_ptr<_1d217b241_scopeChecker>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d21494c8_Trait> _1d21ee913_FindTrait_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2928_ident) {
	return _1d217c990_FindTrait(_self_.safe_ptr<_1d217b241_scopeChecker>(), _2928_ident);
}
inline jule::Ptr<_1d214bc5b_Enum> _1d21eec21_FindEnum_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3327_ident) {
	return _1d217cc9d_FindEnum(_self_.safe_ptr<_1d217b241_scopeChecker>(), _3327_ident);
}
inline jule::Ptr<_1d214d356_TypeEnum> _1d220002e_FindTypeEnum_Lookup_0(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3731_ident) {
	return _1d217d0ab_FindTypeEnum(_self_.safe_ptr<_1d217b241_scopeChecker>(), _3731_ident);
}
inline jule::Ptr<_1d219307c_ImportInfo> _1d21ed637_SelectPackage_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _932_selector) {
	return _1d2193588_SelectPackage(_self_.safe_ptr<_1d219307c_ImportInfo>(), _932_selector);
}
inline jule::Ptr<_1d21bb65a_Var> _1d21ed9de_FindVar_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d2193940_FindVar(_self_.safe_ptr<_1d219307c_ImportInfo>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21edd96_FindTypeAlias_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d2193ce7_FindTypeAlias(_self_.safe_ptr<_1d219307c_ImportInfo>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d060ddbd_Struct> _1d21ee24d_FindStruct_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d219419e_FindStruct(_self_.safe_ptr<_1d219307c_ImportInfo>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d06242bd_Fn> _1d21ee605_FindFn_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d2194556_FindFn(_self_.safe_ptr<_1d219307c_ImportInfo>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d21494c8_Trait> _1d21ee913_FindTrait_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2928_ident) {
	return _1d2194864_FindTrait(_self_.safe_ptr<_1d219307c_ImportInfo>(), _2928_ident);
}
inline jule::Ptr<_1d214bc5b_Enum> _1d21eec21_FindEnum_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3327_ident) {
	return _1d2194b72_FindEnum(_self_.safe_ptr<_1d219307c_ImportInfo>(), _3327_ident);
}
inline jule::Ptr<_1d214d356_TypeEnum> _1d220002e_FindTypeEnum_Lookup_1(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3731_ident) {
	return _1d2194e80_FindTypeEnum(_self_.safe_ptr<_1d219307c_ImportInfo>(), _3731_ident);
}
inline jule::Ptr<_1d219307c_ImportInfo> _1d21ed637_SelectPackage_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _932_selector) {
	return _1d219617e_SelectPackage(_self_.safe_ptr<_1d2195bb7_Package>(), _932_selector);
}
inline jule::Ptr<_1d21bb65a_Var> _1d21ed9de_FindVar_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d2196536_FindVar(_self_.safe_ptr<_1d2195bb7_Package>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21edd96_FindTypeAlias_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d21968dd_FindTypeAlias(_self_.safe_ptr<_1d2195bb7_Package>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d060ddbd_Struct> _1d21ee24d_FindStruct_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d2196c95_FindStruct(_self_.safe_ptr<_1d2195bb7_Package>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d06242bd_Fn> _1d21ee605_FindFn_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d219714c_FindFn(_self_.safe_ptr<_1d2195bb7_Package>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d21494c8_Trait> _1d21ee913_FindTrait_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2928_ident) {
	return _1d219745a_FindTrait(_self_.safe_ptr<_1d2195bb7_Package>(), _2928_ident);
}
inline jule::Ptr<_1d214bc5b_Enum> _1d21eec21_FindEnum_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3327_ident) {
	return _1d2197768_FindEnum(_self_.safe_ptr<_1d2195bb7_Package>(), _3327_ident);
}
inline jule::Ptr<_1d214d356_TypeEnum> _1d220002e_FindTypeEnum_Lookup_2(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3731_ident) {
	return _1d2197a76_FindTypeEnum(_self_.safe_ptr<_1d2195bb7_Package>(), _3731_ident);
}
inline jule::Ptr<_1d219307c_ImportInfo> _1d21ed637_SelectPackage_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _932_selector) {
	return _1d219b7c2_SelectPackage(_self_.safe_ptr<_1d219b34e_Sema>(), _932_selector);
}
inline jule::Ptr<_1d21bb65a_Var> _1d21ed9de_FindVar_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d219bb79_FindVar(_self_.safe_ptr<_1d219b34e_Sema>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21edd96_FindTypeAlias_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d219c031_FindTypeAlias(_self_.safe_ptr<_1d219b34e_Sema>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d060ddbd_Struct> _1d21ee24d_FindStruct_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d219c3d8_FindStruct(_self_.safe_ptr<_1d219b34e_Sema>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d06242bd_Fn> _1d21ee605_FindFn_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d219c790_FindFn(_self_.safe_ptr<_1d219b34e_Sema>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d21494c8_Trait> _1d21ee913_FindTrait_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2928_ident) {
	return _1d219ca9d_FindTrait(_self_.safe_ptr<_1d219b34e_Sema>(), _2928_ident);
}
inline jule::Ptr<_1d214bc5b_Enum> _1d21eec21_FindEnum_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3327_ident) {
	return _1d219cdab_FindEnum(_self_.safe_ptr<_1d219b34e_Sema>(), _3327_ident);
}
inline jule::Ptr<_1d214d356_TypeEnum> _1d220002e_FindTypeEnum_Lookup_3(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3731_ident) {
	return _1d219d1b9_FindTypeEnum(_self_.safe_ptr<_1d219b34e_Sema>(), _3731_ident);
}
inline jule::Ptr<_1d219307c_ImportInfo> _1d21ed637_SelectPackage_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _932_selector) {
	return _1d0404796_SelectPackage(_self_.safe_ptr<_1d040428a_SymbolTable>(), _932_selector);
}
inline jule::Ptr<_1d21bb65a_Var> _1d21ed9de_FindVar_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1326_ident, jule::Bool _1338_binded) {
	return _1d0404b4d_FindVar(_self_.safe_ptr<_1d040428a_SymbolTable>(), _1326_ident, _1338_binded);
}
inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21edd96_FindTypeAlias_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _1732_ident, jule::Bool _1744_binded) {
	return _1d0405005_FindTypeAlias(_self_.safe_ptr<_1d040428a_SymbolTable>(), _1732_ident, _1744_binded);
}
inline jule::Ptr<_1d060ddbd_Struct> _1d21ee24d_FindStruct_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2129_ident, jule::Bool _2141_binded) {
	return _1d04053ac_FindStruct(_self_.safe_ptr<_1d040428a_SymbolTable>(), _2129_ident, _2141_binded);
}
inline jule::Ptr<_1d06242bd_Fn> _1d21ee605_FindFn_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2525_ident, jule::Bool _2537_binded) {
	return _1d0405764_FindFn(_self_.safe_ptr<_1d040428a_SymbolTable>(), _2525_ident, _2537_binded);
}
inline jule::Ptr<_1d21494c8_Trait> _1d21ee913_FindTrait_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _2928_ident) {
	return _1d0405a72_FindTrait(_self_.safe_ptr<_1d040428a_SymbolTable>(), _2928_ident);
}
inline jule::Ptr<_1d214bc5b_Enum> _1d21eec21_FindEnum_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3327_ident) {
	return _1d0405d80_FindEnum(_self_.safe_ptr<_1d040428a_SymbolTable>(), _3327_ident);
}
inline jule::Ptr<_1d214d356_TypeEnum> _1d220002e_FindTypeEnum_Lookup_4(jule::Trait<_1d2200172_Lookup> _self_, jule::Str _3731_ident) {
	return _1d040618d_FindTypeEnum(_self_.safe_ptr<_1d040428a_SymbolTable>(), _3731_ident);
}
inline jule::Str _1d2a34e7e_Name_CommonFlag_0(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84c6363_Name(_self_.safe_ptr<_1b84c6077_Flag>());
}
inline jule::I32 _1d2a3516b_Short_CommonFlag_0(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84c6709_Short(_self_.safe_ptr<_1b84c6077_Flag>());
}
inline jule::Str _1d2a64871_What_CommonFlag_0(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84c6495_What(_self_.safe_ptr<_1b84c6077_Flag>());
}
inline void _1d2a64a4c_Reset_CommonFlag_0(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	_1b84c65c7_Reset(_self_.safe_ptr<_1b84c6077_Flag>());
}
inline jule::Str _1d2a34e7e_Name_CommonFlag_1(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84c9597_Name(_self_.safe_ptr<_1b84c9a09_Flag>());
}
inline jule::I32 _1d2a3516b_Short_CommonFlag_1(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84ca059_Short(_self_.safe_ptr<_1b84c9a09_Flag>());
}
inline jule::Str _1d2a64871_What_CommonFlag_1(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84c9ce5_What(_self_.safe_ptr<_1b84c9a09_Flag>());
}
inline void _1d2a64a4c_Reset_CommonFlag_1(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	_1b84c9e27_Reset(_self_.safe_ptr<_1b84c9a09_Flag>());
}
inline jule::Str _1d2a34e7e_Name_CommonFlag_2(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84ccc4e_Name(_self_.safe_ptr<_1b84cd1b1_Flag>());
}
inline jule::I32 _1d2a3516b_Short_CommonFlag_2(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84cd711_Short(_self_.safe_ptr<_1b84cd1b1_Flag>());
}
inline jule::Str _1d2a64871_What_CommonFlag_2(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84cd49c_What(_self_.safe_ptr<_1b84cd1b1_Flag>());
}
inline void _1d2a64a4c_Reset_CommonFlag_2(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	_1b84cd5ce_Reset(_self_.safe_ptr<_1b84cd1b1_Flag>());
}
inline jule::Str _1d2a34e7e_Name_CommonFlag_3(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84d144a_Name(_self_.safe_ptr<_1b84d18ac_Flag>());
}
inline jule::I32 _1d2a3516b_Short_CommonFlag_3(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84d1e0c_Short(_self_.safe_ptr<_1b84d18ac_Flag>());
}
inline jule::Str _1d2a64871_What_CommonFlag_3(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84d1b98_What(_self_.safe_ptr<_1b84d18ac_Flag>());
}
inline void _1d2a64a4c_Reset_CommonFlag_3(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	_1b84d1cca_Reset(_self_.safe_ptr<_1b84d18ac_Flag>());
}
inline jule::Str _1d2a34e7e_Name_CommonFlag_4(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84d4b02_Name(_self_.safe_ptr<_1b84d5064_Flag>());
}
inline jule::I32 _1d2a3516b_Short_CommonFlag_4(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84d55b4_Short(_self_.safe_ptr<_1b84d5064_Flag>());
}
inline jule::Str _1d2a64871_What_CommonFlag_4(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	return _1b84d5350_What(_self_.safe_ptr<_1b84d5064_Flag>());
}
inline void _1d2a64a4c_Reset_CommonFlag_4(jule::Trait<_1d2a64b90_CommonFlag> _self_) {
	_1b84d5482_Reset(_self_.safe_ptr<_1b84d5064_Flag>());
}


static _1d21502d1_comptimeRangeKindMptrData _1d21502d1_comptimeRangeKind_mptr_data[] = {
	{
		._1d214ea61_ready=_1d214ea61_ready_comptimeRangeKind_0,
		._1d214ee29_step=_1d214ee29_step_comptimeRangeKind_0,
		._1d215018d_len=_1d215018d_len_comptimeRangeKind_0,
	},
	{
		._1d214ea61_ready=_1d214ea61_ready_comptimeRangeKind_1,
		._1d214ee29_step=_1d214ee29_step_comptimeRangeKind_1,
		._1d215018d_len=_1d215018d_len_comptimeRangeKind_1,
	},
	{
		._1d214ea61_ready=_1d214ea61_ready_comptimeRangeKind_2,
		._1d214ee29_step=_1d214ee29_step_comptimeRangeKind_2,
		._1d215018d_len=_1d215018d_len_comptimeRangeKind_2,
	},
	{
		._1d214ea61_ready=_1d214ea61_ready_comptimeRangeKind_3,
		._1d214ee29_step=_1d214ee29_step_comptimeRangeKind_3,
		._1d215018d_len=_1d215018d_len_comptimeRangeKind_3,
	},
	{
		._1d214ea61_ready=_1d214ea61_ready_comptimeRangeKind_4,
		._1d214ee29_step=_1d214ee29_step_comptimeRangeKind_4,
		._1d215018d_len=_1d215018d_len_comptimeRangeKind_4,
	},
	{
		._1d214ea61_ready=_1d214ea61_ready_comptimeRangeKind_5,
		._1d214ee29_step=_1d214ee29_step_comptimeRangeKind_5,
		._1d215018d_len=_1d215018d_len_comptimeRangeKind_5,
	},
};
static _1d21903cb_ImporterMptrData _1d21903cb_Importer_mptr_data[] = {
	{
		._1d218e2ed_SetModPath=_1d218e2ed_SetModPath_Importer_0,
		._1d218e540_GetModPath=_1d218e540_GetModPath_Importer_0,
		._1d218e84d_ModById=_1d218e84d_ModById_Importer_0,
		._1d218eb5b_GetImport=_1d218eb5b_GetImport_Importer_0,
		._1d2190013_ImportPackage=_1d2190013_ImportPackage_Importer_0,
		._1d2190288_Imported=_1d2190288_Imported_Importer_0,
	},
};
static _1d21d18d4_KindMptrData _1d21d18d4_Kind_mptr_data[] = {
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_0,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_0,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_1,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_1,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_2,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_2,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_3,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_3,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_4,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_4,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_5,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_5,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_6,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_6,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_7,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_7,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_8,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_8,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_9,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_9,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_10,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_10,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_11,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_11,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_12,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_12,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_13,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_13,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_14,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_14,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_15,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_15,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_16,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_16,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_17,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_17,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_18,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_18,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_19,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_19,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_20,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_20,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_21,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_21,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_22,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_22,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_23,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_23,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_24,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_24,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_25,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_25,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_26,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_26,
	},
	{
		._1d21d1483_Str=_1d21d1483_Str_Kind_27,
		._1d21d1791_Equal=_1d21d1791_Equal_Kind_27,
	},
};
static _1d2200172_LookupMptrData _1d2200172_Lookup_mptr_data[] = {
	{
		._1d21ed637_SelectPackage=_1d21ed637_SelectPackage_Lookup_0,
		._1d21ed9de_FindVar=_1d21ed9de_FindVar_Lookup_0,
		._1d21edd96_FindTypeAlias=_1d21edd96_FindTypeAlias_Lookup_0,
		._1d21ee24d_FindStruct=_1d21ee24d_FindStruct_Lookup_0,
		._1d21ee605_FindFn=_1d21ee605_FindFn_Lookup_0,
		._1d21ee913_FindTrait=_1d21ee913_FindTrait_Lookup_0,
		._1d21eec21_FindEnum=_1d21eec21_FindEnum_Lookup_0,
		._1d220002e_FindTypeEnum=_1d220002e_FindTypeEnum_Lookup_0,
	},
	{
		._1d21ed637_SelectPackage=_1d21ed637_SelectPackage_Lookup_1,
		._1d21ed9de_FindVar=_1d21ed9de_FindVar_Lookup_1,
		._1d21edd96_FindTypeAlias=_1d21edd96_FindTypeAlias_Lookup_1,
		._1d21ee24d_FindStruct=_1d21ee24d_FindStruct_Lookup_1,
		._1d21ee605_FindFn=_1d21ee605_FindFn_Lookup_1,
		._1d21ee913_FindTrait=_1d21ee913_FindTrait_Lookup_1,
		._1d21eec21_FindEnum=_1d21eec21_FindEnum_Lookup_1,
		._1d220002e_FindTypeEnum=_1d220002e_FindTypeEnum_Lookup_1,
	},
	{
		._1d21ed637_SelectPackage=_1d21ed637_SelectPackage_Lookup_2,
		._1d21ed9de_FindVar=_1d21ed9de_FindVar_Lookup_2,
		._1d21edd96_FindTypeAlias=_1d21edd96_FindTypeAlias_Lookup_2,
		._1d21ee24d_FindStruct=_1d21ee24d_FindStruct_Lookup_2,
		._1d21ee605_FindFn=_1d21ee605_FindFn_Lookup_2,
		._1d21ee913_FindTrait=_1d21ee913_FindTrait_Lookup_2,
		._1d21eec21_FindEnum=_1d21eec21_FindEnum_Lookup_2,
		._1d220002e_FindTypeEnum=_1d220002e_FindTypeEnum_Lookup_2,
	},
	{
		._1d21ed637_SelectPackage=_1d21ed637_SelectPackage_Lookup_3,
		._1d21ed9de_FindVar=_1d21ed9de_FindVar_Lookup_3,
		._1d21edd96_FindTypeAlias=_1d21edd96_FindTypeAlias_Lookup_3,
		._1d21ee24d_FindStruct=_1d21ee24d_FindStruct_Lookup_3,
		._1d21ee605_FindFn=_1d21ee605_FindFn_Lookup_3,
		._1d21ee913_FindTrait=_1d21ee913_FindTrait_Lookup_3,
		._1d21eec21_FindEnum=_1d21eec21_FindEnum_Lookup_3,
		._1d220002e_FindTypeEnum=_1d220002e_FindTypeEnum_Lookup_3,
	},
	{
		._1d21ed637_SelectPackage=_1d21ed637_SelectPackage_Lookup_4,
		._1d21ed9de_FindVar=_1d21ed9de_FindVar_Lookup_4,
		._1d21edd96_FindTypeAlias=_1d21edd96_FindTypeAlias_Lookup_4,
		._1d21ee24d_FindStruct=_1d21ee24d_FindStruct_Lookup_4,
		._1d21ee605_FindFn=_1d21ee605_FindFn_Lookup_4,
		._1d21ee913_FindTrait=_1d21ee913_FindTrait_Lookup_4,
		._1d21eec21_FindEnum=_1d21eec21_FindEnum_Lookup_4,
		._1d220002e_FindTypeEnum=_1d220002e_FindTypeEnum_Lookup_4,
	},
};
static _1d2a64b90_CommonFlagMptrData _1d2a64b90_CommonFlag_mptr_data[] = {
	{
		._1d2a34e7e_Name=_1d2a34e7e_Name_CommonFlag_0,
		._1d2a3516b_Short=_1d2a3516b_Short_CommonFlag_0,
		._1d2a64871_What=_1d2a64871_What_CommonFlag_0,
		._1d2a64a4c_Reset=_1d2a64a4c_Reset_CommonFlag_0,
	},
	{
		._1d2a34e7e_Name=_1d2a34e7e_Name_CommonFlag_1,
		._1d2a3516b_Short=_1d2a3516b_Short_CommonFlag_1,
		._1d2a64871_What=_1d2a64871_What_CommonFlag_1,
		._1d2a64a4c_Reset=_1d2a64a4c_Reset_CommonFlag_1,
	},
	{
		._1d2a34e7e_Name=_1d2a34e7e_Name_CommonFlag_2,
		._1d2a3516b_Short=_1d2a3516b_Short_CommonFlag_2,
		._1d2a64871_What=_1d2a64871_What_CommonFlag_2,
		._1d2a64a4c_Reset=_1d2a64a4c_Reset_CommonFlag_2,
	},
	{
		._1d2a34e7e_Name=_1d2a34e7e_Name_CommonFlag_3,
		._1d2a3516b_Short=_1d2a3516b_Short_CommonFlag_3,
		._1d2a64871_What=_1d2a64871_What_CommonFlag_3,
		._1d2a64a4c_Reset=_1d2a64a4c_Reset_CommonFlag_3,
	},
	{
		._1d2a34e7e_Name=_1d2a34e7e_Name_CommonFlag_4,
		._1d2a3516b_Short=_1d2a3516b_Short_CommonFlag_4,
		._1d2a64871_What=_1d2a64871_What_CommonFlag_4,
		._1d2a64a4c_Reset=_1d2a64a4c_Reset_CommonFlag_4,
	},
};


void __jule_any_type0_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type0_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_any_type0_dealloc, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type0_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type0 && __jule_any_type0_eq(any.data.alloc, (void*)&other); }
void __jule_any_type1_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other); }
jule::Str __jule_any_type1_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_any_type1_dealloc, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type1_compare(const jule::Any &any, const jule::I32 &other) { return any.type == &__jule_any_type1 && __jule_any_type1_eq(any.data.alloc, (void*)&other); }
void __jule_any_type2_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other); }
jule::Str __jule_any_type2_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_any_type2_dealloc, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type2_compare(const jule::Any &any, const jule::I64 &other) { return any.type == &__jule_any_type2 && __jule_any_type2_eq(any.data.alloc, (void*)&other); }
void __jule_any_type3_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other); }
jule::Str __jule_any_type3_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_any_type3_dealloc, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type3_compare(const jule::Any &any, const jule::U64 &other) { return any.type == &__jule_any_type3 && __jule_any_type3_eq(any.data.alloc, (void*)&other); }
void __jule_any_type4_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other); }
jule::Str __jule_any_type4_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_any_type4_dealloc, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type4_compare(const jule::Any &any, const jule::Bool &other) { return any.type == &__jule_any_type4 && __jule_any_type4_eq(any.data.alloc, (void*)&other); }
void __jule_any_type5_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other); }
jule::Str __jule_any_type5_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_any_type5_dealloc, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type5_compare(const jule::Any &any, const jule::Str &other) { return any.type == &__jule_any_type5 && __jule_any_type5_eq(any.data.alloc, (void*)&other); }
void __jule_any_type6_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other); }
jule::Str __jule_any_type6_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_any_type6_dealloc, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
jule::Bool __jule_any_type6_compare(const jule::Any &any, const jule::F64 &other) { return any.type == &__jule_any_type6 && __jule_any_type6_eq(any.data.alloc, (void*)&other); }
void __jule_any_type7_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0626e6e_FnIns>().dealloc(); }
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_any_type7_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1d0626e6e_FnIns> &other) { return any.type == &__jule_any_type7 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type8_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21bb65a_Var>().dealloc(); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_any_type8_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1d21bb65a_Var> &other) { return any.type == &__jule_any_type8 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type9_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0611bd4_StructIns>().dealloc(); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_any_type9_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1d0611bd4_StructIns> &other) { return any.type == &__jule_any_type9 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type10_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21494c8_Trait>().dealloc(); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_any_type10_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1d21494c8_Trait> &other) { return any.type == &__jule_any_type10 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type11_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d060a0d9_Impl>().dealloc(); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_any_type11_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1d060a0d9_Impl> &other) { return any.type == &__jule_any_type11 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type12_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06054d0_TypeAliasDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_any_type12_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1d06054d0_TypeAliasDecl> &other) { return any.type == &__jule_any_type12 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type13_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0609308_StructDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_any_type13_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1d0609308_StructDecl> &other) { return any.type == &__jule_any_type13 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type14_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0600b90_FnDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_any_type14_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1d0600b90_FnDecl> &other) { return any.type == &__jule_any_type14 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type15_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06099ce_TraitDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_any_type15_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1d06099ce_TraitDecl> &other) { return any.type == &__jule_any_type15 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type16_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0601b6e_VarDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_any_type16_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1d0601b6e_VarDecl> &other) { return any.type == &__jule_any_type16 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type17_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0607867_EnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_any_type17_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1d0607867_EnumDecl> &other) { return any.type == &__jule_any_type17 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type18_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0608747_TypeEnumDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_any_type18_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type18_compare(const jule::Any &any, const jule::Ptr<_1d0608747_TypeEnumDecl> &other) { return any.type == &__jule_any_type18 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type19_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1e76e5cc3_Const>().dealloc(); }
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_any_type19_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1e76e5cc3_Const> &other) { return any.type == &__jule_any_type19 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type20_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05deb29_IdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_any_type20_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1d05deb29_IdentTypeDecl> &other) { return any.type == &__jule_any_type20 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type21_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d2176d52_Label>().dealloc(); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_any_type21_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1d2176d52_Label> &other) { return any.type == &__jule_any_type21 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type22_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d2174613_Scope>().dealloc(); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_any_type22_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1d2174613_Scope> &other) { return any.type == &__jule_any_type22 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type23_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d062042e_BuiltinErrorCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_any_type23_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1d062042e_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type23 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type24_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0408c95_Data>().dealloc(); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_any_type24_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1d0408c95_Data> &other) { return any.type == &__jule_any_type24 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type25_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06214c9_BackendEmitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_any_type25_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1d06214c9_BackendEmitExprModel> &other) { return any.type == &__jule_any_type25 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type26_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061ddde_BuiltinAppendCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_any_type26_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type26 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type27_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061c7c2_BuiltinCloneCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_any_type27_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel> &other) { return any.type == &__jule_any_type27 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type28_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061c0b8_BuiltinOutCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_any_type28_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel> &other) { return any.type == &__jule_any_type28 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type29_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061c4a3_BuiltinOutlnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_any_type29_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel> &other) { return any.type == &__jule_any_type29 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type30_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061d097_BuiltinPanicCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_any_type30_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1d061d097_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type30 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type31_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061d54d_BuiltinAssertCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_any_type31_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel> &other) { return any.type == &__jule_any_type31 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type32_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0620044_BuiltinCopyCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_any_type32_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1d0620044_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type32 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type33_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061ebd1_BuiltinDeleteCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_any_type33_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type33 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type34_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06217b5_FreeExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_any_type34_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1d06217b5_FreeExprModel> &other) { return any.type == &__jule_any_type34 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type35_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0617eb5_FnCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_any_type35_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1d0617eb5_FnCallExprModel> &other) { return any.type == &__jule_any_type35 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type36_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d217516e_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_any_type36_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1d217516e_Conditional> &other) { return any.type == &__jule_any_type36 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type37_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d217545a_InfIter>().dealloc(); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_any_type37_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1d217545a_InfIter> &other) { return any.type == &__jule_any_type37 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type38_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0602e5b_WhileKind>().dealloc(); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_any_type38_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1d0602e5b_WhileKind> &other) { return any.type == &__jule_any_type38 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type39_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21758cd_WhileIter>().dealloc(); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_any_type39_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1d21758cd_WhileIter> &other) { return any.type == &__jule_any_type39 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type40_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06037ec_RangeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_any_type40_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1d06037ec_RangeKind> &other) { return any.type == &__jule_any_type40 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type41_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21762b3_RangeIter>().dealloc(); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_any_type41_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1d21762b3_RangeIter> &other) { return any.type == &__jule_any_type41 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type42_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21766ae_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_any_type42_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1d21766ae_ContSt> &other) { return any.type == &__jule_any_type42 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type43_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d217713d_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_any_type43_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1d217713d_GotoSt> &other) { return any.type == &__jule_any_type43 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type44_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21774e5_Postfix>().dealloc(); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_any_type44_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1d21774e5_Postfix> &other) { return any.type == &__jule_any_type44 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type45_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d2177968_Assign>().dealloc(); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_any_type45_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1d2177968_Assign> &other) { return any.type == &__jule_any_type45 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type46_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06187e0_IndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_any_type46_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1d06187e0_IndexingExprModel> &other) { return any.type == &__jule_any_type46 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type47_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d2177d20_MultiAssign>().dealloc(); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_any_type47_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1d2177d20_MultiAssign> &other) { return any.type == &__jule_any_type47 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type48_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d217842a_Match>().dealloc(); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_any_type48_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1d217842a_Match> &other) { return any.type == &__jule_any_type48 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type49_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d217952a_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_any_type49_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1d217952a_FallSt> &other) { return any.type == &__jule_any_type49 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type50_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d2176a66_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_any_type50_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1d2176a66_BreakSt> &other) { return any.type == &__jule_any_type50 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type51_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d217989e_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_any_type51_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1d217989e_RetSt> &other) { return any.type == &__jule_any_type51 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type52_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05ee199_ScopeTree>().dealloc(); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_any_type52_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1d05ee199_ScopeTree> &other) { return any.type == &__jule_any_type52 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type53_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e36dd_Expr>().dealloc(); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_any_type53_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1d05e36dd_Expr> &other) { return any.type == &__jule_any_type53 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type54_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0604d09_Conditional>().dealloc(); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_any_type54_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1d0604d09_Conditional> &other) { return any.type == &__jule_any_type54 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type55_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0602686_Iter>().dealloc(); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_any_type55_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1d0602686_Iter> &other) { return any.type == &__jule_any_type55 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type56_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d060405b_ContSt>().dealloc(); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_any_type56_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1d060405b_ContSt> &other) { return any.type == &__jule_any_type56 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type57_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05eb8b1_LabelSt>().dealloc(); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_any_type57_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1d05eb8b1_LabelSt> &other) { return any.type == &__jule_any_type57 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type58_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05ebc68_GotoSt>().dealloc(); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_any_type58_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1d05ebc68_GotoSt> &other) { return any.type == &__jule_any_type58 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type59_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05ecb9d_AssignSt>().dealloc(); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_any_type59_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1d05ecb9d_AssignSt> &other) { return any.type == &__jule_any_type59 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type60_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0606129_MatchCase>().dealloc(); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_any_type60_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1d0606129_MatchCase> &other) { return any.type == &__jule_any_type60 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type61_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05ec054_FallSt>().dealloc(); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_any_type61_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1d05ec054_FallSt> &other) { return any.type == &__jule_any_type61 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type62_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0603ba4_BreakSt>().dealloc(); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_any_type62_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1d0603ba4_BreakSt> &other) { return any.type == &__jule_any_type62 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type63_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0602026_RetSt>().dealloc(); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_any_type63_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1d0602026_RetSt> &other) { return any.type == &__jule_any_type63 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type64_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e407e_UseExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_any_type64_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1d05e407e_UseExpr> &other) { return any.type == &__jule_any_type64 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type65_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06242bd_Fn>().dealloc(); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_any_type65_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1d06242bd_Fn> &other) { return any.type == &__jule_any_type65 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type66_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d060ddbd_Struct>().dealloc(); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_any_type66_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1d060ddbd_Struct> &other) { return any.type == &__jule_any_type66 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type67_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21d10ed_TypeAlias>().dealloc(); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_any_type67_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1d21d10ed_TypeAlias> &other) { return any.type == &__jule_any_type67 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type68_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d214bc5b_Enum>().dealloc(); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_any_type68_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1d214bc5b_Enum> &other) { return any.type == &__jule_any_type68 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type69_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d214d356_TypeEnum>().dealloc(); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_any_type69_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1d214d356_TypeEnum> &other) { return any.type == &__jule_any_type69 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type70_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061a050_TraitSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_any_type70_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1d061a050_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type70 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type71_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061a836_StructSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_any_type71_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1d061a836_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type71 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type72_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061b381_CommonIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_any_type72_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1d061b381_CommonIdentExprModel> &other) { return any.type == &__jule_any_type72 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type73_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061b8e2_CommonSubIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_any_type73_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1d061b8e2_CommonSubIdentExprModel> &other) { return any.type == &__jule_any_type73 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type74_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0616502_UnaryExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_any_type74_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1d0616502_UnaryExprModel> &other) { return any.type == &__jule_any_type74 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type75_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e171e_ArrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_any_type75_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1d05e171e_ArrTypeDecl> &other) { return any.type == &__jule_any_type75 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type76_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e0971_SlcTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_any_type76_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1d05e0971_SlcTypeDecl> &other) { return any.type == &__jule_any_type76 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type77_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e1048_PtrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_any_type77_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1d05e1048_PtrTypeDecl> &other) { return any.type == &__jule_any_type77 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type78_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e0575_SptrTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_any_type78_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1d05e0575_SptrTypeDecl> &other) { return any.type == &__jule_any_type78 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type79_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e1e28_MapTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_any_type79_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1d05e1e28_MapTypeDecl> &other) { return any.type == &__jule_any_type79 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type80_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e0c5c_TupleTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_any_type80_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1d05e0c5c_TupleTypeDecl> &other) { return any.type == &__jule_any_type80 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type81_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e5d94_VariadicExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_any_type81_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1d05e5d94_VariadicExpr> &other) { return any.type == &__jule_any_type81 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type82_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061836c_SliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_any_type82_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1d061836c_SliceExprModel> &other) { return any.type == &__jule_any_type82 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type83_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e8083_FieldExprPair>().dealloc(); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_any_type83_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1d05e8083_FieldExprPair> &other) { return any.type == &__jule_any_type83 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type84_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e9639_KeyValPair>().dealloc(); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_any_type84_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1d05e9639_KeyValPair> &other) { return any.type == &__jule_any_type84 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type85_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e52d3_IdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_any_type85_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1d05e52d3_IdentExpr> &other) { return any.type == &__jule_any_type85 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type86_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e436a_TupleExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_any_type86_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1d05e436a_TupleExpr> &other) { return any.type == &__jule_any_type86 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type87_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061bbde_TupleExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_any_type87_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1d061bbde_TupleExprModel> &other) { return any.type == &__jule_any_type87 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type88_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0620d03_RuneExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_any_type88_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1d0620d03_RuneExprModel> &other) { return any.type == &__jule_any_type88 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type89_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d21d1d46_TypeKind>().dealloc(); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_any_type89_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1d21d1d46_TypeKind> &other) { return any.type == &__jule_any_type89 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type90_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061b095_ArrayExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_any_type90_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1d061b095_ArrayExprModel> &other) { return any.type == &__jule_any_type90 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type91_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e6a76_SubIdentExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_any_type91_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1d05e6a76_SubIdentExpr> &other) { return any.type == &__jule_any_type91 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type92_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05dee15_SubIdentTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_any_type92_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1d05dee15_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type92 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type93_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e59dc_UnaryExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_any_type93_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1d05e59dc_UnaryExpr> &other) { return any.type == &__jule_any_type93 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type94_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05de563_TypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_any_type94_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1d05de563_TypeDecl> &other) { return any.type == &__jule_any_type94 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type95_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e6603_NsSelectionExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_any_type95_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1d05e6603_NsSelectionExpr> &other) { return any.type == &__jule_any_type95 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type96_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e0289_NamespaceTypeDecl>().dealloc(); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_any_type96_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1d05e0289_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type96 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type97_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0619a11_SlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_any_type97_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1d0619a11_SlicingExprModel> &other) { return any.type == &__jule_any_type97 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type98_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0617613_CastingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_any_type98_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1d0617613_CastingExprModel> &other) { return any.type == &__jule_any_type98 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type99_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e9d21_SliceExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_any_type99_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1d05e9d21_SliceExpr> &other) { return any.type == &__jule_any_type99 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type100_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0616ca5_StructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_any_type100_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1d0616ca5_StructLitExprModel> &other) { return any.type == &__jule_any_type100 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type101_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061abcc_StructStaticIdentExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_any_type101_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1d061abcc_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type101 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type102_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06194c2_MapExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_any_type102_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1d06194c2_MapExprModel> &other) { return any.type == &__jule_any_type102 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type103_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0618b97_AnonFnExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_any_type103_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1d0618b97_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type104_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e39c9_RangeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_any_type104_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1d05e39c9_RangeExpr> &other) { return any.type == &__jule_any_type104 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type105_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e4722_LitExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_any_type105_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1d05e4722_LitExpr> &other) { return any.type == &__jule_any_type105 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type106_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e4d60_UnsafeExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_any_type106_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1d05e4d60_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type107_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05ea690_IndexingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_any_type107_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1d05ea690_IndexingExpr> &other) { return any.type == &__jule_any_type107 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type108_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05eac9a_SlicingExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_any_type108_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1d05eac9a_SlicingExpr> &other) { return any.type == &__jule_any_type108 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type109_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e624b_CastExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_any_type109_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1d05e624b_CastExpr> &other) { return any.type == &__jule_any_type109 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type110_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e8858_StructLit>().dealloc(); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_any_type110_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1d05e8858_StructLit> &other) { return any.type == &__jule_any_type110 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type111_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e7604_FnCallExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_any_type111_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1d05e7604_FnCallExpr> &other) { return any.type == &__jule_any_type111 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type112_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e8ccb_BraceLit>().dealloc(); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_any_type112_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1d05e8ccb_BraceLit> &other) { return any.type == &__jule_any_type112 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type113_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d05e6ee9_BinopExpr>().dealloc(); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_any_type113_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1d05e6ee9_BinopExpr> &other) { return any.type == &__jule_any_type113 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type114_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061614a_BinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_any_type114_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1d061614a_BinopExprModel> &other) { return any.type == &__jule_any_type114 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type115_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06170b3_AllocStructLitExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_any_type115_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1d06170b3_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type116_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061cbac_BuiltinNewCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_any_type116_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1d061cbac_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type117_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061da04_BuiltinMakeCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_any_type117_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1d061da04_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type118_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061e20d_BuiltinLenCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_any_type118_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1d061e20d_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type119_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d061e52c_BuiltinCapCallExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_any_type119_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1d061e52c_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type120_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d062072b_SizeofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_any_type120_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1d062072b_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type121_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0620a17_AlignofExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_any_type121_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1d0620a17_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type122_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0621111_IntegratedToStrExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_any_type122_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1d0621111_IntegratedToStrExprModel> &other) { return any.type == &__jule_any_type122 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type123_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0656b08_MutSlicingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_any_type123_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1d0656b08_MutSlicingExprModel> &other) { return any.type == &__jule_any_type123 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type124_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0656ed2_StrInsertBeginExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_any_type124_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1d0656ed2_StrInsertBeginExprModel> &other) { return any.type == &__jule_any_type124 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type125_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0655ab3_StrAppendExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_any_type125_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1d0655ab3_StrAppendExprModel> &other) { return any.type == &__jule_any_type125 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type126_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06565b9_PushToSliceExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_any_type126_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1d06565b9_PushToSliceExprModel> &other) { return any.type == &__jule_any_type126 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type127_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d06556ea_StrCompExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_any_type127_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1d06556ea_StrCompExprModel> &other) { return any.type == &__jule_any_type127 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type128_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0655d9e_UnsafeBinopExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_any_type128_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1d0655d9e_UnsafeBinopExprModel> &other) { return any.type == &__jule_any_type128 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type129_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1d0656234_UnsafeIndexingExprModel>().dealloc(); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_any_type129_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1d0656234_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type129 && jule::ptr_equal(any.data.alloc, other.alloc); }
void __jule_any_type130_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
jule::Bool __jule_any_type130_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other); }
jule::Str __jule_any_type130_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_any_type130_dealloc, .eq=__jule_any_type130_eq, .to_str=__jule_any_type130_to_str};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::U8 &other) { return any.type == &__jule_any_type130 && __jule_any_type130_eq(any.data.alloc, (void*)&other); }
void __jule_any_type131_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
jule::Bool __jule_any_type131_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other); }
jule::Str __jule_any_type131_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_any_type131_dealloc, .eq=__jule_any_type131_eq, .to_str=__jule_any_type131_to_str};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::F32 &other) { return any.type == &__jule_any_type131 && __jule_any_type131_eq(any.data.alloc, (void*)&other); }
void __jule_any_type132_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
jule::Bool __jule_any_type132_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other); }
jule::Str __jule_any_type132_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_any_type132_dealloc, .eq=__jule_any_type132_eq, .to_str=__jule_any_type132_to_str};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::I8 &other) { return any.type == &__jule_any_type132 && __jule_any_type132_eq(any.data.alloc, (void*)&other); }
void __jule_any_type133_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
jule::Bool __jule_any_type133_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other); }
jule::Str __jule_any_type133_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_any_type133_dealloc, .eq=__jule_any_type133_eq, .to_str=__jule_any_type133_to_str};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::I16 &other) { return any.type == &__jule_any_type133 && __jule_any_type133_eq(any.data.alloc, (void*)&other); }
void __jule_any_type134_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
jule::Bool __jule_any_type134_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other); }
jule::Str __jule_any_type134_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_any_type134_dealloc, .eq=__jule_any_type134_eq, .to_str=__jule_any_type134_to_str};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::U16 &other) { return any.type == &__jule_any_type134 && __jule_any_type134_eq(any.data.alloc, (void*)&other); }
void __jule_any_type135_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
jule::Bool __jule_any_type135_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other); }
jule::Str __jule_any_type135_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_any_type135_dealloc, .eq=__jule_any_type135_eq, .to_str=__jule_any_type135_to_str};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::U32 &other) { return any.type == &__jule_any_type135 && __jule_any_type135_eq(any.data.alloc, (void*)&other); }
jule::Array<jule::Array<jule::Str,2>,5> _22bb24970_HelpMap = jule::Array<jule::Array<jule::Str,2>,5>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)}),jule::Array<jule::Str,2>({jule::Str("julenv", 6),jule::Str("Show information about native jule environment", 46)}),jule::Array<jule::Str,2>({jule::Str("mod", 3),jule::Str("Module management", 17)})});
jule::Str _1b5a95a01_OutDir = jule::Str("dist", 4);
jule::Str _1b5a95c76_OutName = jule::Str("ir.cpp", 6);
jule::Str _1b5a96040_Out = jule::Str();
jule::Str _229910818_Compiler = jule::Str();
jule::Str _229911a8e_CompilerPath = jule::Str();
jule::Str _229911cae_CppStd = jule::Str("cpp17", 5);
jule::Bool _229912056_Shadowing = false;
jule::Bool _2299122cb_Transpilation = false;
jule::Bool _229912595_Test = false;
jule::Bool _22991285e_RC = true;
jule::Bool _229912c38_Safety = true;
jule::Bool _229913002_Production = false;
jule::Ptr<_22b87e587_RangeTable> _22b819cc5__L = jule::new_ptr<_22b87e587_RangeTable>(_22b87e587_RangeTable{._field_R16=jule::Slice<_22b87db91_Range16>::make({_22b87db91_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU},_22b87db91_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU},_22b87db91_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU},_22b87db91_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU},_22b87db91_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU},_22b87db91_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU},_22b87db91_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU},_22b87db91_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU},_22b87db91_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU},_22b87db91_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU},_22b87db91_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU},_22b87db91_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU},_22b87db91_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU},_22b87db91_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU},_22b87db91_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU},_22b87db91_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU},_22b87db91_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU},_22b87db91_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU},_22b87db91_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU},_22b87db91_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU},_22b87db91_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU},_22b87db91_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU},_22b87db91_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU},_22b87db91_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU},_22b87db91_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU},_22b87db91_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU},_22b87db91_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU},_22b87db91_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU},_22b87db91_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU},_22b87db91_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU},_22b87db91_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU},_22b87db91_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU},_22b87db91_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU},_22b87db91_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22b87db91_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU},_22b87db91_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU},_22b87db91_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU},_22b87db91_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU},_22b87db91_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU},_22b87db91_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU},_22b87db91_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU},_22b87db91_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22b87e114_Range32>::make({_22b87e114_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU},_22b87e114_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU},_22b87e114_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU},_22b87e114_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU},_22b87e114_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU},_22b87e114_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU},_22b87e114_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU},_22b87e114_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU},_22b87e114_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU},_22b87e114_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU},_22b87e114_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU},_22b87e114_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU},_22b87e114_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU},_22b87e114_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU},_22b87e114_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU},_22b87e114_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU},_22b87e114_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU},_22b87e114_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU},_22b87e114_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU},_22b87e114_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22b87e114_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU},_22b87e114_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU},_22b87e114_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU},_22b87e114_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=6LL});
jule::Ptr<_22b87e587_RangeTable> _22b81acb5__LU = jule::new_ptr<_22b87e587_RangeTable>(_22b87e587_RangeTable{._field_R16=jule::Slice<_22b87db91_Range16>::make({_22b87db91_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU},_22b87db91_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU},_22b87db91_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU},_22b87db91_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU},_22b87db91_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU},_22b87db91_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU},_22b87db91_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU},_22b87db91_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU},_22b87db91_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU},_22b87db91_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU},_22b87db91_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU},_22b87db91_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}}), ._field_R32=jule::Slice<_22b87e114_Range32>::make({_22b87e114_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU},_22b87e114_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU},_22b87e114_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU},_22b87e114_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU},_22b87e114_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU},_22b87e114_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}}), ._field_LatinOffset=3LL});
jule::Array<jule::U8,256> _22b877eed__PROPERTIES = jule::Array<jule::U8,256>({1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,144LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,130LLU,130LLU,136LLU,130LLU,130LLU,130LLU,130LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,132LLU,130LLU,130LLU,136LLU,136LLU,136LLU,130LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,130LLU,130LLU,130LLU,136LLU,130LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,130LLU,136LLU,130LLU,136LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,1LLU,16LLU,130LLU,136LLU,136LLU,136LLU,136LLU,136LLU,130LLU,136LLU,136LLU,224LLU,130LLU,136LLU,0LLU,136LLU,136LLU,136LLU,136LLU,132LLU,132LLU,136LLU,192LLU,130LLU,130LLU,136LLU,132LLU,224LLU,130LLU,132LLU,132LLU,132LLU,130LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,136LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,160LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,136LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU,192LLU});
jule::Array<jule::U8,256> _22b962659_first = jule::Array<jule::U8,256>({240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,240LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,2LLU,19LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,3LLU,35LLU,3LLU,3LLU,52LLU,4LLU,4LLU,4LLU,68LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU,241LLU});
jule::Array<_22b962bdc_acceptRange,16> _22b962eea_acceptRanges = jule::Array<_22b962bdc_acceptRange,16>({_22b962bdc_acceptRange{._field_lo=128LLU, ._field_hi=191LLU},_22b962bdc_acceptRange{._field_lo=160LLU, ._field_hi=191LLU},_22b962bdc_acceptRange{._field_lo=128LLU, ._field_hi=159LLU},_22b962bdc_acceptRange{._field_lo=144LLU, ._field_hi=191LLU},_22b962bdc_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}});
jule::Array<jule::Str,4> _22b9aa075_CppHeaderExts = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
jule::Array<jule::Str,3> _22ba2cd40_CppExts = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
jule::Array<jule::Str,1> _22ba2d060_ObjectiveCppExts = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
jule::Str _22bb20cac_PathStdlib = jule::Str();
jule::Str _22bb20ecc_PathExec = jule::Str();
jule::Str _22bb21285_PathWd = jule::Str();
jule::Str _22bb21593_PathApi = jule::Str();
jule::Str _22bb2185c_Os = jule::Str("darwin", 6);
jule::Str _22bb21b26_Arch = jule::Str("amd64", 5);
jule::Array<jule::I32,5> _22bd6bd93_Spaces = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
jule::Array<jule::Str,6> _22bd6c0b3_UnaryOps = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
jule::Array<jule::Str,12> _22bd6c2d3_BinOps = jule::Array<jule::Str,12>({jule::Str("+", 1),jule::Str("-", 1),jule::Str("*", 1),jule::Str("/", 1),jule::Str("%", 1),jule::Str("&", 1),jule::Str("|", 1),jule::Str("^", 1),jule::Str("<", 1),jule::Str(">", 1),jule::Str("&&", 2),jule::Str("||", 2)});
jule::Array<jule::Str,2> _22be0c7a2_PostfixOps = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
jule::Array<jule::Str,11> _22be0ca9e_AssignOps = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
jule::Array<_22be1998a_kindPair,31> _22be19db9_keywords = jule::Array<_22be1998a_kindPair,31>({_22be1998a_kindPair{._field_kind=jule::Str("true", 4), ._field_id=static_cast<jule::U64>(5LLU)},_22be1998a_kindPair{._field_kind=jule::Str("false", 5), ._field_id=static_cast<jule::U64>(5LLU)},_22be1998a_kindPair{._field_kind=jule::Str("nil", 3), ._field_id=static_cast<jule::U64>(5LLU)},_22be1998a_kindPair{._field_kind=jule::Str("const", 5), ._field_id=static_cast<jule::U64>(8LLU)},_22be1998a_kindPair{._field_kind=jule::Str("ret", 3), ._field_id=static_cast<jule::U64>(3LLU)},_22be1998a_kindPair{._field_kind=jule::Str("type", 4), ._field_id=static_cast<jule::U64>(9LLU)},_22be1998a_kindPair{._field_kind=jule::Str("for", 3), ._field_id=static_cast<jule::U64>(11LLU)},_22be1998a_kindPair{._field_kind=jule::Str("break", 5), ._field_id=static_cast<jule::U64>(12LLU)},_22be1998a_kindPair{._field_kind=jule::Str("continue", 8), ._field_id=static_cast<jule::U64>(13LLU)},_22be1998a_kindPair{._field_kind=jule::Str("in", 2), ._field_id=static_cast<jule::U64>(14LLU)},_22be1998a_kindPair{._field_kind=jule::Str("if", 2), ._field_id=static_cast<jule::U64>(15LLU)},_22be1998a_kindPair{._field_kind=jule::Str("else", 4), ._field_id=static_cast<jule::U64>(16LLU)},_22be1998a_kindPair{._field_kind=jule::Str("use", 3), ._field_id=static_cast<jule::U64>(18LLU)},_22be1998a_kindPair{._field_kind=jule::Str("goto", 4), ._field_id=static_cast<jule::U64>(20LLU)},_22be1998a_kindPair{._field_kind=jule::Str("enum", 4), ._field_id=static_cast<jule::U64>(22LLU)},_22be1998a_kindPair{._field_kind=jule::Str("struct", 6), ._field_id=static_cast<jule::U64>(23LLU)},_22be1998a_kindPair{._field_kind=jule::Str("co", 2), ._field_id=static_cast<jule::U64>(24LLU)},_22be1998a_kindPair{._field_kind=jule::Str("match", 5), ._field_id=static_cast<jule::U64>(25LLU)},_22be1998a_kindPair{._field_kind=jule::Str("self", 4), ._field_id=static_cast<jule::U64>(26LLU)},_22be1998a_kindPair{._field_kind=jule::Str("trait", 5), ._field_id=static_cast<jule::U64>(27LLU)},_22be1998a_kindPair{._field_kind=jule::Str("impl", 4), ._field_id=static_cast<jule::U64>(28LLU)},_22be1998a_kindPair{._field_kind=jule::Str("cpp", 3), ._field_id=static_cast<jule::U64>(29LLU)},_22be1998a_kindPair{._field_kind=jule::Str("fall", 4), ._field_id=static_cast<jule::U64>(30LLU)},_22be1998a_kindPair{._field_kind=jule::Str("fn", 2), ._field_id=static_cast<jule::U64>(31LLU)},_22be1998a_kindPair{._field_kind=jule::Str("let", 3), ._field_id=static_cast<jule::U64>(32LLU)},_22be1998a_kindPair{._field_kind=jule::Str("unsafe", 6), ._field_id=static_cast<jule::U64>(33LLU)},_22be1998a_kindPair{._field_kind=jule::Str("mut", 3), ._field_id=static_cast<jule::U64>(34LLU)},_22be1998a_kindPair{._field_kind=jule::Str("defer", 5), ._field_id=static_cast<jule::U64>(35LLU)},_22be1998a_kindPair{._field_kind=jule::Str("static", 6), ._field_id=static_cast<jule::U64>(36LLU)},_22be1998a_kindPair{._field_kind=jule::Str("error", 5), ._field_id=static_cast<jule::U64>(38LLU)},_22be1998a_kindPair{._field_kind=jule::Str("map", 3), ._field_id=static_cast<jule::U64>(39LLU)}});
jule::Array<_22be1998a_kindPair,39> _22be1a20a_basicOps = jule::Array<_22be1998a_kindPair,39>({_22be1998a_kindPair{._field_kind=jule::Str("::", 2), ._field_id=static_cast<jule::U64>(21LLU)},_22be1998a_kindPair{._field_kind=jule::Str(":", 1), ._field_id=static_cast<jule::U64>(10LLU)},_22be1998a_kindPair{._field_kind=jule::Str(";", 1), ._field_id=static_cast<jule::U64>(4LLU)},_22be1998a_kindPair{._field_kind=jule::Str(",", 1), ._field_id=static_cast<jule::U64>(7LLU)},_22be1998a_kindPair{._field_kind=jule::Str("...", 3), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str(".", 1), ._field_id=static_cast<jule::U64>(19LLU)},_22be1998a_kindPair{._field_kind=jule::Str("+=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("-=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("*=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("/=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("%=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("<<=", 3), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str(">>=", 3), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("^=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("&=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("|=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("==", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("!=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str(">=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("<=", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("&&", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("||", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("<<", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str(">>", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("++", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("--", 2), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("+", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("-", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("*", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("/", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("%", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("&", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("|", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("^", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("!", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("<", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str(">", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("=", 1), ._field_id=static_cast<jule::U64>(6LLU)},_22be1998a_kindPair{._field_kind=jule::Str("#", 1), ._field_id=static_cast<jule::U64>(37LLU)}});
jule::Array<jule::U8,32> _1e767a142__DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
jule::Array<jule::U8,64> _1e767a708__DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
_1e76be42d_floatInfo _1e76be7e6_f32info = _1e76be42d_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
_1e76be42d_floatInfo _1e76beb04_f64info = _1e76be42d_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
jule::Array<jule::Array<jule::U64,2>,696> _1e76c6ec4_detailedPowsOfTen = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
jule::Slice<jule::I64> _1e76c8b52_powtab = jule::Slice<jule::I64>::make({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
jule::Slice<jule::F64> _1e76c96ad_f64pow10 = jule::Slice<jule::F64>::make({1LL,10LL,100LL,1000LL,10000LL,100000LL,1000000LL,10000000LL,100000000LL,1000000000LL,10000000000LL,100000000000LL,1000000000000LL,10000000000000LL,100000000000000LL,1000000000000000LL,10000000000000000LL,100000000000000000LL,1000000000000000000LL,10000000000000000000LLU,100000000000000000000.0,1000000000000000000000.0,10000000000000000000000.0});
jule::Slice<jule::F32> _1e76c99ee_f32pow10 = jule::Slice<jule::F32>::make({1.0f,10.0f,100.0f,1000.0f,10000.0f,100000.0f,1000000.0f,10000000.0f,100000000.0f,1000000000.0f,10000000000.0f});
jule::Array<jule::U64,20> _1e76cca24_u64pow10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
jule::Slice<_1e76d1473_leftCheat> _1e76d18a2_leftCheats = jule::Slice<_1e76d1473_leftCheat>::make({_1e76d1473_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()},_1e76d1473_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("5", 1)},_1e76d1473_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("25", 2)},_1e76d1473_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str("125", 3)},_1e76d1473_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("625", 3)},_1e76d1473_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("3125", 4)},_1e76d1473_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str("15625", 5)},_1e76d1473_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("78125", 5)},_1e76d1473_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("390625", 6)},_1e76d1473_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str("1953125", 7)},_1e76d1473_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("9765625", 7)},_1e76d1473_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("48828125", 8)},_1e76d1473_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("244140625", 9)},_1e76d1473_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str("1220703125", 10)},_1e76d1473_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("6103515625", 10)},_1e76d1473_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("30517578125", 11)},_1e76d1473_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str("152587890625", 12)},_1e76d1473_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("762939453125", 12)},_1e76d1473_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("3814697265625", 13)},_1e76d1473_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str("19073486328125", 14)},_1e76d1473_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("95367431640625", 14)},_1e76d1473_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("476837158203125", 15)},_1e76d1473_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("2384185791015625", 16)},_1e76d1473_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str("11920928955078125", 17)},_1e76d1473_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("59604644775390625", 17)},_1e76d1473_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("298023223876953125", 18)},_1e76d1473_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str("1490116119384765625", 19)},_1e76d1473_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("7450580596923828125", 19)},_1e76d1473_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("37252902984619140625", 20)},_1e76d1473_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str("186264514923095703125", 21)},_1e76d1473_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("931322574615478515625", 21)},_1e76d1473_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("4656612873077392578125", 22)},_1e76d1473_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("23283064365386962890625", 23)},_1e76d1473_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str("116415321826934814453125", 24)},_1e76d1473_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("582076609134674072265625", 24)},_1e76d1473_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("2910383045673370361328125", 25)},_1e76d1473_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str("14551915228366851806640625", 26)},_1e76d1473_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("72759576141834259033203125", 26)},_1e76d1473_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("363797880709171295166015625", 27)},_1e76d1473_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str("1818989403545856475830078125", 28)},_1e76d1473_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("9094947017729282379150390625", 28)},_1e76d1473_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("45474735088646411895751953125", 29)},_1e76d1473_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("227373675443232059478759765625", 30)},_1e76d1473_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str("1136868377216160297393798828125", 31)},_1e76d1473_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("5684341886080801486968994140625", 31)},_1e76d1473_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("28421709430404007434844970703125", 32)},_1e76d1473_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str("142108547152020037174224853515625", 33)},_1e76d1473_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("710542735760100185871124267578125", 33)},_1e76d1473_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("3552713678800500929355621337890625", 34)},_1e76d1473_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str("17763568394002504646778106689453125", 35)},_1e76d1473_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("88817841970012523233890533447265625", 35)},_1e76d1473_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("444089209850062616169452667236328125", 36)},_1e76d1473_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("2220446049250313080847263336181640625", 37)},_1e76d1473_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str("11102230246251565404236316680908203125", 38)},_1e76d1473_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("55511151231257827021181583404541015625", 38)},_1e76d1473_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("277555756156289135105907917022705078125", 39)},_1e76d1473_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str("1387778780781445675529539585113525390625", 40)},_1e76d1473_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("6938893903907228377647697925567626953125", 40)},_1e76d1473_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("34694469519536141888238489627838134765625", 41)},_1e76d1473_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str("173472347597680709441192448139190673828125", 42)},_1e76d1473_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str("867361737988403547205962240695953369140625", 42)}});
jule::I64 _1e76d73e1_BitSize = 0LL;
jule::Str _1e76d76aa_SysInt = jule::Str();
jule::Str _1e76d7974_SysUint = jule::Str();
jule::Slice<jule::Str> _1d216be46_builtinConstraints = jule::Slice<jule::Str>::make({jule::Str("signed", 6),jule::Str("unsigned", 8),jule::Str("float", 5),jule::Str("numeric", 7),jule::Str("mutable", 7),jule::Str("immutable", 9),jule::Str("ordered", 7),jule::Str("comparable", 10)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0640eee_primVoid = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("void", 4)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d064130c_primAny = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("any", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d06415c6_primStr = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("str", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d06418d4_primBool = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("bool", 4)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0641b9d_primUintptr = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("uintptr", 7)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0641e67_primUint = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("uint", 4)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0642231_primInt = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("int", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d064260a_primI8 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("i8", 2)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d06428c4_primI16 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("i16", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0642b8d_primI32 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("i32", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0642e57_primI64 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("i64", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0643221_primU8 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("u8", 2)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d06434da_primU16 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("u16", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d06437a4_primU32 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("u32", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0643a6d_primU64 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("u64", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d0643ee1_primF32 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("f32", 3)), 20)});
jule::Ptr<_1d21d1d46_TypeKind> _1d06442aa_primF64 = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(jule::Str("f64", 3)), 20)});
jule::Bool _1d2203bae_Copy = false;
jule::Bool _1d22039b1_Deadcode = false;
jule::Bool _1d220ea22_Append = false;
jule::Bool _1d22142a7_Math = false;
jule::Bool _1d221450a_Access = false;
jule::Bool _1d22147c4_Inline = false;
jule::Bool _1d2214a8d_Ptr = false;
jule::Bool _1d2214e67_Cond = false;
jule::Bool _1d2215231_Str = false;
jule::Bool _1d07a0cda_exprEnabled = false;
jule::Bool _1d07a100a_scopeEnabled = false;
jule::Array<jule::U64,12> _1b5a6a894_mdays = jule::Array<jule::U64,12>({31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,30LLU,31LLU,30LLU,31LLU,31LLU,29LLU});
jule::Str _1b56e98ca_assignArgName = jule::Str("__jule_assign_arg", 17);
jule::Ptr<_22b87e587_RangeTable> _22b8284ba_Upper = _22b81acb5__LU;
jule::Ptr<_22b87e587_RangeTable> _22b821e64_Letter = _22b819cc5__L;





std::ostream &operator<<(std::ostream &_Stream, _22b87db91_Range16 _Src) {
	_Stream << "Range16{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22b87e114_Range32 _Src) {
	_Stream << "Range32{";
	_Stream << "Lo:" << _Src._field_Lo << ", ";
	_Stream << "Hi:" << _Src._field_Hi << ", ";
	_Stream << "Stride:" << _Src._field_Stride;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22b87e587_RangeTable _Src) {
	_Stream << "RangeTable{";
	_Stream << "R16:" << _Src._field_R16 << ", ";
	_Stream << "R32:" << _Src._field_R32 << ", ";
	_Stream << "LatinOffset:" << _Src._field_LatinOffset;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22b962bdc_acceptRange _Src) {
	_Stream << "acceptRange{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22b9a44e2_index(_22b9a406e_lazyBuff* _self_, jule::I64 _5424_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5424_i];;
	};
	return (*(_self_))._field_path[_5424_i];;
}



inline void _22b9a4767_append(_22b9a406e_lazyBuff* _self_, jule::U8 _6125_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6125_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len(), 0);
		jule::copy(((*(_self_))._field_buff), (static_cast<jule::Slice<jule::U8>>((*(_self_))._field_path.slice(0LL, (*(_self_))._field_w))));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6125_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _22b9a49cb_string(_22b9a406e_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + static_cast<jule::Str>((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}







std::ostream &operator<<(std::ostream &_Stream, _22b9a406e_lazyBuff _Src) {
	_Stream << "lazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "volAndPath:" << _Src._field_volAndPath << ", ";
	_Stream << "volLen:" << _Src._field_volLen;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22a8aadbc_DirEntry _Src) {
	_Stream << "DirEntry{";
	_Stream << "Name:" << _Src._field_Name << ", ";
	_Stream << "Stat:" << _Src._field_Stat;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>> static__22b9a8480_Read(jule::Str _1520_path) {
	jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>> __jule_func_result;
	DIR* _1617_dir = _22a877790_Opendir((&(_1520_path[0LL])));;
	if ((_1617_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>>(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	for (;;) {
		{
			struct dirent* _2117_dirent = _22a87c8a5_Readdir(_1617_dir);;
			if ((_2117_dirent == nullptr)) {
				goto _iter_end_1b649cd97;
			};
			jule::Str _2517_name = _22a867d13_BytePtrToStr(((jule::U8*)(_2117_dirent->d_name)));;
			jule::Ptr<_22a8baa8b_Status> _2621_stat = ({
				auto except = static__22a8ab8a1_Of(_22b9a56d0_Join(jule::Slice<jule::Str>::make({_1520_path,_2517_name})));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>>(except.error);
				} jule::Ptr<_22a8baa8b_Status>(nullptr);});
			});;
			__jule_func_result = jule::alloc_for_append(__jule_func_result,1);__jule_func_result.__push(jule::new_ptr<_22a8aadbc_DirEntry>(_22a8aadbc_DirEntry{._field_Name=_2517_name, ._field_Stat=_2621_stat}));;
		}
	_iter_next_1b649cd97:;
	}
	_iter_end_1b649cd97:;;
	_22a87cb3b_Closedir(_1617_dir);
	return jule::Exceptional<jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional static__22b9a868e_Create(jule::Str _3922_path) {
	if ((_22a87d4bb_Mkdir((&(_3922_path[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22b9a889d_Remove(jule::Str _5122_path) {
	if ((_22a87d763_Rmdir((&(_5122_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22a8ab131_Directory _Src) {
	_Stream << "Directory{";
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22a8b8490_File>> static__22a8a9dee_Open(jule::Str _1820_path, jule::I64 _1831_flag, jule::I64 _1844_mode) {
	jule::I64 _1913_handle = _22a876e76_Open((&(_1820_path[0LL])), static_cast<jule::I64>(_1831_flag), _1844_mode);;
	if ((_1913_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22a8b8490_File>>(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::Ptr<_22a8b8490_File>>(jule::Any(), static__22a8b8902_New(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_1913_handle))));;
}



inline jule::VoidExceptional static__22a8aa10d_Remove(jule::Str _3022_path) {
	if ((_22a87da0a_Unlink((&(_3022_path[0LL]))) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22a8aa51a_Write(_22a8b8490_File* _self_, jule::Slice<jule::U8> _4424_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_4424_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22a8995c5_Write(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_4424_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_4424_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Exceptional<jule::I64> _22a8aa828_Read(_22a8b8490_File* _self_, jule::Slice<jule::U8> _6427_buff) {
	jule::I64 __jule_func_result = 0;
	if ((_6427_buff.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
	};
	__jule_func_result=static_cast<jule::I64>(_22a898d66_Read(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), (&(_6427_buff[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_6427_buff.len()))));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::Ptr<_22a8b8490_File> static__22a8b8902_New(jule::Uintptr _4619_handle) {
	return jule::new_ptr<_22a8b8490_File>(_22a8b8490_File{._field_handle=_4619_handle});;
}



inline jule::Exceptional<jule::Ptr<_22a8b8490_File>> static__22a8b8b99_Create(jule::Str _5622_path) {
	return jule::Exceptional<jule::Ptr<_22a8b8490_File>>(jule::Any(), ({
		auto except = static__22a8a9dee_Open(_5622_path, static_cast<jule::I64>(1538LL), 438LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Ptr<_22a8b8490_File>>(except.error);
		} jule::Ptr<_22a8b8490_File>(nullptr);});
	}));;
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__22a8b8e41_Read(jule::Str _6820_path) {
	jule::Ptr<_22a8baa8b_Status> _6913_s = ({
		auto except = static__22a8ab8a1_Of(_6820_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22a8baa8b_Status>(nullptr);});
	});;
	if ((!(_22a8bb20c_IsReg(_6913_s.ptr())))) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(static_cast<jule::I64>(14LL), &__jule_any_type0));
	};
	if ((_22a8bb471_Size(_6913_s.ptr()) == 0LLU)) {
		return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), jule::Slice<jule::U8>::alloc(0LL, 0LL, 0));;
	};
	jule::Ptr<_22a8b8490_File> _7917_f = ({
		auto except = static__22a8a9dee_Open(_6820_path, static_cast<jule::I64>(0LL), 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} jule::Ptr<_22a8b8490_File>(nullptr);});
	});;
	__JULE_DEFER({
		({
			auto except = _22a8ba096_Close(_7917_f.ptr());
			if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/fs/file.jule:80:17"));
		});
	});;
	jule::Slice<jule::U8> _8217_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::I64>(_22a8bb471_Size(_6913_s.ptr())), static_cast<jule::I64>(_22a8bb471_Size(_6913_s.ptr())), 0);;
	jule::I64 _8313_n = ({
		auto except = _22a8aa828_Read(_7917_f.ptr(), _8217_buff);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>(except.error);
		} 0;});
	});;
	return jule::Exceptional<jule::Slice<jule::U8>>(jule::Any(), _8217_buff.slice(0LL, _8313_n));;
}



inline jule::VoidExceptional static__22a8b9293_Write(jule::Str _9221_path, jule::Slice<jule::U8> _9232_data, jule::I64 _9246_perm) {
	jule::Ptr<_22a8b8490_File> _9317_f = ({
		auto except = static__22a8a9dee_Open(_9221_path, static_cast<jule::I64>(1537LL), _9246_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional(except.error);
		} jule::Ptr<_22a8b8490_File>(nullptr);});
	});;
	({
		auto except = _22a8aa51a_Write(_9317_f.ptr(), _9232_data);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	({
		auto except = _22a8ba096_Close(_9317_f.ptr());
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional static__22a8b95e5_WriteStr(jule::Str _9924_path, jule::Str* _9936_data, jule::I64 _9947_perm) {
	({
		auto except = static__22a8b9293_Write(_9924_path, _22a8b6c85_Stobs(_9936_data), _9947_perm);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22a8b9aac_Seek(_22a8b8490_File* _self_, jule::I64 _11123_offset, jule::I64 _11136_origin) {
	jule::I64 _11213_pos = _22a89897b_Seek(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle)), _11123_offset, static_cast<jule::I64>(_11136_origin));;
	if ((_11213_pos == -1LL)) {
		return jule::Exceptional<jule::I64>(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _11213_pos);;
}



inline jule::Exceptional<jule::I64> _22a8b9dba_WriteStr(_22a8b8490_File* _self_, jule::Str* _12028_data) {
	jule::I64 __jule_func_result = 0;
	__jule_func_result = static_cast<jule::I64>(({
		auto except = _22a8aa51a_Write(_self_, _22a8b6c85_Stobs(_12028_data));
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	}));
	return jule::Exceptional<jule::I64>(jule::Any(), __jule_func_result);;
}



inline jule::VoidExceptional _22a8ba096_Close(_22a8b8490_File* _self_) {
	if ((_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_handle))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _22a8b8490_File _Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Exceptional<jule::Ptr<_22a8baa8b_Status>> static__22a8ab8a1_Of(jule::Str _1118_path) {
	if (_1118_path.empty()) {
		return jule::Exceptional<jule::Ptr<_22a8baa8b_Status>>(jule::Any(static_cast<jule::I64>(4LL), &__jule_any_type0));
	};
	struct stat _1517_handle = (struct stat){};;
	jule::I64 _1613_code = _22a876a8b_Stat((&(_1118_path[0LL])), (&(_1517_handle)));;
	if ((_1613_code == -1LL)) {
		return jule::Exceptional<jule::Ptr<_22a8baa8b_Status>>(jule::Any(_22a8a9591_getLastFsError(), &__jule_any_type0));
	};
	jule::Ptr<_22a8baa8b_Status> _2017_stat = jule::new_ptr<_22a8baa8b_Status>();;
	_2017_stat.get()._field_size=_1517_handle.st_size;
	if (((_1517_handle.st_mode & 16384LLU) == 16384LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(1LL);
	} else if (((_1517_handle.st_mode & 32768LLU) == 32768LLU)) {
		_2017_stat.get()._field_mode|=static_cast<jule::I64>(2LL);
	};
	return jule::Exceptional<jule::Ptr<_22a8baa8b_Status>>(jule::Any(), _2017_stat);;
}



inline jule::Bool _22a8bae98_IsDir(_22a8baa8b_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL));;
}



inline jule::Bool _22a8bb20c_IsReg(_22a8baa8b_Status* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I64>(2LL)) == static_cast<jule::I64>(2LL));;
}



inline jule::U64 _22a8bb471_Size(_22a8baa8b_Status* _self_) {
	return (*(_self_))._field_size;;
}







std::ostream &operator<<(std::ostream &_Stream, _22a8baa8b_Status _Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22bb1d529_cmdAttrs _Src) {
	_Stream << "cmdAttrs{";
	_Stream << "pid:" << _Src._field_pid;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22ba3c6bd_Log _Src) {
	_Stream << "Log{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Text:" << _Src._field_Text << ", ";
	_Stream << "Line:" << _Src._field_Line << ", ";
	_Stream << "Suggestion:" << _Src._field_Suggestion;
	_Stream << "}";
	return _Stream;
}



inline jule::U8 _22be12bc5_Prec(_22be1281d_Token* _self_) {
	if (((*(_self_))._field_Id != static_cast<jule::U64>(6LLU))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("%", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str(">>", 2) || _match_expr == jule::Str("<<", 2) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b5ee2cc7:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b5ee3cea:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("=", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b5ee3d61:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b5ee3dd8:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b5ee3e60:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1b5ee3aca:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b5ee3a75:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _22be1281d_Token _Src) {
	_Stream << "Token{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Row:" << _Src._field_Row << ", ";
	_Stream << "Column:" << _Src._field_Column << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Id:" << _Src._field_Id;
	_Stream << "}";
	return _Stream;
}



inline void _22be180b5_Fill(_22be17ba8_File* _self_, jule::Slice<jule::U8> _1727_data) {
	(*(_self_))._field_Data=_1727_data;
}



inline jule::Str _22be18329_Dir(_22be17ba8_File* _self_) {
	return _22b9a633a_Dir((*(_self_))._field_Path);;
}



inline jule::Str _22be1858d_Name(_22be17ba8_File* _self_) {
	return _22b9a5eb6_Base((*(_self_))._field_Path);;
}



inline jule::Uintptr _22be18802_Addr(_22be17ba8_File* _self_) {
	return static_cast<jule::Uintptr>(((jule::Uintptr)((&((*(_self_)))))));;
}



inline jule::Str _22be18b10_GetRow(_22be17ba8_File* _self_, jule::I64 _3821_row) {
	jule::I64 _3917_n = 0LL;;
	jule::I64 _4017_lineStart = 0LL;;
	jule::I64 _4117_i = 0LL;;
	for (; (_4117_i < (*(_self_))._field_Data.len()); (_4117_i)++) {
		{
			if (((*(_self_))._field_Data[_4117_i] != '\n')) {
				goto _iter_next_1b5ee85e6;
			};
			(_3917_n)++;
			if ((_3917_n == _3821_row)) {
				return static_cast<jule::Str>((*(_self_))._field_Data.slice(_4017_lineStart, _4117_i));;
			};
			_4017_lineStart=static_cast<jule::I64>((_4117_i + 1LL));
		}
	_iter_next_1b5ee85e6:;
	}
	_iter_end_1b5ee85e6:;;
	return jule::Str();;
}







std::ostream &operator<<(std::ostream &_Stream, _22be17ba8_File _Src) {
	_Stream << "File{";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "Data:" << _Src._field_Data << ", ";
	_Stream << "Tokens:" << _Src._field_Tokens;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _22be1998a_kindPair _Src) {
	_Stream << "kindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}



inline void _22be20a90_pushErr(_22be204eb_lex* _self_, jule::Str _44226_fmt, jule::Slice<jule::Any> _44239_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_22be1a705_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44226_fmt, _44239_args));;
}



inline void _22be20dae_pushErrTok(_22be204eb_lex* _self_, jule::Ptr<_22be1281d_Token>* _44730_token, jule::Str _44745_fmt) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_22be1a705_makeErr((*(_44730_token)).get()._field_Row, (*(_44730_token)).get()._field_Column, &((*(_self_))._field_file), _44745_fmt, jule::Slice<jule::Any>()));;
}



inline void _22be2108a_lex(_22be204eb_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_22be2308c_newLine(_self_);
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::Ptr<_22be1281d_Token> _45721_token = _22be24412_token(_self_);;
			if ((_45721_token.get()._field_Id != static_cast<jule::U64>(0LLU))) {
				(*(_self_))._field_tokens = jule::alloc_for_append((*(_self_))._field_tokens,1);(*(_self_))._field_tokens.__push(_45721_token);;
			};
		}
	_iter_next_1b6026855:;
	}
	_iter_end_1b6026855:;;
}



inline jule::Str _22be21398_id(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _46622_ln) {
	if (((*(_46622_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _47014_r = 0;;
	jule::I64 _47021_i = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_46622_ln)));
		_47014_r = __jule_assign_result.__jule_result_arg0;
		_47021_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_47014_r != '_') && (!(_22be15ce9_IsLetter(_47014_r))))) {
		return jule::Str();;
	};
	while ((_47021_i < (*(_46622_ln)).len())) {
		{
			jule::I32 _47618_pr = 0;;
			jule::I64 _47622_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_46622_ln)).slice(_47021_i));
				_47618_pr = __jule_assign_result.__jule_result_arg0;
				_47622_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_47618_pr != '_') && (!(_22be16338_IsDecimal(static_cast<jule::U8>(static_cast<jule::U8>(_47618_pr)))))) && (!(_22be15ce9_IsLetter(_47618_pr))))) {
				(*(_self_))._field_pos+=_47021_i;
				return static_cast<jule::Str>((*(_46622_ln)).slice(0LL, _47021_i));;
			};
			_47021_i+=_47622_n;
		}
	_iter_next_1b6029b44:;
	}
	_iter_end_1b6029b44:;;
	(*(_self_))._field_pos+=(*(_46622_ln)).len();
	return static_cast<jule::Str>((*(_46622_ln)));;
}



inline jule::Slice<jule::U8> _22be2160c_resume(_22be204eb_lex* _self_) {
	jule::I64 _49117_i = (*(_self_))._field_pos;;
	for (; (_49117_i < (*(_self_))._field_file.get()._field_Data.len()); (_49117_i)++) {
		{
			jule::I32 _49317_r = static_cast<jule::I32>((*(_self_))._field_file.get()._field_Data[_49117_i]);;
			if (_22be15898_IsSpace(_49317_r)) {
				;
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _49317_r };
					
					if (_match_expr == '\n') {
						_case_begin_1b602dd46:;
						{
							_22be2308c_newLine(_self_);
						}
					}
					else if (_match_expr == '\t') {
						_case_begin_1b602d829:;
						{
							(*(_self_))._field_column+=8LL;
						}
					}
					else {
						_case_begin_1b6029847:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1b602d708:;
				};
				goto _iter_next_1b602c0db;
			};
			jule::I64 _50821_j = _49117_i;;
			for (; (_50821_j < (*(_self_))._field_file.get()._field_Data.len()); (_50821_j)++) {
				{
					if (((*(_self_))._field_file.get()._field_Data[_50821_j] == '\n')) {
						goto _iter_end_1b602cbbe;
					};
				}
			_iter_next_1b602cbbe:;
			}
			_iter_end_1b602cbbe:;;
			return (*(_self_))._field_file.get()._field_Data.slice(_49117_i, _50821_j);;
		}
	_iter_next_1b602c0db:;
	}
	_iter_end_1b602c0db:;;
	return nullptr;;
}



inline void _22be21882_lexLineComment(_22be204eb_lex* _self_, jule::Ptr<_22be1281d_Token>* _51938_token) {
	jule::I64 _52013_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _52317_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if (((_52317_r == '\n') || (_52317_r == '\r'))) {
				goto _iter_end_1b6031145;
			};
		}
	_iter_next_1b6031145:;
	}
	_iter_end_1b6031145:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
		(*(_51938_token)).get()._field_Id=static_cast<jule::U64>(17LLU);
		(*(_51938_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_52013_start, (*(_self_))._field_pos));
	};
}



inline void _22be21b07_lexRangeComment(_22be204eb_lex* _self_, jule::Ptr<_22be1281d_Token>* _53439_token) {
	jule::I64 _53513_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _53817_r = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_53817_r == '\r')) {
				goto _iter_next_1b60340d2;
			};
			if ((_53817_r == '\n')) {
				_22be2308c_newLine(_self_);
				goto _iter_next_1b60340d2;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(_self_))._field_file.get()._field_Data.len()) && (_53817_r == '*')) && ((*(_self_))._field_file.get()._field_Data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I64>(1LL)) == static_cast<jule::I64>(1LL))) {
					(*(_53439_token)).get()._field_Id=static_cast<jule::U64>(17LLU);
					(*(_53439_token)).get()._field_Kind=static_cast<jule::Str>((*(_self_))._field_file.get()._field_Data.slice(_53513_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1b60340d2:;
	}
	_iter_end_1b60340d2:;;
	_22be20a90_pushErr(_self_, jule::Str("missing block comment close", 27), jule::Slice<jule::Any>());
}



inline jule::Str _22be21e15_num(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _56223_txt) {
	jule::Str __jule_func_result;
	if (((*(_56223_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_22be1e022_hexNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_22be1dc7a_octalNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_22be1c6c4_binaryNum(_56223_txt);
	if ((!(__jule_func_result.empty()))) {
		goto _julec_label_end;
	};
	__jule_func_result=_22be1c42c_commonNum(_56223_txt);
	_julec_label_end:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _22be22223_escapeSeq(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _58429_txt) {
	jule::Str _58517_seq = jule::Str();;
	if (((*(_58429_txt)).len() < 2LL)) {
		goto _julec_label_end;
	};
	{
		auto &_match_expr{ (*(_58429_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1b603ceba:;
			{
				(*(_self_))._field_pos+=2LL;
				return static_cast<jule::Str>((*(_58429_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b603d075:;
			{
				_58517_seq=_22be1e60a_bigUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1b603cc12:;
			{
				_58517_seq=_22be1e8c4_littleUnicodePointEscape(_58429_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b603cc78:;
			{
				_58517_seq=_22be1ea7d_hexByteEscape(_58429_txt);
			}
		}
		else {
			_case_begin_1b603c5c4:;
			{
				_58517_seq=_22be1ed14_byteEscape(_58429_txt);
			}
		}
		_match_end_1b603cb02:;
	};
	_julec_label_end:;
	if (_58517_seq.empty()) {
		((*(_self_))._field_pos)++;
		_22be20a90_pushErr(_self_, jule::Str("invalid escape sequence", 23), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_58517_seq.len();
	return _58517_seq;;
}



inline jule::Str _22be225ca_getRune(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _61427_txt, jule::Bool _61440_raw) {
	if (((!(_61440_raw)) && ((*(_61427_txt))[0LL] == '\\'))) {
		return _22be22223_escapeSeq(_self_, _61427_txt);;
	};
	jule::I32 _61814_r = 0;;
	jule::I64 _61817_n = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_61427_txt)));
		_61814_r = __jule_assign_result.__jule_result_arg0;
		_61817_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_61817_n;
	return jule::Str::from_rune(_61814_r);;
}



inline jule::Str _22be228d8_lexRune(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _62327_txt) {
	jule::Str _62417_run = jule::Str("'", 1);;
	((*(_self_))._field_column)++;
	jule::I64 _62617_n = 0LL;;
	jule::I64 _62717_i = 1LL;;
	for (; (_62717_i < (*(_62327_txt)).len()); (_62717_i)++) {
		{
			if (((*(_62327_txt))[_62717_i] == '\r')) {
				goto _iter_next_1b60431e0;
			};
			if (((*(_62327_txt))[_62717_i] == '\n')) {
				_22be20a90_pushErr(_self_, jule::Str("rune is not finished", 20), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_22be2308c_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _63917_part = (*(_62327_txt)).slice(_62717_i);;
			jule::Str _64017_r = _22be225ca_getRune(_self_, &(_63917_part), false);;
			_62417_run+=_64017_r;
			(*(_self_))._field_column+=_22b965470_RuneCountStr(_64017_r);
			if (_64017_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1b60431e0;
			};
			if ((_64017_r.len() > 1LL)) {
				_62717_i+=(_64017_r.len() - 1LL);
			};
			(_62617_n)++;
		}
	_iter_next_1b60431e0:;
	}
	_iter_end_1b60431e0:;;
	if ((_62617_n == 0LL)) {
		_22be20a90_pushErr(_self_, jule::Str("rune is cannot empty", 20), jule::Slice<jule::Any>());
	} else if ((_62617_n > 1LL)) {
		_22be20a90_pushErr(_self_, jule::Str("rune is should be single", 24), jule::Slice<jule::Any>());
	};
	return _62417_run;;
}



inline jule::Str _22be22b4c_lexStr(_22be204eb_lex* _self_) {
	jule::Str _66317_s = jule::Str();;
	jule::U8 _66413_mark = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _66613_raw = (_66413_mark == '`');;
	(_66317_s).append(_66413_mark);
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(_self_))._field_file.get()._field_Data.len())) {
		{
			jule::U8 _67117_ch = (*(_self_))._field_file.get()._field_Data[(*(_self_))._field_pos];;
			if ((_67117_ch == '\r')) {
				goto _iter_next_1b604902b;
			};
			if ((_67117_ch == '\n')) {
				_22be2308c_newLine(_self_);
				if ((!(_66613_raw))) {
					_22be20a90_pushErr(_self_, jule::Str("string is not finished", 22), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _68321_part = (*(_self_))._field_file.get()._field_Data.slice((*(_self_))._field_pos);;
			jule::Str _68417_r = _22be225ca_getRune(_self_, &(_68321_part), _66613_raw);;
			_66317_s+=_68417_r;
			(*(_self_))._field_column+=_22b965470_RuneCountStr(_68417_r);
			if ((_67117_ch == _66413_mark)) {
				goto _iter_end_1b604902b;
			};
		}
	_iter_next_1b604902b:;
	}
	_iter_end_1b604902b:;;
	return _66317_s;;
}



inline jule::Bool _22be22db1_isFirstTokenOfLine(_22be204eb_lex* _self_) {
	return ((*(_self_))._field_column == 1LL);;
}



inline void _22be2308c_newLine(_22be204eb_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _22be23587_isOp(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _70424_txt, jule::Str _70437_kind, jule::U64 _70448_id, jule::Ptr<_22be1281d_Token>* _70466_t) {
	if ((!(_22be1aa8a_bytesHasPrefix(_70424_txt, _70437_kind)))) {
		return false;;
	};
	(*(_70466_t)).get()._field_Kind=_70437_kind;
	(*(_70466_t)).get()._field_Id=_70448_id;
	(*(_self_))._field_pos+=_70437_kind.len();
	return true;;
}



inline jule::Bool _22be2393e_lexBasicOps(_22be204eb_lex* _self_, jule::Slice<jule::U8> _71430_txt, jule::Ptr<_22be1281d_Token>* _71448_tok) {
	{
		auto expr = &(_22be1a20a_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b604edab:;
		if (it != expr_end) {
			_22be1998a_kindPair *_71516_pair = it;
			{
				if (_22be23587_isOp(_self_, &(_71430_txt), (*(_71516_pair))._field_kind, (*(_71516_pair))._field_id, _71448_tok)) {
					return true;;
				};
			}
			_iter_next_1b604edab:;
			++it;
			goto _iter_begin_1b604edab;
		}
		_iter_end_1b604edab:;
	};
	return false;;
}



inline jule::Bool _22be23ce6_lexId(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _72425_txt, jule::Ptr<_22be1281d_Token>* _72443_t) {
	jule::Str _72513_lex = _22be21398_id(_self_, _72425_txt);;
	if (_72513_lex.empty()) {
		return false;;
	};
	(*(_72443_t)).get()._field_Kind=_72513_lex;
	(*(_72443_t)).get()._field_Id=static_cast<jule::U64>(1LLU);
	return true;;
}



inline jule::Bool _22be2419d_lexNum(_22be204eb_lex* _self_, jule::Slice<jule::U8>* _73426_txt, jule::Ptr<_22be1281d_Token>* _73444_t) {
	jule::Str _73513_lex = _22be21e15_num(_self_, _73426_txt);;
	if (_73513_lex.empty()) {
		return false;;
	};
	(*(_73444_t)).get()._field_Kind=_73513_lex;
	(*(_73444_t)).get()._field_Id=static_cast<jule::U64>(5LLU);
	return true;;
}



inline jule::Ptr<_22be1281d_Token> _22be24412_token(_22be204eb_lex* _self_) {
	jule::Ptr<_22be1281d_Token> _74617_t = jule::new_ptr<_22be1281d_Token>(_22be1281d_Token{._field_File=(*(_self_))._field_file, ._field_Id=static_cast<jule::U64>(0LLU)});;
	jule::Slice<jule::U8> _75113_txt = _22be2160c_resume(_self_);;
	if ((_75113_txt == nullptr)) {
		return _74617_t;;
	};
	_74617_t.get()._field_Column=(*(_self_))._field_column;
	_74617_t.get()._field_Row=(*(_self_))._field_row;
	{
		
		if (_22be2419d_lexNum(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_1b60559c7:;
			{
				goto _match_end_1b6055125;
			}
		}
		else if ((_75113_txt[0LL] == '\'')) {
			_case_begin_1b6055be7:;
			{
				_74617_t.get()._field_Kind=_22be228d8_lexRune(_self_, &(_75113_txt));
				_74617_t.get()._field_Id=static_cast<jule::U64>(5LLU);
				return _74617_t;;
			}
		}
		else if (((_75113_txt[0LL] == '\"') || (_75113_txt[0LL] == '`'))) {
			_case_begin_1b6056214:;
			{
				_74617_t.get()._field_Kind=_22be22b4c_lexStr(_self_);
				_74617_t.get()._field_Id=static_cast<jule::U64>(5LLU);
				return _74617_t;;
			}
		}
		else if (_22be1aa8a_bytesHasPrefix(&(_75113_txt), jule::Str("//", 2))) {
			_case_begin_1b6056643:;
			{
				_22be21882_lexLineComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_22be1aa8a_bytesHasPrefix(&(_75113_txt), jule::Str("/*", 2))) {
			_case_begin_1b60566a9:;
			{
				_22be21b07_lexRangeComment(_self_, &(_74617_t));
				return _74617_t;;
			}
		}
		else if (_22be23587_isOp(_self_, &(_75113_txt), jule::Str("(", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _22be23587_isOp(_self_, &(_75113_txt), jule::Str(")", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _22be23587_isOp(_self_, &(_75113_txt), jule::Str("{", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _22be23587_isOp(_self_, &(_75113_txt), jule::Str("}", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _22be23587_isOp(_self_, &(_75113_txt), jule::Str("[", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _22be23587_isOp(_self_, &(_75113_txt), jule::Str("]", 1), static_cast<jule::U64>(2LLU), &(_74617_t)) || _22be2393e_lexBasicOps(_self_, _75113_txt, &(_74617_t))) {
			_case_begin_1b6056720:;
			{
				goto _match_end_1b6055125;
			}
		}
		else if (_22be23ce6_lexId(_self_, &(_75113_txt), &(_74617_t))) {
			_case_begin_1b605518b:;
			{
				{
					auto expr = &(_22be19db9_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b65ddb97:;
					if (it != expr_end) {
						_22be1998a_kindPair *_78920_pair = it;
						{
							if (((*(_78920_pair))._field_kind == _74617_t.get()._field_Kind)) {
								_74617_t.get()._field_Id=(*(_78920_pair))._field_id;
								goto _iter_end_1b65ddb97;
							};
						}
						_iter_next_1b65ddb97:;
						++it;
						goto _iter_begin_1b65ddb97;
					}
					_iter_end_1b65ddb97:;
				};
			}
		}
		else {
			_case_begin_1b605480b:;
			{
				jule::I32 _79618_r = 0;;
				jule::I64 _79621_sz = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune(_75113_txt);
					_79618_r = __jule_assign_result.__jule_result_arg0;
					_79621_sz = __jule_assign_result.__jule_result_arg1;
				});
				_22be20a90_pushErr(_self_, jule::Str("undefined token: @", 18), jule::Slice<jule::Any>::make({jule::Any(_79618_r, &__jule_any_type1)}));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_79621_sz;
				return _74617_t;;
			}
		}
		_match_end_1b6055125:;
	};
	(*(_self_))._field_column+=_22b965470_RuneCountStr(_74617_t.get()._field_Kind);
	return _74617_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _22be204eb_lex _Src) {
	_Stream << "lex{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e76be42d_floatInfo _Src) {
	_Stream << "floatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e76c0055_decimalSlice _Src) {
	_Stream << "decimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1e76d1473_leftCheat _Src) {
	_Stream << "leftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1e76c8eb5_set(_1e76d1e46_decimal* _self_, jule::Str _23322_s) {
	jule::Bool __jule_func_result = false;
	jule::I64 _23417_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_23417_i >= _23322_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23322_s[_23417_i] == '+')) {
			_case_begin_1b6a32c78:;
			{
				(_23417_i)++;
			}
		}
		else if ((_23322_s[_23417_i] == '-')) {
			_case_begin_1b6a32e98:;
			{
				(*(_self_))._field_neg=true;
				(_23417_i)++;
			}
		}
		_match_end_1b6a32d99:;
	};
	jule::Bool _25117_sawdot = false;;
	jule::Bool _25217_sawdigits = false;;
	for (; (_23417_i < _23322_s.len()); (_23417_i)++) {
		{
			{
				
				if ((_23322_s[_23417_i] == '_')) {
					_case_begin_1b6a34939:;
					{
						goto _iter_next_1b6a342a7;
					}
				}
				else if ((_23322_s[_23417_i] == '.')) {
					_case_begin_1b6a349b1:;
					{
						if (_25117_sawdot) {
							return __jule_func_result;;
						};
						_25117_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1b6a342a7;
					}
				}
				else if ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9'))) {
					_case_begin_1b6a34a38:;
					{
						_25217_sawdigits=true;
						if (((_23322_s[_23417_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1b6a342a7;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23322_s[_23417_i];
							((*(_self_))._field_nd)++;
						} else if ((_23322_s[_23417_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1b6a342a7;
					}
				}
				_match_end_1b6a34818:;
			};
			goto _iter_end_1b6a342a7;
		}
	_iter_next_1b6a342a7:;
	}
	_iter_end_1b6a342a7:;;
	if ((!(_25217_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_25117_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_23417_i < _23322_s.len()) && (_1e76c47b8_lower(_23322_s[_23417_i]) == 'e'))) {
		(_23417_i)++;
		if ((_23417_i >= _23322_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _29721_esign = 1LL;;
		if ((_23322_s[_23417_i] == '+')) {
			(_23417_i)++;
		} else if ((_23322_s[_23417_i] == '-')) {
			(_23417_i)++;
			_29721_esign=-1LL;
		};
		if ((((_23417_i >= _23322_s.len()) || (_23322_s[_23417_i] < '0')) || (_23322_s[_23417_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _30721_e = 0LL;;
		for (; ((_23417_i < _23322_s.len()) && ((('0' <= _23322_s[_23417_i]) && (_23322_s[_23417_i] <= '9')) || (_23322_s[_23417_i] == '_'))); (_23417_i)++) {
			{
				if ((_23322_s[_23417_i] == '_')) {
					goto _iter_next_1b6a3a665;
				};
				if ((_30721_e < 10000LL)) {
					_30721_e=static_cast<jule::I64>((((_30721_e * 10LL) + static_cast<jule::I64>(_23322_s[_23417_i])) - '0'));
				};
			}
		_iter_next_1b6a3a665:;
		}
		_iter_end_1b6a3a665:;;
		(*(_self_))._field_dp+=(_30721_e * _29721_esign);
	};
	if ((_23417_i != _23322_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1e76c92c3_floatBits(_1e76d1e46_decimal* _self_, _1e76be42d_floatInfo* _32729_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _32817_exp = 0LL;;
	jule::U64 _32917_mant = 0LLU;;
	if (((*(_self_))._field_nd == 0LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_overflow;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_32917_mant=0LLU;
		_32817_exp=(*(_32729_flt))._field_bias;
		goto _julec_label_out;
	};
	_32817_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I64 _35421_n = 0LL;;
			if (((*(_self_))._field_dp >= _1e76c8b52_powtab.len())) {
				_35421_n=27LL;
			} else {
				_35421_n=_1e76c8b52_powtab[(*(_self_))._field_dp];
			};
			_1e76d2595_shift(_self_, static_cast<jule::I64>((-(_35421_n))));
			_32817_exp+=_35421_n;
		}
	_iter_next_1b6a411b5:;
	}
	_iter_end_1b6a411b5:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I64 _36421_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1e76c8b52_powtab.len())) {
				_36421_n=27LL;
			} else {
				_36421_n=_1e76c8b52_powtab[(-((*(_self_))._field_dp))];
			};
			_1e76d2595_shift(_self_, _36421_n);
			_32817_exp-=_36421_n;
		}
	_iter_next_1b6a41e85:;
	}
	_iter_end_1b6a41e85:;;
	(_32817_exp)--;
	if ((_32817_exp < ((*(_32729_flt))._field_bias + 1LL))) {
		jule::I64 _38117_n = (((*(_32729_flt))._field_bias + 1LL) - _32817_exp);;
		_1e76d2595_shift(_self_, static_cast<jule::I64>((-(_38117_n))));
		_32817_exp+=_38117_n;
	};
	if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
		goto _julec_label_overflow;
	};
	_1e76d2595_shift(_self_, static_cast<jule::I64>(static_cast<jule::I64>((1LL + (*(_32729_flt))._field_mantbits))));
	_32917_mant=static_cast<jule::U64>(_1e76d3079_roundedInteger(_self_));
	if ((_32917_mant == (2LLU << (*(_32729_flt))._field_mantbits))) {
		_32917_mant>>=1LLU;
		(_32817_exp)++;
		if (((_32817_exp - (*(_32729_flt))._field_bias) >= static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) {
			goto _julec_label_overflow;
		};
	};
	if (((_32917_mant & (1LLU << (*(_32729_flt))._field_mantbits)) == 0LLU)) {
		_32817_exp=(*(_32729_flt))._field_bias;
	};
	goto _julec_label_out;
	_julec_label_overflow:;
	_32917_mant=0LLU;
	_32817_exp=static_cast<jule::I64>(static_cast<jule::I64>((((static_cast<jule::U64>(1LLU) << (*(_32729_flt))._field_expbits) - 1LLU) + static_cast<jule::U64>((*(_32729_flt))._field_bias))));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_out:;
	jule::U64 _41717_bits = (_32917_mant & ((1LLU << (*(_32729_flt))._field_mantbits) - 1LLU));;
	_41717_bits|=(static_cast<jule::U64>(((_32817_exp - (*(_32729_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_32729_flt))._field_expbits) - 1LL)))) << (*(_32729_flt))._field_mantbits);
	if ((*(_self_))._field_neg) {
		_41717_bits|=((1LLU << (*(_32729_flt))._field_mantbits) << (*(_32729_flt))._field_expbits);
	};
	__jule_func_result.__jule_result_arg0 = _41717_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1e76d2320_assign(_1e76d1e46_decimal* _self_, jule::U64 _33029_v) {
	jule::Array<jule::U8,24> _33117_buf = jule::Array<jule::U8,24>();;
	jule::I64 _33417_n = 0LL;;
	while ((_33029_v > 0LLU)) {
		{
			jule::U64 _33617_v1 = (_33029_v / 10LLU);;
			_33029_v-=(10LLU * _33617_v1);
			_33117_buf[_33417_n]=static_cast<jule::U8>(static_cast<jule::U8>((_33029_v + '0')));
			(_33417_n)++;
			_33029_v=_33617_v1;
		}
	_iter_next_1b6a4d7cc:;
	}
	_iter_end_1b6a4d7cc:;;
	(*(_self_))._field_nd=0LL;
	(_33417_n)--;
	for (; (_33417_n >= 0LL); (_33417_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_33117_buf[_33417_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1b6a4e24a:;
	}
	_iter_end_1b6a4e24a:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1e76d362e_trim(_self_);
}



inline void _1e76d2595_shift(_1e76d1e46_decimal* _self_, jule::I64 _35528_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1b6a5113c:;
		}
		else if ((_35528_k > 0LL)) {
			_case_begin_1b6a511b4:;
			{
				while ((_35528_k > 60LL)) {
					{
						_1e76d40be_leftShift(_self_, 60LLU);
						_35528_k-=60LL;
					}
				_iter_next_1b6a51cca:;
				}
				_iter_end_1b6a51cca:;;
				_1e76d40be_leftShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>(_35528_k)));
			}
		}
		else if ((_35528_k < 0LL)) {
			_case_begin_1b6a5123b:;
			{
				while ((_35528_k < -60LL)) {
					{
						_1e76d38d7_rightShift(_self_, 60LLU);
						_35528_k+=60LL;
					}
				_iter_next_1b6a51c20:;
				}
				_iter_end_1b6a51c20:;;
				_1e76d38d7_rightShift(_self_, static_cast<jule::U64>(static_cast<jule::U64>((-(_35528_k)))));
			}
		}
		_match_end_1b6a5101b:;
	};
}



inline void _1e76d281a_roundDown(_1e76d1e46_decimal* _self_, jule::I64 _37528_nd) {
	if (((_37528_nd < 0LL) || (_37528_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_37528_nd;
	_1e76d362e_trim(_self_);
}



inline void _1e76d2a90_roundUp(_1e76d1e46_decimal* _self_, jule::I64 _38426_nd) {
	if (((_38426_nd < 0LL) || (_38426_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I64 _39017_i = (_38426_nd - 1LL);;
	for (; (_39017_i >= 0LL); (_39017_i)--) {
		{
			jule::U8 _39217_c = (*(_self_))._field_d[_39017_i];;
			if ((_39217_c < '9')) {
				((*(_self_))._field_d[_39017_i])++;
				(*(_self_))._field_nd=static_cast<jule::I64>((_39017_i + 1LL));
				return;;
			};
		}
	_iter_next_1b6a55240:;
	}
	_iter_end_1b6a55240:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1e76d2d15_round(_1e76d1e46_decimal* _self_, jule::I64 _41124_nd) {
	if (((_41124_nd < 0LL) || (_41124_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1e76d4410_shouldRoundUp(_self_, _41124_nd)) {
		_1e76d2a90_roundUp(_self_, _41124_nd);
	} else {
		_1e76d281a_roundDown(_self_, _41124_nd);
	};
}



inline jule::U64 _1e76d3079_roundedInteger(_1e76d1e46_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I64 _42817_i = 0LL;;
	jule::U64 _42917_n = 0LLU;;
	for (; ((_42817_i < (*(_self_))._field_dp) && (_42817_i < (*(_self_))._field_nd)); (_42817_i)++) {
		{
			_42917_n=static_cast<jule::U64>(((_42917_n * 10LLU) + static_cast<jule::U64>(((*(_self_))._field_d[_42817_i] - '0'))));
		}
	_iter_next_1b6a57ac2:;
	}
	_iter_end_1b6a57ac2:;;
	for (; (_42817_i < (*(_self_))._field_dp); (_42817_i)++) {
		{
			_42917_n*=10LLU;
		}
	_iter_next_1b6a595b8:;
	}
	_iter_end_1b6a595b8:;;
	if (_1e76d4410_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_42917_n)++;
	};
	return _42917_n;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e76d1e46_decimal _Src) {
	_Stream << "decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6246_NewI64(jule::I64 _1622_x) {
	return jule::new_ptr<_1e76e5cc3_Const>(_1e76e5cc3_Const{._field_data=jule::Any(_1622_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1e76e5cc3_Const> static__1e76e64dd_NewU64(jule::U64 _1922_x) {
	return jule::new_ptr<_1e76e5cc3_Const>(_1e76e5cc3_Const{._field_data=jule::Any(_1922_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6785_NewBool(jule::Bool _2223_x) {
	return jule::new_ptr<_1e76e5cc3_Const>(_1e76e5cc3_Const{._field_data=jule::Any(_2223_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6a2c_NewStr(jule::Str _2522_x) {
	return jule::new_ptr<_1e76e5cc3_Const>(_1e76e5cc3_Const{._field_data=jule::Any(_2522_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6cc4_NewF64(jule::F64 _2822_x) {
	return jule::new_ptr<_1e76e5cc3_Const>(_1e76e5cc3_Const{._field_data=jule::Any(_2822_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1e76e5cc3_Const> static__1e76e6ec2_NewNil(void) {
	return jule::new_ptr<_1e76e5cc3_Const>(_1e76e5cc3_Const{._field_data=nullptr});;
}



inline jule::I64 _1e76e75bb_ReadI64(_1e76e5cc3_Const* _self_) {
	if ((!(_1e76e9964_IsI64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
}



inline jule::U64 _1e76e7830_ReadU64(_1e76e5cc3_Const* _self_) {
	if ((!(_1e76e9bc8_IsU64(_self_)))) {
		return 0LLU;;
	};
	return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
}



inline jule::Bool _1e76e7a94_ReadBool(_1e76e5cc3_Const* _self_) {
	if ((!(_1e76e9e3c_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1e76e7d08_ReadStr(_1e76e5cc3_Const* _self_) {
	if ((!(_1e76ea1a1_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1e76e806c_ReadF64(_1e76e5cc3_Const* _self_) {
	if ((!(_1e76ea415_IsF64(_self_)))) {
		return 0LL;;
	};
	return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
}



inline jule::I64 _1e76e82d1_AsI64(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6acab45:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b6acb2a5:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6acb31b:;
			{
				return static_cast<jule::I64>(static_cast<jule::I64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b6acb184:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6acaedb:;
	};
}



inline jule::U64 _1e76e8545_AsU64(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b6acca48:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6accb03:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6accb69:;
			{
				return static_cast<jule::U64>(static_cast<jule::U64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6)));;
			}
		}
		else {
			_case_begin_1b6acb89e:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b6acbb79:;
	};
}



inline jule::F64 _1e76e87a9_AsF64(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6ace808:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6));;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6ace2ca:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b6ace374:;
			{
				return static_cast<jule::F64>(static_cast<jule::F64>((*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3)));;
			}
		}
		else {
			_case_begin_1b6acd120:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6acd3ea:;
	};
}



inline void _1e76e8a2e_SetI64(_1e76e5cc3_Const* _self_, jule::I64 _13825_x) {
	(*(_self_))._field_data=jule::Any(_13825_x, &__jule_any_type2);
}



inline void _1e76e8ca4_SetU64(_1e76e5cc3_Const* _self_, jule::U64 _14125_x) {
	(*(_self_))._field_data=jule::Any(_14125_x, &__jule_any_type3);
}



inline void _1e76e9029_SetBool(_1e76e5cc3_Const* _self_, jule::Bool _14426_x) {
	(*(_self_))._field_data=jule::Any(_14426_x, &__jule_any_type4);
}



inline void _1e76e929e_SetStr(_1e76e5cc3_Const* _self_, jule::Str _14725_x) {
	(*(_self_))._field_data=jule::Any(_14725_x, &__jule_any_type5);
}



inline void _1e76e9524_SetF64(_1e76e5cc3_Const* _self_, jule::F64 _15025_x) {
	(*(_self_))._field_data=jule::Any(_15025_x, &__jule_any_type6);
}



inline void _1e76e9700_SetNil(_1e76e5cc3_Const* _self_) {
	(*(_self_))._field_data=nullptr;
}



inline jule::Bool _1e76e9964_IsI64(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6ad307b:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6ad3312:;
			{
				return false;;
			}
		}
		_match_end_1b6ad32ac:;
	};
}



inline jule::Bool _1e76e9bc8_IsU64(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b6ad3bc5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6ad35cb:;
			{
				return false;;
			}
		}
		_match_end_1b6ad3576:;
	};
}



inline jule::Bool _1e76e9e3c_IsBool(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b6ad4654:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6ad406b:;
			{
				return false;;
			}
		}
		_match_end_1b6ad4016:;
	};
}



inline jule::Bool _1e76ea1a1_IsStr(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b6ad50d3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6ad49ea:;
			{
				return false;;
			}
		}
		_match_end_1b6ad4995:;
	};
}



inline jule::Bool _1e76ea415_IsF64(_1e76e5cc3_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6ad5a62:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6ad5479:;
			{
				return false;;
			}
		}
		_match_end_1b6ad5424:;
	};
}



inline jule::Bool _1e76ea679_IsNil(_1e76e5cc3_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1e76ea987_AreSameTypes(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _21327_x) {
	{
		
		if ((_1e76e9964_IsI64(_self_) == _1e76e9964_IsI64(&_21327_x))) {
			_case_begin_1b6ad6ce9:;
			{
				return true;;
			}
		}
		else if ((_1e76e9bc8_IsU64(_self_) == _1e76e9bc8_IsU64(&_21327_x))) {
			_case_begin_1b6ad6d60:;
			{
				return true;;
			}
		}
		else if ((_1e76ea415_IsF64(_self_) == _1e76ea415_IsF64(&_21327_x))) {
			_case_begin_1b6ad6dc6:;
			{
				return true;;
			}
		}
		else if ((_1e76e9e3c_IsBool(_self_) == _1e76e9e3c_IsBool(&_21327_x))) {
			_case_begin_1b6ad714b:;
			{
				return true;;
			}
		}
		else if ((_1e76ea1a1_IsStr(_self_) == _1e76ea1a1_IsStr(&_21327_x))) {
			_case_begin_1b6ad71b2:;
			{
				return true;;
			}
		}
		else if ((_1e76ea679_IsNil(_self_) == _1e76ea679_IsNil(&_21327_x))) {
			_case_begin_1b6ad7228:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6ad6c0b:;
			{
				return false;;
			}
		}
		_match_end_1b6ad6b40:;
	};
}



inline jule::Bool _1e76eac95_And(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _23818_x) {
	{
		
		if ((_1e76e9e3c_IsBool(_self_) && _1e76e9e3c_IsBool(&_23818_x))) {
			_case_begin_1b6ad9e51:;
			{
				return (_1e76e7a94_ReadBool(_self_) && _1e76e7a94_ReadBool(&_23818_x));;
			}
		}
		else {
			_case_begin_1b6ad9dda:;
			{
				return false;;
			}
		}
		_match_end_1b6ad99cd:;
	};
}



inline jule::Bool _1e76eb0a3_Or(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _24917_x) {
	{
		
		if ((_1e76e9e3c_IsBool(_self_) && _1e76e9e3c_IsBool(&_24917_x))) {
			_case_begin_1b6adb293:;
			{
				return (_1e76e7a94_ReadBool(_self_) || _1e76e7a94_ReadBool(&_24917_x));;
			}
		}
		else {
			_case_begin_1b6ada935:;
			{
				return false;;
			}
		}
		_match_end_1b6ada869:;
	};
}



inline jule::Bool _1e76eb3b1_Eq(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _26017_x) {
	{
		
		if (_1e76ea679_IsNil(_self_)) {
			_case_begin_1b6adcb57:;
			{
				return _1e76ea679_IsNil(&_26017_x);;
			}
		}
		else if (_1e76e9e3c_IsBool(_self_)) {
			_case_begin_1b6adc607:;
			{
				return (_1e76e9e3c_IsBool(&_26017_x) && (_1e76e7a94_ReadBool(_self_) == _1e76e7a94_ReadBool(&_26017_x)));;
			}
		}
		else if (_1e76ea1a1_IsStr(_self_)) {
			_case_begin_1b6adc67e:;
			{
				return (_1e76ea1a1_IsStr(&_26017_x) && (_1e76e7d08_ReadStr(_self_) == _1e76e7d08_ReadStr(&_26017_x)));;
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6adc8c1:;
			{
				return (_1e76e75bb_ReadI64(_self_) == _1e76e82d1_AsI64(&_26017_x));;
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6adc937:;
			{
				return (_1e76e7830_ReadU64(_self_) == _1e76e8545_AsU64(&_26017_x));;
			}
		}
		else if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6adc99d:;
			{
				return (_1e76e806c_ReadF64(_self_) == _1e76e87a9_AsF64(&_26017_x));;
			}
		}
		else {
			_case_begin_1b6adbc11:;
			{
				return false;;
			}
		}
		_match_end_1b6adbb45:;
	};
}



inline jule::Bool _1e76eb6be_Lt(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _28717_x) {
	{
		
		if (_1e76ea1a1_IsStr(_self_)) {
			_case_begin_1b6ae1243:;
			{
				return (_1e76ea1a1_IsStr(&_28717_x) && (_1e76e7d08_ReadStr(_self_) < _1e76e7d08_ReadStr(&_28717_x)));;
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6ae12a9:;
			{
				return (_1e76e75bb_ReadI64(_self_) < _1e76e82d1_AsI64(&_28717_x));;
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6ae1331:;
			{
				return (_1e76e7830_ReadU64(_self_) < _1e76e8545_AsU64(&_28717_x));;
			}
		}
		else if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6ae13a8:;
			{
				return (_1e76e806c_ReadF64(_self_) < _1e76e87a9_AsF64(&_28717_x));;
			}
		}
		else {
			_case_begin_1b6adceed:;
			{
				return false;;
			}
		}
		_match_end_1b6adce32:;
	};
}



inline jule::Bool _1e76eb9cc_LtEq(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _31019_x) {
	{
		
		if (_1e76ea1a1_IsStr(_self_)) {
			_case_begin_1b6ae3e05:;
			{
				return (_1e76ea1a1_IsStr(&_31019_x) && (_1e76e7d08_ReadStr(_self_) <= _1e76e7d08_ReadStr(&_31019_x)));;
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6ae3e6b:;
			{
				return (_1e76e75bb_ReadI64(_self_) <= _1e76e82d1_AsI64(&_31019_x));;
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6ae3ee3:;
			{
				return (_1e76e7830_ReadU64(_self_) <= _1e76e8545_AsU64(&_31019_x));;
			}
		}
		else if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6ae406a:;
			{
				return (_1e76e806c_ReadF64(_self_) <= _1e76e87a9_AsF64(&_31019_x));;
			}
		}
		else {
			_case_begin_1b6ae1b39:;
			{
				return false;;
			}
		}
		_match_end_1b6ae1a6d:;
	};
}



inline jule::Bool _1e76ebcda_Gt(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _33317_x) {
	{
		
		if (_1e76ea1a1_IsStr(_self_)) {
			_case_begin_1b6ae6ab7:;
			{
				return (_1e76ea1a1_IsStr(&_33317_x) && (_1e76e7d08_ReadStr(_self_) > _1e76e7d08_ReadStr(&_33317_x)));;
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6ae6b2d:;
			{
				return (_1e76e75bb_ReadI64(_self_) > _1e76e82d1_AsI64(&_33317_x));;
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6ae6ba5:;
			{
				return (_1e76e7830_ReadU64(_self_) > _1e76e8545_AsU64(&_33317_x));;
			}
		}
		else if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6ae6c2c:;
			{
				return (_1e76e806c_ReadF64(_self_) > _1e76e87a9_AsF64(&_33317_x));;
			}
		}
		else {
			_case_begin_1b6ae47eb:;
			{
				return false;;
			}
		}
		_match_end_1b6ae4730:;
	};
}



inline jule::Bool _1e76ec0e8_GtEq(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _35619_x) {
	{
		
		if (_1e76ea1a1_IsStr(_self_)) {
			_case_begin_1b6ae9779:;
			{
				return (_1e76ea1a1_IsStr(&_35619_x) && (_1e76e7d08_ReadStr(_self_) >= _1e76e7d08_ReadStr(&_35619_x)));;
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6ae97e0:;
			{
				return (_1e76e75bb_ReadI64(_self_) >= _1e76e82d1_AsI64(&_35619_x));;
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6ae9867:;
			{
				return (_1e76e7830_ReadU64(_self_) >= _1e76e8545_AsU64(&_35619_x));;
			}
		}
		else if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6ae98de:;
			{
				return (_1e76e806c_ReadF64(_self_) >= _1e76e87a9_AsF64(&_35619_x));;
			}
		}
		else {
			_case_begin_1b6ae74ad:;
			{
				return false;;
			}
		}
		_match_end_1b6ae73e2:;
	};
}



inline jule::Bool _1e76ec406_Add(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _37722_x) {
	{
		
		if (_1e76ea1a1_IsStr(_self_)) {
			_case_begin_1b6aec43b:;
			{
				if ((!(_1e76ea1a1_IsStr(&_37722_x)))) {
					return false;;
				};
				_1e76e929e_SetStr(_self_, (_1e76e7d08_ReadStr(_self_) + _1e76e7d08_ReadStr(&_37722_x)));
			}
		}
		else if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6aec4a2:;
			{
				_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e806c_ReadF64(_self_) + _1e76e87a9_AsF64(&_37722_x))));
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6aec529:;
			{
				if (_1e76ea415_IsF64(&_37722_x)) {
					_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e87a9_AsF64(_self_) + _1e76e806c_ReadF64(&_37722_x))));
				} else {
					_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_1e76e75bb_ReadI64(_self_) + _1e76e82d1_AsI64(&_37722_x))));
				};
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6aec5a1:;
			{
				if (_1e76ea415_IsF64(&_37722_x)) {
					_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e87a9_AsF64(_self_) + _1e76e806c_ReadF64(&_37722_x))));
				} else {
					_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>((_1e76e7830_ReadU64(_self_) + _1e76e8545_AsU64(&_37722_x))));
				};
			}
		}
		else {
			_case_begin_1b6aea170:;
			{
				return false;;
			}
		}
		_match_end_1b6aea0a4:;
	};
	return true;;
}



inline jule::Bool _1e76ec714_Sub(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _40622_x) {
	{
		
		if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6b02386:;
			{
				_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e806c_ReadF64(_self_) - _1e76e87a9_AsF64(&_40622_x))));
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b023ec:;
			{
				if (_1e76ea415_IsF64(&_40622_x)) {
					_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e87a9_AsF64(_self_) - _1e76e806c_ReadF64(&_40622_x))));
				} else {
					_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_1e76e75bb_ReadI64(_self_) - _1e76e82d1_AsI64(&_40622_x))));
				};
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b02463:;
			{
				if (_1e76ea415_IsF64(&_40622_x)) {
					_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e87a9_AsF64(_self_) - _1e76e806c_ReadF64(&_40622_x))));
				} else {
					_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>((_1e76e7830_ReadU64(_self_) - _1e76e8545_AsU64(&_40622_x))));
				};
			}
		}
		else {
			_case_begin_1b6b01bb0:;
			{
				return false;;
			}
		}
		_match_end_1b6b01ae4:;
	};
	return true;;
}



inline jule::Bool _1e76eca22_Mul(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _43022_x) {
	{
		
		if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6b06445:;
			{
				_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e806c_ReadF64(_self_) * _1e76e87a9_AsF64(&_43022_x))));
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b064ab:;
			{
				if (_1e76ea415_IsF64(&_43022_x)) {
					_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e87a9_AsF64(_self_) * _1e76e806c_ReadF64(&_43022_x))));
				} else {
					_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_1e76e75bb_ReadI64(_self_) * _1e76e82d1_AsI64(&_43022_x))));
				};
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b06522:;
			{
				if (_1e76ea415_IsF64(&_43022_x)) {
					_1e76e9524_SetF64(_self_, static_cast<jule::F64>((_1e76e87a9_AsF64(_self_) * _1e76e806c_ReadF64(&_43022_x))));
				} else {
					_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>((_1e76e7830_ReadU64(_self_) * _1e76e8545_AsU64(&_43022_x))));
				};
			}
		}
		else {
			_case_begin_1b6b05b2b:;
			{
				return false;;
			}
		}
		_match_end_1b6b05a60:;
	};
	return true;;
}



inline jule::Bool _1e76ecd30_Div(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _45822_x) {
	{
		
		if (_1e76ea415_IsF64(_self_)) {
			_case_begin_1b6b0a504:;
			{
				jule::F64 _46117_l = _1e76e87a9_AsF64(&_45822_x);;
				if ((_46117_l == 0LL)) {
					return false;;
				};
				_1e76e9524_SetF64(_self_, static_cast<jule::F64>(jule::div(_1e76e806c_ReadF64(_self_),_46117_l)));
			}
		}
		else if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b0a56a:;
			{
				jule::F64 _46717_l = _1e76e87a9_AsF64(&_45822_x);;
				if ((_46717_l == 0LL)) {
					return false;;
				};
				_1e76e9524_SetF64(_self_, static_cast<jule::F64>(jule::div(_1e76e87a9_AsF64(_self_),_46717_l)));
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b0a5d1:;
			{
				jule::F64 _47317_l = _1e76e87a9_AsF64(&_45822_x);;
				if ((_47317_l == 0LL)) {
					return false;;
				};
				_1e76e9524_SetF64(_self_, static_cast<jule::F64>(jule::div(_1e76e87a9_AsF64(_self_),_47317_l)));
			}
		}
		else {
			_case_begin_1b6b09bda:;
			{
				return false;;
			}
		}
		_match_end_1b6b09b1e:;
	};
	return true;;
}



inline jule::Bool _1e76ed13d_Mod(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _48722_x) {
	{
		
		if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b0e706:;
			{
				jule::I64 _49017_l = _1e76e82d1_AsI64(&_48722_x);;
				if ((_49017_l == 0LL)) {
					return false;;
				};
				_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>(jule::mod(_1e76e75bb_ReadI64(_self_),_49017_l)));
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b0e76c:;
			{
				jule::U64 _49617_l = _1e76e8545_AsU64(&_48722_x);;
				if ((_49617_l == 0LLU)) {
					return false;;
				};
				_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>(jule::mod(_1e76e7830_ReadU64(_self_),_49617_l)));
			}
		}
		else {
			_case_begin_1b6b0e690:;
			{
				return false;;
			}
		}
		_match_end_1b6b0acc9:;
	};
	return true;;
}



inline jule::Bool _1e76ed44b_BitwiseAnd(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _50929_x) {
	{
		
		if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b1263d:;
			{
				_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_1e76e75bb_ReadI64(_self_) & _1e76e82d1_AsI64(&_50929_x))));
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b126a4:;
			{
				_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>((_1e76e7830_ReadU64(_self_) & _1e76e8545_AsU64(&_50929_x))));
			}
		}
		else {
			_case_begin_1b6b125c7:;
			{
				return false;;
			}
		}
		_match_end_1b6b11296:;
	};
	return true;;
}



inline jule::Bool _1e76ed759_BitwiseOr(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _52328_x) {
	{
		
		if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b144a8:;
			{
				_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_1e76e75bb_ReadI64(_self_) | _1e76e82d1_AsI64(&_52328_x))));
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b1451e:;
			{
				_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>((_1e76e7830_ReadU64(_self_) | _1e76e8545_AsU64(&_52328_x))));
			}
		}
		else {
			_case_begin_1b6b14442:;
			{
				return false;;
			}
		}
		_match_end_1b6b14387:;
	};
	return true;;
}



inline jule::Bool _1e76eda67_Xor(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _53722_x) {
	{
		
		if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b16345:;
			{
				_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_1e76e75bb_ReadI64(_self_) ^ _1e76e82d1_AsI64(&_53722_x))));
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b163ab:;
			{
				_1e76e8ca4_SetU64(_self_, static_cast<jule::U64>((_1e76e7830_ReadU64(_self_) ^ _1e76e8545_AsU64(&_53722_x))));
			}
		}
		else {
			_case_begin_1b6b162ce:;
			{
				return false;;
			}
		}
		_match_end_1b6b16224:;
	};
	return true;;
}



inline jule::Bool _1e76edd75_Lshift(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _55125_x) {
	{
		
		if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b181d2:;
			{
				jule::I64 _55417_l = _1e76e82d1_AsI64(_self_);;
				if ((_55417_l < 0LL)) {
					jule::U64 _55621_r = _1e76e8545_AsU64(&_55125_x);;
					_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_55417_l << _55621_r)));
				} else {
					_1e76ee4e6_lshiftUnsig(_self_, &(_55125_x));
				};
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b18248:;
			{
				_1e76ee4e6_lshiftUnsig(_self_, &(_55125_x));
			}
		}
		else {
			_case_begin_1b6b1816b:;
			{
				return false;;
			}
		}
		_match_end_1b6b180b1:;
	};
	return true;;
}



inline jule::Bool _1e76ee183_Rshift(_1e76e5cc3_Const* _self_, _1e76e5cc3_Const _57125_x) {
	{
		
		if (_1e76e9964_IsI64(_self_)) {
			_case_begin_1b6b1a7ab:;
			{
				jule::I64 _57417_l = _1e76e82d1_AsI64(_self_);;
				if ((_57417_l < 0LL)) {
					jule::U64 _57621_r = _1e76e8545_AsU64(&_57125_x);;
					_1e76e8a2e_SetI64(_self_, static_cast<jule::I64>((_57417_l >> _57621_r)));
				} else {
					_1e76ee7e3_rshiftUnsig(_self_, &(_57125_x));
				};
			}
		}
		else if (_1e76e9bc8_IsU64(_self_)) {
			_case_begin_1b6b1a822:;
			{
				_1e76ee7e3_rshiftUnsig(_self_, &(_57125_x));
			}
		}
		else {
			_case_begin_1b6b1a745:;
			{
				return false;;
			}
		}
		_match_end_1b6b1a679:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1e76e5cc3_Const _Src) {
	_Stream << "Const{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05aa7a4_Ast _Src) {
	_Stream << "Ast{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "TopDirectives:" << _Src._field_TopDirectives << ", ";
	_Stream << "UseDecls:" << _Src._field_UseDecls << ", ";
	_Stream << "Nodes:" << _Src._field_Nodes;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ab651_Node _Src) {
	_Stream << "Node{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05aba4c_Directive _Src) {
	_Stream << "Directive{";
	_Stream << "Tag:" << _Src._field_Tag << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05de563_TypeDecl _Src) {
	_Stream << "TypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05deb29_IdentTypeDecl _Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05dee15_SubIdentTypeDecl _Src) {
	_Stream << "SubIdentTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e0289_NamespaceTypeDecl _Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "Idents:" << _Src._field_Idents << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e0575_SptrTypeDecl _Src) {
	_Stream << "SptrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e0971_SlcTypeDecl _Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e0c5c_TupleTypeDecl _Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "Types:" << _Src._field_Types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e13de_IsUnsafe(_1d05e1048_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e1048_PtrTypeDecl _Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e1a71_AutoSized(_1d05e171e_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e171e_ArrTypeDecl _Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "Elem:" << _Src._field_Elem << ", ";
	_Stream << "Size:" << _Src._field_Size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e1e28_MapTypeDecl _Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e22d0_RetTypeDecl _Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e36dd_Expr _Src) {
	_Stream << "Expr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e39c9_RangeExpr _Src) {
	_Stream << "RangeExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e407e_UseExpr _Src) {
	_Stream << "UseExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e436a_TupleExpr _Src) {
	_Stream << "TupleExpr{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e49db_IsNil(_1d05e4722_LitExpr* _self_) {
	return (*(_self_))._field_Value.equal("nil", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e4722_LitExpr _Src) {
	_Stream << "LitExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e4d60_UnsafeExpr _Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e5635_IsSelf(_1d05e52d3_IdentExpr* _self_) {
	return (*(_self_))._field_Ident.equal("self", 4);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e52d3_IdentExpr _Src) {
	_Stream << "IdentExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e59dc_UnaryExpr _Src) {
	_Stream << "UnaryExpr{";
	_Stream << "Op:" << _Src._field_Op << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e5d94_VariadicExpr _Src) {
	_Stream << "VariadicExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e624b_CastExpr _Src) {
	_Stream << "CastExpr{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e6603_NsSelectionExpr _Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "Ns:" << _Src._field_Ns << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e6a76_SubIdentExpr _Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "IsSelf:" << _Src._field_IsSelf << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e6ee9_BinopExpr _Src) {
	_Stream << "BinopExpr{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e7967_Unhandled(_1d05e7604_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1d05e7bcb_Ignored(_1d05e7604_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(_self_))._field_Exception.get()._field_Deferred);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e7604_FnCallExpr _Src) {
	_Stream << "FnCallExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Exception:" << _Src._field_Exception << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e83d5_IsTargeted(_1d05e8083_FieldExprPair* _self_) {
	return ((*(_self_))._field_Field != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e8083_FieldExprPair _Src) {
	_Stream << "FieldExprPair{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e8858_StructLit _Src) {
	_Stream << "StructLit{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05e923d_IsEmpty(_1d05e8ccb_BraceLit* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e8ccb_BraceLit _Src) {
	_Stream << "BraceLit{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e9639_KeyValPair _Src) {
	_Stream << "KeyValPair{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val << ", ";
	_Stream << "Colon:" << _Src._field_Colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05ea151_IsEmpty(_1d05e9d21_SliceExpr* _self_) {
	return ((*(_self_))._field_Exprs.len() == 0LL);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05e9d21_SliceExpr _Src) {
	_Stream << "SliceExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ea690_IndexingExpr _Src) {
	_Stream << "IndexingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05eac9a_SlicingExpr _Src) {
	_Stream << "SlicingExpr{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Start:" << _Src._field_Start << ", ";
	_Stream << "To:" << _Src._field_To;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05eb086_Constraint _Src) {
	_Stream << "Constraint{";
	_Stream << "Mask:" << _Src._field_Mask;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05eb509_GenericDecl _Src) {
	_Stream << "GenericDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05eb8b1_LabelSt _Src) {
	_Stream << "LabelSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ebc68_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ec054_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "Token:" << _Src._field_Token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ec65e_AssignLeft _Src) {
	_Stream << "AssignLeft{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ecb9d_AssignSt _Src) {
	_Stream << "AssignSt{";
	_Stream << "Declarative:" << _Src._field_Declarative << ", ";
	_Stream << "Setter:" << _Src._field_Setter << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05eda8e_Stmt _Src) {
	_Stream << "Stmt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ee199_ScopeTree _Src) {
	_Stream << "ScopeTree{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d05eebd3_IsSelf(_1d05ee870_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1d05eee47_IsRef(_1d05ee870_ParamDecl* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d05ee870_ParamDecl _Src) {
	_Stream << "ParamDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0600ee2_IsAnon(_1d0600b90_FnDecl* _self_) {
	return (*(_self_))._field_Ident.equal("<anonymous>", 11);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0600b90_FnDecl _Src) {
	_Stream << "FnDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0601b6e_VarDecl _Src) {
	_Stream << "VarDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0602026_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d06029d8_IsInf(_1d0602686_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0602686_Iter _Src) {
	_Stream << "Iter{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d06032ad_IsWhileNext(_1d0602e5b_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0602e5b_WhileKind _Src) {
	_Stream << "WhileKind{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "NextToken:" << _Src._field_NextToken;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06037ec_RangeKind _Src) {
	_Stream << "RangeKind{";
	_Stream << "InToken:" << _Src._field_InToken << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0603ba4_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d060405b_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Label:" << _Src._field_Label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06044ce_If _Src) {
	_Stream << "If{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0604886_Else _Src) {
	_Stream << "Else{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0604d09_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Head:" << _Src._field_Head << ", ";
	_Stream << "Tail:" << _Src._field_Tail << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06054d0_TypeAliasDecl _Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0605953_Case _Src) {
	_Stream << "Case{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0606129_MatchCase _Src) {
	_Stream << "MatchCase{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06068bb_UseDecl _Src) {
	_Stream << "UseDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Full:" << _Src._field_Full << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0607191_AutoExpr(_1d0606d3e_EnumItemDecl* _self_) {
	return ((*(_self_))._field_Expr == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0606d3e_EnumItemDecl _Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0607bb9_DefaultTyped(_1d0607867_EnumDecl* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0607867_EnumDecl _Src) {
	_Stream << "EnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d060813c_TypeEnumItemDecl _Src) {
	_Stream << "TypeEnumItemDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0608747_TypeEnumDecl _Src) {
	_Stream << "TypeEnumDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Items:" << _Src._field_Items << ", ";
	_Stream << "End:" << _Src._field_End;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06089ab_FieldDecl _Src) {
	_Stream << "FieldDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0609308_StructDecl _Src) {
	_Stream << "StructDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06099ce_TraitDecl _Src) {
	_Stream << "TraitDecl{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Inherits:" << _Src._field_Inherits << ", ";
	_Stream << "Methods:" << _Src._field_Methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d060a67d_IsTraitImpl(_1d060a0d9_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1d060a8e2_IsStructImpl(_1d060a0d9_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d060a0d9_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "End:" << _Src._field_End << ", ";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d06111de_FieldIns> _1d060b6a1_instance(jule::Ptr<_1d060b2e9_Field> _self_) {
	return jule::new_ptr<_1d06111de_FieldIns>(_1d06111de_FieldIns{._field_Decl=_self_, });;
}







std::ostream &operator<<(std::ostream &_Stream, _1d060b2e9_Field _Src) {
	_Stream << "Field{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d060d0a9_Operators _Src) {
	_Stream << "Operators{";
	_Stream << "Eq:" << _Src._field_Eq << ", ";
	_Stream << "Gt:" << _Src._field_Gt << ", ";
	_Stream << "GtEq:" << _Src._field_GtEq << ", ";
	_Stream << "Lt:" << _Src._field_Lt << ", ";
	_Stream << "LtEq:" << _Src._field_LtEq << ", ";
	_Stream << "Shl:" << _Src._field_Shl << ", ";
	_Stream << "Shr:" << _Src._field_Shr << ", ";
	_Stream << "Add:" << _Src._field_Add << ", ";
	_Stream << "Sub:" << _Src._field_Sub << ", ";
	_Stream << "Div:" << _Src._field_Div << ", ";
	_Stream << "Mul:" << _Src._field_Mul << ", ";
	_Stream << "Mod:" << _Src._field_Mod << ", ";
	_Stream << "BitAnd:" << _Src._field_BitAnd << ", ";
	_Stream << "BitOr:" << _Src._field_BitOr << ", ";
	_Stream << "BitXor:" << _Src._field_BitXor << ", ";
	_Stream << "Neg:" << _Src._field_Neg << ", ";
	_Stream << "Pos:" << _Src._field_Pos << ", ";
	_Stream << "BitNot:" << _Src._field_BitNot << ", ";
	_Stream << "AddAssign:" << _Src._field_AddAssign << ", ";
	_Stream << "SubAssign:" << _Src._field_SubAssign << ", ";
	_Stream << "DivAssign:" << _Src._field_DivAssign << ", ";
	_Stream << "MulAssign:" << _Src._field_MulAssign << ", ";
	_Stream << "ModAssign:" << _Src._field_ModAssign << ", ";
	_Stream << "ShlAssign:" << _Src._field_ShlAssign << ", ";
	_Stream << "ShrAssign:" << _Src._field_ShrAssign << ", ";
	_Stream << "BitOrAssign:" << _Src._field_BitOrAssign << ", ";
	_Stream << "BitAndAssign:" << _Src._field_BitAndAssign << ", ";
	_Stream << "BitXorAssign:" << _Src._field_BitXorAssign;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d0611bd4_StructIns> _1d060e330_instance(jule::Ptr<_1d060ddbd_Struct> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	jule::Ptr<_1d0611bd4_StructIns> _9917_ins = jule::new_ptr<_1d0611bd4_StructIns>(_1d0611bd4_StructIns{._field_Decl=_self_, ._field_Fields=jule::Slice<jule::Ptr<_1d06111de_FieldIns>>::alloc(0LL, _self_.get()._field_Fields.len()), ._field_Statics=jule::Slice<jule::Ptr<_1d21bb65a_Var>>::alloc(0LL, _self_.get()._field_Statics.len()), ._field_Refers=static__1d062a12b_new(), });;
	{
		auto expr = &(_self_.get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e0b849:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _10621_s = *it;
			{
				_9917_ins.get()._field_Statics = jule::alloc_for_append(_9917_ins.get()._field_Statics,1);_9917_ins.get()._field_Statics.__push(jule::new_ptr<_1d21bb65a_Var>((*(_10621_s))));;
			}
			_iter_next_1b6e0b849:;
			++it;
			goto _iter_begin_1b6e0b849;
		}
		_iter_end_1b6e0b849:;
	};
	{
		auto expr = &(_self_.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e0cbad:;
		if (it != expr_end) {
			jule::Ptr<_1d060b2e9_Field> _11021_f = *it;
			{
				_9917_ins.get()._field_Fields = jule::alloc_for_append(_9917_ins.get()._field_Fields,1);_9917_ins.get()._field_Fields.__push(_1d060b6a1_instance(_11021_f));;
				if ((((!(_11021_f.get()._field_Mutable)) && (_11021_f.get()._field_Kind.get()._field_Kind != nullptr)) && _1d21d35d9_Mutable(_11021_f.get()._field_Kind.get()._field_Kind.ptr()))) {
					_9917_ins.get()._field_Mutable=true;
				};
			}
			_iter_next_1b6e0cbad:;
			++it;
			goto _iter_begin_1b6e0cbad;
		}
		_iter_end_1b6e0cbad:;
	};
	if ((_self_.get()._field_Generics.len() == 0LL)) {
		_9917_ins.get()._field_Methods=_self_.get()._field_Methods;
	} else {
		_9917_ins.get()._field_Methods=jule::Slice<jule::Ptr<_1d06242bd_Fn>>::alloc(0LL, _self_.get()._field_Methods.len());
		{
			auto expr = &(_self_.get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6e0ecc0:;
			if (it != expr_end) {
				jule::Ptr<_1d06242bd_Fn> _12125_f = *it;
				{
					jule::Ptr<_1d06242bd_Fn> _12225_fins = jule::new_ptr<_1d06242bd_Fn>((*(_12125_f)));;
					_12225_fins.get()._field_Instances=nullptr;
					_9917_ins.get()._field_Methods = jule::alloc_for_append(_9917_ins.get()._field_Methods,1);_9917_ins.get()._field_Methods.__push(_12225_fins);;
				}
				_iter_next_1b6e0ecc0:;
				++it;
				goto _iter_begin_1b6e0ecc0;
			}
			_iter_end_1b6e0ecc0:;
		};
	};
	return _9917_ins;;
}



inline jule::Ptr<_1d0611bd4_StructIns> _1d060e60a_appendInstance(_1d060ddbd_Struct* _self_, jule::Ptr<_1d0611bd4_StructIns>* _13338_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e11d7c:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _13921_ains = *it;
			{
				if (_1d06127c8_Same(_13921_ains.ptr(), (*(_13338_ins)))) {
					return _13921_ains;;
				};
			}
			_iter_next_1b6e11d7c:;
			++it;
			goto _iter_begin_1b6e11d7c;
		}
		_iter_end_1b6e11d7c:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_13338_ins)));;
	return nullptr;;
}



inline jule::Ptr<_1d06242bd_Fn> _1d060e9b2_FindMethod(_1d060ddbd_Struct* _self_, jule::Str _15129_ident, jule::Bool _15141_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e1328a:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _15221_f = *it;
			{
				if (((_15221_f.get()._field_Statically == _15141_statically) && (_15221_f.get()._field_Ident == _15129_ident))) {
					return _15221_f;;
				};
			}
			_iter_next_1b6e1328a:;
			++it;
			goto _iter_begin_1b6e1328a;
		}
		_iter_end_1b6e1328a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21bb65a_Var> _1d060ecc0_FindStatic(_1d060ddbd_Struct* _self_, jule::Str _16229_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e139a5:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _16321_v = *it;
			{
				if ((_16321_v.get()._field_Ident == _16229_ident)) {
					return _16321_v;;
				};
			}
			_iter_next_1b6e139a5:;
			++it;
			goto _iter_begin_1b6e139a5;
		}
		_iter_end_1b6e139a5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d060b2e9_Field> _1d06100cd_FindField(_1d060ddbd_Struct* _self_, jule::Str _17328_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e1528c:;
		if (it != expr_end) {
			jule::Ptr<_1d060b2e9_Field> _17421_f = *it;
			{
				if ((_17421_f.get()._field_Ident == _17328_ident)) {
					return _17421_f;;
				};
			}
			_iter_next_1b6e1528c:;
			++it;
			goto _iter_begin_1b6e1528c;
		}
		_iter_end_1b6e1528c:;
	};
	return nullptr;;
}



inline jule::Bool _1d06103db_IsImplements(_1d060ddbd_Struct* _self_, jule::Ptr<_1d21494c8_Trait> _18327_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e1616c:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> *_18416_it = it;
			{
				if ((_18327_t == (*(_18416_it)))) {
					return true;;
				};
			}
			_iter_next_1b6e1616c:;
			++it;
			goto _iter_begin_1b6e1616c;
		}
		_iter_end_1b6e1616c:;
	};
	return false;;
}



inline jule::Bool _1d06106e9_IsDerives(_1d060ddbd_Struct* _self_, jule::Str _19324_ident) {
	{
		auto expr = &((*(_self_))._field_Directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e166de:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> *_19416_d = it;
			{
				if ((*(_19416_d)).get()._field_Tag.get()._field_Kind.equal("derive", 6)) {
					if ((((*(_19416_d)).get()._field_Args.len() == 1LL) && ((*(_19416_d)).get()._field_Args[0LL].get()._field_Kind == _19324_ident))) {
						return true;;
					};
				};
			}
			_iter_next_1b6e166de:;
			++it;
			goto _iter_begin_1b6e166de;
		}
		_iter_end_1b6e166de:;
	};
	return false;;
}



inline jule::Bool _1d0610a07_IsUses(_1d060ddbd_Struct* _self_, jule::Ptr<_1d060ddbd_Struct> _20521_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e18aa9:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> *_20616_u = it;
			{
				while ((_20521_s == (*(_20616_u)))) {
					{
						return true;;
					}
				_iter_next_1b6e19329:;
				}
				_iter_end_1b6e19329:;;
			}
			_iter_next_1b6e18aa9:;
			++it;
			goto _iter_begin_1b6e18aa9;
		}
		_iter_end_1b6e18aa9:;
	};
	return false;;
}



inline jule::Bool _1d0610c6b_HasRefAccessible(_1d060ddbd_Struct* _self_) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e1989b:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> *_21616_m = it;
			{
				if ((((*(_21616_m)).get()._field_Params.len() > 0LL) && _1d0623322_IsRef((*(_21616_m)).get()._field_Params[0LL].ptr()))) {
					return true;;
				};
			}
			_iter_next_1b6e1989b:;
			++it;
			goto _iter_begin_1b6e1989b;
		}
		_iter_end_1b6e1989b:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d060ddbd_Struct _Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Depends:" << _Src._field_Depends << ", ";
	_Stream << "Uses:" << _Src._field_Uses << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Fields:" << _Src._field_Fields << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Implements:" << _Src._field_Implements << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06111de_FieldIns _Src) {
	_Stream << "FieldIns{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0615b83_OperandExprModel _Src) {
	_Stream << "OperandExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Model:" << _Src._field_Model;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061614a_BinopExprModel _Src) {
	_Stream << "BinopExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0616502_UnaryExprModel _Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06168ed_StructArgExprModel _Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0616ca5_StructLitExprModel _Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "Strct:" << _Src._field_Strct << ", ";
	_Stream << "Args:" << _Src._field_Args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06170b3_AllocStructLitExprModel _Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "Lit:" << _Src._field_Lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0617613_CastingExprModel _Src) {
	_Stream << "CastingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "ExprKind:" << _Src._field_ExprKind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0617eb5_FnCallExprModel _Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "IsCo:" << _Src._field_IsCo << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Except:" << _Src._field_Except << ", ";
	_Stream << "Assigned:" << _Src._field_Assigned;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061836c_SliceExprModel _Src) {
	_Stream << "SliceExprModel{";
	_Stream << "ElemKind:" << _Src._field_ElemKind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06187e0_IndexingExprModel _Src) {
	_Stream << "IndexingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Index:" << _Src._field_Index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0618b97_AnonFnExprModel _Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Global:" << _Src._field_Global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061904e_KeyValPairExprModel _Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "Key:" << _Src._field_Key << ", ";
	_Stream << "Val:" << _Src._field_Val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06194c2_MapExprModel _Src) {
	_Stream << "MapExprModel{";
	_Stream << "KeyKind:" << _Src._field_KeyKind << ", ";
	_Stream << "ValKind:" << _Src._field_ValKind << ", ";
	_Stream << "Entries:" << _Src._field_Entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0619a11_SlicingExprModel _Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061a050_TraitSubIdentExprModel _Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Trt:" << _Src._field_Trt;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061a836_StructSubIdentExprModel _Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method << ", ";
	_Stream << "Field:" << _Src._field_Field << ", ";
	_Stream << "Owner:" << _Src._field_Owner;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061abcc_StructStaticIdentExprModel _Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "Structure:" << _Src._field_Structure << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Method:" << _Src._field_Method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061b095_ArrayExprModel _Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061b381_CommonIdentExprModel _Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061b8e2_CommonSubIdentExprModel _Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "ExprKind:" << _Src._field_ExprKind << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061bbde_TupleExprModel _Src) {
	_Stream << "TupleExprModel{";
	_Stream << "Datas:" << _Src._field_Datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061c0b8_BuiltinOutCallExprModel _Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061c4a3_BuiltinOutlnCallExprModel _Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Debug:" << _Src._field_Debug;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061c7c2_BuiltinCloneCallExprModel _Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061cbac_BuiltinNewCallExprModel _Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Init:" << _Src._field_Init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061d097_BuiltinPanicCallExprModel _Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061d54d_BuiltinAssertCallExprModel _Src) {
	_Stream << "BuiltinAssertCallExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Log:" << _Src._field_Log;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061da04_BuiltinMakeCallExprModel _Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Len:" << _Src._field_Len << ", ";
	_Stream << "Cap:" << _Src._field_Cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061ddde_BuiltinAppendCallExprModel _Src) {
	_Stream << "BuiltinAppendCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elements:" << _Src._field_Elements;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061e20d_BuiltinLenCallExprModel _Src) {
	_Stream << "BuiltinLenCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061e52c_BuiltinCapCallExprModel _Src) {
	_Stream << "BuiltinCapCallExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d061ebd1_BuiltinDeleteCallExprModel _Src) {
	_Stream << "BuiltinDeleteCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Key:" << _Src._field_Key;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0620044_BuiltinCopyCallExprModel _Src) {
	_Stream << "BuiltinCopyCallExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Src:" << _Src._field_Src;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d062042e_BuiltinErrorCallExprModel _Src) {
	_Stream << "BuiltinErrorCallExprModel{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Err:" << _Src._field_Err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d062072b_SizeofExprModel _Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0620a17_AlignofExprModel _Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0620d03_RuneExprModel _Src) {
	_Stream << "RuneExprModel{";
	_Stream << "Code:" << _Src._field_Code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0621111_IntegratedToStrExprModel _Src) {
	_Stream << "IntegratedToStrExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06214c9_BackendEmitExprModel _Src) {
	_Stream << "BackendEmitExprModel{";
	_Stream << "Code:" << _Src._field_Code << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06217b5_FreeExprModel _Src) {
	_Stream << "FreeExprModel{";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0622277_RetType _Src) {
	_Stream << "RetType{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Idents:" << _Src._field_Idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d06260a0_ParamIns> _1d0622d49_instance(jule::Ptr<_1d0622981_Param> _self_) {
	return jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=_self_, });;
}



inline jule::Bool _1d06230ad_IsSelf(_1d0622981_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1d0623322_IsRef(_1d0622981_Param* _self_) {
	return ((!((*(_self_))._field_Ident.empty())) && ((*(_self_))._field_Ident[0LL] == '&'));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0622981_Param _Src) {
	_Stream << "Param{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Variadic:" << _Src._field_Variadic << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0624730_IsVoid(_1d06242bd_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1d0624994_IsMethod(_1d06242bd_Fn* _self_) {
	return ((*(_self_))._field_Owner != nullptr);;
}



inline jule::Bool _1d0624c08_IsEntryPoint(_1d06242bd_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1d0624e6c_IsInit(_1d06242bd_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1d06251d1_IsAnon(_1d06242bd_Fn* _self_) {
	return _22be15359_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1d0625445_AnyVar(_1d06242bd_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(_self_))._field_Result.get()._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d06256a9_instanceForce(jule::Ptr<_1d06242bd_Fn> _self_) {
	jule::Ptr<_1d0626e6e_FnIns> _10017_ins = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_Decl=_self_, ._field_Scope=jule::new_ptr<_1d2174613_Scope>(), ._field_Refers=static__1d062a12b_new(), });;
	_10017_ins.get()._field_Params=jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>::alloc(0LL, _self_.get()._field_Params.len());
	{
		auto expr = &(_self_.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e31dad:;
		if (it != expr_end) {
			jule::Ptr<_1d0622981_Param> _10721_p = *it;
			{
				_10017_ins.get()._field_Params = jule::alloc_for_append(_10017_ins.get()._field_Params,1);_10017_ins.get()._field_Params.__push(_1d0622d49_instance(_10721_p));;
			}
			_iter_next_1b6e31dad:;
			++it;
			goto _iter_begin_1b6e31dad;
		}
		_iter_end_1b6e31dad:;
	};
	if ((_10017_ins.get()._field_Decl.get()._field_Result != nullptr)) {
		_10017_ins.get()._field_Result=_10017_ins.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Kind;
	};
	return _10017_ins;;
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d062591d_instance(jule::Ptr<_1d06242bd_Fn> _self_) {
	if (((_self_.get()._field_Generics.len() == 0LL) && (_self_.get()._field_Instances.len() == 1LL))) {
		return _self_.get()._field_Instances[0LL];;
	};
	return _1d06256a9_instanceForce(_self_);;
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d0625be8_appendInstance(_1d06242bd_Fn* _self_, jule::Ptr<_1d0626e6e_FnIns>* _12838_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e35ec2:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _14421_ains = *it;
			{
				if (_1d0628877_Same(_14421_ains.ptr(), (*(_12838_ins)))) {
					return _14421_ains;;
				};
			}
			_iter_next_1b6e35ec2:;
			++it;
			goto _iter_begin_1b6e35ec2;
		}
		_iter_end_1b6e35ec2:;
	};
	(*(_self_))._field_Instances = jule::alloc_for_append((*(_self_))._field_Instances,1);(*(_self_))._field_Instances.__push((*(_12838_ins)));;
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06242bd_Fn _Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Global:" << _Src._field_Global << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Exceptional:" << _Src._field_Exceptional << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Generics:" << _Src._field_Generics << ", ";
	_Stream << "Result:" << _Src._field_Result << ", ";
	_Stream << "Params:" << _Src._field_Params << ", ";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Instances:" << _Src._field_Instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d0626479_Str(_1d06260a0_ParamIns* _self_) {
	jule::Str _16617_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Mutable) {
		(_16617_s).append("mut ", 4);
	};
	if ((*(_self_))._field_Decl.get()._field_Reference) {
		(_16617_s).append("&_:", 3);
	};
	if (_1d06230ad_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1d0623322_IsRef((*(_self_))._field_Decl.ptr())) {
			(_16617_s).append("&", 1);
		};
		(_16617_s).append("self", 4);
		return _16617_s;;
	};
	if ((*(_self_))._field_Decl.get()._field_Variadic) {
		(_16617_s).append("...", 3);
	};
	if (((*(_self_))._field_Kind != nullptr)) {
		_16617_s+=_1d21d2242_Str((*(_self_))._field_Kind.ptr());
	};
	return _16617_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06260a0_ParamIns _Src) {
	_Stream << _1d0626479_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d062729e_Str(_1d0626e6e_FnIns* _self_) {
	;
	return _1d0628b85_GetKindStr(_self_, false);;
}



inline jule::Bool _1d06275ac_Equal(jule::Ptr<_1d0626e6e_FnIns> _self_, jule::Ptr<_1d21d1d46_TypeKind> _21721_other) {
	jule::Ptr<_1d0626e6e_FnIns> _21813_f = _1d21d5751_Fn(_21721_other.ptr());;
	if ((_21813_f == nullptr)) {
		return false;;
	};
	return _1d0627a1e_EqualFn(_self_, &(_21813_f));;
}



inline jule::Bool _1d0627a1e_EqualFn(jule::Ptr<_1d0626e6e_FnIns> _self_, jule::Ptr<_1d0626e6e_FnIns>* _22824_f) {
	if ((_self_.get()._field_Decl.get()._field_Exceptional != (*(_22824_f)).get()._field_Decl.get()._field_Exceptional)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Unsafety != (*(_22824_f)).get()._field_Decl.get()._field_Unsafety)) {
		return false;;
	};
	if ((_1d0624730_IsVoid(_self_.get()._field_Decl.ptr()) != _1d0624730_IsVoid((*(_22824_f)).get()._field_Decl.ptr()))) {
		return false;;
	};
	jule::Fn<jule::Bool(jule::Ptr<_1d06260a0_ParamIns>,jule::Ptr<_1d06260a0_ParamIns>)> _23813_checkParams = jule::Fn<jule::Bool(jule::Ptr<_1d06260a0_ParamIns>,jule::Ptr<_1d06260a0_ParamIns>)>([=](jule::Ptr<_1d06260a0_ParamIns> _23830_p1, jule::Ptr<_1d06260a0_ParamIns> _23845_p2) mutable -> jule::Bool {
		if ((_23830_p1.get()._field_Decl.get()._field_Mutable != _23845_p2.get()._field_Decl.get()._field_Mutable)) {
			return false;;
		};
		if (_1d06230ad_IsSelf(_23830_p1.get()._field_Decl.ptr())) {
			if ((!(_1d06230ad_IsSelf(_23845_p2.get()._field_Decl.ptr())))) {
				return false;;
			};
			if ((_1d0623322_IsRef(_23830_p1.get()._field_Decl.ptr()) != _1d0623322_IsRef(_23845_p2.get()._field_Decl.ptr()))) {
				return false;;
			};
			return true;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Reference != _23845_p2.get()._field_Decl.get()._field_Reference)) {
			return false;;
		};
		if ((_23830_p1.get()._field_Decl.get()._field_Variadic != _23845_p2.get()._field_Decl.get()._field_Variadic)) {
			return false;;
		};
		return _1d21d2550_Equal(_23830_p1.get()._field_Kind, _23845_p2.get()._field_Kind);;
	});;
	if (((*(_22824_f)).get()._field_Params.len() != _self_.get()._field_Params.len())) {
		return false;;
	};
	jule::I64 _27017_i = 0LL;;
	for (; (_27017_i < _self_.get()._field_Params.len()); (_27017_i)++) {
		{
			if ((!(_23813_checkParams(_self_.get()._field_Params[_27017_i], (*(_22824_f)).get()._field_Params[_27017_i])))) {
				return false;;
			};
		}
	_iter_next_1b6e436a5:;
	}
	_iter_end_1b6e436a5:;;
	if ((!(_1d0624730_IsVoid(_self_.get()._field_Decl.ptr())))) {
		if ((!(_1d21d2550_Equal(_self_.get()._field_Result, (*(_22824_f)).get()._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1d0627d2c_equalTrait(jule::Ptr<_1d0626e6e_FnIns> _self_, jule::Ptr<_1d0626e6e_FnIns>* _28727_other) {
	if ((_self_.get()._field_Decl.get()._field_Public != (*(_28727_other)).get()._field_Decl.get()._field_Public)) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Ident != (*(_28727_other)).get()._field_Decl.get()._field_Ident)) {
		return false;;
	};
	if ((!(_1d0627a1e_EqualFn(_self_, _28727_other)))) {
		return false;;
	};
	if ((_self_.get()._field_Decl.get()._field_Generics.len() != (*(_28727_other)).get()._field_Decl.get()._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _1d0628091_Types(_1d0626e6e_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1b6e47676:;
			{
				return nullptr;;
			}
		}
		else if ((_1d21d6202_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1b6e476dc:;
			{
				return jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>::make({(*(_self_))._field_Result});;
			}
		}
		else {
			_case_begin_1b6e47610:;
			{
				return _1d21d6202_Tup((*(_self_))._field_Result.ptr()).get()._field_Types;;
			}
		}
		_match_end_1b6e47544:;
	};
}



inline jule::Bool _1d0628305_IsBuiltin(_1d0626e6e_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1d0628569_IsAnon(_1d0626e6e_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1d06251d1_IsAnon((*(_self_))._field_Decl.ptr())));;
}



inline jule::Bool _1d0628877_Same(_1d0626e6e_FnIns* _self_, jule::Ptr<_1d0626e6e_FnIns> _33019_f) {
	if ((((*(_self_))._field_Decl != _33019_f.get()._field_Decl) || (_33019_f.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e4a9a9:;
		if (it != expr_end) {
			jule::I64 _33513_i = it - expr->begin();
			jule::Ptr<_1d21d05b4_InsGeneric> *_33516_g = it;
			{
				jule::Ptr<_1d21d05b4_InsGeneric> _33617_g2 = _33019_f.get()._field_Generics[_33513_i];;
				if ((((*(_33516_g)).get()._field_Kind.get()._field_BindIdent != _33617_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1d21d2550_Equal((*(_33516_g)).get()._field_Kind, _33617_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b6e4a9a9:;
			++it;
			_33513_i++;
			goto _iter_begin_1b6e4a9a9;
		}
		_iter_end_1b6e4a9a9:;
	};
	return true;;
}



inline jule::Str _1d0628b85_GetKindStr(_1d0626e6e_FnIns* _self_, jule::Bool _34725_ident) {
	jule::Str _34817_s = jule::Str();;
	if ((*(_self_))._field_Decl.get()._field_Unsafety) {
		(_34817_s).append("unsafe ", 7);
	};
	(_34817_s).append("fn", 2);
	if ((_34725_ident && ((*(_self_))._field_Decl != nullptr))) {
		_34817_s+=(jule::Str(" ", 1) + (*(_self_))._field_Decl.get()._field_Ident);
	};
	(_34817_s).append("(", 1);
	jule::I64 _36113_n = (*(_self_))._field_Params.len();;
	if ((_36113_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6e4ea35:;
			if (it != expr_end) {
				jule::Ptr<_1d06260a0_ParamIns> *_36320_p = it;
				{
					_34817_s+=_1d0626479_Str((*(_36320_p)).ptr());
					(_34817_s).append(",", 1);
				}
				_iter_next_1b6e4ea35:;
				++it;
				goto _iter_begin_1b6e4ea35;
			}
			_iter_end_1b6e4ea35:;
		};
		(_34817_s).mut_slice(0LL, (_34817_s.len() - 1LL));;
	};
	(_34817_s).append(")", 1);
	if ((*(_self_))._field_Decl.get()._field_Exceptional) {
		(_34817_s).append("!", 1);
	};
	if ((!(_1d0624730_IsVoid((*(_self_))._field_Decl.ptr())))) {
		(_34817_s).append(":", 1);
		_34817_s+=_1d21d2242_Str((*(_self_))._field_Result.ptr());
	};
	return _34817_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0626e6e_FnIns _Src) {
	_Stream << _1d062729e_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1d0629dc8_ReferenceStack> static__1d062a12b_new(void) {
	return jule::new_ptr<_1d0629dc8_ReferenceStack>(_1d0629dc8_ReferenceStack{._field_buffer=jule::Slice<jule::Any>::alloc(0LL, 10LL)});;
}



inline jule::I64 _1d062a4b1_Len(_1d0629dc8_ReferenceStack* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_buffer.len());;
}



inline jule::Any _1d062a7be_At(_1d0629dc8_ReferenceStack* _self_, jule::I64 _6821_i) {
	return (*(_self_))._field_buffer[_6821_i];;
}



inline void _1d062aa44_Push(_1d0629dc8_ReferenceStack* _self_, jule::Any _7327_ref) {
	(*(_self_))._field_buffer = jule::alloc_for_append((*(_self_))._field_buffer,1);(*(_self_))._field_buffer.__push(_7327_ref);;
}



inline jule::Bool _1b763895a_Exist(_1d0629dc8_ReferenceStack* _self_, jule::Ptr<_1d0626e6e_FnIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7639c36:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type7_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b7639c36:;
			++it;
			goto _iter_begin_1b7639c36;
		}
		_iter_end_1b7639c36:;
	};
	return false;;
}

inline jule::Bool _1b764c078_Exist(_1d0629dc8_ReferenceStack* _self_, jule::Ptr<_1d21bb65a_Var> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b764d310:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type8_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b764d310:;
			++it;
			goto _iter_begin_1b764d310;
		}
		_iter_end_1b764d310:;
	};
	return false;;
}

inline jule::Bool _1b76d6a4c_Exist(_1d0629dc8_ReferenceStack* _self_, jule::Ptr<_1d0611bd4_StructIns> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b76d7d28:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type9_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b76d7d28:;
			++it;
			goto _iter_begin_1b76d7d28;
		}
		_iter_end_1b76d7d28:;
	};
	return false;;
}

inline jule::Bool _1b797555a_Exist(_1d0629dc8_ReferenceStack* _self_, jule::Ptr<_1d21494c8_Trait> _7823_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79767ae:;
		if (it != expr_end) {
			jule::Any *_7916_ref = it;
			{
				if ((__jule_any_type10_compare((*(_7916_ref)), _7823_t))) {
					return true;;
				};
			}
			_iter_next_1b79767ae:;
			++it;
			goto _iter_begin_1b79767ae;
		}
		_iter_end_1b79767ae:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0629dc8_ReferenceStack _Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d062b209_Pass _Src) {
	_Stream << "Pass{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Text:" << _Src._field_Text;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d2147141_symbolBuilder> _1d03b6505_getRoot(jule::Ptr<_1d2147141_symbolBuilder> _self_) {
	jule::Ptr<_1d2147141_symbolBuilder> _32517_root = _self_;;
	while ((_32517_root.get()._field_owner != nullptr)) {
		{
			_32517_root=_32517_root.get()._field_owner;
		}
	_iter_next_1b6e67c7e:;
	}
	_iter_end_1b6e67c7e:;;
	return _32517_root;;
}



inline void _1d03b67ad_pushErr(_1d2147141_symbolBuilder* _self_, jule::Ptr<_22be1281d_Token>* _33227_token, jule::Str _33242_fmt, jule::Slice<jule::Any> _33255_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1d2199171_compilerErr(_33227_token, true, _33242_fmt, _33255_args));;
}



inline void _1d03b6b76_pushErrText(_1d2147141_symbolBuilder* _self_, jule::Ptr<_22be1281d_Token>* _33631_token, jule::Str _33646_fmt, jule::Slice<jule::Any> _33659_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1d2199171_compilerErr(_33631_token, false, _33646_fmt, _33659_args));;
}



inline void _1d03b6e95_pushSuggestion(_1d2147141_symbolBuilder* _self_, jule::Str _34133_fmt, jule::Slice<jule::Any> _34146_args) {
	{
		_1d219a606_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _34133_fmt, _34146_args);
	};
}



inline jule::Bool _1d03b734c_checkCppUseDeclPath(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d06068bb_UseDecl>* _34539_decl, jule::Str _34555_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _34613_ext = _22b9a5977_Ext(_34555_path);;
	if (((!(_22ba2ee52_IsValidHeaderExt(_34613_ext))) && (!(_22ba301e9_IsValidCppExt(_34613_ext))))) {
		_1d03b67ad_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("invalid C++ extension: @", 24), jule::Slice<jule::Any>::make({jule::Any(_34613_ext, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_22a8baa8b_Status> _35313_info = ({
		auto except = static__22a8ab8a1_Of(_34555_path);
		(except.ok()) ? (except.result) : ({{
			_1d03b67ad_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			__jule_func_result = false;
			return __jule_func_result;;
		} jule::Ptr<_22a8baa8b_Status>(nullptr);});
	});;
	if (_22a8bae98_IsDir(_35313_info.ptr())) {
		_1d03b67ad_pushErr(_self_, &((*(_34539_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_34539_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d03b765a_buildCppHeaderImport(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d06068bb_UseDecl>* _36544_decl) {
	jule::Str _36617_path = (*(_36544_decl)).get()._field_LinkPath;;
	if ((!(_22ba2eb99_IsStdHeaderPath((*(_36544_decl)).get()._field_LinkPath)))) {
		_36617_path=_22b9a56d0_Join(jule::Slice<jule::Str>::make({_22be18329_Dir((*(_36544_decl)).get()._field_Token.get()._field_File.ptr()),(*(_36544_decl)).get()._field_LinkPath}));
		jule::Bool _37021_ok = _1d03b734c_checkCppUseDeclPath(_self_, _36544_decl, _36617_path);;
		if ((!(_37021_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22b9a5c1e_Abs(_36617_path);
			_36617_path = __jule_assign_result.__jule_result_arg0;
			_37021_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_37021_ok))) {
			_1d03b67ad_pushErr(_self_, &((*(_36544_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_36544_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		};
	};
	return jule::new_ptr<_1d219307c_ImportInfo>(_1d219307c_ImportInfo{._field_Token=(*(_36544_decl)).get()._field_Token, ._field_Path=_36617_path, ._field_LinkPath=(*(_36544_decl)).get()._field_LinkPath, ._field_Ident=jule::Str(), ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, });;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d03b7968_buildStdImport(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d06068bb_UseDecl>* _39338_decl) {
	jule::Str _39417_path = (*(_39338_decl)).get()._field_LinkPath.slice(5LL);;
	_39417_path=_22b9a1951_Replace(_39417_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_39417_path=_22b9a56d0_Join(jule::Slice<jule::Str>::make({_22bb20cac_PathStdlib,_39417_path}));
	jule::Bool _39720_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22b9a5c1e_Abs(_39417_path);
		_39417_path = __jule_assign_result.__jule_result_arg0;
		_39720_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_39720_ok))) {
		_1d03b67ad_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22a8baa8b_Status> _40413_info = ({
		auto except = static__22a8ab8a1_Of(_39417_path);
		(except.ok()) ? (except.result) : ({{
			_1d03b67ad_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_22a8baa8b_Status>(nullptr);});
	});;
	if ((!(_22a8bae98_IsDir(_40413_info.ptr())))) {
		_1d03b67ad_pushErr(_self_, &((*(_39338_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_39338_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _41413_i = (_22b99c243_FindLast((*(_39338_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _41513_ident = (*(_39338_decl)).get()._field_LinkPath.slice(_41413_i);;
	return jule::new_ptr<_1d219307c_ImportInfo>(_1d219307c_ImportInfo{._field_Token=(*(_39338_decl)).get()._field_Token, ._field_Path=_39417_path, ._field_LinkPath=(*(_39338_decl)).get()._field_LinkPath, ._field_Ident=_41513_ident, ._field_Alias=(*(_39338_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=true, ._field_ImportAll=(*(_39338_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1d2195bb7_Package>(_1d2195bb7_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d03b7c76_buildIdentImport(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d06068bb_UseDecl>* _43241_decl) {
	jule::Str _43313_modPath = _1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e540_GetModPath(_self_.get()._field_importer);;
	if ((_43313_modPath.len() == 0LL)) {
		_1d03b67ad_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("no module file found in current directory or any parent directory", 65), jule::Slice<jule::Any>());
		_1d03b6e95_pushSuggestion(_self_.ptr(), jule::Str("use \"julec mod init\" command to initialize module", 49), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Str _44017_path = (*(_43241_decl)).get()._field_LinkPath;;
	_44017_path=_22b9a1951_Replace(_44017_path, jule::Str("::", 2), jule::Str("/", 1), -1LL);
	_44017_path=_22b9a56d0_Join(jule::Slice<jule::Str>::make({_43313_modPath,_44017_path}));
	jule::Bool _44420_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22b9a5c1e_Abs(_44017_path);
		_44017_path = __jule_assign_result.__jule_result_arg0;
		_44420_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_44420_ok))) {
		_1d03b67ad_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_22a8baa8b_Status> _45113_info = ({
		auto except = static__22a8ab8a1_Of(_44017_path);
		(except.ok()) ? (except.result) : ({{
			_1d03b67ad_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
			return nullptr;;
		} jule::Ptr<_22a8baa8b_Status>(nullptr);});
	});;
	if ((!(_22a8bae98_IsDir(_45113_info.ptr())))) {
		_1d03b67ad_pushErr(_self_.ptr(), &((*(_43241_decl)).get()._field_Token), jule::Str("used directory path not found/access: @", 39), jule::Slice<jule::Any>::make({jule::Any((*(_43241_decl)).get()._field_LinkPath, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _46113_i = (_22b99c243_FindLast((*(_43241_decl)).get()._field_LinkPath, jule::Str("::", 2)) + 1LL);;
	jule::Str _46213_ident = (*(_43241_decl)).get()._field_LinkPath.slice(_46113_i);;
	return jule::new_ptr<_1d219307c_ImportInfo>(_1d219307c_ImportInfo{._field_Token=(*(_43241_decl)).get()._field_Token, ._field_Path=_44017_path, ._field_LinkPath=(*(_43241_decl)).get()._field_LinkPath, ._field_Ident=_46213_ident, ._field_Alias=(*(_43241_decl)).get()._field_Alias, ._field_Binded=false, ._field_Std=false, ._field_ImportAll=(*(_43241_decl)).get()._field_Full, ._field_Package=jule::new_ptr<_1d2195bb7_Package>(_1d2195bb7_Package{._field_Files=nullptr}), });;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d03b8084_buildImport(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d06068bb_UseDecl>* _47936_decl) {
	{
		
		if ((*(_47936_decl)).get()._field_Binded) {
			_case_begin_1b6e7e5ae:;
			{
				return _1d03b765a_buildCppHeaderImport(_self_.ptr(), _47936_decl);;
			}
		}
		else if ((*(_47936_decl)).get()._field_Std) {
			_case_begin_1b6e7e801:;
			{
				return _1d03b7968_buildStdImport(_self_.ptr(), _47936_decl);;
			}
		}
		else {
			_case_begin_1b6e7ddb6:;
			{
				return _1d03b7c76_buildIdentImport(_self_, _47936_decl);;
			}
		}
		_match_end_1b6e7dd0b:;
	};
}



inline jule::Bool _1d03b8392_checkDuplicateUseDecl(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d219307c_ImportInfo>* _49041_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d219307c_ImportInfo> _49213_lpkg = _1d0404796_SelectPackage((*(_self_))._field_table.ptr(), jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>([=](jule::Ptr<_1d219307c_ImportInfo> _49248_spkg) mutable -> jule::Bool {
		return ((*(_49041_pkg)).get()._field_Path == _49248_spkg.get()._field_Path);;
	}));;
	if ((_49213_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1d03b67ad_pushErr(_self_, &((*(_49041_pkg)).get()._field_Token), jule::Str("use declaration duplication: @ is already used above", 52), jule::Slice<jule::Any>::make({jule::Any((*(_49041_pkg)).get()._field_LinkPath, &__jule_any_type5)}));
	_1d03b6e95_pushSuggestion(_self_, jule::Str("remove this use declaration, already used, it is safe", 53), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline void _1d03b86b1_implImportSelections(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d219307c_ImportInfo>* _50444_imp, jule::Ptr<_1d06068bb_UseDecl>* _50467_decl) {
	(*(_50444_imp)).get()._field_Selected=(*(_50467_decl)).get()._field_Selected;
	{
		auto expr = &((*(_50444_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e8301e:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> _50616_item = *it;
			{
				{
					auto expr = &((*(_50444_imp)).get()._field_Selected);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6e8374a:;
					if (it != expr_end) {
						jule::Ptr<_22be1281d_Token> _50720_citem = *it;
						{
							if ((_50616_item == _50720_citem)) {
								goto _iter_end_1b6e8374a;
							} else if ((_50616_item.get()._field_Kind == _50720_citem.get()._field_Kind)) {
								_1d03b67ad_pushErr(_self_, &(_50616_item), jule::Str("duplicated selection: @ is already selected", 43), jule::Slice<jule::Any>::make({jule::Any(_50616_item.get()._field_Kind, &__jule_any_type5)}));
								_1d03b6e95_pushSuggestion(_self_, jule::Str("remove this use selection, already selected, it is safe", 55), jule::Slice<jule::Any>());
								goto _iter_end_1b6e8374a;
							};
						}
						_iter_next_1b6e8374a:;
						++it;
						goto _iter_begin_1b6e8374a;
					}
					_iter_end_1b6e8374a:;
				};
			}
			_iter_next_1b6e8301e:;
			++it;
			goto _iter_begin_1b6e8301e;
		}
		_iter_end_1b6e8301e:;
	};
}



inline jule::Str _1d03b89be_getAsLinkPath(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Str _51937_path) {
	if (_22b99a95b_HasPrefix(_51937_path, _22bb20cac_PathStdlib)) {
		(_51937_path).mut_slice(_22bb20cac_PathStdlib.len());;
		return (jule::Str("std", 3) + _22b9a1951_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL));;
	};
	jule::Str _52514_root;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22b9a5c1e_Abs(_1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e540_GetModPath(_self_.get()._field_importer));
		_52514_root = __jule_assign_result.__jule_result_arg0;
	});
	(_51937_path).mut_slice(_52514_root.len());;
	if ((_51937_path[0LL] == 47LLU)) {
		(_51937_path).mut_slice(1LL);;
	};
	return _22b9a1951_Replace(_51937_path, jule::Str("/", 1), jule::Str("::", 2), -1LL);;
}



inline void _1d03b8d87_pushCycleError(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d2147141_symbolBuilder>* _53335_sb, jule::Str _53355_path, jule::Str* _53371_message) {
	;
	jule::Str _53513_refersTo = _22ba3cb0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_1d03b89be_getAsLinkPath(_self_, _22be18329_Dir((*(_53335_sb)).get()._field_table.get()._field_File.ptr())), &__jule_any_type5),jule::Any(_1d03b89be_getAsLinkPath(_self_, _53355_path), &__jule_any_type5)}));;
	((*(_53371_message))).buffer.insert(0, (((_22b99a1db_Repeat(jule::Str(" ", 1), 7LL) + _53513_refersTo) + jule::Str("\n", 1))));;
}



inline void _1d03b9250_pushCrossCycleError(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d2147141_symbolBuilder>* _54240_target, jule::Ptr<_1d219307c_ImportInfo>* _54265_imp, jule::Ptr<_22be1281d_Token>* _54284_errorToken) {
	jule::Str _54317_message = jule::Str();;
	_1d03b8d87_pushCycleError(_self_, &(_self_), (*(_54265_imp)).get()._field_Path, &(_54317_message));
	jule::Ptr<_1d2147141_symbolBuilder> _54717_owner = _self_.get()._field_owner;;
	jule::Ptr<_1d2147141_symbolBuilder> _54817_old = _self_;;
	while ((_54717_owner.get()._field_owner != nullptr)) {
		{
			_1d03b8d87_pushCycleError(_self_, &(_54817_old.get()._field_owner), _22be18329_Dir(_54817_old.get()._field_table.get()._field_File.ptr()), &(_54317_message));
			if ((_54717_owner.get()._field_owner == (*(_54240_target)))) {
				_1d03b8d87_pushCycleError(_self_, _54240_target, _22be18329_Dir(_54717_owner.get()._field_table.get()._field_File.ptr()), &(_54317_message));
				goto _iter_end_1b6e8a895;
			};
			_54817_old=_54717_owner;
			_54717_owner=_54717_owner.get()._field_owner;
		}
	_iter_next_1b6e8a895:;
	}
	_iter_end_1b6e8a895:;;
	_1d03b67ad_pushErr(_self_.ptr(), _54284_errorToken, jule::Str("illegal cross cycle in use declarations;\n@", 42), jule::Slice<jule::Any>::make({jule::Any(_54317_message, &__jule_any_type5)}));
}



inline jule::Bool _1d03b9607_checkImportCycles(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d219307c_ImportInfo> _56537_imp, jule::Ptr<_1d06068bb_UseDecl>* _56556_decl) {
	if ((_56537_imp.get()._field_Path == _22be18329_Dir(_self_.get()._field_table.get()._field_File.ptr()))) {
		_1d03b67ad_pushErr(_self_.ptr(), &((*(_56556_decl)).get()._field_Token), jule::Str("illegal cycle in use declaration, package @ refers to itself", 60), jule::Slice<jule::Any>::make({jule::Any(_1d03b89be_getAsLinkPath(_self_, _56537_imp.get()._field_Path), &__jule_any_type5)}));
		return false;;
	};
	if ((_self_.get()._field_owner == nullptr)) {
		return true;;
	};
	if ((_22be18329_Dir(_self_.get()._field_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1d03b9250_pushCrossCycleError(_self_, &(_self_.get()._field_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	jule::Ptr<_1d2147141_symbolBuilder> _58017_owner = _self_.get()._field_owner;;
	_julec_label_iter:;
	if ((_22be18329_Dir(_58017_owner.get()._field_table.get()._field_File.ptr()) == _56537_imp.get()._field_Path)) {
		_1d03b9250_pushCrossCycleError(_self_, &(_58017_owner), &(_56537_imp), &((*(_56556_decl)).get()._field_Token));
		return false;;
	};
	if ((_58017_owner.get()._field_owner != nullptr)) {
		_58017_owner=_58017_owner.get()._field_owner;
		goto _julec_label_iter;
	};
	return true;;
}



inline void _1d21474e8_checkPackageAccessibility(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d06068bb_UseDecl>* _60145_decl, jule::Str* _60162_mod, jule::Str* _60173_path) {
	if (((_1d21903cb_Importer_mptr_data[((*(_self_))._field_importer).type_offset]._1d218e540_GetModPath((*(_self_))._field_importer) != (*(_60162_mod))) && _22b9a06a8_Contains((*(_60173_path)), jule::Str("internal", 8)))) {
		_1d03b67ad_pushErr(_self_, &((*(_60145_decl)).get()._field_Token), jule::Str("you cannot access to internal packages", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d21478d3_importPackage(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d219307c_ImportInfo>* _60738_imp, jule::Ptr<_1d06068bb_UseDecl>* _60761_decl) {
	jule::Bool __jule_func_result = false;
	if ((*(_60738_imp)).get()._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d219307c_ImportInfo> _61217_port = _1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218eb5b_GetImport(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path);;
	if ((_61217_port != nullptr)) {
		(*(_60738_imp)).get()._field_Package=_61217_port.get()._field_Package;
		(*(_60738_imp)).get()._field_Duplicate=true;
		jule::Str _61717_oldMod = _1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e540_GetModPath(_self_.get()._field_importer);;
		_1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e2ed_SetModPath(_self_.get()._field_importer, _1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e84d_ModById(_self_.get()._field_importer, (*(_60738_imp)).get()._field_ModId));
		_1d21474e8_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_61717_oldMod), &(_61217_port.get()._field_Path));
		_1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e2ed_SetModPath(_self_.get()._field_importer, _61717_oldMod);
	} else {
		if ((!(_1d03b9607_checkImportCycles(_self_, (*(_60738_imp)), _60761_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _62617_oldMod = _1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e540_GetModPath(_self_.get()._field_importer);;
		__JULE_DEFER({
			_1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e2ed_SetModPath(_self_.get()._field_importer, _62617_oldMod);
		});;
		if ((*(_60738_imp)).get()._field_Std) {
			_1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d218e2ed_SetModPath(_self_.get()._field_importer, _22bb20cac_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1d05aa7a4_Ast>> _63122_asts;;
		jule::Slice<_22ba3c6bd_Log> _63132_errors;;
		({
			__jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d2190013_ImportPackage(_self_.get()._field_importer, (*(_60738_imp)).get()._field_Path, (!((*(_60738_imp)).get()._field_Std)));
			_63122_asts = __jule_assign_result.__jule_result_arg0;
			_63132_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_63132_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1d21474e8_checkPackageAccessibility(_self_.ptr(), _60761_decl, &(_62617_oldMod), &((*(_60738_imp)).get()._field_Path));
		{
			auto expr = &(_63122_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6e98d04:;
			if (it != expr_end) {
				jule::Ptr<_1d05aa7a4_Ast> _63925_ast = *it;
				{
					jule::Ptr<_1d040428a_SymbolTable> _64025_table = nullptr;;
					({
						__jule_tuple_x_1d040428a_SymbolTable__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d2200d87_buildSymbols(&(_63925_ast), &(_self_.get()._field_importer), _self_);
						_64025_table = __jule_assign_result.__jule_result_arg0;
						_63132_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_63132_errors.len() > 0LL)) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_63132_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*(_60738_imp)).get()._field_Package.get()._field_Files = jule::alloc_for_append((*(_60738_imp)).get()._field_Package.get()._field_Files,1);(*(_60738_imp)).get()._field_Package.get()._field_Files.__push(_64025_table);;
				}
				_iter_next_1b6e98d04:;
				++it;
				goto _iter_begin_1b6e98d04;
			}
			_iter_end_1b6e98d04:;
		};
	};
	_1d03b86b1_implImportSelections(_self_.ptr(), _60738_imp, _60761_decl);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d2147be1_importUseDecl(jule::Ptr<_1d2147141_symbolBuilder> _self_, jule::Ptr<_1d06068bb_UseDecl>* _65438_decl) {
	jule::Ptr<_1d219307c_ImportInfo> _65517_imp = _1d03b8084_buildImport(_self_, _65438_decl);;
	if ((_65517_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _66117_ok = _1d03b8392_checkDuplicateUseDecl(_self_.ptr(), &(_65517_imp));;
	if ((!(_66117_ok))) {
		return nullptr;;
	};
	_66117_ok=_1d21478d3_importPackage(_self_, &(_65517_imp), _65438_decl);
	_self_.get()._field_table.get()._field_Imports = jule::alloc_for_append(_self_.get()._field_table.get()._field_Imports,1);_self_.get()._field_table.get()._field_Imports.__push(_65517_imp);;
	if (_66117_ok) {
		_1d21903cb_Importer_mptr_data[(_self_.get()._field_importer).type_offset]._1d2190288_Imported(_self_.get()._field_importer, _65517_imp);
		return _65517_imp;;
	};
	return nullptr;;
}



inline void _1d2147dbc_importUseDecls(jule::Ptr<_1d2147141_symbolBuilder> _self_) {
	{
		auto expr = &(_self_.get()._field_ast.get()._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e9d5de:;
		if (it != expr_end) {
			jule::Ptr<_1d06068bb_UseDecl> _67621_decl = *it;
			{
				_1d2147be1_importUseDecl(_self_, &(_67621_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					goto _iter_end_1b6e9d5de;
				};
			}
			_iter_next_1b6e9d5de:;
			++it;
			goto _iter_begin_1b6e9d5de;
		}
		_iter_end_1b6e9d5de:;
	};
}



inline void _1d2148142_appendNode(_1d2147141_symbolBuilder* _self_, _1d05ab651_Node* _68534_node) {
	{
		auto &_match_expr{ (*(_68534_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1b6e9e788:;
			{
				(*(_self_))._field_table.get()._field_Impls = jule::alloc_for_append((*(_self_))._field_table.get()._field_Impls,1);(*(_self_))._field_table.get()._field_Impls.__push(_1d2146ae1_buildImpl((*(_68534_node))._field_Data.cast_ptr<_1d060a0d9_Impl>(&__jule_any_type11)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b6e9ea0d:;
			{
				jule::Ptr<_1d21d10ed_TypeAlias> _69021_ta = _1d062bade_buildTypeAlias((*(_68534_node))._field_Data.cast_ptr<_1d06054d0_TypeAliasDecl>(&__jule_any_type12));;
				(*(_self_))._field_table.get()._field_TypeAliases = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeAliases,1);(*(_self_))._field_table.get()._field_TypeAliases.__push(_69021_ta);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b6e9ea74:;
			{
				jule::Ptr<_1d060ddbd_Struct> _69321_srct = _1d2143a77_buildStruct((*(_68534_node))._field_Data.cast_ptr<_1d0609308_StructDecl>(&__jule_any_type13));;
				(*(_self_))._field_table.get()._field_Structs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Structs,1);(*(_self_))._field_table.get()._field_Structs.__push(_69321_srct);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b6e9eada:;
			{
				jule::Ptr<_1d06242bd_Fn> _69621_f = _1d2144726_buildFn((*(_68534_node))._field_Data.cast_ptr<_1d0600b90_FnDecl>(&__jule_any_type14));;
				(*(_self_))._field_table.get()._field_Funcs = jule::alloc_for_append((*(_self_))._field_table.get()._field_Funcs,1);(*(_self_))._field_table.get()._field_Funcs.__push(_69621_f);;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1b6e9eb51:;
			{
				jule::Ptr<_1d21494c8_Trait> _69921_t = _1d214500c_buildTrait((*(_68534_node))._field_Data.cast_ptr<_1d06099ce_TraitDecl>(&__jule_any_type15));;
				(*(_self_))._field_table.get()._field_Traits = jule::alloc_for_append((*(_self_))._field_table.get()._field_Traits,1);(*(_self_))._field_table.get()._field_Traits.__push(_69921_t);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b6ea03b0:;
			{
				jule::Ptr<_1d21bb65a_Var> _70221_v = _1d21465a2_buildVar((*(_68534_node))._field_Data.cast_ptr<_1d0601b6e_VarDecl>(&__jule_any_type16));;
				(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_70221_v);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1b6ea0426:;
			{
				jule::Ptr<_1d214bc5b_Enum> _70521_e = _1d2145a24_buildEnum((*(_68534_node))._field_Data.cast_ptr<_1d0607867_EnumDecl>(&__jule_any_type17));;
				(*(_self_))._field_table.get()._field_Enums = jule::alloc_for_append((*(_self_))._field_table.get()._field_Enums,1);(*(_self_))._field_table.get()._field_Enums.__push(_70521_e);;
			}
		}
		else if (_match_expr.type == &__jule_any_type18) {
			_case_begin_1b6ea048c:;
			{
				jule::Ptr<_1d214d356_TypeEnum> _70821_e = _1d214630a_buildTypeEnum((*(_68534_node))._field_Data.cast_ptr<_1d0608747_TypeEnumDecl>(&__jule_any_type18));;
				(*(_self_))._field_table.get()._field_TypeEnums = jule::alloc_for_append((*(_self_))._field_table.get()._field_TypeEnums,1);(*(_self_))._field_table.get()._field_TypeEnums.__push(_70821_e);;
			}
		}
		else {
			_case_begin_1b6e9e997:;
			{
				_1d03b67ad_pushErr(_self_, &((*(_68534_node))._field_Token), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b6e9e942:;
	};
}



inline void _1d214831d_appendNodes(_1d2147141_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ea7807:;
		if (it != expr_end) {
			_1d05ab651_Node _71621_node = *it;
			{
				_1d2148142_appendNode(_self_, &(_71621_node));
			}
			_iter_next_1b6ea7807:;
			++it;
			goto _iter_begin_1b6ea7807;
		}
		_iter_end_1b6ea7807:;
	};
}



inline void _1d2148593_pushDirectivePass(_1d2147141_symbolBuilder* _self_, jule::Ptr<_1d05aba4c_Directive>* _72141_d) {
	if (((*(_72141_d)).get()._field_Args.len() == 0LL)) {
		_1d03b67ad_pushErr(_self_, &((*(_72141_d)).get()._field_Tag), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_72141_d)).get()._field_Args.len() > 1LL)) {
		jule::Ptr<_22be1281d_Token> _72617_arg = (*(_72141_d)).get()._field_Args[1LL];;
		_1d03b67ad_pushErr(_self_, &(_72617_arg), jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_72141_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_22be1281d_Token> _73013_arg = (*(_72141_d)).get()._field_Args[0LL];;
	if ((_73013_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1d03b67ad_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_73013_arg.get()._field_Kind[0LL] != '\"')) {
		_1d03b67ad_pushErr(_self_, &(_73013_arg), jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_self_))._field_table.get()._field_Passes = jule::alloc_for_append((*(_self_))._field_table.get()._field_Passes,1);(*(_self_))._field_table.get()._field_Passes.__push(_1d062b209_Pass{._field_Token=(*(_72141_d)).get()._field_Tag, ._field_Text=_73013_arg.get()._field_Kind.slice(1LL, (_73013_arg.get()._field_Kind.len() - 1LL))});;
}



inline void _1d214876e_appendTopDirectives(_1d2147141_symbolBuilder* _self_) {
	{
		auto expr = &((*(_self_))._field_ast.get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6ead4cd:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _74821_d = *it;
			{
				{
					auto &_match_expr{ _74821_d.get()._field_Tag.get()._field_Kind };
					
					if (_match_expr == jule::Str("pass", 4)) {
						_case_begin_1b6eadc81:;
						{
							_1d2148593_pushDirectivePass(_self_, &(_74821_d));
						}
					}
					_match_end_1b6eadc09:;
				};
			}
			_iter_next_1b6ead4cd:;
			++it;
			goto _iter_begin_1b6ead4cd;
		}
		_iter_end_1b6ead4cd:;
	};
}



inline void _1d214894a_build(jule::Ptr<_1d2147141_symbolBuilder> _self_) {
	_self_.get()._field_table=jule::new_ptr<_1d040428a_SymbolTable>(_1d040428a_SymbolTable{._field_File=_self_.get()._field_ast.get()._field_File, });
	_1d214876e_appendTopDirectives(_self_.ptr());
	_1d2147dbc_importUseDecls(_self_);
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	_1d214831d_appendNodes(_self_.ptr());
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2147141_symbolBuilder _Src) {
	_Stream << "symbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d21498c4_Str(_1d21494c8_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1d2149bd2_Equal(jule::Ptr<_1d21494c8_Trait> _self_, jule::Ptr<_1d21d1d46_TypeKind> _2621_other) {
	jule::Ptr<_1d21494c8_Trait> _2713_trt = _1d21d5c29_Trait(_2621_other.ptr());;
	return (_self_ == _2713_trt);;
}



inline jule::Bool _1d214a067_IsBuiltin(_1d21494c8_Trait* _self_) {
	return ((*(_self_))._field_Token == nullptr);;
}



inline jule::Ptr<_1d06242bd_Fn> _1d214a375_FindMethod(_1d21494c8_Trait* _self_, jule::Str _4029_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb2614:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _4121_f = *it;
			{
				if ((_4121_f.get()._field_Ident == _4029_ident)) {
					return _4121_f;;
				};
			}
			_iter_next_1b6eb2614:;
			++it;
			goto _iter_begin_1b6eb2614;
		}
		_iter_end_1b6eb2614:;
	};
	return _1d214a991_findMethodInherit(_self_, &(_4029_ident));;
}



inline jule::Bool _1d214a683_inherits(jule::Ptr<_1d21494c8_Trait> _self_, jule::Ptr<_1d21494c8_Trait>* _4929_t) {
	if ((_self_ == (*(_4929_t)))) {
		return true;;
	};
	{
		auto expr = &(_self_.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb3857:;
		if (it != expr_end) {
			jule::Ptr<_1d21d8be9_TypeSymbol> _5321_i = *it;
			{
				if (_1d214a683_inherits(_1d21d5c29_Trait(_5321_i.get()._field_Kind.ptr()), _4929_t)) {
					return true;;
				};
			}
			_iter_next_1b6eb3857:;
			++it;
			goto _iter_begin_1b6eb3857;
		}
		_iter_end_1b6eb3857:;
	};
	return false;;
}



inline jule::Ptr<_1d06242bd_Fn> _1d214a991_findMethodInherit(_1d21494c8_Trait* _self_, jule::Str* _6137_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb4cba:;
		if (it != expr_end) {
			jule::Ptr<_1d21d8be9_TypeSymbol> _6221_i = *it;
			{
				if ((_6221_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1b6eb4cba;
				};
				jule::Ptr<_1d21494c8_Trait> _6621_t = _1d21d5c29_Trait(_6221_i.get()._field_Kind.ptr());;
				if ((_6621_t != nullptr)) {
					jule::Ptr<_1d06242bd_Fn> _6825_f2 = _1d214a375_FindMethod(_6621_t.ptr(), (*(_6137_ident)));;
					if ((_6825_f2 != nullptr)) {
						return _6825_f2;;
					};
				};
			}
			_iter_next_1b6eb4cba:;
			++it;
			goto _iter_begin_1b6eb4cba;
		}
		_iter_end_1b6eb4cba:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21494c8_Trait _Src) {
	_Stream << _1d21498c4_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1d214b651_AutoExpr(_1d214b266_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d214b266_EnumItem _Src) {
	_Stream << "EnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Value:" << _Src._field_Value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d214c0be_Str(_1d214bc5b_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1d214c3cc_Equal(jule::Ptr<_1d214bc5b_Enum> _self_, jule::Ptr<_1d21d1d46_TypeKind> _3821_other) {
	jule::Ptr<_1d214bc5b_Enum> _3913_enm = _1d21d4ca0_Enum(_3821_other.ptr());;
	return (_self_ == _3913_enm);;
}



inline jule::Ptr<_1d214b266_EnumItem> _1d214c81c_FindItem(_1d214bc5b_Enum* _self_, jule::Str _4727_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eb872a:;
		if (it != expr_end) {
			jule::Ptr<_1d214b266_EnumItem> _4821_item = *it;
			{
				if ((_4821_item.get()._field_Ident == _4727_ident)) {
					return _4821_item;;
				};
			}
			_iter_next_1b6eb872a:;
			++it;
			goto _iter_begin_1b6eb872a;
		}
		_iter_end_1b6eb872a:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d214bc5b_Enum _Src) {
	_Stream << _1d214c0be_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d214cc90_TypeEnumItem _Src) {
	_Stream << "TypeEnumItem{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d214d686_Str(_1d214d356_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1d214d994_Equal(jule::Ptr<_1d214d356_TypeEnum> _self_, jule::Ptr<_1d21d1d46_TypeKind> _8021_other) {
	jule::Ptr<_1d214d356_TypeEnum> _8113_tenm = _1d21d5014_TypeEnum(_8021_other.ptr());;
	return (_self_ == _8113_tenm);;
}



inline jule::Ptr<_1d214cc90_TypeEnumItem> _1d214dd90_FindItem(_1d214d356_TypeEnum* _self_, jule::Str _8927_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6eba7e8:;
		if (it != expr_end) {
			jule::Ptr<_1d214cc90_TypeEnumItem> _9021_item = *it;
			{
				if ((_9021_item.get()._field_Ident == _8927_ident)) {
					return _9021_item;;
				};
			}
			_iter_next_1b6eba7e8:;
			++it;
			goto _iter_begin_1b6eba7e8;
		}
		_iter_end_1b6eba7e8:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d214d356_TypeEnum _Src) {
	_Stream << _1d214d686_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21508a8_Str(_1d21504ac_comptimeRange* _self_) {
	return jule::Str("comptimeRange", 13);;
}



inline jule::Bool _1d2150bb6_Equal(jule::Ptr<_1d21504ac_comptimeRange> _self_, jule::Ptr<_1d21d1d46_TypeKind> _2521_other) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21504ac_comptimeRange _Src) {
	_Stream << _1d21508a8_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d2151315_Str(_1d2150ea2_comptimeStructField* _self_) {
	return jule::Str("comptimeStructField", 19);;
}



inline jule::Bool _1d2151623_Equal(jule::Ptr<_1d2150ea2_comptimeStructField> _self_, jule::Ptr<_1d21d1d46_TypeKind> _3521_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2151b73__Name(jule::Ptr<_1d2150ea2_comptimeStructField> _self_, jule::Ptr<_1d040a813_Eval>* _3926_e, jule::Ptr<_1d05e7604_FnCallExpr>* _3941_fc) {
	if (((*(_3941_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_3926_e)).ptr(), (*(_3941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _4417_constant = static__1e76e6a2c_NewStr(_self_.get()._field_field.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_4417_constant, &__jule_any_type19), ._field_Constant=_4417_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d215202a__Type(jule::Ptr<_1d2150ea2_comptimeStructField> _self_, jule::Ptr<_1d040a813_Eval>* _5230_e, jule::Ptr<_1d05e7604_FnCallExpr>* _5245_fc) {
	if (((*(_5245_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_5230_e)).ptr(), (*(_5245_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_5230_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind));;
}



inline jule::Ptr<_1d0408c95_Data> _1d21523d2__Public(jule::Ptr<_1d2150ea2_comptimeStructField> _self_, jule::Ptr<_1d040a813_Eval>* _6032_e, jule::Ptr<_1d05e7604_FnCallExpr>* _6047_fc) {
	if (((*(_6047_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_6032_e)).ptr(), (*(_6047_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _6517_constant = static__1e76e6785_NewBool(_self_.get()._field_field.get()._field_Decl.get()._field_Public);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_6517_constant, &__jule_any_type19), ._field_Constant=_6517_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d21526ac_subIdent(jule::Ptr<_1d2150ea2_comptimeStructField> _self_, jule::Str _7328_ident) {
	{
		auto &_match_expr{ _7328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b6ec5825:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _7621_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _7733_e, jule::Ptr<_1d05e7604_FnCallExpr>* _7748_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2151b73__Name(_self_, _7733_e, _7748_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_7621_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b6ec588b:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _8321_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _8433_e, jule::Ptr<_1d05e7604_FnCallExpr>* _8448_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21523d2__Public(_self_, _8433_e, _8448_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_8321_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b6ec565a:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _9021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _9133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _9148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215202a__Type(_self_, _9133_e, _9148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_9021_method));;
			}
		}
		else {
			_case_begin_1b6ec521a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ec50d8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2150ea2_comptimeStructField _Src) {
	_Stream << _1d2151315_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d2152d50_Str(_1d2152998_comptimeStructFields* _self_) {
	return jule::Str("comptimeStructFields", 20);;
}



inline jule::Bool _1d215315d_Equal(jule::Ptr<_1d2152998_comptimeStructFields> _self_, jule::Ptr<_1d21d1d46_TypeKind> _10921_other) {
	return false;;
}



inline void _1d215358c_ready(_1d2152998_comptimeStructFields* _self_, jule::Ptr<_1d21bb65a_Var>* _11329_keyA, jule::Ptr<_1d21bb65a_Var>* _11346_keyB) {
	if (((*(_11329_keyA)) != nullptr)) {
		(*(_11329_keyA)).get()._field_Constant=true;
		(*(_11329_keyA)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_11329_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_11329_keyA)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_11346_keyB)) != nullptr)) {
		(*(_11346_keyB)).get()._field_Constant=true;
		(*(_11346_keyB)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_11346_keyB)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2150ea2_comptimeStructField>(), 6)})});
	};
}



inline void _1d2153955_step(_1d2152998_comptimeStructFields* _self_, jule::I64 _13523_i, jule::Ptr<_1d21bb65a_Var>* _13536_keyA, jule::Ptr<_1d21bb65a_Var>* _13553_keyB) {
	if (((*(_13536_keyA)) != nullptr)) {
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_13523_i)));
		(*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_13536_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_13553_keyB)) != nullptr)) {
		_1d21d693e_comptimeStructField((*(_13553_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_13523_i];
	};
}



inline jule::I64 _1d2153bb9_len(_1d2152998_comptimeStructFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2152998_comptimeStructFields _Src) {
	_Stream << _1d2152d50_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d2154318_Str(_1d2153ea5_comptimeStatic* _self_) {
	return jule::Str("comptimeStatic", 14);;
}



inline jule::Bool _1d2154626_Equal(jule::Ptr<_1d2153ea5_comptimeStatic> _self_, jule::Ptr<_1d21d1d46_TypeKind> _15921_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2154c0e__Name(jule::Ptr<_1d2153ea5_comptimeStatic> _self_, jule::Ptr<_1d040a813_Eval>* _16326_e, jule::Ptr<_1d05e7604_FnCallExpr>* _16341_fc) {
	if (((*(_16341_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_16326_e)).ptr(), (*(_16341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _16817_constant = static__1e76e6a2c_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_16817_constant, &__jule_any_type19), ._field_Constant=_16817_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d21550b6__Type(jule::Ptr<_1d2153ea5_comptimeStatic> _self_, jule::Ptr<_1d040a813_Eval>* _17630_e, jule::Ptr<_1d05e7604_FnCallExpr>* _17645_fc) {
	if (((*(_17645_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_17630_e)).ptr(), (*(_17645_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_17630_e)).get()._field_s), &(_self_.get()._field_field.get()._field_Kind.get()._field_Kind));;
}



inline jule::Ptr<_1d0408c95_Data> _1d215546d__Public(jule::Ptr<_1d2153ea5_comptimeStatic> _self_, jule::Ptr<_1d040a813_Eval>* _18432_e, jule::Ptr<_1d05e7604_FnCallExpr>* _18447_fc) {
	if (((*(_18447_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_18432_e)).ptr(), (*(_18447_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _18917_constant = static__1e76e6785_NewBool(_self_.get()._field_field.get()._field_Public);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_18917_constant, &__jule_any_type19), ._field_Constant=_18917_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d215577b_subIdent(jule::Ptr<_1d2153ea5_comptimeStatic> _self_, jule::Str _19728_ident) {
	{
		auto &_match_expr{ _19728_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b6ed7a8a:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _20021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _20133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _20148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2154c0e__Name(_self_, _20133_e, _20148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_20021_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b6ed7b01:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _20721_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _20833_e, jule::Ptr<_1d05e7604_FnCallExpr>* _20848_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215546d__Public(_self_, _20833_e, _20848_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_20721_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b6ed78ae:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _21421_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _21533_e, jule::Ptr<_1d05e7604_FnCallExpr>* _21548_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21550b6__Type(_self_, _21533_e, _21548_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_21421_method));;
			}
		}
		else {
			_case_begin_1b6ed746e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ed73b4:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2153ea5_comptimeStatic _Src) {
	_Stream << _1d2154318_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d2155d53_Str(_1d21559e0_comptimeStatics* _self_) {
	return jule::Str("comptimeStatics", 15);;
}



inline jule::Bool _1d2156161_Equal(jule::Ptr<_1d21559e0_comptimeStatics> _self_, jule::Ptr<_1d21d1d46_TypeKind> _23321_other) {
	return false;;
}



inline void _1d2156590_ready(_1d21559e0_comptimeStatics* _self_, jule::Ptr<_1d21bb65a_Var>* _23729_keyA, jule::Ptr<_1d21bb65a_Var>* _23746_keyB) {
	if (((*(_23729_keyA)) != nullptr)) {
		(*(_23729_keyA)).get()._field_Constant=true;
		(*(_23729_keyA)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_23729_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_23729_keyA)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_23746_keyB)) != nullptr)) {
		(*(_23746_keyB)).get()._field_Constant=true;
		(*(_23746_keyB)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_23746_keyB)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2153ea5_comptimeStatic>(), 8)})});
	};
}



inline void _1d2156958_step(_1d21559e0_comptimeStatics* _self_, jule::I64 _25923_i, jule::Ptr<_1d21bb65a_Var>* _25936_keyA, jule::Ptr<_1d21bb65a_Var>* _25953_keyB) {
	if (((*(_25936_keyA)) != nullptr)) {
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_25923_i)));
		(*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_25936_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_25953_keyB)) != nullptr)) {
		_1d21d8105_comptimeStatic((*(_25953_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_25923_i];
	};
}



inline jule::I64 _1d2156bbc_len(_1d21559e0_comptimeStatics* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21559e0_comptimeStatics _Src) {
	_Stream << _1d2155d53_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d215731b_Str(_1d2156ea8_comptimeEnumField* _self_) {
	return jule::Str("comptimeEnumField", 17);;
}



inline jule::Bool _1d2157629_Equal(jule::Ptr<_1d2156ea8_comptimeEnumField> _self_, jule::Ptr<_1d21d1d46_TypeKind> _28321_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2157ad0__Name(jule::Ptr<_1d2156ea8_comptimeEnumField> _self_, jule::Ptr<_1d040a813_Eval>* _28726_e, jule::Ptr<_1d05e7604_FnCallExpr>* _28741_fc) {
	if (((*(_28741_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_28726_e)).ptr(), (*(_28741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _29217_constant = static__1e76e6a2c_NewStr(_self_.get()._field_field.get()._field_Ident);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_29217_constant, &__jule_any_type19), ._field_Constant=_29217_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2157ddd_subIdent(jule::Ptr<_1d2156ea8_comptimeEnumField> _self_, jule::Str _30028_ident) {
	{
		auto &_match_expr{ _30028_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b6ee5aed:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _30321_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _30433_e, jule::Ptr<_1d05e7604_FnCallExpr>* _30448_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2157ad0__Name(_self_, _30433_e, _30448_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_30321_method));;
			}
		}
		else {
			_case_begin_1b6ee5c1e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b6ee5b64:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2156ea8_comptimeEnumField _Src) {
	_Stream << _1d215731b_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d215864c_Str(_1d21581c9_comptimeEnumFields* _self_) {
	return jule::Str("comptimeEnumFields", 18);;
}



inline jule::Bool _1d215895a_Equal(jule::Ptr<_1d21581c9_comptimeEnumFields> _self_, jule::Ptr<_1d21d1d46_TypeKind> _32221_other) {
	return false;;
}



inline void _1d2158d12_ready(_1d21581c9_comptimeEnumFields* _self_, jule::Ptr<_1d21bb65a_Var>* _32629_keyA, jule::Ptr<_1d21bb65a_Var>* _32646_keyB) {
	if (((*(_32629_keyA)) != nullptr)) {
		(*(_32629_keyA)).get()._field_Constant=true;
		(*(_32629_keyA)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_32629_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_32629_keyA)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_32646_keyB)) != nullptr)) {
		(*(_32646_keyB)).get()._field_Constant=true;
		(*(_32646_keyB)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_32646_keyB)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2156ea8_comptimeEnumField>(), 10)})});
	};
}



inline void _1d21591ca_step(_1d21581c9_comptimeEnumFields* _self_, jule::I64 _34823_i, jule::Ptr<_1d21bb65a_Var>* _34836_keyA, jule::Ptr<_1d21bb65a_Var>* _34853_keyB) {
	if (((*(_34836_keyA)) != nullptr)) {
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_34823_i)));
		(*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_34836_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_34853_keyB)) != nullptr)) {
		_1d21d6e17_comptimeEnumField((*(_34853_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_field=(*(_self_))._field_fields[_34823_i];
	};
}



inline jule::I64 _1d215943e_len(_1d21581c9_comptimeEnumFields* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_fields.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21581c9_comptimeEnumFields _Src) {
	_Stream << _1d215864c_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d2159a8d_Str(_1d215972a_comptimeParam* _self_) {
	return jule::Str("comptimeParam", 13);;
}



inline jule::Bool _1d2159d9b_Equal(jule::Ptr<_1d215972a_comptimeParam> _self_, jule::Ptr<_1d21d1d46_TypeKind> _37221_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d215a5b6__Name(jule::Ptr<_1d215972a_comptimeParam> _self_, jule::Ptr<_1d040a813_Eval>* _37626_e, jule::Ptr<_1d05e7604_FnCallExpr>* _37641_fc) {
	if (((*(_37641_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_37626_e)).ptr(), (*(_37641_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _38117_constant = static__1e76e6a2c_NewStr(_self_.get()._field_param.get()._field_Decl.get()._field_Ident);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_38117_constant, &__jule_any_type19), ._field_Constant=_38117_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d215a96d__Type(jule::Ptr<_1d215972a_comptimeParam> _self_, jule::Ptr<_1d040a813_Eval>* _38930_e, jule::Ptr<_1d05e7604_FnCallExpr>* _38945_fc) {
	if (((*(_38945_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_38930_e)).ptr(), (*(_38945_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_38930_e)).get()._field_s), &(_self_.get()._field_param.get()._field_Kind));;
}



inline jule::Ptr<_1d0408c95_Data> _1d215ad25__Variadic(jule::Ptr<_1d215972a_comptimeParam> _self_, jule::Ptr<_1d040a813_Eval>* _39734_e, jule::Ptr<_1d05e7604_FnCallExpr>* _39749_fc) {
	if (((*(_39749_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_39734_e)).ptr(), (*(_39749_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Variadic", 8), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _40217_constant = static__1e76e6785_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Variadic);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_40217_constant, &__jule_any_type19), ._field_Constant=_40217_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d215b1cc__Reference(jule::Ptr<_1d215972a_comptimeParam> _self_, jule::Ptr<_1d040a813_Eval>* _41035_e, jule::Ptr<_1d05e7604_FnCallExpr>* _41050_fc) {
	if (((*(_41050_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_41035_e)).ptr(), (*(_41050_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Reference", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _41517_constant = static__1e76e6785_NewBool(_self_.get()._field_param.get()._field_Decl.get()._field_Reference);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_41517_constant, &__jule_any_type19), ._field_Constant=_41517_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d215b4da_subIdent(jule::Ptr<_1d215972a_comptimeParam> _self_, jule::Str _42328_ident) {
	{
		auto &_match_expr{ _42328_ident };
		
		if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b7006c1e:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _42621_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _42733_e, jule::Ptr<_1d05e7604_FnCallExpr>* _42748_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215a5b6__Name(_self_, _42733_e, _42748_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_42621_method));;
			}
		}
		else if (_match_expr == jule::Str("Variadic", 8)) {
			_case_begin_1b7006c85:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _43321_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _43433_e, jule::Ptr<_1d05e7604_FnCallExpr>* _43448_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215ad25__Variadic(_self_, _43433_e, _43448_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_43321_method));;
			}
		}
		else if (_match_expr == jule::Str("Reference", 9)) {
			_case_begin_1b7006a54:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _44021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _44133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _44148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215b1cc__Reference(_self_, _44133_e, _44148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_44021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b7006aba:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _44721_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _44833_e, jule::Ptr<_1d05e7604_FnCallExpr>* _44848_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215a96d__Type(_self_, _44833_e, _44848_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_44721_method));;
			}
		}
		else {
			_case_begin_1b7006614:;
			{
				return nullptr;;
			}
		}
		_match_end_1b70064d2:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d215972a_comptimeParam _Src) {
	_Stream << _1d2159a8d_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d215bb39_Str(_1d215b7c6_comptimeParams* _self_) {
	return jule::Str("comptimeParams", 14);;
}



inline jule::Bool _1d215be47_Equal(jule::Ptr<_1d215b7c6_comptimeParams> _self_, jule::Ptr<_1d21d1d46_TypeKind> _46621_other) {
	return false;;
}



inline void _1d215c376_ready(_1d215b7c6_comptimeParams* _self_, jule::Ptr<_1d21bb65a_Var>* _47029_keyA, jule::Ptr<_1d21bb65a_Var>* _47046_keyB) {
	if (((*(_47029_keyA)) != nullptr)) {
		(*(_47029_keyA)).get()._field_Constant=true;
		(*(_47029_keyA)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_47029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_47029_keyA)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_47046_keyB)) != nullptr)) {
		(*(_47046_keyB)).get()._field_Constant=true;
		(*(_47046_keyB)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_47046_keyB)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d215972a_comptimeParam>(), 12)})});
	};
}



inline void _1d215c73e_step(_1d215b7c6_comptimeParams* _self_, jule::I64 _49223_i, jule::Ptr<_1d21bb65a_Var>* _49236_keyA, jule::Ptr<_1d21bb65a_Var>* _49253_keyB) {
	if (((*(_49236_keyA)) != nullptr)) {
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_49223_i)));
		(*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_49236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_49253_keyB)) != nullptr)) {
		_1d21d73e0_comptimeParam((*(_49253_keyB)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_param=(*(_self_))._field_params[_49223_i];
	};
}



inline jule::I64 _1d215c9a3_len(_1d215b7c6_comptimeParams* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_params.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1d215b7c6_comptimeParams _Src) {
	_Stream << _1d215bb39_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d215d102_Str(_1d215cc8e_comptimeTypeInfos* _self_) {
	return jule::Str("comptimeTypeInfos", 17);;
}



inline jule::Bool _1d215d410_Equal(jule::Ptr<_1d215cc8e_comptimeTypeInfos> _self_, jule::Ptr<_1d21d1d46_TypeKind> _51621_other) {
	return false;;
}



inline void _1d215d83e_ready(_1d215cc8e_comptimeTypeInfos* _self_, jule::Ptr<_1d21bb65a_Var>* _52029_keyA, jule::Ptr<_1d21bb65a_Var>* _52046_keyB) {
	if (((*(_52029_keyA)) != nullptr)) {
		(*(_52029_keyA)).get()._field_Constant=true;
		(*(_52029_keyA)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_52029_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_52029_keyA)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_52046_keyB)) != nullptr)) {
		(*(_52046_keyB)).get()._field_Constant=true;
		(*(_52046_keyB)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_52046_keyB)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d215e257_comptimeTypeInfo>(), 15)})});
	};
}



inline void _1d215dc07_step(_1d215cc8e_comptimeTypeInfos* _self_, jule::I64 _54223_i, jule::Ptr<_1d21bb65a_Var>* _54236_keyA, jule::Ptr<_1d21bb65a_Var>* _54253_keyB) {
	if (((*(_54236_keyA)) != nullptr)) {
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_54223_i)));
		(*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_54236_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_54253_keyB)) != nullptr)) {
		(*(_54253_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_self_))._field_types[_54223_i], 15);
	};
}



inline jule::I64 _1d215de6b_len(_1d215cc8e_comptimeTypeInfos* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_types.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1d215cc8e_comptimeTypeInfos _Src) {
	_Stream << _1d215d102_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d215e5ba_Str(_1d215e257_comptimeTypeInfo* _self_) {
	return ((jule::Str("comptimeTypeInfo[", 17) + _1d21d2242_Str((*(_self_))._field_base.ptr())) + jule::Str("]", 1));;
}



inline jule::Bool _1d215e8c8_Equal(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d21d1d46_TypeKind> _56621_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d215eec2__Str(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _57025_e, jule::Ptr<_1d05e7604_FnCallExpr>* _57040_fc) {
	if (((*(_57040_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_57025_e)).ptr(), (*(_57040_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Str", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _57517_constant = static__1e76e6a2c_NewStr(_1d21d2242_Str(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_57517_constant, &__jule_any_type19), ._field_Constant=_57517_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2160379__Kind(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _58330_e, jule::Ptr<_1d05e7604_FnCallExpr>* _58345_fc) {
	if (((*(_58345_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_58330_e)).ptr(), (*(_58345_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Kind", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d214bc5b_Enum> _58817_enm = _1d2194b72_FindEnum(_1d216a53d_findComptimePackage(&((*(_58330_e)).get()._field_s)).ptr(), jule::Str("Kind", 4));;
	jule::Ptr<_1d214b266_EnumItem> _58917_item = nullptr;;
	{
		
		if (_1d21d3111_Void(_self_.get()._field_base.ptr())) {
			_case_begin_1b701e9c3:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Void", 4));
			}
		}
		else if ((_1d21d59b5_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b701eae4:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Struct", 6));
			}
		}
		else if ((_1d21d5c29_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b701e7e7:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Trait", 5));
			}
		}
		else if ((_1d21d4a3b_Ptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b701e85d:;
			{
				if (_1d21e1d34_IsUnsafe(_1d21d4a3b_Ptr(_self_.get()._field_base.ptr()).ptr())) {
					_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("UnsafePtr", 9));
				} else {
					_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Ptr", 3));
				};
			}
		}
		else if ((_1d21d47c7_Sptr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7020166:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Ref", 3));
			}
		}
		else if ((_1d21d4ca0_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70201cc:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Enum", 4));
			}
		}
		else if ((_1d21d5e8d_Map(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7020243:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Map", 3));
			}
		}
		else if ((_1d21d54dc_Slc(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70202a9:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Slice", 5));
			}
		}
		else if ((_1d21d5278_Arr(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7020320:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Array", 5));
			}
		}
		else if ((_1d21d5751_Fn(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7020386:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Func", 4));
			}
		}
		else if ((_1d21d6202_Tup(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b70203ec:;
			{
				_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Tuple", 5));
			}
		}
		else if ((_1d21d4563_Prim(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b7020463:;
			{
				jule::Ptr<_1d21d9568_Prim> _61817_prim = _1d21d4563_Prim(_self_.get()._field_base.ptr());;
				{
					
					if (_1d21dca11_IsAny(_61817_prim.ptr())) {
						_case_begin_1b7027cb7:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Any", 3));
						}
					}
					else if (_1d21dc538_IsBool(_61817_prim.ptr())) {
						_case_begin_1b702847c:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Bool", 4));
						}
					}
					else if (_1d21dc79c_IsStr(_61817_prim.ptr())) {
						_case_begin_1b7028713:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Str", 3));
						}
					}
					else if (_1d21db823_IsF32(_61817_prim.ptr())) {
						_case_begin_1b7028c85:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("F32", 3));
						}
					}
					else if (_1d21dba87_IsF64(_61817_prim.ptr())) {
						_case_begin_1b7028ceb:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("F64", 3));
						}
					}
					else if (_1d21da3c1_IsI8(_61817_prim.ptr())) {
						_case_begin_1b7028d62:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("I8", 2));
						}
					}
					else if (_1d21da635_IsI16(_61817_prim.ptr())) {
						_case_begin_1b7028dc8:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("I16", 3));
						}
					}
					else if (_1d21da899_IsI32(_61817_prim.ptr())) {
						_case_begin_1b7028e3e:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("I32", 3));
						}
					}
					else if (_1d21dab0d_IsI64(_61817_prim.ptr())) {
						_case_begin_1b7028ea5:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("I64", 3));
						}
					}
					else if (_1d21dad72_IsU8(_61817_prim.ptr())) {
						_case_begin_1b702901b:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("U8", 2));
						}
					}
					else if (_1d21db0d6_IsU16(_61817_prim.ptr())) {
						_case_begin_1b7029082:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("U16", 3));
						}
					}
					else if (_1d21db34a_IsU32(_61817_prim.ptr())) {
						_case_begin_1b70290e8:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("U32", 3));
						}
					}
					else if (_1d21db5ae_IsU64(_61817_prim.ptr())) {
						_case_begin_1b702915e:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("U64", 3));
						}
					}
					else if (_1d21dbceb_IsInt(_61817_prim.ptr())) {
						_case_begin_1b70291c5:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Int", 3));
						}
					}
					else if (_1d21dc060_IsUint(_61817_prim.ptr())) {
						_case_begin_1b702923b:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Uint", 4));
						}
					}
					else if (_1d21dc2c4_IsUintptr(_61817_prim.ptr())) {
						_case_begin_1b70292b3:;
						{
							_58917_item=_1d214c81c_FindItem(_58817_enm.ptr(), jule::Str("Uintptr", 7));
						}
					}
					else {
						_case_begin_1b70282d4:;
						{
							jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1d21d2242_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:653:17"));;
						}
					}
					_match_end_1b702826d:;
				};
			}
		}
		else {
			_case_begin_1b701e693:;
			{
				jule::panic((jule::Str("Kind(): unimplemented type for std::comptime: ", 46) + _1d21d2242_Str(_self_.get()._field_base.ptr())) + jule::Str("\nlocation: std/jule/sema/comptime.jule:656:13"));;
			}
		}
		_match_end_1b701e63d:;
	};
	return _1d21ce65c_evalEnumStatic(&(_58817_enm), &(_58917_item));;
}



inline jule::Ptr<_1d0408c95_Data> _1d2160731__Bits(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _66130_e, jule::Ptr<_1d05e7604_FnCallExpr>* _66145_fc) {
	if (((*(_66145_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21d9568_Prim> _66613_prim = _1d21d4563_Prim(_self_.get()._field_base.ptr());;
	if ((_66613_prim == nullptr)) {
		_1d040ad1e_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _67113_n = _1e76d8403_BitsizeOf(_66613_prim.get()._field_Kind);;
	if ((_67113_n == -1LL)) {
		_1d040ad1e_pushErr((*(_66130_e)).ptr(), (*(_66145_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Bits", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _67617_constant = static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_67113_n)));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_67617_constant, &__jule_any_type19), ._field_Constant=_67617_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2160ad8__Elem(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _68430_e, jule::Ptr<_1d05e7604_FnCallExpr>* _68445_fc) {
	if (((*(_68445_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21e1361_Ptr> _68917_ptr = _1d21d4a3b_Ptr(_self_.get()._field_base.ptr());;
	if ((_68917_ptr != nullptr)) {
		if (_1d21e1d34_IsUnsafe(_68917_ptr.ptr())) {
			_1d040ad1e_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		return _1d216a8a1_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_68917_ptr.get()._field_Elem));;
	};
	jule::Ptr<_1d21dccec_Sptr> _69717_sptr = _1d21d47c7_Sptr(_self_.get()._field_base.ptr());;
	if ((_69717_sptr != nullptr)) {
		return _1d216a8a1_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_69717_sptr.get()._field_Elem));;
	};
	jule::Ptr<_1d21dd759_Slc> _70117_slice = _1d21d54dc_Slc(_self_.get()._field_base.ptr());;
	if ((_70117_slice != nullptr)) {
		return _1d216a8a1_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70117_slice.get()._field_Elem));;
	};
	jule::Ptr<_1d21e0904_Arr> _70517_array = _1d21d5278_Arr(_self_.get()._field_base.ptr());;
	if ((_70517_array != nullptr)) {
		return _1d216a8a1_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70517_array.get()._field_Elem));;
	};
	jule::Ptr<_1d214bc5b_Enum> _70917_enm = _1d21d4ca0_Enum(_self_.get()._field_base.ptr());;
	if ((_70917_enm != nullptr)) {
		return _1d216a8a1_buildComptimeTypeInfoData(&((*(_68430_e)).get()._field_s), &(_70917_enm.get()._field_Kind.get()._field_Kind));;
	};
	_1d040ad1e_pushErr((*(_68430_e)).ptr(), (*(_68445_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Elem", 4), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2160e90__Size(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _71730_e, jule::Ptr<_1d05e7604_FnCallExpr>* _71745_fc) {
	if (((*(_71745_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21e0904_Arr> _72217_arr = _1d21d5278_Arr(_self_.get()._field_base.ptr());;
	if ((_72217_arr == nullptr)) {
		_1d040ad1e_pushErr((*(_71730_e)).ptr(), (*(_71745_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Size", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _72717_constant = static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_72217_arr.get()._field_N)));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642231_primInt, ._field_Model=jule::Any(_72717_constant, &__jule_any_type19), ._field_Constant=_72717_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2161347__Key(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _73529_e, jule::Ptr<_1d05e7604_FnCallExpr>* _73544_fc) {
	if (((*(_73544_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21ded10_Map> _74017_m = _1d21d5e8d_Map(_self_.get()._field_base.ptr());;
	if ((_74017_m == nullptr)) {
		_1d040ad1e_pushErr((*(_73529_e)).ptr(), (*(_73544_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Key", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_73529_e)).get()._field_s), &(_74017_m.get()._field_Key));;
}



inline jule::Ptr<_1d0408c95_Data> _1d21616ee__Value(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _74831_e, jule::Ptr<_1d05e7604_FnCallExpr>* _74846_fc) {
	if (((*(_74846_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21ded10_Map> _75317_m = _1d21d5e8d_Map(_self_.get()._field_base.ptr());;
	if ((_75317_m == nullptr)) {
		_1d040ad1e_pushErr((*(_74831_e)).ptr(), (*(_74846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Value", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_74831_e)).get()._field_s), &(_75317_m.get()._field_Val));;
}



inline jule::Ptr<_1d0408c95_Data> _1d2161aa6__Fields(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _76132_e, jule::Ptr<_1d05e7604_FnCallExpr>* _76147_fc) {
	if (((*(_76147_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _76617_s = _1d21d59b5_Struct(_self_.get()._field_base.ptr());;
	if ((_76617_s != nullptr)) {
		return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2152998_comptimeStructFields>(_1d2152998_comptimeStructFields{._field_fields=_76617_s.get()._field_Fields}), 7)}), });;
	};
	jule::Ptr<_1d214bc5b_Enum> _77617_enm = _1d21d4ca0_Enum(_self_.get()._field_base.ptr());;
	if ((_77617_enm != nullptr)) {
		return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21581c9_comptimeEnumFields>(_1d21581c9_comptimeEnumFields{._field_fields=_77617_enm.get()._field_Items}), 11)}), });;
	};
	_1d040ad1e_pushErr((*(_76132_e)).ptr(), (*(_76147_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2161e5d__Statics(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _79033_e, jule::Ptr<_1d05e7604_FnCallExpr>* _79048_fc) {
	if (((*(_79048_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Statics", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _79517_s = _1d21d59b5_Struct(_self_.get()._field_base.ptr());;
	if ((_79517_s == nullptr)) {
		_1d040ad1e_pushErr((*(_79033_e)).ptr(), (*(_79048_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Fields", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21559e0_comptimeStatics>(_1d21559e0_comptimeStatics{._field_fields=_79517_s.get()._field_Statics}), 9)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d2162315__Public(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _80932_e, jule::Ptr<_1d05e7604_FnCallExpr>* _80947_fc) {
	if (((*(_80947_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Bool _81417_public = false;;
	{
		
		if ((_1d21d59b5_Struct(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b704ed77:;
			{
				_81417_public=_1d21d59b5_Struct(_self_.get()._field_base.ptr()).get()._field_Decl.get()._field_Public;
			}
		}
		else if ((_1d21d5c29_Trait(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b704eddd:;
			{
				_81417_public=_1d21d5c29_Trait(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1d21d4ca0_Enum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b704ec01:;
			{
				_81417_public=_1d21d4ca0_Enum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else if ((_1d21d5014_TypeEnum(_self_.get()._field_base.ptr()) != nullptr)) {
			_case_begin_1b704ec67:;
			{
				_81417_public=_1d21d5014_TypeEnum(_self_.get()._field_base.ptr()).get()._field_Public;
			}
		}
		else {
			_case_begin_1b704cdca:;
			{
				_1d040ad1e_pushErr((*(_80932_e)).ptr(), (*(_80947_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Public", 6), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b704dd43:;
	};
	jule::Ptr<_1e76e5cc3_Const> _82817_constant = static__1e76e6785_NewBool(_81417_public);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_82817_constant, &__jule_any_type19), ._field_Constant=_82817_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d21626bc__Binded(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _83632_e, jule::Ptr<_1d05e7604_FnCallExpr>* _83647_fc) {
	if (((*(_83647_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_83632_e)).ptr(), (*(_83647_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Binded", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _84117_constant = static__1e76e6785_NewBool(_1d21d2b38_Binded(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_84117_constant, &__jule_any_type19), ._field_Constant=_84117_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2162a74__Ordered(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _84929_e, jule::Ptr<_1d05e7604_FnCallExpr>* _84944_fc) {
	if (((*(_84944_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_84929_e)).ptr(), (*(_84944_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Ordered", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _85417_constant = static__1e76e6785_NewBool(_1d21d384d_Ordered(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_85417_constant, &__jule_any_type19), ._field_Constant=_85417_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2162e2b__Comparable(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _86232_e, jule::Ptr<_1d05e7604_FnCallExpr>* _86247_fc) {
	if (((*(_86247_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_86232_e)).ptr(), (*(_86247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Comparable", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _86717_constant = static__1e76e6785_NewBool(_1d21d3375_Comparable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_86717_constant, &__jule_any_type19), ._field_Constant=_86717_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d21632d3__Mutable(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _87529_e, jule::Ptr<_1d05e7604_FnCallExpr>* _87544_fc) {
	if (((*(_87544_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_87529_e)).ptr(), (*(_87544_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _88017_constant = static__1e76e6785_NewBool(_1d21d35d9_Mutable(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_88017_constant, &__jule_any_type19), ._field_Constant=_88017_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d216368a__Types(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _88831_e, jule::Ptr<_1d05e7604_FnCallExpr>* _88846_fc) {
	if (((*(_88846_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21de2d7_Tuple> _89317_tup = _1d21d6202_Tup(_self_.get()._field_base.ptr());;
	if ((_89317_tup == nullptr)) {
		_1d040ad1e_pushErr((*(_88831_e)).ptr(), (*(_88846_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Types", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d215cc8e_comptimeTypeInfos> _89817_infos = jule::new_ptr<_1d215cc8e_comptimeTypeInfos>(_1d215cc8e_comptimeTypeInfos{._field_types=jule::Slice<jule::Ptr<_1d215e257_comptimeTypeInfo>>::alloc(0LL, _89317_tup.get()._field_Types.len())});;
	{
		auto expr = &(_89317_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b705e3e7:;
		if (it != expr_end) {
			jule::Ptr<_1d21d1d46_TypeKind> _90121_t = *it;
			{
				_89817_infos.get()._field_types = jule::alloc_for_append(_89817_infos.get()._field_types,1);_89817_infos.get()._field_types.__push(_1d219acbb_pushComptimeTypeInfo((*(_88831_e)).get()._field_s.get()._field_meta.ptr(), &(_90121_t)));;
			}
			_iter_next_1b705e3e7:;
			++it;
			goto _iter_begin_1b705e3e7;
		}
		_iter_end_1b705e3e7:;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_89817_infos, 14)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d2163a42__Exceptional(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _91137_e, jule::Ptr<_1d05e7604_FnCallExpr>* _91152_fc) {
	if (((*(_91152_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _91617_f = _1d21d5751_Fn(_self_.get()._field_base.ptr());;
	if ((_91617_f == nullptr)) {
		_1d040ad1e_pushErr((*(_91137_e)).ptr(), (*(_91152_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Exceptional", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _92117_constant = static__1e76e6785_NewBool(((_91617_f.get()._field_Decl != nullptr) && _91617_f.get()._field_Decl.get()._field_Exceptional));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_92117_constant, &__jule_any_type19), ._field_Constant=_92117_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2163de9__CanNil(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _92932_e, jule::Ptr<_1d05e7604_FnCallExpr>* _92947_fc) {
	if (((*(_92947_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_92932_e)).ptr(), (*(_92947_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("CanNil", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _93417_constant = static__1e76e6785_NewBool(_1d21d3ab2_NilCompatible(_self_.get()._field_base.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_93417_constant, &__jule_any_type19), ._field_Constant=_93417_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d21642a1__Result(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _94232_e, jule::Ptr<_1d05e7604_FnCallExpr>* _94247_fc) {
	if (((*(_94247_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _94717_f = _1d21d5751_Fn(_self_.get()._field_base.ptr());;
	if ((_94717_f == nullptr)) {
		_1d040ad1e_pushErr((*(_94232_e)).ptr(), (*(_94247_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Result", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	if ((_94717_f.get()._field_Result == nullptr)) {
		return _1d216a8a1_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_1d0640eee_primVoid));;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_94232_e)).get()._field_s), &(_94717_f.get()._field_Result));;
}



inline jule::Ptr<_1d0408c95_Data> _1d2164658__Params(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Ptr<_1d040a813_Eval>* _95832_e, jule::Ptr<_1d05e7604_FnCallExpr>* _95847_fc) {
	if (((*(_95847_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _96317_f = _1d21d5751_Fn(_self_.get()._field_base.ptr());;
	if ((_96317_f == nullptr)) {
		_1d040ad1e_pushErr((*(_95832_e)).ptr(), (*(_95847_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_base.ptr()), &__jule_any_type5),jule::Any(jule::Str("Params", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d215b7c6_comptimeParams>(_1d215b7c6_comptimeParams{._field_params=_96317_f.get()._field_Params}), 13)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d2164966_subIdent(jule::Ptr<_1d215e257_comptimeTypeInfo> _self_, jule::Str _97528_ident) {
	{
		auto &_match_expr{ _97528_ident };
		
		if (_match_expr == jule::Str("Str", 3)) {
			_case_begin_1b706bd0b:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _97821_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _97933_e, jule::Ptr<_1d05e7604_FnCallExpr>* _97948_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d215eec2__Str(_self_, _97933_e, _97948_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_97821_method));;
			}
		}
		else if (_match_expr == jule::Str("Bits", 4)) {
			_case_begin_1b706c78a:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _98521_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _98633_e, jule::Ptr<_1d05e7604_FnCallExpr>* _98648_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2160731__Bits(_self_, _98633_e, _98648_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_98521_method));;
			}
		}
		else if (_match_expr == jule::Str("Elem", 4)) {
			_case_begin_1b706c801:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _99221_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _99333_e, jule::Ptr<_1d05e7604_FnCallExpr>* _99348_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2160ad8__Elem(_self_, _99333_e, _99348_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_99221_method));;
			}
		}
		else if (_match_expr == jule::Str("Size", 4)) {
			_case_begin_1b706c27e:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _99921_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _100033_e, jule::Ptr<_1d05e7604_FnCallExpr>* _100048_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2160e90__Size(_self_, _100033_e, _100048_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_99921_method));;
			}
		}
		else if (_match_expr == jule::Str("Key", 3)) {
			_case_begin_1b706c2e5:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _100621_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _100733_e, jule::Ptr<_1d05e7604_FnCallExpr>* _100748_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2161347__Key(_self_, _100733_e, _100748_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_100621_method));;
			}
		}
		else if (_match_expr == jule::Str("Value", 5)) {
			_case_begin_1b706c36c:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _101321_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _101433_e, jule::Ptr<_1d05e7604_FnCallExpr>* _101448_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21616ee__Value(_self_, _101433_e, _101448_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_101321_method));;
			}
		}
		else if (_match_expr == jule::Str("Fields", 6)) {
			_case_begin_1b706c3e4:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _102021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _102133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _102148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2161aa6__Fields(_self_, _102133_e, _102148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_102021_method));;
			}
		}
		else if (_match_expr == jule::Str("Statics", 7)) {
			_case_begin_1b706c878:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _102721_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _102833_e, jule::Ptr<_1d05e7604_FnCallExpr>* _102848_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2161e5d__Statics(_self_, _102833_e, _102848_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_102721_method));;
			}
		}
		else if (_match_expr == jule::Str("Params", 6)) {
			_case_begin_1b706c900:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _103421_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _103533_e, jule::Ptr<_1d05e7604_FnCallExpr>* _103548_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2164658__Params(_self_, _103533_e, _103548_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_103421_method));;
			}
		}
		else if (_match_expr == jule::Str("Types", 5)) {
			_case_begin_1b706c977:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _104121_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _104233_e, jule::Ptr<_1d05e7604_FnCallExpr>* _104248_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d216368a__Types(_self_, _104233_e, _104248_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_104121_method));;
			}
		}
		else if (_match_expr == jule::Str("Public", 6)) {
			_case_begin_1b706c9ee:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _104821_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _104933_e, jule::Ptr<_1d05e7604_FnCallExpr>* _104948_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2162315__Public(_self_, _104933_e, _104948_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_104821_method));;
			}
		}
		else if (_match_expr == jule::Str("Binded", 6)) {
			_case_begin_1b706ca76:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _105521_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _105633_e, jule::Ptr<_1d05e7604_FnCallExpr>* _105648_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21626bc__Binded(_self_, _105633_e, _105648_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_105521_method));;
			}
		}
		else if (_match_expr == jule::Str("Ordered", 7)) {
			_case_begin_1b706caed:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _106221_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _106333_e, jule::Ptr<_1d05e7604_FnCallExpr>* _106348_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2162a74__Ordered(_self_, _106333_e, _106348_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_106221_method));;
			}
		}
		else if (_match_expr == jule::Str("Comparable", 10)) {
			_case_begin_1b706cb75:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _106921_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _107033_e, jule::Ptr<_1d05e7604_FnCallExpr>* _107048_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2162e2b__Comparable(_self_, _107033_e, _107048_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_106921_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1b706cbec:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _107621_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _107733_e, jule::Ptr<_1d05e7604_FnCallExpr>* _107748_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21632d3__Mutable(_self_, _107733_e, _107748_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_107621_method));;
			}
		}
		else if (_match_expr == jule::Str("Exceptional", 11)) {
			_case_begin_1b706cc74:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _108321_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _108433_e, jule::Ptr<_1d05e7604_FnCallExpr>* _108448_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2163a42__Exceptional(_self_, _108433_e, _108448_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_108321_method));;
			}
		}
		else if (_match_expr == jule::Str("CanNil", 6)) {
			_case_begin_1b706cceb:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _109021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _109133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _109148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2163de9__CanNil(_self_, _109133_e, _109148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_109021_method));;
			}
		}
		else if (_match_expr == jule::Str("Result", 6)) {
			_case_begin_1b706cd73:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _109721_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _109833_e, jule::Ptr<_1d05e7604_FnCallExpr>* _109848_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21642a1__Result(_self_, _109833_e, _109848_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_109721_method));;
			}
		}
		else if (_match_expr == jule::Str("Kind", 4)) {
			_case_begin_1b706cdea:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _110421_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _110533_e, jule::Ptr<_1d05e7604_FnCallExpr>* _110548_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2160379__Kind(_self_, _110533_e, _110548_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_110421_method));;
			}
		}
		else {
			_case_begin_1b706c16e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b706c04d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d215e257_comptimeTypeInfo _Src) {
	_Stream << _1d215e5ba_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21650b5_Str(_1d2164c52_comptimeValue* _self_) {
	return jule::Str("comptimeValue", 13);;
}



inline jule::Bool _1d21653c3_Equal(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d21d1d46_TypeKind> _112321_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d21658ce__Unwrap(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d040a813_Eval>* _112732_e, jule::Ptr<_1d05e7604_FnCallExpr>* _112747_fc) {
	if (((*(_112747_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_112732_e)).ptr(), (*(_112747_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Unwrap", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	return _self_.get()._field_data;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2165c86__Type(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d040a813_Eval>* _113530_e, jule::Ptr<_1d05e7604_FnCallExpr>* _113545_fc) {
	if (((*(_113545_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_113530_e)).ptr(), (*(_113545_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_113530_e)).get()._field_s), &(_self_.get()._field_data.get()._field_Kind));;
}



inline jule::Ptr<_1d0408c95_Data> _1d216613d__Lvalue(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d040a813_Eval>* _114332_e, jule::Ptr<_1d05e7604_FnCallExpr>* _114347_fc) {
	if (((*(_114347_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_114332_e)).ptr(), (*(_114347_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Lvalue", 6), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _114817_constant = static__1e76e6785_NewBool(_self_.get()._field_data.get()._field_Lvalue);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_114817_constant, &__jule_any_type19), ._field_Constant=_114817_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d21664e5__Mutable(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d040a813_Eval>* _115633_e, jule::Ptr<_1d05e7604_FnCallExpr>* _115648_fc) {
	if (((*(_115648_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_115633_e)).ptr(), (*(_115648_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Mutable", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _116117_constant = static__1e76e6785_NewBool(_self_.get()._field_data.get()._field_Mutable);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_116117_constant, &__jule_any_type19), ._field_Constant=_116117_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d216689c__Const(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d040a813_Eval>* _116931_e, jule::Ptr<_1d05e7604_FnCallExpr>* _116946_fc) {
	if (((*(_116946_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_116931_e)).ptr(), (*(_116946_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Const", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _117417_constant = static__1e76e6785_NewBool(_1d0409658_IsConst(_self_.get()._field_data.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_117417_constant, &__jule_any_type19), ._field_Constant=_117417_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2166c54__Field(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Ptr<_1d040a813_Eval>* _118231_e, jule::Ptr<_1d05e7604_FnCallExpr>* _118246_fc) {
	if (((*(_118246_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _118717_s = _1d21d59b5_Struct(_self_.get()._field_data.get()._field_Kind.ptr());;
	if ((_118717_s == nullptr)) {
		_1d040ad1e_pushErr((*(_118231_e)).ptr(), (*(_118246_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_self_.get()._field_data.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Field", 5), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d05e36dd_Expr> _119217_arg = (*(_118246_fc)).get()._field_Args[0LL];;
	jule::Ptr<_1d0408c95_Data> _119317_d = _1d01dac53_evalExpr((*(_118231_e)), _119217_arg);;
	if ((_119317_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d0409658_IsConst(_119317_d.ptr())))) {
		_1d040ad1e_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d21d9568_Prim> _120113_prim = _1d21d4563_Prim(_119317_d.get()._field_Kind.ptr());;
	if (((_120113_prim == nullptr) || (!(_1d21dc79c_IsStr(_120113_prim.ptr()))))) {
		_1d040ad1e_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1d21d2242_Str(_119317_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Str _120613_ident = _1e76e7d08_ReadStr(_119317_d.get()._field_Constant.ptr());;
	jule::Ptr<_1d06111de_FieldIns> _120717_f = _1d0612e8d_FindField(_118717_s.ptr(), _120613_ident);;
	if ((_120717_f == nullptr)) {
		_1d040ad1e_pushErr((*(_118231_e)).ptr(), _119217_arg.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_118717_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_120613_ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_119317_d=jule::new_ptr<_1d0408c95_Data>((*(_self_.get()._field_data)));
	_119317_d=_1d0420905_evalStructSubIdentField((*(_118231_e)).ptr(), &(_119317_d), &(_118717_s), &(_119217_arg.get()._field_Token), &(_120717_f));
	return _1d216abd1_buildComptimeValue(&(_119317_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d2167062_subIdent(jule::Ptr<_1d2164c52_comptimeValue> _self_, jule::Str _121728_ident) {
	{
		auto &_match_expr{ _121728_ident };
		
		if (_match_expr == jule::Str("Unwrap", 6)) {
			_case_begin_1b70a9e9d:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _122021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _122133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _122148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21658ce__Unwrap(_self_, _122133_e, _122148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_122021_method));;
			}
		}
		else if (_match_expr == jule::Str("Type", 4)) {
			_case_begin_1b70aa014:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _122721_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _122833_e, jule::Ptr<_1d05e7604_FnCallExpr>* _122848_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2165c86__Type(_self_, _122833_e, _122848_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_122721_method));;
			}
		}
		else if (_match_expr == jule::Str("Lvalue", 6)) {
			_case_begin_1b70a9ce4:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _123421_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _123533_e, jule::Ptr<_1d05e7604_FnCallExpr>* _123548_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d216613d__Lvalue(_self_, _123533_e, _123548_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_123421_method));;
			}
		}
		else if (_match_expr == jule::Str("Mutable", 7)) {
			_case_begin_1b70a9d6b:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _124121_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _124233_e, jule::Ptr<_1d05e7604_FnCallExpr>* _124248_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d21664e5__Mutable(_self_, _124233_e, _124248_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_124121_method));;
			}
		}
		else if (_match_expr == jule::Str("Const", 5)) {
			_case_begin_1b70a9de3:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _124821_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _124933_e, jule::Ptr<_1d05e7604_FnCallExpr>* _124948_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d216689c__Const(_self_, _124933_e, _124948_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_124821_method));;
			}
		}
		else if (_match_expr == jule::Str("Field", 5)) {
			_case_begin_1b70a99d6:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _125521_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _125633_e, jule::Ptr<_1d05e7604_FnCallExpr>* _125648_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2166c54__Field(_self_, _125633_e, _125648_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_125521_method));;
			}
		}
		else {
			_case_begin_1b70a9882:;
			{
				return nullptr;;
			}
		}
		_match_end_1b70a97d8:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2164c52_comptimeValue _Src) {
	_Stream << _1d21650b5_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21676b1_Str(_1d216734d_comptimeFiles* _self_) {
	return jule::Str("comptimeFiles", 13);;
}



inline jule::Bool _1d21679be_Equal(jule::Ptr<_1d216734d_comptimeFiles> _self_, jule::Ptr<_1d21d1d46_TypeKind> _127421_other) {
	return false;;
}



inline void _1d2167ded_ready(_1d216734d_comptimeFiles* _self_, jule::Ptr<_1d21bb65a_Var>* _127829_keyA, jule::Ptr<_1d21bb65a_Var>* _127846_keyB) {
	if (((*(_127829_keyA)) != nullptr)) {
		(*(_127829_keyA)).get()._field_Constant=true;
		(*(_127829_keyA)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_127829_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
		(*(_127829_keyA)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	if (((*(_127846_keyB)) != nullptr)) {
		(*(_127846_keyB)).get()._field_Constant=true;
		(*(_127846_keyB)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		(*(_127846_keyB)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2168816_comptimeFile>(), 18)})});
	};
}



inline void _1d21682b6_step(_1d216734d_comptimeFiles* _self_, jule::I64 _130023_i, jule::Ptr<_1d21bb65a_Var>* _130036_keyA, jule::Ptr<_1d21bb65a_Var>* _130053_keyB) {
	if (((*(_130036_keyA)) != nullptr)) {
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_130023_i)));
		(*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_130036_keyA)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_130053_keyB)) != nullptr)) {
		(*(_130053_keyB)).get()._field_Kind.get()._field_Kind.get()._field_Kind.cast_ptr<_1d2168816_comptimeFile>(18).get()._field_file=(*(_self_))._field_files[_130023_i];
	};
}



inline jule::I64 _1d216852a_len(_1d216734d_comptimeFiles* _self_) {
	return static_cast<jule::I64>((*(_self_))._field_files.len());;
}







std::ostream &operator<<(std::ostream &_Stream, _1d216734d_comptimeFiles _Src) {
	_Stream << _1d21676b1_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d2168b79_Str(_1d2168816_comptimeFile* _self_) {
	return jule::Str("comptimeFile", 12);;
}



inline jule::Bool _1d2168e87_Equal(jule::Ptr<_1d2168816_comptimeFile> _self_, jule::Ptr<_1d21d1d46_TypeKind> _132421_other) {
	return false;;
}



inline jule::Ptr<_1d0408c95_Data> _1d2169460__Path(jule::Ptr<_1d2168816_comptimeFile> _self_, jule::Ptr<_1d040a813_Eval>* _132830_e, jule::Ptr<_1d05e7604_FnCallExpr>* _132845_fc) {
	if (((*(_132845_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_132830_e)).ptr(), (*(_132845_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Path", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _133317_constant = static__1e76e6a2c_NewStr(_self_.get()._field_file.get()._field_File.get()._field_Path);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_133317_constant, &__jule_any_type19), ._field_Constant=_133317_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2169817__Name(jule::Ptr<_1d2168816_comptimeFile> _self_, jule::Ptr<_1d040a813_Eval>* _134130_e, jule::Ptr<_1d05e7604_FnCallExpr>* _134145_fc) {
	if (((*(_134145_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_134130_e)).ptr(), (*(_134145_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Name", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _134617_constant = static__1e76e6a2c_NewStr(_22be1858d_Name(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_134617_constant, &__jule_any_type19), ._field_Constant=_134617_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2169bbe__Dir(jule::Ptr<_1d2168816_comptimeFile> _self_, jule::Ptr<_1d040a813_Eval>* _135429_e, jule::Ptr<_1d05e7604_FnCallExpr>* _135444_fc) {
	if (((*(_135444_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_135429_e)).ptr(), (*(_135444_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Dir", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1e76e5cc3_Const> _135917_constant = static__1e76e6a2c_NewStr(_22be18329_Dir(_self_.get()._field_file.get()._field_File.ptr()));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(_135917_constant, &__jule_any_type19), ._field_Constant=_135917_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d2169ecc_subIdent(jule::Ptr<_1d2168816_comptimeFile> _self_, jule::Str _136728_ident) {
	{
		auto &_match_expr{ _136728_ident };
		
		if (_match_expr == jule::Str("Path", 4)) {
			_case_begin_1b70c3417:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _137021_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _137133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _137148_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2169460__Path(_self_, _137133_e, _137148_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_137021_method));;
			}
		}
		else if (_match_expr == jule::Str("Name", 4)) {
			_case_begin_1b70c347d:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _137721_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _137833_e, jule::Ptr<_1d05e7604_FnCallExpr>* _137848_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2169817__Name(_self_, _137833_e, _137848_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_137721_method));;
			}
		}
		else if (_match_expr == jule::Str("Dir", 3)) {
			_case_begin_1b70c323b:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _138421_method = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>([=](jule::Ptr<_1d040a813_Eval>* _138533_e, jule::Ptr<_1d05e7604_FnCallExpr>* _138548_fc, jule::Ptr<_1d0408c95_Data>* ) mutable -> jule::Ptr<_1d0408c95_Data> {
					return _1d2169bbe__Dir(_self_, _138533_e, _138548_fc);;
				}), });;
				return _1d216a351_buildAsComptimeMethodData(&(_138421_method));;
			}
		}
		else {
			_case_begin_1b70c2d2e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b70c2603:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2168816_comptimeFile _Src) {
	_Stream << _1d2168b79_Str(&_Src);
	return _Stream;
}



inline jule::Fn<jule::Bool(jule::Ptr<_1d219b34e_Sema>*,jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*)> _1d216cb39_readyFn(jule::Ptr<_1d216c70a_constraintChecker> _self_) {
	return jule::Fn<jule::Bool(jule::Ptr<_1d219b34e_Sema>*,jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*)>([=](jule::Ptr<_1d219b34e_Sema>* _6321_sema, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>* _6339_generics) mutable -> jule::Bool {
		{
			auto expr = &(_self_.get()._field_genericsD);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b70d1304:;
			if (it != expr_end) {
				jule::I64 _6418_i = it - expr->begin();
				jule::Ptr<_1d05eb509_GenericDecl> _6425_g = *it;
				{
					jule::Ptr<_1d21d05b4_InsGeneric> _6525_generic = _self_.get()._field_generics[_6418_i];;
					if (((_6425_g.get()._field_Constraint == nullptr) || (_6425_g.get()._field_Constraint.get()._field_Mask.len() == 0LL))) {
						goto _iter_next_1b70d1304;
					};
					_6525_generic.get()._field_Constraint=jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>::alloc(0LL, _6425_g.get()._field_Constraint.get()._field_Mask.len());
					{
						auto expr = &(_6425_g.get()._field_Constraint.get()._field_Mask);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b70d3724:;
						if (it != expr_end) {
							jule::Ptr<_1d05de563_TypeDecl> _7029_mask = *it;
							{
								jule::I64 _7125_n = (*(_6321_sema)).get()._field_errors.len();;
								jule::Ptr<_1d21d1d46_TypeKind> _7229_kind = _1d21a371e_buildTypeWithRefers((*(_6321_sema)), &(_7029_mask), jule::Trait<_1d2200172_Lookup>((*(_6321_sema)), 3), (*(_6339_generics)), nullptr);;
								if ((_7229_kind == nullptr)) {
									{
										auto &_match_expr{ _7029_mask.get()._field_Kind };
										
										if (_match_expr.type == &__jule_any_type20) {
											_case_begin_1b70d5160:;
											{
												jule::Ptr<_1d05deb29_IdentTypeDecl> _7637_itd = _7029_mask.get()._field_Kind.cast_ptr<_1d05deb29_IdentTypeDecl>(&__jule_any_type20);;
												if (((_7637_itd.get()._field_Generics.len() == 0LL) && _1d216dcc2_isBuiltinConstraint(&(_7637_itd.get()._field_Ident)))) {
													_7229_kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(_7637_itd.get()._field_Ident), 20)});
													(*(_6321_sema)).get()._field_errors=(*(_6321_sema)).get()._field_errors.slice(0LL, _7125_n);
													goto _julec_label_success;
												};
											}
										}
										_match_end_1b70d510a:;
									};
									return false;;
								};
								_julec_label_success:;
								_6525_generic.get()._field_Constraint = jule::alloc_for_append(_6525_generic.get()._field_Constraint,1);_6525_generic.get()._field_Constraint.__push(_7229_kind);;
							}
							_iter_next_1b70d3724:;
							++it;
							goto _iter_begin_1b70d3724;
						}
						_iter_end_1b70d3724:;
					};
				}
				_iter_next_1b70d1304:;
				++it;
				_6418_i++;
				goto _iter_begin_1b70d1304;
			}
			_iter_end_1b70d1304:;
		};
		return true;;
	});;
}



inline jule::Bool _1d216cd9d_readyFi(jule::Ptr<_1d216c70a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_fi.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_fi.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1d21a7cea_fnEnvironment(_self_.get()._field_s, &(_self_.get()._field_fi), _1d216cb39_readyFn(_self_)));;
}



inline jule::Bool _1d216d112_readySi(jule::Ptr<_1d216c70a_constraintChecker> _self_) {
	_self_.get()._field_genericsD=_self_.get()._field_si.get()._field_Decl.get()._field_Generics;
	_self_.get()._field_generics=_self_.get()._field_si.get()._field_Generics;
	return ((!(_self_.get()._field_uniq)) || _1d216cb39_readyFn(_self_)(&(_self_.get()._field_s), &(_self_.get()._field_genericsA)));;
}



inline jule::Bool _1d216d376_ready(jule::Ptr<_1d216c70a_constraintChecker> _self_) {
	if ((_self_.get()._field_fi != nullptr)) {
		return _1d216cd9d_readyFi(_self_);;
	};
	return _1d216d112_readySi(_self_);;
}



inline jule::Bool _1d216d5da_check(jule::Ptr<_1d216c70a_constraintChecker> _self_) {
	if ((!(_1d216d376_ready(_self_)))) {
		return false;;
	};
	_julec_label_lookup:;
	{
		auto expr = &(_self_.get()._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70db980:;
		if (it != expr_end) {
			jule::I64 _11914_i = it - expr->begin();
			jule::Ptr<_1d21d05b4_InsGeneric> _11921_g = *it;
			{
				if ((_11921_g.get()._field_Constraint == nullptr)) {
					goto _iter_next_1b70db980;
				};
				{
					auto expr = &(_11921_g.get()._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b70dc750:;
					if (it != expr_end) {
						jule::Ptr<_1d21d1d46_TypeKind> _12325_c2 = *it;
						{
							jule::Ptr<_1d21d9568_Prim> _12425_prim = _1d21d4563_Prim(_12325_c2.ptr());;
							if (((_12425_prim != nullptr) && _1d21da15c_IsConstraint(_12425_prim.ptr()))) {
								if (_1d216d9d6_matchConstraint(&(_12425_prim.get()._field_Kind), &(_11921_g.get()._field_Kind))) {
									goto _iter_next_1b70db980;
								};
								goto _iter_next_1b70dc750;
							};
							if (_1d21d2550_Equal(_12325_c2, _11921_g.get()._field_Kind)) {
								goto _iter_next_1b70db980;
							};
						}
						_iter_next_1b70dc750:;
						++it;
						goto _iter_begin_1b70dc750;
					}
					_iter_end_1b70dc750:;
				};
				_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _self_.get()._field_et, jule::Str("type @ is not matched with @'s constraint", 41), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_11921_g.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_self_.get()._field_genericsD[_11914_i].get()._field_Ident, &__jule_any_type5)}));
				return false;;
			}
			_iter_next_1b70db980:;
			++it;
			_11914_i++;
			goto _iter_begin_1b70db980;
		}
		_iter_end_1b70db980:;
	};
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d216c70a_constraintChecker _Src) {
	_Stream << "constraintChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "genericsD:" << _Src._field_genericsD << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "genericsA:" << _Src._field_genericsA << ", ";
	_Stream << "fi:" << _Src._field_fi << ", ";
	_Stream << "si:" << _Src._field_si << ", ";
	_Stream << "et:" << _Src._field_et << ", ";
	_Stream << "uniq:" << _Src._field_uniq;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d216e9a4_IsTraitImpl(_1d216e5a8_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1d216ec18_IsStructImpl(_1d216e5a8_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d216e5a8_Impl _Src) {
	_Stream << "Impl{";
	_Stream << "Base:" << _Src._field_Base << ", ";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Methods:" << _Src._field_Methods << ", ";
	_Stream << "Statics:" << _Src._field_Statics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2174613_Scope _Src) {
	_Stream << "Scope{";
	_Stream << "Parent:" << _Src._field_Parent << ", ";
	_Stream << "Unsafety:" << _Src._field_Unsafety << ", ";
	_Stream << "Deferred:" << _Src._field_Deferred << ", ";
	_Stream << "Stmts:" << _Src._field_Stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2174a0e_If _Src) {
	_Stream << "If{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2174cea_Else _Src) {
	_Stream << "Else{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217516e_Conditional _Src) {
	_Stream << "Conditional{";
	_Stream << "Elifs:" << _Src._field_Elifs << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217545a_InfIter _Src) {
	_Stream << "InfIter{";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d2175c74_IsWhileNext(_1d21758cd_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21758cd_WhileIter _Src) {
	_Stream << "WhileIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Next:" << _Src._field_Next << ", ";
	_Stream << "Scope:" << _Src._field_Scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21762b3_RangeIter _Src) {
	_Stream << "RangeIter{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "KeyA:" << _Src._field_KeyA << ", ";
	_Stream << "KeyB:" << _Src._field_KeyB;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21766ae_ContSt _Src) {
	_Stream << "ContSt{";
	_Stream << "It:" << _Src._field_It;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2176a66_BreakSt _Src) {
	_Stream << "BreakSt{";
	_Stream << "It:" << _Src._field_It << ", ";
	_Stream << "Mtch:" << _Src._field_Mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2176d52_Label _Src) {
	_Stream << "Label{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217713d_GotoSt _Src) {
	_Stream << "GotoSt{";
	_Stream << "Ident:" << _Src._field_Ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21774e5_Postfix _Src) {
	_Stream << "Postfix{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2177968_Assign _Src) {
	_Stream << "Assign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R << ", ";
	_Stream << "Op:" << _Src._field_Op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2177d20_MultiAssign _Src) {
	_Stream << "MultiAssign{";
	_Stream << "L:" << _Src._field_L << ", ";
	_Stream << "R:" << _Src._field_R;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d2178936_IsGenericTypeMatch(_1d217842a_Match* _self_) {
	return (((*(_self_))._field_TypeMatch && ((*(_self_))._field_Expr != nullptr)) && (*(_self_))._field_Expr.get()._field_Kind.get()._field_Generic);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217842a_Match _Src) {
	_Stream << "Match{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "TypeMatch:" << _Src._field_TypeMatch << ", ";
	_Stream << "Comptime:" << _Src._field_Comptime << ", ";
	_Stream << "Cases:" << _Src._field_Cases << ", ";
	_Stream << "Default:" << _Src._field_Default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d217923e_isDefault(_1d2178e75_Case* _self_) {
	return ((*(_self_))._field_Exprs == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2178e75_Case _Src) {
	_Stream << "Case{";
	_Stream << "Owner:" << _Src._field_Owner << ", ";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Exprs:" << _Src._field_Exprs << ", ";
	_Stream << "Next:" << _Src._field_Next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217952a_FallSt _Src) {
	_Stream << "FallSt{";
	_Stream << "DestCase:" << _Src._field_DestCase;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217989e_RetSt _Src) {
	_Stream << "RetSt{";
	_Stream << "Func:" << _Src._field_Func << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2179ea9_scopeLabel _Src) {
	_Stream << "scopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217a42c_scopeGoto _Src) {
	_Stream << "scopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d217b6b4_SelectPackage(_1d217b241_scopeChecker* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _45632_selector) {
	return _1d219b7c2_SelectPackage((*(_self_))._field_s.ptr(), _45632_selector);;
}



inline jule::Ptr<_1d21bb65a_Var> _1d217ba6b_FindVar(_1d217b241_scopeChecker* _self_, jule::Str _46726_ident, jule::Bool _46738_binded) {
	;
	jule::Ptr<_1d21bb65a_Var> _47017_v = _1d0406710_findVar((*(_self_))._field_table.ptr(), _46726_ident, _46738_binded, true);;
	if ((_47017_v != nullptr)) {
		return _47017_v;;
	};
	jule::Ptr<_1d217b241_scopeChecker> _47517_parent = (*(_self_))._field_parent;;
	while ((_47517_parent != nullptr)) {
		{
			_47017_v=_1d0406710_findVar(_47517_parent.get()._field_table.ptr(), _46726_ident, _46738_binded, true);
			if ((_47017_v != nullptr)) {
				return _47017_v;;
			};
			_47517_parent=_47517_parent.get()._field_parent;
		}
	_iter_next_1b7114d82:;
	}
	_iter_end_1b7114d82:;;
	return _1d219bb79_FindVar((*(_self_))._field_s.ptr(), _46726_ident, _46738_binded);;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d217be23_FindTypeAlias(_1d217b241_scopeChecker* _self_, jule::Str _49432_ident, jule::Bool _49444_binded) {
	;
	jule::Ptr<_1d21d10ed_TypeAlias> _49717_ta = _1d0406b61_findTypeAlias((*(_self_))._field_table.ptr(), _49432_ident, _49444_binded, true);;
	if ((_49717_ta != nullptr)) {
		return _49717_ta;;
	};
	jule::Ptr<_1d217b241_scopeChecker> _50217_parent = (*(_self_))._field_parent;;
	while ((_50217_parent != nullptr)) {
		{
			_49717_ta=_1d0406b61_findTypeAlias(_50217_parent.get()._field_table.ptr(), _49432_ident, _49444_binded, true);
			if ((_49717_ta != nullptr)) {
				return _49717_ta;;
			};
			_50217_parent=_50217_parent.get()._field_parent;
		}
	_iter_next_1b7117945:;
	}
	_iter_end_1b7117945:;;
	return _1d219c031_FindTypeAlias((*(_self_))._field_s.ptr(), _49432_ident, _49444_binded);;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d217c2ca_FindStruct(_1d217b241_scopeChecker* _self_, jule::Str _51929_ident, jule::Bool _51941_binded) {
	return _1d219c3d8_FindStruct((*(_self_))._field_s.ptr(), _51929_ident, _51941_binded);;
}



inline jule::Ptr<_1d06242bd_Fn> _1d217c682_FindFn(_1d217b241_scopeChecker* _self_, jule::Str _52825_ident, jule::Bool _52837_binded) {
	return _1d219c790_FindFn((*(_self_))._field_s.ptr(), _52825_ident, _52837_binded);;
}



inline jule::Ptr<_1d21494c8_Trait> _1d217c990_FindTrait(_1d217b241_scopeChecker* _self_, jule::Str _53728_ident) {
	return _1d219ca9d_FindTrait((*(_self_))._field_s.ptr(), _53728_ident);;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d217cc9d_FindEnum(_1d217b241_scopeChecker* _self_, jule::Str _54627_ident) {
	return _1d219cdab_FindEnum((*(_self_))._field_s.ptr(), _54627_ident);;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d217d0ab_FindTypeEnum(_1d217b241_scopeChecker* _self_, jule::Str _55531_ident) {
	return _1d219d1b9_FindTypeEnum((*(_self_))._field_s.ptr(), _55531_ident);;
}



inline jule::Bool _1d217d3db_isUnsafe(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	jule::Ptr<_1d217b241_scopeChecker> _56317_scope = _self_;;
	_julec_label_iter:;
	if (_56317_scope.get()._field_scope.get()._field_Unsafety) {
		return true;;
	};
	if ((_56317_scope.get()._field_parent != nullptr)) {
		_56317_scope=_56317_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1d217d650_isRoot(_1d217b241_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1d217d82b_stop(_1d217b241_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1d217da90_stopped(_1d217b241_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1d217dd04_isDeferred(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	jule::Ptr<_1d217b241_scopeChecker> _59617_scope = _self_;;
	_julec_label_iter:;
	if (_59617_scope.get()._field_scope.get()._field_Deferred) {
		return true;;
	};
	if ((_59617_scope.get()._field_parent != nullptr)) {
		_59617_scope=_59617_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1d217b241_scopeChecker> _1d217e068_getRoot(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	jule::Ptr<_1d217b241_scopeChecker> _61417_root = _self_;;
	while (((_61417_root.get()._field_parent != nullptr) && (_61417_root.get()._field_owner == nullptr))) {
		{
			_61417_root=_61417_root.get()._field_parent;
		}
	_iter_next_1b71218e9:;
	}
	_iter_end_1b71218e9:;;
	return _61417_root;;
}



inline jule::Ptr<_1d217b241_scopeChecker> _1d217e2cc_getHardRoot(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	jule::Ptr<_1d217b241_scopeChecker> _62417_root = _self_;;
	while ((_62417_root.get()._field_parent != nullptr)) {
		{
			_62417_root=_62417_root.get()._field_parent;
		}
	_iter_next_1b71229c7:;
	}
	_iter_end_1b71229c7:;;
	return _62417_root;;
}



inline jule::Ptr<_1d2176d52_Label> _1d217e5da_findLabel(_1d217b241_scopeChecker* _self_, jule::Str _63428_ident) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7123511:;
		if (it != expr_end) {
			jule::Any _63521_st = *it;
			{
				{
					auto &_match_expr{ _63521_st };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1b7124028:;
						{
							jule::Ptr<_1d2176d52_Label> _63825_label = _63521_st.cast_ptr<_1d2176d52_Label>(&__jule_any_type21);;
							if ((_63825_label.get()._field_Ident == _63428_ident)) {
								return _63825_label;;
							};
						}
					}
					_match_end_1b7123e29:;
				};
			}
			_iter_next_1b7123511:;
			++it;
			goto _iter_begin_1b7123511;
		}
		_iter_end_1b7123511:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d2179ea9_scopeLabel> _1d217e8e8_findLabelScope(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Str _65034_ident) {
	jule::Ptr<_1d2179ea9_scopeLabel> _65117_label = _1d217ec06_findLabelAll(_self_.ptr(), _65034_ident);;
	if (((_65117_label != nullptr) && (_65117_label.get()._field_scope == _self_))) {
		return _65117_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1d2179ea9_scopeLabel> _1d217ec06_findLabelAll(_1d217b241_scopeChecker* _self_, jule::Str _66231_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7126118:;
		if (it != expr_end) {
			jule::Ptr<_1d2179ea9_scopeLabel> _66321_lbl = *it;
			{
				if ((_66321_lbl.get()._field_label.get()._field_Ident == _66231_ident)) {
					return _66321_lbl;;
				};
			}
			_iter_next_1b7126118:;
			++it;
			goto _iter_begin_1b7126118;
		}
		_iter_end_1b7126118:;
	};
	return nullptr;;
}



inline jule::Bool _1d21800ad_isDuplicatedIdent(_1d217b241_scopeChecker* _self_, jule::Uintptr _67436_itself, jule::Str _67453_ident) {
	jule::Ptr<_1d21bb65a_Var> _67513_v = _1d217ba6b_FindVar(_self_, _67453_ident, false);;
	if (((_67513_v != nullptr) && (static_cast<jule::Uintptr>(_67513_v) != _67436_itself))) {
		if ((_67513_v.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_67513_v.get()._field_Scope == (*(_self_))._field_scope) || (!(_1d219d5d7_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	jule::Ptr<_1d21d10ed_TypeAlias> _68313_ta = _1d217be23_FindTypeAlias(_self_, _67453_ident, false);;
	if (((_68313_ta != nullptr) && (static_cast<jule::Uintptr>(_68313_ta) != _67436_itself))) {
		if ((_68313_ta.get()._field_Scope == nullptr)) {
			return false;;
		};
		return ((_68313_ta.get()._field_Scope == (*(_self_))._field_tree) || (!(_1d219d5d7_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I64>(1LL)))));;
	};
	return false;;
}



inline void _1d2180333_checkVarDecl(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0601b6e_VarDecl> _69436_decl) {
	jule::Ptr<_1d21bb65a_Var> _69517_v = _1d21465a2_buildVar(_69436_decl);;
	_69517_v.get()._field_Scope=_self_.get()._field_scope;
	__JULE_DEFER({
		_self_.get()._field_table.get()._field_Vars = jule::alloc_for_append(_self_.get()._field_table.get()._field_Vars,1);_self_.get()._field_table.get()._field_Vars.__push(_69517_v);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_69517_v, &__jule_any_type8));;
	});;
	if (_1d21800ad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_69517_v)), _69517_v.get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _69517_v.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_69517_v.get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1d217d82b_stop(_self_.ptr());
		return;;
	};
	_1d21aedbd_checkVarDecl(_self_.get()._field_s, &(_69517_v), jule::Trait<_1d2200172_Lookup>(_self_, 0));
	if (((!(_1d21bbc87_IsTypeInferred(_69517_v.ptr()))) && ((_69517_v.get()._field_Kind == nullptr) || (_69517_v.get()._field_Kind.get()._field_Kind == nullptr)))) {
		return;;
	};
	_1d21b3a92_checkTypeVar(_self_.get()._field_s, &(_69517_v), jule::Trait<_1d2200172_Lookup>(_self_, 0));
}



inline void _1d21805a8_checkTypeAliasDecl(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d06054d0_TypeAliasDecl> _71842_decl) {
	jule::Ptr<_1d21d10ed_TypeAlias> _71917_ta = _1d062bade_buildTypeAlias(_71842_decl);;
	if (_1d21800ad_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_71917_ta)), _71917_ta.get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _71917_ta.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_71917_ta.get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		_1d217d82b_stop(_self_.ptr());
		return;;
	};
	_1d21a95b0_checkTypeAliasDecl(_self_.get()._field_s, &(_71917_ta), jule::Trait<_1d2200172_Lookup>(_self_, 0));
	_self_.get()._field_table.get()._field_TypeAliases = jule::alloc_for_append(_self_.get()._field_table.get()._field_TypeAliases,1);_self_.get()._field_table.get()._field_TypeAliases.__push(_71917_ta);;
	if ((_71917_ta.get()._field_Kind.get()._field_Kind == nullptr)) {
		_1d217d82b_stop(_self_.ptr());
	};
}



inline jule::Ptr<_1d2174613_Scope> _1d218081c_getChild(_1d217b241_scopeChecker* _self_) {
	return jule::new_ptr<_1d2174613_Scope>(_1d2174613_Scope{._field_Parent=(*(_self_))._field_scope, });;
}



inline void _1d2180bd5_checkChildSsc(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ee199_ScopeTree>* _74238_tree, jule::Ptr<_1d2174613_Scope>* _74261_s, jule::Ptr<_1d217b241_scopeChecker>* _74277_ssc) {
	(*(_74277_ssc)).get()._field_parent=_self_;
	_1d218b185_check((*(_74277_ssc)), _74238_tree, _74261_s);
}



inline jule::Ptr<_1d2174613_Scope> _1d218108c_checkChildSc(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ee199_ScopeTree>* _74737_tree, jule::Ptr<_1d217b241_scopeChecker>* _74760_ssc) {
	jule::Ptr<_1d2174613_Scope> _74817_s = _1d218081c_getChild(_self_.ptr());;
	_1d2180bd5_checkChildSsc(_self_, _74737_tree, &(_74817_s), _74760_ssc);
	return _74817_s;;
}



inline jule::Ptr<_1d2174613_Scope> _1d218139a_checkChild(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ee199_ScopeTree>* _75335_tree) {
	jule::Ptr<_1d217b241_scopeChecker> _75417_ssc = _1d218b3e9_newChildChecker(_self_);;
	return _1d218108c_checkChildSc(_self_, _75335_tree, &(_75417_ssc));;
}



inline void _1d2181620_checkAnonScope(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ee199_ScopeTree> _75838_tree) {
	jule::Ptr<_1d2174613_Scope> _75917_s = _1d218139a_checkChild(_self_, &(_75838_tree));;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_75917_s, &__jule_any_type22));;
}



inline void _1d218193e_processErrorCall(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel>* _76341_m, jule::Ptr<_22be1281d_Token> _76372_err) {
	if (_1d217dd04_isDeferred(_self_)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("deferred scopes are not supports error calls", 44), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d217b241_scopeChecker> _76817_root = _1d217e068_getRoot(_self_);;
	if ((!(_76817_root.get()._field_owner.get()._field_Decl.get()._field_Exceptional))) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _76372_err, jule::Str("error call can only useable for exceptional functions", 53), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can declare an exceptional function with \"!\" operator", 57), jule::Slice<jule::Any>());
	};
	(*(_76341_m)).get()._field_Func=_76817_root.get()._field_owner;
}



inline void _1d2181bb4_checkExpr(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05e36dd_Expr> _77633_expr) {
	jule::Ptr<_1d040a813_Eval> _77717_eval = _1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0));;
	_77717_eval.get()._field_ignored=true;
	jule::Ptr<_1d0408c95_Data> _77917_d = _1d01dac53_evalExpr(_77717_eval, _77633_expr);;
	if ((_77917_d == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _77917_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b713aa23:;
			{
				jule::Ptr<_1d062042e_BuiltinErrorCallExprModel> _78621_m = _77917_d.get()._field_Model.cast_ptr<_1d062042e_BuiltinErrorCallExprModel>(&__jule_any_type23);;
				_1d218193e_processErrorCall(_self_, &(_78621_m), _77633_expr.get()._field_Token);
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_77917_d, &__jule_any_type24));;
			}
		}
		else if (_match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31 || _match_expr.type == &__jule_any_type32 || _match_expr.type == &__jule_any_type33 || _match_expr.type == &__jule_any_type34 || _match_expr.type == &__jule_any_type35) {
			_case_begin_1b713ac32:;
			{
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_77917_d, &__jule_any_type24));;
			}
		}
		else {
			_case_begin_1b713aacd:;
			{
				_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _77633_expr.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b713abbb:;
	};
}



inline jule::Ptr<_1d2174a0e_If> _1d2181ec2_checkIf(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d06044ce_If> _80631_i) {
	jule::Ptr<_1d2174613_Scope> _80717_s = _1d218139a_checkChild(_self_, &(_80631_i.get()._field_Scope));;
	jule::Ptr<_1d0408c95_Data> _80917_d = _1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _80631_i.get()._field_Expr);;
	if ((_80917_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d21d9568_Prim> _81417_prim = _1d21d4563_Prim(_80917_d.get()._field_Kind.ptr());;
	if (((_81417_prim == nullptr) || (!(_1d21dc538_IsBool(_81417_prim.ptr()))))) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _80631_i.get()._field_Expr.get()._field_Token, jule::Str("if conditions must be have boolean expression", 45), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d2174a0e_If>(_1d2174a0e_If{._field_Expr=_80917_d.get()._field_Model, ._field_Scope=_80717_s});;
}



inline jule::Ptr<_1d2174cea_Else> _1d21822d0_checkElse(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0604886_Else> _82633_e) {
	return jule::new_ptr<_1d2174cea_Else>(_1d2174cea_Else{._field_Scope=_1d218139a_checkChild(_self_, &(_82633_e.get()._field_Scope))});;
}



inline void _1d2182555_checkConditional(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0604d09_Conditional> _83240_conditional) {
	jule::Ptr<_1d217516e_Conditional> _83317_c = jule::new_ptr<_1d217516e_Conditional>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_83317_c, &__jule_any_type36));;
	_83317_c.get()._field_Elifs=jule::Slice<jule::Ptr<_1d2174a0e_If>>::alloc(0LL, (_83240_conditional.get()._field_Tail.len() + 1LL));
	_83317_c.get()._field_Elifs = jule::alloc_for_append(_83317_c.get()._field_Elifs,1);_83317_c.get()._field_Elifs.__push(_1d2181ec2_checkIf(_self_, _83240_conditional.get()._field_Head));;
	{
		auto expr = &(_83240_conditional.get()._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71449e9:;
		if (it != expr_end) {
			jule::Ptr<_1d06044ce_If> _83921_elif = *it;
			{
				_83317_c.get()._field_Elifs = jule::alloc_for_append(_83317_c.get()._field_Elifs,1);_83317_c.get()._field_Elifs.__push(_1d2181ec2_checkIf(_self_, _83921_elif));;
			}
			_iter_next_1b71449e9:;
			++it;
			goto _iter_begin_1b71449e9;
		}
		_iter_end_1b71449e9:;
	};
	if ((_83240_conditional.get()._field_Default != nullptr)) {
		_83317_c.get()._field_Default=_1d21822d0_checkElse(_self_, _83240_conditional.get()._field_Default);
	};
}



inline void _1d21829b7_checkIterScopeSsc(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Uintptr _84837_it, jule::Ptr<_1d05ee199_ScopeTree> _84854_tree, jule::Ptr<_1d2174613_Scope>* _84877_s, jule::Ptr<_1d217b241_scopeChecker> _84892_ssc) {
	_84892_ssc.get()._field_it=_84837_it;
	_1d2180bd5_checkChildSsc(_self_, &(_84854_tree), _84877_s, &(_84892_ssc));
}



inline jule::Ptr<_1d2174613_Scope> _1d2182e18_checkIterScopeSc(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Uintptr _85336_it, jule::Ptr<_1d05ee199_ScopeTree> _85353_tree, jule::Ptr<_1d217b241_scopeChecker> _85375_ssc) {
	jule::Ptr<_1d2174613_Scope> _85417_scope = _1d218081c_getChild(_self_.ptr());;
	_1d21829b7_checkIterScopeSsc(_self_, _85336_it, _85353_tree, &(_85417_scope), _85375_ssc);
	return _85417_scope;;
}



inline jule::Ptr<_1d2174613_Scope> _1d21832c0_checkIterScope(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Uintptr _85934_it, jule::Ptr<_1d05ee199_ScopeTree>* _85952_tree) {
	jule::Ptr<_1d217b241_scopeChecker> _86017_ssc = _1d218b3e9_newChildChecker(_self_);;
	return _1d2182e18_checkIterScopeSc(_self_, _85934_it, (*(_85952_tree)), _86017_ssc);;
}



inline void _1d2183545_checkInfIter(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0602686_Iter>* _86437_it) {
	jule::Ptr<_1d217545a_InfIter> _86517_kind = jule::new_ptr<_1d217545a_InfIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_86517_kind, &__jule_any_type37));;
	_86517_kind.get()._field_Scope=_1d21832c0_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_86517_kind)), &((*(_86437_it)).get()._field_Scope));
}



inline void _1d21837ba_checkWhileIter(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0602686_Iter>* _87039_it) {
	jule::Ptr<_1d0602e5b_WhileKind> _87117_wh = (*(_87039_it)).get()._field_Kind.cast_ptr<_1d0602e5b_WhileKind>(&__jule_any_type38);;
	if (((_87117_wh.get()._field_Expr == nullptr) && (_87117_wh.get()._field_Next == nullptr))) {
		_1d2183545_checkInfIter(_self_, _87039_it);
		return;;
	};
	jule::Ptr<_1d21758cd_WhileIter> _87717_kind = jule::new_ptr<_1d21758cd_WhileIter>();;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_87717_kind, &__jule_any_type39));;
	_87717_kind.get()._field_Scope=_1d21832c0_checkIterScope(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_87717_kind)), &((*(_87039_it)).get()._field_Scope));
	if ((_87117_wh.get()._field_Expr != nullptr)) {
		jule::Ptr<_1d0408c95_Data> _88221_d = _1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _87117_wh.get()._field_Expr);;
		if ((_88221_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1d21d9568_Prim> _88717_prim = _1d21d4563_Prim(_88221_d.get()._field_Kind.ptr());;
		if ((_88717_prim == nullptr)) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1d21dc538_IsBool(_88717_prim.ptr())))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_87039_it)).get()._field_Token, jule::Str("while iterations must be have boolean expression", 48), jule::Slice<jule::Any>());
			return;;
		};
		_87717_kind.get()._field_Expr=_88221_d.get()._field_Model;
	};
	if (_1d06032ad_IsWhileNext(_87117_wh.ptr())) {
		if ((!(_1d2173b40_isValidAstStForNextSt(&(_87117_wh.get()._field_Next))))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			return;;
		};
		jule::I64 _90717_n = _self_.get()._field_scope.get()._field_Stmts.len();;
		_1d2189e31_checkNode(_self_, &(_87117_wh.get()._field_Next));
		if ((_90717_n < _self_.get()._field_scope.get()._field_Stmts.len())) {
			jule::Any _91025_st = _self_.get()._field_scope.get()._field_Stmts[_90717_n];;
			_self_.get()._field_scope.get()._field_Stmts=_self_.get()._field_scope.get()._field_Stmts.slice(0LL, _90717_n);
			if ((!(_1d2173dd7_isValidStForNextSt(&(_91025_st))))) {
				_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _87117_wh.get()._field_NextToken, jule::Str("invalid statement for while-next", 32), jule::Slice<jule::Any>());
			};
			_87717_kind.get()._field_Next=_91025_st;
		};
	};
}



inline void _1d2183b83_checkComptimeRangeIter(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0602686_Iter>* _92047_it, jule::Ptr<_1d21762b3_RangeIter>* _92063_kind, jule::Ptr<_1d0408c95_Data>* _92086_d) {
	if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
		if (((!(_1d219d5d7_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d21800ad_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyA.get()._field_Ident))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
		if (((!(_1d219d5d7_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d21800ad_isDuplicatedIdent(_self_.ptr(), 0LLU, (*(_92063_kind)).get()._field_KeyB.get()._field_Ident))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_92063_kind)).get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_92063_kind)).get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1d21504ac_comptimeRange> _93417_comptime = _1d21d7654_comptimeRange((*(_92086_d)).get()._field_Kind.ptr());;
	_1d21502d1_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1d214ea61_ready(_93417_comptime.get()._field_kind, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
	jule::I64 _93617_i = 0LL;;
	jule::I64 _93713_errors = _self_.get()._field_s.get()._field_errors.len();;
	for (; (_93617_i < _1d21502d1_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1d215018d_len(_93417_comptime.get()._field_kind)); (_93617_i)++) {
		{
			jule::Ptr<_1d217b241_scopeChecker> _93921_ssc = _1d218b3e9_newChildChecker(_self_);;
			jule::Ptr<_1d2174613_Scope> _94021_scope = _1d218081c_getChild(_self_.ptr());;
			if (((*(_92063_kind)).get()._field_KeyA != nullptr)) {
				(*(_92063_kind)).get()._field_KeyA.get()._field_Scope=_94021_scope;
				_93921_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_93921_ssc.get()._field_table.get()._field_Vars,1);_93921_ssc.get()._field_table.get()._field_Vars.__push((*(_92063_kind)).get()._field_KeyA);;
			};
			if (((*(_92063_kind)).get()._field_KeyB != nullptr)) {
				(*(_92063_kind)).get()._field_KeyB.get()._field_Scope=_94021_scope;
				_93921_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_93921_ssc.get()._field_table.get()._field_Vars,1);_93921_ssc.get()._field_table.get()._field_Vars.__push((*(_92063_kind)).get()._field_KeyB);;
			};
			_1d21502d1_comptimeRangeKind_mptr_data[(_93417_comptime.get()._field_kind).type_offset]._1d214ee29_step(_93417_comptime.get()._field_kind, _93617_i, &((*(_92063_kind)).get()._field_KeyA), &((*(_92063_kind)).get()._field_KeyB));
			_1d2180bd5_checkChildSsc(_self_, &((*(_92047_it)).get()._field_Scope), &(_94021_scope), &(_93921_ssc));
			if ((_93713_errors != _self_.get()._field_s.get()._field_errors.len())) {
				goto _iter_end_1b71598cc;
			};
			_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_94021_scope, &__jule_any_type22));;
		}
	_iter_next_1b71598cc:;
	}
	_iter_end_1b71598cc:;;
}



inline void _1d2183e08_checkRangeIter(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0602686_Iter>* _95939_it) {
	jule::Ptr<_1d06037ec_RangeKind> _96017_rang = (*(_95939_it)).get()._field_Kind.cast_ptr<_1d06037ec_RangeKind>(&__jule_any_type40);;
	jule::Ptr<_1d0408c95_Data> _96217_d = _1d01da3c3_evalExpr1(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _96017_rang.get()._field_Expr);;
	if ((_96217_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1d21762b3_RangeIter> _96717_kind = jule::new_ptr<_1d21762b3_RangeIter>(_1d21762b3_RangeIter{._field_Expr=_96217_d, });;
	_1d03eee56_rangeChecker _97117_rc = _1d03eee56_rangeChecker{._field_sc=_self_, ._field_rang=_96017_rang, ._field_Kind=_96717_kind, ._field_d=_96217_d};;
	jule::Bool _97713_ok = _1d0401c7c_check(&_97117_rc);;
	if ((!(_97713_ok))) {
		return;;
	};
	jule::Ptr<_1d21504ac_comptimeRange> _98217_comptimeRange = _1d21d7654_comptimeRange(_96217_d.get()._field_Kind.ptr());;
	if ((_98217_comptimeRange != nullptr)) {
		_1d2183b83_checkComptimeRangeIter(_self_, _95939_it, &(_96717_kind), &(_96217_d));
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_96717_kind, &__jule_any_type41));;
	jule::Ptr<_1d217b241_scopeChecker> _99017_ssc = _1d218b3e9_newChildChecker(_self_);;
	jule::Ptr<_1d2174613_Scope> _99117_scope = _1d218081c_getChild(_self_.ptr());;
	if ((_96717_kind.get()._field_KeyA != nullptr)) {
		if (((!(_1d219d5d7_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d21800ad_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyA.get()._field_Ident))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyA.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
			_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyA.get()._field_Scope=_99117_scope;
		_99017_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_99017_ssc.get()._field_table.get()._field_Vars,1);_99017_ssc.get()._field_table.get()._field_Vars.__push(_96717_kind.get()._field_KeyA);;
	};
	if ((_96717_kind.get()._field_KeyB != nullptr)) {
		if (((!(_1d219d5d7_isFlag(_self_.get()._field_s.ptr(), static_cast<jule::I64>(1LL)))) && _1d21800ad_isDuplicatedIdent(_self_.ptr(), 0LLU, _96717_kind.get()._field_KeyB.get()._field_Ident))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _96717_kind.get()._field_KeyB.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_96717_kind.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
			_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
		};
		_96717_kind.get()._field_KeyB.get()._field_Scope=_99117_scope;
		_99017_ssc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_99017_ssc.get()._field_table.get()._field_Vars,1);_99017_ssc.get()._field_table.get()._field_Vars.__push(_96717_kind.get()._field_KeyB);;
	};
	_1d21829b7_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_96717_kind)), (*(_95939_it)).get()._field_Scope, &(_99117_scope), _99017_ssc);
	_96717_kind.get()._field_Scope=_99117_scope;
}



inline void _1d218417d_checkIter(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0602686_Iter> _101533_it) {
	if (_1d06029d8_IsInf(_101533_it.ptr())) {
		_1d2183545_checkInfIter(_self_, &(_101533_it));
		return;;
	};
	{
		auto &_match_expr{ _101533_it.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1b716a327:;
			{
				_1d21837ba_checkWhileIter(_self_, &(_101533_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1b7169d82:;
			{
				_1d2183e08_checkRangeIter(_self_, &(_101533_it));
			}
		}
		else {
			_case_begin_1b7169799:;
			{
				jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
			}
		}
		_match_end_1b7169744:;
	};
}



inline jule::Bool _1d218448b_checkValidContLabel(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Uintptr _103139_it) {
	jule::Ptr<_1d217b241_scopeChecker> _103217_scope = _self_;;
	_julec_label_iter:;
	if ((_103217_scope.get()._field_it == _103139_it)) {
		return true;;
	};
	if ((_103217_scope.get()._field_parent != nullptr)) {
		_103217_scope=_103217_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Bool _1d2184799_checkValidBreakLabel(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Uintptr _104740_ptr) {
	jule::Ptr<_1d217b241_scopeChecker> _104817_scope = _self_;;
	_julec_label_iter:;
	if ((_104817_scope.get()._field_it == _104740_ptr)) {
		return true;;
	};
	if ((_104817_scope.get()._field_cse != 0LLU)) {
		jule::Uintptr _105617_mtch = static_cast<jule::Uintptr>(((_1d2178e75_Case*)(_104817_scope.get()._field_cse))->_field_Owner);;
		if ((_105617_mtch == _104740_ptr)) {
			return true;;
		};
	};
	if ((_104817_scope.get()._field_parent != nullptr)) {
		_104817_scope=_104817_scope.get()._field_parent;
		goto _julec_label_iter;
	};
	return false;;
}



inline jule::Ptr<_1d21766ae_ContSt> _1d2184aa7_checkContValidScope(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d060405b_ContSt> _107039_c) {
	if (_1d217dd04_isDeferred(_self_)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_107039_c.get()._field_Label != nullptr)) {
		return jule::new_ptr<_1d21766ae_ContSt>();;
	};
	jule::Ptr<_1d217b241_scopeChecker> _108017_scope = _self_;;
	_julec_label_iter:;
	{
		
		if ((((_108017_scope.get()._field_it == 0LLU) && (_108017_scope.get()._field_parent != nullptr)) && (_108017_scope.get()._field_owner == nullptr))) {
			_case_begin_1b7172263:;
			{
				_108017_scope=_108017_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_108017_scope.get()._field_it != 0LLU)) {
			_case_begin_1b71722da:;
			{
				return jule::new_ptr<_1d21766ae_ContSt>(_1d21766ae_ContSt{._field_It=_108017_scope.get()._field_it});;
			}
		}
		_match_end_1b71721ca:;
	};
	_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _107039_c.get()._field_Token, jule::Str("continue keyword is cannot used at out of iteration", 51), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1d2184d2c_checkCont(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d060405b_ContSt> _109429_c) {
	jule::Ptr<_1d21766ae_ContSt> _109517_cont = _1d2184aa7_checkContValidScope(_self_, _109429_c);;
	if ((_109517_cont == nullptr)) {
		return;;
	};
	if ((_109429_c.get()._field_Label != nullptr)) {
		jule::Ptr<_1d2179ea9_scopeLabel> _110121_label = _1d2171d19_findLabelParent(_109429_c.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
		if ((_110121_label == nullptr)) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		_110121_label.get()._field_used=true;
		if (((_110121_label.get()._field_pos + 1LL) >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
			return;;
		};
		jule::I64 _111417_i = (_110121_label.get()._field_pos + 1LL);;
		if ((_111417_i >= _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>());
		} else {
			jule::Any _111825_st = _110121_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_111417_i];;
			{
				auto &_match_expr{ _111825_st };
				
				if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1b71798ca:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1d217545a_InfIter>(&__jule_any_type37)));
					}
				}
				else if (_match_expr.type == &__jule_any_type41) {
					_case_begin_1b717a117:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1d21762b3_RangeIter>(&__jule_any_type41)));
					}
				}
				else if (_match_expr.type == &__jule_any_type39) {
					_case_begin_1b717a17d:;
					{
						_109517_cont.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_111825_st.cast_ptr<_1d21758cd_WhileIter>(&__jule_any_type39)));
					}
				}
				else {
					_case_begin_1b7179e80:;
					{
						_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					}
				}
				_match_end_1b7179e2a:;
			};
		};
	};
	if ((_109517_cont.get()._field_It != 0LLU)) {
		if ((!(_1d218448b_checkValidContLabel(_self_, _109517_cont.get()._field_It)))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _109429_c.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_109429_c.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_109517_cont, &__jule_any_type42));;
}



inline void _1d21850a2_checkLabel(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05eb8b1_LabelSt> _114134_l) {
	if ((_1d217e5da_findLabel(_self_.ptr(), _114134_l.get()._field_Ident) != nullptr)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _114134_l.get()._field_Token, jule::Str("label is already exist in this identifier: @", 44), jule::Slice<jule::Any>::make({jule::Any(_114134_l.get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1d2176d52_Label> _114717_label = jule::new_ptr<_1d2176d52_Label>(_1d2176d52_Label{._field_Ident=_114134_l.get()._field_Ident});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_114717_label, &__jule_any_type21));;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1d2179ea9_scopeLabel>>::make({jule::new_ptr<_1d2179ea9_scopeLabel>(_1d2179ea9_scopeLabel{._field_token=_114134_l.get()._field_Token, ._field_label=_114717_label, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL)), ._field_scope=_self_, })}));
}



inline void _1d2185327_pushGoto(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ebc68_GotoSt> _116032_gt) {
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d217713d_GotoSt>(_1d217713d_GotoSt{._field_Ident=_116032_gt.get()._field_Label.get()._field_Kind}), &__jule_any_type43));;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1d217a42c_scopeGoto>>::make({jule::new_ptr<_1d217a42c_scopeGoto>(_1d217a42c_scopeGoto{._field_gt=_116032_gt, ._field_scope=_self_, ._field_pos=static_cast<jule::I64>((_self_.get()._field_scope.get()._field_Stmts.len() - 1LL))})}));
}



inline void _1d218559c_checkPostfix(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ecb9d_AssignSt> _117236_a) {
	if ((_117236_a.get()._field_Left.len() > 1LL)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d05e36dd_Expr> _117817_expr = _117236_a.get()._field_Left[0LL].get()._field_Expr;;
	jule::Ptr<_1d0408c95_Data> _117917_d = _1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _117817_expr);;
	if ((_117917_d == nullptr)) {
		return;;
	};
	_1d2173898_checkAssign(&(_self_.get()._field_s), &(_117917_d), nullptr, _117236_a.get()._field_Setter);
	if ((_1d21d4a3b_Ptr(_117917_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d21e1361_Ptr> _118721_ptr = _1d21d4a3b_Ptr(_117917_d.get()._field_Kind.ptr());;
		if (_1d21e1d34_IsUnsafe(_118721_ptr.ptr())) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else {
		if (((_1d21d4563_Prim(_117917_d.get()._field_Kind.ptr()) == nullptr) || (!(_1e76e57b7_IsNum(_1d21d4563_Prim(_117917_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _117236_a.get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any(_117236_a.get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str(_117917_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d21774e5_Postfix>(_1d21774e5_Postfix{._field_Expr=_117917_d.get()._field_Model, ._field_Op=_117236_a.get()._field_Setter.get()._field_Kind}), &__jule_any_type44));;
}



inline jule::Bool _1d21858aa_isNewAssignIdent(_1d217b241_scopeChecker* _self_, jule::Str _120535_ident) {
	if ((_22be150b2_IsIgnoreIdent(_120535_ident) || _120535_ident.empty())) {
		return false;;
	};
	return (_1d0407018_defByIdent((*(_self_))._field_table.ptr(), _120535_ident, false) == nullptr);;
}



inline jule::Bool _1d2185d0b_checkStructureAssignOp(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0611bd4_StructIns>* _121247_s, jule::Ptr<_1d05ecb9d_AssignSt>* _121267_a, jule::Ptr<_1d0408c95_Data>* _121286_r) {
	jule::Ptr<_1d0626e6e_FnIns> _121517_overload = nullptr;;
	{
		auto &_match_expr{ (*(_121267_a)).get()._field_Setter.get()._field_Kind };
		
		if (_match_expr == jule::Str("+=", 2)) {
			_case_begin_1b718c899:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == jule::Str("-=", 2)) {
			_case_begin_1b718b425:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == jule::Str("/=", 2)) {
			_case_begin_1b718b865:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == jule::Str("*=", 2)) {
			_case_begin_1b718b8cb:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == jule::Str("%=", 2)) {
			_case_begin_1b718b942:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == jule::Str("<<=", 3)) {
			_case_begin_1b718b9a8:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == jule::Str(">>=", 3)) {
			_case_begin_1b718c910:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == jule::Str("|=", 2)) {
			_case_begin_1b718c976:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == jule::Str("&=", 2)) {
			_case_begin_1b718c9dc:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == jule::Str("^=", 2)) {
			_case_begin_1b718ca53:;
			{
				_121517_overload=(*(_121247_s)).get()._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1b718b7ee:;
			{
				_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1d061208b_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b718b26b:;
	};
	if ((_121517_overload == nullptr)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_121267_a)).get()._field_Setter, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_121267_a)).get()._field_Setter.get()._field_Kind, &__jule_any_type5),jule::Any(_1d061208b_Str((*(_121247_s)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1d06260a0_ParamIns> _124717_p = _121517_overload.get()._field_Params[1LL];;
	return _1d21a5eb3_checkAssignType(_self_.get()._field_s, _124717_p.get()._field_Decl.get()._field_Reference, &(_124717_p.get()._field_Kind), _121286_r, (*(_121267_a)).get()._field_Setter);;
}



inline void _1d2186081_checkSingleAssign(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ecb9d_AssignSt>* _125142_a) {
	jule::Ptr<_1d0408c95_Data> _125217_l = nullptr;;
	if ((!(_22be150b2_IsIgnoreIdent((*(_125142_a)).get()._field_Left[0LL].get()._field_Ident)))) {
		jule::Ptr<_1d05e36dd_Expr> _125521_expr = (*(_125142_a)).get()._field_Left[0LL].get()._field_Expr;;
		_125217_l=_1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _125521_expr);
		if ((_125217_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d040a813_Eval> _126217_eval = nullptr;;
	if ((_125217_l != nullptr)) {
		_126217_eval=_1d21a56aa_evalp(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0), _125217_l.get()._field_Kind);
	} else {
		_126217_eval=_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0));
	};
	_126217_eval.get()._field_unsafety=_1d217d3db_isUnsafe(_self_);
	jule::Ptr<_1d0408c95_Data> _126917_r = _1d01dac53_evalExpr(_126217_eval, (*(_125142_a)).get()._field_Right);;
	if ((_126917_r == nullptr)) {
		return;;
	};
	if ((_125217_l == nullptr)) {
		if (_1d21d3111_Void(_126917_r.get()._field_Kind.ptr())) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_126917_r, &__jule_any_type24));;
		return;;
	};
	if ((!(_1d2173898_checkAssign(&(_self_.get()._field_s), &(_125217_l), _126917_r, (*(_125142_a)).get()._field_Setter)))) {
		return;;
	};
	if ((_1d21d6202_Tup(_126917_r.get()._field_Kind.ptr()) != nullptr)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_125142_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d0615b83_OperandExprModel> _129117_lm = jule::new_ptr<_1d0615b83_OperandExprModel>(_1d0615b83_OperandExprModel{._field_Kind=_125217_l.get()._field_Kind, ._field_Model=_125217_l.get()._field_Model});;
	jule::Ptr<_1d0615b83_OperandExprModel> _129517_rm = jule::new_ptr<_1d0615b83_OperandExprModel>(_1d0615b83_OperandExprModel{._field_Kind=_126917_r.get()._field_Kind, ._field_Model=_126917_r.get()._field_Model});;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d2177968_Assign>(_1d2177968_Assign{._field_L=_129117_lm, ._field_R=_129517_rm, ._field_Op=(*(_125142_a)).get()._field_Setter}), &__jule_any_type45));;
	if ((!(*(_125142_a)).get()._field_Setter.get()._field_Kind.equal("=", 1))) {
		jule::Ptr<_1d0611bd4_StructIns> _130221_strct = _1d21d59b5_Struct(_125217_l.get()._field_Kind.ptr());;
		if ((_130221_strct != nullptr)) {
			_1d2185d0b_checkStructureAssignOp(_self_, &(_130221_strct), _125142_a, &(_126917_r));
			return;;
		};
		(*(_125142_a)).get()._field_Setter.get()._field_Kind=(*(_125142_a)).get()._field_Setter.get()._field_Kind.slice(0LL, ((*(_125142_a)).get()._field_Setter.get()._field_Kind.len() - 1LL));
		_1d062d805_binaryEval _130921_solver = static__1d062e21d_new(_126217_eval, (*(_125142_a)).get()._field_Setter);;
		_126917_r=_1d21ca68b_solveExplicit(&_130921_solver, &(_125217_l), &(_126917_r));
		if ((_126917_r == nullptr)) {
			return;;
		};
		((*(_125142_a)).get()._field_Setter.get()._field_Kind).append("=", 1);
		return;;
	};
	_1d03e45bb_assignTypeChecker _131817_checker = _1d03e45bb_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_125217_l.get()._field_Kind, ._field_d=_126917_r, ._field_errorToken=(*(_125142_a)).get()._field_Setter};;
	if (_1d03e5743_check(&_131817_checker)) {
		_129517_rm.get()._field_Model=_126917_r.get()._field_Model;
		_129117_lm.get()._field_Model=_125217_l.get()._field_Model;
	};
}



inline void _1d21865ae_processEndPartOfMultiAssign(_1d217b241_scopeChecker* _self_, jule::Ptr<_1d2177d20_MultiAssign>* _133051_st, jule::Ptr<_1d05ecb9d_AssignSt>* _133114_a, jule::Ptr<_1d05ec65e_AssignLeft>* _133133_lexpr, jule::Ptr<_1d0408c95_Data>* _133158_l, jule::Ptr<_1d0408c95_Data>* _133173_r) {
	if (((!((*(_133133_lexpr)).get()._field_Reference)) && _22be150b2_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident))) {
		if (_1d21d3111_Void((*(_133173_r)).get()._field_Kind.ptr())) {
			_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_133114_a)).get()._field_Right.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		};
		(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push(nullptr);;
		return;;
	};
	if (((*(_133114_a)).get()._field_Declarative && ((*(_133133_lexpr)).get()._field_Reference || _1d21858aa_isNewAssignIdent(_self_, (*(_133133_lexpr)).get()._field_Ident)))) {
		if (_1d21800ad_isDuplicatedIdent(_self_, 0LLU, (*(_133133_lexpr)).get()._field_Ident)) {
			_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
			_1d219e044_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
			_1d217d82b_stop(_self_);
			return;;
		};
		if (_22be150b2_IsIgnoreIdent((*(_133133_lexpr)).get()._field_Ident)) {
			_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1d21bb65a_Var> _135221_v = jule::new_ptr<_1d21bb65a_Var>(_1d21bb65a_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*(_133133_lexpr)).get()._field_Token, ._field_Ident=(*(_133133_lexpr)).get()._field_Ident, ._field_Mutable=(*(_133133_lexpr)).get()._field_Mutable, ._field_Reference=(*(_133133_lexpr)).get()._field_Reference, ._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Expr=(*(_133114_a)).get()._field_Right, ._field_Data=(*(_133173_r))}), });;
		_1d21b3773_checkVar((*(_self_))._field_s, &(_135221_v));
		_135221_v.get()._field_Value=nullptr;
		(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push(jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_135221_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_135221_v.get()._field_Mutable, ._field_Reference=_135221_v.get()._field_Reference, ._field_Lvalue=(!(_135221_v.get()._field_Constant)), ._field_Model=jule::Any(_135221_v, &__jule_any_type8), }));;
		(*(_self_))._field_table.get()._field_Vars = jule::alloc_for_append((*(_self_))._field_table.get()._field_Vars,1);(*(_self_))._field_table.get()._field_Vars.__push(_135221_v);;
		(*(_self_))._field_scope.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_scope.get()._field_Stmts,1);(*(_self_))._field_scope.get()._field_Stmts.__push(jule::Any(_135221_v, &__jule_any_type8));;
		return;;
	};
	if (((*(_133133_lexpr)).get()._field_Mutable || (*(_133133_lexpr)).get()._field_Reference)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_133133_lexpr)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_133133_lexpr)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if ((!(_1d2173898_checkAssign(&((*(_self_))._field_s), _133158_l, (*(_133173_r)), (*(_133114_a)).get()._field_Setter)))) {
		return;;
	};
	;
	_1d21a8dc8_checkValidityForInitExpr((*(_self_))._field_s, (*(_133158_l)).get()._field_Mutable, false, &((*(_133158_l)).get()._field_Kind), _133173_r, &((*(_133114_a)).get()._field_Setter));
	_1d03e45bb_assignTypeChecker _139517_checker = _1d03e45bb_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_133158_l)).get()._field_Kind, ._field_d=(*(_133173_r)), ._field_errorToken=(*(_133114_a)).get()._field_Setter};;
	_1d03e5743_check(&_139517_checker);
	(*(_133051_st)).get()._field_L = jule::alloc_for_append((*(_133051_st)).get()._field_L,1);(*(_133051_st)).get()._field_L.__push((*(_133158_l)));;
}



inline void _1d2186845_checkMultiAssign(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ecb9d_AssignSt>* _140541_a) {
	jule::Ptr<_1d0408c95_Data> _140617_rd = _1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), (*(_140541_a)).get()._field_Right);;
	if ((_140617_rd == nullptr)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d0408c95_Data>> _141017_right = _1d2172ac8_getDatasFromTupleData(&(_140617_rd));;
	if ((_141017_right.len() == 1LL)) {
		{
			auto &_match_expr{ _141017_right[0LL].get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type46) {
				_case_begin_1b71ac677:;
				{
					jule::Ptr<_1d06187e0_IndexingExprModel> _141425_iem = _141017_right[0LL].get()._field_Model.cast_ptr<_1d06187e0_IndexingExprModel>(&__jule_any_type46);;
					if ((_1d21d5e8d_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
						_141017_right=jule::Slice<jule::Ptr<_1d0408c95_Data>>::make({jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d21d5e8d_Map(_141425_iem.get()._field_Expr.get()._field_Kind.ptr()).get()._field_Val, }),jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, })});
					};
				}
			}
			_match_end_1b71ac622:;
		};
	};
	{
		
		if (((*(_140541_a)).get()._field_Left.len() > _141017_right.len())) {
			_case_begin_1b71ac26a:;
			{
				_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("overflow multi assignment identifers", 36), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*(_140541_a)).get()._field_Left.len() < _141017_right.len())) {
			_case_begin_1b71ac2e2:;
			{
				_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_140541_a)).get()._field_Setter, jule::Str("missing identifier(s) for multiple assignment", 45), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b71ac017:;
	};
	jule::Ptr<_1d2177d20_MultiAssign> _143317_st = jule::new_ptr<_1d2177d20_MultiAssign>(_1d2177d20_MultiAssign{._field_R=_140617_rd.get()._field_Model});;
	{
		auto expr = &((*(_140541_a)).get()._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71b104e:;
		if (it != expr_end) {
			jule::I64 _143613_i = it - expr->begin();
			{
				jule::Ptr<_1d05ec65e_AssignLeft> _143721_lexpr = (*(_140541_a)).get()._field_Left[_143613_i];;
				jule::Ptr<_1d0408c95_Data> _143821_l = nullptr;;
				if (((!(_22be150b2_IsIgnoreIdent(_143721_lexpr.get()._field_Ident))) && ((!((*(_140541_a)).get()._field_Declarative)) || (!(_1d21858aa_isNewAssignIdent(_self_.ptr(), _143721_lexpr.get()._field_Ident)))))) {
					_143821_l=_1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _143721_lexpr.get()._field_Expr);
					if ((_143821_l == nullptr)) {
						goto _iter_next_1b71b104e;
					};
				};
				jule::Ptr<_1d0408c95_Data> _144621_r = _141017_right[_143613_i];;
				_1d21865ae_processEndPartOfMultiAssign(_self_.ptr(), &(_143317_st), _140541_a, &(_143721_lexpr), &(_143821_l), &(_144621_r));
			}
			_iter_next_1b71b104e:;
			++it;
			_143613_i++;
			goto _iter_begin_1b71b104e;
		}
		_iter_end_1b71b104e:;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_143317_st, &__jule_any_type47));;
}



inline void _1d2186aba_checkAssignSt(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ecb9d_AssignSt> _145237_a) {
	{
		
		if (_22be1715d_IsPostfixOp(_145237_a.get()._field_Setter.get()._field_Kind)) {
			_case_begin_1b71b4eed:;
			{
				_1d218559c_checkPostfix(_self_, _145237_a);
			}
		}
		else if (((_145237_a.get()._field_Left.len() == 1LL) && (!(_145237_a.get()._field_Declarative)))) {
			_case_begin_1b71b53c7:;
			{
				_1d2186081_checkSingleAssign(_self_, &(_145237_a));
			}
		}
		else {
			_case_begin_1b71b169d:;
			{
				_1d2186845_checkMultiAssign(_self_, &(_145237_a));
			}
		}
		_match_end_1b71b15d2:;
	};
}



inline jule::Ptr<_1d2174613_Scope> _1d2186e72_checkCaseScope(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d2178e75_Case>* _146335_c, jule::Ptr<_1d05ee199_ScopeTree>* _146350_tree) {
	jule::Ptr<_1d217b241_scopeChecker> _146417_ssc = _1d218b3e9_newChildChecker(_self_);;
	_146417_ssc.get()._field_cse=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_146335_c))));
	return _1d218108c_checkChildSc(_self_, _146350_tree, &(_146417_ssc));;
}



inline jule::Ptr<_1d2178e75_Case> _1d218746c_checkCase(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d217842a_Match> _146933_m, jule::I64 _146944_i, jule::Ptr<_1d0605953_Case> _146956_c, jule::Ptr<_1d0408c95_Data> _146975_expr) {
	jule::Ptr<_1d2178e75_Case> _147017_case = _146933_m.get()._field_Cases[_146944_i];;
	_147017_case.get()._field_Exprs=jule::Slice<jule::Ptr<_1d0408c95_Data>>::alloc(0LL, _146956_c.get()._field_Exprs.len());
	jule::Bool _147217_constMatched = false;;
	jule::Ptr<_1d040a813_Eval> _147317_eval = _1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0));;
	{
		auto expr = &(_146956_c.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71b95c9:;
		if (it != expr_end) {
			jule::Ptr<_1d05e36dd_Expr> _147421_e = *it;
			{
				jule::Ptr<_1d0408c95_Data> _147521_d = _1d0426598_evalExprKind(_147317_eval, _147421_e.get()._field_Kind);;
				if ((_147521_d == nullptr)) {
					goto _iter_next_1b71b95c9;
				};
				if (_146933_m.get()._field_TypeMatch) {
					_147017_case.get()._field_Exprs = jule::alloc_for_append(_147017_case.get()._field_Exprs,1);_147017_case.get()._field_Exprs.__push(_147521_d);;
					if ((_1d2172831_countMatchType(&(_146933_m), &(_147521_d.get()._field_Kind)) > 1LL)) {
						_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("duplicated pattern: type @ is already matched", 45), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_147521_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
					if (_146975_expr.get()._field_Kind.get()._field_Generic) {
						_147217_constMatched=(_147217_constMatched || _1d21d2550_Equal(_146975_expr.get()._field_Kind, _147521_d.get()._field_Kind));
					} else {
						if ((_1d21d5014_TypeEnum(_146975_expr.get()._field_Kind.ptr()) != nullptr)) {
							_1d21a6414_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
						} else {
							jule::Ptr<_1d21494c8_Trait> _149029_trt = _1d21d5c29_Trait(_146975_expr.get()._field_Kind.ptr());;
							if ((_149029_trt != nullptr)) {
								_1d21a6414_checkTypeCompatibility(_self_.get()._field_s, &(_146975_expr.get()._field_Kind), &(_147521_d.get()._field_Kind), &(_147421_e.get()._field_Token));
							};
						};
					};
					goto _iter_next_1b71b95c9;
				} else if (_146933_m.get()._field_Comptime) {
					if ((!(_1d0409658_IsConst(_147521_d.ptr())))) {
						_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("const-matching requires constant expression", 43), jule::Slice<jule::Any>());
					} else {
						_147217_constMatched=(_147217_constMatched || _1e76e7a94_ReadBool(_147521_d.get()._field_Constant.ptr()));
					};
				};
				if (_147521_d.get()._field_Decl) {
					_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _147421_e.get()._field_Token, jule::Str("expecting expression, found type declaration", 44), jule::Slice<jule::Any>());
					_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("you can use type-match if you want to match types", 49), jule::Slice<jule::Any>());
					goto _iter_next_1b71b95c9;
				};
				_147017_case.get()._field_Exprs = jule::alloc_for_append(_147017_case.get()._field_Exprs,1);_147017_case.get()._field_Exprs.__push(_147521_d);;
				_1d03e45bb_assignTypeChecker _151321_checker = _1d03e45bb_assignTypeChecker{._field_s=_self_.get()._field_s, ._field_dest=_146975_expr.get()._field_Kind, ._field_d=_147521_d, ._field_errorToken=_147421_e.get()._field_Token};;
				_1d03e5743_check(&_151321_checker);
			}
			_iter_next_1b71b95c9:;
			++it;
			goto _iter_begin_1b71b95c9;
		}
		_iter_end_1b71b95c9:;
	};
	if (((!(_146933_m.get()._field_Comptime)) || _147217_constMatched)) {
		_147017_case.get()._field_Scope=_1d2186e72_checkCaseScope(_self_, &(_147017_case), &(_146956_c.get()._field_Scope));
	};
	return _147017_case;;
}



inline void _1d2187835_checkCases(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0606129_MatchCase>* _152735_m, jule::Ptr<_1d217842a_Match> _152754_rm, jule::Ptr<_1d0408c95_Data> _152770_expr) {
	_152754_rm.get()._field_Cases=jule::Slice<jule::Ptr<_1d2178e75_Case>>::alloc(0LL, (*(_152735_m)).get()._field_Cases.len());
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71c3c43:;
		if (it != expr_end) {
			jule::I64 _152913_i = it - expr->begin();
			{
				jule::Ptr<_1d2178e75_Case> _153021_case = jule::new_ptr<_1d2178e75_Case>(_1d2178e75_Case{._field_Owner=_152754_rm, });;
				if ((_152913_i > 0LL)) {
					_152754_rm.get()._field_Cases[(_152913_i - 1LL)].get()._field_Next=_153021_case;
				};
				_152754_rm.get()._field_Cases = jule::alloc_for_append(_152754_rm.get()._field_Cases,1);_152754_rm.get()._field_Cases.__push(_153021_case);;
			}
			_iter_next_1b71c3c43:;
			++it;
			_152913_i++;
			goto _iter_begin_1b71c3c43;
		}
		_iter_end_1b71c3c43:;
	};
	if (((_152754_rm.get()._field_Default != nullptr) && ((*(_152735_m)).get()._field_Cases.len() > 0LL))) {
		_152754_rm.get()._field_Cases[(_152754_rm.get()._field_Cases.len() - 1LL)].get()._field_Next=_152754_rm.get()._field_Default;
	};
	{
		auto expr = &((*(_152735_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71c66b3:;
		if (it != expr_end) {
			jule::I64 _154314_i = it - expr->begin();
			jule::Ptr<_1d0605953_Case> _154321_c = *it;
			{
				_1d218746c_checkCase(_self_, _152754_rm, _154314_i, _154321_c, _152770_expr);
			}
			_iter_next_1b71c66b3:;
			++it;
			_154314_i++;
			goto _iter_begin_1b71c66b3;
		}
		_iter_end_1b71c66b3:;
	};
}



inline jule::Ptr<_1d2178e75_Case> _1d2187bdc_checkDefault(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d217842a_Match> _154836_m, jule::Ptr<_1d0604886_Else> _154851_d) {
	jule::Ptr<_1d2178e75_Case> _154917_def = jule::new_ptr<_1d2178e75_Case>(_1d2178e75_Case{._field_Owner=_154836_m, });;
	_154917_def.get()._field_Scope=_1d2186e72_checkCaseScope(_self_, &(_154917_def), &(_154851_d.get()._field_Scope));
	return _154917_def;;
}



inline void _1d218800b_checkComptimePanic(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_22be1281d_Token> _155638_callToken, jule::Ptr<_1d2174613_Scope>* _155658_s) {
	if (((*(_155658_s)).get()._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _156113_stmt = (*(_155658_s)).get()._field_Stmts[0LL];;
	{
		auto &_match_expr{ _156113_stmt };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b71c97c6:;
			{
				jule::Ptr<_1d0408c95_Data> _156417_d = _156113_stmt.cast_ptr<_1d0408c95_Data>(&__jule_any_type24);;
				{
					auto &_match_expr{ _156417_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type30) {
						_case_begin_1b71ca62e:;
						{
							jule::Ptr<_1d061d097_BuiltinPanicCallExprModel> _156721_m = _156417_d.get()._field_Model.cast_ptr<_1d061d097_BuiltinPanicCallExprModel>(&__jule_any_type30);;
							{
								auto &_match_expr{ _156721_m.get()._field_Expr };
								
								if (_match_expr.type == &__jule_any_type19) {
									_case_begin_1b71cb5b9:;
									{
										jule::Ptr<_1e76e5cc3_Const> _157025_c = _156721_m.get()._field_Expr.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
										if (_1e76ea1a1_IsStr(_157025_c.ptr())) {
											if ((_155638_callToken == nullptr)) {
												jule::Ptr<_1d217b241_scopeChecker> _157337_root = _1d217e2cc_getHardRoot(_self_);;
												_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _157337_root.get()._field_calledFrom, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1e76e7d08_ReadStr(_157025_c.ptr()), &__jule_any_type5)}));
											} else {
												_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _155638_callToken, jule::Str("compile-time panic: @", 21), jule::Slice<jule::Any>::make({jule::Any(_1e76e7d08_ReadStr(_157025_c.ptr()), &__jule_any_type5)}));
											};
											_1d217d82b_stop(_self_.ptr());
										};
									}
								}
								_match_end_1b71cb3aa:;
							};
						}
					}
					_match_end_1b71ca233:;
				};
			}
		}
		_match_end_1b71c9760:;
	};
}



inline void _1d218832a_processConstMatch(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d217842a_Match> _158541_tm, jule::Ptr<_1d0606129_MatchCase>* _158558_m) {
	{
		auto expr = &(_158541_tm.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71c9d04:;
		if (it != expr_end) {
			jule::I64 _158614_i = it - expr->begin();
			jule::Ptr<_1d2178e75_Case> _158621_c = *it;
			{
				if ((_158621_c.get()._field_Scope != nullptr)) {
					jule::Ptr<_22be1281d_Token> _158825_token = nullptr;;
					if ((!(_158541_tm.get()._field_TypeMatch))) {
						_158825_token=(*(_158558_m)).get()._field_Cases[_158614_i].get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
					};
					_1d218800b_checkComptimePanic(_self_, _158825_token, &(_158621_c.get()._field_Scope));
					_158541_tm.get()._field_Default=_158621_c;
					_158541_tm.get()._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1b71c9d04:;
			++it;
			_158614_i++;
			goto _iter_begin_1b71c9d04;
		}
		_iter_end_1b71c9d04:;
	};
	if (((*(_158558_m)).get()._field_Default != nullptr)) {
		_158541_tm.get()._field_Cases=nullptr;
		_158541_tm.get()._field_Default=_1d2187bdc_checkDefault(_self_, _158541_tm, (*(_158558_m)).get()._field_Default);
		if ((_158541_tm.get()._field_Default != nullptr)) {
			jule::Ptr<_22be1281d_Token> _160225_token = nullptr;;
			if ((!(_158541_tm.get()._field_TypeMatch))) {
				_160225_token=(*(_158558_m)).get()._field_Default.get()._field_Scope.get()._field_Stmts[0LL]._field_Token;
			};
			_1d218800b_checkComptimePanic(_self_, _160225_token, &(_158541_tm.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1d21885a0_checkTypeMatch(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0606129_MatchCase>* _161139_m) {
	jule::Ptr<_1d0408c95_Data> _161217_d = _1d0426bb4_eval(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), (*(_161139_m)).get()._field_Expr);;
	if ((_161217_d == nullptr)) {
		return;;
	};
	if (((!(_161217_d.get()._field_Kind.get()._field_Generic)) && (!(((((_1d21d4563_Prim(_161217_d.get()._field_Kind.ptr()) != nullptr) && _1d21dca11_IsAny(_1d21d4563_Prim(_161217_d.get()._field_Kind.ptr()).ptr())) || (_1d21d5c29_Trait(_161217_d.get()._field_Kind.ptr()) != nullptr)) || (_1d21d5014_TypeEnum(_161217_d.get()._field_Kind.ptr()) != nullptr)))))) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_161139_m)).get()._field_Expr.get()._field_Token, jule::Str("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d217842a_Match> _162317_tm = jule::new_ptr<_1d217842a_Match>(_1d217842a_Match{._field_Expr=_161217_d, ._field_TypeMatch=true, });;
	_162317_tm.get()._field_Comptime=_162317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic;
	if (((!(_162317_tm.get()._field_Expr.get()._field_Kind.get()._field_Generic)) && ((*(_161139_m)).get()._field_Default != nullptr))) {
		_162317_tm.get()._field_Default=_1d2187bdc_checkDefault(_self_, _162317_tm, (*(_161139_m)).get()._field_Default);
	};
	_1d2187835_checkCases(_self_, _161139_m, _162317_tm, _161217_d);
	if (_162317_tm.get()._field_Comptime) {
		_1d218832a_processConstMatch(_self_, _162317_tm, _161139_m);
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_162317_tm, &__jule_any_type48));;
}



inline void _1d2188825_checkCommonMatch(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0606129_MatchCase>* _163841_m) {
	jule::Ptr<_1d0408c95_Data> _163917_d = nullptr;;
	if (((*(_163841_m)).get()._field_Expr == nullptr)) {
		_163917_d=jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Constant=static__1e76e6785_NewBool(true)});
		_163917_d.get()._field_Model=jule::Any(_163917_d.get()._field_Constant, &__jule_any_type19);
	} else {
		_163917_d=_1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), (*(_163841_m)).get()._field_Expr);
		if ((_163917_d == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1d217842a_Match> _165317_mc = jule::new_ptr<_1d217842a_Match>(_1d217842a_Match{._field_Expr=_163917_d, ._field_Comptime=(((((*(_163841_m)).get()._field_Expr != nullptr) && _1d0409658_IsConst(_163917_d.ptr())) && _1e76e9e3c_IsBool(_163917_d.get()._field_Constant.ptr())) && _1e76e7a94_ReadBool(_163917_d.get()._field_Constant.ptr())), });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_165317_mc, &__jule_any_type48));;
	if (((*(_163841_m)).get()._field_Default != nullptr)) {
		_165317_mc.get()._field_Default=_1d2187bdc_checkDefault(_self_, _165317_mc, (*(_163841_m)).get()._field_Default);
	};
	_1d2187835_checkCases(_self_, _163841_m, _165317_mc, _163917_d);
	if (_165317_mc.get()._field_Comptime) {
		_1d218832a_processConstMatch(_self_, _165317_mc, _163841_m);
	};
}



inline void _1d2188a9a_checkMatch(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0606129_MatchCase> _167134_m) {
	if (_167134_m.get()._field_TypeMatch) {
		_1d21885a0_checkTypeMatch(_self_, &(_167134_m));
		return;;
	};
	_1d2188825_checkCommonMatch(_self_, &(_167134_m));
}



inline void _1d2188d20_checkFall(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ec054_FallSt> _167929_f) {
	if ((((_self_.get()._field_cse == 0LLU) || ((_self_.get()._field_scope.get()._field_Stmts.len() + 1LL) < _self_.get()._field_scope.get()._field_Stmts.len())) || _1d217dd04_isDeferred(_self_))) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _167929_f.get()._field_Token, jule::Str("fall keyword can only useable at end of the case scopes", 55), jule::Slice<jule::Any>());
		return;;
	};
	_1d2178e75_Case* _168717_case = ((_1d2178e75_Case*)(_self_.get()._field_cse));;
	if (_168717_case->_field_Owner.get()._field_Comptime) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _167929_f.get()._field_Token, jule::Str("the fall statement is not allowed for comptime-matching", 55), jule::Slice<jule::Any>());
		return;;
	} else if ((_168717_case->_field_Next == nullptr)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _167929_f.get()._field_Token, jule::Str("fall cannot useable at final case", 33), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("remove \"fall\" keyword", 21), jule::Slice<jule::Any>());
		return;;
	};
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(jule::new_ptr<_1d217952a_FallSt>(_1d217952a_FallSt{._field_DestCase=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_168717_case->_field_Next))}), &__jule_any_type49));;
}



inline jule::Ptr<_1d2176a66_BreakSt> _1d218912d_checkBreakWithLabel(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0603ba4_BreakSt> _170239_b) {
	jule::Ptr<_1d2176a66_BreakSt> _170317_brk = _1d218943b_checkPlainBreak(_self_, _170239_b);;
	if ((_170317_brk == nullptr)) {
		return nullptr;;
	};
	_170317_brk.get()._field_It=0LLU;
	_170317_brk.get()._field_Mtch=0LLU;
	jule::Ptr<_1d2179ea9_scopeLabel> _171317_label = _1d2171d19_findLabelParent(_170239_b.get()._field_Label.get()._field_Kind, _self_.get()._field_parent);;
	if ((_171317_label == nullptr)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_171317_label.get()._field_used=true;
	if (((_171317_label.get()._field_pos + 1LL) >= _171317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::I64 _172613_i = (_171317_label.get()._field_pos + 1LL);;
	if ((_172613_i >= _171317_label.get()._field_scope.get()._field_scope.get()._field_Stmts.len())) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
	} else {
		jule::Any _173021_st = _171317_label.get()._field_scope.get()._field_scope.get()._field_Stmts[_172613_i];;
		{
			auto &_match_expr{ _173021_st };
			
			if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1b71ee5dc:;
				{
					_170317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_1d217545a_InfIter>(&__jule_any_type37)));
				}
			}
			else if (_match_expr.type == &__jule_any_type41) {
				_case_begin_1b71eed29:;
				{
					_170317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_1d21762b3_RangeIter>(&__jule_any_type41)));
				}
			}
			else if (_match_expr.type == &__jule_any_type39) {
				_case_begin_1b71eed90:;
				{
					_170317_brk.get()._field_It=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_1d21758cd_WhileIter>(&__jule_any_type39)));
				}
			}
			else if (_match_expr.type == &__jule_any_type48) {
				_case_begin_1b71eee17:;
				{
					_170317_brk.get()._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_173021_st.cast_ptr<_1d217842a_Match>(&__jule_any_type48)));
				}
			}
			else {
				_case_begin_1b71eeb81:;
				{
					_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				}
			}
			_match_end_1b71eeb2b:;
		};
	};
	if ((_170317_brk.get()._field_It != 0LLU)) {
		if ((!(_1d2184799_checkValidBreakLabel(_self_, _170317_brk.get()._field_It)))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	if ((_170317_brk.get()._field_Mtch != 0LLU)) {
		if ((!(_1d2184799_checkValidBreakLabel(_self_, _170317_brk.get()._field_Mtch)))) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _170239_b.get()._field_Label, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any(_170239_b.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
		};
	};
	return _170317_brk;;
}



inline jule::Ptr<_1d2176a66_BreakSt> _1d218943b_checkPlainBreak(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0603ba4_BreakSt> _176035_b) {
	if (_1d217dd04_isDeferred(_self_)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _176035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d217b241_scopeChecker> _176617_scope = _self_;;
	_julec_label_iter:;
	{
		
		if (((((_176617_scope.get()._field_it == 0LLU) && (_176617_scope.get()._field_cse == 0LLU)) && (_176617_scope.get()._field_parent != nullptr)) && (_176617_scope.get()._field_owner == nullptr))) {
			_case_begin_1b7205a11:;
			{
				_176617_scope=_176617_scope.get()._field_parent;
				goto _julec_label_iter;
			}
		}
		else if ((_176617_scope.get()._field_it != 0LLU)) {
			_case_begin_1b7205a88:;
			{
				return jule::new_ptr<_1d2176a66_BreakSt>(_1d2176a66_BreakSt{._field_It=_176617_scope.get()._field_it, });;
			}
		}
		else if ((_176617_scope.get()._field_cse != 0LLU)) {
			_case_begin_1b7205b10:;
			{
				return jule::new_ptr<_1d2176a66_BreakSt>(_1d2176a66_BreakSt{._field_Mtch=static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(((_1d2178e75_Case*)(_176617_scope.get()._field_cse))->_field_Owner))});;
			}
		}
		_match_end_1b7205945:;
	};
	_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _176035_b.get()._field_Token, jule::Str("break keyword is cannot used at out of iteration and match cases", 64), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1d21896b1_checkBreak(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0603ba4_BreakSt> _178230_b) {
	if ((_178230_b.get()._field_Label != nullptr)) {
		jule::Ptr<_1d2176a66_BreakSt> _178421_brk = _1d218912d_checkBreakWithLabel(_self_, _178230_b);;
		_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_178421_brk, &__jule_any_type50));;
		return;;
	};
	jule::Ptr<_1d2176a66_BreakSt> _178917_brk = _1d218943b_checkPlainBreak(_self_, _178230_b);;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_178917_brk, &__jule_any_type50));;
}



inline void _1d2189936_checkRet(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d0602026_RetSt> _179332_r) {
	if (_1d217dd04_isDeferred(_self_)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _179332_r.get()._field_Token, jule::Str("deferred scopes are not supports return statements", 50), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d217989e_RetSt> _179817_rt = jule::new_ptr<_1d217989e_RetSt>(_1d217989e_RetSt{._field_Func=_1d217e068_getRoot(_self_).get()._field_owner, });;
	_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_179817_rt, &__jule_any_type51));;
	jule::Ptr<_1d0402453_retTypeChecker> _180317_rtc = jule::new_ptr<_1d0402453_retTypeChecker>(_1d0402453_retTypeChecker{._field_sc=_self_, ._field_f=_179817_rt.get()._field_Func, ._field_errorToken=_179332_r.get()._field_Token, });;
	jule::Bool _180813_ok = _1d0403157_check(_180317_rtc.ptr(), &(_179332_r.get()._field_Expr));;
	if ((!(_180813_ok))) {
		return;;
	};
	if ((_179332_r.get()._field_Expr != nullptr)) {
		_179817_rt.get()._field_Expr=_180317_rtc.get()._field_model;
	};
}



inline void _1d2189bab_checkUseExpr(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05e407e_UseExpr> _181832_ue) {
	if ((_self_.get()._field_result == nullptr)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _181832_ue.get()._field_Token, jule::Str("use expressions cannot useable out of exceptional handler scopes", 64), jule::Slice<jule::Any>());
		return;;
	};
	if (_1d217dd04_isDeferred(_self_)) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _181832_ue.get()._field_Token, jule::Str("use expressions cannot useable in deferred scopes", 49), jule::Slice<jule::Any>());
	};
	if (((_self_.get()._field_i + 1LL) < _self_.get()._field_tree.get()._field_Stmts.len())) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _181832_ue.get()._field_Token, jule::Str("use expressions must be last statement of scope", 47), jule::Slice<jule::Any>());
	};
}



inline void _1d2189e31_checkNode(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Any* _183434_node) {
	{
		auto &_match_expr{ (*(_183434_node)) };
		
		if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1b7212699:;
			{
				_1d2181620_checkAnonScope(_self_, (*(_183434_node)).cast_ptr<_1d05ee199_ScopeTree>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b7211e7e:;
			{
				_1d2180333_checkVarDecl(_self_, (*(_183434_node)).cast_ptr<_1d0601b6e_VarDecl>(&__jule_any_type16));
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1b7212556:;
			{
				_1d21805a8_checkTypeAliasDecl(_self_, (*(_183434_node)).cast_ptr<_1d06054d0_TypeAliasDecl>(&__jule_any_type12));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b721237a:;
			{
				_1d2181bb4_checkExpr(_self_, (*(_183434_node)).cast_ptr<_1d05e36dd_Expr>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1b7212787:;
			{
				_1d2182555_checkConditional(_self_, (*(_183434_node)).cast_ptr<_1d0604d09_Conditional>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1b72127ed:;
			{
				_1d218417d_checkIter(_self_, (*(_183434_node)).cast_ptr<_1d0602686_Iter>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1b7212864:;
			{
				_1d2184d2c_checkCont(_self_, (*(_183434_node)).cast_ptr<_1d060405b_ContSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1b72128ca:;
			{
				_1d21850a2_checkLabel(_self_, (*(_183434_node)).cast_ptr<_1d05eb8b1_LabelSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1b7212941:;
			{
				_1d2185327_pushGoto(_self_, (*(_183434_node)).cast_ptr<_1d05ebc68_GotoSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b72129a7:;
			{
				_1d2186aba_checkAssignSt(_self_, (*(_183434_node)).cast_ptr<_1d05ecb9d_AssignSt>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1b7212a1d:;
			{
				_1d2188a9a_checkMatch(_self_, (*(_183434_node)).cast_ptr<_1d0606129_MatchCase>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1b7212a84:;
			{
				_1d2188d20_checkFall(_self_, (*(_183434_node)).cast_ptr<_1d05ec054_FallSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1b7212aea:;
			{
				_1d21896b1_checkBreak(_self_, (*(_183434_node)).cast_ptr<_1d0603ba4_BreakSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1b7212b72:;
			{
				_1d2189936_checkRet(_self_, (*(_183434_node)).cast_ptr<_1d0602026_RetSt>(&__jule_any_type63));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b7212be9:;
			{
				_1d2189bab_checkUseExpr(_self_, (*(_183434_node)).cast_ptr<_1d05e407e_UseExpr>(&__jule_any_type64));
			}
		}
		else {
			_case_begin_1b7212105:;
			{
				jule::outln(jule::Str("error <unimplemented scope node>", 32));
			}
		}
		_match_end_1b7212028:;
	};
}



inline void _1d218a10c_checkResult(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	_1d05eda8e_Stmt _187217_stmt = _self_.get()._field_tree.get()._field_Stmts[(_self_.get()._field_tree.get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _187217_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1b721a4e8:;
			{
				jule::Ptr<_1d05e407e_UseExpr> _187521_ue = _187217_stmt._field_Data.cast_ptr<_1d05e407e_UseExpr>(&__jule_any_type64);;
				jule::Ptr<_1d0408c95_Data> _187621_d = _1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _187521_ue.get()._field_Expr);;
				if ((_187621_d == nullptr)) {
					return;;
				};
				_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_187621_d, &__jule_any_type24));;
				jule::Ptr<_1d0402453_retTypeChecker> _188121_rtc = jule::new_ptr<_1d0402453_retTypeChecker>(_1d0402453_retTypeChecker{._field_sc=_self_, ._field_types=_1d0628091_Types(_self_.get()._field_result.ptr()), ._field_errorToken=_187521_ue.get()._field_Expr.get()._field_Token, });;
				_1d0403157_check(_188121_rtc.ptr(), &(_187521_ue.get()._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b7219cab:;
			{
				jule::Ptr<_1d05e36dd_Expr> _188821_expr = _187217_stmt._field_Data.cast_ptr<_1d05e36dd_Expr>(&__jule_any_type53);;
				jule::Ptr<_1d0408c95_Data> _188921_d = _1d01dac53_evalExpr(_1d21a59b8_eval(_self_.get()._field_s, jule::Trait<_1d2200172_Lookup>(_self_, 0)), _188821_expr);;
				if ((_188921_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ _188921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b721ee15:;
						{
							jule::Ptr<_1d062042e_BuiltinErrorCallExprModel> _189525_m = _188921_d.get()._field_Model.cast_ptr<_1d062042e_BuiltinErrorCallExprModel>(&__jule_any_type23);;
							_1d218193e_processErrorCall(_self_, &(_189525_m), _188821_expr.get()._field_Token);
							_self_.get()._field_scope.get()._field_Stmts = jule::alloc_for_append(_self_.get()._field_scope.get()._field_Stmts,1);_self_.get()._field_scope.get()._field_Stmts.__push(jule::Any(_188921_d, &__jule_any_type24));;
						}
					}
					else {
						_case_begin_1b721e970:;
						{
							return;;
						}
					}
					_match_end_1b721ea5d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type58 || _match_expr.type == &__jule_any_type62 || _match_expr.type == &__jule_any_type56 || _match_expr.type == &__jule_any_type63) {
			_case_begin_1b7219d22:;
			{
				_1d2189e31_checkNode(_self_, &(_187217_stmt._field_Data));
			}
		}
		else {
			_case_begin_1b7219c45:;
			{
				_1d2189e31_checkNode(_self_, &(_187217_stmt._field_Data));
				return;;
			}
		}
		_match_end_1b7219abe:;
	};
	_self_.get()._field_result=nullptr;
}



inline void _1d218a2d8_checkTree(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	_self_.get()._field_i=0LL;
	jule::I64 _191717_n = _self_.get()._field_tree.get()._field_Stmts.len();;
	if ((_self_.get()._field_result != nullptr)) {
		(_191717_n)--;
	};
	for (; (_self_.get()._field_i < _191717_n); (_self_.get()._field_i)++) {
		{
			_1d05eda8e_Stmt _192521_stmt = _self_.get()._field_tree.get()._field_Stmts[_self_.get()._field_i];;
			_1d2189e31_checkNode(_self_, &(_192521_stmt._field_Data));
			if (_1d217da90_stopped(_self_.ptr())) {
				return;;
			};
		}
	_iter_next_1b7222b93:;
	}
	_iter_end_1b7222b93:;;
	if (((_self_.get()._field_result != nullptr) && (_self_.get()._field_tree.get()._field_Stmts.len() != 0LL))) {
		_1d218a10c_checkResult(_self_);
	};
}



inline void _1d218a607_checkGoto(_1d217b241_scopeChecker* _self_, jule::Ptr<_1d217a42c_scopeGoto>* _193633_gt, jule::Ptr<_1d2179ea9_scopeLabel>* _193654_label) {
	jule::Ptr<_1d217b241_scopeChecker> _193717_gtsc = (*(_193633_gt)).get()._field_scope;;
	while (((_193717_gtsc.get()._field_childIndex - 1LL) > (*(_193654_label)).get()._field_scope.get()._field_childIndex)) {
		{
			_193717_gtsc=_193717_gtsc.get()._field_parent;
		}
	_iter_next_1b722558b:;
	}
	_iter_end_1b722558b:;;
	jule::I64 _194217_n = 0LL;;
	if ((_193717_gtsc.get()._field_scope == (*(_193654_label)).get()._field_scope.get()._field_scope)) {
		if (((*(_193633_gt)).get()._field_pos > (*(_193654_label)).get()._field_pos)) {
			return;;
		};
		_194217_n=(*(_193633_gt)).get()._field_pos;
	};
	jule::I64 _195517_i = ((*(_193654_label)).get()._field_pos - 1LL);;
	if ((_194217_n == 0LL)) {
		{
			auto expr = &((*(_193654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7227a22:;
			if (it != expr_end) {
				jule::I64 _195817_j = it - expr->begin();
				jule::Any _195820_stmt = *it;
				{
					if (_1d21724e0_stmtIsGotoScope(&(_195820_stmt), &(_193717_gtsc.get()._field_scope))) {
						_194217_n=_195817_j;
						goto _iter_end_1b7227a22;
					};
				}
				_iter_next_1b7227a22:;
				++it;
				_195817_j++;
				goto _iter_begin_1b7227a22;
			}
			_iter_end_1b7227a22:;
		};
	};
	for (; (_195517_i >= _194217_n); (_195517_i)--) {
		{
			jule::Any _196821_stmt = (*(_193654_label)).get()._field_scope.get()._field_scope.get()._field_Stmts[_195517_i];;
			if (_1d217417e_stmtIsDef(&(_196821_stmt))) {
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_193633_gt)).get()._field_gt.get()._field_Token, jule::Str("goto @ jumps over declaration(s)", 32), jule::Slice<jule::Any>::make({jule::Any((*(_193633_gt)).get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
				return;;
			};
		}
	_iter_next_1b72289bd:;
	}
	_iter_end_1b72289bd:;;
}



inline void _1d218a7d3_checkGotos(_1d217b241_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7227747:;
		if (it != expr_end) {
			jule::Ptr<_1d217a42c_scopeGoto> _197721_gt = *it;
			{
				jule::Ptr<_1d2179ea9_scopeLabel> _197821_label = _1d217ec06_findLabelAll(_self_, _197721_gt.get()._field_gt.get()._field_Label.get()._field_Kind);;
				if ((_197821_label == nullptr)) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _197721_gt.get()._field_gt.get()._field_Token, jule::Str("not exist any label in this identifier: @", 41), jule::Slice<jule::Any>::make({jule::Any(_197721_gt.get()._field_gt.get()._field_Label.get()._field_Kind, &__jule_any_type5)}));
					goto _iter_next_1b7227747;
				};
				_197821_label.get()._field_used=true;
				_1d218a607_checkGoto(_self_, &(_197721_gt), &(_197821_label));
			}
			_iter_next_1b7227747:;
			++it;
			goto _iter_begin_1b7227747;
		}
		_iter_end_1b7227747:;
	};
}



inline void _1d218a9ae_checkLabels(_1d217b241_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b722a690:;
		if (it != expr_end) {
			jule::Ptr<_1d2179ea9_scopeLabel> _199016_l = *it;
			{
				if ((!(_199016_l.get()._field_used))) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _199016_l.get()._field_token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_199016_l.get()._field_label.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b722a690:;
			++it;
			goto _iter_begin_1b722a690;
		}
		_iter_end_1b722a690:;
	};
}



inline void _1d218ab8a_checkVars(_1d217b241_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b722cb37:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _199816_v = *it;
			{
				if (((((!(_199816_v.get()._field_Used)) && (!(_199816_v.get()._field_Constant))) && (!(_22be150b2_IsIgnoreIdent(_199816_v.get()._field_Ident)))) && (!(_22be15359_IsAnonIdent(_199816_v.get()._field_Ident))))) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _199816_v.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_199816_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b722cb37:;
			++it;
			goto _iter_begin_1b722cb37;
		}
		_iter_end_1b722cb37:;
	};
}



inline void _1d218ad66_checkAliases(_1d217b241_scopeChecker* _self_) {
	{
		auto expr = &((*(_self_))._field_table.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7230860:;
		if (it != expr_end) {
			jule::Ptr<_1d21d10ed_TypeAlias> _200616_a = *it;
			{
				if ((((!(_200616_a.get()._field_Used)) && (!(_22be150b2_IsIgnoreIdent(_200616_a.get()._field_Ident)))) && (!(_22be15359_IsAnonIdent(_200616_a.get()._field_Ident))))) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _200616_a.get()._field_Token, jule::Str("@ declared but not used", 23), jule::Slice<jule::Any>::make({jule::Any(_200616_a.get()._field_Ident, &__jule_any_type5)}));
				};
			}
			_iter_next_1b7230860:;
			++it;
			goto _iter_begin_1b7230860;
		}
		_iter_end_1b7230860:;
	};
}



inline void _1d218b185_check(jule::Ptr<_1d217b241_scopeChecker> _self_, jule::Ptr<_1d05ee199_ScopeTree>* _201430_tree, jule::Ptr<_1d2174613_Scope>* _201453_s) {
	(*(_201453_s)).get()._field_Deferred=(*(_201430_tree)).get()._field_Deferred;
	(*(_201453_s)).get()._field_Unsafety=(*(_201430_tree)).get()._field_Unsafety;
	jule::I64 _201813_errors = _self_.get()._field_s.get()._field_errors.len();;
	_self_.get()._field_tree=(*(_201430_tree));
	_self_.get()._field_scope=(*(_201453_s));
	_1d218a2d8_checkTree(_self_);
	if ((_201813_errors == _self_.get()._field_s.get()._field_errors.len())) {
		_1d218ab8a_checkVars(_self_.ptr());
		_1d218ad66_checkAliases(_self_.ptr());
		if (_1d217d650_isRoot(_self_.ptr())) {
			_1d218a7d3_checkGotos(_self_.ptr());
			_1d218a9ae_checkLabels(_self_.ptr());
		};
	};
}



inline jule::Ptr<_1d217b241_scopeChecker> _1d218b3e9_newChildChecker(jule::Ptr<_1d217b241_scopeChecker> _self_) {
	jule::Ptr<_1d217b241_scopeChecker> _203817_base = _1d2171643_newScopeCheckerBase(&(_self_.get()._field_s), nullptr);;
	_203817_base.get()._field_parent=_self_;
	_203817_base.get()._field_labels=_self_.get()._field_labels;
	_203817_base.get()._field_gotos=_self_.get()._field_gotos;
	_203817_base.get()._field_childIndex=static_cast<jule::I64>((_self_.get()._field_childIndex + 1LL));
	return _203817_base;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d217b241_scopeChecker _Src) {
	_Stream << "scopeChecker{";
	_Stream << "calledFrom:" << _Src._field_calledFrom << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "childIndex:" << _Src._field_childIndex << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline void _1d218c3d9_checkCdef(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _1629_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b7236459:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1d06242bd_Fn>(&__jule_any_type65).get()._field_Binded) {
					goto _match_end_1b723668a;
				};
				goto _case_begin_1b72366e0;
			}
		}
		else {
			_case_begin_1b72366e0:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_1629_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b723668a:;
	};
	if (((*(_1629_d)).get()._field_Args.len() > 0LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_1629_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d218c65e_checkTypedef(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _3232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b723889b:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66).get()._field_Binded) {
					goto _match_end_1b7238abb;
				};
				goto _case_begin_1b7238b21;
			}
		}
		else {
			_case_begin_1b7238b21:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_3232_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b7238abb:;
	};
	if (((*(_3232_d)).get()._field_Args.len() > 0LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_3232_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d218c8d4_checkDerive(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _4831_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b723ad10:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66).get()._field_Binded))) {
					goto _match_end_1b723b030;
				};
				goto _case_begin_1b723b085;
			}
		}
		else {
			_case_begin_1b723b085:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b723b030:;
	};
	if (((*(_4831_d)).get()._field_Args.len() == 0LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_4831_d)).get()._field_Args.len() > 1LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("derive", 6), &__jule_any_type5)}));
	};
	{
		auto &_match_expr{ (*(_4831_d)).get()._field_Args[0LL].get()._field_Kind };
		
		if (_match_expr == jule::Str("Clone", 5)) {
			_case_begin_1b723e4a6:;
		}
		else {
			_case_begin_1b723b926:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_4831_d)).get()._field_Args[0LL], jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_4831_d)).get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b723e0dd:;
	};
}



inline void _1d218cb59_checkNamespace(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _7438_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b72407c6:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66).get()._field_Binded))) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b724083c:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1d06242bd_Fn>(&__jule_any_type65).get()._field_Binded))) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b72408a3:;
			{
				if ((!((*(_self_))._field_o.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8).get()._field_Binded))) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b72406e9:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b7240694:;
	};
	if (((*(_7438_d)).get()._field_Args.len() == 0LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_7438_d)).get()._field_Args.len() > 1LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_7438_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_7438_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_22be1281d_Token> _9913_arg = (*(_7438_d)).get()._field_Args[0LL];;
	if ((_9913_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_9913_arg.get()._field_Kind[0LL] != '\"')) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _9913_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_7438_d)).get()._field_Args[0LL].get()._field_Kind=_9913_arg.get()._field_Kind.slice(1LL, (_9913_arg.get()._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b72482c3:;
			{
				if ((_1d21cad95_findDirective(&((*((*(_self_))._field_d))), jule::Str("typedef", 7)) == nullptr)) {
					jule::Ptr<_1d05aba4c_Directive> _11625_typedef = jule::new_ptr<_1d05aba4c_Directive>(_1d05aba4c_Directive{._field_Tag=(*(_7438_d)).get()._field_Tag, });;
					_11625_typedef.get()._field_Tag.get()._field_Kind=jule::Str("typedef", 7);
					(*((*(_self_))._field_d))=jule::append((*((*(_self_))._field_d)),jule::Slice<jule::Ptr<_1d05aba4c_Directive>>::make({_11625_typedef}));
				};
			}
		}
		_match_end_1b724826d:;
	};
}



inline void _1d218cdce_checkDeprecated(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _12539_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b7249b87:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66).get()._field_Binded) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b724a4d4:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1d06242bd_Fn>(&__jule_any_type65).get()._field_Binded) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b724a54a:;
			{
				if ((*(_self_))._field_o.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8).get()._field_Binded) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
				};
			}
		}
		else {
			_case_begin_1b7249dc9:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b7249d74:;
	};
	if (((*(_12539_d)).get()._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*(_12539_d)).get()._field_Args.len() > 1LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_12539_d)).get()._field_Args[1LL], jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any((*(_12539_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
	};
	jule::Ptr<_22be1281d_Token> _15013_arg = (*(_12539_d)).get()._field_Args[0LL];;
	if ((_15013_arg.get()._field_Id != static_cast<jule::U64>(5LLU))) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	if ((_15013_arg.get()._field_Kind[0LL] != '\"')) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _15013_arg, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	(*(_12539_d)).get()._field_Args[0LL].get()._field_Kind=_15013_arg.get()._field_Kind.slice(1LL, (_15013_arg.get()._field_Kind.len() - 1LL));
}



inline void _1d218d154_checkTest(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _16429_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b72529c5:;
			{
				jule::Ptr<_1d06242bd_Fn> _16717_f = (*(_self_))._field_o.cast_ptr<_1d06242bd_Fn>(&__jule_any_type65);;
				if ((((!(_16717_f.get()._field_Binded)) && (!(_1d0624e6c_IsInit(_16717_f.ptr())))) && (!(_1d0624c08_IsEntryPoint(_16717_f.ptr()))))) {
					goto _match_end_1b7252a6e;
				};
				if (_1d0624994_IsMethod(_16717_f.ptr())) {
					_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _16717_f.get()._field_Token, jule::Str("you cannot declare test methods", 31), jule::Slice<jule::Any>());
					goto _match_end_1b7252a6e;
				};
				goto _case_begin_1b7252ba1;
			}
		}
		else {
			_case_begin_1b7252ba1:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_16429_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b7252a6e:;
	};
	if (((*(_16429_d)).get()._field_Args.len() > 0LL)) {
		_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_16429_d)).get()._field_Args[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d218d3c9_checkDirective(_1d218be99_directiveChecker* _self_, jule::Ptr<_1d05aba4c_Directive>* _18538_d) {
	{
		auto &_match_expr{ (*(_18538_d)).get()._field_Tag.get()._field_Kind };
		
		if (_match_expr == jule::Str("cdef", 4)) {
			_case_begin_1b7256666:;
			{
				_1d218c3d9_checkCdef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("typedef", 7)) {
			_case_begin_1b72566cc:;
			{
				_1d218c65e_checkTypedef(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("derive", 6)) {
			_case_begin_1b7256743:;
			{
				_1d218c8d4_checkDerive(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("namespace", 9)) {
			_case_begin_1b72567a9:;
			{
				_1d218cb59_checkNamespace(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("deprecated", 10)) {
			_case_begin_1b72572e3:;
			{
				_1d218cdce_checkDeprecated(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("test", 4)) {
			_case_begin_1b7257359:;
			{
				_1d218d154_checkTest(_self_, _18538_d);
			}
		}
		else if (_match_expr == jule::Str("build", 5) || _match_expr == jule::Str("pass", 4)) {
			_case_begin_1b72573c0:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("directive @ is not supported by define", 38), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b7256600:;
			{
				_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_18538_d)).get()._field_Tag, jule::Str("invalid label: @", 16), jule::Slice<jule::Any>::make({jule::Any((*(_18538_d)).get()._field_Tag.get()._field_Kind, &__jule_any_type5)}));
			}
		}
		_match_end_1b725659a:;
	};
}



inline void _1d218d5a5_check(_1d218be99_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b725959d:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _20821_d = *it;
			{
				_1d218d3c9_checkDirective(_self_, &(_20821_d));
			}
			_iter_next_1b725959d:;
			++it;
			goto _iter_begin_1b725959d;
		}
		_iter_end_1b725959d:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d218be99_directiveChecker _Src) {
	_Stream << "directiveChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "o:" << _Src._field_o;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d2193588_SelectPackage(_1d219307c_ImportInfo* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1d21bb65a_Var> _1d2193940_FindVar(_1d219307c_ImportInfo* _self_, jule::Str _18926_ident, jule::Bool ) {
	if ((!(_1d2195326_isLookupable(_self_, _18926_ident)))) {
		return nullptr;;
	};
	return _1d2190794_findVarInPackage(&((*(_self_))._field_Package.get()._field_Files), _18926_ident, false);;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d2193ce7_FindTypeAlias(_1d219307c_ImportInfo* _self_, jule::Str _20132_ident, jule::Bool ) {
	if ((!(_1d2195326_isLookupable(_self_, _20132_ident)))) {
		return nullptr;;
	};
	return _1d2190bc3_findTypeAliasInPackage(&((*(_self_))._field_Package.get()._field_Files), _20132_ident, false);;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d219419e_FindStruct(_1d219307c_ImportInfo* _self_, jule::Str _21329_ident, jule::Bool ) {
	if ((!(_1d2195326_isLookupable(_self_, _21329_ident)))) {
		return nullptr;;
	};
	return _1d21910ad_findStructInPackage(&((*(_self_))._field_Package.get()._field_Files), _21329_ident, false);;
}



inline jule::Ptr<_1d06242bd_Fn> _1d2194556_FindFn(_1d219307c_ImportInfo* _self_, jule::Str _22525_ident, jule::Bool ) {
	if ((!(_1d2195326_isLookupable(_self_, _22525_ident)))) {
		return nullptr;;
	};
	return _1d2191520_findFnInPackage(&((*(_self_))._field_Package.get()._field_Files), _22525_ident, false);;
}



inline jule::Ptr<_1d21494c8_Trait> _1d2194864_FindTrait(_1d219307c_ImportInfo* _self_, jule::Str _23628_ident) {
	if ((!(_1d2195326_isLookupable(_self_, _23628_ident)))) {
		return nullptr;;
	};
	return _1d219182d_findTraitInPackage(&((*(_self_))._field_Package.get()._field_Files), _23628_ident);;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d2194b72_FindEnum(_1d219307c_ImportInfo* _self_, jule::Str _24727_ident) {
	if ((!(_1d2195326_isLookupable(_self_, _24727_ident)))) {
		return nullptr;;
	};
	return _1d2191b6e_findEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _24727_ident);;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d2194e80_FindTypeEnum(_1d219307c_ImportInfo* _self_, jule::Str _25831_ident) {
	if ((!(_1d2195326_isLookupable(_self_, _25831_ident)))) {
		return nullptr;;
	};
	return _1d2191eb0_findTypeEnumInPackage(&((*(_self_))._field_Package.get()._field_Files), _25831_ident);;
}



inline jule::Bool _1d2195326_isLookupable(_1d219307c_ImportInfo* _self_, jule::Str _26727_ident) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	if ((!((*(_self_))._field_ImportAll))) {
		if ((((*(_self_))._field_Alias.len() != 0LL) || _1d2195634_existIdent(_self_, jule::Str("self", 4)))) {
			return true;;
		};
		if (((*(_self_))._field_Selected.len() > 0LL)) {
			if ((!(_1d2195634_existIdent(_self_, _26727_ident)))) {
				return false;;
			};
		};
	};
	return true;;
}



inline jule::Bool _1d2195634_existIdent(_1d219307c_ImportInfo* _self_, jule::Str _28725_ident) {
	{
		auto expr = &((*(_self_))._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b726e409:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_28816_sident = it;
			{
				if (((*(_28816_sident)).get()._field_Kind == _28725_ident)) {
					return true;;
				};
			}
			_iter_next_1b726e409:;
			++it;
			goto _iter_begin_1b726e409;
		}
		_iter_end_1b726e409:;
	};
	return false;;
}



inline jule::Bool _1d21958ba_isAccessibleViaSelection(_1d219307c_ImportInfo* _self_) {
	return (((*(_self_))._field_ImportAll || ((*(_self_))._field_Selected.len() == 0LL)) || _1d2195634_existIdent(_self_, jule::Str("self", 4)));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d219307c_ImportInfo _Src) {
	_Stream << "ImportInfo{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Path:" << _Src._field_Path << ", ";
	_Stream << "LinkPath:" << _Src._field_LinkPath << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Alias:" << _Src._field_Alias << ", ";
	_Stream << "Duplicate:" << _Src._field_Duplicate << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Std:" << _Src._field_Std << ", ";
	_Stream << "ImportAll:" << _Src._field_ImportAll << ", ";
	_Stream << "Selected:" << _Src._field_Selected << ", ";
	_Stream << "Package:" << _Src._field_Package << ", ";
	_Stream << "ModId:" << _Src._field_ModId;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d219617e_SelectPackage(_1d2195bb7_Package* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> ) {
	return nullptr;;
}



inline jule::Ptr<_1d21bb65a_Var> _1d2196536_FindVar(_1d2195bb7_Package* _self_, jule::Str _31426_ident, jule::Bool _31438_binded) {
	return _1d2190794_findVarInPackage(&((*(_self_))._field_Files), _31426_ident, _31438_binded);;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d21968dd_FindTypeAlias(_1d2195bb7_Package* _self_, jule::Str _32032_ident, jule::Bool _32044_binded) {
	return _1d2190bc3_findTypeAliasInPackage(&((*(_self_))._field_Files), _32032_ident, _32044_binded);;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d2196c95_FindStruct(_1d2195bb7_Package* _self_, jule::Str _32629_ident, jule::Bool _32641_binded) {
	return _1d21910ad_findStructInPackage(&((*(_self_))._field_Files), _32629_ident, _32641_binded);;
}



inline jule::Ptr<_1d06242bd_Fn> _1d219714c_FindFn(_1d2195bb7_Package* _self_, jule::Str _33225_ident, jule::Bool _33237_binded) {
	return _1d2191520_findFnInPackage(&((*(_self_))._field_Files), _33225_ident, _33237_binded);;
}



inline jule::Ptr<_1d21494c8_Trait> _1d219745a_FindTrait(_1d2195bb7_Package* _self_, jule::Str _33828_ident) {
	return _1d219182d_findTraitInPackage(&((*(_self_))._field_Files), _33828_ident);;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d2197768_FindEnum(_1d2195bb7_Package* _self_, jule::Str _34427_ident) {
	return _1d2191b6e_findEnumInPackage(&((*(_self_))._field_Files), _34427_ident);;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d2197a76_FindTypeEnum(_1d2195bb7_Package* _self_, jule::Str _35031_ident) {
	return _1d2191eb0_findTypeEnumInPackage(&((*(_self_))._field_Files), _35031_ident);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2195bb7_Package _Src) {
	_Stream << "Package{";
	_Stream << "Files:" << _Src._field_Files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d215e257_comptimeTypeInfo> _1d219acbb_pushComptimeTypeInfo(_1d219a837_commonSemaMeta* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _21344_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72948d5:;
		if (it != expr_end) {
			jule::Ptr<_1d215e257_comptimeTypeInfo> _21421_t2 = *it;
			{
				if (((_21421_t2.get()._field_base.get()._field_BindIdent == (*(_21344_t)).get()._field_BindIdent) && _1d21d2550_Equal(_21421_t2.get()._field_base, (*(_21344_t))))) {
					return _21421_t2;;
				};
			}
			_iter_next_1b72948d5:;
			++it;
			goto _iter_begin_1b72948d5;
		}
		_iter_end_1b72948d5:;
	};
	jule::Ptr<_1d215e257_comptimeTypeInfo> _21917_t1 = jule::new_ptr<_1d215e257_comptimeTypeInfo>(_1d215e257_comptimeTypeInfo{._field_base=(*(_21344_t))});;
	(*(_self_))._field_comptimeTypeInfos = jule::alloc_for_append((*(_self_))._field_comptimeTypeInfos,1);(*(_self_))._field_comptimeTypeInfos.__push(_21917_t1);;
	return _21917_t1;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d219a837_commonSemaMeta _Src) {
	_Stream << "commonSemaMeta{";
	_Stream << "comptimeTypeInfos:" << _Src._field_comptimeTypeInfos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d219b7c2_SelectPackage(_1d219b34e_Sema* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _24232_selector) {
	return _1d0404796_SelectPackage((*(_self_))._field_file.ptr(), _24232_selector);;
}



inline jule::Ptr<_1d21bb65a_Var> _1d219bb79_FindVar(_1d219b34e_Sema* _self_, jule::Str _25226_ident, jule::Bool _25238_binded) {
	jule::Ptr<_1d21bb65a_Var> _25417_v = _1d2190794_findVarInPackage(&((*(_self_))._field_files), _25226_ident, _25238_binded);;
	if ((_25417_v != nullptr)) {
		return _25417_v;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72979e8:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _26021_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_26021_imp), _25226_ident)))) {
					goto _iter_next_1b72979e8;
				};
				_25417_v=_1d2193940_FindVar(_26021_imp.ptr(), _25226_ident, _25238_binded);
				if (((_25417_v != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _25417_v.get()._field_Public, _25417_v.get()._field_Token))) {
					return _25417_v;;
				};
			}
			_iter_next_1b72979e8:;
			++it;
			goto _iter_begin_1b72979e8;
		}
		_iter_end_1b72979e8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d219c031_FindTypeAlias(_1d219b34e_Sema* _self_, jule::Str _27932_ident, jule::Bool _27944_binded) {
	jule::Ptr<_1d21d10ed_TypeAlias> _28117_ta = _1d2190bc3_findTypeAliasInPackage(&((*(_self_))._field_files), _27932_ident, _27944_binded);;
	if ((_28117_ta != nullptr)) {
		return _28117_ta;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b729a1d2:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _28721_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_28721_imp), _27932_ident)))) {
					goto _iter_next_1b729a1d2;
				};
				_28117_ta=_1d2193ce7_FindTypeAlias(_28721_imp.ptr(), _27932_ident, _27944_binded);
				if (((_28117_ta != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _28117_ta.get()._field_Public, _28117_ta.get()._field_Token))) {
					return _28117_ta;;
				};
			}
			_iter_next_1b729a1d2:;
			++it;
			goto _iter_begin_1b729a1d2;
		}
		_iter_end_1b729a1d2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d219c3d8_FindStruct(_1d219b34e_Sema* _self_, jule::Str _30629_ident, jule::Bool _30641_binded) {
	jule::Ptr<_1d060ddbd_Struct> _30817_s = _1d21910ad_findStructInPackage(&((*(_self_))._field_files), _30629_ident, _30641_binded);;
	if ((_30817_s != nullptr)) {
		return _30817_s;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b729c8bb:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _31321_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_31321_imp), _30629_ident)))) {
					goto _iter_next_1b729c8bb;
				};
				_30817_s=_1d219419e_FindStruct(_31321_imp.ptr(), _30629_ident, _30641_binded);
				if (((_30817_s != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _30817_s.get()._field_Public, _30817_s.get()._field_Token))) {
					return _30817_s;;
				};
			}
			_iter_next_1b729c8bb:;
			++it;
			goto _iter_begin_1b729c8bb;
		}
		_iter_end_1b729c8bb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d06242bd_Fn> _1d219c790_FindFn(_1d219b34e_Sema* _self_, jule::Str _33125_ident, jule::Bool _33137_binded) {
	jule::Ptr<_1d06242bd_Fn> _33317_f = _1d2191520_findFnInPackage(&((*(_self_))._field_files), _33125_ident, _33137_binded);;
	if ((_33317_f != nullptr)) {
		return _33317_f;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72a00a5:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _33921_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_33921_imp), _33125_ident)))) {
					goto _iter_next_1b72a00a5;
				};
				_33317_f=_1d2194556_FindFn(_33921_imp.ptr(), _33125_ident, _33137_binded);
				if (((_33317_f != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _33317_f.get()._field_Public, _33317_f.get()._field_Token))) {
					return _33317_f;;
				};
			}
			_iter_next_1b72a00a5:;
			++it;
			goto _iter_begin_1b72a00a5;
		}
		_iter_end_1b72a00a5:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21494c8_Trait> _1d219ca9d_FindTrait(_1d219b34e_Sema* _self_, jule::Str _35828_ident) {
	jule::Ptr<_1d21494c8_Trait> _36017_t = _1d219182d_findTraitInPackage(&((*(_self_))._field_files), _35828_ident);;
	if ((_36017_t != nullptr)) {
		return _36017_t;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72a2481:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _36621_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_36621_imp), _35828_ident)))) {
					goto _iter_next_1b72a2481;
				};
				_36017_t=_1d2194864_FindTrait(_36621_imp.ptr(), _35828_ident);
				if (((_36017_t != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _36017_t.get()._field_Public, _36017_t.get()._field_Token))) {
					return _36017_t;;
				};
			}
			_iter_next_1b72a2481:;
			++it;
			goto _iter_begin_1b72a2481;
		}
		_iter_end_1b72a2481:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d219cdab_FindEnum(_1d219b34e_Sema* _self_, jule::Str _38527_ident) {
	jule::Ptr<_1d214bc5b_Enum> _38717_e = _1d2191b6e_findEnumInPackage(&((*(_self_))._field_files), _38527_ident);;
	if ((_38717_e != nullptr)) {
		return _38717_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72a4917:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _39321_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_39321_imp), _38527_ident)))) {
					goto _iter_next_1b72a4917;
				};
				_38717_e=_1d2194b72_FindEnum(_39321_imp.ptr(), _38527_ident);
				if (((_38717_e != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _38717_e.get()._field_Public, _38717_e.get()._field_Token))) {
					return _38717_e;;
				};
			}
			_iter_next_1b72a4917:;
			++it;
			goto _iter_begin_1b72a4917;
		}
		_iter_end_1b72a4917:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d219d1b9_FindTypeEnum(_1d219b34e_Sema* _self_, jule::Str _41231_ident) {
	jule::Ptr<_1d214d356_TypeEnum> _41417_e = _1d2191eb0_findTypeEnumInPackage(&((*(_self_))._field_files), _41231_ident);;
	if ((_41417_e != nullptr)) {
		return _41417_e;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72a6d9d:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _42021_imp = *it;
			{
				if ((!(_1d21994b2_impIsLookupable(&(_42021_imp), _41231_ident)))) {
					goto _iter_next_1b72a6d9d;
				};
				_41417_e=_1d2194e80_FindTypeEnum(_42021_imp.ptr(), _41231_ident);
				if (((_41417_e != nullptr) && _1d219e3eb_isAccessibleDefine(_self_, _41417_e.get()._field_Public, _41417_e.get()._field_Token))) {
					return _41417_e;;
				};
			}
			_iter_next_1b72a6d9d:;
			++it;
			goto _iter_begin_1b72a6d9d;
		}
		_iter_end_1b72a6d9d:;
	};
	return nullptr;;
}



inline jule::Bool _1d219d5d7_isFlag(_1d219b34e_Sema* _self_, jule::I64 _43621_flags) {
	return (((*(_self_))._field_flags & _43621_flags) == _43621_flags);;
}



inline void _1d219d85c_setCurrentFile(_1d219b34e_Sema* _self_, jule::Ptr<_1d040428a_SymbolTable> _43837_f) {
	(*(_self_))._field_file=_43837_f;
}



inline void _1d219dc25_pushErr(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token> _44026_token, jule::Str _44041_fmt, jule::Slice<jule::Any> _44054_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1d2199171_compilerErr(&(_44026_token), true, _44041_fmt, _44054_args));;
}



inline void _1d219e044_pushSuggestion(_1d219b34e_Sema* _self_, jule::Str _44533_fmt, jule::Slice<jule::Any> _44546_args) {
	{
		_1d219a606_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _44533_fmt, _44546_args);
	};
}



inline jule::Bool _1d219e3eb_isAccessibleDefine(_1d219b34e_Sema* _self_, jule::Bool _45033_public, jule::Ptr<_22be1281d_Token> _45047_token) {
	return ((_45033_public || (_45047_token.get()._field_File == nullptr)) || (_22be18329_Dir((*(_self_))._field_file.get()._field_File.ptr()) == _22be18329_Dir(_45047_token.get()._field_File.ptr())));;
}



inline jule::Bool _1d219e84c_isDuplicatedIdent(_1d219b34e_Sema* _self_, jule::Uintptr _45732_itself, jule::Str _45749_ident, jule::Bool _45761_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72ad1e5:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> *_45816_f = it;
			{
				if (_1d0407469_isDuplicatedIdent((*(_45816_f)).ptr(), _45732_itself, _45749_ident, _45761_binded)) {
					return true;;
				};
				{
					auto expr = &((*(_45816_f)).get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72adc84:;
					if (it != expr_end) {
						jule::Ptr<_1d219307c_ImportInfo> *_46320_imp = it;
						{
							{
								auto expr = &((*(_46320_imp)).get()._field_Selected);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b72ae801:;
								if (it != expr_end) {
									jule::Ptr<_22be1281d_Token> *_46424_selected = it;
									{
										if (((*(_46424_selected)).get()._field_Kind == _45749_ident)) {
											return true;;
										};
									}
									_iter_next_1b72ae801:;
									++it;
									goto _iter_begin_1b72ae801;
								}
								_iter_end_1b72ae801:;
							};
						}
						_iter_next_1b72adc84:;
						++it;
						goto _iter_begin_1b72adc84;
					}
					_iter_end_1b72adc84:;
				};
			}
			_iter_next_1b72ad1e5:;
			++it;
			goto _iter_begin_1b72ad1e5;
		}
		_iter_end_1b72ad1e5:;
	};
	return false;;
}



inline void _1d219eb6b_checkDirectives(jule::Ptr<_1d219b34e_Sema> _self_, jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _47440_d, jule::Any _47466_o) {
	_1d218be99_directiveChecker _47517_dc = _1d218be99_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1d05aba4c_Directive>>>)((&((*(_47440_d)))))), ._field_o=_47466_o};;
	_1d218d5a5_check(&_47517_dc);
}



inline jule::Bool _1d21a00bc_checkGenericQuantity(_1d219b34e_Sema* _self_, jule::I64 _48339_required, jule::I64 _48354_given, jule::Ptr<_22be1281d_Token> _48366_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_48339_required == 0LL) && (_48354_given > 0LL))) {
			_case_begin_1b72b1bcc:;
			{
				_1d219dc25_pushErr(_self_, _48366_token, jule::Str("type have not generics but instantiate like generics", 52), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_48339_required > 0LL) && (_48354_given == 0LL))) {
			_case_begin_1b72b1c54:;
			{
				_1d219dc25_pushErr(_self_, _48366_token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required < _48354_given)) {
			_case_begin_1b72b1ccb:;
			{
				_1d219dc25_pushErr(_self_, _48366_token, jule::Str("overflow generics", 17), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_48339_required > _48354_given)) {
			_case_begin_1b72b1d53:;
			{
				_1d219dc25_pushErr(_self_, _48366_token, jule::Str("missing generics", 16), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b72b1b55:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b72b1a89:;
	};
}



inline jule::Bool _1d21a0496_isDuplicatedImportSelection(_1d219b34e_Sema* _self_, jule::Uintptr _50242_itself, jule::Str _50259_ident) {
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b473a:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> *_50316_imp = it;
			{
				if ((static_cast<jule::Uintptr>((*(_50316_imp))) == _50242_itself)) {
					goto _iter_end_1b72b473a;
				};
				if (_1d2195634_existIdent((*(_50316_imp)).ptr(), _50259_ident)) {
					return true;;
				};
			}
			_iter_next_1b72b473a:;
			++it;
			goto _iter_begin_1b72b473a;
		}
		_iter_end_1b72b473a:;
	};
	return false;;
}



inline jule::Any _1d21a085e_getImportDef(_1d219b34e_Sema* _self_, jule::Str _51527_ident, jule::Ptr<_1d219307c_ImportInfo>* _51544_imp) {
	if ((_1d06456b8_findPackageBuiltinDef((*(_51544_imp)).get()._field_LinkPath, _51527_ident) != nullptr)) {
		return jule::Any(true, &__jule_any_type4);;
	};
	{
		auto expr = &((*(_51544_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b65a5:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _51921_f = *it;
			{
				;
				jule::Any _52221_def = _1d0407018_defByIdent(_51921_f.ptr(), _51527_ident, false);;
				if ((_52221_def != nullptr)) {
					return _52221_def;;
				};
			}
			_iter_next_1b72b65a5:;
			++it;
			goto _iter_begin_1b72b65a5;
		}
		_iter_end_1b72b65a5:;
	};
	return nullptr;;
}



inline jule::Bool _1b72bc446_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d21bb65a_Var>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b72c10a4_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d21d10ed_TypeAlias>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b72c4bac_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d060ddbd_Struct>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b72c894c_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d21494c8_Trait>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b72cc555_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d214bc5b_Enum>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b72d115d_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d214d356_TypeEnum>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}

inline jule::Bool _1b72d4c66_checkImportSelection(_1d219b34e_Sema* _self_, jule::Ptr<_22be1281d_Token>* _53043_ident, jule::Ptr<_1d06242bd_Fn>* _53059_s) {
	if ((!(_1d219e3eb_isAccessibleDefine(_self_, (*(_53059_s)).get()._field_Public, (*(_53059_s)).get()._field_Token)))) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_53043_ident)).get()._field_Kind, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return false;;
	};
	;
	if ((_1d21924aa_defByIdentPackage(&((*(_self_))._field_files), &((*(_53059_s)).get()._field_Ident), false) != nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_53043_ident)), jule::Str("selected identifier \"@\" is already exist in this package", 56), jule::Slice<jule::Any>::make({jule::Any((*(_53059_s)).get()._field_Ident, &__jule_any_type5)}));
		return false;;
	};
	return true;;
}



inline jule::Bool _1d21a1046_checkImportSelectedSelections(_1d219b34e_Sema* _self_, jule::Ptr<_1d219307c_ImportInfo>* _54453_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_54453_imp)).get()._field_Selected);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72b8178:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> _54616_ident = *it;
			{
				if (_54616_ident.get()._field_Kind.equal("self", 4)) {
					goto _iter_next_1b72b8178;
				};
				if (_1d21a0496_isDuplicatedImportSelection(_self_, static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_54453_imp)))), _54616_ident.get()._field_Kind)) {
					_1d219dc25_pushErr(_self_, _54616_ident, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
					_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b72b8178;
				};
				jule::Any _55821_def = _1d21a085e_getImportDef(_self_, _54616_ident.get()._field_Kind, _54453_imp);;
				{
					auto &_match_expr{ _55821_def };
					
					if (_match_expr.type == &__jule_any_type4) {
						_case_begin_1b72b9157:;
						{
							goto _iter_next_1b72b8178;
						}
					}
					else if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b72bb17b:;
						{
							jule::Ptr<_1d21bb65a_Var> _56425_v = _55821_def.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
							__jule_func_result=(_1b72bc446_checkImportSelection(_self_, &(_54616_ident), &(_56425_v)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type67) {
						_case_begin_1b72ba7b8:;
						{
							jule::Ptr<_1d21d10ed_TypeAlias> _56725_ta = _55821_def.cast_ptr<_1d21d10ed_TypeAlias>(&__jule_any_type67);;
							__jule_func_result=(_1b72c10a4_checkImportSelection(_self_, &(_54616_ident), &(_56725_ta)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b72ba82e:;
						{
							jule::Ptr<_1d060ddbd_Struct> _57025_s = _55821_def.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66);;
							__jule_func_result=(_1b72c4bac_checkImportSelection(_self_, &(_54616_ident), &(_57025_s)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type10) {
						_case_begin_1b72bb2be:;
						{
							jule::Ptr<_1d21494c8_Trait> _57325_t = _55821_def.cast_ptr<_1d21494c8_Trait>(&__jule_any_type10);;
							__jule_func_result=(_1b72c894c_checkImportSelection(_self_, &(_54616_ident), &(_57325_t)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type68) {
						_case_begin_1b72bb335:;
						{
							jule::Ptr<_1d214bc5b_Enum> _57625_e = _55821_def.cast_ptr<_1d214bc5b_Enum>(&__jule_any_type68);;
							__jule_func_result=(_1b72cc555_checkImportSelection(_self_, &(_54616_ident), &(_57625_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type69) {
						_case_begin_1b72bb39b:;
						{
							jule::Ptr<_1d214d356_TypeEnum> _57925_e = _55821_def.cast_ptr<_1d214d356_TypeEnum>(&__jule_any_type69);;
							__jule_func_result=(_1b72d115d_checkImportSelection(_self_, &(_54616_ident), &(_57925_e)) && __jule_func_result);
						}
					}
					else if (_match_expr.type == &__jule_any_type65) {
						_case_begin_1b72bb412:;
						{
							jule::Ptr<_1d06242bd_Fn> _58225_f = _55821_def.cast_ptr<_1d06242bd_Fn>(&__jule_any_type65);;
							__jule_func_result=(_1b72d4c66_checkImportSelection(_self_, &(_54616_ident), &(_58225_f)) && __jule_func_result);
						}
					}
					else {
						_case_begin_1b72ba5a9:;
						{
							_1d219dc25_pushErr(_self_, _54616_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_54616_ident.get()._field_Kind, &__jule_any_type5)}));
							__jule_func_result=false;
							goto _iter_next_1b72b8178;
						}
					}
					_match_end_1b72ba554:;
				};
			}
			_iter_next_1b72b8178:;
			++it;
			goto _iter_begin_1b72b8178;
		}
		_iter_end_1b72b8178:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1b72d8c48_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72da7a5:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72bc446_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72da7a5:;
			++it;
			goto _iter_begin_1b72da7a5;
		}
		_iter_end_1b72da7a5:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b72dac28_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72dd3ac:;
		if (it != expr_end) {
			jule::Ptr<_1d21d10ed_TypeAlias> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72c10a4_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72dd3ac:;
			++it;
			goto _iter_begin_1b72dd3ac;
		}
		_iter_end_1b72dd3ac:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b72dc741_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d060ddbd_Struct>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e0ea3:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72c4bac_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72e0ea3:;
			++it;
			goto _iter_begin_1b72e0ea3;
		}
		_iter_end_1b72e0ea3:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b72e02e3_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d06242bd_Fn>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e3abb:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72d4c66_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72e3abb:;
			++it;
			goto _iter_begin_1b72e3abb;
		}
		_iter_end_1b72e3abb:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b72e2e50_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d21494c8_Trait>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e666d:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72c894c_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72e666d:;
			++it;
			goto _iter_begin_1b72e666d;
		}
		_iter_end_1b72e666d:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b72e5a02_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d214bc5b_Enum>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72e9220:;
		if (it != expr_end) {
			jule::Ptr<_1d214bc5b_Enum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72cc555_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72e9220:;
			++it;
			goto _iter_begin_1b72e9220;
		}
		_iter_end_1b72e9220:;
	};
	return _59417_ok;;
}

inline jule::Bool _1b72e85a4_checkImportsAllSelectionsFromCollection(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d214d356_TypeEnum>>* _59362_s, jule::Ptr<_22be1281d_Token>* _59371_et) {
	jule::Bool _59417_ok = true;;
	{
		auto expr = _59362_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72ebd5a:;
		if (it != expr_end) {
			jule::Ptr<_1d214d356_TypeEnum> *_59516_d = it;
			{
				if ((*(_59516_d)).get()._field_Public) {
					_59417_ok=(_1b72d115d_checkImportSelection(_self_, _59371_et, _59516_d) && _59417_ok);
				};
			}
			_iter_next_1b72ebd5a:;
			++it;
			goto _iter_begin_1b72ebd5a;
		}
		_iter_end_1b72ebd5a:;
	};
	return _59417_ok;;
}



inline jule::Bool _1d21a1772_checkImportAllSelections(_1d219b34e_Sema* _self_, jule::Ptr<_1d219307c_ImportInfo>* _60344_imp) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_60344_imp)).get()._field_Package.get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72d4a24:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> *_60516_file = it;
			{
				__jule_func_result=(_1b72d8c48_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Vars), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b72dac28_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeAliases), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b72dc741_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Structs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b72e02e3_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Funcs), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b72e2e50_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Traits), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b72e5a02_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_Enums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
				__jule_func_result=(_1b72e85a4_checkImportsAllSelectionsFromCollection(_self_, &((*(_60516_file)).get()._field_TypeEnums), &((*(_60344_imp)).get()._field_Token)) && __jule_func_result);
			}
			_iter_next_1b72d4a24:;
			++it;
			goto _iter_begin_1b72d4a24;
		}
		_iter_end_1b72d4a24:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21a1a91_checkImportSelections(_1d219b34e_Sema* _self_, jule::Ptr<_1d219307c_ImportInfo>* _61745_imp) {
	jule::Bool __jule_func_result = false;
	if (((*(_61745_imp)).get()._field_Selected.len() > 0LL)) {
		__jule_func_result = _1d21a1046_checkImportSelectedSelections(_self_, _61745_imp);
		return __jule_func_result;;
	} else if ((*(_61745_imp)).get()._field_ImportAll) {
		__jule_func_result = _1d21a1772_checkImportAllSelections(_self_, _61745_imp);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d21a1d9e_isUseAliasDuplication(_1d219b34e_Sema* _self_, jule::Ptr<_1d219307c_ImportInfo>* _62641_imp) {
	if (((*(_62641_imp)).get()._field_Alias.len() == 0LL)) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b72ee632:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _63121_imp2 = *it;
			{
				if ((_63121_imp2 == (*(_62641_imp)))) {
					goto _iter_end_1b72ee632;
				};
				if ((_63121_imp2.get()._field_Alias == (*(_62641_imp)).get()._field_Alias)) {
					return true;;
				};
				if (((_63121_imp2.get()._field_Ident == _63121_imp2.get()._field_LinkPath) && (_63121_imp2.get()._field_Ident == (*(_62641_imp)).get()._field_Alias))) {
					return true;;
				};
			}
			_iter_next_1b72ee632:;
			++it;
			goto _iter_begin_1b72ee632;
		}
		_iter_end_1b72ee632:;
	};
	return false;;
}



inline jule::Bool _1d21a21ac_checkImport(_1d219b34e_Sema* _self_, jule::Ptr<_1d219307c_ImportInfo>* _64635_imp) {
	if (((*(_64635_imp)).get()._field_Binded || ((*(_64635_imp)).get()._field_Package.get()._field_Files.len() == 0LL))) {
		return true;;
	};
	if (_1d21a1d9e_isUseAliasDuplication(_self_, _64635_imp)) {
		_1d219dc25_pushErr(_self_, (*(_64635_imp)).get()._field_Token, jule::Str("identifier duplication: @ is already used for another use declaration above", 75), jule::Slice<jule::Any>::make({jule::Any((*(_64635_imp)).get()._field_Alias, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_, jule::Str("rename alias for this use declaration to avoid duplication", 58), jule::Slice<jule::Any>());
	};
	if ((!((*(_64635_imp)).get()._field_Duplicate))) {
		jule::Ptr<_1d219b34e_Sema> _65721_sema = jule::new_ptr<_1d219b34e_Sema>(_1d219b34e_Sema{._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1d21b804c_check(_65721_sema, &((*(_64635_imp)).get()._field_Package.get()._field_Files));
		if ((_65721_sema.get()._field_errors.len() != 0LL)) {
			(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_65721_sema.get()._field_errors);
			_65721_sema.get()._field_errors=nullptr;
			return false;;
		};
	};
	return _1d21a1a91_checkImportSelections(_self_, _64635_imp);;
}



inline void _1d21a2388_checkImports(_1d219b34e_Sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7303b42:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _67221_file = *it;
			{
				_1d219d85c_setCurrentFile(_self_, _67221_file);
				{
					auto expr = &(_67221_file.get()._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7305605:;
					if (it != expr_end) {
						jule::Ptr<_1d219307c_ImportInfo> _67425_imp = *it;
						{
							jule::Bool _67521_ok = _1d21a21ac_checkImport(_self_, &(_67425_imp));;
							if ((!(_67521_ok))) {
								return;;
							};
						}
						_iter_next_1b7305605:;
						++it;
						goto _iter_begin_1b7305605;
					}
					_iter_end_1b7305605:;
				};
			}
			_iter_next_1b7303b42:;
			++it;
			goto _iter_begin_1b7303b42;
		}
		_iter_end_1b7303b42:;
	};
}



inline void _1d21a2564_implFileImpls(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b730525e:;
		if (it != expr_end) {
			jule::Ptr<_1d216e5a8_Impl> _68521_imp = *it;
			{
				_1d21aea9e_implImpl(_self_, &(_68521_imp));
			}
			_iter_next_1b730525e:;
			++it;
			goto _iter_begin_1b730525e;
		}
		_iter_end_1b730525e:;
	};
}



inline void _1d21a2740_implImpls(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7306b34:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _69121_file = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _69121_file);
				_1d21a2564_implFileImpls(_self_);
			}
			_iter_next_1b7306b34:;
			++it;
			goto _iter_begin_1b7306b34;
		}
		_iter_end_1b7306b34:;
	};
}



inline void _1d21a291b_checkEnums(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7307ecb:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _69821_file = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _69821_file);
				{
					
					if ((!(_1d21ab3a3_checkEnumDecls(_self_)))) {
						_case_begin_1b730899e:;
					}
					else if ((!(_1d21ab617_checkTypeEnumDecls(_self_)))) {
						_case_begin_1b7308a26:;
					}
					_match_end_1b7308905:;
				};
			}
			_iter_next_1b7307ecb:;
			++it;
			goto _iter_begin_1b7307ecb;
		}
		_iter_end_1b7307ecb:;
	};
}



inline void _1d21a2ae7_checkFileInherits(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7308482:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> _70821_t = *it;
			{
				jule::Bool _70917_ok = _1d21acd55__checkTraitDeclInherits(_self_, &(_70821_t));;
				if ((!(_70917_ok))) {
					return;;
				};
			}
			_iter_next_1b7308482:;
			++it;
			goto _iter_begin_1b7308482;
		}
		_iter_end_1b7308482:;
	};
}



inline void _1d21a2cc3_checkInherits(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b730975d:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _71721_file = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _71721_file);
				_1d21a2ae7_checkFileInherits(_self_);
			}
			_iter_next_1b730975d:;
			++it;
			goto _iter_begin_1b730975d;
		}
		_iter_end_1b730975d:;
	};
}



inline _1d21e3187_typeChecker _1d21a3224_typeChecker(jule::Ptr<_1d219b34e_Sema> _self_, jule::Trait<_1d2200172_Lookup> _72335_l, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _72350_generics, jule::Ptr<_1d21e22a7_referencer> _72413_referencer) {
	_1d21e3187_typeChecker _72517_tc = _1d21e3187_typeChecker{._field_s=_self_, ._field_rootLookup=_72335_l, ._field_lookup=_72335_l, ._field_referencer=_72413_referencer, ._field_useGenerics=_72350_generics, };;
	{
		auto &_match_expr{ _72335_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b730c002:;
			{
				jule::Ptr<_1d217b241_scopeChecker> _73421_hard = _1d217e2cc_getHardRoot(_72335_l.cast_ptr<_1d217b241_scopeChecker>(0));;
				_72517_tc._field_refers=_73421_hard.get()._field_owner.get()._field_Refers;
			}
		}
		_match_end_1b730be14:;
	};
	if (((_72413_referencer != nullptr) && (_72413_referencer.get()._field_refs != nullptr))) {
		{
			auto &_match_expr{ _72413_referencer.get()._field_owner };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b730d399:;
				{
					_72517_tc._field_ownerAlias=_72413_referencer.get()._field_owner.cast_ptr<_1d21d10ed_TypeAlias>(&__jule_any_type67);
				}
			}
			_match_end_1b730d344:;
		};
	};
	return _72517_tc;;
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a371e_buildTypeWithRefers(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d05de563_TypeDecl>* _75044_t, jule::Trait<_1d2200172_Lookup> _75067_l, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _75113_generics, jule::Ptr<_1d21e22a7_referencer> _75141_referencer) {
	return ({ auto _wrap_copy = _1d21a3224_typeChecker(_self_, _75067_l, _75113_generics, _75141_referencer); _1d21ea0d4_checkDecl(&_wrap_copy, _75044_t); });;
}



inline jule::Bool _1d21a3c19_checkTypeWithRefers(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d8be9_TypeSymbol>* _75744_t, jule::Trait<_1d2200172_Lookup> _75764_l, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _75813_generics, jule::Ptr<_1d21e22a7_referencer> _75841_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1d21d90a1_checked((*(_75744_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_75744_t)).get()._field_Kind=_1d21a371e_buildTypeWithRefers(_self_, &((*(_75744_t)).get()._field_Decl), _75764_l, _75813_generics, _75841_referencer);
	__jule_func_result = _1d21d90a1_checked((*(_75744_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1d216c70a_constraintChecker> _1d21a3e7d_constraintChecker(jule::Ptr<_1d219b34e_Sema> _self_) {
	return jule::new_ptr<_1d216c70a_constraintChecker>(_1d216c70a_constraintChecker{._field_s=_self_, });;
}



inline jule::Bool _1d21a4335_checkType(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d8be9_TypeSymbol>* _77234_t, jule::Trait<_1d2200172_Lookup> _77254_l) {
	return _1d21a3c19_checkTypeWithRefers(_self_, _77234_t, _77254_l, nullptr, nullptr);;
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a4786_buildTypeWithGenerics(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d05de563_TypeDecl>* _77846_t, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _77913_generics, jule::Ptr<_1d0629dc8_ReferenceStack> _77941_refers) {
	jule::Ptr<_1d21e3187_typeChecker> _78017_tc = jule::new_ptr<_1d21e3187_typeChecker>(_1d21e3187_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_refers=_77941_refers, ._field_useGenerics=_77913_generics, });;
	return _1d21ea0d4_checkDecl(_78017_tc.ptr(), _77846_t);;
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a4a94_buildType(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d05de563_TypeDecl>* _79134_t) {
	return _1d21a4786_buildTypeWithGenerics(_self_, _79134_t, nullptr, nullptr);;
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a4da2_selectType(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d05de563_TypeDecl>* _79635_t) {
	jule::Ptr<_1d21e3187_typeChecker> _79717_tc = jule::new_ptr<_1d21e3187_typeChecker>(_1d21e3187_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_selection=true, });;
	return _1d21ea0d4_checkDecl(_79717_tc.ptr(), _79635_t);;
}



inline jule::Ptr<_1d040a813_Eval> _1d21a5303_evalpd(jule::Ptr<_1d219b34e_Sema> _self_, jule::Trait<_1d2200172_Lookup> _80830_l, jule::Ptr<_1d21d1d46_TypeKind> _80845_p, jule::Ptr<_1d21bb65a_Var> _80863_owner) {
	jule::Ptr<_1d040a813_Eval> _80917_e = jule::new_ptr<_1d040a813_Eval>(_1d040a813_Eval{._field_s=_self_, ._field_lookup=_80830_l, ._field_owner=_80863_owner, });;
	{
		auto &_match_expr{ _80830_l };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b73163e6:;
			{
				_80917_e.get()._field_unsafety=_1d217d3db_isUnsafe(_80830_l.cast_ptr<_1d217b241_scopeChecker>(0));
			}
		}
		_match_end_1b7316380:;
	};
	_80917_e.get()._field_prefix=_80845_p;
	return _80917_e;;
}



inline jule::Ptr<_1d040a813_Eval> _1d21a56aa_evalp(jule::Ptr<_1d219b34e_Sema> _self_, jule::Trait<_1d2200172_Lookup> _82329_l, jule::Ptr<_1d21d1d46_TypeKind> _82344_p) {
	return _1d21a5303_evalpd(_self_, _82329_l, _82344_p, nullptr);;
}



inline jule::Ptr<_1d040a813_Eval> _1d21a59b8_eval(jule::Ptr<_1d219b34e_Sema> _self_, jule::Trait<_1d2200172_Lookup> _82828_l) {
	return _1d21a56aa_evalp(_self_, _82828_l, nullptr);;
}



inline jule::Bool _1d21a5eb3_checkAssignType(jule::Ptr<_1d219b34e_Sema> _self_, jule::Bool _83235_destIsRef, jule::Ptr<_1d21d1d46_TypeKind>* _83257_dest, jule::Ptr<_1d0408c95_Data>* _83314_d, jule::Ptr<_22be1281d_Token> _83328_errorToken) {
	if ((*(_83314_d)).get()._field_Decl) {
		_1d219dc25_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return false;;
	};
	if (_83235_destIsRef) {
		if ((!(_1d21d2550_Equal((*(_83257_dest)), (*(_83314_d)).get()._field_Kind)))) {
			_1d219dc25_pushErr(_self_.ptr(), _83328_errorToken, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_83257_dest)).ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_83314_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			return false;;
		};
	} else {
		jule::Ptr<_1d03e45bb_assignTypeChecker> _84421_atc = jule::new_ptr<_1d03e45bb_assignTypeChecker>(_1d03e45bb_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_83257_dest)), ._field_d=(*(_83314_d)), ._field_errorToken=_83328_errorToken});;
		jule::Bool _85017_ok = _1d03e5743_check(_84421_atc.ptr());;
		if ((!(_85017_ok))) {
			return false;;
		};
	};
	if (((!(_1d0409658_IsConst((*(_83314_d)).ptr()))) || (_1d21d4563_Prim((*(_83257_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _86017_kind = _1d21d4563_Prim((*(_83257_dest)).ptr()).get()._field_Kind;;
	{
		
		if (_1e76e4b6d_IsSigInt(_86017_kind)) {
			_case_begin_1b731c683:;
			{
				_1e76e8a2e_SetI64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1e76e4e59_IsUnsigInt(_86017_kind)) {
			_case_begin_1b731c70a:;
			{
				_1e76e8ca4_SetU64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1e76e5520_IsFloat(_86017_kind)) {
			_case_begin_1b731c782:;
			{
				_1e76e9524_SetF64((*(_83314_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1e76e87a9_AsF64((*(_83314_d)).get()._field_Constant.ptr())));
			}
		}
		_match_end_1b731c5b7:;
	};
	return true;;
}



inline jule::Bool _1d21a6414_checkTypeCompatibility(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d1d46_TypeKind>* _87447_dest, jule::Ptr<_1d21d1d46_TypeKind>* _87514_src, jule::Ptr<_22be1281d_Token>* _87535_errorToken) {
	if (((*(_87514_src)) == nullptr)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	if ((_1d21d6202_Tup((*(_87514_src)).ptr()) != nullptr)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
		return false;;
	};
	_1d03e2993_typeCompatibilityChecker _88917_tcc = _1d03e2993_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_87447_dest)), ._field_src=(*(_87514_src)), ._field_errorToken=(*(_87535_errorToken))};;
	if (_1d03e407c_check(&_88917_tcc)) {
		return true;;
	};
	_1d219dc25_pushErr(_self_.ptr(), (*(_87535_errorToken)), jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_87447_dest)).ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_87514_src)).ptr()), &__jule_any_type5)}));
	return false;;
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21a6887_buildNonGenericTypeKind(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d05de563_TypeDecl>* _91048_ast, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>* _91114_generics, jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>* _91150_ignored) {
	jule::Ptr<_1d21e3187_typeChecker> _91217_tc = jule::new_ptr<_1d21e3187_typeChecker>(_1d21e3187_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_ignoreGenerics=(*(_91114_generics)), ._field_ignoredGenerics=(&((*(_91150_ignored)))), });;
	return _1d21ea0d4_checkDecl(_91217_tc.ptr(), _91048_ast);;
}



inline jule::Bool _1d21a6c72_buildFnNonGenericTypeKinds(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0626e6e_FnIns>* _92251_f, jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>* _92267_ignored) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _92417_generics = nullptr;;
	if (_1d0624994_IsMethod((*(_92251_f)).get()._field_Decl.ptr())) {
		_92417_generics=jule::append((*(_92251_f)).get()._field_Decl.get()._field_Generics,(*(_92251_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics);
	} else {
		_92417_generics=(*(_92251_f)).get()._field_Decl.get()._field_Generics;
	};
	{
		auto expr = &((*(_92251_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7325d0c:;
		if (it != expr_end) {
			jule::Ptr<_1d06260a0_ParamIns> _93121_p = *it;
			{
				if ((!(_1d06230ad_IsSelf(_93121_p.get()._field_Decl.ptr())))) {
					_93121_p.get()._field_Kind=_1d21a6887_buildNonGenericTypeKind(_self_, &(_93121_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
					__jule_func_result=(__jule_func_result && (_93121_p.get()._field_Kind != nullptr));
				};
			}
			_iter_next_1b7325d0c:;
			++it;
			goto _iter_begin_1b7325d0c;
		}
		_iter_end_1b7325d0c:;
	};
	if ((!(_1d0624730_IsVoid((*(_92251_f)).get()._field_Decl.ptr())))) {
		(*(_92251_f)).get()._field_Result=_1d21a6887_buildNonGenericTypeKind(_self_, &((*(_92251_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), &(_92417_generics), _92267_ignored);
		__jule_func_result=(__jule_func_result && ((*(_92251_f)).get()._field_Result != nullptr));
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d21a7091_getTraitCheckFnKind(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _94444_f) {
	if (((*(_94444_f)).get()._field_Instances.len() == 1LL)) {
		return (*(_94444_f)).get()._field_Instances[0LL];;
	};
	jule::Ptr<_1d0626e6e_FnIns> _94817_ins = _1d06256a9_instanceForce((*(_94444_f)));;
	jule::Ptr<_1d21e3187_typeChecker> _95017_tc = jule::new_ptr<_1d21e3187_typeChecker>(_1d21e3187_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), ._field_lookup=jule::Trait<_1d2200172_Lookup>(_self_, 3), });;
	{
		auto expr = &(_94817_ins.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b732a295:;
		if (it != expr_end) {
			jule::Ptr<_1d06260a0_ParamIns> _95521_p = *it;
			{
				if ((!(_1d06230ad_IsSelf(_95521_p.get()._field_Decl.ptr())))) {
					_95521_p.get()._field_Kind=_1d21ea0d4_checkDecl(_95017_tc.ptr(), &(_95521_p.get()._field_Decl.get()._field_Kind.get()._field_Decl));
				};
			}
			_iter_next_1b732a295:;
			++it;
			goto _iter_begin_1b732a295;
		}
		_iter_end_1b732a295:;
	};
	if ((!(_1d0624730_IsVoid((*(_94444_f)).ptr())))) {
		_94817_ins.get()._field_Result=_1d21ea0d4_checkDecl(_95017_tc.ptr(), &((*(_94444_f)).get()._field_Result.get()._field_Kind.get()._field_Decl));
	};
	return _94817_ins;;
}



inline jule::Bool _1d21a74e2_checkConstraintsFn(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0626e6e_FnIns>* _96743_f, jule::Ptr<_22be1281d_Token>* _96759_et, jule::Ptr<_1d0626e6e_FnIns> _96775_exist) {
	jule::Ptr<_1d216c70a_constraintChecker> _96817_cc = _1d21a3e7d_constraintChecker(_self_);;
	_96817_cc.get()._field_et=(*(_96759_et));
	_96817_cc.get()._field_fi=(*(_96743_f));
	if ((_96775_exist != nullptr)) {
		{
			auto expr = &(_96775_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b732d595:;
			if (it != expr_end) {
				jule::I64 _97218_i = it - expr->begin();
				jule::Ptr<_1d21d05b4_InsGeneric> _97225_g = *it;
				{
					(*(_96743_f)).get()._field_Generics[_97218_i].get()._field_Constraint=_97225_g.get()._field_Constraint;
				}
				_iter_next_1b732d595:;
				++it;
				_97218_i++;
				goto _iter_begin_1b732d595;
			}
			_iter_end_1b732d595:;
		};
	} else {
		_96817_cc.get()._field_uniq=true;
	};
	return _1d216d5da_check(_96817_cc);;
}



inline jule::Bool _1d21a7943_checkConstraintsStruct(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _98147_s, jule::Ptr<_22be1281d_Token>* _98167_et, jule::Ptr<_1d0611bd4_StructIns> _98183_exist) {
	jule::Ptr<_1d216c70a_constraintChecker> _98217_cc = _1d21a3e7d_constraintChecker(_self_);;
	_98217_cc.get()._field_et=(*(_98167_et));
	_98217_cc.get()._field_si=(*(_98147_s));
	if ((_98183_exist != nullptr)) {
		{
			auto expr = &(_98183_exist.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7330d7d:;
			if (it != expr_end) {
				jule::I64 _98618_i = it - expr->begin();
				jule::Ptr<_1d21d05b4_InsGeneric> _98625_g = *it;
				{
					(*(_98147_s)).get()._field_Generics[_98618_i].get()._field_Constraint=_98625_g.get()._field_Constraint;
				}
				_iter_next_1b7330d7d:;
				++it;
				_98618_i++;
				goto _iter_begin_1b7330d7d;
			}
			_iter_end_1b7330d7d:;
		};
	} else {
		_98217_cc.get()._field_uniq=true;
	};
	return _1d216d5da_check(_98217_cc);;
}



inline jule::Bool _1d21a7cea_fnEnvironment(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0626e6e_FnIns>* _99838_f, jule::Fn<jule::Bool(jule::Ptr<_1d219b34e_Sema>*,jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*)> _99849_algo) {
	jule::Ptr<_1d219b34e_Sema> _99917_sema = (*(_99838_f)).get()._field_Decl.get()._field_sema;;
	jule::Ptr<_1d040428a_SymbolTable> _100017_old = (*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1d219d85c_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100017_old);
	});;
	jule::Ptr<_1d040428a_SymbolTable> _100217_file = _1d219a194_findFile(&((*(_99838_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_99838_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_100217_file != nullptr)) {
		_1d219d85c_setCurrentFile((*(_99838_f)).get()._field_Decl.get()._field_sema.ptr(), _100217_file);
	};
	jule::I64 _100717_size = (*(_99838_f)).get()._field_Generics.len();;
	if ((((*(_99838_f)).get()._field_Decl != nullptr) && ((*(_99838_f)).get()._field_Decl.get()._field_Owner != nullptr))) {
		_100717_size+=(*(_99838_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _101217_generics = jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>::alloc(0LL, _100717_size);;
	_1d2199d42_appendGenericTypeAliases(&(_101217_generics), _99838_f);
	jule::Bool _101513_ok = _99849_algo(&(_99917_sema), &(_101217_generics));;
	if ((_99917_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_99917_sema.get()._field_errors);
		_99917_sema.get()._field_errors=nullptr;
	};
	return _101513_ok;;
}



inline void _1d21a8070_checkFnParamKind(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06260a0_ParamIns>* _102541_p) {
	(*(_102541_p)).get()._field_Kind.get()._field_Variadic=(*(_102541_p)).get()._field_Decl.get()._field_Variadic;
	if (((*(_102541_p)).get()._field_Decl.get()._field_Reference && (!(_1d21ebde9_isValidForRef(&((*(_102541_p)).get()._field_Kind)))))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_102541_p)).get()._field_Decl.get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_102541_p)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Bool _1d21a837d_reloadFnInsTypes(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0626e6e_FnIns> _103240_f) {
	if ((_1d0628305_IsBuiltin(_103240_f.ptr()) || _1d0628569_IsAnon(_103240_f.ptr()))) {
		return true;;
	};
	return _1d21a7cea_fnEnvironment(_self_, &(_103240_f), jule::Fn<jule::Bool(jule::Ptr<_1d219b34e_Sema>*,jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>*)>([=](jule::Ptr<_1d219b34e_Sema>* _103643_sema, jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>* _103661_generics) mutable -> jule::Bool {
		jule::Bool _103721_ok = true;;
		{
			auto expr = &(_103240_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b733b493:;
			if (it != expr_end) {
				jule::Ptr<_1d06260a0_ParamIns> _103825_p = *it;
				{
					if (_1d06230ad_IsSelf(_103825_p.get()._field_Decl.ptr())) {
						if (_1d0623322_IsRef(_103825_p.get()._field_Decl.ptr())) {
							_103825_p.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dccec_Sptr>(_1d21dccec_Sptr{._field_Elem=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_103240_f.get()._field_Owner, 0)})}), 21)});
						} else {
							_103825_p.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_103240_f.get()._field_Owner, 0)});
						};
					} else {
						_103825_p.get()._field_Kind=_1d21a4786_buildTypeWithGenerics((*(_103643_sema)), &(_103825_p.get()._field_Decl.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
						if ((_103825_p.get()._field_Kind != nullptr)) {
							_1d21a8070_checkFnParamKind(_self_, &(_103825_p));
						} else {
							_103721_ok=false;
						};
					};
				}
				_iter_next_1b733b493:;
				++it;
				goto _iter_begin_1b733b493;
			}
			_iter_end_1b733b493:;
		};
		if ((!(_1d0624730_IsVoid(_103240_f.get()._field_Decl.ptr())))) {
			_103240_f.get()._field_Result=_1d21a4786_buildTypeWithGenerics((*(_103643_sema)), &(_103240_f.get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl), (*(_103661_generics)), _103240_f.get()._field_Refers);
			_103721_ok=((_103240_f.get()._field_Result != nullptr) && _103721_ok);
		};
		return _103721_ok;;
	}));;
}



inline jule::Bool _1d21a8801_checkRefValidityForInitExpr(jule::Ptr<_1d219b34e_Sema> _self_, jule::Bool _106847_leftMut, jule::Ptr<_1d0408c95_Data>* _106867_d, jule::Ptr<_22be1281d_Token>* _106882_errorToken) {
	{
		auto &_match_expr{ (*(_106867_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b733a8c1:;
			{
				goto _match_end_1b7340b90;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b7341520:;
			{
				jule::Ptr<_1d061a050_TraitSubIdentExprModel> _107321_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1d061a050_TraitSubIdentExprModel>(&__jule_any_type70);;
				if ((!(_1d2198bcb_isValidModelForRef(&(_107321_model.get()._field_Expr))))) {
					_1d219dc25_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107321_model.get()._field_Method.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b7341586:;
			{
				jule::Ptr<_1d061a836_StructSubIdentExprModel> _107921_model = (*(_106867_d)).get()._field_Model.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((!(_1d2198bcb_isValidModelForRef(&(_107921_model.get()._field_Expr.get()._field_Model))))) {
					_1d219dc25_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(_107921_model.get()._field_Field.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
					return false;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72 || _match_expr.type == &__jule_any_type73) {
			_case_begin_1b7340ce4:;
			{
				_1d219dc25_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("built-in defines cannot pass to references", 42), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b7340d5a:;
			{
				jule::Ptr<_1d0616502_UnaryExprModel> _108921_unary = (*(_106867_d)).get()._field_Model.cast_ptr<_1d0616502_UnaryExprModel>(&__jule_any_type74);;
				if (_108921_unary.get()._field_Op.get()._field_Kind.equal("*", 1)) {
					if ((!(_1d2198bcb_isValidModelForRef(&((*(_106867_d)).get()._field_Model))))) {
						_1d219dc25_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("you cannot use reference variable @ because reference is dangling", 65), jule::Slice<jule::Any>::make({jule::Any(jule::Str("address from * &T", 17), &__jule_any_type5)}));
						return false;;
					};
					goto _match_end_1b7340b90;
				};
				goto _case_begin_1b7340be5;
			}
		}
		else {
			_case_begin_1b7340be5:;
			{
				_1d219dc25_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("references requires variable for assignment", 43), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b7340b90:;
	};
	if ((_106847_leftMut && (!((*(_106867_d)).get()._field_Mutable)))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_106882_errorToken)), jule::Str("mutable reference cannot point to immutable data", 48), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1d21a8dc8_checkValidityForInitExpr(jule::Ptr<_1d219b34e_Sema> _self_, jule::Bool _110944_leftMut, jule::Bool _110959_leftRef, jule::Ptr<_1d21d1d46_TypeKind>* _111010_leftKind, jule::Ptr<_1d0408c95_Data>* _111036_d, jule::Ptr<_22be1281d_Token>* _111051_errorToken) {
	if (((_110944_leftMut && (!((*(_111036_d)).get()._field_Mutable))) && _1d21d35d9_Mutable((*(_111036_d)).get()._field_Kind.ptr()))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_111051_errorToken)), jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_111036_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	if (_110959_leftRef) {
		if ((!(_1d21a8801_checkRefValidityForInitExpr(_self_, _110944_leftMut, _111036_d, _111051_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1d03e45bb_assignTypeChecker> _112017_atc = jule::new_ptr<_1d03e45bb_assignTypeChecker>(_1d03e45bb_assignTypeChecker{._field_s=_self_, ._field_d=(*(_111036_d)), ._field_errorToken=(*(_111051_errorToken))});;
	return _1d03e4c92_checkValidity(_112017_atc.ptr());;
}



inline jule::Bool _1d21a9291_checkTypeAliasDeclKind(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d10ed_TypeAlias>* _112847_ta, jule::Trait<_1d2200172_Lookup> _112867_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d040428a_SymbolTable> _112917_old = _self_.get()._field_file;;
	__JULE_DEFER({
		_1d219d85c_setCurrentFile(_self_.ptr(), _112917_old);
	});;
	if (((*(_112847_ta)).get()._field_Token != nullptr)) {
		jule::Ptr<_1d040428a_SymbolTable> _113421_file = _1d219a194_findFile(&(_self_.get()._field_files), &((*(_112847_ta)).get()._field_Token.get()._field_File));;
		if ((_113421_file != nullptr)) {
			_1d219d85c_setCurrentFile(_self_.ptr(), _113421_file);
		};
	};
	__jule_func_result=_1d21a3c19_checkTypeWithRefers(_self_, &((*(_112847_ta)).get()._field_Kind), _112867_l, nullptr, jule::new_ptr<_1d21e22a7_referencer>(_1d21e22a7_referencer{._field_ident=(*(_112847_ta)).get()._field_Ident, ._field_owner=jule::Any((*(_112847_ta)), &__jule_any_type67), ._field_refs=(&((*(_112847_ta)).get()._field_Refers))}));
	if (((__jule_func_result && (_1d21d5278_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) && _1d21d5278_Arr((*(_112847_ta)).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Auto)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_112847_ta)).get()._field_Kind.get()._field_Decl.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1d21a95b0_checkTypeAliasDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d10ed_TypeAlias>* _115143_ta, jule::Trait<_1d2200172_Lookup> _115163_l) {
	if (_22be150b2_IsIgnoreIdent((*(_115143_ta)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_115143_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	_1d21a9291_checkTypeAliasDeclKind(_self_, _115143_ta, _115163_l);
}



inline void _1d21a9835_checkTypeAliasDeclDup(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d10ed_TypeAlias>* _115946_ta) {
	if (_22be150b2_IsIgnoreIdent((*(_115946_ta)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_115946_ta)))), (*(_115946_ta)).get()._field_Ident, (*(_115946_ta)).get()._field_Binded)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_115946_ta)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_115946_ta)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1d21a9291_checkTypeAliasDeclKind(_self_, _115946_ta, jule::Trait<_1d2200172_Lookup>(_self_, 3));
}



inline jule::Bool _1d21a9a99_checkTypeAliasDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7357206:;
		if (it != expr_end) {
			jule::Ptr<_1d21d10ed_TypeAlias> _117221_ta = *it;
			{
				_1d21a9835_checkTypeAliasDeclDup(_self_, &(_117221_ta));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b7357206:;
			++it;
			goto _iter_begin_1b7357206;
		}
		_iter_end_1b7357206:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1b737a8ab_checkEnumItemsDup(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d214b266_EnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b737bb32:;
		if (it != expr_end) {
			jule::Ptr<_1d214b266_EnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b737bb32;
				} else if (_22be150b2_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1d219dc25_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b737c7c0:;
						if (it != expr_end) {
							jule::Ptr<_1d214b266_EnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1b737c7c0;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1d219dc25_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b737c7c0;
								};
							}
							_iter_next_1b737c7c0:;
							++it;
							goto _iter_begin_1b737c7c0;
						}
						_iter_end_1b737c7c0:;
					};
				};
			}
			_iter_next_1b737bb32:;
			++it;
			goto _iter_begin_1b737bb32;
		}
		_iter_end_1b737bb32:;
	};
}

inline void _1b7384cc2_checkEnumItemsDup(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>> _118339_items) {
	{
		auto expr = &(_118339_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7386004:;
		if (it != expr_end) {
			jule::Ptr<_1d214cc90_TypeEnumItem> *_118416_item = it;
			{
				if ((*(_118416_item)).get()._field_Ident.empty()) {
					goto _iter_next_1b7386004;
				} else if (_22be150b2_IsIgnoreIdent((*(_118416_item)).get()._field_Ident)) {
					_1d219dc25_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_118339_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7386b92:;
						if (it != expr_end) {
							jule::Ptr<_1d214cc90_TypeEnumItem> *_119024_citem = it;
							{
								if (((*(_118416_item)) == (*(_119024_citem)))) {
									goto _iter_end_1b7386b92;
								} else if (((*(_118416_item)).get()._field_Ident == (*(_119024_citem)).get()._field_Ident)) {
									_1d219dc25_pushErr(_self_, (*(_118416_item)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_118416_item)).get()._field_Ident, &__jule_any_type5)}));
									_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
									goto _iter_end_1b7386b92;
								};
							}
							_iter_next_1b7386b92:;
							++it;
							goto _iter_begin_1b7386b92;
						}
						_iter_end_1b7386b92:;
					};
				};
			}
			_iter_next_1b7386004:;
			++it;
			goto _iter_begin_1b7386004;
		}
		_iter_end_1b7386004:;
	};
}



inline void _1d21aa094_checkEnumItemsStr(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d214bc5b_Enum>* _120342_e) {
	jule::Ptr<_1d040a813_Eval> _120417_eval = _1d21a59b8_eval(_self_, jule::Trait<_1d2200172_Lookup>(_self_, 3));;
	{
		auto expr = &((*(_120342_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7358aed:;
		if (it != expr_end) {
			jule::Ptr<_1d214b266_EnumItem> _120521_item = *it;
			{
				if (_1d214b651_AutoExpr(_120521_item.ptr())) {
					_120521_item.get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Constant=static__1e76e6a2c_NewStr(_120521_item.get()._field_Ident)})});
					_120521_item.get()._field_Value.get()._field_Data.get()._field_Model=jule::Any(_120521_item.get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
				} else {
					jule::Ptr<_1d0408c95_Data> _121425_d = _1d01dac53_evalExpr(_120417_eval, _120521_item.get()._field_Value.get()._field_Expr);;
					if ((_121425_d == nullptr)) {
						goto _iter_next_1b7358aed;
					};
					if ((!(_1d0409658_IsConst(_121425_d.ptr())))) {
						_1d219dc25_pushErr(_self_.ptr(), _120521_item.get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
					};
					_1d21a5eb3_checkAssignType(_self_, false, &((*(_120342_e)).get()._field_Kind.get()._field_Kind), &(_121425_d), _120521_item.get()._field_Token);
					_120521_item.get()._field_Value.get()._field_Data=_121425_d;
				};
			}
			_iter_next_1b7358aed:;
			++it;
			goto _iter_begin_1b7358aed;
		}
		_iter_end_1b7358aed:;
	};
}



inline void _1b7361e47_checkEnumItemInt(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d040a813_Eval>* _122946_eval, jule::Ptr<_1d214bc5b_Enum>* _122964_e, jule::Ptr<_1d21d9568_Prim>* _122975_prim, jule::Ptr<_1d214b266_EnumItem>* _122993_item, jule::U64* _1229115_n) {
	if (_1d214b651_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		{
			
{
				_case_begin_1b7364a1b:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e64dd_NewU64((*(_1229115_n)));
				}
			}
			_match_end_1b73643bc:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1d0408c95_Data> _124421_d = _1d01dac53_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1d0409658_IsConst(_124421_d.ptr())))) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1d21a5eb3_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1b7367ce9:;
				{
					(*(_1229115_n))=static_cast<jule::U64>(_1e76e7830_ReadU64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b7367c0b:;
		};
	};
}

inline void _1b736e680_checkEnumItemInt(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d040a813_Eval>* _122946_eval, jule::Ptr<_1d214bc5b_Enum>* _122964_e, jule::Ptr<_1d21d9568_Prim>* _122975_prim, jule::Ptr<_1d214b266_EnumItem>* _122993_item, jule::I64* _1229115_n) {
	if (_1d214b651_AutoExpr((*(_122993_item)).ptr())) {
		(*(_122993_item)).get()._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()});
		{
			
{
				_case_begin_1b7372188:;
				{
					(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant=static__1e76e6246_NewI64((*(_1229115_n)));
				}
			}
			_match_end_1b7371ab1:;
		};
		(*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Model=jule::Any((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant, &__jule_any_type19);
	} else {
		jule::Ptr<_1d0408c95_Data> _124421_d = _1d01dac53_evalExpr((*(_122946_eval)), (*(_122993_item)).get()._field_Value.get()._field_Expr);;
		if ((_124421_d == nullptr)) {
			return;;
		};
		if ((!(_1d0409658_IsConst(_124421_d.ptr())))) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_122993_item)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		_1d21a5eb3_checkAssignType(_self_, false, &((*(_122964_e)).get()._field_Kind.get()._field_Kind), &(_124421_d), (*(_122993_item)).get()._field_Token);
		(*(_122993_item)).get()._field_Value.get()._field_Data=_124421_d;
		{
			
{
				_case_begin_1b73755ed:;
				{
					(*(_1229115_n))=static_cast<jule::I64>(_1e76e75bb_ReadI64((*(_122993_item)).get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b7375587:;
		};
	};
}



inline void _1b735d5e7_checkEnumItemsInt1(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d9568_Prim>* _126444_prim, jule::Ptr<_1d214bc5b_Enum>* _126462_e) {
	jule::U64 _126517_max = 0LLU;;
	{
		
{
			_case_begin_1b7360440:;
			{
				_126517_max=static_cast<jule::U64>(_1e76de78e_MaxU(_1d21d98cb_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1b736020e:;
	};
	jule::Ptr<_1d040a813_Eval> _127517_eval = _1d21a59b8_eval(_self_, jule::Trait<_1d2200172_Lookup>(_self_, 3));;
	jule::U64 _127617_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1d214b266_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1b7361e47_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b7367c61:;
				{
					_127617_n=static_cast<jule::U64>(_1e76e8545_AsU64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b7362277:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b7363cb2:;
		if (it != expr_end) {
			jule::Ptr<_1d214b266_EnumItem> _128921_item = *it;
			{
				if (((_1d214b651_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LLU)) && ((_126517_max - _127617_n) <= 0LLU))) {
					_1d219dc25_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b7363cb2;
				};
				(_127617_n)++;
				_1b7361e47_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1b7363cb2:;
			++it;
			goto _iter_begin_1b7363cb2;
		}
		_iter_end_1b7363cb2:;
	};
}

inline void _1b735ce32_checkEnumItemsInt1(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21d9568_Prim>* _126444_prim, jule::Ptr<_1d214bc5b_Enum>* _126462_e) {
	jule::I64 _126517_max = 0LL;;
	{
		
{
			_case_begin_1b736c925:;
			{
				_126517_max=static_cast<jule::I64>(_1e76de4e7_MaxI(_1d21d98cb_Str((*(_126444_prim)).ptr())));
			}
		}
		_match_end_1b736c7b0:;
	};
	jule::Ptr<_1d040a813_Eval> _127517_eval = _1d21a59b8_eval(_self_, jule::Trait<_1d2200172_Lookup>(_self_, 3));;
	jule::I64 _127617_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1d214b266_EnumItem> _127717_first = (*(_126462_e)).get()._field_Items[0LL];;
	_1b736e680_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_127717_first), &(_127617_n));
	if ((_127717_first.get()._field_Value.get()._field_Data != nullptr)) {
		{
			
{
				_case_begin_1b736d86b:;
				{
					_127617_n=static_cast<jule::I64>(_1e76e82d1_AsI64(_127717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()));
				}
			}
			_match_end_1b7370098:;
		};
	};
	{
		auto expr = (*(_126462_e)).get()._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b737592d:;
		if (it != expr_end) {
			jule::Ptr<_1d214b266_EnumItem> _128921_item = *it;
			{
				if (((_1d214b651_AutoExpr(_128921_item.ptr()) && (_127617_n > 0LL)) && ((_126517_max - _127617_n) <= 0LL))) {
					_1d219dc25_pushErr(_self_.ptr(), _128921_item.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					goto _iter_end_1b737592d;
				};
				(_127617_n)++;
				_1b736e680_checkEnumItemInt(_self_, &(_127517_eval), _126462_e, _126444_prim, &(_128921_item), &(_127617_n));
			}
			_iter_next_1b737592d:;
			++it;
			goto _iter_begin_1b737592d;
		}
		_iter_end_1b737592d:;
	};
}



inline void _1d21aab44_checkEnumItemsInt(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d214bc5b_Enum>* _129942_e) {
	jule::Ptr<_1d21d9568_Prim> _130013_prim = _1d21d4563_Prim((*(_129942_e)).get()._field_Kind.get()._field_Kind.ptr());;
	{
		
		if (_1e76e4b6d_IsSigInt(_130013_prim.get()._field_Kind)) {
			_case_begin_1b736acca:;
			{
				_1b735ce32_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		else {
			_case_begin_1b735cdbb:;
			{
				_1b735d5e7_checkEnumItemsInt1(_self_, &(_130013_prim), _129942_e);
			}
		}
		_match_end_1b735cd66:;
	};
}



inline void _1d21aadb9_checkEnumDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d214bc5b_Enum>* _130938_e) {
	if (_22be150b2_IsIgnoreIdent((*(_130938_e)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_130938_e)))), (*(_130938_e)).get()._field_Ident, false)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_130938_e)).get()._field_Items.len() == 0LL)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_130938_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b737a8ab_checkEnumItemsDup(_self_.ptr(), (*(_130938_e)).get()._field_Items);
	if (((*(_130938_e)).get()._field_Kind != nullptr)) {
		if ((!(_1d21a4335_checkType(_self_, &((*(_130938_e)).get()._field_Kind), jule::Trait<_1d2200172_Lookup>(_self_, 3))))) {
			return;;
		};
	} else {
		(*(_130938_e)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	};
	jule::Ptr<_1d21d9568_Prim> _133317_t = _1d21d4563_Prim((*(_130938_e)).get()._field_Kind.get()._field_Kind.ptr());;
	if ((_133317_t == nullptr)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1d21dc79c_IsStr(_133317_t.ptr())) {
			_case_begin_1b7381593:;
			{
				_1d21aa094_checkEnumItemsStr(_self_, _130938_e);
			}
		}
		else if (_1e76e5201_IsInt(_1d21d98cb_Str(_133317_t.ptr()))) {
			_case_begin_1b73811a8:;
			{
				_1d21aab44_checkEnumItemsInt(_self_, _130938_e);
			}
		}
		else {
			_case_begin_1b73805d6:;
			{
				_1d219dc25_pushErr(_self_.ptr(), (*(_130938_e)).get()._field_Token, jule::Str("invalid type source", 19), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7380482:;
	};
}



inline void _1d21ab13e_checkTypeEnumDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d214d356_TypeEnum>* _135042_e) {
	if (_22be150b2_IsIgnoreIdent((*(_135042_e)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_135042_e)))), (*(_135042_e)).get()._field_Ident, false)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_135042_e)).get()._field_Items.len() == 0LL)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_135042_e)).get()._field_Token, jule::Str("enum @ have no field", 20), jule::Slice<jule::Any>::make({jule::Any((*(_135042_e)).get()._field_Ident, &__jule_any_type5)}));
		return;;
	};
	_1b7384cc2_checkEnumItemsDup(_self_.ptr(), (*(_135042_e)).get()._field_Items);
	{
		auto expr = &((*(_135042_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b738262c:;
		if (it != expr_end) {
			jule::Ptr<_1d214cc90_TypeEnumItem> _136421_item = *it;
			{
				if ((_136421_item.get()._field_Kind == nullptr)) {
					_1d219dc25_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					goto _iter_next_1b738262c;
				};
				jule::Bool _136917_ok = _1d21a4335_checkType(_self_, &(_136421_item.get()._field_Kind), jule::Trait<_1d2200172_Lookup>(_self_, 3));;
				if ((!(_136917_ok))) {
					goto _iter_next_1b738262c;
				};
				jule::Ptr<_1d21d9568_Prim> _137317_p = _1d21d4563_Prim(_136421_item.get()._field_Kind.get()._field_Kind.ptr());;
				if (((_137317_p != nullptr) && _1d21dca11_IsAny(_137317_p.ptr()))) {
					_1d219dc25_pushErr(_self_.ptr(), _136421_item.get()._field_Token, jule::Str("the <any> type is not allowed for type-enum declarations", 56), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b738262c:;
			++it;
			goto _iter_begin_1b738262c;
		}
		_iter_end_1b738262c:;
	};
	if (((*(_135042_e)).get()._field_Items.len() == 1LL)) {
		jule::Ptr<_1d214cc90_TypeEnumItem> _137921_item = (*(_135042_e)).get()._field_Items[0LL];;
		_1d21d1d46_TypeKind _138017_tk = _1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_135042_e)), 4)};;
		if (((_137921_item.get()._field_Kind.get()._field_Kind != nullptr) && _1d21d2550_Equal(_137921_item.get()._field_Kind.get()._field_Kind, ((jule::Ptr<_1d21d1d46_TypeKind>)((&(_138017_tk))))))) {
			_1d219dc25_pushErr(_self_.ptr(), _137921_item.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_1d214d686_Str((*(_135042_e)).ptr()), &__jule_any_type5)}));
		};
	};
}



inline jule::Bool _1d21ab3a3_checkEnumDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b738d616:;
		if (it != expr_end) {
			jule::Ptr<_1d214bc5b_Enum> _139121_e = *it;
			{
				_1d21aadb9_checkEnumDecl(_self_, &(_139121_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b738d616:;
			++it;
			goto _iter_begin_1b738d616;
		}
		_iter_end_1b738d616:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d21ab617_checkTypeEnumDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b738e9ad:;
		if (it != expr_end) {
			jule::Ptr<_1d214d356_TypeEnum> _140321_e = *it;
			{
				_1d21ab13e_checkTypeEnumDecl(_self_, &(_140321_e));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b738e9ad:;
			++it;
			goto _iter_begin_1b738e9ad;
		}
		_iter_end_1b738e9ad:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d21ab925_checkDeclGenerics(_1d219b34e_Sema* _self_, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>* _141337_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _141337_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7390cde:;
		if (it != expr_end) {
			jule::I64 _141513_i = it - expr->begin();
			jule::Ptr<_1d05eb509_GenericDecl> *_141516_g = it;
			{
				if (_22be150b2_IsIgnoreIdent((*(_141516_g)).get()._field_Ident)) {
					_1d219dc25_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1b7390cde;
				};
				_julec_label_duplicationLookup:;
				{
					auto expr = _141337_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7391b03:;
					if (it != expr_end) {
						jule::I64 _142417_j = it - expr->begin();
						jule::Ptr<_1d05eb509_GenericDecl> *_142420_ct = it;
						{
							{
								
								if ((_142417_j >= _141513_i)) {
									_case_begin_1b7393099:;
									{
										goto _iter_end_1b7391b03;
									}
								}
								else if (((*(_141516_g)).get()._field_Ident == (*(_142420_ct)).get()._field_Ident)) {
									_case_begin_1b7393121:;
									{
										_1d219dc25_pushErr(_self_, (*(_141516_g)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_141516_g)).get()._field_Ident, &__jule_any_type5)}));
										_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1b7391b03;
									}
								}
								_match_end_1b7392e89:;
							};
						}
						_iter_next_1b7391b03:;
						++it;
						_142417_j++;
						goto _iter_begin_1b7391b03;
					}
					_iter_end_1b7391b03:;
				};
			}
			_iter_next_1b7390cde:;
			++it;
			_141513_i++;
			goto _iter_begin_1b7390cde;
		}
		_iter_end_1b7390cde:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21abc33_checkFnDeclParamsDup(_1d219b34e_Sema* _self_, jule::Ptr<_1d06242bd_Fn>* _144040_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_check:;
	{
		auto expr = &((*(_144040_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7394ed0:;
		if (it != expr_end) {
			jule::I64 _144313_i = it - expr->begin();
			jule::Ptr<_1d0622981_Param> *_144316_p = it;
			{
				{
					auto expr = &((*(_144040_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7395a80:;
					if (it != expr_end) {
						jule::Ptr<_1d05eb509_GenericDecl> *_144520_g = it;
						{
							if (((*(_144316_p)).get()._field_Ident == (*(_144520_g)).get()._field_Ident)) {
								__jule_func_result=false;
								_1d219dc25_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
								_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								goto _iter_next_1b7394ed0;
							};
						}
						_iter_next_1b7395a80:;
						++it;
						goto _iter_begin_1b7395a80;
					}
					_iter_end_1b7395a80:;
				};
				_julec_label_paramsLookup:;
				{
					auto expr = &((*(_144040_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73963ee:;
					if (it != expr_end) {
						jule::I64 _145517_j = it - expr->begin();
						jule::Ptr<_1d0622981_Param> *_145520_jp = it;
						{
							{
								
								if ((_145517_j >= _144313_i)) {
									_case_begin_1b7397d3a:;
									{
										goto _iter_end_1b73963ee;
									}
								}
								else if (_22be150b2_IsIgnoreIdent((*(_144316_p)).get()._field_Ident) || _22be150b2_IsIgnoreIdent((*(_145520_jp)).get()._field_Ident) || _22be15359_IsAnonIdent((*(_144316_p)).get()._field_Ident) || _22be15359_IsAnonIdent((*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1b7397db2:;
									{
										goto _iter_end_1b73963ee;
									}
								}
								else if (((*(_144316_p)).get()._field_Ident == (*(_145520_jp)).get()._field_Ident)) {
									_case_begin_1b7397e39:;
									{
										__jule_func_result=false;
										_1d219dc25_pushErr(_self_, (*(_144316_p)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_144316_p)).get()._field_Ident, &__jule_any_type5)}));
										_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_next_1b7394ed0;
									}
								}
								_match_end_1b7397c19:;
							};
						}
						_iter_next_1b73963ee:;
						++it;
						_145517_j++;
						goto _iter_begin_1b73963ee;
					}
					_iter_end_1b73963ee:;
				};
			}
			_iter_next_1b7394ed0:;
			++it;
			_144313_i++;
			goto _iter_begin_1b7394ed0;
		}
		_iter_end_1b7394ed0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21ac041_checkFnDeclResultDup(_1d219b34e_Sema* _self_, jule::Ptr<_1d06242bd_Fn>* _147740_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1d0624730_IsVoid((*(_147740_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b739a9b9:;
		if (it != expr_end) {
			jule::I64 _148413_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> *_148416_v = it;
			{
				if ((_22be150b2_IsIgnoreIdent((*(_148416_v)).get()._field_Kind) || _22be15359_IsAnonIdent((*(_148416_v)).get()._field_Kind))) {
					goto _iter_next_1b739a9b9;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b739be2c:;
					if (it != expr_end) {
						jule::Ptr<_1d05eb509_GenericDecl> *_148920_g = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_148920_g)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b739be2c:;
						++it;
						goto _iter_begin_1b739be2c;
					}
					_iter_end_1b739be2c:;
				};
				{
					auto expr = &((*(_147740_f)).get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b739d082:;
					if (it != expr_end) {
						jule::Ptr<_1d0622981_Param> *_149520_p = it;
						{
							if (((*(_148416_v)).get()._field_Kind == (*(_149520_p)).get()._field_Ident)) {
								goto _julec_label_exist;
							};
						}
						_iter_next_1b739d082:;
						++it;
						goto _iter_begin_1b739d082;
					}
					_iter_end_1b739d082:;
				};
				_julec_label_itself_lookup:;
				{
					auto expr = &((*(_147740_f)).get()._field_Result.get()._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b739e33b:;
					if (it != expr_end) {
						jule::I64 _150317_j = it - expr->begin();
						jule::Ptr<_22be1281d_Token> *_150320_jv = it;
						{
							{
								
								if ((_150317_j >= _148413_i)) {
									_case_begin_1b739edca:;
									{
										goto _iter_end_1b739e33b;
									}
								}
								else if (((*(_150320_jv)).get()._field_Kind == (*(_148416_v)).get()._field_Kind)) {
									_case_begin_1b739ee52:;
									{
										goto _julec_label_exist;
									}
								}
								_match_end_1b739ecba:;
							};
						}
						_iter_next_1b739e33b:;
						++it;
						_150317_j++;
						goto _iter_begin_1b739e33b;
					}
					_iter_end_1b739e33b:;
				};
				goto _iter_next_1b739a9b9;
				_julec_label_exist:;
				_1d219dc25_pushErr(_self_, (*(_148416_v)), jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_148416_v)).get()._field_Kind, &__jule_any_type5)}));
				_1d219e044_pushSuggestion(_self_, jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1b739a9b9:;
			++it;
			_148413_i++;
			goto _iter_begin_1b739a9b9;
		}
		_iter_end_1b739a9b9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21ac34e_checkFnVariadicParam(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _152245_f) {
	if (((*(_152245_f)).get()._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1d0622981_Param> _152617_param = (*(_152245_f)).get()._field_Params[((*(_152245_f)).get()._field_Params.len() - 1LL)];;
	if ((_152617_param.get()._field_Variadic && _152617_param.get()._field_Reference)) {
		_1d219dc25_pushErr(_self_.ptr(), _152617_param.get()._field_Token, jule::Str("variadic storage cannot be reference", 36), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1d21ac5c4_checkFnDeclPrototype(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _153545_f) {
	if (((*(_153545_f)).get()._field_Exceptional && (*(_153545_f)).get()._field_Binded)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("binded defines cannot be exceptional", 36), jule::Slice<jule::Any>());
		return;;
	};
	if ((*(_153545_f)).get()._field_Exceptional) {
		if (_1d0624c08_IsEntryPoint((*(_153545_f)).ptr())) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("entry point cannot be exceptional", 33), jule::Slice<jule::Any>());
		} else if (_1d0624e6c_IsInit((*(_153545_f)).ptr())) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_153545_f)).get()._field_Token, jule::Str("initializer function cannot be exceptional", 42), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1d21ab925_checkDeclGenerics(_self_.ptr(), &((*(_153545_f)).get()._field_Generics))))) {
			_case_begin_1b73a497e:;
		}
		else if ((!(_1d21abc33_checkFnDeclParamsDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1b73a4a06:;
		}
		else if ((!(_1d21ac041_checkFnDeclResultDup(_self_.ptr(), _153545_f)))) {
			_case_begin_1b73a4a7d:;
		}
		else if ((!(_1d21ac34e_checkFnVariadicParam(_self_, _153545_f)))) {
			_case_begin_1b73a5c38:;
		}
		_match_end_1b73a5045:;
	};
}



inline jule::Bool _1d21aca25_catchTraitInheritCycle(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21494c8_Trait> _155742_t1, jule::Ptr<_1d21494c8_Trait> _155758_t2, jule::Str* _155775_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &(_155758_t2.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73a7b19:;
		if (it != expr_end) {
			jule::Ptr<_1d21d8be9_TypeSymbol> _155921_i = *it;
			{
				if ((_155921_i.get()._field_Kind == nullptr)) {
					goto _iter_next_1b73a7b19;
				};
				jule::Ptr<_1d21494c8_Trait> _156321_t3 = _1d21d5c29_Trait(_155921_i.get()._field_Kind.ptr());;
				if ((_155742_t1 == _156321_t3)) {
					_1d21b2299_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1d21aca25_catchTraitInheritCycle(_self_, _155742_t1, _156321_t3, _155775_message)))) {
					_1d21b2299_pushCycleError(_self_.ptr(), &(_155758_t2.get()._field_Ident), &(_156321_t3.get()._field_Ident), _155775_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b73a7b19:;
			++it;
			goto _iter_begin_1b73a7b19;
		}
		_iter_end_1b73a7b19:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21acd55__checkTraitDeclInherits(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21494c8_Trait>* _157648_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_157648_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73aa7ba:;
		if (it != expr_end) {
			jule::I64 _157814_i = it - expr->begin();
			jule::Ptr<_1d21d8be9_TypeSymbol> _157821_it = *it;
			{
				if ((!(_1d21a4335_checkType(_self_, &(_157821_it), jule::Trait<_1d2200172_Lookup>(_self_, 3))))) {
					__jule_func_result=false;
					goto _iter_next_1b73aa7ba;
				};
				jule::Ptr<_1d21494c8_Trait> _158321_t2 = _1d21d5c29_Trait(_157821_it.get()._field_Kind.ptr());;
				if ((_158321_t2 == nullptr)) {
					_1d219dc25_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ cannot implement @, type should be trait", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_1d21d2242_Str(_157821_it.get()._field_Kind.ptr()), &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b73aa7ba;
				};
				{
					auto expr = &((*(_157648_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73ac2e4:;
					if (it != expr_end) {
						jule::I64 _158917_j = it - expr->begin();
						jule::Ptr<_1d21d8be9_TypeSymbol> _158920_it2 = *it;
						{
							if ((_158917_j >= _157814_i)) {
								goto _iter_end_1b73ac2e4;
							};
							if (((_158920_it2.get()._field_Kind != nullptr) && _1d21d2550_Equal(_157821_it.get()._field_Kind, _158920_it2.get()._field_Kind))) {
								_1d219dc25_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_158321_t2.get()._field_Ident, &__jule_any_type5)}));
								__jule_func_result=false;
								goto _iter_end_1b73ac2e4;
							};
						}
						_iter_next_1b73ac2e4:;
						++it;
						_158917_j++;
						goto _iter_begin_1b73ac2e4;
					}
					_iter_end_1b73ac2e4:;
				};
				if (((*(_157648_t)) == _158321_t2)) {
					_1d219dc25_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_157648_t)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				} else {
					jule::Str _160325_message = jule::Str();;
					__jule_func_result=(__jule_func_result && _1d21aca25_catchTraitInheritCycle(_self_, (*(_157648_t)), _158321_t2, &(_160325_message)));
					if ((_160325_message.len() > 0LL)) {
						jule::Str _160629_errMsg = _160325_message;;
						_160325_message=jule::Str();
						_1d21b2299_pushCycleError(_self_.ptr(), &((*(_157648_t)).get()._field_Ident), &(_158321_t2.get()._field_Ident), &(_160325_message));
						_160629_errMsg+=_160325_message;
						_1d219dc25_pushErr(_self_.ptr(), _157821_it.get()._field_Decl.get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_160629_errMsg, &__jule_any_type5)}));
					};
				};
			}
			_iter_next_1b73aa7ba:;
			++it;
			_157814_i++;
			goto _iter_begin_1b73aa7ba;
		}
		_iter_end_1b73aa7ba:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1d21ad0db_checkTraitDeclInherits(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21494c8_Trait>* _161747_t) {
	{
		auto expr = &((*(_161747_t)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73aa48a:;
		if (it != expr_end) {
			jule::I64 _161814_i = it - expr->begin();
			jule::Ptr<_1d21d8be9_TypeSymbol> _161821_it = *it;
			{
				jule::Ptr<_1d21494c8_Trait> _161921_t1 = _1d21d5c29_Trait(_161821_it.get()._field_Kind.ptr());;
				{
					auto expr = &((*(_161747_t)).get()._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73b3b25:;
					if (it != expr_end) {
						jule::I64 _162018_j = it - expr->begin();
						jule::Ptr<_1d21d8be9_TypeSymbol> _162025_it2 = *it;
						{
							if ((_162018_j == _161814_i)) {
								goto _iter_next_1b73b3b25;
							};
							jule::Ptr<_1d21494c8_Trait> _162425_t2 = _1d21d5c29_Trait(_162025_it2.get()._field_Kind.ptr());;
							{
								auto expr = &(_161921_t1.get()._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b73b5000:;
								if (it != expr_end) {
									jule::Ptr<_1d06242bd_Fn> _162529_t1m = *it;
									{
										jule::Ptr<_1d06242bd_Fn> _162629_t2m = _1d214a375_FindMethod(_162425_t2.ptr(), _162529_t1m.get()._field_Ident);;
										if ((_162629_t2m == nullptr)) {
											goto _iter_next_1b73b5000;
										};
										jule::Ptr<_1d0626e6e_FnIns> _163025_t1f = _1d21a7091_getTraitCheckFnKind(_self_, &(_162529_t1m));;
										jule::Ptr<_1d0626e6e_FnIns> _163125_t2f = _1d21a7091_getTraitCheckFnKind(_self_, &(_162629_t2m));;
										if ((!(_1d0627d2c_equalTrait(_163025_t1f, &(_163125_t2f))))) {
											_1d219dc25_pushErr(_self_.ptr(), _161821_it.get()._field_Decl.get()._field_Token, jule::Str("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87), jule::Slice<jule::Any>::make({jule::Any((*(_161747_t)).get()._field_Ident, &__jule_any_type5),jule::Any(_162425_t2.get()._field_Ident, &__jule_any_type5),jule::Any(_1d0628b85_GetKindStr(_163025_t1f.ptr(), true), &__jule_any_type5),jule::Any(_1d0628b85_GetKindStr(_163125_t2f.ptr(), true), &__jule_any_type5)}));
											return;;
										};
									}
									_iter_next_1b73b5000:;
									++it;
									goto _iter_begin_1b73b5000;
								}
								_iter_end_1b73b5000:;
							};
						}
						_iter_next_1b73b3b25:;
						++it;
						_162018_j++;
						goto _iter_begin_1b73b3b25;
					}
					_iter_end_1b73b3b25:;
				};
			}
			_iter_next_1b73aa48a:;
			++it;
			_161814_i++;
			goto _iter_begin_1b73aa48a;
		}
		_iter_end_1b73aa48a:;
	};
}



inline void _1d21ad361_checkTraitDeclMethod(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _164245_f) {
	if (_22be150b2_IsIgnoreIdent((*(_164245_f)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_22be15359_IsAnonIdent((*(_164245_f)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_164245_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	(*(_164245_f)).get()._field_sema=_self_;
	_1d21ac5c4_checkFnDeclPrototype(_self_, _164245_f);
	jule::Ptr<_1d0626e6e_FnIns> _165017_ins = _1d062591d_instance((*(_164245_f)));;
	_1d21a837d_reloadFnInsTypes(_self_, _165017_ins);
	_165017_ins.get()._field_reloaded=true;
	_1d0625be8_appendInstance((*(_164245_f)).ptr(), &(_165017_ins));
}



inline void _1d21ad5d6_checkTraitDeclMethods(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21494c8_Trait>* _165646_t) {
	{
		auto expr = &((*(_165646_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73ba3ce:;
		if (it != expr_end) {
			jule::I64 _165714_i = it - expr->begin();
			jule::Ptr<_1d06242bd_Fn> _165721_f = *it;
			{
				_1d21ad361_checkTraitDeclMethod(_self_, &(_165721_f));
				(*(_165646_t)).get()._field_Mutable=((*(_165646_t)).get()._field_Mutable || _165721_f.get()._field_Params[0LL].get()._field_Mutable);
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1d214a991_findMethodInherit((*(_165646_t)).ptr(), &(_165721_f.get()._field_Ident)) != nullptr)) {
					_1d219dc25_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
					_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
					goto _iter_next_1b73ba3ce;
				};
				_julec_label_duplicateLookup:;
				{
					auto expr = &((*(_165646_t)).get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73bd0d5:;
					if (it != expr_end) {
						jule::I64 _167417_j = it - expr->begin();
						jule::Ptr<_1d06242bd_Fn> _167420_jf = *it;
						{
							{
								
								if ((_167417_j >= _165714_i)) {
									_case_begin_1b73bdbeb:;
									{
										goto _iter_end_1b73bd0d5;
									}
								}
								else if ((_165721_f.get()._field_Ident == _167420_jf.get()._field_Ident)) {
									_case_begin_1b73bdc73:;
									{
										_1d219dc25_pushErr(_self_.ptr(), _165721_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_165721_f.get()._field_Ident, &__jule_any_type5)}));
										_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
										goto _iter_end_1b73bd0d5;
									}
								}
								_match_end_1b73bdadb:;
							};
						}
						_iter_next_1b73bd0d5:;
						++it;
						_167417_j++;
						goto _iter_begin_1b73bd0d5;
					}
					_iter_end_1b73bd0d5:;
				};
			}
			_iter_next_1b73ba3ce:;
			++it;
			_165714_i++;
			goto _iter_begin_1b73ba3ce;
		}
		_iter_end_1b73ba3ce:;
	};
}



inline void _1d21ad85b_checkTraitDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21494c8_Trait>* _169339_t) {
	if (_22be150b2_IsIgnoreIdent((*(_169339_t)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_169339_t)))), (*(_169339_t)).get()._field_Ident, false)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_169339_t)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_169339_t)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1d21ad0db_checkTraitDeclInherits(_self_, _169339_t);
	_1d21ad5d6_checkTraitDeclMethods(_self_, _169339_t);
}



inline jule::Bool _1d21adac0_checkTraitDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73c27d2:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> _170721_t = *it;
			{
				_1d21ad85b_checkTraitDecl(_self_, &(_170721_t));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b73c27d2:;
			++it;
			goto _iter_begin_1b73c27d2;
		}
		_iter_end_1b73c27d2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d21ade77_checkTraitImplMethods(_1d219b34e_Sema* _self_, jule::Ptr<_1d21494c8_Trait>* _171745_base, jule::Ptr<_1d216e5a8_Impl>* _171760_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_171760_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73c4097:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> *_171916_f = it;
			{
				if ((_1d214a375_FindMethod((*(_171745_base)).ptr(), (*(_171916_f)).get()._field_Ident) == nullptr)) {
					_1d219dc25_pushErr(_self_, (*(_171916_f)).get()._field_Token, jule::Str("undefined identifier: trait @ has no define @", 45), jule::Slice<jule::Any>::make({jule::Any((*(_171745_base)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_171916_f)).get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b73c4097:;
			++it;
			goto _iter_begin_1b73c4097;
		}
		_iter_end_1b73c4097:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21ae32e_implToStruct(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _172837_dest, jule::Ptr<_1d216e5a8_Impl>* _172857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_172857_ipl)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73c60ee:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _173221_f = *it;
			{
				if (((_1d060e9b2_FindMethod((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident, _173221_f.get()._field_Statically) != nullptr) || (_1d06100cd_FindField((*(_172837_dest)).ptr(), _173221_f.get()._field_Ident) != nullptr))) {
					_1d219dc25_pushErr(_self_.ptr(), _173221_f.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_173221_f.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b73c60ee;
				};
				if ((((*(_172837_dest)).get()._field_Generics.len() > 0LL) && (_173221_f.get()._field_Generics.len() > 0LL))) {
					{
						auto expr = &(_173221_f.get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b73c8376:;
						if (it != expr_end) {
							jule::Ptr<_1d05eb509_GenericDecl> _174024_fg = *it;
							{
								{
									auto expr = &((*(_172837_dest)).get()._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b73c8b5c:;
									if (it != expr_end) {
										jule::Ptr<_1d05eb509_GenericDecl> _174128_dg = *it;
										{
											if ((_174024_fg.get()._field_Ident == _174128_dg.get()._field_Ident)) {
												_1d219dc25_pushErr(_self_.ptr(), _174024_fg.get()._field_Token, jule::Str("methods cannot have same generic identifier with owner same time", 64), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1b73c8b5c:;
										++it;
										goto _iter_begin_1b73c8b5c;
									}
									_iter_end_1b73c8b5c:;
								};
							}
							_iter_next_1b73c8376:;
							++it;
							goto _iter_begin_1b73c8376;
						}
						_iter_end_1b73c8376:;
					};
				};
				_1d219eb6b_checkDirectives(_self_, &(_173221_f.get()._field_Directives), jule::Any(_173221_f, &__jule_any_type65));
				_173221_f.get()._field_sema=_self_;
				_173221_f.get()._field_Owner=(*(_172837_dest));
				(*(_172837_dest)).get()._field_Methods = jule::alloc_for_append((*(_172837_dest)).get()._field_Methods,1);(*(_172837_dest)).get()._field_Methods.__push(_173221_f);;
			}
			_iter_next_1b73c60ee:;
			++it;
			goto _iter_begin_1b73c60ee;
		}
		_iter_end_1b73c60ee:;
	};
	{
		auto expr = &((*(_172857_ipl)).get()._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73cae5b:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _175721_v = *it;
			{
				;
				if (((_1d060e9b2_FindMethod((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident, true) != nullptr) || (_1d060ecc0_FindStatic((*(_172837_dest)).ptr(), _175721_v.get()._field_Ident) != nullptr))) {
					_1d219dc25_pushErr(_self_.ptr(), _175721_v.get()._field_Token, jule::Str("identifier duplication: struct @ already have define @", 54), jule::Slice<jule::Any>::make({jule::Any((*(_172837_dest)).get()._field_Ident, &__jule_any_type5),jule::Any(_175721_v.get()._field_Ident, &__jule_any_type5)}));
					__jule_func_result=false;
					goto _iter_next_1b73cae5b;
				};
				(*(_172837_dest)).get()._field_Statics = jule::alloc_for_append((*(_172837_dest)).get()._field_Statics,1);(*(_172837_dest)).get()._field_Statics.__push(_175721_v);;
			}
			_iter_next_1b73cae5b:;
			++it;
			goto _iter_begin_1b73cae5b;
		}
		_iter_end_1b73cae5b:;
	};
	return __jule_func_result;;
}



inline void _1d21ae5a4_implTrait(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d216e5a8_Impl>* _177034_decl) {
	jule::Ptr<_1d21d1d46_TypeKind> _177117_base_t = _1d21a4da2_selectType(_self_, &((*(_177034_decl)).get()._field_Base));;
	if ((_177117_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1d21494c8_Trait> _177517_base = _1d21d5c29_Trait(_177117_base_t.ptr());;
	if ((_177517_base == nullptr)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Base.get()._field_Token, jule::Str("invalid base type for impl: @", 29), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_177117_base_t.ptr()), &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("expected trait, use a trait", 27), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _178217_destT = _1d21a4da2_selectType(_self_, &((*(_177034_decl)).get()._field_Dest));;
	if ((_178217_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _178617_destS = _1d21d59b5_Struct(_178217_destT.ptr());;
	if ((_178617_destS == nullptr)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_178217_destT.ptr()), &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d060ddbd_Struct> _179317_dest = _178617_destS.get()._field_Decl;;
	if ((_22be18329_Dir(_179317_dest.get()._field_Token.get()._field_File.ptr()) != _22be18329_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	_1d21b9b42_pushImplemented(_177517_base, &(_179317_dest));
	_1d21b9dea_pushImplements(&(_179317_dest), _177517_base);
	if (((*(_177034_decl)).get()._field_Statics.len() > 0LL)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_177034_decl)).get()._field_Statics[0LL].get()._field_Token, jule::Str("trait implementations cannot implement static field", 51), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1d21ade77_checkTraitImplMethods(_self_.ptr(), &(_177517_base), _177034_decl)))) {
			_case_begin_1b73d41ea:;
		}
		else if ((!(_1d21ae32e_implToStruct(_self_, &(_179317_dest), _177034_decl)))) {
			_case_begin_1b73d4272:;
		}
		_match_end_1b73d26b0:;
	};
}



inline void _1d21ae829_implStruct(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d216e5a8_Impl>* _181335_decl) {
	jule::Ptr<_1d21d1d46_TypeKind> _181417_destT = _1d21a4da2_selectType(_self_, &((*(_181335_decl)).get()._field_Dest));;
	if ((_181417_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _181817_destS = _1d21d59b5_Struct(_181417_destT.ptr());;
	if ((_181817_destS == nullptr)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("invalid destination type for impl: @", 36), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_181417_destT.ptr()), &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("expected structure, use a structure", 35), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d060ddbd_Struct> _182517_dest = _181817_destS.get()._field_Decl;;
	if ((_22be18329_Dir(_182517_dest.get()._field_Token.get()._field_File.ptr()) != _22be18329_Dir(_self_.get()._field_file.get()._field_File.ptr()))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_181335_decl)).get()._field_Dest.get()._field_Token, jule::Str("illegal implementation via definition from out of package", 57), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1d21ae32e_implToStruct(_self_, &(_182517_dest), _181335_decl)))) {
			_case_begin_1b73d8650:;
		}
		_match_end_1b73d6472:;
	};
}



inline void _1d21aea9e_implImpl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d216e5a8_Impl>* _183733_decl) {
	{
		
		if (_1d216e9a4_IsTraitImpl((*(_183733_decl)).ptr())) {
			_case_begin_1b73d9101:;
			{
				_1d21ae5a4_implTrait(_self_, _183733_decl);
			}
		}
		else if (_1d216ec18_IsStructImpl((*(_183733_decl)).ptr())) {
			_case_begin_1b73d9178:;
			{
				_1d21ae829_implStruct(_self_, _183733_decl);
			}
		}
		_match_end_1b73d8ee1:;
	};
}



inline void _1d21aedbd_checkVarDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21bb65a_Var>* _184837_decl, jule::Trait<_1d2200172_Lookup> _184853_l) {
	if (_22be150b2_IsIgnoreIdent((*(_184837_decl)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	};
	if (_1d21bbc87_IsTypeInferred((*(_184837_decl)).ptr())) {
		if ((!(_1d21bba23_IsInitialized((*(_184837_decl)).ptr())))) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("type inferred declarations should have a initializer expression", 63), jule::Slice<jule::Any>());
		};
	} else {
		_1d21a4335_checkType(_self_, &((*(_184837_decl)).get()._field_Kind), _184853_l);
	};
	if (((*(_184837_decl)).get()._field_Constant && (*(_184837_decl)).get()._field_Reference)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("references cannot be constant", 29), jule::Slice<jule::Any>());
	};
	if ((!(_1d21bba23_IsInitialized((*(_184837_decl)).ptr())))) {
		if ((*(_184837_decl)).get()._field_Constant) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("missing expression for constant variable initialization", 55), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Statically) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("static variables must be have initialize expression", 51), jule::Slice<jule::Any>());
		};
		if ((*(_184837_decl)).get()._field_Reference) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_184837_decl)).get()._field_Token, jule::Str("reference variables must be have lvalue initialize expression", 61), jule::Slice<jule::Any>());
		};
	};
}



inline void _1d21b0143_checkGlobalVarDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21bb65a_Var>* _188043_decl) {
	if (_1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_188043_decl)))), (*(_188043_decl)).get()._field_Ident, (*(_188043_decl)).get()._field_Binded)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_188043_decl)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	if (((*(_188043_decl)).get()._field_Binded && (*(_188043_decl)).get()._field_Constant)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("binded variables cannot be constant", 35), jule::Slice<jule::Any>());
	};
	if ((((!((*(_188043_decl)).get()._field_Binded)) && (!((*(_188043_decl)).get()._field_Constant))) && (!((*(_188043_decl)).get()._field_Statically)))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_188043_decl)).get()._field_Token, jule::Str("global variables must be static", 31), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("use \"static\" keyword to define", 30), jule::Slice<jule::Any>());
	};
	_1d219eb6b_checkDirectives(_self_, &((*(_188043_decl)).get()._field_Directives), jule::Any((*(_188043_decl)), &__jule_any_type8));
	_1d21aedbd_checkVarDecl(_self_, _188043_decl, jule::Trait<_1d2200172_Lookup>(_self_, 3));
}



inline jule::Bool _1d21b03a7_checkGlobalDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73e2aaa:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _189821_decl = *it;
			{
				_1d21b0143_checkGlobalVarDecl(_self_, &(_189821_decl));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b73e2aaa:;
			++it;
			goto _iter_begin_1b73e2aaa;
		}
		_iter_end_1b73e2aaa:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d21b075e_checkStructTraitImpl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _190845_strct, jule::Ptr<_1d21494c8_Trait>* _190866_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_190866_trt)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73e4293:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _190921_tf = *it;
			{
				jule::Bool _191021_exist = false;;
				jule::Ptr<_1d06242bd_Fn> _191121_sf = _1d060e9b2_FindMethod((*(_190845_strct)).ptr(), _190921_tf.get()._field_Ident, _190921_tf.get()._field_Statically);;
				jule::Ptr<_1d0626e6e_FnIns> _191217_tfK = _1d21a7091_getTraitCheckFnKind(_self_, &(_190921_tf));;
				if ((_191121_sf != nullptr)) {
					jule::Ptr<_1d0626e6e_FnIns> _191425_sfK = _1d21a7091_getTraitCheckFnKind(_self_, &(_191121_sf));;
					_191021_exist=_1d0627d2c_equalTrait(_191217_tfK, &(_191425_sfK));
				};
				if (_191021_exist) {
					jule::Ptr<_1d05aba4c_Directive> _191821_d = _1d21cad95_findDirective(&(_191121_sf.get()._field_Directives), jule::Str("deprecated", 10));;
					if ((_191821_d != nullptr)) {
						_1d219dc25_pushErr(_self_.ptr(), _191821_d.get()._field_Tag, jule::Str("trait implementations cannot have deprecated code", 49), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1d219dc25_pushErr(_self_.ptr(), (*(_190845_strct)).get()._field_Token, jule::Str("trait @ derived but not implemented define @", 44), jule::Slice<jule::Any>::make({jule::Any((*(_190866_trt)).get()._field_Ident, &__jule_any_type5),jule::Any(_1d0628b85_GetKindStr(_191217_tfK.ptr(), true), &__jule_any_type5)}));
					__jule_func_result=false;
				};
			}
			_iter_next_1b73e4293:;
			++it;
			goto _iter_begin_1b73e4293;
		}
		_iter_end_1b73e4293:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21b0a6c_checkStructImpls(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _193241_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_193241_s)).get()._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73e9155:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> _193421_trt = *it;
			{
				__jule_func_result=(_1d21b075e_checkStructTraitImpl(_self_, _193241_s, &(_193421_trt)) && __jule_func_result);
			}
			_iter_next_1b73e9155:;
			++it;
			goto _iter_begin_1b73e9155;
		}
		_iter_end_1b73e9155:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d21b0d7a_checkStructFields(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _194042_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_194042_st)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b73ea3a9:;
		if (it != expr_end) {
			jule::Ptr<_1d060b2e9_Field> _194221_f = *it;
			{
				_194221_f.get()._field_Owner=(*(_194042_st));
				{
					auto expr = &((*(_194042_st)).get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b73eae04:;
					if (it != expr_end) {
						jule::Ptr<_1d060b2e9_Field> _194420_cf = *it;
						{
							if ((_194221_f == _194420_cf)) {
								goto _iter_end_1b73eae04;
							} else if ((_194221_f.get()._field_Ident == _194420_cf.get()._field_Ident)) {
								_1d219dc25_pushErr(_self_.ptr(), _194221_f.get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any(_194221_f.get()._field_Ident, &__jule_any_type5)}));
								_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1b73eae04:;
						++it;
						goto _iter_begin_1b73eae04;
					}
					_iter_end_1b73eae04:;
				};
			}
			_iter_next_1b73ea3a9:;
			++it;
			goto _iter_begin_1b73ea3a9;
		}
		_iter_end_1b73ea3a9:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1d21b1100_checkStructDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _195740_s) {
	if (_22be150b2_IsIgnoreIdent((*(_195740_s)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_195740_s)))), (*(_195740_s)).get()._field_Ident, (*(_195740_s)).get()._field_Binded)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_195740_s)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_195740_s)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
	_1d219eb6b_checkDirectives(_self_, &((*(_195740_s)).get()._field_Directives), jule::Any((*(_195740_s)), &__jule_any_type66));
	{
		
		if ((!(_1d21ab925_checkDeclGenerics(_self_.ptr(), &((*(_195740_s)).get()._field_Generics))))) {
			_case_begin_1b73eca3d:;
		}
		else if ((!(_1d21b0d7a_checkStructFields(_self_, _195740_s)))) {
			_case_begin_1b73ee5cd:;
		}
		else if ((!(_1d21b0a6c_checkStructImpls(_self_, _195740_s)))) {
			_case_begin_1b73ee644:;
		}
		else if ((!(_1d21b1b6c_checkFuncDecls(_self_, &((*(_195740_s)).get()._field_Methods))))) {
			_case_begin_1b73ee6aa:;
		}
		_match_end_1b73ee49b:;
	};
}



inline jule::Bool _1d21b1364_checkStructDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7400dc6:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _197721_s = *it;
			{
				_1d21b1100_checkStructDecl(_self_, &(_197721_s));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b7400dc6:;
			++it;
			goto _iter_begin_1b7400dc6;
		}
		_iter_end_1b7400dc6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d21b15d9_checkAnonFnDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _198740_f) {
	(*(_198740_f)).get()._field_sema=_self_;
	_1d21ac5c4_checkFnDeclPrototype(_self_, _198740_f);
}



inline void _1d21b185e_checkFnDecl(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _199236_f) {
	if (_22be150b2_IsIgnoreIdent((*(_199236_f)).get()._field_Ident)) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("ignore operator cannot use as identifier for this declaration", 61), jule::Slice<jule::Any>());
	} else if (_1d06251d1_IsAnon((*(_199236_f)).ptr())) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("anonymous functions are not allowed in this scope", 49), jule::Slice<jule::Any>());
	};
	_1d219eb6b_checkDirectives(_self_, &((*(_199236_f)).get()._field_Directives), jule::Any((*(_199236_f)), &__jule_any_type65));
	_1d21b15d9_checkAnonFnDecl(_self_, _199236_f);
	if ((((*(_199236_f)).get()._field_Owner == nullptr) && _1d219e84c_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_199236_f)))), (*(_199236_f)).get()._field_Ident, (*(_199236_f)).get()._field_Binded))) {
		if ((*(_199236_f)).get()._field_Ident.equal("init", 4)) {
			jule::Ptr<_1d06242bd_Fn> _200421_init = _1d219c790_FindFn(_self_.ptr(), jule::Str("init", 4), false);;
			if ((_200421_init != nullptr)) {
				return;;
			};
		};
		_1d219dc25_pushErr(_self_.ptr(), (*(_199236_f)).get()._field_Token, jule::Str("identifier \"@\" is duplicated for scope, used by another declaration", 67), jule::Slice<jule::Any>::make({jule::Any((*(_199236_f)).get()._field_Ident, &__jule_any_type5)}));
		_1d219e044_pushSuggestion(_self_.ptr(), jule::Str("rename definition to avoid duplication", 38), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d21b1b6c_checkFuncDecls(jule::Ptr<_1d219b34e_Sema> _self_, jule::Slice<jule::Ptr<_1d06242bd_Fn>>* _201439_funcs) {
	{
		auto expr = _201439_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74067c2:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _201521_f = *it;
			{
				_1d21b185e_checkFnDecl(_self_, &(_201521_f));
				if ((_self_.get()._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1b74067c2:;
			++it;
			goto _iter_begin_1b74067c2;
		}
		_iter_end_1b74067c2:;
	};
	return true;;
}



inline jule::Bool _1d21b1dd1_checkFnDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1d21b1b6c_checkFuncDecls(_self_, &(_self_.get()._field_file.get()._field_Funcs));
	return __jule_func_result;;
}



inline void _1d21b2299_pushCycleError(_1d219b34e_Sema* _self_, jule::Str* _203030_st1, jule::Str* _203041_st2, jule::Str* _203056_message) {
	;
	jule::Str _203213_refers_to = _22ba3cb0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_203030_st1)), &__jule_any_type5),jule::Any((*(_203041_st2)), &__jule_any_type5)}));;
	((*(_203056_message))).buffer.insert(0, (((_22b99a1db_Repeat(jule::Str(" ", 1), 7LL) + _203213_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d21b26ea_checkCrossCycle(_1d219b34e_Sema* _self_, jule::Ptr<_1d060ddbd_Struct>* _203631_st1, jule::Ptr<_1d060ddbd_Struct>* _203646_st2, jule::Str* _203665_message) {
	{
		auto expr = &((*(_203646_st2)).get()._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7409de1:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> *_203716_u = it;
			{
				if (((*(_203716_u)) == (*(_203631_st1)))) {
					_1d21b2299_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
				if ((!(_1d21b26ea_checkCrossCycle(_self_, _203631_st1, _203716_u, _203665_message)))) {
					_1d21b2299_pushCycleError(_self_, &((*(_203646_st2)).get()._field_Ident), &((*(_203716_u)).get()._field_Ident), _203665_message);
					return false;;
				};
			}
			_iter_next_1b7409de1:;
			++it;
			goto _iter_begin_1b7409de1;
		}
		_iter_end_1b7409de1:;
	};
	return true;;
}



inline jule::Bool _1d21b2b6d_checkStructDeriveIllegalCycles(_1d219b34e_Sema* _self_, jule::Str _205049_derive, jule::Ptr<_1d060ddbd_Struct>* _205063_st1, jule::Ptr<_1d21d1d46_TypeKind>* _205082_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d060ddbd_Struct> _205117_st2 = _1d21eca87_getStructFromKind((*(_205082_k)));;
	if ((_205117_st2 == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_205063_st1)) == _205117_st2)) {
		_1d219dc25_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cycle for derive @, struct @ refers to itself", 53), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any((*(_205063_st1)).get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _206317_message = jule::Str();;
	if ((!(_1d21b26ea_checkCrossCycle(_self_, _205063_st1, &(_205117_st2), &(_206317_message))))) {
		jule::Str _206521_errMsg = _206317_message;;
		_206317_message=jule::Str();
		_1d21b2299_pushCycleError(_self_, &((*(_205063_st1)).get()._field_Ident), &(_205117_st2.get()._field_Ident), &(_206317_message));
		_206521_errMsg+=_206317_message;
		_1d219dc25_pushErr(_self_, (*(_205063_st1)).get()._field_Token, jule::Str("illegal cross cycle for derive @;\n@", 35), jule::Slice<jule::Any>::make({jule::Any(_205049_derive, &__jule_any_type5),jule::Any(_206521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d21b2eae_checkStructInsDeriveClone(_1d219b34e_Sema* _self_, jule::Ptr<_1d0611bd4_StructIns> _207548_st) {
	jule::Bool __jule_func_result = false;
	if ((!(_1d06106e9_IsDerives(_207548_st.get()._field_Decl.ptr(), jule::Str("Clone", 5))))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto expr = &(_207548_st.get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7410b2d:;
		if (it != expr_end) {
			jule::Ptr<_1d06111de_FieldIns> _207921_f = *it;
			{
				if ((_207921_f.get()._field_Kind == nullptr)) {
					goto _iter_next_1b7410b2d;
				};
				if ((!(_1d21d408a_SupportsCloning(_207921_f.get()._field_Kind.ptr())))) {
					_1d219dc25_pushErr(_self_, _207548_st.get()._field_Decl.get()._field_Token, jule::Str("type @ is not compatible to derive @", 36), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_207921_f.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1d21b2b6d_checkStructDeriveIllegalCycles(_self_, jule::Str("Clone", 5), &(_207548_st.get()._field_Decl), &(_207921_f.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b7410b2d:;
			++it;
			goto _iter_begin_1b7410b2d;
		}
		_iter_end_1b7410b2d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d21b319b_checkPackageDecls(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7410567:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _209721_f = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _209721_f);
				if ((!(_1d21a9a99_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b7410567:;
			++it;
			goto _iter_begin_1b7410567;
		}
		_iter_end_1b7410567:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7413e1c:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _210421_f = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _210421_f);
				if ((!(_1d21adac0_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b7413e1c:;
			++it;
			goto _iter_begin_1b7413e1c;
		}
		_iter_end_1b7413e1c:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74137bd:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _211121_f = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _211121_f);
				if ((!(_1d21b03a7_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1b74137bd:;
			++it;
			goto _iter_begin_1b74137bd;
		}
		_iter_end_1b74137bd:;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7414417:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _211821_f = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _211821_f);
				{
					
					if ((!(_1d21b1dd1_checkFnDecls(_self_)))) {
						_case_begin_1b741623d:;
					}
					else if ((!(_1d21b1364_checkStructDecls(_self_)))) {
						_case_begin_1b74162a4:;
					}
					else {
						_case_begin_1b74161c7:;
						{
							goto _iter_next_1b7414417;
						}
					}
					_match_end_1b7416161:;
				};
				return;;
			}
			_iter_next_1b7414417:;
			++it;
			goto _iter_begin_1b7414417;
		}
		_iter_end_1b7414417:;
	};
}



inline void _1d21b34dc_checkDataForTypeInference(_1d219b34e_Sema* _self_, jule::Ptr<_1d0408c95_Data>* _213045_d, jule::Ptr<_22be1281d_Token>* _213056_err_token) {
	{
		
		if (_1d0409180_IsNil((*(_213045_d)).ptr())) {
			_case_begin_1b741710c:;
			{
				_1d219dc25_pushErr(_self_, (*(_213056_err_token)), jule::Str("nil is cannot use with type inferred definitions", 48), jule::Slice<jule::Any>());
			}
		}
		else if (_1d04093e4_IsVoid((*(_213045_d)).ptr())) {
			_case_begin_1b7417184:;
			{
				_1d219dc25_pushErr(_self_, (*(_213056_err_token)), jule::Str("void data is cannot use for type inferred definitions", 53), jule::Slice<jule::Any>());
			}
		}
		else if ((*(_213045_d)).get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b741720b:;
			{
				_1d219dc25_pushErr(_self_, (*(_213056_err_token)), jule::Str("invalid expression for type inference", 37), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7416edb:;
	};
}



inline void _1d21b3773_checkVar(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21bb65a_Var>* _214133_v) {
	if ((*(_214133_v)).get()._field_Binded) {
		return;;
	};
	if (_1d21bbc87_IsTypeInferred((*(_214133_v)).ptr())) {
		(*(_214133_v)).get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind});
		_1d21b34dc_checkDataForTypeInference(_self_.ptr(), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		_1d21a8dc8_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
	} else {
		jule::Ptr<_1d21e0904_Arr> _215821_arr = _1d21d5278_Arr((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr());;
		if ((_215821_arr != nullptr)) {
			if (_215821_arr.get()._field_Auto) {
				jule::Ptr<_1d21e0904_Arr> _216125_dataArr = _1d21d5278_Arr((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
				if ((_216125_dataArr != nullptr)) {
					_215821_arr.get()._field_N=_216125_dataArr.get()._field_N;
				};
			};
		};
		if (_1d21a5eb3_checkAssignType(_self_, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token)) {
			_1d21a8dc8_checkValidityForInitExpr(_self_, (*(_214133_v)).get()._field_Mutable, (*(_214133_v)).get()._field_Reference, &((*(_214133_v)).get()._field_Kind.get()._field_Kind), &((*(_214133_v)).get()._field_Value.get()._field_Data), &((*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token));
		};
	};
	if (((*(_214133_v)).get()._field_Reference && (!(_1d21ebde9_isValidForRef(&((*(_214133_v)).get()._field_Kind.get()._field_Kind)))))) {
		_1d219dc25_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Token, jule::Str("references cannot points to type @", 34), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
	if ((*(_214133_v)).get()._field_Constant) {
		jule::Bool _218317_comptime = _1d21d6466_comptime((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr());;
		if (((!(_1d0409658_IsConst((*(_214133_v)).get()._field_Value.get()._field_Data.ptr()))) && (!(_218317_comptime)))) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		};
		if ((_218317_comptime && (_1d21d7654_comptimeRange((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()) != nullptr))) {
			_1d219dc25_pushErr(_self_.ptr(), (*(_214133_v)).get()._field_Value.get()._field_Expr.get()._field_Token, jule::Str("@ is invalid data-type for constant", 35), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		(*(_214133_v)).get()._field_Value.get()._field_Data.get()._field_Constant=nullptr;
	};
	if ((_1d21d6202_Tup((*(_214133_v)).get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
		(*(_214133_v)).get()._field_Kind.get()._field_Kind=nullptr;
	};
}



inline void _1d21b3a92_checkTypeVar(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d21bb65a_Var>* _220037_decl, jule::Trait<_1d2200172_Lookup> _220053_l) {
	if (((*(_220037_decl)).get()._field_Binded || (!(_1d21bba23_IsInitialized((*(_220037_decl)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1d040a813_Eval> _220517_eval = nullptr;;
	if (((*(_220037_decl)).get()._field_Kind != nullptr)) {
		_220517_eval=_1d21a5303_evalpd(_self_, _220053_l, (*(_220037_decl)).get()._field_Kind.get()._field_Kind, (*(_220037_decl)));
	} else {
		_220517_eval=_1d21a5303_evalpd(_self_, _220053_l, nullptr, (*(_220037_decl)));
	};
	_220517_eval.get()._field_immutable=(!((*(_220037_decl)).get()._field_Mutable));
	(*(_220037_decl)).get()._field_Value.get()._field_Data=_1d01dac53_evalExpr(_220517_eval, (*(_220037_decl)).get()._field_Value.get()._field_Expr);
	if (((*(_220037_decl)).get()._field_Value.get()._field_Data == nullptr)) {
		return;;
	};
	_1d21b3773_checkVar(_self_, _220037_decl);
}



inline void _1d21b3c6d_checkGlobalTypes(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7427639:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _222121_decl = *it;
			{
				if (((_1d21bba23_IsInitialized(_222121_decl.ptr()) && (_222121_decl.get()._field_Value.get()._field_Data == nullptr)) || (_1d21bbc87_IsTypeInferred(_222121_decl.ptr()) && (_222121_decl.get()._field_Kind.get()._field_Kind == nullptr)))) {
					_1d21b3a92_checkTypeVar(_self_, &(_222121_decl), jule::Trait<_1d2200172_Lookup>(_self_, 3));
				};
			}
			_iter_next_1b7427639:;
			++it;
			goto _iter_begin_1b7427639;
		}
		_iter_end_1b7427639:;
	};
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d21b4125_readyToCheckFn(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _223239_s, jule::Ptr<_1d06242bd_Fn>* _223259_f) {
	jule::Ptr<_1d0626e6e_FnIns> _223317_ins = _1d062591d_instance((*(_223259_f)));;
	if (((*(_223259_f)).get()._field_Instances.len() != 0LL)) {
		return _223317_ins;;
	};
	_223317_ins.get()._field_Owner=(*(_223239_s));
	_1d0625be8_appendInstance((*(_223259_f)).ptr(), &(_223317_ins));
	_223317_ins.get()._field_reloaded=true;
	if (_1d21a837d_reloadFnInsTypes(_self_, _223317_ins)) {
		return _223317_ins;;
	};
	return nullptr;;
}



inline void _1d21b4444_checkTypeMethod(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _224640_s, jule::Ptr<_1d06242bd_Fn>* _224660_f) {
	if (((*(_224660_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _225117_ins = (*(_224660_f)).get()._field_Instances[0LL];;
	if ((_225117_ins.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1d21b6b1c_checkFnIns(_self_, &(_225117_ins));
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d21b4895_checkStructInsOp(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _225941_s, jule::Ptr<_1d06242bd_Fn>* _225961_f, jule::Fn<jule::Bool(jule::Ptr<_1d06242bd_Fn>)> _225969_p) {
	if (((((*(_225961_f)) == nullptr) || ((*(_225961_f)).get()._field_Generics.len() > 0LL)) || (!(_225969_p((*(_225961_f))))))) {
		return nullptr;;
	};
	return (*(_225961_f)).get()._field_Instances[0LL];;
}



inline jule::Bool _1d21b4c4c_checkStructEnv(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _226939_s, jule::Ptr<_22be1281d_Token> _226958_errorToken) {
	jule::Bool __jule_func_result = false;
	_1d21e3187_typeChecker _227017_tc = _1d21e3187_typeChecker{._field_s=(*(_226939_s)).get()._field_Decl.get()._field_sema, ._field_rootLookup=jule::Trait<_1d2200172_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_lookup=jule::Trait<_1d2200172_Lookup>((*(_226939_s)).get()._field_Decl.get()._field_sema, 3), ._field_referencer=jule::new_ptr<_1d21e22a7_referencer>(_1d21e22a7_referencer{._field_ident=(*(_226939_s)).get()._field_Decl.get()._field_Ident, ._field_owner=jule::Any((*(_226939_s)).get()._field_Decl, &__jule_any_type66), }), ._field_refers=(*(_226939_s)).get()._field_Refers, };;
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		_227017_tc._field_useGenerics=jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>::alloc(0LL, (*(_226939_s)).get()._field_Generics.len());
		{
			auto expr = &((*(_226939_s)).get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7430de5:;
			if (it != expr_end) {
				jule::I64 _228318_i = it - expr->begin();
				jule::Ptr<_1d21d05b4_InsGeneric> _228325_g = *it;
				{
					jule::Ptr<_1d05eb509_GenericDecl> _228425_decl = (*(_226939_s)).get()._field_Decl.get()._field_Generics[_228318_i];;
					_227017_tc._field_useGenerics = jule::alloc_for_append(_227017_tc._field_useGenerics,1);_227017_tc._field_useGenerics.__push(jule::new_ptr<_1d21d10ed_TypeAlias>(_1d21d10ed_TypeAlias{._field_Token=_228425_decl.get()._field_Token, ._field_Ident=_228425_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_228325_g.get()._field_Kind}), }));;
				}
				_iter_next_1b7430de5:;
				++it;
				_228318_i++;
				goto _iter_begin_1b7430de5;
			}
			_iter_end_1b7430de5:;
		};
	};
	jule::Ptr<_1d040428a_SymbolTable> _229317_oldFile = _self_.get()._field_file;;
	__JULE_DEFER({
		_1d219d85c_setCurrentFile(_self_.ptr(), _229317_oldFile);
	});;
	if ((_self_.get()._field_file.get()._field_File != (*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File)) {
		jule::Ptr<_1d040428a_SymbolTable> _229721_file = _1d219a194_findFile(&(_self_.get()._field_files), &((*(_226939_s)).get()._field_Decl.get()._field_Token.get()._field_File));;
		if ((_229721_file != nullptr)) {
			_1d219d85c_setCurrentFile(_self_.ptr(), _229721_file);
		};
	};
	if (((*(_226939_s)).get()._field_Generics.len() > 0LL)) {
		jule::Ptr<_1d216c70a_constraintChecker> _230421_cc = _1d21a3e7d_constraintChecker(_self_);;
		_230421_cc.get()._field_et=_226958_errorToken;
		_230421_cc.get()._field_si=(*(_226939_s));
		_230421_cc.get()._field_genericsA=_227017_tc._field_useGenerics;
		_230421_cc.get()._field_uniq=true;
		if ((!(_1d216d5da_check(_230421_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*(_226939_s)).get()._field_Statics.len() > 0LL)) {
		jule::I64 _231721_n = _self_.get()._field_errors.len();;
		_self_.get()._field_files[0LL].get()._field_TypeAliases=jule::append(_227017_tc._field_useGenerics,_self_.get()._field_files[0LL].get()._field_TypeAliases);
		{
			auto expr = &((*(_226939_s)).get()._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b743743a:;
			if (it != expr_end) {
				jule::Ptr<_1d21bb65a_Var> _231925_v = *it;
				{
					_1d21aedbd_checkVarDecl(_self_, &(_231925_v), jule::Trait<_1d2200172_Lookup>(_self_, 3));
					_1d21b3a92_checkTypeVar(_self_, &(_231925_v), jule::Trait<_1d2200172_Lookup>(_self_, 3));
					__jule_func_result=(((_self_.get()._field_errors.len() - _231721_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1b743743a:;
				++it;
				goto _iter_begin_1b743743a;
			}
			_iter_end_1b743743a:;
		};
		_self_.get()._field_files[0LL].get()._field_TypeAliases=_self_.get()._field_files[0LL].get()._field_TypeAliases.slice(_227017_tc._field_useGenerics.len());
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1d040a813_Eval> _233017_eval = _1d21a59b8_eval(_self_, jule::Trait<_1d2200172_Lookup>(_self_, 3));;
	(*(_226939_s)).get()._field_Comparable=(!((*(_226939_s)).get()._field_Decl.get()._field_Binded));
	{
		auto expr = &((*(_226939_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7439ea9:;
		if (it != expr_end) {
			jule::Ptr<_1d06111de_FieldIns> _233221_f = *it;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _233321_kind = _1d21ea0d4_checkDecl(&_227017_tc, &(_233221_f.get()._field_Decl.get()._field_Kind.get()._field_Decl));;
				__jule_func_result=((_233321_kind != nullptr) && __jule_func_result);
				if ((_233321_kind == nullptr)) {
					if (((_self_ != (*(_226939_s)).get()._field_Decl.get()._field_sema) && ((*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors.len() > 0LL))) {
						_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors);
						(*(_226939_s)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
					};
					goto _iter_next_1b7439ea9;
				};
				_233221_f.get()._field_Kind=_233321_kind;
				(*(_226939_s)).get()._field_Mutable=((*(_226939_s)).get()._field_Mutable || ((!(_233221_f.get()._field_Decl.get()._field_Mutable)) && _1d21d35d9_Mutable(_233221_f.get()._field_Kind.ptr())));
				(*(_226939_s)).get()._field_Comparable=((*(_226939_s)).get()._field_Comparable && _1d21d3375_Comparable(_233221_f.get()._field_Kind.ptr()));
				_1d21b2eae_checkStructInsDeriveClone(_self_.ptr(), (*(_226939_s)));
				if ((_233221_f.get()._field_Decl.get()._field_Default == nullptr)) {
					goto _iter_next_1b7439ea9;
				};
				_233017_eval.get()._field_prefix=_233221_f.get()._field_Kind;
				_233017_eval.get()._field_field=_233221_f;
				_233221_f.get()._field_Default=_1d01dac53_evalExpr(_233017_eval, _233221_f.get()._field_Decl.get()._field_Default);
				if ((_233221_f.get()._field_Default == nullptr)) {
					goto _iter_next_1b7439ea9;
				};
				;
				_1d21a5eb3_checkAssignType(_self_, false, &(_233221_f.get()._field_Kind), &(_233221_f.get()._field_Default), _233221_f.get()._field_Decl.get()._field_Default.get()._field_Token);
			}
			_iter_next_1b7439ea9:;
			++it;
			goto _iter_begin_1b7439ea9;
		}
		_iter_end_1b7439ea9:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d21b5104_precheckStructIns(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _236742_s, jule::Ptr<_22be1281d_Token> _236761_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1d21b4c4c_checkStructEnv(_self_, _236742_s, _236761_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_236742_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74419d8:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _237221_f = *it;
			{
				if ((_237221_f.get()._field_Generics.len() == 0LL)) {
					if ((_1d21b4125_readyToCheckFn(_self_, _236742_s, &(_237221_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1b74419d8:;
			++it;
			goto _iter_begin_1b74419d8;
		}
		_iter_end_1b74419d8:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d21b5379_checkStructIns(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns>* _238239_s) {
	{
		auto expr = &((*(_238239_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7443226:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _238321_f = *it;
			{
				_1d21b4444_checkTypeMethod(_self_, _238239_s, &(_238321_f));
			}
			_iter_next_1b7443226:;
			++it;
			goto _iter_begin_1b7443226;
		}
		_iter_end_1b7443226:;
	};
}



inline void _1d21b55ee_checkTypeStruct(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _238840_s) {
	if ((*(_238840_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_238840_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_238840_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7444854:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _240121_ins = *it;
			{
				_1d21b5379_checkStructIns(_self_, &(_240121_ins));
			}
			_iter_next_1b7444854:;
			++it;
			goto _iter_begin_1b7444854;
		}
		_iter_end_1b7444854:;
	};
}



inline void _1d21b57ca_checkStructTypes(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7444ee7:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _240721_s = *it;
			{
				_1d21b55ee_checkTypeStruct(_self_, &(_240721_s));
			}
			_iter_next_1b7444ee7:;
			++it;
			goto _iter_begin_1b7444ee7;
		}
		_iter_end_1b7444ee7:;
	};
}



inline void _1d21b5a72_checkStructInsOperators(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0611bd4_StructIns> _241247_s) {
	{
		auto expr = &(_241247_s.get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74461b3:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _241321_m = *it;
			{
				{
					auto &_match_expr{ _241321_m.get()._field_Ident };
					
					if (_match_expr == jule::Str("Eq", 2)) {
						_case_begin_1b7446e1c:;
						{
							_241247_s.get()._field_Operators._field_Eq=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21bd409_Eq);
							_241247_s.get()._field_Comparable=(_241247_s.get()._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str("Gt", 2)) {
						_case_begin_1b7446e83:;
						{
							_241247_s.get()._field_Operators._field_Gt=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21bd6a1_Gt);
						}
					}
					else if (_match_expr == jule::Str("GtEq", 4)) {
						_case_begin_1b7446ee9:;
						{
							_241247_s.get()._field_Operators._field_GtEq=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21bd948_GtEq);
						}
					}
					else if (_match_expr == jule::Str("Lt", 2)) {
						_case_begin_1b7447071:;
						{
							_241247_s.get()._field_Operators._field_Lt=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21bdbe0_Lt);
						}
					}
					else if (_match_expr == jule::Str("LtEq", 4)) {
						_case_begin_1b74470e8:;
						{
							_241247_s.get()._field_Operators._field_LtEq=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21bde87_LtEq);
						}
					}
					else if (_match_expr == jule::Str("Shl", 3)) {
						_case_begin_1b7447170:;
						{
							_241247_s.get()._field_Operators._field_Shl=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21be570_Shl);
						}
					}
					else if (_match_expr == jule::Str("Shr", 3)) {
						_case_begin_1b74471e7:;
						{
							_241247_s.get()._field_Operators._field_Shr=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21be817_Shr);
						}
					}
					else if (_match_expr == jule::Str("Add", 3)) {
						_case_begin_1b744726e:;
						{
							_241247_s.get()._field_Operators._field_Add=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21beaae_Add);
						}
					}
					else if (_match_expr == jule::Str("Sub", 3)) {
						_case_begin_1b74472e6:;
						{
							_241247_s.get()._field_Operators._field_Sub=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21bed56_Sub);
						}
					}
					else if (_match_expr == jule::Str("Div", 3)) {
						_case_begin_1b744736d:;
						{
							_241247_s.get()._field_Operators._field_Div=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c00ed_Div);
						}
					}
					else if (_match_expr == jule::Str("Mul", 3)) {
						_case_begin_1b74473e5:;
						{
							_241247_s.get()._field_Operators._field_Mul=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c0395_Mul);
						}
					}
					else if (_match_expr == jule::Str("Mod", 3)) {
						_case_begin_1b744746c:;
						{
							_241247_s.get()._field_Operators._field_Mod=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c063c_Mod);
						}
					}
					else if (_match_expr == jule::Str("BitAnd", 6)) {
						_case_begin_1b74474e4:;
						{
							_241247_s.get()._field_Operators._field_BitAnd=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c08d4_BitAnd);
						}
					}
					else if (_match_expr == jule::Str("BitOr", 5)) {
						_case_begin_1b744756b:;
						{
							_241247_s.get()._field_Operators._field_BitOr=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c0b7b_BitOr);
						}
					}
					else if (_match_expr == jule::Str("BitXor", 6)) {
						_case_begin_1b74475e3:;
						{
							_241247_s.get()._field_Operators._field_BitXor=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c0e23_BitXor);
						}
					}
					else if (_match_expr == jule::Str("Neg", 3)) {
						_case_begin_1b744766a:;
						{
							_241247_s.get()._field_Operators._field_Neg=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c150b_Neg);
						}
					}
					else if (_match_expr == jule::Str("Pos", 3)) {
						_case_begin_1b74476e2:;
						{
							_241247_s.get()._field_Operators._field_Pos=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c17a3_Pos);
						}
					}
					else if (_match_expr == jule::Str("BitNot", 6)) {
						_case_begin_1b7447769:;
						{
							_241247_s.get()._field_Operators._field_BitNot=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c1a4a_BitNot);
						}
					}
					else if (_match_expr == jule::Str("AddAssign", 9)) {
						_case_begin_1b74477e1:;
						{
							_241247_s.get()._field_Operators._field_AddAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c2133_AddAssign);
						}
					}
					else if (_match_expr == jule::Str("SubAssign", 9)) {
						_case_begin_1b7447868:;
						{
							_241247_s.get()._field_Operators._field_SubAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c23ca_SubAssign);
						}
					}
					else if (_match_expr == jule::Str("DivAssign", 9)) {
						_case_begin_1b74478e0:;
						{
							_241247_s.get()._field_Operators._field_DivAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c2672_DivAssign);
						}
					}
					else if (_match_expr == jule::Str("MulAssign", 9)) {
						_case_begin_1b7447967:;
						{
							_241247_s.get()._field_Operators._field_MulAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c2919_MulAssign);
						}
					}
					else if (_match_expr == jule::Str("ModAssign", 9)) {
						_case_begin_1b74479de:;
						{
							_241247_s.get()._field_Operators._field_ModAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c2bb1_ModAssign);
						}
					}
					else if (_match_expr == jule::Str("ShlAssign", 9)) {
						_case_begin_1b7447a66:;
						{
							_241247_s.get()._field_Operators._field_ShlAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c2e58_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str("ShrAssign", 9)) {
						_case_begin_1b7447add:;
						{
							_241247_s.get()._field_Operators._field_ShrAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c3200_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitOrAssign", 11)) {
						_case_begin_1b7447b65:;
						{
							_241247_s.get()._field_Operators._field_BitOrAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c3497_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str("BitAndAssign", 12)) {
						_case_begin_1b7447bdc:;
						{
							_241247_s.get()._field_Operators._field_BitAndAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c373e_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str("BitXorAssign", 12)) {
						_case_begin_1b7447c64:;
						{
							_241247_s.get()._field_Operators._field_BitXorAssign=_1d21b4895_checkStructInsOp(_self_, &(_241247_s), &(_241321_m), static__1d21c39d6_BitXorAssign);
						}
					}
					_match_end_1b74469ee:;
				};
			}
			_iter_next_1b74461b3:;
			++it;
			goto _iter_begin_1b74461b3;
		}
		_iter_end_1b74461b3:;
	};
}



inline void _1d21b5d08_precheckStructType(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d060ddbd_Struct>* _247643_s) {
	if ((*(_247643_s)).get()._field_Binded) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_247643_s)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1d0611bd4_StructIns> _248721_ins = _1d060e330_instance((*(_247643_s)));;
		_248721_ins.get()._field_Checked=true;
		_1d060e60a_appendInstance((*(_247643_s)).ptr(), &(_248721_ins));
		_1d21b5104_precheckStructIns(_self_, &(_248721_ins), nullptr);
	};
	_1d21b5a72_checkStructInsOperators(_self_, (*(_247643_s)).get()._field_Instances[0LL]);
}



inline void _1d21b5ed4_precheckStructTypes(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7458989:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _249721_s = *it;
			{
				_1d21b5d08_precheckStructType(_self_, &(_249721_s));
			}
			_iter_next_1b7458989:;
			++it;
			goto _iter_begin_1b7458989;
		}
		_iter_end_1b7458989:;
	};
}



inline void _1d21b6259_checkRets(_1d219b34e_Sema* _self_, jule::Ptr<_1d0626e6e_FnIns>* _250233_f) {
	if (_1d0624730_IsVoid((*(_250233_f)).get()._field_Decl.ptr())) {
		return;;
	};
	_1d21b8404_missingRetChecker _250613_mrc = static__1d21b87bc_new();;
	jule::Bool _250713_ok = _1d21b97ce_check(&_250613_mrc, (*(_250233_f)).get()._field_Scope);;
	if ((!(_250713_ok))) {
		_1d219dc25_pushErr(_self_, (*(_250233_f)).get()._field_Decl.get()._field_Token, jule::Str("missing return at end of function", 33), jule::Slice<jule::Any>());
	};
}



inline void _1d21b6578_checkFnInsSc(_1d219b34e_Sema* _self_, jule::Ptr<_1d0626e6e_FnIns>* _251336_f, jule::Ptr<_1d217b241_scopeChecker>* _251352_sc) {
	_1d21997ae_appendRetVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1d2199a67_appendParamVars(&((*(_251352_sc)).get()._field_table.get()._field_Vars), _251336_f);
	_1d2199d42_appendGenericTypeAliases(&((*(_251352_sc)).get()._field_table.get()._field_TypeAliases), _251336_f);
	_1d218b185_check((*(_251352_sc)), &((*(_251336_f)).get()._field_Decl.get()._field_Scope), &((*(_251336_f)).get()._field_Scope));
	if ((!(_1d217da90_stopped((*(_251352_sc)).ptr())))) {
		_1d21b6259_checkRets(_self_, _251336_f);
	};
}



inline void _1d21b6897_checkFnInsCaller(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0626e6e_FnIns>* _252641_f, jule::Ptr<_22be1281d_Token> _252656_caller) {
	if ((*(_252641_f)).get()._field_Decl.get()._field_Binded) {
		return;;
	};
	jule::Ptr<_1d040428a_SymbolTable> _253117_old = (*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_file;;
	__JULE_DEFER({
		_1d219d85c_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253117_old);
	});;
	jule::Ptr<_1d040428a_SymbolTable> _253317_file = _1d219a194_findFile(&((*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_files), &((*(_252641_f)).get()._field_Decl.get()._field_Token.get()._field_File));;
	if ((_253317_file != nullptr)) {
		_1d219d85c_setCurrentFile((*(_252641_f)).get()._field_Decl.get()._field_sema.ptr(), _253317_file);
	};
	jule::Ptr<_1d217b241_scopeChecker> _253817_sc = _1d21719c8_newScopeChecker(&((*(_252641_f)).get()._field_Decl.get()._field_sema), (*(_252641_f)));;
	_253817_sc.get()._field_calledFrom=_252656_caller;
	_1d21b6578_checkFnInsSc(_self_.ptr(), _252641_f, &(_253817_sc));
	if (((*(_252641_f)).get()._field_Decl.get()._field_sema != _self_)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,(*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors);
		(*(_252641_f)).get()._field_Decl.get()._field_sema.get()._field_errors=nullptr;
	};
}



inline void _1d21b6b1c_checkFnIns(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d0626e6e_FnIns>* _254835_f) {
	_1d21b6897_checkFnInsCaller(_self_, _254835_f, nullptr);
}



inline void _1d21b6d92_checkTypeFn(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _255236_f) {
	if ((*(_255236_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_255236_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_255236_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b746360e:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _256221_ins = *it;
			{
				_1d21b6b1c_checkFnIns(_self_, &(_256221_ins));
			}
			_iter_next_1b746360e:;
			++it;
			goto _iter_begin_1b746360e;
		}
		_iter_end_1b746360e:;
	};
}



inline void _1d21b7117_checkTestFn(_1d219b34e_Sema* _self_, jule::Ptr<_1d0626e6e_FnIns>* _256735_f) {
	if ((*(_256735_f)).get()._field_Decl.get()._field_Public) {
		_1d219dc25_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("test function cannot be public", 30), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_, jule::Str("dont use identifier which is starts with capital letter to avoid define as public", 81), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*(_256735_f)).get()._field_Decl.get()._field_Unsafety || (!(_1d0624730_IsVoid((*(_256735_f)).get()._field_Decl.ptr())))) || ((*(_256735_f)).get()._field_Decl.get()._field_Generics.len() != 0LL)) || ((*(_256735_f)).get()._field_Params.len() != 1LL)) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable) || (*(_256735_f)).get()._field_Decl.get()._field_Params[0LL].get()._field_Reference)) {
		_1d219dc25_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d21dccec_Sptr> _258517_sptr = _1d21d47c7_Sptr((*(_256735_f)).get()._field_Params[0LL].get()._field_Kind.ptr());;
	if ((_258517_sptr == nullptr)) {
		_1d219dc25_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _259213_s = _1d21d59b5_Struct(_258517_sptr.get()._field_Elem.ptr());;
	if (((_259213_s == nullptr) || (!(_1d2197e72_isStdPackage(_259213_s.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("testing", 7)))))) {
		_1d219dc25_pushErr(_self_, (*(_256735_f)).get()._field_Decl.get()._field_Token, jule::Str("wrong test function declaration", 31), jule::Slice<jule::Any>());
		_1d219e044_pushSuggestion(_self_, jule::Str("use expected test function declaration: fn(t: &std::testing::T)", 63), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1d21b738c_precheckTypeFn(jule::Ptr<_1d219b34e_Sema> _self_, jule::Ptr<_1d06242bd_Fn>* _260039_f) {
	if ((*(_260039_f)).get()._field_Binded) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*(_260039_f)).get()._field_Instances.len() == 0LL)) {
		jule::Ptr<_1d0626e6e_FnIns> _261121_ins = _1d06256a9_instanceForce((*(_260039_f)));;
		(*(_260039_f)).get()._field_Instances = jule::alloc_for_append((*(_260039_f)).get()._field_Instances,1);(*(_260039_f)).get()._field_Instances.__push(_261121_ins);;
		jule::Bool _261317_ok = _1d21a837d_reloadFnInsTypes(_self_, _261121_ins);;
		_261121_ins.get()._field_reloaded=true;
		if ((_261317_ok && _1d21eb58b_hasDirective(&((*(_260039_f)).get()._field_Directives), jule::Str("test", 4)))) {
			_1d21b7117_checkTestFn(_self_.ptr(), &(_261121_ins));
		};
	};
}



inline void _1d21b7568_precheckFnTypes(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b746d350:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> _262421_decl = *it;
			{
				{
					auto expr = &(_262421_decl.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b746dbad:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _262525_m = *it;
						{
							_1d21b738c_precheckTypeFn(_self_, &(_262525_m));
						}
						_iter_next_1b746dbad:;
						++it;
						goto _iter_begin_1b746dbad;
					}
					_iter_end_1b746dbad:;
				};
			}
			_iter_next_1b746d350:;
			++it;
			goto _iter_begin_1b746d350;
		}
		_iter_end_1b746d350:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b746d7e5:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _262921_decl = *it;
			{
				_1d21b738c_precheckTypeFn(_self_, &(_262921_decl));
			}
			_iter_next_1b746d7e5:;
			++it;
			goto _iter_begin_1b746d7e5;
		}
		_iter_end_1b746d7e5:;
	};
}



inline void _1d21b7744_checkFnTypes(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b746ea05:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _263621_decl = *it;
			{
				_1d21b6d92_checkTypeFn(_self_, &(_263621_decl));
			}
			_iter_next_1b746ea05:;
			++it;
			goto _iter_begin_1b746ea05;
		}
		_iter_end_1b746ea05:;
	};
}



inline void _1d21b7920_checkPackageTypes(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7470b6b:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _264421_f = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _264421_f);
				_1d21b3c6d_checkGlobalTypes(_self_);
				_1d21b7568_precheckFnTypes(_self_);
				_1d21b5ed4_precheckStructTypes(_self_);
			}
			_iter_next_1b7470b6b:;
			++it;
			goto _iter_begin_1b7470b6b;
		}
		_iter_end_1b7470b6b:;
	};
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7471e14:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _265521_f = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _265521_f);
				_1d21b7744_checkFnTypes(_self_);
				_1d21b57ca_checkStructTypes(_self_);
			}
			_iter_next_1b7471e14:;
			++it;
			goto _iter_begin_1b7471e14;
		}
		_iter_end_1b7471e14:;
	};
}



inline void _1d21b7aeb_setFileSemaFields(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_file.get()._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7473014:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _266321_f = *it;
			{
				_266321_f.get()._field_sema=_self_;
			}
			_iter_next_1b7473014:;
			++it;
			goto _iter_begin_1b7473014;
		}
		_iter_end_1b7473014:;
	};
	{
		auto expr = &(_self_.get()._field_file.get()._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7473344:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _266621_st = *it;
			{
				_266621_st.get()._field_sema=_self_;
			}
			_iter_next_1b7473344:;
			++it;
			goto _iter_begin_1b7473344;
		}
		_iter_end_1b7473344:;
	};
}



inline void _1d21b7cc7_setSemaFields(jule::Ptr<_1d219b34e_Sema> _self_) {
	{
		auto expr = &(_self_.get()._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7473d7d:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _267221_file = *it;
			{
				_1d219d85c_setCurrentFile(_self_.ptr(), _267221_file);
				_1d21b7aeb_setFileSemaFields(_self_);
			}
			_iter_next_1b7473d7d:;
			++it;
			goto _iter_begin_1b7473d7d;
		}
		_iter_end_1b7473d7d:;
	};
}



inline void _1d21b804c_check(jule::Ptr<_1d219b34e_Sema> _self_, jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _267830_files) {
	_self_.get()._field_files=(*(_267830_files));
	_1d21a2388_checkImports(_self_.ptr());
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d21b7cc7_setSemaFields(_self_);
	_1d21a2cc3_checkInherits(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d21a2740_implImpls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d21a291b_checkEnums(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d21b319b_checkPackageDecls(_self_);
	if ((_self_.get()._field_errors.len() != 0LL)) {
		return;;
	};
	_1d21b7920_checkPackageTypes(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d219b34e_Sema _Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "flags:" << _Src._field_flags << ", ";
	_Stream << "meta:" << _Src._field_meta;
	_Stream << "}";
	return _Stream;
}



inline _1d21b8404_missingRetChecker static__1d21b87bc_new(void) {
	return _1d21b8404_missingRetChecker{._field_breaked=jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU, 0), };;
}



inline jule::Bool _1d21b8a97_checkConditional(_1d21b8404_missingRetChecker* _self_, jule::Ptr<_1d217516e_Conditional> _272635_c) {
	{
		auto expr = &(_272635_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7478558:;
		if (it != expr_end) {
			jule::Ptr<_1d2174a0e_If> _272721_elif = *it;
			{
				if ((_272721_elif == nullptr)) {
					return false;;
				};
				if ((!(_1d21b94c1_checkScope(_self_, _272721_elif.get()._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1b7478558:;
			++it;
			goto _iter_begin_1b7478558;
		}
		_iter_end_1b7478558:;
	};
	return ((_272635_c.get()._field_Default != nullptr) && _1d21b94c1_checkScope(_self_, _272635_c.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1d21b8da5_checkMatch(_1d21b8404_missingRetChecker* _self_, jule::Ptr<_1d217842a_Match> _273829_m) {
	{
		auto expr = &(_273829_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b747a1e7:;
		if (it != expr_end) {
			jule::Ptr<_1d2178e75_Case> _273921_c = *it;
			{
				if ((_273921_c == nullptr)) {
					return false;;
				};
				jule::I64 _274317_n = (*(_self_))._field_breaked.len();;
				jule::Bool _274417_ok = _1d21b94c1_checkScope(_self_, _273921_c.get()._field_Scope);;
				{
					
					if ((_274317_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1b747bbee:;
						{
							return false;;
						}
					}
					else if ((!(_274417_ok))) {
						_case_begin_1b747bc65:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1b747bccb;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1b747bccb:;
						{
							(*(_self_))._field_falled=false;
							if ((_273921_c.get()._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1b747a1e7;
						}
					}
					_match_end_1b747b1c6:;
				};
			}
			_iter_next_1b747a1e7:;
			++it;
			goto _iter_begin_1b747a1e7;
		}
		_iter_end_1b747a1e7:;
	};
	return ((_273829_m.get()._field_Default != nullptr) && _1d21b94c1_checkScope(_self_, _273829_m.get()._field_Default.get()._field_Scope));;
}



inline jule::Bool _1d21b91b3_checkInfIter(_1d21b8404_missingRetChecker* _self_, jule::Ptr<_1d217545a_InfIter> _276431_it) {
	jule::I64 _276513_n = (*(_self_))._field_breaked.len();;
	if (_1d21b94c1_checkScope(_self_, _276431_it.get()._field_Scope)) {
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
		return true;;
	};
	if ((_276513_n != (*(_self_))._field_breaked.len())) {
		jule::Uintptr _277117_itaddr = static_cast<jule::Uintptr>(_276431_it);;
		{
			auto expr = (*(_self_))._field_breaked.slice(_276513_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b7480494:;
			if (it != expr_end) {
				jule::Uintptr _277220_addr = *it;
				{
					if ((_277117_itaddr == _277220_addr)) {
						(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
						return false;;
					};
				}
				_iter_next_1b7480494:;
				++it;
				goto _iter_begin_1b7480494;
			}
			_iter_end_1b7480494:;
		};
		(*(_self_))._field_breaked=(*(_self_))._field_breaked.slice(0LL, _276513_n);
	};
	return true;;
}



inline jule::Bool _1d21b94c1_checkScope(_1d21b8404_missingRetChecker* _self_, jule::Ptr<_1d2174613_Scope> _278329_s) {
	if ((_278329_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_278329_s.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7481aa0:;
		if (it != expr_end) {
			jule::Any _278721_st = *it;
			{
				{
					auto &_match_expr{ _278721_st };
					
					if (_match_expr.type == &__jule_any_type49) {
						_case_begin_1b7482881:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type50) {
						_case_begin_1b748294c:;
						{
							jule::Uintptr _279321_addr = _278721_st.cast_ptr<_1d2176a66_BreakSt>(&__jule_any_type50).get()._field_It;;
							if ((_279321_addr != 0LLU)) {
								(*(_self_))._field_breaked = jule::alloc_for_append((*(_self_))._field_breaked,1);(*(_self_))._field_breaked.__push(_279321_addr);;
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type42) {
						_case_begin_1b74829b3:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type37) {
						_case_begin_1b7482a29:;
						{
							if (_1d21b91b3_checkInfIter(_self_, _278721_st.cast_ptr<_1d217545a_InfIter>(&__jule_any_type37))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type51) {
						_case_begin_1b7482a90:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1b7482b06:;
						{
							if (_1d21b94c1_checkScope(_self_, _278721_st.cast_ptr<_1d2174613_Scope>(&__jule_any_type22))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type24) {
						_case_begin_1b7482b7d:;
						{
							{
								auto &_match_expr{ _278721_st.cast_ptr<_1d0408c95_Data>(&__jule_any_type24).get()._field_Model };
								
								if (_match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type23) {
									_case_begin_1b7486511:;
									{
										return true;;
									}
								}
								_match_end_1b7486247:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type36) {
						_case_begin_1b7482c05:;
						{
							if (_1d21b8a97_checkConditional(_self_, _278721_st.cast_ptr<_1d217516e_Conditional>(&__jule_any_type36))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1b7482c7c:;
						{
							if (_1d21b8da5_checkMatch(_self_, _278721_st.cast_ptr<_1d217842a_Match>(&__jule_any_type48))) {
								return true;;
							};
						}
					}
					_match_end_1b748274e:;
				};
			}
			_iter_next_1b7481aa0:;
			++it;
			goto _iter_begin_1b7481aa0;
		}
		_iter_end_1b7481aa0:;
	};
	return false;;
}



inline jule::Bool _1d21b97ce_check(_1d21b8404_missingRetChecker* _self_, jule::Ptr<_1d2174613_Scope> _282924_s) {
	return _1d21b94c1_checkScope(_self_, _282924_s);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21b8404_missingRetChecker _Src) {
	_Stream << "missingRetChecker{";
	_Stream << "breaked:" << _Src._field_breaked << ", ";
	_Stream << "falled:" << _Src._field_falled;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21ba615_IterRelation _Src) {
	_Stream << "IterRelation{";
	_Stream << "Range:" << _Src._field_Range;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d21bba23_IsInitialized(_1d21bb65a_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1d21bbc87_IsTypeInferred(_1d21bb65a_Var* _self_) {
	return (((*(_self_))._field_Kind == nullptr) || ((*(_self_))._field_Kind.get()._field_Decl == nullptr));;
}



inline jule::Bool _1d21bbeeb_untypedConstant(_1d21bb65a_Var* _self_) {
	return (_1d21bbc87_IsTypeInferred(_self_) && (*(_self_))._field_Value.get()._field_Data.get()._field_untyped);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21bb65a_Var _Src) {
	_Stream << "Var{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Constant:" << _Src._field_Constant << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Statically:" << _Src._field_Statically << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Value:" << _Src._field_Value << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Directives:" << _Src._field_Directives << ", ";
	_Stream << "IterRelation:" << _Src._field_IterRelation << ", ";
	_Stream << "RetOrder:" << _Src._field_RetOrder << ", ";
	_Stream << "Depends:" << _Src._field_Depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d21bca79_Dispose(jule::Ptr<_1d06242bd_Fn> _1023_f) {
	return ((((((((((_1023_f != nullptr) && (_1023_f.get()._field_Owner != nullptr)) && _1023_f.get()._field_Ident.equal("Dispose", 7)) && (!(_1023_f.get()._field_Statically))) && (!(_1023_f.get()._field_Unsafety))) && _1d0624730_IsVoid(_1023_f.ptr())) && (_1023_f.get()._field_Generics.len() == 0LL)) && (_1023_f.get()._field_Params.len() == 1LL)) && _1023_f.get()._field_Params[0LL].get()._field_Mutable) && (!(_1d0623322_IsRef(_1023_f.get()._field_Params[0LL].ptr()))));;
}



inline jule::Bool static__1d21bcd21_Str(jule::Ptr<_1d06242bd_Fn> _2419_f) {
	if (((((((((((_2419_f == nullptr) || (_2419_f.get()._field_Owner == nullptr)) || (!_2419_f.get()._field_Ident.equal("Str", 3))) || _2419_f.get()._field_Statically) || _2419_f.get()._field_Unsafety) || _1d0624730_IsVoid(_2419_f.ptr())) || (_2419_f.get()._field_Generics.len() != 0LL)) || (_2419_f.get()._field_Params.len() != 1LL)) || _2419_f.get()._field_Params[0LL].get()._field_Mutable) || _1d0623322_IsRef(_2419_f.get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _3817_ins = _2419_f.get()._field_Instances[0LL];;
	jule::Ptr<_1d21d9568_Prim> _3913_prim = _1d21d4563_Prim(_3817_ins.get()._field_Result.ptr());;
	if ((_3913_prim == nullptr)) {
		return false;;
	};
	return _1d21dc79c_IsStr(_3913_prim.ptr());;
}



inline jule::Bool static__1d21bd162_logical(jule::Ptr<_1d06242bd_Fn>* _4624_f, jule::Str _4632_ident) {
	if (((((((((((((((*(_4624_f)) == nullptr) || ((*(_4624_f)).get()._field_Ident != _4632_ident)) || ((*(_4624_f)).get()._field_Owner == nullptr)) || ((*(_4624_f)).get()._field_Instances.len() == 0LL)) || (*(_4624_f)).get()._field_Statically) || (*(_4624_f)).get()._field_Unsafety) || _1d0624730_IsVoid((*(_4624_f)).ptr())) || ((*(_4624_f)).get()._field_Generics.len() != 0LL)) || ((*(_4624_f)).get()._field_Params.len() != 2LL)) || (*(_4624_f)).get()._field_Params[0LL].get()._field_Mutable) || _1d0623322_IsRef((*(_4624_f)).get()._field_Params[0LL].ptr())) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_4624_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _6317_ins = (*(_4624_f)).get()._field_Instances[0LL];;
	jule::Ptr<_1d21d9568_Prim> _6413_prim = _1d21d4563_Prim(_6317_ins.get()._field_Result.ptr());;
	if (((_6413_prim == nullptr) || (!(_1d21dc538_IsBool(_6413_prim.ptr()))))) {
		return false;;
	};
	return (_6317_ins.get()._field_Owner == _1d21d59b5_Struct(_6317_ins.get()._field_Params[1LL].get()._field_Kind.ptr()));;
}



inline jule::Bool static__1d21bd409_Eq(jule::Ptr<_1d06242bd_Fn> _7218_f) {
	return static__1d21bd162_logical(&(_7218_f), jule::Str("Eq", 2));;
}



inline jule::Bool static__1d21bd6a1_Gt(jule::Ptr<_1d06242bd_Fn> _7718_f) {
	return static__1d21bd162_logical(&(_7718_f), jule::Str("Gt", 2));;
}



inline jule::Bool static__1d21bd948_GtEq(jule::Ptr<_1d06242bd_Fn> _8220_f) {
	return static__1d21bd162_logical(&(_8220_f), jule::Str("GtEq", 4));;
}



inline jule::Bool static__1d21bdbe0_Lt(jule::Ptr<_1d06242bd_Fn> _8718_f) {
	return static__1d21bd162_logical(&(_8718_f), jule::Str("Lt", 2));;
}



inline jule::Bool static__1d21bde87_LtEq(jule::Ptr<_1d06242bd_Fn> _9220_f) {
	return static__1d21bd162_logical(&(_9220_f), jule::Str("LtEq", 4));;
}



inline jule::Bool static__1d21be2c8_result(jule::Ptr<_1d06242bd_Fn>* _9623_f, jule::Str _9631_ident) {
	if (((((((((((((((*(_9623_f)) == nullptr) || ((*(_9623_f)).get()._field_Ident != _9631_ident)) || ((*(_9623_f)).get()._field_Owner == nullptr)) || ((*(_9623_f)).get()._field_Instances.len() == 0LL)) || (*(_9623_f)).get()._field_Statically) || (*(_9623_f)).get()._field_Unsafety) || _1d0624730_IsVoid((*(_9623_f)).ptr())) || ((*(_9623_f)).get()._field_Generics.len() != 0LL)) || ((*(_9623_f)).get()._field_Params.len() != 2LL)) || (*(_9623_f)).get()._field_Params[0LL].get()._field_Mutable) || _1d0623322_IsRef((*(_9623_f)).get()._field_Params[0LL].ptr())) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_9623_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _11317_ins = (*(_9623_f)).get()._field_Instances[0LL];;
	return (_1d21d59b5_Struct(_11317_ins.get()._field_Result.ptr()) == _11317_ins.get()._field_Owner);;
}



inline jule::Bool static__1d21be570_Shl(jule::Ptr<_1d06242bd_Fn> _11819_f) {
	return static__1d21be2c8_result(&(_11819_f), jule::Str("Shl", 3));;
}



inline jule::Bool static__1d21be817_Shr(jule::Ptr<_1d06242bd_Fn> _12319_f) {
	return static__1d21be2c8_result(&(_12319_f), jule::Str("Shr", 3));;
}



inline jule::Bool static__1d21beaae_Add(jule::Ptr<_1d06242bd_Fn> _12819_f) {
	return static__1d21be2c8_result(&(_12819_f), jule::Str("Add", 3));;
}



inline jule::Bool static__1d21bed56_Sub(jule::Ptr<_1d06242bd_Fn> _13319_f) {
	return static__1d21be2c8_result(&(_13319_f), jule::Str("Sub", 3));;
}



inline jule::Bool static__1d21c00ed_Div(jule::Ptr<_1d06242bd_Fn> _13819_f) {
	return static__1d21be2c8_result(&(_13819_f), jule::Str("Div", 3));;
}



inline jule::Bool static__1d21c0395_Mul(jule::Ptr<_1d06242bd_Fn> _14319_f) {
	return static__1d21be2c8_result(&(_14319_f), jule::Str("Mul", 3));;
}



inline jule::Bool static__1d21c063c_Mod(jule::Ptr<_1d06242bd_Fn> _14819_f) {
	return static__1d21be2c8_result(&(_14819_f), jule::Str("Mod", 3));;
}



inline jule::Bool static__1d21c08d4_BitAnd(jule::Ptr<_1d06242bd_Fn> _15322_f) {
	return static__1d21be2c8_result(&(_15322_f), jule::Str("BitAnd", 6));;
}



inline jule::Bool static__1d21c0b7b_BitOr(jule::Ptr<_1d06242bd_Fn> _15821_f) {
	return static__1d21be2c8_result(&(_15821_f), jule::Str("BitOr", 5));;
}



inline jule::Bool static__1d21c0e23_BitXor(jule::Ptr<_1d06242bd_Fn> _16322_f) {
	return static__1d21be2c8_result(&(_16322_f), jule::Str("BitXor", 6));;
}



inline jule::Bool static__1d21c1264_unary(jule::Ptr<_1d06242bd_Fn>* _16722_f, jule::Str _16730_ident) {
	if (((((((((((((*(_16722_f)) == nullptr) || ((*(_16722_f)).get()._field_Ident != _16730_ident)) || ((*(_16722_f)).get()._field_Owner == nullptr)) || ((*(_16722_f)).get()._field_Instances.len() == 0LL)) || (*(_16722_f)).get()._field_Statically) || (*(_16722_f)).get()._field_Unsafety) || _1d0624730_IsVoid((*(_16722_f)).ptr())) || ((*(_16722_f)).get()._field_Generics.len() != 0LL)) || ((*(_16722_f)).get()._field_Params.len() != 1LL)) || (*(_16722_f)).get()._field_Params[0LL].get()._field_Mutable) || _1d0623322_IsRef((*(_16722_f)).get()._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _18217_ins = (*(_16722_f)).get()._field_Instances[0LL];;
	return (_1d21d59b5_Struct(_18217_ins.get()._field_Result.ptr()) == _18217_ins.get()._field_Owner);;
}



inline jule::Bool static__1d21c150b_Neg(jule::Ptr<_1d06242bd_Fn> _18719_f) {
	return static__1d21c1264_unary(&(_18719_f), jule::Str("Neg", 3));;
}



inline jule::Bool static__1d21c17a3_Pos(jule::Ptr<_1d06242bd_Fn> _19219_f) {
	return static__1d21c1264_unary(&(_19219_f), jule::Str("Pos", 3));;
}



inline jule::Bool static__1d21c1a4a_BitNot(jule::Ptr<_1d06242bd_Fn> _19722_f) {
	return static__1d21c1264_unary(&(_19722_f), jule::Str("BitNot", 6));;
}



inline jule::Bool static__1d21c1d8b_assign(jule::Ptr<_1d06242bd_Fn>* _20123_f, jule::Str _20131_ident) {
	if (((((((((((((((*(_20123_f)) == nullptr) || ((*(_20123_f)).get()._field_Ident != _20131_ident)) || ((*(_20123_f)).get()._field_Owner == nullptr)) || ((*(_20123_f)).get()._field_Instances.len() == 0LL)) || (*(_20123_f)).get()._field_Statically) || (*(_20123_f)).get()._field_Unsafety) || (!(_1d0624730_IsVoid((*(_20123_f)).ptr())))) || ((*(_20123_f)).get()._field_Generics.len() != 0LL)) || ((*(_20123_f)).get()._field_Params.len() != 2LL)) || (!((*(_20123_f)).get()._field_Params[0LL].get()._field_Mutable))) || _1d0623322_IsRef((*(_20123_f)).get()._field_Params[0LL].ptr())) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Mutable) || (*(_20123_f)).get()._field_Params[1LL].get()._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1d21c2133_AddAssign(jule::Ptr<_1d06242bd_Fn> _22125_f) {
	return static__1d21c1d8b_assign(&(_22125_f), jule::Str("AddAssign", 9));;
}



inline jule::Bool static__1d21c23ca_SubAssign(jule::Ptr<_1d06242bd_Fn> _22625_f) {
	return static__1d21c1d8b_assign(&(_22625_f), jule::Str("SubAssign", 9));;
}



inline jule::Bool static__1d21c2672_DivAssign(jule::Ptr<_1d06242bd_Fn> _23125_f) {
	return static__1d21c1d8b_assign(&(_23125_f), jule::Str("DivAssign", 9));;
}



inline jule::Bool static__1d21c2919_MulAssign(jule::Ptr<_1d06242bd_Fn> _23625_f) {
	return static__1d21c1d8b_assign(&(_23625_f), jule::Str("MulAssign", 9));;
}



inline jule::Bool static__1d21c2bb1_ModAssign(jule::Ptr<_1d06242bd_Fn> _24125_f) {
	return static__1d21c1d8b_assign(&(_24125_f), jule::Str("ModAssign", 9));;
}



inline jule::Bool static__1d21c2e58_ShlAssign(jule::Ptr<_1d06242bd_Fn> _24625_f) {
	return static__1d21c1d8b_assign(&(_24625_f), jule::Str("ShlAssign", 9));;
}



inline jule::Bool static__1d21c3200_ShrAssign(jule::Ptr<_1d06242bd_Fn> _25125_f) {
	return static__1d21c1d8b_assign(&(_25125_f), jule::Str("ShrAssign", 9));;
}



inline jule::Bool static__1d21c3497_BitOrAssign(jule::Ptr<_1d06242bd_Fn> _25627_f) {
	return static__1d21c1d8b_assign(&(_25627_f), jule::Str("BitOrAssign", 11));;
}



inline jule::Bool static__1d21c373e_BitAndAssign(jule::Ptr<_1d06242bd_Fn> _26128_f) {
	return static__1d21c1d8b_assign(&(_26128_f), jule::Str("BitAndAssign", 12));;
}



inline jule::Bool static__1d21c39d6_BitXorAssign(jule::Ptr<_1d06242bd_Fn> _26628_f) {
	return static__1d21c1d8b_assign(&(_26628_f), jule::Str("BitXorAssign", 12));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21bc408_FuncPattern _Src) {
	_Stream << "FuncPattern{";
	_Stream << "}";
	return _Stream;
}



inline void _1d03e2eb0_pushErr(_1d03e2993_typeCompatibilityChecker* _self_, jule::Str _11726_fmt, jule::Slice<jule::Any> _11739_args) {
	_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _11726_fmt, _11739_args);
}



inline jule::Bool _1d03e3224_checkTrait(_1d03e2993_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d21d2d9c_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21494c8_Trait> _12517_trt = _1d21d5c29_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _12617_ref = false;;
	{
		
		if ((_1d21d47c7_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b74be8e0:;
			{
				_12617_ref=true;
				(*(_self_))._field_src=_1d21d47c7_Sptr((*(_self_))._field_src.ptr()).get()._field_Elem;
				if ((_1d21d59b5_Struct((*(_self_))._field_src.ptr()) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1b74be967;
			}
		}
		else if ((_1d21d59b5_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b74be967:;
			{
				jule::Ptr<_1d0611bd4_StructIns> _13617_s = _1d21d59b5_Struct((*(_self_))._field_src.ptr());;
				if ((!(_1d06103db_IsImplements(_13617_s.get()._field_Decl.ptr(), _12517_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_12617_ref)) && _1d03e1684_traitHasReferenceReceiver(&(_12517_trt)))) {
					_1d03e2eb0_pushErr(_self_, jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d21d5c29_Trait((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1b74be9de:;
			{
				jule::Ptr<_1d21494c8_Trait> _14621_base = _1d21d5c29_Trait((*(_self_))._field_src.ptr());;
				if ((_12517_trt == _14621_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_lookup:;
				{
					auto expr = &(_14621_base.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b74c3c8a:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> _15120_s1 = *it;
						{
							{
								auto expr = &(_12517_trt.get()._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b74c487e:;
								if (it != expr_end) {
									jule::Ptr<_1d060ddbd_Struct> _15224_s2 = *it;
									{
										if ((_15120_s1 == _15224_s2)) {
											goto _iter_next_1b74c3c8a;
										};
									}
									_iter_next_1b74c487e:;
									++it;
									goto _iter_begin_1b74c487e;
								}
								_iter_end_1b74c487e:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1b74c3c8a:;
						++it;
						goto _iter_begin_1b74c3c8a;
					}
					_iter_end_1b74c3c8a:;
				};
				{
					auto expr = &(_12517_trt.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b74c540c:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _15925_m1 = *it;
						{
							jule::Ptr<_1d06242bd_Fn> _16025_m2 = _1d214a375_FindMethod(_14621_base.ptr(), _15925_m1.get()._field_Ident);;
							if ((_16025_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1d0626e6e_FnIns> _16421_m1k = _1d21a7091_getTraitCheckFnKind((*(_self_))._field_s, &(_15925_m1));;
							jule::Ptr<_1d0626e6e_FnIns> _16521_m2k = _1d21a7091_getTraitCheckFnKind((*(_self_))._field_s, &(_16025_m2));;
							if ((!(_1d0627d2c_equalTrait(_16421_m1k, &(_16521_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1b74c540c:;
						++it;
						goto _iter_begin_1b74c540c;
					}
					_iter_end_1b74c540c:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b74be879:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b74be824:;
	};
}



inline jule::Bool _1d03e3488_checkPtr(_1d03e2993_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d21d2d9c_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21e1361_Ptr> _18017_dest = _1d21d4a3b_Ptr((*(_self_))._field_dest.ptr());;
	if (_1d21e1d34_IsUnsafe(_18017_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1d21d2550_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d03e36ec_checkPrim(_1d03e2993_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*(_self_))._field_dest.get()._field_Variadic))) {
		jule::Ptr<_1d21d9568_Prim> _18917_prim = _1d21d4563_Prim((*(_self_))._field_dest.ptr());;
		if (((_18917_prim != nullptr) && _1d21dca11_IsAny(_18917_prim.ptr()))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1d21d2550_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1d03e3aa4_typeEnum(_1d03e2993_typeCompatibilityChecker* _self_, jule::Ptr<_1d214d356_TypeEnum>* _19728_e, jule::Ptr<_1d21d1d46_TypeKind>* _19747_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_19728_e)).get()._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74cac4d:;
		if (it != expr_end) {
			jule::Ptr<_1d214cc90_TypeEnumItem> _19821_item = *it;
			{
				if (_1d21d2550_Equal(_19821_item.get()._field_Kind.get()._field_Kind, (*(_19747_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1d214d356_TypeEnum> _20221_ke = _1d21d5014_TypeEnum(_19821_item.get()._field_Kind.get()._field_Kind.ptr());;
				if ((_20221_ke == nullptr)) {
					goto _iter_next_1b74cac4d;
				};
				if (_1d03e3aa4_typeEnum(_self_, &(_20221_ke), _19747_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1b74cac4d:;
			++it;
			goto _iter_begin_1b74cac4d;
		}
		_iter_end_1b74cac4d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d03e3d18_checkTypeEnum(_1d03e2993_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1d21d2550_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1d214d356_TypeEnum> _21717_e = _1d21d5014_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1d03e3aa4_typeEnum(_self_, &(_21717_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1d03e407c_check(_1d03e2993_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1d21d4a3b_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1d03e3488_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1d21d3ab2_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1d21d2d9c_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1d21d4563_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b74d078b:;
			{
				__jule_func_result = _1d03e36ec_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d5014_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b74d0b76:;
			{
				__jule_func_result = _1d03e3d18_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d5c29_Trait((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1b74d0bdc:;
			{
				__jule_func_result = _1d03e3224_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b74cea10:;
			{
				__jule_func_result = _1d21d2550_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1b74ce867:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d03e2993_typeCompatibilityChecker _Src) {
	_Stream << "typeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline void _1d03e4a2d_pushErr(_1d03e45bb_assignTypeChecker* _self_, jule::Str _25326_fmt, jule::Slice<jule::Any> _25339_args) {
	_1d219dc25_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _25326_fmt, _25339_args);
}



inline jule::Bool _1d03e4c92_checkValidity(_1d03e45bb_assignTypeChecker* _self_) {
	jule::Bool _25817_valid = true;;
	{
		
		if ((_1d21d5751_Fn((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b74d3393:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _26117_f = _1d21d5751_Fn((*(_self_))._field_d.get()._field_Kind.ptr());;
				{
					
					if (_1d0628305_IsBuiltin(_26117_f.ptr())) {
						_case_begin_1b74d47c3:;
						{
							_1d03e4a2d_pushErr(_self_, jule::Str("builtin define cannot use as anonymous function", 47), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (_26117_f.get()._field_Decl.get()._field_Binded) {
						_case_begin_1b74d484a:;
						{
							_1d03e4a2d_pushErr(_self_, jule::Str("binded functions cannot use as anonymous function", 49), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((!(_26117_f.get()._field_Decl.get()._field_Statically)) && _1d0624994_IsMethod(_26117_f.get()._field_Decl.ptr()))) {
						_case_begin_1b74d48c2:;
						{
							_1d03e4a2d_pushErr(_self_, jule::Str("non-static methods cannot use as anonymous function", 51), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					else if (((_26117_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_26117_f.get()._field_Generics.len() == 0LL))) {
						_case_begin_1b74d4949:;
						{
							_1d03e4a2d_pushErr(_self_, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
							_1d219e044_pushSuggestion((*(_self_))._field_s.ptr(), jule::Str("instantiate generic function to use as anonymous function", 57), jule::Slice<jule::Any>());
							_25817_valid=false;
						}
					}
					_match_end_1b74d46e6:;
				};
			}
		}
		else if ((_1d21d6202_Tup((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b74d341a:;
			{
				_1d03e4a2d_pushErr(_self_, jule::Str("tuples cannot assign to single define in same time", 50), jule::Slice<jule::Any>());
				_25817_valid=false;
			}
		}
		_match_end_1b74d32d8:;
	};
	return _25817_valid;;
}



inline jule::Bool _1d03e5006_checkConst(_1d03e45bb_assignTypeChecker* _self_) {
	if (((((!(_1d0409658_IsConst((*(_self_))._field_d.ptr()))) || (_1d21d4563_Prim((*(_self_))._field_dest.ptr()) == nullptr)) || (_1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) == nullptr)) || (!(_1e76e57b7_IsNum(_1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind))))) {
		return false;;
	};
	if ((!__jule_any_type19_compare((*(_self_))._field_d.get()._field_Model, (*(_self_))._field_d.get()._field_Constant))) {
		return false;;
	};
	jule::Str _29813_kind = _1d21d4563_Prim((*(_self_))._field_dest.ptr()).get()._field_Kind;;
	{
		
		if (_1e76e5520_IsFloat(_29813_kind)) {
			_case_begin_1b74daa0a:;
			{
				if ((!(_1d03e19c5_floatAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1d03e4a2d_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else if (_1e76e5201_IsInt(_29813_kind)) {
			_case_begin_1b74daa71:;
			{
				if ((!(_1d03e24dc_intAssignable(_29813_kind, &((*(_self_))._field_d))))) {
					_1d03e4a2d_pushErr(_self_, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
					return false;;
				};
				(*(_self_))._field_d.get()._field_Constant.get()._field_Kind=_29813_kind;
			}
		}
		else {
			_case_begin_1b74da994:;
			{
				return false;;
			}
		}
		_match_end_1b74da93e:;
	};
	return true;;
}



inline jule::Bool _1d03e526a_isPrim(_1d03e45bb_assignTypeChecker* _self_) {
	if (((*(_self_))._field_dest.get()._field_Variadic || (*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)) {
		return false;;
	};
	if ((_1d21d2b38_Binded((*(_self_))._field_dest.ptr()) || _1d21d2b38_Binded((*(_self_))._field_d.get()._field_Kind.ptr()))) {
		return false;;
	};
	return ((_1d21d4563_Prim((*(_self_))._field_dest.ptr()) != nullptr) && (_1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr));;
}



inline jule::Bool _1d03e54ce_checkCompatibility(_1d03e45bb_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b74ded94:;
			{
				return false;;
			}
		}
		else if ((!(_1d03e4c92_checkValidity(_self_)))) {
			_case_begin_1b74dee1b:;
			{
				return false;;
			}
		}
		else if (_1d03e5006_checkConst(_self_)) {
			_case_begin_1b74dee93:;
			{
				return true;;
			}
		}
		else if ((_1d21d4ca0_Enum((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b74e001a:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _34221_dkind = (*(_self_))._field_dest;;
				if ((_1d21d4ca0_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_34221_dkind=_1d21d4ca0_Enum((*(_self_))._field_dest.ptr()).get()._field_Kind.get()._field_Kind;
				} else if ((_1d21d4563_Prim((*(_self_))._field_dest.ptr()) == nullptr)) {
					goto _match_end_1b74dec73;
				};
				if (_1e76e2033_TypesAreCompatible(_1d21d4563_Prim(_1d21d4ca0_Enum((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).get()._field_Kind, _1d21d4563_Prim(_34221_dkind.ptr()).get()._field_Kind)) {
					return true;;
				};
			}
		}
		else if (_1d03e526a_isPrim(_self_)) {
			_case_begin_1b74e0092:;
			{
				jule::Ptr<_1d21d9568_Prim> _35217_dest = _1d21d4563_Prim((*(_self_))._field_dest.ptr());;
				if (_1d21dca11_IsAny(_35217_dest.ptr())) {
					return true;;
				};
				jule::Ptr<_1d21d9568_Prim> _35621_src = _1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1e76e2033_TypesAreCompatible(_35217_dest.get()._field_Kind, _35621_src.get()._field_Kind)) {
					return true;;
				};
			}
		}
		_match_end_1b74dec73:;
	};
	return _1d21a6414_checkTypeCompatibility((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d.get()._field_Kind), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1d03e5743_check(_1d03e45bb_assignTypeChecker* _self_) {
	jule::Bool _36513_ok = _1d03e54ce_checkCompatibility(_self_);;
	if ((_36513_ok && (!((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic)))) {
		_1d21ecd40_applyImplicitCast(&((*(_self_))._field_dest), &((*(_self_))._field_d));
	};
	return _36513_ok;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d03e45bb_assignTypeChecker _Src) {
	_Stream << "assignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b7507252_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b7508808:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b750961c:;
						{
							_38821_elem=_1d21d5278_Arr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b7509188:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05e171e_ArrTypeDecl>(&__jule_any_type75).get()._field_Elem;
				return _1d03e7701_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b750874d:;
	};
	return false;;
}

inline jule::Bool _1b7507582_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b750bbc4:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b750ca71:;
						{
							_38821_elem=_1d21d54dc_Slc((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b750c554:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05e0971_SlcTypeDecl>(&__jule_any_type76).get()._field_Elem;
				return _1d03e7701_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b750bb19:;
	};
	return false;;
}

inline jule::Bool _1b7506a37_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b7510090:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b7510ea3:;
						{
							_38821_elem=_1d21d4a3b_Ptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b7510920:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05e1048_PtrTypeDecl>(&__jule_any_type77).get()._field_Elem;
				return _1d03e7701_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b750eed5:;
	};
	return false;;
}

inline jule::Bool _1b750eab7_annotateConstraintElem(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _38549_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b751313c:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _38821_elem = nullptr;;
				{
					
{
						_case_begin_1b75140c7:;
						{
							_38821_elem=_1d21d47c7_Sptr((*(_38549_k)).ptr()).get()._field_Elem;
						}
					}
					_match_end_1b75139bc:;
				};
				(*(_self_))._field_c=(*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05e0575_SptrTypeDecl>(&__jule_any_type78).get()._field_Elem;
				return _1d03e7701_annotateConstraint(_self_, &(_38821_elem));;
			}
		}
		_match_end_1b7513082:;
	};
	return false;;
}



inline jule::Bool _1d03e6986_annotateConstraintMap(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _40545_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b74e75d8:;
			{
				jule::Ptr<_1d21ded10_Map> _40821_m = _1d21d5e8d_Map((*(_40545_k)).ptr());;
				jule::Ptr<_1d05e1e28_MapTypeDecl> _40921_m2 = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05e1e28_MapTypeDecl>(&__jule_any_type79);;
				(*(_self_))._field_c=_40921_m2.get()._field_Key;
				if ((!(_1d03e7701_annotateConstraint(_self_, &(_40821_m.get()._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=_40921_m2.get()._field_Val;
				__jule_func_result = _1d03e7701_annotateConstraint(_self_, &(_40821_m.get()._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1b74e7561:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d03e6c94_annotateConstraintTup(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _42045_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b74e9c5b:;
			{
				jule::Ptr<_1d05e0c5c_TupleTypeDecl> _42321_tup = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05e0c5c_TupleTypeDecl>(&__jule_any_type80);;
				jule::Ptr<_1d21de2d7_Tuple> _42421_tup2 = _1d21d6202_Tup((*(_42045_k)).ptr());;
				{
					auto expr = &(_42421_tup2.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b74eb147:;
					if (it != expr_end) {
						jule::Ptr<_1d21d1d46_TypeKind> _42525_t2 = *it;
						{
							{
								auto expr = &(_42321_tup.get()._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b74eb90b:;
								if (it != expr_end) {
									jule::Ptr<_1d05de563_TypeDecl> _42629_t = *it;
									{
										(*(_self_))._field_c=_42629_t;
										if (_1d03e7701_annotateConstraint(_self_, &(_42525_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1b74eb90b:;
									++it;
									goto _iter_begin_1b74eb90b;
								}
								_iter_end_1b74eb90b:;
							};
						}
						_iter_next_1b74eb147:;
						++it;
						goto _iter_begin_1b74eb147;
					}
					_iter_end_1b74eb147:;
				};
			}
		}
		_match_end_1b74e7a6c:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d03e70a2_annotateConstraintFn(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _43744_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b74eb6ca:;
			{
				jule::Ptr<_1d0600b90_FnDecl> _44021_pf = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d0600b90_FnDecl>(&__jule_any_type14);;
				jule::Ptr<_1d0626e6e_FnIns> _44121_f = _1d21d5751_Fn((*(_43744_k)).ptr());;
				{
					auto expr = &(_44121_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b74eda2e:;
					if (it != expr_end) {
						jule::I64 _44218_i = it - expr->begin();
						jule::Ptr<_1d06260a0_ParamIns> _44225_fp = *it;
						{
							(*(_self_))._field_c=_44021_pf.get()._field_Params[_44218_i].get()._field_Kind;
							if (_1d03e7701_annotateConstraint(_self_, &(_44225_fp.get()._field_Kind))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1b74eda2e:;
						++it;
						_44218_i++;
						goto _iter_begin_1b74eda2e;
					}
					_iter_end_1b74eda2e:;
				};
				if ((_44021_pf.get()._field_Result != nullptr)) {
					(*(_self_))._field_c=_44021_pf.get()._field_Result.get()._field_Kind;
					if (_1d03e7701_annotateConstraint(_self_, &(_44121_f.get()._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1b74eb675:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d03e73d2_annotateConstraintIdent(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _45847_k) {
	jule::Ptr<_1d05deb29_IdentTypeDecl> _45917_ident = (*(_self_))._field_c.get()._field_Kind.cast_ptr<_1d05deb29_IdentTypeDecl>(&__jule_any_type20);;
	jule::Ptr<_1d0611bd4_StructIns> _46017_s = _1d21d59b5_Struct((*(_45847_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75015e2:;
		if (it != expr_end) {
			jule::I64 _46113_i = it - expr->begin();
			jule::Ptr<_1d05eb509_GenericDecl> _46116_g = *it;
			{
				if ((_46116_g.get()._field_Ident == _45917_ident.get()._field_Ident)) {
					jule::Ptr<_1d21d05b4_InsGeneric> _46325_fg = (*(_self_))._field_f.get()._field_Generics[_46113_i];;
					if ((_46325_fg != nullptr)) {
						return false;;
					};
					_1d03e7a20_pushGeneric(_self_, _45847_k, _46113_i);
					return true;;
				};
				if ((_46017_s == nullptr)) {
					goto _iter_next_1b75015e2;
				};
				jule::Ptr<_1d05de563_TypeDecl> _47321_c = (*(_self_))._field_c;;
				{
					auto expr = &(_45917_ident.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7503d20:;
					if (it != expr_end) {
						jule::Ptr<_1d05de563_TypeDecl> _47425_ig = *it;
						{
							(*(_self_))._field_c=_47425_ig;
							{
								auto expr = &(_46017_s.get()._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b7504a8a:;
								if (it != expr_end) {
									jule::Ptr<_1d21d05b4_InsGeneric> _47629_sg = *it;
									{
										if (_1d03e7701_annotateConstraint(_self_, &(_47629_sg.get()._field_Kind))) {
											return true;;
										};
									}
									_iter_next_1b7504a8a:;
									++it;
									goto _iter_begin_1b7504a8a;
								}
								_iter_end_1b7504a8a:;
							};
						}
						_iter_next_1b7503d20:;
						++it;
						goto _iter_begin_1b7503d20;
					}
					_iter_end_1b7503d20:;
				};
				(*(_self_))._field_c=_47321_c;
			}
			_iter_next_1b75015e2:;
			++it;
			_46113_i++;
			goto _iter_begin_1b75015e2;
		}
		_iter_end_1b75015e2:;
	};
	return false;;
}



inline jule::Bool _1d03e7701_annotateConstraint(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _48742_k) {
	{
		auto &_match_expr{ (*(_self_))._field_c.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b75044c4:;
			{
				return _1d03e73d2_annotateConstraintIdent(_self_, _48742_k);;
			}
		}
		_match_end_1b750446e:;
	};
	{
		
		if ((_1d21d5278_Arr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b75064e8:;
			{
				return _1b7507252_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1d21d54dc_Slc((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b7505e10:;
			{
				return _1b7507582_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1d21d4a3b_Ptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b7505e76:;
			{
				return _1b7506a37_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1d21d47c7_Sptr((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b7505a69:;
			{
				return _1b750eab7_annotateConstraintElem(_self_, _48742_k);;
			}
		}
		else if ((_1d21d5e8d_Map((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b7505ad0:;
			{
				return _1d03e6986_annotateConstraintMap(_self_, _48742_k);;
			}
		}
		else if ((_1d21d5751_Fn((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b7505b46:;
			{
				return _1d03e70a2_annotateConstraintFn(_self_, _48742_k);;
			}
		}
		else if ((_1d21d6202_Tup((*(_48742_k)).ptr()) != nullptr)) {
			_case_begin_1b7505bac:;
			{
				return _1d03e6c94_annotateConstraintTup(_self_, _48742_k);;
			}
		}
		else {
			_case_begin_1b750464a:;
			{
				return false;;
			}
		}
		_match_end_1b75045d4:;
	};
}



inline void _1d03e7a20_pushGeneric(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _51235_k, jule::I64 _51249_i) {
	(*(_self_))._field_f.get()._field_Generics[_51249_i]=jule::new_ptr<_1d21d05b4_InsGeneric>(_1d21d05b4_InsGeneric{._field_Kind=(*(_51235_k)), });
	jule::Ptr<_1d05eb509_GenericDecl> _51417_gd = (*(_self_))._field_f.get()._field_Decl.get()._field_Generics[_51249_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b751678e:;
		if (it != expr_end) {
			jule::Ptr<_1d21d1d46_TypeKind> _51521_ignored = *it;
			{
				if ((_51417_gd.get()._field_Ident == _1d21d2242_Str(_51521_ignored.ptr()))) {
					_51521_ignored.get()._field_Kind=(*(_51235_k)).get()._field_Kind;
				};
			}
			_iter_next_1b751678e:;
			++it;
			goto _iter_begin_1b751678e;
		}
		_iter_end_1b751678e:;
	};
	if (((_51417_gd.get()._field_Constraint == nullptr) || (_51417_gd.get()._field_Constraint.get()._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=_51417_gd.get()._field_Constraint.get()._field_Mask[0LL];
	_1d03e7701_annotateConstraint(_self_, _51235_k);
}



inline jule::Bool _1d03e7d2d_annotatePrim(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _52743_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1d03e9b54_annotateAny(_self_, _52743_k);
	return __jule_func_result;;
}



inline jule::Bool _1d03e813b_annotateArr(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _53142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21e0904_Arr> _53217_parr = _1d21d5278_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_53217_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21e0904_Arr> _53617_arr = _1d21d5278_Arr((*(_53142_k)).ptr());;
	(*(_self_))._field_k=(&(_53217_parr.get()._field_Elem));
	__jule_func_result = _1d03e9e62_annotateKind(_self_, &(_53617_arr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d03e8449_annotateSlc(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _54142_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21dd759_Slc> _54217_pslc = _1d21d54dc_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_54217_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21dd759_Slc> _54617_slc = _1d21d54dc_Slc((*(_54142_k)).ptr());;
	(*(_self_))._field_k=(&(_54217_pslc.get()._field_Elem));
	__jule_func_result = _1d03e9e62_annotateKind(_self_, &(_54617_slc.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d03e8801_checkMapKey(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _55141_k, jule::Ptr<_1d21d1d46_TypeKind>* _55161_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21d1d46_TypeKind>* _55217_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_55141_k;
	__jule_func_result=_1d03e9e62_annotateKind(_self_, _55161_ck);
	(*(_self_))._field_k=_55217_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d03e8b0e_annotateMap(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _55942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21ded10_Map> _56017_pmap = _1d21d5e8d_Map((*((*(_self_))._field_k)).ptr());;
	if ((_56017_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21ded10_Map> _56417_m = _1d21d5e8d_Map((*(_55942_k)).ptr());;
	__jule_func_result = (_1d03e8801_checkMapKey(_self_, (&(_56017_pmap.get()._field_Key)), &(_56417_m.get()._field_Key)) && _1d03e8801_checkMapKey(_self_, (&(_56017_pmap.get()._field_Val)), &(_56417_m.get()._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1d03e8e1c_annotateFn(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _56941_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d0626e6e_FnIns> _57017_pf = _1d21d5751_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_57017_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _57417_f = _1d21d5751_Fn((*(_56941_k)).ptr());;
	{
		
		if ((_57017_pf.get()._field_Params.len() != _57417_f.get()._field_Params.len())) {
			_case_begin_1b7522569:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1d0624730_IsVoid(_57017_pf.get()._field_Decl.ptr()) != _1d0624730_IsVoid(_57417_f.get()._field_Decl.ptr()))) {
			_case_begin_1b75225d0:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b7522514:;
	};
	__jule_func_result=true;
	jule::Ptr<_1d21d1d46_TypeKind>* _58317_old = (*(_self_))._field_k;;
	{
		auto expr = &(_57417_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7523aba:;
		if (it != expr_end) {
			jule::I64 _58414_i = it - expr->begin();
			jule::Ptr<_1d06260a0_ParamIns> _58421_fp = *it;
			{
				(*(_self_))._field_k=(&(_57017_pf.get()._field_Params[_58414_i].get()._field_Kind));
				__jule_func_result=(_1d03e9e62_annotateKind(_self_, &(_58421_fp.get()._field_Kind)) && __jule_func_result);
			}
			_iter_next_1b7523aba:;
			++it;
			_58414_i++;
			goto _iter_begin_1b7523aba;
		}
		_iter_end_1b7523aba:;
	};
	if ((!(_1d0624730_IsVoid(_57017_pf.get()._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&(_57017_pf.get()._field_Result));
		__jule_func_result=(_1d03e9e62_annotateKind(_self_, &(_57417_f.get()._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_58317_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d03e922a_annotatePtr(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _59842_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21e1361_Ptr> _59917_pptr = _1d21d4a3b_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_59917_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21e1361_Ptr> _60317_ptr = _1d21d4a3b_Ptr((*(_59842_k)).ptr());;
	(*(_self_))._field_k=(&(_59917_pptr.get()._field_Elem));
	__jule_func_result = _1d03e9e62_annotateKind(_self_, &(_60317_ptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d03e9538_annotateSptr(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _60843_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21dccec_Sptr> _60917_ssptr = _1d21d47c7_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_60917_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d21dccec_Sptr> _61317_sptr = _1d21d47c7_Sptr((*(_60843_k)).ptr());;
	(*(_self_))._field_k=(&(_60917_ssptr.get()._field_Elem));
	__jule_func_result = _1d03e9e62_annotateKind(_self_, &(_61317_sptr.get()._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1d03e9846_annotateStruct(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _61845_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d0611bd4_StructIns> _61917_s = _1d21d59b5_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_61917_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _62317_s2 = _1d21d59b5_Struct((*(_61845_k)).ptr());;
	if ((_61917_s.get()._field_Generics.len() != _62317_s2.get()._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_61917_s.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b752b74e:;
		if (it != expr_end) {
			jule::I64 _62714_i = it - expr->begin();
			jule::Ptr<_1d21d05b4_InsGeneric> _62721_g = *it;
			{
				jule::Ptr<_1d21d05b4_InsGeneric> _62821_g2 = _62317_s2.get()._field_Generics[_62714_i];;
				if (_1d21d2550_Equal(_62721_g.get()._field_Kind, _62821_g2.get()._field_Kind)) {
					goto _iter_next_1b752b74e;
				};
				(*(_self_))._field_k=(&(_62721_g.get()._field_Kind));
				if ((!(_1d03e9e62_annotateKind(_self_, &(_62821_g2.get()._field_Kind))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b752b74e:;
			++it;
			_62714_i++;
			goto _iter_begin_1b752b74e;
		}
		_iter_end_1b752b74e:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d03e9b54_annotateAny(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _64042_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _64113_kind = _1d21d2242_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b752e015:;
		if (it != expr_end) {
			jule::I64 _64213_i = it - expr->begin();
			jule::Ptr<_1d05eb509_GenericDecl> _64216_g = *it;
			{
				if ((_64113_kind != _64216_g.get()._field_Ident)) {
					goto _iter_next_1b752e015;
				};
				jule::Ptr<_1d21d05b4_InsGeneric> _64617_t = (*(_self_))._field_f.get()._field_Generics[_64213_i];;
				{
					
					if ((_64617_t == nullptr) || (_64617_t.get()._field_Kind == nullptr)) {
						_case_begin_1b7530a1c:;
						{
							_1d03e7a20_pushGeneric(_self_, _64042_k, _64213_i);
						}
					}
					else if ((!(_1d21d2550_Equal(_64617_t.get()._field_Kind, (*(_64042_k)))))) {
						_case_begin_1b7530a83:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1b752ed90:;
				};
				(*((*(_self_))._field_k)).get()._field_Kind=(*(_64042_k)).get()._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1b752e015:;
			++it;
			_64213_i++;
			goto _iter_begin_1b752e015;
		}
		_iter_end_1b752e015:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d03e9e62_annotateKind(_1d03e60a1_dynamicTypeAnnotation* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _66143_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1d03e9b54_annotateAny(_self_, _66143_k)) {
			_case_begin_1b75332a0:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1d21d4563_Prim((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b7532c61:;
			{
				__jule_func_result = _1d03e7d2d_annotatePrim(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d5278_Arr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b7532cd8:;
			{
				__jule_func_result = _1d03e813b_annotateArr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d54dc_Slc((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b7533019:;
			{
				__jule_func_result = _1d03e8449_annotateSlc(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d5e8d_Map((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b7533080:;
			{
				__jule_func_result = _1d03e8b0e_annotateMap(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d5751_Fn((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b7533107:;
			{
				__jule_func_result = _1d03e8e1c_annotateFn(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d4a3b_Ptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b753317e:;
			{
				__jule_func_result = _1d03e922a_annotatePtr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d47c7_Sptr((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b7533316:;
			{
				__jule_func_result = _1d03e9538_annotateSptr(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else if ((_1d21d59b5_Struct((*(_66143_k)).ptr()) != nullptr)) {
			_case_begin_1b753337c:;
			{
				__jule_func_result = _1d03e9846_annotateStruct(_self_, _66143_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b7532b2e:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1b75325bd:;
	};
}



inline jule::Bool _1d03ea1c6_annotate(_1d03e60a1_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*(_self_))._field_p.get()._field_Kind));
	__jule_func_result = _1d03e9e62_annotateKind(_self_, &((*(_self_))._field_a.get()._field_Kind));
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d03e60a1_dynamicTypeAnnotation _Src) {
	_Stream << "dynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "k:" << _Src._field_k << ", ";
	_Stream << "c:" << _Src._field_c << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1d03eaeb8_pushErrToken(_1d03ea968_fnCallArgChecker* _self_, jule::Ptr<_22be1281d_Token> _70631_token, jule::Str _70646_fmt, jule::Slice<jule::Any> _70659_args) {
	_1d219dc25_pushErr((*(_self_))._field_e.get()._field_s.ptr(), _70631_token, _70646_fmt, _70659_args);
}



inline void _1d03eb2d7_pushErr(_1d03ea968_fnCallArgChecker* _self_, jule::Str _71026_fmt, jule::Slice<jule::Any> _71039_args) {
	_1d03eaeb8_pushErrToken(_self_, (*(_self_))._field_errorToken, _71026_fmt, _71039_args);
}



inline jule::Slice<jule::Ptr<_1d06260a0_ParamIns>> _1d03eb54b_getParams(_1d03ea968_fnCallArgChecker* _self_) {
	if (((((*(_self_))._field_f.get()._field_Params.len() > 0LL) && ((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl != nullptr)) && _1d06230ad_IsSelf((*(_self_))._field_f.get()._field_Params[0LL].get()._field_Decl.ptr()))) {
		return (*(_self_))._field_f.get()._field_Params.slice(1LL);;
	};
	return (*(_self_))._field_f.get()._field_Params;;
}



inline jule::Bool _1d03eb859_checkCounts(_1d03ea968_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>* _72331_params) {
	jule::Bool __jule_func_result = false;
	jule::I64 _72417_n = (*(_72331_params)).len();;
	if (((_72417_n > 0LL) && _1d06230ad_IsSelf((*(_72331_params))[0LL].get()._field_Decl.ptr()))) {
		(_72417_n)--;
	};
	jule::I64 _72917_diff = (_72417_n - (*(_self_))._field_args.len());;
	jule::Str _73017_log = jule::Str();;
	{
		
		if ((_72917_diff == 0LL)) {
			_case_begin_1b753c919:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72417_n > 0LL) && (*(_72331_params))[(_72417_n - 1LL)].get()._field_Decl.get()._field_Variadic)) {
			_case_begin_1b753d61d:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_72917_diff < 0LL) || (_72917_diff > (*(_72331_params)).len()))) {
			_case_begin_1b753d244:;
			{
				_73017_log=jule::Str("argument overflow: passed more argument than expected to call @", 63);
			}
		}
		else {
			_case_begin_1b753d1cd:;
			{
				_73017_log=jule::Str("missing arguments to call @", 27);
			}
		}
		_match_end_1b753d178:;
	};
	jule::Str _74117_err = (*(_self_))._field_f.get()._field_Decl.get()._field_Ident;;
	(_74117_err).append("\n       wanted (", 16);
	{
		auto expr = _72331_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75403de:;
		if (it != expr_end) {
			jule::I64 _74313_i = it - expr->begin();
			jule::Ptr<_1d06260a0_ParamIns> *_74316_p = it;
			{
				_74117_err+=_1d21d2242_Str((*(_74316_p)).get()._field_Kind.ptr());
				if ((((*(_72331_params)).len() - _74313_i) > 1LL)) {
					(_74117_err).append(", ", 2);
				};
			}
			_iter_next_1b75403de:;
			++it;
			_74313_i++;
			goto _iter_begin_1b75403de;
		}
		_iter_end_1b75403de:;
	};
	(_74117_err).append(")", 1);
	_1d03eb2d7_pushErr(_self_, _73017_log, jule::Slice<jule::Any>::make({jule::Any(_74117_err, &__jule_any_type5)}));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1d03ebcaa_checkArg(_1d03ea968_fnCallArgChecker* _self_, jule::Ptr<_1d06260a0_ParamIns>* _75432_p, jule::Ptr<_1d0408c95_Data>* _75451_arg, jule::Ptr<_22be1281d_Token>* _75468_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1d0629081_parameterUsesGenerics(_75432_p, &((*(_self_))._field_f.get()._field_Decl.get()._field_Generics)))) {
		__jule_func_result=(!((*(_75432_p)).get()._field_Decl.get()._field_Variadic));
		if (__jule_func_result) {
			_1d03e60a1_dynamicTypeAnnotation _75825_dta = _1d03e60a1_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_75432_p)), ._field_a=(*(_75451_arg)), ._field_errorToken=(*(_75468_errorToken)), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1d03ea1c6_annotate(&_75825_dta);
		};
		if ((!(__jule_func_result))) {
			_1d03eaeb8_pushErrToken(_self_, (*(_75468_errorToken)), jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1d21a8dc8_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Mutable, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, _75468_errorToken)) {
		_1d21a5eb3_checkAssignType((*(_self_))._field_e.get()._field_s, (*(_75432_p)).get()._field_Decl.get()._field_Reference, &((*(_75432_p)).get()._field_Kind), _75451_arg, (*(_75468_errorToken)));
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d03ec162_push(_1d03ea968_fnCallArgChecker* _self_, jule::Ptr<_1d06260a0_ParamIns>* _78228_p, jule::Ptr<_1d05e36dd_Expr> _78246_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d21d1d46_TypeKind> _78317_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _78413_oldImmut = (*(_self_))._field_e.get()._field_immutable;;
	(*(_self_))._field_e.get()._field_immutable=(!((*(_78228_p)).get()._field_Decl.get()._field_Mutable));
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(_78228_p)).get()._field_Decl.get()._field_Variadic)))) {
		(*(_self_))._field_e.get()._field_prefix=(*(_78228_p)).get()._field_Kind;
	} else {
		(*(_self_))._field_e.get()._field_prefix=nullptr;
	};
	jule::Ptr<_1d0408c95_Data> _79217_d = _1d01dac53_evalExpr((*(_self_))._field_e, _78246_arg);;
	(*(_self_))._field_e.get()._field_prefix=_78317_old;
	(*(_self_))._field_e.get()._field_immutable=_78413_oldImmut;
	if ((_79217_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1d03ebcaa_checkArg(_self_, _78228_p, &(_79217_d), &(_78246_arg.get()._field_Token));
	(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_79217_d.get()._field_Model);;
	return __jule_func_result;;
}



inline jule::Bool _1d03ec519_pushVariadic(_1d03ea968_fnCallArgChecker* _self_, jule::Ptr<_1d06260a0_ParamIns>* _80636_p, jule::I64 _80654_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _80817_variadiced = false;;
	jule::Bool _80913_more = ((_80654_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1d061836c_SliceExprModel> _81017_model = jule::new_ptr<_1d061836c_SliceExprModel>(_1d061836c_SliceExprModel{._field_ElemKind=(*(_80636_p)).get()._field_Kind, });;
	jule::Ptr<_1d21d1d46_TypeKind> _81417_old = (*(_self_))._field_e.get()._field_prefix;;
	jule::Bool _81913_variadic = (*(_80636_p)).get()._field_Kind.get()._field_Variadic;;
	(*(_80636_p)).get()._field_Kind.get()._field_Variadic=false;
	__JULE_DEFER({
		(*(_80636_p)).get()._field_Kind.get()._field_Variadic=_81913_variadic;
	});;
	for (; (_80654_i < (*(_self_))._field_args.len()); (_80654_i)++) {
		{
			jule::Ptr<_1d05e36dd_Expr> _82621_arg = (*(_self_))._field_args[_80654_i];;
			{
				auto &_match_expr{ _82621_arg.get()._field_Kind };
				
				if (_match_expr.type == &__jule_any_type81) {
					_case_begin_1b754cd8b:;
					{
						(*(_self_))._field_e.get()._field_prefix=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dd759_Slc>(_1d21dd759_Slc{._field_Elem=(*(_80636_p)).get()._field_Kind}), 22)});
					}
				}
				else {
					_case_begin_1b754d672:;
					{
						(*(_self_))._field_e.get()._field_prefix=(*(_80636_p)).get()._field_Kind;
					}
				}
				_match_end_1b754d61c:;
			};
			jule::Ptr<_1d0408c95_Data> _83921_d = _1d0426bb4_eval((*(_self_))._field_e, _82621_arg);;
			if ((_83921_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1b754c396;
			};
			if (_83921_d.get()._field_Kind.get()._field_Variadic) {
				_80817_variadiced=true;
				(*(_80636_p)).get()._field_Kind.get()._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1d03ebcaa_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
				{
					auto &_match_expr{ _83921_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1b7550036:;
						{
							_81017_model=_83921_d.get()._field_Model.cast_ptr<_1d061836c_SliceExprModel>(&__jule_any_type82);
							_81017_model.get()._field_ElemKind=(*(_80636_p)).get()._field_Kind;
						}
					}
					else {
						_case_begin_1b755139a:;
						{
							_81017_model=nullptr;
							(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(_83921_d.get()._field_Model);;
						}
					}
					_match_end_1b7551488:;
				};
				(_80654_i)++;
				goto _iter_end_1b754c396;
			};
			__jule_func_result=(__jule_func_result && _1d03ebcaa_checkArg(_self_, _80636_p, &(_83921_d), &(_82621_arg.get()._field_Token)));
			_81017_model.get()._field_Elems = jule::alloc_for_append(_81017_model.get()._field_Elems,1);_81017_model.get()._field_Elems.__push(_83921_d.get()._field_Model);;
		}
	_iter_next_1b754c396:;
	}
	_iter_end_1b754c396:;;
	(*(_self_))._field_e.get()._field_prefix=_81417_old;
	if ((_80817_variadiced && _80913_more)) {
		_1d03eaeb8_pushErrToken(_self_, (*(_self_))._field_args[_80654_i].get()._field_Token, jule::Str("variadic argument can't use with more argument", 46), jule::Slice<jule::Any>());
	};
	if ((_81017_model != nullptr)) {
		(*(_self_))._field_argModels = jule::alloc_for_append((*(_self_))._field_argModels,1);(*(_self_))._field_argModels.__push(jule::Any(_81017_model, &__jule_any_type82));;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d03ec827_checkArgs(_1d03ea968_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>* _88233_params) {
	jule::Bool __jule_func_result = false;
	jule::Bool _88313_arg = (*(_self_))._field_e.get()._field_arg;;
	(*(_self_))._field_e.get()._field_arg=true;
	__jule_func_result=true;
	jule::I64 _88717_i = 0LL;;
	if ((((*(_88233_params)).len() > 0LL) && _1d06230ad_IsSelf((*(_88233_params))[0LL].get()._field_Decl.ptr()))) {
		(_88717_i)++;
	};
	_julec_label_iter:;
	while ((_88717_i < (*(_88233_params)).len())) {
		{
			jule::Ptr<_1d06260a0_ParamIns> _89421_p = (*(_88233_params))[_88717_i];;
			{
				
				if (_89421_p.get()._field_Decl.get()._field_Variadic) {
					_case_begin_1b7557170:;
					{
						__jule_func_result=(_1d03ec519_pushVariadic(_self_, &(_89421_p), _88717_i) && __jule_func_result);
						goto _iter_end_1b7555877;
					}
				}
				else if (((*(_self_))._field_args.len() <= _88717_i)) {
					_case_begin_1b7556944:;
					{
						__jule_func_result=false;
						goto _iter_end_1b7555877;
					}
				}
				else {
					_case_begin_1b7556cc9:;
					{
						__jule_func_result=(_1d03ec162_push(_self_, &(_89421_p), (*(_self_))._field_args[_88717_i]) && __jule_func_result);
					}
				}
				_match_end_1b7556c74:;
			};
			(_88717_i)++;
		}
	_iter_next_1b7555877:;
	}
	_iter_end_1b7555877:;;
	(*(_self_))._field_e.get()._field_arg=_88313_arg;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1d03ecaad_checkDynamicTypeAnnotation(_1d03ea968_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_self_))._field_f.get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7558d64:;
		if (it != expr_end) {
			jule::Ptr<_1d21d05b4_InsGeneric> _91416_g = *it;
			{
				if ((_91416_g == nullptr)) {
					_1d03eb2d7_pushErr(_self_, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1b7558d64:;
			++it;
			goto _iter_begin_1b7558d64;
		}
		_iter_end_1b7558d64:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1d03ecd33_check(_1d03ea968_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1d06260a0_ParamIns>> _92417_params = _1d03eb54b_getParams(_self_);;
	__jule_func_result=_1d03eb859_checkCounts(_self_, &(_92417_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1d03ec827_checkArgs(_self_, &(_92417_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1d03ecaad_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d03ea968_fnCallArgChecker _Src) {
	_Stream << "fnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamicAnnotation:" << _Src._field_dynamicAnnotation << ", ";
	_Stream << "argModels:" << _Src._field_argModels << ", ";
	_Stream << "ignored:" << _Src._field_ignored;
	_Stream << "}";
	return _Stream;
}



inline void _1d03ed87d_pushErr(_1d03ed372_structLitChecker* _self_, jule::Ptr<_22be1281d_Token> _94526_token, jule::Str _94541_fmt, jule::Slice<jule::Any> _94554_args) {
	_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), _94526_token, _94541_fmt, _94554_args);
}



inline void _1d03edb9c_pushSuggestion(_1d03ed372_structLitChecker* _self_, jule::Str _95033_fmt, jule::Slice<jule::Any> _95046_args) {
	_1d040b13d_pushSuggestion((*(_self_))._field_e.ptr(), _95033_fmt, _95046_args);
}



inline void _1d03ee065_pushMatch(_1d03ed372_structLitChecker* _self_, jule::Ptr<_1d06111de_FieldIns>* _95433_f, jule::Ptr<_1d0408c95_Data>* _95452_d, jule::Ptr<_22be1281d_Token>* _95467_errorToken) {
	;
	if (_1d21a8dc8_checkValidityForInitExpr((*(_self_))._field_e.get()._field_s, (!((*(_self_))._field_e.get()._field_immutable)), false, &((*(_95433_f)).get()._field_Kind), _95452_d, _95467_errorToken)) {
		_1d21a5eb3_checkAssignType((*(_self_))._field_e.get()._field_s, false, &((*(_95433_f)).get()._field_Kind), _95452_d, (*(_95467_errorToken)));
	};
	(*(_self_))._field_args = jule::alloc_for_append((*(_self_))._field_args,1);(*(_self_))._field_args.__push(jule::new_ptr<_1d06168ed_StructArgExprModel>(_1d06168ed_StructArgExprModel{._field_Field=(*(_95433_f)), ._field_Expr=(*(_95452_d)).get()._field_Model}));;
}



inline void _1d03ee384_checkPair(_1d03ed372_structLitChecker* _self_, jule::Ptr<_1d05e8083_FieldExprPair>* _96733_pair, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>* _96760_exprs) {
	jule::Ptr<_1d06111de_FieldIns> _96917_f = _1d0612e8d_FindField((*(_self_))._field_s.ptr(), (*(_96733_pair)).get()._field_Field.get()._field_Kind);;
	if ((_96917_f == nullptr)) {
		_1d03ed87d_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		return;;
	};
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _96917_f.get()._field_Decl.get()._field_Public, _96917_f.get()._field_Decl.get()._field_Token)))) {
		_1d03ed87d_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
		_1d03edb9c_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	_julec_label_dup_lookup:;
	{
		auto expr = _96760_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75630c1:;
		if (it != expr_end) {
			jule::Ptr<_1d05e36dd_Expr> _98121_expr = *it;
			{
				{
					auto &_match_expr{ _98121_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1b756392e:;
						{
							jule::Ptr<_1d05e8083_FieldExprPair> _98425_dpair = _98121_expr.get()._field_Kind.cast_ptr<_1d05e8083_FieldExprPair>(&__jule_any_type83);;
							{
								
								if (((*(_96733_pair)) == _98425_dpair)) {
									_case_begin_1b756480e:;
									{
										goto _iter_end_1b75630c1;
									}
								}
								else if (((*(_96733_pair)).get()._field_Field.get()._field_Kind == _98425_dpair.get()._field_Field.get()._field_Kind)) {
									_case_begin_1b7564886:;
									{
										_1d03ed87d_pushErr(_self_, (*(_96733_pair)).get()._field_Field, jule::Str("@ already has expression", 24), jule::Slice<jule::Any>::make({jule::Any((*(_96733_pair)).get()._field_Field.get()._field_Kind, &__jule_any_type5)}));
										goto _iter_end_1b75630c1;
									}
								}
								_match_end_1b7564754:;
							};
						}
					}
					_match_end_1b7563775:;
				};
			}
			_iter_next_1b75630c1:;
			++it;
			goto _iter_begin_1b75630c1;
		}
		_iter_end_1b75630c1:;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _99517_prefix = (*(_self_))._field_e.get()._field_prefix;;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_99517_prefix;
	});;
	(*(_self_))._field_e.get()._field_prefix=_96917_f.get()._field_Kind;
	jule::Ptr<_1d0408c95_Data> _99917_d = _1d01dac53_evalExpr((*(_self_))._field_e, (*(_96733_pair)).get()._field_Expr);;
	if ((_99917_d == nullptr)) {
		return;;
	};
	_1d03ee065_pushMatch(_self_, &(_96917_f), &(_99917_d), &((*(_96733_pair)).get()._field_Field));
}



inline jule::Bool _1d03ee692_readyExprs(_1d03ed372_structLitChecker* _self_, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>* _100634_exprs) {
	jule::Bool _100717_ok = true;;
	{
		auto expr = _100634_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7567b86:;
		if (it != expr_end) {
			jule::I64 _100814_i = it - expr->begin();
			jule::Ptr<_1d05e36dd_Expr> _100821_expr = *it;
			{
				{
					auto &_match_expr{ _100821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b7568802:;
						{
							jule::Ptr<_1d05e9639_KeyValPair> _101125_pair = _100821_expr.get()._field_Kind.cast_ptr<_1d05e9639_KeyValPair>(&__jule_any_type84);;
							{
								auto &_match_expr{ _101125_pair.get()._field_Key.get()._field_Kind };
								
								if (_match_expr.type == &__jule_any_type85) {
									_case_begin_1b756914e:;
									{
										goto _match_end_1b75695c2;
									}
								}
								else {
									_case_begin_1b7569847:;
									{
										_1d03ed87d_pushErr(_self_, _101125_pair.get()._field_Colon, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
										_100717_ok=false;
										goto _iter_next_1b7567b86;
									}
								}
								_match_end_1b75695c2:;
							};
							(*(_100634_exprs))[_100814_i].get()._field_Kind=jule::Any(jule::new_ptr<_1d05e8083_FieldExprPair>(_1d05e8083_FieldExprPair{._field_Field=_101125_pair.get()._field_Key.get()._field_Token, ._field_Expr=_101125_pair.get()._field_Val}), &__jule_any_type83);
						}
					}
					_match_end_1b7568648:;
				};
			}
			_iter_next_1b7567b86:;
			++it;
			_100814_i++;
			goto _iter_begin_1b7567b86;
		}
		_iter_end_1b7567b86:;
	};
	return _100717_ok;;
}



inline void _1d03ee917_check(_1d03ed372_structLitChecker* _self_, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>* _103029_exprs) {
	if (((*(_103029_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1d03ee692_readyExprs(_self_, _103029_exprs)))) {
		return;;
	};
	jule::Bool _103717_paired = false;;
	{
		auto expr = _103029_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b756858d:;
		if (it != expr_end) {
			jule::I64 _103814_i = it - expr->begin();
			jule::Ptr<_1d05e36dd_Expr> _103821_expr = *it;
			{
				{
					auto &_match_expr{ _103821_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type83) {
						_case_begin_1b757171c:;
						{
							jule::Ptr<_1d05e8083_FieldExprPair> _104125_pair = _103821_expr.get()._field_Kind.cast_ptr<_1d05e8083_FieldExprPair>(&__jule_any_type83);;
							if (((_103814_i > 0LL) && (!(_103717_paired)))) {
								_1d03ed87d_pushErr(_self_, _104125_pair.get()._field_Field, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							_103717_paired=true;
							_1d03ee384_checkPair(_self_, &(_104125_pair), _103029_exprs);
						}
					}
					else {
						_case_begin_1b756c52b:;
						{
							if (_103717_paired) {
								_1d03ed87d_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument must target to field", 29), jule::Slice<jule::Any>());
							};
							if ((_103814_i >= (*(_self_))._field_s.get()._field_Fields.len())) {
								_1d03ed87d_pushErr(_self_, _103821_expr.get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>());
								goto _iter_next_1b756858d;
							};
							jule::Ptr<_1d06111de_FieldIns> _105625_field = (*(_self_))._field_s.get()._field_Fields[_103814_i];;
							if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_e.get()._field_s.ptr(), _105625_field.get()._field_Decl.get()._field_Public, _105625_field.get()._field_Decl.get()._field_Token)))) {
								_1d03ed87d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("structure cannot instantiating because it has non-public fields", 63), jule::Slice<jule::Any>());
								_1d03edb9c_pushSuggestion(_self_, jule::Str("use field:expression pairs to instantiate", 41), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1d21d1d46_TypeKind> _106425_prefix = (*(_self_))._field_e.get()._field_prefix;;
							__JULE_DEFER({
								(*(_self_))._field_e.get()._field_prefix=_106425_prefix;
							});;
							(*(_self_))._field_e.get()._field_prefix=_105625_field.get()._field_Kind;
							jule::Ptr<_1d0408c95_Data> _106825_d = _1d01dac53_evalExpr((*(_self_))._field_e, _103821_expr);;
							if ((_106825_d == nullptr)) {
								goto _iter_next_1b756858d;
							};
							_1d03ee065_pushMatch(_self_, &(_105625_field), &(_106825_d), &(_103821_expr.get()._field_Token));
						}
					}
					_match_end_1b756c3a5:;
				};
			}
			_iter_next_1b756858d:;
			++it;
			_103814_i++;
			goto _iter_begin_1b756858d;
		}
		_iter_end_1b756858d:;
	};
	if ((!(_103717_paired))) {
		jule::I64 _107917_n = (*(_self_))._field_s.get()._field_Fields.len();;
		jule::I64 _108021_diff = (_107917_n - (*(_103029_exprs)).len());;
		{
			
			if ((_108021_diff <= 0LL)) {
				_case_begin_1b757183d:;
				{
					return;;
				}
			}
			_match_end_1b7574038:;
		};
		jule::Str _108621_idents = jule::Str();;
		for (; (_108021_diff > 0LL); (_108021_diff)--) {
			{
				_108621_idents+=(jule::Str(", ", 2) + (*(_self_))._field_s.get()._field_Fields[(_107917_n - _108021_diff)].get()._field_Decl.get()._field_Ident);
			}
		_iter_next_1b75748eb:;
		}
		_iter_end_1b75748eb:;;
		(_108621_idents).mut_slice(2LL);;
		_1d03ed87d_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(_108621_idents, &__jule_any_type5)}));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d03ed372_structLitChecker _Src) {
	_Stream << "structLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d21bb65a_Var> _1d040041d_buildVar(_1d03eee56_rangeChecker* _self_, jule::Ptr<_1d0601b6e_VarDecl>* _110528_decl) {
	jule::Ptr<_1d21bb65a_Var> _110617_v = _1d21465a2_buildVar((*(_110528_decl)));;
	return _110617_v;;
}



inline void _1d04005e9_setSizeKey(_1d03eee56_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyA=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("int", 3)).get()._field_Kind;
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7577dd8:;
			{
				(*(_self_))._field_Kind.get()._field_KeyA.get()._field_IterRelation=jule::new_ptr<_1d21ba615_IterRelation>(_1d21ba615_IterRelation{._field_Range=(*(_self_))._field_d.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8)});
			}
		}
		_match_end_1b7577d83:;
	};
}



inline void _1d04009b2_checkRangeExprValidity(_1d03eee56_rangeChecker* _self_, jule::Ptr<_1d0408c95_Data>* _113246_d, jule::Ptr<_1d21bb65a_Var>* _113257_key, jule::Ptr<_1d21d1d46_TypeKind>* _113273_k) {
	jule::Bool _113317__mut = (*(_113257_key)).get()._field_Mutable;;
	if ((_113317__mut && (!(_1d21d35d9_Mutable((*(_113273_k)).ptr()))))) {
		_113317__mut=false;
	};
	_1d21a8dc8_checkValidityForInitExpr((*(_self_))._field_sc.get()._field_s, _113317__mut, (*(_113257_key)).get()._field_Reference, &((*(_113257_key)).get()._field_Kind.get()._field_Kind), _113246_d, &((*(_self_))._field_rang.get()._field_InToken));
}



inline void _1d0400b8d_checkSlice(_1d03eee56_rangeChecker* _self_) {
	_1d04005e9_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d21dd759_Slc> _115117_slc = _1d21d54dc_Slc((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_115117_slc.get()._field_Elem});
	_1d04009b2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_115117_slc.get()._field_Elem));
}



inline void _1d0400d69_checkArray(_1d03eee56_rangeChecker* _self_) {
	_1d04005e9_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d21e0904_Arr> _116417_arr = _1d21d5278_Arr((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_116417_arr.get()._field_Elem});
	_1d04009b2_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_116417_arr.get()._field_Elem));
}



inline void _1d0401045_checkMapKeyA(_1d03eee56_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyA == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d21ded10_Map> _117617_m = _1d21d5e8d_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyA=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyA));
	(*(_self_))._field_Kind.get()._field_KeyA.get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_117617_m.get()._field_Key});
	jule::Ptr<_1d0408c95_Data> _118017_d = jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d)));;
	_118017_d.get()._field_Kind=_117617_m.get()._field_Key;
	_1d04009b2_checkRangeExprValidity(_self_, &(_118017_d), &((*(_self_))._field_Kind.get()._field_KeyA), &(_117617_m.get()._field_Key));
}



inline void _1d0401221_checkMapKeyB(_1d03eee56_rangeChecker* _self_) {
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	jule::Ptr<_1d21ded10_Map> _119117_m = _1d21d5e8d_Map((*(_self_))._field_d.get()._field_Kind.ptr());;
	(*(_self_))._field_Kind.get()._field_KeyB=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_119117_m.get()._field_Val});
	jule::Ptr<_1d0408c95_Data> _119517_d = jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d)));;
	_119517_d.get()._field_Kind=_119117_m.get()._field_Val;
	_1d04009b2_checkRangeExprValidity(_self_, &(_119517_d), &((*(_self_))._field_Kind.get()._field_KeyB), &(_119117_m.get()._field_Val));
}



inline void _1d04013ec_checkMap(_1d03eee56_rangeChecker* _self_) {
	_1d0401045_checkMapKeyA(_self_);
	_1d0401221_checkMapKeyB(_self_);
}



inline void _1d04015c8_checkStr(_1d03eee56_rangeChecker* _self_) {
	_1d04005e9_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
	(*(_self_))._field_Kind.get()._field_KeyB.get()._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("u8", 2)).get()._field_Kind;
}



inline void _1d04017a4_checkComptime(_1d03eee56_rangeChecker* _self_) {
	_1d04005e9_setSizeKey(_self_);
	if ((((*(_self_))._field_rang.get()._field_KeyA != nullptr) && (*(_self_))._field_rang.get()._field_KeyA.get()._field_Mutable)) {
		_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyA.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyA.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB != nullptr) && (*(_self_))._field_rang.get()._field_KeyB.get()._field_Mutable)) {
		_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_KeyB.get()._field_Token, jule::Str("define @ cannot be mutable", 26), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident, &__jule_any_type5)}));
	};
	if ((((*(_self_))._field_rang.get()._field_KeyB == nullptr) || _22be150b2_IsIgnoreIdent((*(_self_))._field_rang.get()._field_KeyB.get()._field_Ident))) {
		return;;
	};
	(*(_self_))._field_Kind.get()._field_KeyB=_1d040041d_buildVar(_self_, &((*(_self_))._field_rang.get()._field_KeyB));
}



inline jule::Bool _1d0401a18_checkComptimeRange(_1d03eee56_rangeChecker* _self_) {
	jule::Ptr<_1d21504ac_comptimeRange> _123017_range = _1d21d7654_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ _123017_range.get()._field_kind };
		
		if (_match_expr.type_is(true, 0) || _match_expr.type_is(true, 2) || _match_expr.type_is(true, 3) || _match_expr.type_is(true, 4) || _match_expr.type_is(true, 1) || _match_expr.type_is(true, 5)) {
			_case_begin_1b758eb9c:;
			{
				_1d04017a4_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1b758ddee:;
			{
				_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b758dd99:;
	};
}



inline jule::Bool _1d0401c7c_check(_1d03eee56_rangeChecker* _self_) {
	{
		
		if ((*(_self_))._field_d.get()._field_Kind.get()._field_Variadic) {
			_case_begin_1b7590ad2:;
		}
		else if ((_1d21d54dc_Slc((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7590b48:;
			{
				_1d0400b8d_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1d21d5278_Arr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7590bae:;
			{
				_1d0400d69_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1d21d5e8d_Map((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7590c25:;
			{
				_1d04013ec_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1d21d7654_comptimeRange((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7591e79:;
			{
				return _1d0401a18_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1b7590461:;
			{
				jule::Ptr<_1d21d9568_Prim> _126217_prim = _1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (((_126217_prim != nullptr) && _1d21dc79c_IsStr(_126217_prim.ptr()))) {
					_1d04015c8_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1b759097d:;
	};
	_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_rang.get()._field_InToken, jule::Str("range iterations must be have enumerable expression", 51), jule::Slice<jule::Any>());
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d03eee56_rangeChecker _Src) {
	_Stream << "rangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline void _1d04028e8_prepareTypes(_1d0402453_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1d0628091_Types((*(_self_))._field_f.ptr());
	};
}



inline void _1d0402b6d_prepareExprs(_1d0402453_retTypeChecker* _self_, jule::Ptr<_1d05e36dd_Expr>* _129036_e) {
	if (((*(_129036_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_129036_e)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b75969d9:;
			{
				(*(_self_))._field_exprs=(*(_129036_e)).get()._field_Kind.cast_ptr<_1d05e436a_TupleExpr>(&__jule_any_type86).get()._field_Expr;
			}
		}
		else {
			_case_begin_1b7596610:;
			{
				(*(_self_))._field_exprs = jule::alloc_for_append((*(_self_))._field_exprs,1);(*(_self_))._field_exprs.__push((*(_129036_e)));;
			}
		}
		_match_end_1b75965aa:;
	};
}



inline void _1d0402d49_checkExprs(_1d0402453_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d0408c95_Data>> _130617_datas = jule::Slice<jule::Ptr<_1d0408c95_Data>>::alloc(0LL, (*(_self_))._field_exprs.len());;
	jule::Ptr<_1d040a813_Eval> _130717_eval = _1d21a59b8_eval((*(_self_))._field_sc.get()._field_s, jule::Trait<_1d2200172_Lookup>((*(_self_))._field_sc, 0));;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b759737a:;
		if (it != expr_end) {
			jule::I64 _130814_i = it - expr->begin();
			jule::Ptr<_1d05e36dd_Expr> _130821_expr = *it;
			{
				if ((_130814_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1b759737a;
				};
				jule::Ptr<_1d21d1d46_TypeKind> _131321_t = (*(_self_))._field_types[_130814_i];;
				_130717_eval.get()._field_prefix=_131321_t;
				jule::Ptr<_1d0408c95_Data> _131621_d = _1d01dac53_evalExpr(_130717_eval, _130821_expr);;
				if ((_131621_d == nullptr)) {
					goto _iter_next_1b759737a;
				};
				_130617_datas = jule::alloc_for_append(_130617_datas,1);_130617_datas.__push(_131621_d);;
				if (((!(_131621_d.get()._field_Mutable)) && _1d21d35d9_Mutable(_131621_d.get()._field_Kind.ptr()))) {
					_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("mutable typed return expressions should be mutable", 50), jule::Slice<jule::Any>());
					return;;
				};
				_1d03e45bb_assignTypeChecker _132821_ac = _1d03e45bb_assignTypeChecker{._field_s=(*(_self_))._field_sc.get()._field_s, ._field_dest=_131321_t, ._field_d=_131621_d, ._field_errorToken=(*(_self_))._field_errorToken};;
				_1d03e5743_check(&_132821_ac);
			}
			_iter_next_1b759737a:;
			++it;
			_130814_i++;
			goto _iter_begin_1b759737a;
		}
		_iter_end_1b759737a:;
	};
	if ((_130617_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1d061bbde_TupleExprModel>(_1d061bbde_TupleExprModel{._field_Datas=_130617_datas}), &__jule_any_type87);
	} else if ((_130617_datas.len() == 1LL)) {
		(*(_self_))._field_model=_130617_datas[0LL].get()._field_Model;
	};
}



inline jule::Bool _1d0403157_check(_1d0402453_retTypeChecker* _self_, jule::Ptr<_1d05e36dd_Expr>* _134729_e) {
	_1d04028e8_prepareTypes(_self_);
	_1d0402b6d_prepareExprs(_self_, _134729_e);
	jule::I64 _135113_n = (*(_self_))._field_exprs.len();;
	if (((_135113_n == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
		if ((!(_1d0625445_AnyVar((*(_self_))._field_f.get()._field_Decl.ptr())))) {
			_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("return statements of non-void functions should have return expression", 69), jule::Slice<jule::Any>());
			return false;;
		};
		return true;;
	};
	if ((((_135113_n > 0LL) && ((*(_self_))._field_f != nullptr)) && _1d0624730_IsVoid((*(_self_))._field_f.get()._field_Decl.ptr()))) {
		_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("void functions is cannot returns any value", 42), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_135113_n > (*(_self_))._field_types.len())) {
		_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("overflow return expressions", 27), jule::Slice<jule::Any>());
	} else if ((_135113_n < (*(_self_))._field_types.len())) {
		_1d219dc25_pushErr((*(_self_))._field_sc.get()._field_s.ptr(), (*(_self_))._field_errorToken, jule::Str("missing return expressions for multi-return", 43), jule::Slice<jule::Any>());
	};
	_1d0402d49_checkExprs(_self_);
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0402453_retTypeChecker _Src) {
	_Stream << "retTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d0404796_SelectPackage(_1d040428a_SymbolTable* _self_, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)> _2732_selector) {
	if ((_2732_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75a3e47:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _3121_pkg = *it;
			{
				if (_2732_selector(_3121_pkg)) {
					return _3121_pkg;;
				};
			}
			_iter_next_1b75a3e47:;
			++it;
			goto _iter_begin_1b75a3e47;
		}
		_iter_end_1b75a3e47:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21bb65a_Var> _1d0404b4d_FindVar(_1d040428a_SymbolTable* _self_, jule::Str _4126_ident, jule::Bool _4138_binded) {
	return _1d0406710_findVar(_self_, _4126_ident, _4138_binded, false);;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d0405005_FindTypeAlias(_1d040428a_SymbolTable* _self_, jule::Str _4732_ident, jule::Bool _4744_binded) {
	return _1d0406b61_findTypeAlias(_self_, _4732_ident, _4744_binded, false);;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d04053ac_FindStruct(_1d040428a_SymbolTable* _self_, jule::Str _5329_ident, jule::Bool _5341_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75a62ac:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _5421_s = *it;
			{
				if (((_5421_s.get()._field_Ident == _5329_ident) && (_5421_s.get()._field_Binded == _5341_binded))) {
					return _5421_s;;
				};
			}
			_iter_next_1b75a62ac:;
			++it;
			goto _iter_begin_1b75a62ac;
		}
		_iter_end_1b75a62ac:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d06242bd_Fn> _1d0405764_FindFn(_1d040428a_SymbolTable* _self_, jule::Str _6425_ident, jule::Bool _6437_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75a7654:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _6521_f = *it;
			{
				if (((_6521_f.get()._field_Ident == _6425_ident) && (_6521_f.get()._field_Binded == _6437_binded))) {
					return _6521_f;;
				};
			}
			_iter_next_1b75a7654:;
			++it;
			goto _iter_begin_1b75a7654;
		}
		_iter_end_1b75a7654:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21494c8_Trait> _1d0405a72_FindTrait(_1d040428a_SymbolTable* _self_, jule::Str _7528_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75a7d2a:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> _7621_t = *it;
			{
				if ((_7621_t.get()._field_Ident == _7528_ident)) {
					return _7621_t;;
				};
			}
			_iter_next_1b75a7d2a:;
			++it;
			goto _iter_begin_1b75a7d2a;
		}
		_iter_end_1b75a7d2a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d0405d80_FindEnum(_1d040428a_SymbolTable* _self_, jule::Str _8627_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75a9612:;
		if (it != expr_end) {
			jule::Ptr<_1d214bc5b_Enum> _8721_e = *it;
			{
				if ((_8721_e.get()._field_Ident == _8627_ident)) {
					return _8721_e;;
				};
			}
			_iter_next_1b75a9612:;
			++it;
			goto _iter_begin_1b75a9612;
		}
		_iter_end_1b75a9612:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d040618d_FindTypeEnum(_1d040428a_SymbolTable* _self_, jule::Str _9731_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75aa4e2:;
		if (it != expr_end) {
			jule::Ptr<_1d214d356_TypeEnum> _9821_e = *it;
			{
				if ((_9821_e.get()._field_Ident == _9731_ident)) {
					return _9821_e;;
				};
			}
			_iter_next_1b75aa4e2:;
			++it;
			goto _iter_begin_1b75aa4e2;
		}
		_iter_end_1b75aa4e2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21bb65a_Var> _1d0406710_findVar(_1d040428a_SymbolTable* _self_, jule::Str _10826_ident, jule::Bool _10838_binded, jule::Bool _10852_reverse) {
	if (_10852_reverse) {
		jule::I64 _11021_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_11021_i >= 0LL); (_11021_i)--) {
			{
				jule::Ptr<_1d21bb65a_Var> _11225_v = (*(_self_))._field_Vars[_11021_i];;
				if (((_11225_v.get()._field_Ident == _10826_ident) && (_11225_v.get()._field_Binded == _10838_binded))) {
					return _11225_v;;
				};
			}
		_iter_next_1b75ac417:;
		}
		_iter_end_1b75ac417:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b75ad6c1:;
			if (it != expr_end) {
				jule::Ptr<_1d21bb65a_Var> _11825_v = *it;
				{
					if (((_11825_v.get()._field_Ident == _10826_ident) && (_11825_v.get()._field_Binded == _10838_binded))) {
						return _11825_v;;
					};
				}
				_iter_next_1b75ad6c1:;
				++it;
				goto _iter_begin_1b75ad6c1;
			}
			_iter_end_1b75ad6c1:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d0406b61_findTypeAlias(_1d040428a_SymbolTable* _self_, jule::Str _12732_ident, jule::Bool _12744_binded, jule::Bool _12758_reverse) {
	if (_12758_reverse) {
		jule::I64 _12921_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_12921_i >= 0LL); (_12921_i)--) {
			{
				jule::Ptr<_1d21d10ed_TypeAlias> _13125_ta = (*(_self_))._field_TypeAliases[_12921_i];;
				if (((_13125_ta.get()._field_Ident == _12732_ident) && (_13125_ta.get()._field_Binded == _12744_binded))) {
					return _13125_ta;;
				};
			}
		_iter_next_1b75b034e:;
		}
		_iter_end_1b75b034e:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b75b1608:;
			if (it != expr_end) {
				jule::Ptr<_1d21d10ed_TypeAlias> _13725_ta = *it;
				{
					if (((_13725_ta.get()._field_Ident == _12732_ident) && (_13725_ta.get()._field_Binded == _12744_binded))) {
						return _13725_ta;;
					};
				}
				_iter_next_1b75b1608:;
				++it;
				goto _iter_begin_1b75b1608;
			}
			_iter_end_1b75b1608:;
		};
	};
	return nullptr;;
}



inline jule::Any _1d0407018_defByIdent(_1d040428a_SymbolTable* _self_, jule::Str _14829_ident, jule::Bool _14841_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b2582:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _14921_v = *it;
			{
				if (((_14921_v.get()._field_Ident == _14829_ident) && (_14921_v.get()._field_Binded == _14841_binded))) {
					return jule::Any(_14921_v, &__jule_any_type8);;
				};
			}
			_iter_next_1b75b2582:;
			++it;
			goto _iter_begin_1b75b2582;
		}
		_iter_end_1b75b2582:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b3044:;
		if (it != expr_end) {
			jule::Ptr<_1d21d10ed_TypeAlias> _15521_ta = *it;
			{
				if (((_15521_ta.get()._field_Ident == _14829_ident) && (_15521_ta.get()._field_Binded == _14841_binded))) {
					return jule::Any(_15521_ta, &__jule_any_type67);;
				};
			}
			_iter_next_1b75b3044:;
			++it;
			goto _iter_begin_1b75b3044;
		}
		_iter_end_1b75b3044:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b3e57:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _16121_s = *it;
			{
				if (((_16121_s.get()._field_Ident == _14829_ident) && (_16121_s.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16121_s, &__jule_any_type66);;
				};
			}
			_iter_next_1b75b3e57:;
			++it;
			goto _iter_begin_1b75b3e57;
		}
		_iter_end_1b75b3e57:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b4908:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _16721_f = *it;
			{
				if (((_16721_f.get()._field_Ident == _14829_ident) && (_16721_f.get()._field_Binded == _14841_binded))) {
					return jule::Any(_16721_f, &__jule_any_type65);;
				};
			}
			_iter_next_1b75b4908:;
			++it;
			goto _iter_begin_1b75b4908;
		}
		_iter_end_1b75b4908:;
	};
	if (_14841_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b59a3:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> _17721_t = *it;
			{
				if ((_17721_t.get()._field_Ident == _14829_ident)) {
					return jule::Any(_17721_t, &__jule_any_type10);;
				};
			}
			_iter_next_1b75b59a3:;
			++it;
			goto _iter_begin_1b75b59a3;
		}
		_iter_end_1b75b59a3:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b6685:;
		if (it != expr_end) {
			jule::Ptr<_1d214bc5b_Enum> _18321_e = *it;
			{
				if ((_18321_e.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18321_e, &__jule_any_type68);;
				};
			}
			_iter_next_1b75b6685:;
			++it;
			goto _iter_begin_1b75b6685;
		}
		_iter_end_1b75b6685:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b7433:;
		if (it != expr_end) {
			jule::Ptr<_1d214d356_TypeEnum> _18921_te = *it;
			{
				if ((_18921_te.get()._field_Ident == _14829_ident)) {
					return jule::Any(_18921_te, &__jule_any_type69);;
				};
			}
			_iter_next_1b75b7433:;
			++it;
			goto _iter_begin_1b75b7433;
		}
		_iter_end_1b75b7433:;
	};
	return nullptr;;
}



inline jule::Bool _1d0407469_isDuplicatedIdent(_1d040428a_SymbolTable* _self_, jule::Uintptr _20132_itself, jule::Str _20149_ident, jule::Bool _20161_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b80d2:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> *_20216_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20216_v))) != _20132_itself) && ((*(_20216_v)).get()._field_Ident == _20149_ident)) && ((*(_20216_v)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b75b80d2:;
			++it;
			goto _iter_begin_1b75b80d2;
		}
		_iter_end_1b75b80d2:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b808d:;
		if (it != expr_end) {
			jule::Ptr<_1d21d10ed_TypeAlias> *_20816_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_20816_ta))) != _20132_itself) && ((*(_20816_ta)).get()._field_Ident == _20149_ident)) && ((*(_20816_ta)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b75b808d:;
			++it;
			goto _iter_begin_1b75b808d;
		}
		_iter_end_1b75b808d:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75b8940:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> *_21416_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21416_s))) != _20132_itself) && ((*(_21416_s)).get()._field_Ident == _20149_ident)) && ((*(_21416_s)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b75b8940:;
			++it;
			goto _iter_begin_1b75b8940;
		}
		_iter_end_1b75b8940:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75bb129:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> *_22016_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22016_f))) != _20132_itself) && ((*(_22016_f)).get()._field_Ident == _20149_ident)) && ((*(_22016_f)).get()._field_Binded == _20161_binded))) {
					return true;;
				};
			}
			_iter_next_1b75bb129:;
			++it;
			goto _iter_begin_1b75bb129;
		}
		_iter_end_1b75bb129:;
	};
	if (_20161_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75bc306:;
		if (it != expr_end) {
			jule::Ptr<_1d21494c8_Trait> *_23016_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23016_t))) != _20132_itself) && ((*(_23016_t)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1b75bc306:;
			++it;
			goto _iter_begin_1b75bc306;
		}
		_iter_end_1b75bc306:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75bb756:;
		if (it != expr_end) {
			jule::Ptr<_1d214bc5b_Enum> *_23616_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23616_e))) != _20132_itself) && ((*(_23616_e)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1b75bb756:;
			++it;
			goto _iter_begin_1b75bb756;
		}
		_iter_end_1b75bb756:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75bdbba:;
		if (it != expr_end) {
			jule::Ptr<_1d214d356_TypeEnum> *_24216_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24216_te))) != _20132_itself) && ((*(_24216_te)).get()._field_Ident == _20149_ident))) {
					return true;;
				};
			}
			_iter_next_1b75bdbba:;
			++it;
			goto _iter_begin_1b75bdbba;
		}
		_iter_end_1b75bdbba:;
	};
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d040428a_SymbolTable _Src) {
	_Stream << "SymbolTable{";
	_Stream << "File:" << _Src._field_File << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Imports:" << _Src._field_Imports << ", ";
	_Stream << "Vars:" << _Src._field_Vars << ", ";
	_Stream << "TypeAliases:" << _Src._field_TypeAliases << ", ";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Funcs:" << _Src._field_Funcs << ", ";
	_Stream << "Traits:" << _Src._field_Traits << ", ";
	_Stream << "Enums:" << _Src._field_Enums << ", ";
	_Stream << "TypeEnums:" << _Src._field_TypeEnums << ", ";
	_Stream << "Impls:" << _Src._field_Impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1d0409180_IsNil(_1d0408c95_Data* _self_) {
	return _1d21d2d9c_IsNil((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1d04093e4_IsVoid(_1d0408c95_Data* _self_) {
	return _1d21d3111_Void((*(_self_))._field_Kind.ptr());;
}



inline jule::Bool _1d0409658_IsConst(_1d0408c95_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1d0409966_GoodOperand(_1d0408c95_Data* _self_, jule::Ptr<_1d0408c95_Data>* _10031_other) {
	if ((_1d21d5014_TypeEnum((*(_10031_other)).get()._field_Kind.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1d21d4563_Prim((*(_10031_other)).get()._field_Kind.ptr()) == nullptr) || (!(_1d21dca11_IsAny(_1d21d4563_Prim((*(_10031_other)).get()._field_Kind.ptr()).ptr())))) && (_1d21d5c29_Trait((*(_10031_other)).get()._field_Kind.ptr()) == nullptr)) && (!(_1d21d2d9c_IsNil((*(_self_))._field_Kind.ptr()))));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0408c95_Data _Src) {
	_Stream << "Data{";
	_Stream << "untyped:" << _Src._field_untyped << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Mutable:" << _Src._field_Mutable << ", ";
	_Stream << "Reference:" << _Src._field_Reference << ", ";
	_Stream << "Lvalue:" << _Src._field_Lvalue << ", ";
	_Stream << "IsRune:" << _Src._field_IsRune << ", ";
	_Stream << "Model:" << _Src._field_Model << ", ";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Constant:" << _Src._field_Constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0409d1d_Value _Src) {
	_Stream << "Value{";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Data:" << _Src._field_Data;
	_Stream << "}";
	return _Stream;
}



inline void _1d040ad1e_pushErr(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _13126_token, jule::Str _13141_fmt, jule::Slice<jule::Any> _13154_args) {
	_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _13126_token, _13141_fmt, _13154_args);
}



inline void _1d040b13d_pushSuggestion(_1d040a813_Eval* _self_, jule::Str _13633_fmt, jule::Slice<jule::Any> _13646_args) {
	_1d219e044_pushSuggestion((*(_self_))._field_s.ptr(), _13633_fmt, _13646_args);
}



inline void _1d040b319_allowBuiltin(_1d040a813_Eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1d040b4e5_disallowBuiltin(_1d040a813_Eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1d040b759_isUnsafe(_1d040a813_Eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1d040b9bd_isGlobal(_1d040a813_Eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b75edb62:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b75edc0b:;
			{
				return false;;
			}
		}
		_match_end_1b75ee27d:;
	};
}



inline jule::Bool _1d040bc98_applyNumericPrefix(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _16342_d) {
	if ((((((*(_16342_d)) == nullptr) || (!(_1d0409658_IsConst((*(_16342_d)).ptr())))) || (_1d21d4563_Prim((*(_16342_d)).get()._field_Kind.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1d21d9568_Prim> _17013_prim = _1d21d4563_Prim((*(_self_))._field_prefix.ptr());;
	if ((_17013_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1e76e5520_IsFloat(_1d21d98cb_Str(_17013_prim.ptr()))) {
			_case_begin_1b760168c:;
			{
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>((*((*(_self_))._field_prefix)));
				_1e76e9524_SetF64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1e76e87a9_AsF64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1e76e4b6d_IsSigInt(_1d21d98cb_Str(_17013_prim.ptr()))) {
			_case_begin_1b7601714:;
			{
				if ((!(_1d03e1d16_sigAssignable(_1d21d98cb_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>((*((*(_self_))._field_prefix)));
				_1e76e8a2e_SetI64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		else if (_1e76e4e59_IsUnsigInt(_1d21d98cb_Str(_17013_prim.ptr()))) {
			_case_begin_1b760178b:;
			{
				if ((!(_1d03e219b_unsigAssignable(_1d21d98cb_Str(_17013_prim.ptr()), _16342_d)))) {
					return false;;
				};
				(*(_16342_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>((*((*(_self_))._field_prefix)));
				_1e76e8ca4_SetU64((*(_16342_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64((*(_16342_d)).get()._field_Constant.ptr())));
				(*(_16342_d)).get()._field_Constant.get()._field_Kind=_17013_prim.get()._field_Kind;
			}
		}
		_match_end_1b7601a11:;
	};
	return true;;
}



inline jule::Ptr<_1d0408c95_Data> _1d040c00c_litNil(_1d040a813_Eval* _self_) {
	jule::Ptr<_1e76e5cc3_Const> _20217_constant = static__1e76e6ec2_NewNil();;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=nullptr}), ._field_Mutable=true, ._field_Model=jule::Any(_20217_constant, &__jule_any_type19), ._field_Constant=_20217_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d040c31a_litStr(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr>* _21122_l) {
	jule::Str _21217_s = (*(_21122_l)).get()._field_Value.slice(1LL, ((*(_21122_l)).get()._field_Value.len() - 1LL));;
	if (_22be13b71_IsRawStr((*(_21122_l)).get()._field_Value)) {
		_21217_s=_1d03e0298_ToRawStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	} else {
		_21217_s=_1d03e05b7_ToStr(static_cast<jule::Slice<jule::U8>>(_21217_s));
	};
	jule::Ptr<_1e76e5cc3_Const> _21817_constant = static__1e76e6a2c_NewStr(_21217_s);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Mutable=true, ._field_Model=jule::Any(_21817_constant, &__jule_any_type19), ._field_Constant=_21817_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d040c628_litBool(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr>* _22823_l) {
	jule::Ptr<_1e76e5cc3_Const> _22917_constant = static__1e76e6785_NewBool((*(_22823_l)).get()._field_Value.equal("true", 4));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Mutable=true, ._field_Model=jule::Any(_22917_constant, &__jule_any_type19), ._field_Constant=_22917_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d040c936_litRune(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr>* _23823_l) {
	jule::Str _24013_lt = (*(_23823_l)).get()._field_Value.slice(1LL, ((*(_23823_l)).get()._field_Value.len() - 1LL));;
	jule::I32 _24113_r = _1d03e0001_ToRune(static_cast<jule::Slice<jule::U8>>(_24013_lt));;
	jule::Ptr<_1d0408c95_Data> _24217_data = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_24113_r)))});;
	jule::Bool _24613_isAscii = _1d03c833b_IsAscii(_24113_r);;
	if (_24613_isAscii) {
		_24217_data.get()._field_Kind=_1d0643221_primU8;
	} else {
		_24217_data.get()._field_Kind=_1d0642b8d_primI32;
	};
	_24217_data.get()._field_Mutable=true;
	_24217_data.get()._field_Model=jule::Any(jule::new_ptr<_1d0620d03_RuneExprModel>(_1d0620d03_RuneExprModel{._field_Code=_24113_r}), &__jule_any_type88);
	_24217_data.get()._field_IsRune=true;
	_24217_data.get()._field_untyped=true;
	return _24217_data;;
}



inline jule::Ptr<_1d0408c95_Data> _1d040cc44_litFloat(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr>* _26024_l) {
	jule::F64 _26113_f = ({
		auto except = _1e76cba34_ParseFloat((*(_26024_l)).get()._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1e76e5cc3_Const> _26217_constant = static__1e76e6cc4_NewF64(_26113_f);;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_untyped=true, ._field_Kind=_1d06442aa_primF64, ._field_Mutable=true, ._field_Model=jule::Any(_26217_constant, &__jule_any_type19), ._field_Constant=_26217_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d040d052_litInt(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr>* _27226_l) {
	;
	jule::Str _27517_lit = (*(_27226_l)).get()._field_Value;;
	jule::I64 _27617_base = 0LL;;
	{
		
		if (_22b99a95b_HasPrefix(_27517_lit, jule::Str("0x", 2))) {
			_case_begin_1b7610822:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=16LLU;
			}
		}
		else if (_22b99a95b_HasPrefix(_27517_lit, jule::Str("0b", 2))) {
			_case_begin_1b7610888:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=2LLU;
			}
		}
		else if (_22b99a95b_HasPrefix(_27517_lit, jule::Str("0o", 2))) {
			_case_begin_1b7610536:;
			{
				(_27517_lit).mut_slice(2LL);;
				_27617_base=8LLU;
			}
		}
		else if (((_27517_lit[0LL] == '0') && (_27517_lit.len() > 1LL))) {
			_case_begin_1b761059c:;
			{
				(_27517_lit).mut_slice(1LL);;
				_27617_base=8LLU;
			}
		}
		else {
			_case_begin_1b76104c0:;
			{
				_27617_base=10LLU;
			}
		}
		_match_end_1b761046a:;
	};
	jule::Ptr<_1d0408c95_Data> _29617_d = jule::new_ptr<_1d0408c95_Data>();;
	jule::Bool _29817_ok = true;;
	jule::I64 _29913_sig = ({
		auto except = _1e76c5544_ParseInt(_27517_lit, _27617_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_29817_ok=false;

			0LL;
		});
	});;
	if (_29817_ok) {
		_29617_d.get()._field_Constant=static__1e76e6246_NewI64(_29913_sig);
		_29617_d.get()._field_Kind=_1d0642231_primInt;
	} else {
		jule::U64 _30717_unsig = ({
			auto except = _1e76c50d2_ParseUint(_27517_lit, _27617_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1d040ad1e_pushErr(_self_, (*(_27226_l)).get()._field_Token, jule::Str("arithmetic value overflow: this value too big", 45), jule::Slice<jule::Any>());
				_1d040b13d_pushSuggestion(_self_, jule::Str("floating-point literals may solve your problem", 46), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		_29617_d.get()._field_Constant=static__1e76e64dd_NewU64(_30717_unsig);
		_29617_d.get()._field_Kind=_1d0641e67_primUint;
	};
	_29617_d.get()._field_Model=jule::Any(_29617_d.get()._field_Constant, &__jule_any_type19);
	if ((!(_1d040bc98_applyNumericPrefix(_self_, &(_29617_d))))) {
		_1d21cb439_fitBitsize(&(_29617_d));
	};
	_29617_d.get()._field_Mutable=true;
	_29617_d.get()._field_untyped=true;
	return _29617_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d040d360_litNum(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr>* _32826_l) {
	{
		
		if (_22be147cb_IsFloat((*(_32826_l)).get()._field_Value)) {
			_case_begin_1b761c510:;
			{
				return _1d040cc44_litFloat(_self_, _32826_l);;
			}
		}
		else {
			_case_begin_1b761bd28:;
			{
				return _1d040d052_litInt(_self_, _32826_l);;
			}
		}
		_match_end_1b761bc7e:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d040d66d_evalLit(_1d040a813_Eval* _self_, jule::Ptr<_1d05e4722_LitExpr> _33726_lit) {
	{
		
		if (_1d05e49db_IsNil(_33726_lit.ptr())) {
			_case_begin_1b761d016:;
			{
				return _1d040c00c_litNil(_self_);;
			}
		}
		else if (_22be138c9_IsStr(_33726_lit.get()._field_Value)) {
			_case_begin_1b761d07c:;
			{
				return _1d040c31a_litStr(_self_, &(_33726_lit));;
			}
		}
		else if (_22be14534_IsBool(_33726_lit.get()._field_Value)) {
			_case_begin_1b761d0e3:;
			{
				return _1d040c628_litBool(_self_, &(_33726_lit));;
			}
		}
		else if (_22be13e18_IsRune(_33726_lit.get()._field_Value)) {
			_case_begin_1b761d159:;
			{
				return _1d040c936_litRune(_self_, &(_33726_lit));;
			}
		}
		else if (_22be14a73_IsNum(_33726_lit.get()._field_Value)) {
			_case_begin_1b761d29c:;
			{
				return _1d040d360_litNum(_self_, &(_33726_lit));;
			}
		}
		else {
			_case_begin_1b761c9d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1b761c0d1:;
	};
}



inline jule::Any _1d040d97b_findBuiltins(_1d040a813_Eval* _self_, jule::Str _35431_ident) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b76204e1:;
			{
				jule::Any _35721_def = _1d21cb22a_findBuiltinsImport(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1d219307c_ImportInfo>(1));;
				if ((_35721_def != nullptr)) {
					return _35721_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b7620953:;
			{
				jule::Any _36221_def = _1d21cbd30_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1d219b34e_Sema>(3));;
				if ((_36221_def != nullptr)) {
					return _36221_def;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b76209b9:;
			{
				jule::Any _36721_def = _1d21cbd30_findBuiltinsSema(_35431_ident, (*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0).get()._field_s);;
				if ((_36721_def != nullptr)) {
					return _36721_def;;
				};
			}
		}
		_match_end_1b761ec4e:;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1d064472d_findBuiltinDef(_35431_ident);;
}



inline jule::Any _1d040dd33_getDef(_1d040a813_Eval* _self_, jule::Str _37825_ident, jule::Bool _37837_binded) {
	jule::Ptr<_1d21bb65a_Var> _38317_v = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ed9de_FindVar((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38317_v != nullptr)) {
		return jule::Any(_38317_v, &__jule_any_type8);;
	};
	jule::Ptr<_1d21d10ed_TypeAlias> _38817_ta = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21edd96_FindTypeAlias((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_38817_ta != nullptr)) {
		return jule::Any(_38817_ta, &__jule_any_type67);;
	};
	if ((!(_37837_binded))) {
		jule::Ptr<_1d214bc5b_Enum> _39421_enm = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21eec21_FindEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39421_enm != nullptr)) {
			return jule::Any(_39421_enm, &__jule_any_type68);;
		};
		jule::Ptr<_1d214d356_TypeEnum> _39921_tenm = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d220002e_FindTypeEnum((*(_self_))._field_lookup, _37825_ident);;
		if ((_39921_tenm != nullptr)) {
			return jule::Any(_39921_tenm, &__jule_any_type69);;
		};
	};
	jule::Ptr<_1d06242bd_Fn> _40517_f = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ee605_FindFn((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_40517_f != nullptr)) {
		return jule::Any(_40517_f, &__jule_any_type65);;
	};
	jule::Ptr<_1d060ddbd_Struct> _41017_s = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ee24d_FindStruct((*(_self_))._field_lookup, _37825_ident, _37837_binded);;
	if ((_41017_s != nullptr)) {
		return jule::Any(_41017_s, &__jule_any_type66);;
	};
	return _1d040d97b_findBuiltins(_self_, _37825_ident);;
}



inline void _1b763601d_pushReference(_1d040a813_Eval* _self_, jule::Ptr<_1d0626e6e_FnIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b76379c0:;
			{
				jule::Ptr<_1d217b241_scopeChecker> _42121_sc = _1d217e2cc_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0));;
				if ((!(_1b763895a_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1d062aa44_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		else {
			_case_begin_1b76373c6:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b763895a_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1d062aa44_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type7));
				};
			}
		}
		_match_end_1b7637371:;
	};
}

inline void _1b7649680_pushReference(_1d040a813_Eval* _self_, jule::Ptr<_1d21bb65a_Var>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b764b0dd:;
			{
				jule::Ptr<_1d217b241_scopeChecker> _42121_sc = _1d217e2cc_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0));;
				if ((!(_1b764c078_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1d062aa44_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		else {
			_case_begin_1b764a9e4:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b764c078_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1d062aa44_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type8));
				};
			}
		}
		_match_end_1b764a98e:;
	};
}

inline void _1b76d40dd_pushReference(_1d040a813_Eval* _self_, jule::Ptr<_1d0611bd4_StructIns>* _41840_ref) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b76d5ab2:;
			{
				jule::Ptr<_1d217b241_scopeChecker> _42121_sc = _1d217e2cc_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0));;
				if ((!(_1b76d6a4c_Exist(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), (*(_41840_ref)))))) {
					_1d062aa44_Push(_42121_sc.get()._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		else {
			_case_begin_1b76d54b8:;
			{
				if (((((*(_self_))._field_owner != nullptr) && ((*(_self_))._field_owner.get()._field_Scope == nullptr)) && (!(_1b76d6a4c_Exist((*(_self_))._field_owner.get()._field_Refers.ptr(), (*(_41840_ref))))))) {
					_1d062aa44_Push((*(_self_))._field_owner.get()._field_Refers.ptr(), jule::Any((*(_41840_ref)), &__jule_any_type9));
				};
			}
		}
		_match_end_1b76d5463:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d040e3b6__evalEnum(_1d040a813_Eval* _self_, jule::Ptr<_1d214bc5b_Enum> _43528_enm) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_43528_enm, 3)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1d0408c95_Data> _1d040e76d_evalEnum(_1d040a813_Eval* _self_, jule::Ptr<_1d214bc5b_Enum> _44431_enm, jule::Ptr<_22be1281d_Token> _44443_errorToken) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _44431_enm.get()._field_Public, _44431_enm.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _44443_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_44431_enm.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d040e3b6__evalEnum(_self_, _44431_enm);;
}



inline jule::Ptr<_1d0408c95_Data> _1d040ea7b__evalTypeEnum(_1d040a813_Eval* _self_, jule::Ptr<_1d214d356_TypeEnum> _45332_enm) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_45332_enm, 4)}), ._field_Decl=true, });;
}



inline jule::Ptr<_1d0408c95_Data> _1d040ee33_evalTypeEnum(_1d040a813_Eval* _self_, jule::Ptr<_1d214d356_TypeEnum> _46235_enm, jule::Ptr<_22be1281d_Token> _46251_errorToken) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _46235_enm.get()._field_Public, _46235_enm.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _46251_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_46235_enm.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d040ea7b__evalTypeEnum(_self_, _46235_enm);;
}



inline jule::Ptr<_1d0408c95_Data> _1d0410241__evalStruct(_1d040a813_Eval* _self_, jule::Ptr<_1d0611bd4_StructIns> _47130_s) {
	jule::Ptr<_1d0408c95_Data> _47217_d = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_47130_s, 0)}), ._field_Model=jule::Any(_47130_s, &__jule_any_type9), ._field_Decl=true, });;
	if (((_47130_s.get()._field_Decl != nullptr) && _47130_s.get()._field_Decl.get()._field_Binded)) {
		_47217_d.get()._field_Kind.get()._field_BindIdent=_47130_s.get()._field_Decl.get()._field_Ident;
	};
	return _47217_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d04105e8_evalStruct(_1d040a813_Eval* _self_, jule::Ptr<_1d0611bd4_StructIns> _48533_s, jule::Ptr<_22be1281d_Token> _48548_errorToken) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _48533_s.get()._field_Decl.get()._field_Public, _48533_s.get()._field_Decl.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _48548_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_48533_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d0410c25_checkDeprecated(_self_, &(_48533_s.get()._field_Decl.get()._field_Directives), _48548_errorToken);
	return _1d0410241__evalStruct(_self_, _48533_s);;
}



inline jule::Ptr<_1d0408c95_Data> _1d0410906_evalFnIns(_1d040a813_Eval* _self_, jule::Ptr<_1d0626e6e_FnIns> _49528_f) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_49528_f, 1)}), ._field_Model=jule::Any(_49528_f, &__jule_any_type7), });;
}



inline void _1d0410c25_checkDeprecated(_1d040a813_Eval* _self_, jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _50439_directives, jule::Ptr<_22be1281d_Token> _50470_tok) {
	if (_1d040b759_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1d05aba4c_Directive> _50913_d = _1d21cad95_findDirective(_50439_directives, jule::Str("deprecated", 10));;
	if ((_50913_d != nullptr)) {
		if ((_50913_d.get()._field_Args.len() == 0LL)) {
			_1d040ad1e_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(jule::Str("this code is deprecated", 23), &__jule_any_type5)}));
		} else {
			_1d040ad1e_pushErr(_self_, _50470_tok, jule::Str("deprecated usage: @", 19), jule::Slice<jule::Any>::make({jule::Any(_50913_d.get()._field_Args[0LL].get()._field_Kind, &__jule_any_type5)}));
		};
		_1d040b13d_pushSuggestion(_self_, jule::Str("use Unsafe Jule for deprecated codes or replace to successor", 60), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04110cc_evalFn(_1d040a813_Eval* _self_, jule::Ptr<_1d06242bd_Fn> _52029_f, jule::Ptr<_22be1281d_Token> _52037_errorToken) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _52029_f.get()._field_Public, _52029_f.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _52037_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_52029_f.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d0410c25_checkDeprecated(_self_, &(_52029_f.get()._field_Directives), _52037_errorToken);
	jule::Ptr<_1d0626e6e_FnIns> _52917_ins = _1d062591d_instance(_52029_f);;
	_1b763601d_pushReference(_self_, &(_52917_ins));
	return _1d0410906_evalFnIns(_self_, _52917_ins);;
}



inline void _1d0411495_pushIllegalCycleError(_1d040a813_Eval* _self_, jule::Ptr<_1d21bb65a_Var>* _53441_v1, jule::Ptr<_1d21bb65a_Var>* _53452_v2, jule::Str* _53467_message) {
	;
	jule::Str _53613_refers_to = _22ba3cb0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any((*(_53441_v1)).get()._field_Ident, &__jule_any_type5),jule::Any((*(_53452_v2)).get()._field_Ident, &__jule_any_type5)}));;
	((*(_53467_message))).buffer.insert(0, (((_22b99a1db_Repeat(jule::Str(" ", 1), 7LL) + _53613_refers_to) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d041184c_checkCrossCycle(_1d040a813_Eval* _self_, jule::Ptr<_1d21bb65a_Var>* _54035_v, jule::Str* _54049_message) {
	{
		auto expr = &((*(_54035_v)).get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b763d751:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> *_54116_d = it;
			{
				if (((*(_54116_d)) == (*(_self_))._field_owner)) {
					_1d0411495_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
				if ((!(_1d041184c_checkCrossCycle(_self_, _54116_d, _54049_message)))) {
					_1d0411495_pushIllegalCycleError(_self_, _54035_v, _54116_d, _54049_message);
					return false;;
				};
			}
			_iter_next_1b763d751:;
			++it;
			goto _iter_begin_1b763d751;
		}
		_iter_end_1b763d751:;
	};
	return true;;
}



inline jule::Bool _1d0411c04_checkIllegalCycles(_1d040a813_Eval* _self_, jule::Ptr<_1d21bb65a_Var>* _55942_v, jule::Ptr<_22be1281d_Token> _55951_decl_token) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*(_self_))._field_owner.get()._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_55942_v)))) {
		_1d040ad1e_pushErr(_self_, (*(_self_))._field_owner.get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_owner.get()._field_Ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _57217_message = jule::Str();;
	if ((!(_1d041184c_checkCrossCycle(_self_, _55942_v, &(_57217_message))))) {
		jule::Str _57521_errMsg = _57217_message;;
		_57217_message=jule::Str();
		_1d0411495_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _55942_v, &(_57217_message));
		_57521_errMsg+=_57217_message;
		_1d040ad1e_pushErr(_self_, _55951_decl_token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_57521_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*(_self_))._field_owner.get()._field_Depends = jule::alloc_for_append((*(_self_))._field_owner.get()._field_Depends,1);(*(_self_))._field_owner.get()._field_Depends.__push((*(_55942_v)));;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d0408c95_Data> _1d04120ab_evalVar(_1d040a813_Eval* _self_, jule::Ptr<_1d21bb65a_Var> _58730_v, jule::Ptr<_22be1281d_Token> _58739_errorToken) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _58730_v.get()._field_Public, _58730_v.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _58739_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d0410c25_checkDeprecated(_self_, &(_58730_v.get()._field_Directives), _58739_errorToken);
	_58730_v.get()._field_Used=true;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b76457ad:;
			{
				jule::Bool _60117_ok = _1d0411c04_checkIllegalCycles(_self_, &(_58730_v), _58739_errorToken);;
				if ((!(_60117_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b7645868:;
			{
				if (((!(_58730_v.get()._field_Reference)) || _1d040b759_isUnsafe(_self_))) {
					goto _match_end_1b7645758;
				};
				jule::Ptr<_1d217b241_scopeChecker> _60921_s = (*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0);;
				while (((_60921_s.get()._field_owner == nullptr) && (_60921_s.get()._field_parent != nullptr))) {
					{
						_60921_s=_60921_s.get()._field_parent;
					}
				_iter_next_1b764797a:;
				}
				_iter_end_1b764797a:;;
				if ((((_60921_s.get()._field_owner != nullptr) && _60921_s.get()._field_owner.get()._field_Anon) && (_58730_v.get()._field_Scope != _60921_s.get()._field_owner.get()._field_Scope))) {
					_1d040ad1e_pushErr(_self_, _58739_errorToken, jule::Str("anonymous functions cannot access to reference definition @ of parent scope", 75), jule::Slice<jule::Any>::make({jule::Any(_58730_v.get()._field_Ident, &__jule_any_type5)}));
				};
			}
		}
		_match_end_1b7645758:;
	};
	if ((_58730_v.get()._field_Scope == nullptr)) {
		_1b7649680_pushReference(_self_, &(_58730_v));
	};
	if (((!(_58730_v.get()._field_Binded)) && ((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr)))) {
		if (_58730_v.get()._field_Constant) {
			_1d21b3a92_checkTypeVar((*(_self_))._field_s, &(_58730_v), jule::Trait<_1d2200172_Lookup>((*(_self_))._field_s, 3));
			if (((_58730_v.get()._field_Value == nullptr) || (_58730_v.get()._field_Value.get()._field_Data == nullptr))) {
				return nullptr;;
			};
		};
	};
	if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
		if ((_58730_v.get()._field_Scope != nullptr)) {
			return nullptr;;
		};
		_1d21b3a92_checkTypeVar((*(_self_))._field_s, &(_58730_v), (*(_self_))._field_lookup);
		if (((_58730_v.get()._field_Kind == nullptr) || (_58730_v.get()._field_Kind.get()._field_Kind == nullptr))) {
			return nullptr;;
		};
	};
	jule::Ptr<_1d0408c95_Data> _65217_d = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_58730_v.get()._field_Kind.get()._field_Kind, ._field_Mutable=_58730_v.get()._field_Mutable, ._field_Reference=_58730_v.get()._field_Reference, ._field_Lvalue=(!(_58730_v.get()._field_Constant)), ._field_Model=jule::Any(_58730_v, &__jule_any_type8), });;
	if ((((!(_58730_v.get()._field_Binded)) && _1d21bba23_IsInitialized(_58730_v.ptr())) && (_58730_v.get()._field_Value.get()._field_Data != nullptr))) {
		_65217_d.get()._field_IsRune=_58730_v.get()._field_Value.get()._field_Data.get()._field_IsRune;
	};
	if ((_58730_v.get()._field_Constant && (_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant != nullptr))) {
		_65217_d.get()._field_Constant=jule::new_ptr<_1e76e5cc3_Const>((*(_58730_v.get()._field_Value.get()._field_Data.get()._field_Constant)));
		_65217_d.get()._field_Model=jule::Any(_65217_d.get()._field_Constant, &__jule_any_type19);
		if (_1d21bbeeb_untypedConstant(_58730_v.ptr())) {
			_1d040bc98_applyNumericPrefix(_self_, &(_65217_d));
			_65217_d.get()._field_untyped=true;
		};
	};
	return _65217_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0412463_evalTypeAlias(_1d040a813_Eval* _self_, jule::Ptr<_1d21d10ed_TypeAlias> _67636_ta, jule::Ptr<_22be1281d_Token> _67652_errorToken) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _67636_ta.get()._field_Public, _67636_ta.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _67652_errorToken, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_67636_ta.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_67636_ta.get()._field_Used=true;
	jule::Trait<_1d21d18d4_Kind> _68517_kind = _67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
	jule::Ptr<_1d0408c95_Data> _68617_d = nullptr;;
	{
		auto &_match_expr{ _68517_kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b765a361:;
			{
				_68617_d=_1d0410241__evalStruct(_self_, _68517_kind.cast_ptr<_1d0611bd4_StructIns>(0));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b7658e42:;
			{
				_68617_d=_1d040e3b6__evalEnum(_self_, _68517_kind.cast_ptr<_1d214bc5b_Enum>(3));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b7658ea8:;
			{
				_68617_d=_1d040ea7b__evalTypeEnum(_self_, _68517_kind.cast_ptr<_1d214d356_TypeEnum>(4));
			}
		}
		else {
			_case_begin_1b7658d21:;
			{
				_68617_d=jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_Kind}), ._field_Decl=true, });
				if (_67636_ta.get()._field_Binded) {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Ident;
				} else {
					_68617_d.get()._field_Kind.get()._field_BindIdent=_67636_ta.get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
				};
				_68617_d.get()._field_Model=jule::Any(_68617_d.get()._field_Kind, &__jule_any_type89);
			}
		}
		_match_end_1b7658cbb:;
	};
	_68617_d.get()._field_Kind.get()._field_Generic=_67636_ta.get()._field_Generic;
	return _68617_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d041281a_evalDef(_1d040a813_Eval* _self_, jule::Any _71230_def, jule::Ptr<_22be1281d_Token> _71240_ident) {
	{
		auto &_match_expr{ _71230_def };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b765cc26:;
			{
				return _1d04120ab_evalVar(_self_, _71230_def.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1b765cc8c:;
			{
				return _1d040e76d_evalEnum(_self_, _71230_def.cast_ptr<_1d214bc5b_Enum>(&__jule_any_type68), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1b765cd03:;
			{
				return _1d040ee33_evalTypeEnum(_self_, _71230_def.cast_ptr<_1d214d356_TypeEnum>(&__jule_any_type69), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b765cd7a:;
			{
				return _1d04105e8_evalStruct(_self_, _1d060e330_instance(_71230_def.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66)), _71240_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1b765cde1:;
			{
				jule::Ptr<_1d06242bd_Fn> _72321_f = _71230_def.cast_ptr<_1d06242bd_Fn>(&__jule_any_type65);;
				if ((!_72321_f.get()._field_Ident.equal("init", 4))) {
					return _1d04110cc_evalFn(_self_, _72321_f, _71240_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b765ce57:;
			{
				return _1d0410906_evalFnIns(_self_, _71230_def.cast_ptr<_1d0626e6e_FnIns>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b765cece:;
			{
				return _1d0412463_evalTypeAlias(_self_, _71230_def.cast_ptr<_1d21d10ed_TypeAlias>(&__jule_any_type67), _71240_ident);;
			}
		}
		_match_end_1b765cb38:;
	};
	_1d040ad1e_pushErr(_self_, _71240_ident, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any(_71240_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0412b28_evalIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d05e52d3_IdentExpr> _73628_ident) {
	jule::Any _73717_def = _1d040dd33_getDef(_self_, _73628_ident.get()._field_Ident, _73628_ident.get()._field_Binded);;
	return _1d041281a_evalDef(_self_, _73717_def, _73628_ident.get()._field_Token);;
}



inline jule::Ptr<_1d0408c95_Data> _1d0412e36_evalUnary(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e59dc_UnaryExpr> _74133_u) {
	_1d062bca9_unaryEval _74217_unary = static__1d062c062_new(_self_);;
	return _1d062d2b6_eval(&_74217_unary, _74133_u);;
}



inline jule::Ptr<_1d0408c95_Data> _1d0413244_evalVariadic(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e5d94_VariadicExpr> _74636_v) {
	if ((_74636_v.get()._field_Expr == nullptr)) {
		_1d040ad1e_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _75217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_75217_prefix;
	});;
	jule::Ptr<_1d0408c95_Data> _75617_d = _1d01dac53_evalExpr(_self_, _74636_v.get()._field_Expr);;
	if ((_75617_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d21d42ee_Variadicable(_75617_d.get()._field_Kind.ptr())))) {
		_1d040ad1e_pushErr(_self_.ptr(), _74636_v.get()._field_Token, jule::Str("type @ is not variadicable", 26), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_75617_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d21dd759_Slc> _76613_slc = _1d21d54dc_Slc(_75617_d.get()._field_Kind.ptr());;
	_75617_d.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_BindIdent=_76613_slc.get()._field_Elem.get()._field_BindIdent, ._field_Generic=_76613_slc.get()._field_Elem.get()._field_Generic, ._field_Variadic=true, ._field_Kind=_76613_slc.get()._field_Elem.get()._field_Kind});
	return _75617_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0413552_evalUnsafe(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e4d60_UnsafeExpr> _77634_u) {
	jule::Bool _77713_unsafety = _self_.get()._field_unsafety;;
	_self_.get()._field_unsafety=true;
	jule::Ptr<_1d0408c95_Data> _77917_d = _1d01dac53_evalExpr(_self_, _77634_u.get()._field_Expr);;
	_self_.get()._field_unsafety=_77713_unsafety;
	return _77917_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0413860_evalArr(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e9d21_SliceExpr> _78431_s) {
	jule::Ptr<_1d21e0904_Arr> _78617_pt = _1d21d5278_Arr(_self_.get()._field_prefix.ptr());;
	jule::Ptr<_1d21e0904_Arr> _78817_arr = jule::new_ptr<_1d21e0904_Arr>(_1d21e0904_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=_78617_pt.get()._field_Elem});;
	jule::Bool _79417_filled = false;;
	if ((_78431_s.get()._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ _78431_s.get()._field_Exprs[1LL].get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type81) {
				_case_begin_1b766b5b4:;
				{
					if ((_78431_s.get()._field_Exprs[1LL].get()._field_Kind.cast_ptr<_1d05e5d94_VariadicExpr>(&__jule_any_type81).get()._field_Expr != nullptr)) {
						goto _match_end_1b766b55e;
					};
					if (_78617_pt.get()._field_Auto) {
						_1d040ad1e_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("auto-sized arrays cannot filled", 31), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_79417_filled=true;
					_78431_s.get()._field_Exprs=_78431_s.get()._field_Exprs.slice(0LL, 1LL);
				}
			}
			_match_end_1b766b55e:;
		};
	};
	_78817_arr.get()._field_N=static_cast<jule::I64>(_78431_s.get()._field_Exprs.len());
	if ((!(_78617_pt.get()._field_Auto))) {
		if ((_78817_arr.get()._field_N > _78617_pt.get()._field_N)) {
			_1d040ad1e_pushErr(_self_.ptr(), _78431_s.get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else if ((_78817_arr.get()._field_N < _78617_pt.get()._field_N)) {
			_78817_arr.get()._field_N=_78617_pt.get()._field_N;
		};
	};
	jule::Ptr<_1d061b095_ArrayExprModel> _82317_model = jule::new_ptr<_1d061b095_ArrayExprModel>(_1d061b095_ArrayExprModel{._field_Kind=_78817_arr, });;
	if (_79417_filled) {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, 2LL, jule::Any(nullptr));
	} else {
		_82317_model.get()._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _78431_s.get()._field_Exprs.len(), jule::Any(nullptr));
	};
	jule::Ptr<_1d21d1d46_TypeKind> _83217_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_78817_arr.get()._field_Elem;
	{
		auto expr = &(_78431_s.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b76713aa:;
		if (it != expr_end) {
			jule::Ptr<_1d05e36dd_Expr> _83421_elem = *it;
			{
				jule::Ptr<_1d0408c95_Data> _83521_d = _1d01dac53_evalExpr(_self_, _83421_elem);;
				if ((_83521_d == nullptr)) {
					goto _iter_next_1b76713aa;
				};
				_1d21a5eb3_checkAssignType(_self_.get()._field_s, false, &(_78817_arr.get()._field_Elem), &(_83521_d), _78431_s.get()._field_Token);
				_82317_model.get()._field_Elems = jule::alloc_for_append(_82317_model.get()._field_Elems,1);_82317_model.get()._field_Elems.__push(_83521_d.get()._field_Model);;
			}
			_iter_next_1b76713aa:;
			++it;
			goto _iter_begin_1b76713aa;
		}
		_iter_end_1b76713aa:;
	};
	_self_.get()._field_prefix=_83217_prefix;
	if (_79417_filled) {
		_82317_model.get()._field_Elems = jule::alloc_for_append(_82317_model.get()._field_Elems,1);_82317_model.get()._field_Elems.__push(nullptr);;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_78817_arr, 25)}), ._field_Mutable=true, ._field_Model=jule::Any(_82317_model, &__jule_any_type90), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d0413cb1_evalExpSlc(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e9d21_SliceExpr> _85834_s, jule::Ptr<_1d21d1d46_TypeKind> _85853_t, jule::Any _85871_first) {
	jule::Ptr<_1d21dd759_Slc> _85917_slc = jule::new_ptr<_1d21dd759_Slc>(_1d21dd759_Slc{._field_Elem=_85853_t});;
	jule::I64 _86317_i = 0LL;;
	jule::Ptr<_1d061836c_SliceExprModel> _86417_model = jule::new_ptr<_1d061836c_SliceExprModel>(_1d061836c_SliceExprModel{._field_ElemKind=_85853_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _85834_s.get()._field_Exprs.len(), jule::Any(nullptr))});;
	if ((_85871_first != nullptr)) {
		_86417_model.get()._field_Elems = jule::alloc_for_append(_86417_model.get()._field_Elems,1);_86417_model.get()._field_Elems.__push(_85871_first);;
		_86317_i=1LL;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _87317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=_85917_slc.get()._field_Elem;
	{
		auto expr = _85834_s.get()._field_Exprs.slice(_86317_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b7676558:;
		if (it != expr_end) {
			jule::Ptr<_1d05e36dd_Expr> _87521_elem = *it;
			{
				jule::Ptr<_1d0408c95_Data> _87621_d = _1d01dac53_evalExpr(_self_, _87521_elem);;
				if ((_87621_d == nullptr)) {
					goto _iter_next_1b7676558;
				};
				_1d21a5eb3_checkAssignType(_self_.get()._field_s, false, &(_85917_slc.get()._field_Elem), &(_87621_d), _85834_s.get()._field_Token);
				_86417_model.get()._field_Elems = jule::alloc_for_append(_86417_model.get()._field_Elems,1);_86417_model.get()._field_Elems.__push(_87621_d.get()._field_Model);;
			}
			_iter_next_1b7676558:;
			++it;
			goto _iter_begin_1b7676558;
		}
		_iter_end_1b7676558:;
	};
	_self_.get()._field_prefix=_87317_prefix;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_85917_slc, 22)}), ._field_Mutable=true, ._field_Model=jule::Any(_86417_model, &__jule_any_type82), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d04140be_evalSliceExpr(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e9d21_SliceExpr> _89437_s) {
	if ((_self_.get()._field_prefix != nullptr)) {
		{
			
			if ((_1d21d5278_Arr(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b767923c:;
				{
					return _1d0413860_evalArr(_self_, _89437_s);;
				}
			}
			else if ((_1d21d54dc_Slc(_self_.get()._field_prefix.ptr()) != nullptr)) {
				_case_begin_1b76792b4:;
				{
					jule::Ptr<_1d21dd759_Slc> _90025_pt = _1d21d54dc_Slc(_self_.get()._field_prefix.ptr());;
					return _1d0413cb1_evalExpSlc(_self_, _89437_s, _90025_pt.get()._field_Elem, nullptr);;
				}
			}
			_match_end_1b767912c:;
		};
	};
	jule::Ptr<_1d21d1d46_TypeKind> _90517_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	if ((_89437_s.get()._field_Exprs.len() == 0LL)) {
		_1d040ad1e_pushErr(_self_.ptr(), _89437_s.get()._field_Token, jule::Str("dynamic type annotation failed", 30), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _91317_firstElem = _1d01dac53_evalExpr(_self_, _89437_s.get()._field_Exprs[0LL]);;
	if ((_91317_firstElem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _91817_d = _1d0413cb1_evalExpSlc(_self_, _89437_s, _91317_firstElem.get()._field_Kind, _91317_firstElem.get()._field_Model);;
	_self_.get()._field_prefix=_90517_prefix;
	return _91817_d;;
}



inline void _1d0414410_checkIntegerIndexingByData(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _92450_d, jule::Ptr<_22be1281d_Token> _92460_token) {
	jule::Str _92513_err_key = _1d21cd2a4_checkDataForIntegerIndexing(_92450_d);;
	{
		auto &_match_expr{ _92513_err_key };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b767dc9c:;
			{
				return;;
			}
		}
		else if (_match_expr == jule::Str("type @ is invalid for indexing", 30)) {
			_case_begin_1b767e8a2:;
			{
				_1d040ad1e_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_92450_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
			}
		}
		else {
			_case_begin_1b767e121:;
			{
				_1d040ad1e_pushErr(_self_, _92460_token, _92513_err_key, jule::Slice<jule::Any>());
			}
		}
		_match_end_1b767e044:;
	};
}



inline void _1d04147d9_indexingPtr(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _93635_d, jule::Ptr<_1d0408c95_Data>* _93650_index, jule::Ptr<_1d05ea690_IndexingExpr>* _93665_i) {
	_1d0414410_checkIntegerIndexingByData(_self_, _93650_index, (*(_93665_i)).get()._field_Token);
	jule::Ptr<_1d21e1361_Ptr> _93917_ptr = _1d21d4a3b_Ptr((*(_93635_d)).get()._field_Kind.ptr());;
	{
		
		if (_1d21e1d34_IsUnsafe(_93917_ptr.ptr())) {
			_case_begin_1b7681684:;
			{
				_1d040ad1e_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe pointers are not supports indexing", 41), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1d040b759_isUnsafe(_self_)))) {
			_case_begin_1b76816ea:;
			{
				_1d040ad1e_pushErr(_self_, (*(_93665_i)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7681574:;
	};
	(*(_93635_d)).get()._field_Kind=_93917_ptr.get()._field_Elem;
}



inline void _1d0414ba2_indexingArr(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _95135_d, jule::Ptr<_1d0408c95_Data>* _95150_index, jule::Ptr<_1d05ea690_IndexingExpr>* _95165_i) {
	jule::Ptr<_1d21e0904_Arr> _95217_arr = _1d21d5278_Arr((*(_95135_d)).get()._field_Kind.ptr());;
	(*(_95135_d)).get()._field_Kind=_95217_arr.get()._field_Elem;
	_1d0414410_checkIntegerIndexingByData(_self_, _95150_index, (*(_95165_i)).get()._field_Token);
	if ((_1d0409658_IsConst((*(_95150_index)).ptr()) && (_1e76e87a9_AsF64((*(_95150_index)).get()._field_Constant.ptr()) >= static_cast<jule::F64>(_95217_arr.get()._field_N)))) {
		_1d040ad1e_pushErr(_self_, (*(_95165_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
	};
}



inline void _1d041506a_indexingSlc(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _96035_d, jule::Ptr<_1d0408c95_Data>* _96050_index, jule::Ptr<_1d05ea690_IndexingExpr>* _96065_i) {
	jule::Ptr<_1d21dd759_Slc> _96117_slc = _1d21d54dc_Slc((*(_96035_d)).get()._field_Kind.ptr());;
	(*(_96035_d)).get()._field_Kind=_96117_slc.get()._field_Elem;
	_1d0414410_checkIntegerIndexingByData(_self_, _96050_index, (*(_96065_i)).get()._field_Token);
	if ((!(_1d0409658_IsConst((*(_96050_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_96035_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b76869a8:;
			{
				jule::Ptr<_1d061836c_SliceExprModel> _97121_m = (*(_96035_d)).get()._field_Model.cast_ptr<_1d061836c_SliceExprModel>(&__jule_any_type82);;
				jule::F64 _97217_indx = _1e76e87a9_AsF64((*(_96050_index)).get()._field_Constant.ptr());;
				if ((_97217_indx >= static_cast<jule::F64>(_97121_m.get()._field_Elems.len()))) {
					_1d040ad1e_pushErr(_self_, (*(_96065_i)).get()._field_Token, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
				} else {
					(*(_96035_d)).get()._field_Model=_97121_m.get()._field_Elems[static_cast<jule::I64>(static_cast<jule::U64>(_97217_indx))];
					(*(_96035_d)).get()._field_Decl=true;
				};
			}
		}
		_match_end_1b7686920:;
	};
}



inline void _1d0415433_indexingMap(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _98235_d, jule::Ptr<_1d0408c95_Data>* _98250_index, jule::Ptr<_1d05ea690_IndexingExpr>* _98269_i) {
	if (((*(_98250_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1d21ded10_Map> _98617_m = _1d21d5e8d_Map((*(_98235_d)).get()._field_Kind.ptr());;
	_1d03e45bb_assignTypeChecker _98717_atc = _1d03e45bb_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=_98617_m.get()._field_Key, ._field_d=(*(_98250_index)), ._field_errorToken=(*(_98269_i)).get()._field_Token};;
	_1d03e5743_check(&_98717_atc);
	(*(_98235_d)).get()._field_Kind=_98617_m.get()._field_Val;
}



inline void _1d04157eb_indexingStr(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _99735_d, jule::Ptr<_1d0408c95_Data>* _99750_index, jule::Ptr<_1d05ea690_IndexingExpr>* _99765_i) {
	(*(_99735_d)).get()._field_Kind=_1d0643221_primU8;
	if (((*(_99750_index)) == nullptr)) {
		return;;
	};
	_1d0414410_checkIntegerIndexingByData(_self_, _99750_index, (*(_99765_i)).get()._field_Token);
	if ((!(_1d0409658_IsConst((*(_99750_index)).ptr())))) {
		(*(_99735_d)).get()._field_Constant=nullptr;
		return;;
	};
	if (_1d0409658_IsConst((*(_99735_d)).ptr())) {
		jule::Ptr<_22be1281d_Token> _101217_errorToken = (*(_99765_i)).get()._field_Token;;
		jule::I64 _101317_j = _1e76e82d1_AsI64((*(_99750_index)).get()._field_Constant.ptr());;
		jule::Str _101417_s = _1e76e7d08_ReadStr((*(_99735_d)).get()._field_Constant.ptr());;
		if ((static_cast<jule::I64>(_101317_j) >= _101417_s.len())) {
			_1d040ad1e_pushErr(_self_, _101217_errorToken, jule::Str("overflow the limit of data-type", 31), jule::Slice<jule::Any>());
		} else {
			_1e76e8ca4_SetU64((*(_99735_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(_101417_s[_101317_j])));
		};
	};
}



inline void _1d0415bb4_toIndexing(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _102334_d, jule::Ptr<_1d0408c95_Data>* _102349_index, jule::Ptr<_1d05ea690_IndexingExpr>* _102368_i) {
	{
		
		if ((_1d21d4a3b_Ptr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7690352:;
			{
				_1d04147d9_indexingPtr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1d21d5278_Arr((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76903c9:;
			{
				_1d0414ba2_indexingArr(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1d21d54dc_Slc((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7690451:;
			{
				_1d041506a_indexingSlc(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1d21d5e8d_Map((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76904c8:;
			{
				_1d0415433_indexingMap(_self_, _102334_d, _102349_index, _102368_i);
				return;;
			}
		}
		else if ((_1d21d4563_Prim((*(_102334_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7690550:;
			{
				jule::Ptr<_1d21d9568_Prim> _103817_prim = _1d21d4563_Prim((*(_102334_d)).get()._field_Kind.ptr());;
				{
					
					if (_1d21dc79c_IsStr(_103817_prim.ptr())) {
						_case_begin_1b7693d28:;
						{
							_1d04157eb_indexingStr(_self_, _102334_d, _102349_index, _102368_i);
							return;;
						}
					}
					_match_end_1b7693c7e:;
				};
			}
		}
		_match_end_1b769020e:;
	};
	_1d040ad1e_pushErr(_self_, (*(_102368_i)).get()._field_Token, jule::Str("type @ is not support indexing", 30), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_102334_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Bool _1d0416137_pushGenericsFromExprSubIdent(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e6a76_SubIdentExpr>* _104853_sexpr, jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>* _104914_generics, jule::Ptr<_1d05e36dd_Expr>* _104942_expr) {
	jule::Ptr<_1d05dee15_SubIdentTypeDecl> _105017_t = jule::new_ptr<_1d05dee15_SubIdentTypeDecl>();;
	if ((!(_1d21ce074_pushSubIdentFromExpr(jule::Any((*(_104853_sexpr)), &__jule_any_type91), &(_105017_t))))) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_104942_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	(*(_104914_generics)) = jule::alloc_for_append((*(_104914_generics)),1);(*(_104914_generics)).__push(jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Kind=jule::Any(_105017_t, &__jule_any_type92)}));;
	return true;;
}



inline jule::Bool _1d0416500_pushGenericsFromData(jule::Ptr<_1d040a813_Eval> _self_, jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>* _105945_generics, jule::Ptr<_1d05e36dd_Expr>* _105973_expr) {
	{
		auto &_match_expr{ (*(_105973_expr)).get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b7697634:;
			{
				jule::Ptr<_1d05e59dc_UnaryExpr> _106221_u = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1d05e59dc_UnaryExpr>(&__jule_any_type93);;
				{
					auto &_match_expr{ _106221_u.get()._field_Op.get()._field_Kind };
					
					if (_match_expr == jule::Str("*", 1)) {
						_case_begin_1b7698091:;
						{
							jule::Ptr<_1d05e1048_PtrTypeDecl> _106525_kind = jule::new_ptr<_1d05e1048_PtrTypeDecl>();;
							jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _106625__generics = jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, 1LL);;
							_1d0416500_pushGenericsFromData(_self_, &(_106625__generics), &(_106221_u.get()._field_Expr));
							_106525_kind.get()._field_Elem=_106625__generics[0LL];
							(*(_105945_generics)) = jule::alloc_for_append((*(_105945_generics)),1);(*(_105945_generics)).__push(jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_106525_kind, &__jule_any_type77)}));;
						}
					}
					else if (_match_expr == jule::Str("&", 1)) {
						_case_begin_1b7698cd9:;
						{
							jule::Ptr<_1d05e0575_SptrTypeDecl> _107425_kind = jule::new_ptr<_1d05e0575_SptrTypeDecl>();;
							jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _107525__generics = jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, 1LL);;
							_1d0416500_pushGenericsFromData(_self_, &(_107525__generics), &(_106221_u.get()._field_Expr));
							_107425_kind.get()._field_Elem=_107525__generics[0LL];
							(*(_105945_generics)) = jule::alloc_for_append((*(_105945_generics)),1);(*(_105945_generics)).__push(jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=(*(_105973_expr)).get()._field_Token, ._field_Kind=jule::Any(_107425_kind, &__jule_any_type78)}));;
						}
					}
					else {
						_case_begin_1b7698789:;
						{
							_1d040ad1e_pushErr(_self_.ptr(), _106221_u.get()._field_Op, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1b7698514:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b76978a9:;
			{
				(*(_105945_generics)) = jule::alloc_for_append((*(_105945_generics)),1);(*(_105945_generics)).__push((*(_105973_expr)).get()._field_Kind.cast_ptr<_1d05de563_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b76977aa:;
			{
				jule::Ptr<_1d05e6a76_SubIdentExpr> _108921_sexpr = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1d05e6a76_SubIdentExpr>(&__jule_any_type91);;
				return _1d0416137_pushGenericsFromExprSubIdent(_self_, &(_108921_sexpr), _105945_generics, _105973_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b7696e19:;
			{
				jule::Ptr<_1d05e52d3_IdentExpr> _109221_ident = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1d05e52d3_IdentExpr>(&__jule_any_type85);;
				(*(_105945_generics)) = jule::alloc_for_append((*(_105945_generics)),1);(*(_105945_generics)).__push(jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_109221_ident.get()._field_Token, ._field_Ident=_109221_ident.get()._field_Ident, ._field_Binded=_109221_ident.get()._field_Binded, }), &__jule_any_type20)}));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b7696e80:;
			{
				{
					auto expr = &((*(_105973_expr)).get()._field_Kind.cast_ptr<_1d05e436a_TupleExpr>(&__jule_any_type86).get()._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b769e251:;
					if (it != expr_end) {
						jule::Ptr<_1d05e36dd_Expr> _110125_texpr = *it;
						{
							if ((!(_1d0416500_pushGenericsFromData(_self_, _105945_generics, &(_110125_texpr))))) {
								return false;;
							};
						}
						_iter_next_1b769e251:;
						++it;
						goto _iter_begin_1b769e251;
					}
					_iter_end_1b769e251:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b7696ee6:;
			{
				jule::Ptr<_1d05e6603_NsSelectionExpr> _110721_ns = (*(_105973_expr)).get()._field_Kind.cast_ptr<_1d05e6603_NsSelectionExpr>(&__jule_any_type95);;
				jule::Ptr<_1d05deb29_IdentTypeDecl> _110821_decl = jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_110721_ns.get()._field_Ident, ._field_Ident=_110721_ns.get()._field_Ident.get()._field_Kind, });;
				(*(_105945_generics)) = jule::alloc_for_append((*(_105945_generics)),1);(*(_105945_generics)).__push(jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1d05e0289_NamespaceTypeDecl>(_1d05e0289_NamespaceTypeDecl{._field_Idents=_110721_ns.get()._field_Ns, ._field_Kind=jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_110821_decl.get()._field_Token, ._field_Kind=jule::Any(_110821_decl, &__jule_any_type20)})}), &__jule_any_type96)}));;
			}
		}
		else {
			_case_begin_1b7696d70:;
			{
				_1d040ad1e_pushErr(_self_.ptr(), (*(_105973_expr)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1b7696bc7:;
	};
	return true;;
}



inline void _1d0416841_evalIdentDeclFromIndexing(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d0408c95_Data>* _112950_d, jule::Ptr<_1d05ea690_IndexingExpr>* _112965_i) {
	jule::Ptr<_1d0611bd4_StructIns> _113017_s = _1d21d59b5_Struct((*(_112950_d)).get()._field_Kind.ptr());;
	if ((_113017_s == nullptr)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Expr.get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_112950_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
		(*(_112950_d))=nullptr;
		return;;
	};
	jule::Ptr<_1d05deb29_IdentTypeDecl> _113717_decl = nullptr;;
	{
		auto &_match_expr{ (*(_112965_i)).get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b76a4454:;
			{
				jule::Ptr<_1d05e52d3_IdentExpr> _114021_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1d05e52d3_IdentExpr>(&__jule_any_type85);;
				_113717_decl=jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_114021_expr.get()._field_Token, ._field_Ident=_114021_expr.get()._field_Ident, ._field_Binded=_114021_expr.get()._field_Binded, });
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b76a5499:;
			{
				jule::Ptr<_1d05e6603_NsSelectionExpr> _114721_expr = (*(_112965_i)).get()._field_Expr.get()._field_Kind.cast_ptr<_1d05e6603_NsSelectionExpr>(&__jule_any_type95);;
				_113717_decl=jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_114721_expr.get()._field_Ident, ._field_Ident=_114721_expr.get()._field_Ident.get()._field_Kind, });
			}
		}
		else {
			_case_begin_1b76a4872:;
			{
				_1d040ad1e_pushErr(_self_.ptr(), (*(_112965_i)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				(*(_112950_d))=nullptr;
				return;;
			}
		}
		_match_end_1b76a481c:;
	};
	if ((!(_1d0416500_pushGenericsFromData(_self_, &(_113717_decl.get()._field_Generics), &((*(_112965_i)).get()._field_Index))))) {
		(*(_112950_d))=nullptr;
		return;;
	};
	_113017_s=({ auto _wrap_copy = _1d041ca9a_typeChecker(_self_.ptr()); _1d21e6be6_fromStruct(&_wrap_copy, &(_113717_decl), &(_113017_s.get()._field_Decl)); });
	if ((_113017_s == nullptr)) {
		(*(_112950_d))=nullptr;
		return;;
	};
	(*(_112950_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1d21d18d4_Kind>(_113017_s, 0);
}



inline jule::Bool _1d0416ca3_checkGenericFn(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d0626e6e_FnIns>* _117239_f, jule::Ptr<_22be1281d_Token>* _117255_et, jule::Any* _117272_model) {
	jule::Bool _117313_ok = _1d21a837d_reloadFnInsTypes(_self_.get()._field_s, (*(_117239_f)));;
	(*(_117239_f)).get()._field_reloaded=true;
	if ((!(_117313_ok))) {
		return false;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _117817_existInstance = _1d0625be8_appendInstance((*(_117239_f)).get()._field_Decl.ptr(), _117239_f);;
	if ((!(_1d21a74e2_checkConstraintsFn(_self_.get()._field_s, _117239_f, _117255_et, _117817_existInstance)))) {
		return false;;
	};
	if ((_117817_existInstance != nullptr)) {
		(*(_117239_f))=_117817_existInstance;
		_1d21cdd32_updateModelToGenericIns(_117272_model, &(_117817_existInstance));
	} else {
		_1d21b6897_checkFnInsCaller(_self_.get()._field_s, _117239_f, (*(_117255_et)));
	};
	return true;;
}



inline void _1d04170e4_evalFnGenericFromIndexing(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d0408c95_Data>* _119750_d, jule::Ptr<_1d05ea690_IndexingExpr>* _119765_i) {
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _119817_generics = jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, 8LLU);;
	if ((!(_1d0416500_pushGenericsFromData(_self_, &(_119817_generics), &((*(_119765_i)).get()._field_Index))))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _120417_f = _1d21d5751_Fn((*(_119750_d)).get()._field_Kind.ptr());;
	jule::I64 _120517_genericsLen = 0LL;;
	if ((_120417_f.get()._field_Decl != nullptr)) {
		_120517_genericsLen=static_cast<jule::I64>(_120417_f.get()._field_Decl.get()._field_Generics.len());
	};
	if ((!(_1d21a00bc_checkGenericQuantity(_self_.get()._field_s.ptr(), _120517_genericsLen, static_cast<jule::I64>(_119817_generics.len()), (*(_119765_i)).get()._field_Expr.get()._field_Token)))) {
		(*(_119750_d))=nullptr;
		return;;
	};
	_120417_f.get()._field_Generics=jule::Slice<jule::Ptr<_1d21d05b4_InsGeneric>>::alloc(0LL, _120417_f.get()._field_Decl.get()._field_Generics.len());
	{
		auto expr = &(_119817_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b76ae5b3:;
		if (it != expr_end) {
			jule::Ptr<_1d05de563_TypeDecl> _121621_g = *it;
			{
				jule::Ptr<_1d0408c95_Data> _121721_k = _1d041cda8_evalType(_self_.ptr(), _121621_g);;
				if ((_121721_k == nullptr)) {
					(*(_119750_d))=nullptr;
					return;;
				};
				_120417_f.get()._field_Generics = jule::alloc_for_append(_120417_f.get()._field_Generics,1);_120417_f.get()._field_Generics.__push(jule::new_ptr<_1d21d05b4_InsGeneric>(_1d21d05b4_InsGeneric{._field_Kind=_121721_k.get()._field_Kind, }));;
			}
			_iter_next_1b76ae5b3:;
			++it;
			goto _iter_begin_1b76ae5b3;
		}
		_iter_end_1b76ae5b3:;
	};
	if (_1d0628305_IsBuiltin(_120417_f.ptr())) {
		return;;
	};
	if (_1d0416ca3_checkGenericFn(_self_, &(_120417_f), &((*(_119765_i)).get()._field_Expr.get()._field_Token), &((*(_119750_d)).get()._field_Model))) {
		(*(_119750_d)).get()._field_Kind.get()._field_Kind=jule::Trait<_1d21d18d4_Kind>(_120417_f, 1);
	} else {
		(*(_119750_d))=nullptr;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0417413_evalIndexing(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05ea690_IndexingExpr> _123636_i) {
	jule::Ptr<_1d21d1d46_TypeKind> _123717_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_123717_prefix;
	});;
	jule::Ptr<_1d0408c95_Data> _124117_d = _1d0426598_evalExprKind(_self_, _123636_i.get()._field_Expr.get()._field_Kind);;
	if ((_124117_d == nullptr)) {
		return nullptr;;
	};
	if (_124117_d.get()._field_Decl) {
		_1d0416841_evalIdentDeclFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	if ((_1d21d5751_Fn(_124117_d.get()._field_Kind.ptr()) != nullptr)) {
		_1d04170e4_evalFnGenericFromIndexing(_self_, &(_124117_d), &(_123636_i));
		return _124117_d;;
	};
	_1d0408c95_Data _125717_old_d = (*(_124117_d));;
	jule::Ptr<_1d0408c95_Data> _125917_index = _1d01dac53_evalExpr(_self_, _123636_i.get()._field_Index);;
	if ((_125917_index == nullptr)) {
		return nullptr;;
	};
	_124117_d.get()._field_Decl=false;
	_1d0415bb4_toIndexing(_self_.ptr(), &(_124117_d), &(_125917_index), &(_123636_i));
	if (_1d0409658_IsConst(_124117_d.ptr())) {
		_124117_d.get()._field_Decl=false;
		_124117_d.get()._field_Model=jule::Any(_124117_d.get()._field_Constant, &__jule_any_type19);
	} else if (_124117_d.get()._field_Decl) {
		_124117_d.get()._field_Decl=false;
	} else {
		_124117_d.get()._field_Model=jule::Any(jule::new_ptr<_1d06187e0_IndexingExprModel>(_1d06187e0_IndexingExprModel{._field_Token=_123636_i.get()._field_Token, ._field_Expr=jule::new_ptr<_1d0408c95_Data>(_125717_old_d), ._field_Index=_125917_index}), &__jule_any_type46);
	};
	return _124117_d;;
}



inline __jule_tuple_x_1d0408c95_Data__jule_tuple_x_1d0408c95_Data _1d0417721_evalSlicingExprs(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05eac9a_SlicingExpr>* _129041_s) {
	__jule_tuple_x_1d0408c95_Data__jule_tuple_x_1d0408c95_Data __jule_func_result;
	jule::Ptr<_1d21d1d46_TypeKind> _129117_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_129117_prefix;
	});;
	jule::Ptr<_1d0408c95_Data> _129517_l = nullptr;;
	jule::Ptr<_1d0408c95_Data> _129617_r = nullptr;;
	if (((*(_129041_s)).get()._field_Start != nullptr)) {
		_129517_l=_1d01dac53_evalExpr(_self_, (*(_129041_s)).get()._field_Start);
		if ((_129517_l != nullptr)) {
			_1d0414410_checkIntegerIndexingByData(_self_.ptr(), &(_129517_l), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_129517_l=jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642231_primInt, ._field_Constant=static__1e76e6246_NewI64(0LL)});
		_129517_l.get()._field_Constant.get()._field_Kind=jule::Str("int", 3);
		_129517_l.get()._field_Model=jule::Any(_129517_l.get()._field_Constant, &__jule_any_type19);
	};
	if (((*(_129041_s)).get()._field_To != nullptr)) {
		_129617_r=_1d01dac53_evalExpr(_self_, (*(_129041_s)).get()._field_To);
		if ((_129617_r != nullptr)) {
			_1d0414410_checkIntegerIndexingByData(_self_.ptr(), &(_129617_r), (*(_129041_s)).get()._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _129517_l;
	__jule_func_result.__jule_result_arg1 = _129617_r;
	return __jule_func_result;;
}



inline void _1d0417996_slicingArr(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _132630_d) {
	jule::Ptr<_1d21d1d46_TypeKind> _132717_elemType = _1d21d5278_Arr((*(_132630_d)).get()._field_Kind.ptr()).get()._field_Elem;;
	(*(_132630_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dd759_Slc>(_1d21dd759_Slc{._field_Elem=_132717_elemType}), 22)});
	(*(_132630_d)).get()._field_Lvalue=false;
	(*(_132630_d)).get()._field_Mutable=((*(_132630_d)).get()._field_Mutable || (!(_1d21d35d9_Mutable(_132717_elemType.ptr()))));
}



inline void _1d0417d5e_slicingStr(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _134130_d, jule::Ptr<_1d0408c95_Data>* _134141_l, jule::Ptr<_1d0408c95_Data>* _134152_r) {
	(*(_134130_d)).get()._field_Lvalue=false;
	(*(_134130_d)).get()._field_Mutable=true;
	if ((!(_1d0409658_IsConst((*(_134130_d)).ptr())))) {
		return;;
	};
	if ((((*(_134141_l)) == nullptr) || ((*(_134152_r)) == nullptr))) {
		(*(_134130_d)).get()._field_Constant=nullptr;
		return;;
	};
	if ((_1d0409658_IsConst((*(_134141_l)).ptr()) && _1d0409658_IsConst((*(_134152_r)).ptr()))) {
		jule::I64 _135417_left = _1e76e82d1_AsI64((*(_134141_l)).get()._field_Constant.ptr());;
		if ((_135417_left < 0LL)) {
			return;;
		};
		jule::Str _135917_s = _1e76e7d08_ReadStr((*(_134130_d)).get()._field_Constant.ptr());;
		jule::I64 _136021_right = 0LL;;
		if (((*(_134152_r)) == nullptr)) {
			_136021_right=static_cast<jule::I64>(static_cast<jule::I64>(_135917_s.len()));
		} else {
			_136021_right=static_cast<jule::I64>(_1e76e82d1_AsI64((*(_134152_r)).get()._field_Constant.ptr()));
		};
		if ((_135417_left > _136021_right)) {
			return;;
		};
		_1e76e929e_SetStr((*(_134130_d)).get()._field_Constant.ptr(), _135917_s.slice(_135417_left, _136021_right));
		(*(_134130_d)).get()._field_Decl=true;
	} else {
		(*(_134130_d)).get()._field_Constant=nullptr;
	};
}



inline void _1d04182c1_checkSlicing(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _137736_d, jule::Ptr<_1d0408c95_Data>* _137747_l, jule::Ptr<_1d0408c95_Data>* _137758_r, jule::Ptr<_1d05eac9a_SlicingExpr>* _137769_s) {
	{
		
		if ((_1d21d5278_Arr((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76c4ead:;
			{
				_1d0417996_slicingArr(_self_, _137736_d);
				return;;
			}
		}
		else if ((_1d21d54dc_Slc((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76c5035:;
			{
				return;;
			}
		}
		else if ((_1d21d4563_Prim((*(_137736_d)).get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b76c50ac:;
			{
				jule::Ptr<_1d21d9568_Prim> _138517_prim = _1d21d4563_Prim((*(_137736_d)).get()._field_Kind.ptr());;
				{
					
					if (_1d21dc79c_IsStr(_138517_prim.ptr())) {
						_case_begin_1b76c7169:;
						{
							_1d0417d5e_slicingStr(_self_, _137736_d, _137747_l, _137758_r);
							return;;
						}
					}
					_match_end_1b76c70c0:;
				};
			}
		}
		_match_end_1b76c4d8c:;
	};
	_1d040ad1e_pushErr(_self_, (*(_137769_s)).get()._field_Token, jule::Str("type @ is not support slicing", 29), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_137736_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
}



inline jule::Ptr<_1d0408c95_Data> _1d04185ce_evalSlicing(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05eac9a_SlicingExpr> _139635_s) {
	jule::Ptr<_1d0408c95_Data> _139717_d = _1d01dac53_evalExpr(_self_, _139635_s.get()._field_Expr);;
	if ((_139717_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _140218_l;;
	jule::Ptr<_1d0408c95_Data> _140225_r;;
	({
		__jule_tuple_x_1d0408c95_Data__jule_tuple_x_1d0408c95_Data __jule_assign_result = _1d0417721_evalSlicingExprs(_self_, &(_139635_s));
		_140218_l = __jule_assign_result.__jule_result_arg0;
		_140225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_140218_l == nullptr)) {
		return _139717_d;;
	};
	_139717_d.get()._field_Decl=false;
	_1d04182c1_checkSlicing(_self_.ptr(), &(_139717_d), &(_140218_l), &(_140225_r), &(_139635_s));
	if (_1d0409658_IsConst(_139717_d.ptr())) {
		_139717_d.get()._field_Decl=false;
		_139717_d.get()._field_Model=jule::Any(_139717_d.get()._field_Constant, &__jule_any_type19);
	} else if (_139717_d.get()._field_Decl) {
		_139717_d.get()._field_Decl=false;
	} else {
		jule::Ptr<_1d0619a11_SlicingExprModel> _142021_model = jule::new_ptr<_1d0619a11_SlicingExprModel>(_1d0619a11_SlicingExprModel{._field_Token=_139635_s.get()._field_Token, ._field_Expr=_139717_d.get()._field_Model, ._field_Left=_140218_l.get()._field_Model, });;
		if ((_140225_r != nullptr)) {
			_142021_model.get()._field_Right=_140225_r.get()._field_Model;
		};
		_139717_d.get()._field_Model=jule::Any(_142021_model, &__jule_any_type97);
	};
	return _139717_d;;
}



inline void _1d0418997_castPtr(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _143330_t, jule::Ptr<_1d0408c95_Data> _143348_d, jule::Ptr<_22be1281d_Token> _143358_errorToken) {
	_143348_d.get()._field_Constant=nullptr;
	jule::Ptr<_1d21dccec_Sptr> _143513_sptr = _1d21d47c7_Sptr(_143348_d.get()._field_Kind.ptr());;
	if ((_143513_sptr != nullptr)) {
		if ((!(_1d21d2550_Equal(_1d21d4a3b_Ptr(_143330_t.ptr()).get()._field_Elem, _143513_sptr.get()._field_Elem)))) {
			_1d040ad1e_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_143330_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((!(_1d040b759_isUnsafe(_self_)))) {
		_1d040ad1e_pushErr(_self_, _143358_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d21d9568_Prim> _144813_prim = _1d21d4563_Prim(_143348_d.get()._field_Kind.ptr());;
	if (((_1d21d4a3b_Ptr(_143348_d.get()._field_Kind.ptr()) == nullptr) && ((_144813_prim == nullptr) || (!(_1e76e5201_IsInt(_1d21d98cb_Str(_144813_prim.ptr()))))))) {
		_1d040ad1e_pushErr(_self_, _143358_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_143348_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_143330_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1d0418d60_castStruct(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _145433_t, jule::Ptr<_1d0408c95_Data> _145451_d, jule::Ptr<_22be1281d_Token> _145461_errorToken) {
	_145451_d.get()._field_Constant=nullptr;
	jule::Ptr<_1d21494c8_Trait> _145617_tr = _1d21d5c29_Trait(_145451_d.get()._field_Kind.ptr());;
	if ((_145617_tr == nullptr)) {
		_1d040ad1e_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_145433_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _146217_s = _1d21d59b5_Struct(_145433_t.ptr());;
	_1b76d40dd_pushReference(_self_, &(_146217_s));
	if ((!(_1d06103db_IsImplements(_146217_s.get()._field_Decl.ptr(), _145617_tr)))) {
		_1d040ad1e_pushErr(_self_, _145461_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_145451_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_145433_t.ptr()), &__jule_any_type5)}));
	};
}



inline void _1d0419228_castRef(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _147030_t, jule::Ptr<_1d0408c95_Data> _147048_d, jule::Ptr<_22be1281d_Token> _147058_errorToken) {
	_147048_d.get()._field_Constant=nullptr;
	jule::Ptr<_1d21dccec_Sptr> _147217_sptr = _1d21d47c7_Sptr(_147030_t.ptr());;
	jule::Ptr<_1d21e1361_Ptr> _147417_ptr = _1d21d4a3b_Ptr(_147048_d.get()._field_Kind.ptr());;
	if (((_147417_ptr != nullptr) && _1d21d2550_Equal(_147217_sptr.get()._field_Elem, _147417_ptr.get()._field_Elem))) {
		if ((!(_1d040b759_isUnsafe(_self_)))) {
			_1d040ad1e_pushErr(_self_, _147058_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1d21d59b5_Struct(_147217_sptr.get()._field_Elem.ptr()) != nullptr)) {
		_1d0418d60_castStruct(_self_, _147217_sptr.get()._field_Elem, _147048_d, _147058_errorToken);
		return;;
	};
	_1d040ad1e_pushErr(_self_, _147058_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_147048_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_147030_t.ptr()), &__jule_any_type5)}));
}



inline void _1d04195e1_castSlc(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _149230_t, jule::Ptr<_1d0408c95_Data> _149248_d, jule::Ptr<_22be1281d_Token> _149258_errorToken) {
	jule::Ptr<_1e76e5cc3_Const> _149313_c = _149248_d.get()._field_Constant;;
	_149248_d.get()._field_Constant=nullptr;
	if ((_1d21d4ca0_Enum(_149248_d.get()._field_Kind.ptr()) != nullptr)) {
		if (((_1d21d4563_Prim(_1d21d4ca0_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1d21dc79c_IsStr(_1d21d4563_Prim(_1d21d4ca0_Enum(_149248_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind.ptr()).ptr()))))) {
			_1d040ad1e_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_149230_t.ptr()), &__jule_any_type5)}));
			return;;
		};
	} else if (((_1d21d4563_Prim(_149248_d.get()._field_Kind.ptr()) == nullptr) || (!(_1d21dc79c_IsStr(_1d21d4563_Prim(_149248_d.get()._field_Kind.ptr()).ptr()))))) {
		_1d040ad1e_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	_149230_t=_1d21d54dc_Slc(_149230_t.ptr()).get()._field_Elem;
	jule::Ptr<_1d21d9568_Prim> _150713_prim = _1d21d4563_Prim(_149230_t.ptr());;
	if (((_150713_prim == nullptr) || ((!(_1d21dad72_IsU8(_150713_prim.ptr()))) && (!(_1d21da899_IsI32(_150713_prim.ptr())))))) {
		_1d040ad1e_pushErr(_self_, _149258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_149248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_149230_t.ptr()), &__jule_any_type5)}));
		return;;
	};
	if ((_149313_c != nullptr)) {
		{
			
			if (_1d21dad72_IsU8(_150713_prim.ptr())) {
				_case_begin_1b76e5918:;
				{
					jule::Slice<jule::U8> _151721_bytes = static_cast<jule::Slice<jule::U8>>(_1e76e7d08_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1d061836c_SliceExprModel> _151825_model = jule::new_ptr<_1d061836c_SliceExprModel>(_1d061836c_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _151721_bytes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_151721_bytes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b76e6e9c:;
						if (it != expr_end) {
							jule::U8 *_152224_b = it;
							{
								jule::Ptr<_1e76e5cc3_Const> _152329_bc = static__1e76e64dd_NewU64(static_cast<jule::U64>(static_cast<jule::U64>((*(_152224_b)))));;
								_152329_bc.get()._field_Kind=_150713_prim.get()._field_Kind;
								_151825_model.get()._field_Elems = jule::alloc_for_append(_151825_model.get()._field_Elems,1);_151825_model.get()._field_Elems.__push(jule::Any(_152329_bc, &__jule_any_type19));;
							}
							_iter_next_1b76e6e9c:;
							++it;
							goto _iter_begin_1b76e6e9c;
						}
						_iter_end_1b76e6e9c:;
					};
					_149248_d.get()._field_Model=jule::Any(_151825_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			else if (_1d21da899_IsI32(_150713_prim.ptr())) {
				_case_begin_1b76e5990:;
				{
					jule::Slice<jule::I32> _153021_runes = static_cast<jule::Slice<jule::I32>>(_1e76e7d08_ReadStr(_149313_c.ptr()));;
					jule::Ptr<_1d061836c_SliceExprModel> _153125_model = jule::new_ptr<_1d061836c_SliceExprModel>(_1d061836c_SliceExprModel{._field_ElemKind=_149230_t, ._field_Elems=jule::Slice<jule::Any>::alloc(0LL, _153021_runes.len(), jule::Any(nullptr))});;
					{
						auto expr = &(_153021_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b76e98d9:;
						if (it != expr_end) {
							jule::I32 *_153524_r = it;
							{
								jule::Ptr<_1e76e5cc3_Const> _153629_rc = static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_153524_r)))));;
								_153629_rc.get()._field_Kind=_150713_prim.get()._field_Kind;
								_153125_model.get()._field_Elems = jule::alloc_for_append(_153125_model.get()._field_Elems,1);_153125_model.get()._field_Elems.__push(jule::Any(_153629_rc, &__jule_any_type19));;
							}
							_iter_next_1b76e98d9:;
							++it;
							goto _iter_begin_1b76e98d9;
						}
						_iter_end_1b76e98d9:;
					};
					_149248_d.get()._field_Model=jule::Any(_153125_model, &__jule_any_type82);
					_149248_d.get()._field_Decl=true;
				}
			}
			_match_end_1b76e5808:;
		};
	};
}



inline void _1d0419910_castStr(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _154630_d, jule::Ptr<_22be1281d_Token> _154640_errorToken) {
	if ((_1d21d4ca0_Enum(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d214bc5b_Enum> _154821_e = _1d21d4ca0_Enum(_154630_d.get()._field_Kind.ptr());;
		if (((_1d21d4563_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()) != nullptr) && _1d21dc79c_IsStr(_1d21d4563_Prim(_154821_e.get()._field_Kind.get()._field_Kind.ptr()).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1e76e5cc3_Const> _155413_c = _154630_d.get()._field_Constant;;
	_154630_d.get()._field_Constant=nullptr;
	if ((_1d21d4563_Prim(_154630_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d21d9568_Prim> _155717_prim = _1d21d4563_Prim(_154630_d.get()._field_Kind.ptr());;
		if (((!(_1d21dad72_IsU8(_155717_prim.ptr()))) && (!(_1d21da899_IsI32(_155717_prim.ptr()))))) {
			_1d040ad1e_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1d21d2242_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return;;
		};
		if ((_155413_c != nullptr)) {
			{
				
				if (_1d21dad72_IsU8(_155717_prim.ptr())) {
					_case_begin_1b77004c2:;
					{
						_154630_d.get()._field_Constant=static__1e76e6a2c_NewStr(jule::Str::from_byte(static_cast<jule::U8>(_1e76e8545_AsU64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				else if (_1d21da899_IsI32(_155717_prim.ptr())) {
					_case_begin_1b7700549:;
					{
						_154630_d.get()._field_Constant=static__1e76e6a2c_NewStr(jule::Str::from_rune(static_cast<jule::I32>(_1e76e82d1_AsI64(_155413_c.ptr()))));
						_154630_d.get()._field_Model=jule::Any(_154630_d.get()._field_Constant, &__jule_any_type19);
						_154630_d.get()._field_Decl=true;
					}
				}
				_match_end_1b77003b2:;
			};
		};
		return;;
	};
	jule::Ptr<_1d21dd759_Slc> _157817_s = _1d21d54dc_Slc(_154630_d.get()._field_Kind.ptr());;
	if ((_157817_s == nullptr)) {
		_1d040ad1e_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1d21d2242_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _158417_t = _157817_s.get()._field_Elem;;
	jule::Ptr<_1d21d9568_Prim> _158513_prim = _1d21d4563_Prim(_158417_t.ptr());;
	if (((_158513_prim == nullptr) || ((!(_1d21dad72_IsU8(_158513_prim.ptr()))) && (!(_1d21da899_IsI32(_158513_prim.ptr())))))) {
		_1d040ad1e_pushErr(_self_, _154640_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1d21d2242_Str(_154630_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return;;
	};
}



inline void _1d0419cc8_castInt(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _159230_t, jule::Ptr<_1d0408c95_Data> _159248_d, jule::Ptr<_22be1281d_Token> _159258_errorToken) {
	if (_1d0409658_IsConst(_159248_d.ptr())) {
		jule::Ptr<_1d21d9568_Prim> _159417_prim = _1d21d4563_Prim(_159230_t.ptr());;
		{
			
			if (_1e76e4b6d_IsSigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1b7706b9e:;
				{
					_1e76e8a2e_SetI64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e76e4e59_IsUnsigInt(_159417_prim.get()._field_Kind)) {
				_case_begin_1b7706c26:;
				{
					_1e76e8ca4_SetU64(_159248_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64(_159248_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b7706ae4:;
		};
	} else {
		_159248_d.get()._field_Constant=nullptr;
	};
	if ((_1d21d4ca0_Enum(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d214bc5b_Enum> _160617_e = _1d21d4ca0_Enum(_159248_d.get()._field_Kind.ptr());;
		if (_1e76e57b7_IsNum(_1d21d2242_Str(_160617_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	if ((_1d21d47c7_Sptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d21d9568_Prim> _161317_prim = _1d21d4563_Prim(_159230_t.ptr());;
		if ((!(_1d21dc2c4_IsUintptr(_161317_prim.ptr())))) {
			_1d040ad1e_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_159230_t.ptr()), &__jule_any_type5)}));
		};
		return;;
	};
	if ((_1d21d4a3b_Ptr(_159248_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d21d9568_Prim> _162017_prim = _1d21d4563_Prim(_159230_t.ptr());;
		if (_1d21dc2c4_IsUintptr(_162017_prim.ptr())) {
		} else if ((!(_1d040b759_isUnsafe(_self_)))) {
			_1d040ad1e_pushErr(_self_, _159258_errorToken, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1d21d9568_Prim> _162913_prim = _1d21d4563_Prim(_159248_d.get()._field_Kind.ptr());;
	if (((_162913_prim != nullptr) && _1e76e57b7_IsNum(_1d21d98cb_Str(_162913_prim.ptr())))) {
		return;;
	};
	_1d040ad1e_pushErr(_self_, _159258_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_159248_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_159230_t.ptr()), &__jule_any_type5)}));
}



inline void _1d041a191_castNum(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _163730_t, jule::Ptr<_1d0408c95_Data> _163748_d, jule::Ptr<_22be1281d_Token> _163758_errorToken) {
	if (_1d0409658_IsConst(_163748_d.ptr())) {
		jule::Ptr<_1d21d9568_Prim> _163917_prim = _1d21d4563_Prim(_163730_t.ptr());;
		{
			
			if (_1e76e5520_IsFloat(_163917_prim.get()._field_Kind)) {
				_case_begin_1b77102a1:;
				{
					_1e76e9524_SetF64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::F64>(_1e76e87a9_AsF64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e76e4b6d_IsSigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1b7710328:;
				{
					_1e76e8a2e_SetI64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			else if (_1e76e4e59_IsUnsigInt(_163917_prim.get()._field_Kind)) {
				_case_begin_1b77103a0:;
				{
					_1e76e8ca4_SetU64(_163748_d.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64(_163748_d.get()._field_Constant.ptr())));
				}
			}
			_match_end_1b77101d5:;
		};
	} else {
		_163748_d.get()._field_Constant=nullptr;
	};
	if ((_1d21d4ca0_Enum(_163748_d.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d214bc5b_Enum> _165317_e = _1d21d4ca0_Enum(_163748_d.get()._field_Kind.ptr());;
		if (_1e76e57b7_IsNum(_1d21d2242_Str(_165317_e.get()._field_Kind.get()._field_Kind.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1d21d9568_Prim> _165913_prim = _1d21d4563_Prim(_163748_d.get()._field_Kind.ptr());;
	if (((_165913_prim != nullptr) && _1e76e57b7_IsNum(_1d21d98cb_Str(_165913_prim.ptr())))) {
		return;;
	};
	_1d040ad1e_pushErr(_self_, _163758_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_163748_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_163730_t.ptr()), &__jule_any_type5)}));
}



inline void _1d041a559_castPrim(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _166731_t, jule::Ptr<_1d0408c95_Data> _166749_d, jule::Ptr<_22be1281d_Token> _166759_errorToken) {
	jule::Ptr<_1d21d9568_Prim> _166813_prim = _1d21d4563_Prim(_166731_t.ptr());;
	{
		
		if (_1d21dca11_IsAny(_166813_prim.ptr())) {
			_case_begin_1b77159c1:;
			{
				_166749_d.get()._field_Constant=nullptr;
			}
		}
		else if (_1d21dc79c_IsStr(_166813_prim.ptr())) {
			_case_begin_1b7715e88:;
			{
				_1d0419910_castStr(_self_, _166749_d, _166759_errorToken);
			}
		}
		else if (_1e76e5201_IsInt(_1d21d98cb_Str(_166813_prim.ptr()))) {
			_case_begin_1b7715eee:;
			{
				_1d0419cc8_castInt(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else if (_1e76e57b7_IsNum(_1d21d98cb_Str(_166813_prim.ptr()))) {
			_case_begin_1b7716076:;
			{
				_1d041a191_castNum(_self_, _166731_t, _166749_d, _166759_errorToken);
			}
		}
		else {
			_case_begin_1b7715e22:;
			{
				_1d040ad1e_pushErr(_self_, _166759_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_166731_t.ptr()), &__jule_any_type5)}));
			}
		}
		_match_end_1b7715dab:;
	};
}



inline void _1d041a878_castConstant(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _168436_t, jule::Ptr<_1d0408c95_Data>* _168455_d) {
	if ((((*(_168455_d)) == nullptr) || (!(_1d0409658_IsConst((*(_168455_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1d21d9568_Prim> _168813_prim = _1d21d4563_Prim((*(_168436_t)).ptr());;
	_1d21cd826_castConstByType(&(_168813_prim.get()._field_Kind), _168455_d);
	(*(_168455_d)).get()._field_Model=jule::Any((*(_168455_d)).get()._field_Constant, &__jule_any_type19);
}



inline void _1d041ac41_castTypeEnum(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _169336_t, jule::Ptr<_1d0408c95_Data>* _169355_d, jule::Ptr<_22be1281d_Token>* _169370_errorToken) {
	jule::I64 _169413_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1d21a6414_checkTypeCompatibility((*(_self_))._field_s, &((*(_169355_d)).get()._field_Kind), _169336_t, _169370_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _169413_n);
		_1d040ad1e_pushErr(_self_, (*(_169370_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_169355_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_169336_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_169355_d)).get()._field_Constant=nullptr;
}



inline void _1d041b109_castTypeEnumT(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _170237_t, jule::Ptr<_1d0408c95_Data>* _170256_d, jule::Ptr<_22be1281d_Token>* _170271_errorToken) {
	jule::I64 _170313_n = (*(_self_))._field_s.get()._field_errors.len();;
	if ((!(_1d21a6414_checkTypeCompatibility((*(_self_))._field_s, _170237_t, &((*(_170256_d)).get()._field_Kind), _170271_errorToken)))) {
		(*(_self_))._field_s.get()._field_errors=(*(_self_))._field_s.get()._field_errors.slice(0LL, _170313_n);
		_1d040ad1e_pushErr(_self_, (*(_170271_errorToken)), jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_170256_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_170237_t)).ptr()), &__jule_any_type5)}));
	};
	(*(_170256_d)).get()._field_Constant=nullptr;
}



inline jule::Ptr<_1d0408c95_Data> _1d041b55a_evalCastByTypeNData(_1d040a813_Eval* _self_, jule::Ptr<_1d21d1d46_TypeKind> _171142_t, jule::Ptr<_1d0408c95_Data> _171160_d, jule::Ptr<_22be1281d_Token> _171174_errorToken) {
	if (((_171160_d != nullptr) && _171160_d.get()._field_Decl)) {
		_1d040ad1e_pushErr(_self_, _171174_errorToken, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1d0409180_IsNil(_171160_d.ptr())) {
			_case_begin_1b7721856:;
			{
				if ((!(_1d21d3ab2_NilCompatible(_171142_t.ptr())))) {
					_1d040ad1e_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting to type @", 37), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<nil>", 5), &__jule_any_type5),jule::Any(_1d21d2242_Str(_171142_t.ptr()), &__jule_any_type5)}));
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if (((_1d21d4563_Prim(_171160_d.get()._field_Kind.ptr()) != nullptr) && _1d21dca11_IsAny(_1d21d4563_Prim(_171160_d.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b7721092:;
			{
				if ((_1d21d4ca0_Enum(_171142_t.ptr()) != nullptr)) {
					_1d040ad1e_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
					_1d040b13d_pushSuggestion(_self_, jule::Str("try cast to type of enum fields instead of enum", 47), jule::Slice<jule::Any>());
				} else if ((_1d21d5014_TypeEnum(_171142_t.ptr()) != nullptr)) {
					_1d040ad1e_pushErr(_self_, _171174_errorToken, jule::Str("enum cannot casted from any type", 32), jule::Slice<jule::Any>());
				};
				_171160_d.get()._field_Constant=nullptr;
			}
		}
		else if ((_1d21d5014_TypeEnum(_171160_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7720d94:;
			{
				_1d041ac41_castTypeEnum(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1d21d5014_TypeEnum(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b7720e0a:;
			{
				_1d041b109_castTypeEnumT(_self_, &(_171142_t), &(_171160_d), &(_171174_errorToken));
			}
		}
		else if ((_1d21d4a3b_Ptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b7721999:;
			{
				_1d0418997_castPtr(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1d21d47c7_Sptr(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b7721a10:;
			{
				_1d0419228_castRef(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1d21d54dc_Slc(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b7721a76:;
			{
				_1d04195e1_castSlc(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1d21d59b5_Struct(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b7721adc:;
			{
				_1d0418d60_castStruct(_self_, _171142_t, _171160_d, _171174_errorToken);
			}
		}
		else if ((_1d21d4563_Prim(_171142_t.ptr()) != nullptr)) {
			_case_begin_1b7721b53:;
			{
				_1d041a559_castPrim(_self_, _171142_t, _171160_d, _171174_errorToken);
				_1d041a878_castConstant(_self_, &(_171142_t), &(_171160_d));
			}
		}
		else {
			_case_begin_1b77204ae:;
			{
				_1d040ad1e_pushErr(_self_, _171174_errorToken, jule::Str("type @ not supports casting", 27), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_171142_t.ptr()), &__jule_any_type5)}));
				_171160_d=nullptr;
			}
		}
		_match_end_1b77205e1:;
	};
	if ((_171160_d == nullptr)) {
		return nullptr;;
	};
	_171160_d.get()._field_Mutable=(_171160_d.get()._field_Mutable || ((!(_1d21d35d9_Mutable(_171160_d.get()._field_Kind.ptr()))) && _1d21d35d9_Mutable(_171142_t.ptr())));
	if (((!(_171160_d.get()._field_Decl)) && ((_1d21d4ca0_Enum(_171160_d.get()._field_Kind.ptr()) == nullptr) || (!(_1d21d2550_Equal(_1d21d4ca0_Enum(_171160_d.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind, _171142_t)))))) {
		_1d21cccdc_applyCastKind(&(_171160_d), &(_171142_t));
		_171160_d.get()._field_Model.cast_ptr<_1d0617613_CastingExprModel>(&__jule_any_type98).get()._field_Token=_171174_errorToken;
	} else {
		_171160_d.get()._field_Kind=_171142_t;
	};
	_171160_d.get()._field_Decl=false;
	_171160_d.get()._field_Lvalue=false;
	_171160_d.get()._field_untyped=false;
	if (_1d0409658_IsConst(_171160_d.ptr())) {
		_171160_d.get()._field_Constant.get()._field_Kind=_1d21d4563_Prim(_171142_t.ptr()).get()._field_Kind;
	};
	return _171160_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d041b9ab_evalCastT(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d21d1d46_TypeKind>* _178234_t, jule::Ptr<_1d05e36dd_Expr>* _178253_e, jule::Ptr<_22be1281d_Token>* _178268_et) {
	jule::Ptr<_1d21d1d46_TypeKind> _178317_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_178317_prefix;
	});;
	if ((_1d21d54dc_Slc((*(_178234_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_178253_e)).get()._field_Kind };
			
			if (_match_expr.type == &__jule_any_type99) {
				_case_begin_1b772d698:;
				{
					_self_.get()._field_prefix=(*(_178234_t));
				}
			}
			_match_end_1b772d5ee:;
		};
	};
	jule::Ptr<_1d0408c95_Data> _179217_d = _1d01dac53_evalExpr(_self_, (*(_178253_e)));;
	if (((_179217_d == nullptr) || (_self_.get()._field_prefix != nullptr))) {
		return _179217_d;;
	};
	return _1d041b55a_evalCastByTypeNData(_self_.ptr(), (*(_178234_t)), _179217_d, (*(_178268_et)));;
}



inline jule::Ptr<_1d0408c95_Data> _1d041bcb9_evalCast(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e624b_CastExpr> _179932_c) {
	jule::Ptr<_1d21d8be9_TypeSymbol> _180017_t = _1d062b55b_buildType(_179932_c.get()._field_Kind);;
	jule::Bool _180113_ok = _1d21a4335_checkType(_self_.get()._field_s, &(_180017_t), _self_.get()._field_lookup);;
	if ((!(_180113_ok))) {
		return nullptr;;
	};
	return _1d041b9ab_evalCastT(_self_, &(_180017_t.get()._field_Kind), &(_179932_c.get()._field_Expr), &(_179932_c.get()._field_Kind.get()._field_Token));;
}



inline jule::Ptr<_1d0408c95_Data> _1d041c0c7_evalNsSelection(_1d040a813_Eval* _self_, jule::Ptr<_1d05e6603_NsSelectionExpr> _180834_s) {
	jule::Str _180913_path = _1d21ec438_buildLinkPathByTokens(&(_180834_s.get()._field_Ns));;
	jule::Ptr<_1d219307c_ImportInfo> _181017_imp = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ed637_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>([=](jule::Ptr<_1d219307c_ImportInfo> _181052_imp) mutable -> jule::Bool {
		if (((_180834_s.get()._field_Ns.len() == 1LL) && (_181052_imp.get()._field_Alias == _180913_path))) {
			return true;;
		};
		return ((_181052_imp.get()._field_LinkPath == _180913_path) && _1d21958ba_isAccessibleViaSelection(_181052_imp.ptr()));;
	}));;
	if ((_181017_imp == nullptr)) {
		_1d040ad1e_pushErr(_self_, _180834_s.get()._field_Ns[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_180913_path, &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Trait<_1d2200172_Lookup> _182217_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1d2200172_Lookup>(_181017_imp, 1);
	;
	_1d040b4e5_disallowBuiltin(_self_);
	jule::Any _182717_def = _1d040dd33_getDef(_self_, _180834_s.get()._field_Ident.get()._field_Kind, false);;
	_1d040b319_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_182217_lookup;
	jule::Ptr<_1d0408c95_Data> _183017_d = _1d041281a_evalDef(_self_, _182717_def, _180834_s.get()._field_Ident);;
	return _183017_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d041c528_evalStructLitExplicit(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d0611bd4_StructIns> _183445_s, jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _183513_exprs, jule::Ptr<_22be1281d_Token> _183533_errorToken) {
	jule::Bool _183613_ok = _1d21a00bc_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_183445_s.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_183445_s.get()._field_Generics.len()), _183533_errorToken);;
	if ((!(_183613_ok))) {
		return nullptr;;
	};
	if (((_self_.get()._field_field != nullptr) && (_self_.get()._field_field.get()._field_Decl.get()._field_Owner == _183445_s.get()._field_Decl))) {
		_1d040ad1e_pushErr(_self_.ptr(), _183533_errorToken, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any(_183445_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
	};
	_1b76d40dd_pushReference(_self_.ptr(), &(_183445_s));
	_1d0410c25_checkDeprecated(_self_.ptr(), &(_183445_s.get()._field_Decl.get()._field_Directives), _183533_errorToken);
	_1d03ed372_structLitChecker _184917_slc = _1d03ed372_structLitChecker{._field_e=_self_, ._field_errorToken=_183533_errorToken, ._field_s=_183445_s, };;
	_1d03ee917_check(&_184917_slc, &(_183513_exprs));
	jule::Ptr<_1d0408c95_Data> _185617_d = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_183445_s, 0)}), ._field_Mutable=(!(_self_.get()._field_immutable)), ._field_Model=jule::Any(jule::new_ptr<_1d0616ca5_StructLitExprModel>(_1d0616ca5_StructLitExprModel{._field_Strct=_183445_s, ._field_Args=_184917_slc._field_args}), &__jule_any_type100), });;
	if (_183445_s.get()._field_Decl.get()._field_Binded) {
		_185617_d.get()._field_Kind.get()._field_BindIdent=_183445_s.get()._field_Decl.get()._field_Ident;
	};
	return _185617_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d041c836_evalStructLit(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e8858_StructLit> _187237_lit) {
	jule::Ptr<_1d21d8be9_TypeSymbol> _187317_t = _1d062b55b_buildType(_187237_lit.get()._field_Kind);;
	jule::Bool _187413_ok = _1d21a4335_checkType(_self_.get()._field_s, &(_187317_t), _self_.get()._field_lookup);;
	if ((!(_187413_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _187917_s = _1d21d59b5_Struct(_187317_t.get()._field_Kind.ptr());;
	if ((_187917_s == nullptr)) {
		if ((_1d21d47c7_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
			_187917_s=_1d21d59b5_Struct(_1d21d47c7_Sptr(_187317_t.get()._field_Kind.ptr()).get()._field_Elem.ptr());
			if ((_187917_s != nullptr)) {
				goto _julec_label_eval;
			};
		};
		_1d040ad1e_pushErr(_self_.ptr(), _187237_lit.get()._field_Kind.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_eval:;
	jule::Ptr<_1d0408c95_Data> _189217_d = _1d041c528_evalStructLitExplicit(_self_, _187917_s, _187237_lit.get()._field_Exprs, _187237_lit.get()._field_Kind.get()._field_Token);;
	if ((_1d21d47c7_Sptr(_187317_t.get()._field_Kind.ptr()) != nullptr)) {
		jule::Ptr<_1d0616ca5_StructLitExprModel> _189421_model = _189217_d.get()._field_Model.cast_ptr<_1d0616ca5_StructLitExprModel>(&__jule_any_type100);;
		_1d21cb69d_makeStructLitAlloc(&(_189217_d), &(_189421_model));
	};
	return _189217_d;;
}



inline _1d21e3187_typeChecker _1d041ca9a_typeChecker(_1d040a813_Eval* _self_) {
	return _1d21a3224_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1d0408c95_Data> _1d041cda8_evalType(_1d040a813_Eval* _self_, jule::Ptr<_1d05de563_TypeDecl> _190431_t) {
	jule::Ptr<_1d21d8be9_TypeSymbol> _190517_tk = _1d062b55b_buildType(_190431_t);;
	jule::Bool _190613_ok = _1d21a4335_checkType((*(_self_))._field_s, &(_190517_tk), (*(_self_))._field_lookup);;
	if ((!(_190613_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_190517_tk.get()._field_Kind, ._field_Model=jule::Any(_190517_tk.get()._field_Kind, &__jule_any_type89), ._field_Decl=true, });;
}



inline void _1d041d1c7_callTypeFn(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e7604_FnCallExpr>* _191735_fc, jule::Ptr<_1d0408c95_Data>* _191757_d) {
	if (((*(_191735_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
	} else if (((*(_191735_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_191757_d)).get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if ((*(_191735_fc)).get()._field_IsCo) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("concurrent calls are not allowed for type-cast calls", 52), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	} else if (((*(_191735_fc)).get()._field_Exception != nullptr)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_191735_fc)).get()._field_Token, jule::Str("exceptionals are not supported for type-cast call", 49), jule::Slice<jule::Any>());
		(*(_191757_d))=nullptr;
		return;;
	};
	if (((*(_191735_fc)).get()._field_Args.len() > 0LL)) {
		jule::Ptr<_1d05e36dd_Expr> _193321_arg = (*(_191735_fc)).get()._field_Args[0LL];;
		(*(_191757_d))=_1d041b9ab_evalCastT(_self_, &((*(_191757_d)).get()._field_Kind), &(_193321_arg), &(_193321_arg.get()._field_Token));
		return;;
	};
	if (((*(_191757_d)) != nullptr)) {
		(*(_191757_d)).get()._field_Decl=false;
	};
}



inline void _1d041d4e6_callBuiltinFn(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e7604_FnCallExpr>* _194338_fc, jule::Ptr<_1d0408c95_Data>* _194360_d) {
	(*(_194360_d))=_1d21d5751_Fn((*(_194360_d)).get()._field_Kind.ptr()).get()._field_caller(&(_self_), _194338_fc, _194360_d);
	if (((*(_194360_d)) == nullptr)) {
		return;;
	};
	(*(_194360_d)).get()._field_Mutable=true;
}



inline void _1d041d837_checkFnOfConcurrentCall(_1d040a813_Eval* _self_, jule::Ptr<_1d0626e6e_FnIns>* _195143_f, jule::Ptr<_22be1281d_Token> _195154_errorToken) {
	if (_1d040b759_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*(_195143_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b774b94c:;
		if (it != expr_end) {
			jule::Ptr<_1d06260a0_ParamIns> *_195516_p = it;
			{
				if (_1d06230ad_IsSelf((*(_195516_p)).get()._field_Decl.ptr())) {
					if ((!(_1d0623322_IsRef((*(_195516_p)).get()._field_Decl.ptr())))) {
						_1d040ad1e_pushErr(_self_, _195154_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97), jule::Slice<jule::Any>());
						_1d040b13d_pushSuggestion(_self_, jule::Str("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99), jule::Slice<jule::Any>());
					};
				};
				if ((*(_195516_p)).get()._field_Decl.get()._field_Reference) {
					_1d040ad1e_pushErr(_self_, _195154_errorToken, jule::Str("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96), jule::Slice<jule::Any>());
					_1d040b13d_pushSuggestion(_self_, jule::Str("use Unsafe Jule with unsafe {} scope to make concurrent call", 60), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1b774b94c:;
			++it;
			goto _iter_begin_1b774b94c;
		}
		_iter_end_1b774b94c:;
	};
}



inline void _1d041dc33_processExceptionalHandler(_1d040a813_Eval* _self_, jule::Ptr<_1d0626e6e_FnIns>* _197049_f, jule::Ptr<_1d05e7604_FnCallExpr>* _197065_fc, jule::Ptr<_1d0408c95_Data>* _197087_d) {
	jule::Bool _197113_resultNeeded = ((!(_1d0624730_IsVoid((*(_197049_f)).get()._field_Decl.ptr()))) && ((*(_self_))._field_arg || (!((*(_self_))._field_ignored))));;
	jule::Ptr<_1d217b241_scopeChecker> _197217_csc = nullptr;;
	jule::Ptr<_1d2174613_Scope> _197317_ch = nullptr;;
	jule::Ptr<_1d0617eb5_FnCallExprModel> _197517_model = (*(_197087_d)).get()._field_Model.cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35);;
	jule::Ptr<_1d217b241_scopeChecker> _197917_sc = (*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0);;
	_197217_csc=_1d218b3e9_newChildChecker(_197917_sc);
	if (_197113_resultNeeded) {
		_197217_csc.get()._field_result=(*(_197049_f));
	};
	_197317_ch=_1d218081c_getChild(_197917_sc.ptr());
	(*(_197065_fc)).get()._field_Exception.get()._field_Parent=_197917_sc.get()._field_tree;
	_197217_csc.get()._field_table.get()._field_Vars = jule::alloc_for_append(_197217_csc.get()._field_table.get()._field_Vars,1);_197217_csc.get()._field_table.get()._field_Vars.__push(_1d21cb9de_buildErrorVar(&(_197317_ch), _197065_fc));;
	_1d2180bd5_checkChildSsc(_197917_sc, &((*(_197065_fc)).get()._field_Exception), &(_197317_ch), &(_197217_csc));
	_197517_model.get()._field_Assigned=_197113_resultNeeded;
	_197517_model.get()._field_Except=_197317_ch;
	if ((_197113_resultNeeded && (_197217_csc.get()._field_result != nullptr))) {
		_1d040ad1e_pushErr(_self_, (*(_197065_fc)).get()._field_Token, jule::Str("exceptional returns an expression, therefore else block should return expression", 80), jule::Slice<jule::Any>());
	};
}



inline void _1d041e063_callFn(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e7604_FnCallExpr>* _199731_fc, jule::Ptr<_1d0408c95_Data>* _199753_d) {
	jule::Ptr<_1d0626e6e_FnIns> _199817_f = _1d21d5751_Fn((*(_199753_d)).get()._field_Kind.ptr());;
	if (_1d0628305_IsBuiltin(_199817_f.ptr())) {
		_1d041d4e6_callBuiltinFn(_self_, _199731_fc, _199753_d);
		return;;
	};
	if ((_1d040b9bd_isGlobal(_self_.ptr()) && _199817_f.get()._field_Decl.get()._field_Exceptional)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("exceptionals are not allowed in global scope", 44), jule::Slice<jule::Any>());
		_1d040b13d_pushSuggestion(_self_.ptr(), jule::Str("wrap exceptional with a non-exceptional function", 48), jule::Slice<jule::Any>());
		(*(_199753_d))=nullptr;
		return;;
	};
	if (((!(_1d0624994_IsMethod(_199817_f.get()._field_Decl.ptr()))) && _1d21eb58b_hasDirective(&(_199817_f.get()._field_Decl.get()._field_Directives), jule::Str("test", 4)))) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("you cannot call test functions", 30), jule::Slice<jule::Any>());
		(*(_199753_d))=nullptr;
		return;;
	};
	if (((((!((*(_199753_d)).get()._field_Mutable)) && _1d0624994_IsMethod(_199817_f.get()._field_Decl.ptr())) && (!(_199817_f.get()._field_Decl.get()._field_Statically))) && _199817_f.get()._field_Decl.get()._field_Params[0LL].get()._field_Mutable)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	} else if (((!(_1d040b759_isUnsafe(_self_.ptr()))) && _199817_f.get()._field_Decl.get()._field_Unsafety)) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	jule::Bool _202217_dynamicAnnotation = (((_199817_f.get()._field_Decl.get()._field_Generics.len() > 0LL) && (_199817_f.get()._field_Generics.len() == 0LL)) && (_199817_f.get()._field_Params.len() > 0LL));;
	if (_202217_dynamicAnnotation) {
		_199817_f.get()._field_Generics=jule::Slice<jule::Ptr<_1d21d05b4_InsGeneric>>::alloc(_199817_f.get()._field_Decl.get()._field_Generics.len(), _199817_f.get()._field_Decl.get()._field_Generics.len());
	} else if ((_199817_f.get()._field_Generics.len() != _199817_f.get()._field_Decl.get()._field_Generics.len())) {
		_1d21a00bc_checkGenericQuantity(_self_.get()._field_s.ptr(), static_cast<jule::I64>(_199817_f.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_199817_f.get()._field_Generics.len()), (*(_199731_fc)).get()._field_Token);
		(*(_199753_d))=nullptr;
		return;;
	};
	jule::Ptr<_1d219b34e_Sema> _203117_old = _self_.get()._field_s;;
	if ((_199817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		_self_.get()._field_s=_199817_f.get()._field_Decl.get()._field_Owner.get()._field_sema;
	};
	__JULE_DEFER({
		if ((_203117_old != _self_.get()._field_s)) {
			_203117_old.get()._field_errors=jule::append(_203117_old.get()._field_errors,_self_.get()._field_s.get()._field_errors);
			_self_.get()._field_s.get()._field_errors=nullptr;
		};
		_self_.get()._field_s=_203117_old;
	});;
	_1d03ea968_fnCallArgChecker _204417_fcac = _1d03ea968_fnCallArgChecker{._field_e=_self_, ._field_args=(*(_199731_fc)).get()._field_Args, ._field_errorToken=(*(_199731_fc)).get()._field_Token, ._field_dynamicAnnotation=_202217_dynamicAnnotation, };;
	if ((!(_202217_dynamicAnnotation))) {
		if ((!(_199817_f.get()._field_reloaded))) {
			jule::Bool _205321_ok = _1d21a837d_reloadFnInsTypes(_self_.get()._field_s, _199817_f);;
			_199817_f.get()._field_reloaded=true;
			if ((!(_205321_ok))) {
				(*(_199753_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1d0626e6e_FnIns> _206021_existInstance = _1d0625be8_appendInstance(_199817_f.get()._field_Decl.ptr(), &(_199817_f));;
		if ((_206021_existInstance != nullptr)) {
			_199817_f=_206021_existInstance;
		};
	} else if ((!(_1d21a6c72_buildFnNonGenericTypeKinds(_self_.get()._field_s, &(_199817_f), &(_204417_fcac._field_ignored))))) {
		(*(_199753_d))=nullptr;
		return;;
	};
	_204417_fcac._field_f=_199817_f;
	jule::Bool _207117_ok = false;;
	if ((_199817_f.get()._field_Decl.get()._field_Owner != nullptr)) {
		({
			jule::Ptr<_1d219b34e_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1d219b34e_Sema> _1___jule_assign_arg = _203117_old;
			_203117_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
		_207117_ok=_1d03ecd33_check(&_204417_fcac);
		({
			jule::Ptr<_1d219b34e_Sema> ___jule_assign_arg = _self_.get()._field_s;
			jule::Ptr<_1d219b34e_Sema> _1___jule_assign_arg = _203117_old;
			_203117_old = ___jule_assign_arg;
			_self_.get()._field_s = _1___jule_assign_arg;
		});
	} else {
		_207117_ok=_1d03ecd33_check(&_204417_fcac);
	};
	if (_202217_dynamicAnnotation) {
		if ((!(_207117_ok))) {
			(*(_199753_d))=nullptr;
			return;;
		};
		if ((!(_1d0416ca3_checkGenericFn(_self_, &(_199817_f), &((*(_199731_fc)).get()._field_Token), &((*(_199753_d)).get()._field_Model))))) {
			(*(_199753_d))=nullptr;
			return;;
		};
	};
	jule::Any _209117_callModel = (*(_199753_d)).get()._field_Model;;
	if (_1d0624730_IsVoid(_199817_f.get()._field_Decl.ptr())) {
		(*(_199753_d))=_1d21cceda_buildVoidData();
	} else {
		(*(_199753_d)).get()._field_Kind=_199817_f.get()._field_Result;
		(*(_199753_d)).get()._field_Lvalue=false;
	};
	jule::Ptr<_1d0617eb5_FnCallExprModel> _210017_model = jule::new_ptr<_1d0617eb5_FnCallExprModel>(_1d0617eb5_FnCallExprModel{._field_Token=(*(_199731_fc)).get()._field_Token, ._field_Func=_199817_f, ._field_IsCo=(*(_199731_fc)).get()._field_IsCo, ._field_Expr=_209117_callModel, ._field_Args=_204417_fcac._field_argModels, });;
	(*(_199753_d)).get()._field_Model=jule::Any(_210017_model, &__jule_any_type35);
	(*(_199753_d)).get()._field_Mutable=true;
	if (_199817_f.get()._field_Decl.get()._field_Exceptional) {
		if ((*(_199731_fc)).get()._field_IsCo) {
			_1d219dc25_pushErr(_self_.get()._field_s.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("concurrent calls not supports exceptionals", 42), jule::Slice<jule::Any>());
			_1d219e044_pushSuggestion(_self_.get()._field_s.ptr(), jule::Str("handle exceptional in a separate function or anonymous function", 63), jule::Slice<jule::Any>());
		};
		{
			
			if (_1d05e7967_Unhandled((*(_199731_fc)).ptr())) {
				_case_begin_1b7767abc:;
				{
					_1d040ad1e_pushErr(_self_.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("exceptionals must be handled", 28), jule::Slice<jule::Any>());
					_1d040b13d_pushSuggestion(_self_.ptr(), jule::Str("use \"!\" operator after exceptional to handle it", 47), jule::Slice<jule::Any>());
				}
			}
			else if (_1d05e7bcb_Ignored((*(_199731_fc)).ptr())) {
				_case_begin_1b7767517:;
				{
					goto _match_end_1b7766c0e;
				}
			}
			else {
				_case_begin_1b7766967:;
				{
					_1d041dc33_processExceptionalHandler(_self_.ptr(), &(_199817_f), _199731_fc, _199753_d);
				}
			}
			_match_end_1b7766c0e:;
		};
	} else if ((!(_1d05e7967_Unhandled((*(_199731_fc)).ptr())))) {
		_1d040ad1e_pushErr(_self_.ptr(), (*(_199731_fc)).get()._field_Token, jule::Str("non-exceptionals cannot handled like exceptionals", 49), jule::Slice<jule::Any>());
	};
	if ((*(_199731_fc)).get()._field_IsCo) {
		_1d041d837_checkFnOfConcurrentCall(_self_.ptr(), &(_210017_model.get()._field_Func), (*(_199731_fc)).get()._field_Token);
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d041e371_evalFnCall(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e7604_FnCallExpr> _213534_fc) {
	jule::Ptr<_1d21d1d46_TypeKind> _213617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_213617_prefix;
	});;
	{
		auto &_match_expr{ _213534_fc.get()._field_Expr.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b776a372:;
			{
				if (_213534_fc.get()._field_Expr.get()._field_Token.get()._field_Kind.equal("error", 5)) {
					return _1d06466ec_builtinCallerError(&(_self_), &(_213534_fc));;
				};
			}
		}
		_match_end_1b776a31c:;
	};
	jule::Ptr<_1d0408c95_Data> _214917_d = _1d0426598_evalExprKind(_self_, _213534_fc.get()._field_Expr.get()._field_Kind);;
	if ((_214917_d == nullptr)) {
		return nullptr;;
	};
	if (_214917_d.get()._field_Decl) {
		_1d041d1c7_callTypeFn(_self_, &(_213534_fc), &(_214917_d));
		return _214917_d;;
	};
	if ((_1d21d5751_Fn(_214917_d.get()._field_Kind.ptr()) == nullptr)) {
		_1d040ad1e_pushErr(_self_.ptr(), _213534_fc.get()._field_Token, jule::Str("attempting to call a non-function", 33), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1d041e063_callFn(_self_, &(_213534_fc), &(_214917_d));
	return _214917_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d041e728_evalEnumStatic(_1d040a813_Eval* _self_, jule::Ptr<_1d214bc5b_Enum> _216837_enm, jule::Ptr<_22be1281d_Token> _216849_ident) {
	jule::Ptr<_1d214b266_EnumItem> _216917_item = _1d214c81c_FindItem(_216837_enm.ptr(), _216849_ident.get()._field_Kind);;
	if ((_216917_item == nullptr)) {
		_1d040ad1e_pushErr(_self_, _216849_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_216837_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_216849_ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _1d21ce65c_evalEnumStatic(&(_216837_enm), &(_216917_item));;
}



inline jule::Ptr<_1d0408c95_Data> _1d041ead0_evalTypeEnumStatic(_1d040a813_Eval* _self_, jule::Ptr<_1d214d356_TypeEnum> _217641_enm, jule::Ptr<_22be1281d_Token> _217657_ident) {
	jule::Ptr<_1d214cc90_TypeEnumItem> _217717_item = _1d214dd90_FindItem(_217641_enm.ptr(), _217657_ident.get()._field_Kind);;
	if ((_217717_item == nullptr)) {
		_1d040ad1e_pushErr(_self_, _217657_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_217641_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_217657_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if ((_1d21d4ca0_Enum(_217717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77767ce:;
			{
				return _1d040e3b6__evalEnum(_self_, _1d21d4ca0_Enum(_217717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1d21d5014_TypeEnum(_217717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7776e72:;
			{
				return _1d040ea7b__evalTypeEnum(_self_, _1d21d5014_TypeEnum(_217717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else if ((_1d21d59b5_Struct(_217717_item.get()._field_Kind.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77763a0:;
			{
				return _1d0410241__evalStruct(_self_, _1d21d59b5_Struct(_217717_item.get()._field_Kind.get()._field_Kind.ptr()));;
			}
		}
		else {
			_case_begin_1b77761e6:;
			{
				jule::Ptr<_1d0408c95_Data> _219021_d = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_217717_item.get()._field_Kind.get()._field_Kind, ._field_Decl=true, });;
				_219021_d.get()._field_Model=jule::Any(_219021_d.get()._field_Kind, &__jule_any_type89);
				return _219021_d;;
			}
		}
		_match_end_1b7770311:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d041ee87_evalStructStatic(_1d040a813_Eval* _self_, jule::Ptr<_1d0611bd4_StructIns> _219939_s, jule::Ptr<_22be1281d_Token> _219954_ident) {
	jule::Ptr<_1d0408c95_Data> _220017_d = jule::new_ptr<_1d0408c95_Data>();;
	;
	jule::Ptr<_1d06242bd_Fn> _220417_method = _1d0612b80_FindMethod(_219939_s.ptr(), _219954_ident.get()._field_Kind, true);;
	if ((_220417_method != nullptr)) {
		if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _220417_method.get()._field_Public, _220417_method.get()._field_Token)))) {
			_1d040ad1e_pushErr(_self_, _219954_ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_219954_ident.get()._field_Kind, &__jule_any_type5)}));
			_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1d0626e6e_FnIns> _221121_ins = _1d062591d_instance(_220417_method);;
		_221121_ins.get()._field_Owner=_219939_s;
		_1b763601d_pushReference(_self_, &(_221121_ins));
		_220017_d.get()._field_Model=jule::Any(jule::new_ptr<_1d061abcc_StructStaticIdentExprModel>(_1d061abcc_StructStaticIdentExprModel{._field_Structure=_219939_s, ._field_Expr=_220017_d.get()._field_Model, ._field_Method=_221121_ins}), &__jule_any_type101);
		_220017_d.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_221121_ins, 1)});
		return _220017_d;;
	};
	jule::Ptr<_1d21bb65a_Var> _222517_sttc = _1d061329b_FindStatic(_219939_s.ptr(), _219954_ident.get()._field_Kind);;
	if ((_222517_sttc != nullptr)) {
		return _1d04120ab_evalVar(_self_, _222517_sttc, _219954_ident);;
	};
	_1d040ad1e_pushErr(_self_, _219954_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_219939_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_219954_ident.get()._field_Kind, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1d0408c95_Data> _1d04203d8_evalTraitSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _223440_d, jule::Ptr<_1d21494c8_Trait> _223454_trt, jule::Ptr<_22be1281d_Token> _223471_ident) {
	jule::Ptr<_1d06242bd_Fn> _223517_f = _1d214a375_FindMethod(_223454_trt.ptr(), _223471_ident.get()._field_Kind);;
	if ((_223517_f == nullptr)) {
		_1d040ad1e_pushErr(_self_, _223471_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_223454_trt.get()._field_Ident, &__jule_any_type5),jule::Any(_223471_ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d062591d_instance(_223517_f), 1)}), ._field_Model=jule::Any(jule::new_ptr<_1d061a050_TraitSubIdentExprModel>(_1d061a050_TraitSubIdentExprModel{._field_Token=_223471_ident, ._field_Expr=_223440_d.get()._field_Model, ._field_Method=_223517_f, ._field_Trt=_223454_trt}), &__jule_any_type70), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d0420905_evalStructSubIdentField(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data>* _225447_d, jule::Ptr<_1d0611bd4_StructIns>* _225462_s, jule::Ptr<_22be1281d_Token>* _225482_tok, jule::Ptr<_1d06111de_FieldIns>* _2254100_f) {
	jule::Ptr<_1d061a836_StructSubIdentExprModel> _225517_model = jule::new_ptr<_1d061a836_StructSubIdentExprModel>(_1d061a836_StructSubIdentExprModel{._field_Token=(*(_225482_tok)), ._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_225447_d))))), ._field_Field=(*(_2254100_f)), ._field_Owner=(*(_225462_s))});;
	(*(_225447_d)).get()._field_Model=jule::Any(_225517_model, &__jule_any_type71);
	(*(_225447_d)).get()._field_Kind=(*(_2254100_f)).get()._field_Kind;
	(*(_225447_d)).get()._field_Lvalue=true;
	if (((*(_2254100_f)).get()._field_Decl.get()._field_Mutable && (!((*(_225447_d)).get()._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b77849eb:;
				{
					jule::Ptr<_1d217b241_scopeChecker> _226921_scope = _1d217e068_getRoot((*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0));;
					(*(_225447_d)).get()._field_Mutable=((_226921_scope.get()._field_owner != nullptr) && (_226921_scope.get()._field_owner.get()._field_Owner == (*(_225462_s))));
				}
			}
			_match_end_1b7784996:;
		};
	};
	return (*(_225447_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0420e11_evalStructSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _227741_d, jule::Ptr<_1d0611bd4_StructIns> _227755_s, jule::Ptr<_1d05e6a76_SubIdentExpr> _227774_si, jule::Bool _227793_ref) {
	jule::Ptr<_1d06111de_FieldIns> _227817_f = _1d0612e8d_FindField(_227755_s.ptr(), _227774_si.get()._field_Ident.get()._field_Kind);;
	if ((_227817_f != nullptr)) {
		if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _227817_f.get()._field_Decl.get()._field_Public, _227817_f.get()._field_Decl.get()._field_Token)))) {
			_1d040ad1e_pushErr(_self_, _227774_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_227817_f.get()._field_Decl.get()._field_Ident, &__jule_any_type5)}));
			_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
		};
		return _1d0420905_evalStructSubIdentField(_self_, &(_227741_d), &(_227755_s), &(_227774_si.get()._field_Ident), &(_227817_f));;
	};
	;
	jule::Ptr<_1d06242bd_Fn> _228817_m = _1d0612b80_FindMethod(_227755_s.ptr(), _227774_si.get()._field_Ident.get()._field_Kind, false);;
	if ((_228817_m == nullptr)) {
		_1d040ad1e_pushErr(_self_, _227774_si.get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_227755_s.get()._field_Decl.get()._field_Ident, &__jule_any_type5),jule::Any(_227774_si.get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), _228817_m.get()._field_Public, _228817_m.get()._field_Token)))) {
		_1d040ad1e_pushErr(_self_, _227774_si.get()._field_Ident, jule::Str("inaccessible identifier: @ is private", 37), jule::Slice<jule::Any>::make({jule::Any(_228817_m.get()._field_Ident, &__jule_any_type5)}));
		_1d040b13d_pushSuggestion(_self_, jule::Str("make public with capital letter identifier to access", 52), jule::Slice<jule::Any>());
	};
	if ((_1d0623322_IsRef(_228817_m.get()._field_Params[0LL].ptr()) && (!(_227793_ref)))) {
		_1d040ad1e_pushErr(_self_, _227774_si.get()._field_Ident, jule::Str("reference method cannot use with non-reference instance", 55), jule::Slice<jule::Any>());
	};
	_1d0410c25_checkDeprecated(_self_, &(_228817_m.get()._field_Directives), _227774_si.get()._field_Ident);
	jule::Ptr<_1d0626e6e_FnIns> _230417_ins = _1d062591d_instance(_228817_m);;
	_230417_ins.get()._field_Owner=_227755_s;
	_1b763601d_pushReference(_self_, &(_230417_ins));
	jule::Ptr<_1d0408c95_Data> _230717_model = jule::new_ptr<_1d0408c95_Data>((*(_227741_d)));;
	_227741_d.get()._field_Model=jule::Any(jule::new_ptr<_1d061a836_StructSubIdentExprModel>(_1d061a836_StructSubIdentExprModel{._field_Token=_227774_si.get()._field_Ident, ._field_Expr=_230717_model, ._field_Method=_230417_ins, ._field_Owner=_227755_s}), &__jule_any_type71);
	_227741_d.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_230417_ins, 1)});
	return _227741_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d04212b8_evalSliceSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _231840_d, jule::Ptr<_22be1281d_Token> _231854_ident) {
	{
		auto &_match_expr{ _231854_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b77901bb:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_Params=jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>::make({jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1d0403388_lenKind()}),jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1d0403388_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d06463ab_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_231840_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1d061b8e2_CommonSubIdentExprModel>(_1d061b8e2_CommonSubIdentExprModel{._field_ExprKind=_231840_d.get()._field_Kind, ._field_Expr=_231840_d.get()._field_Model, ._field_Token=_231854_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b7790496:;
			{
				_1d040ad1e_pushErr(_self_, _231854_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_231840_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_231854_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b7790254:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0421670_evalArraySubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _235540_d, jule::Ptr<_22be1281d_Token> _235554_ident) {
	{
		auto &_match_expr{ _235554_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("swap", 4)) {
			_case_begin_1b7790694:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_Params=jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>::make({jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Ident=jule::Str("i", 1)}), ._field_Kind=_1d0403388_lenKind()}),jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Ident=jule::Str("j", 1)}), ._field_Kind=_1d0403388_lenKind()})}), ._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d06463ab_builtinCallerCommonMut), }), 1)}), ._field_Mutable=_235540_d.get()._field_Mutable, ._field_Model=jule::Any(jule::new_ptr<_1d061b8e2_CommonSubIdentExprModel>(_1d061b8e2_CommonSubIdentExprModel{._field_ExprKind=_235540_d.get()._field_Kind, ._field_Expr=_235540_d.get()._field_Model, ._field_Token=_235554_ident, ._field_Ident=jule::Str("swap", 4)}), &__jule_any_type73), });;
			}
		}
		else {
			_case_begin_1b779319c:;
			{
				_1d040ad1e_pushErr(_self_, _235554_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_235540_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_235554_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b779072c:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d042197d_evalIntTypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _239236_ident) {
	;
	{
		auto &_match_expr{ _239236_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b7796bd9:;
			{
				jule::Ptr<_1e76e5cc3_Const> _239621_c = static__1e76e6246_NewI64(static_cast<jule::I64>(_1e76de4e7_MaxI(jule::Str("int", 3))));;
				_239621_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642231_primInt, ._field_Model=jule::Any(_239621_c, &__jule_any_type19), ._field_Constant=_239621_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b7795e80:;
			{
				jule::Ptr<_1e76e5cc3_Const> _240421_c = static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e76de99d_Min(jule::Str("int", 3)))));;
				_240421_c.get()._field_Kind=jule::Str("int", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642231_primInt, ._field_Model=jule::Any(_240421_c, &__jule_any_type19), ._field_Constant=_240421_c});;
			}
		}
		else {
			_case_begin_1b7796216:;
			{
				_1d040ad1e_pushErr(_self_, _239236_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("int", 3), &__jule_any_type5),jule::Any(_239236_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b779616c:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0421c8b_evalUintTypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _241737_ident) {
	;
	{
		auto &_match_expr{ _241737_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b7799cca:;
			{
				jule::Ptr<_1e76e5cc3_Const> _242121_c = static__1e76e64dd_NewU64(static_cast<jule::U64>(_1e76de78e_MaxU(jule::Str("uint", 4))));;
				_242121_c.get()._field_Kind=jule::Str("uint", 4);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0641e67_primUint, ._field_Model=jule::Any(_242121_c, &__jule_any_type19), ._field_Constant=_242121_c});;
			}
		}
		else {
			_case_begin_1b7799439:;
			{
				_1d040ad1e_pushErr(_self_, _241737_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("uint", 4), &__jule_any_type5),jule::Any(_241737_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77993c3:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0422099_evalI8TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _243435_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _243435_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b779c959:;
			{
				jule::Ptr<_1e76e5cc3_Const> _244021_c = static__1e76e6246_NewI64(127LL);;
				_244021_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d064260a_primI8, ._field_Model=jule::Any(_244021_c, &__jule_any_type19), ._field_Constant=_244021_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b779c3b5:;
			{
				jule::Ptr<_1e76e5cc3_Const> _244821_c = static__1e76e6246_NewI64(-128LL);;
				_244821_c.get()._field_Kind=jule::Str("i8", 2);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d064260a_primI8, ._field_Model=jule::Any(_244821_c, &__jule_any_type19), ._field_Constant=_244821_c});;
			}
		}
		else {
			_case_begin_1b779bd32:;
			{
				_1d040ad1e_pushErr(_self_, _243435_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i8", 2), &__jule_any_type5),jule::Any(_243435_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b779aec9:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04223a7_evalI16TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _246136_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _246136_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b779ed24:;
			{
				jule::Ptr<_1e76e5cc3_Const> _246721_c = static__1e76e6246_NewI64(32767LL);;
				_246721_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06428c4_primI16, ._field_Model=jule::Any(_246721_c, &__jule_any_type19), ._field_Constant=_246721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b77a10de:;
			{
				jule::Ptr<_1e76e5cc3_Const> _247521_c = static__1e76e6246_NewI64(-32768LL);;
				_247521_c.get()._field_Kind=jule::Str("i16", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06428c4_primI16, ._field_Model=jule::Any(_247521_c, &__jule_any_type19), ._field_Constant=_247521_c});;
			}
		}
		else {
			_case_begin_1b77a05c7:;
			{
				_1d040ad1e_pushErr(_self_, _246136_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i16", 3), &__jule_any_type5),jule::Any(_246136_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77a04c8:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04226b5_evalI32TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _248836_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _248836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77a34ba:;
			{
				jule::Ptr<_1e76e5cc3_Const> _249421_c = static__1e76e6246_NewI64(2147483647LL);;
				_249421_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642b8d_primI32, ._field_Model=jule::Any(_249421_c, &__jule_any_type19), ._field_Constant=_249421_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b77a4785:;
			{
				jule::Ptr<_1e76e5cc3_Const> _250221_c = static__1e76e6246_NewI64(-2147483648LL);;
				_250221_c.get()._field_Kind=jule::Str("i32", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642b8d_primI32, ._field_Model=jule::Any(_250221_c, &__jule_any_type19), ._field_Constant=_250221_c});;
			}
		}
		else {
			_case_begin_1b77a3c6d:;
			{
				_1d040ad1e_pushErr(_self_, _248836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i32", 3), &__jule_any_type5),jule::Any(_248836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77a3b6e:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04229c3_evalI64TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _251536_ident) {
	;
	;
	;
	{
		auto &_match_expr{ _251536_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77a6b61:;
			{
				jule::Ptr<_1e76e5cc3_Const> _252121_c = static__1e76e6246_NewI64(jule::MAX_I64);;
				_252121_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642e57_primI64, ._field_Model=jule::Any(_252121_c, &__jule_any_type19), ._field_Constant=_252121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b77a7e2b:;
			{
				jule::Ptr<_1e76e5cc3_Const> _252921_c = static__1e76e6246_NewI64(jule::MIN_I64);;
				_252921_c.get()._field_Kind=jule::Str("i64", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642e57_primI64, ._field_Model=jule::Any(_252921_c, &__jule_any_type19), ._field_Constant=_252921_c});;
			}
		}
		else {
			_case_begin_1b77a7414:;
			{
				_1d040ad1e_pushErr(_self_, _251536_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("i64", 3), &__jule_any_type5),jule::Any(_251536_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77a7315:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0422cd1_evalU8TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _254235_ident) {
	;
	;
	{
		auto &_match_expr{ _254235_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77ab0d8:;
			{
				jule::Ptr<_1e76e5cc3_Const> _254721_c = static__1e76e64dd_NewU64(255LLU);;
				_254721_c.get()._field_Kind=jule::Str("u8", 2);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0643221_primU8, ._field_Model=jule::Any(_254721_c, &__jule_any_type19), ._field_Constant=_254721_c});;
			}
		}
		else {
			_case_begin_1b77aa307:;
			{
				_1d040ad1e_pushErr(_self_, _254235_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u8", 2), &__jule_any_type5),jule::Any(_254235_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77aa45b:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04230de_evalU16TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _256036_ident) {
	;
	;
	{
		auto &_match_expr{ _256036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77acea8:;
			{
				jule::Ptr<_1e76e5cc3_Const> _256521_c = static__1e76e64dd_NewU64(65535LLU);;
				_256521_c.get()._field_Kind=jule::Str("u16", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06434da_primU16, ._field_Model=jule::Any(_256521_c, &__jule_any_type19), ._field_Constant=_256521_c});;
			}
		}
		else {
			_case_begin_1b77ac44c:;
			{
				_1d040ad1e_pushErr(_self_, _256036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u16", 3), &__jule_any_type5),jule::Any(_256036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77aca79:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04233ec_evalU32TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _257836_ident) {
	;
	;
	{
		auto &_match_expr{ _257836_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77b0b6a:;
			{
				jule::Ptr<_1e76e5cc3_Const> _258321_c = static__1e76e64dd_NewU64(4294967295LLU);;
				_258321_c.get()._field_Kind=jule::Str("u32", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06437a4_primU32, ._field_Model=jule::Any(_258321_c, &__jule_any_type19), ._field_Constant=_258321_c});;
			}
		}
		else {
			_case_begin_1b77aed56:;
			{
				_1d040ad1e_pushErr(_self_, _257836_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u32", 3), &__jule_any_type5),jule::Any(_257836_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77aeedd:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d042370a_evalU64TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _259636_ident) {
	;
	;
	{
		auto &_match_expr{ _259636_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77b2a3a:;
			{
				jule::Ptr<_1e76e5cc3_Const> _260121_c = static__1e76e64dd_NewU64(jule::MAX_U64);;
				_260121_c.get()._field_Kind=jule::Str("u64", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0643a6d_primU64, ._field_Model=jule::Any(_260121_c, &__jule_any_type19), ._field_Constant=_260121_c});;
			}
		}
		else {
			_case_begin_1b77b1ece:;
			{
				_1d040ad1e_pushErr(_self_, _259636_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("u64", 3), &__jule_any_type5),jule::Any(_259636_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77b260b:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0423a18_evalF32TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _261436_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _261436_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77b6038:;
			{
				jule::Ptr<_1e76e5cc3_Const> _262121_c = static__1e76e6cc4_NewF64(340282346638528860000000000000000000000.0);;
				_262121_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0643ee1_primF32, ._field_Model=jule::Any(_262121_c, &__jule_any_type19), ._field_Constant=_262121_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b77b5994:;
			{
				jule::Ptr<_1e76e5cc3_Const> _262921_c = static__1e76e6cc4_NewF64(-340282346638528860000000000000000000000.0);;
				_262921_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0643ee1_primF32, ._field_Model=jule::Any(_262921_c, &__jule_any_type19), ._field_Constant=_262921_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b77b6126:;
			{
				jule::Ptr<_1e76e5cc3_Const> _263721_c = static__1e76e6cc4_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				_263721_c.get()._field_Kind=jule::Str("f32", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0643ee1_primF32, ._field_Model=jule::Any(_263721_c, &__jule_any_type19), ._field_Constant=_263721_c});;
			}
		}
		else {
			_case_begin_1b77b5455:;
			{
				_1d040ad1e_pushErr(_self_, _261436_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f32", 3), &__jule_any_type5),jule::Any(_261436_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77b5400:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0423d26_evalF64TypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_22be1281d_Token> _265036_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ _265036_ident.get()._field_Kind };
		
		if (_match_expr == jule::Str("Max", 3)) {
			_case_begin_1b77ba7bd:;
			{
				jule::Ptr<_1e76e5cc3_Const> _265721_c = static__1e76e6cc4_NewF64(jule::MAX_F64);;
				_265721_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06442aa_primF64, ._field_Model=jule::Any(_265721_c, &__jule_any_type19), ._field_Constant=_265721_c});;
			}
		}
		else if (_match_expr == jule::Str("Min", 3)) {
			_case_begin_1b77ba229:;
			{
				jule::Ptr<_1e76e5cc3_Const> _266521_c = static__1e76e6cc4_NewF64(jule::MIN_F64);;
				_266521_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06442aa_primF64, ._field_Model=jule::Any(_266521_c, &__jule_any_type19), ._field_Constant=_266521_c});;
			}
		}
		else if (_match_expr == jule::Str("SmallestNonZero", 15)) {
			_case_begin_1b77ba8ab:;
			{
				jule::Ptr<_1e76e5cc3_Const> _267321_c = static__1e76e6cc4_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				_267321_c.get()._field_Kind=jule::Str("f64", 3);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06442aa_primF64, ._field_Model=jule::Any(_267321_c, &__jule_any_type19), ._field_Constant=_267321_c});;
			}
		}
		else {
			_case_begin_1b77b9bda:;
			{
				_1d040ad1e_pushErr(_self_, _265036_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(jule::Str("f64", 3), &__jule_any_type5),jule::Any(_265036_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77b9b85:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04241cd_evalPrimStatic(_1d040a813_Eval* _self_, jule::Str _268633_kind, jule::Ptr<_22be1281d_Token> _268644_ident) {
	{
		auto &_match_expr{ _268633_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b77bd1b6:;
			{
				return _1d042197d_evalIntTypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b77be074:;
			{
				return _1d0421c8b_evalUintTypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b77be162:;
			{
				return _1d0422099_evalI8TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b77be1c8:;
			{
				return _1d04223a7_evalI16TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b77bd716:;
			{
				return _1d04226b5_evalI32TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b77bd77c:;
			{
				return _1d04229c3_evalI64TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b77be23e:;
			{
				return _1d0422cd1_evalU8TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b77be2a5:;
			{
				return _1d04230de_evalU16TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b77be31b:;
			{
				return _1d04233ec_evalU32TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b77be382:;
			{
				return _1d042370a_evalU64TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b77be3e8:;
			{
				return _1d0423a18_evalF32TypeStatic(_self_, _268644_ident);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b77be45e:;
			{
				return _1d0423d26_evalF64TypeStatic(_self_, _268644_ident);;
			}
		}
		else {
			_case_begin_1b77bd518:;
			{
				_1d040ad1e_pushErr(_self_, _268644_ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_268633_kind, &__jule_any_type5),jule::Any(_268644_ident.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77ba977:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0424585_evalTypeStatic(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _271837_d, jule::Ptr<_1d05e6a76_SubIdentExpr> _271851_si) {
	{
		
		if ((_1d21d4563_Prim(_271837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c41de:;
			{
				return _1d04241cd_evalPrimStatic(_self_, _1d21d98cb_Str(_1d21d4563_Prim(_271837_d.get()._field_Kind.ptr()).ptr()), _271851_si.get()._field_Ident);;
			}
		}
		else if ((_1d21d4ca0_Enum(_271837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c4255:;
			{
				return _1d041e728_evalEnumStatic(_self_, _1d21d4ca0_Enum(_271837_d.get()._field_Kind.ptr()), _271851_si.get()._field_Ident);;
			}
		}
		else if ((_1d21d5014_TypeEnum(_271837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c4057:;
			{
				return _1d041ead0_evalTypeEnumStatic(_self_, _1d21d5014_TypeEnum(_271837_d.get()._field_Kind.ptr()), _271851_si.get()._field_Ident);;
			}
		}
		else if ((_1d21d59b5_Struct(_271837_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c40bd:;
			{
				return _1d041ee87_evalStructStatic(_self_, _1d21d59b5_Struct(_271837_d.get()._field_Kind.ptr()), _271851_si.get()._field_Ident);;
			}
		}
		else {
			_case_begin_1b77c330e:;
			{
				_1d040ad1e_pushErr(_self_, _271851_si.get()._field_Ident, jule::Str("type @ is not supports sub-defines", 34), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_271837_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b77c1197:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1b77c9ac9_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d215e257_comptimeTypeInfo>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d2164966_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}

inline jule::Ptr<_1d0408c95_Data> _1b77cd292_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d2150ea2_comptimeStructField>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d21526ac_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}

inline jule::Ptr<_1d0408c95_Data> _1b77d1916_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d2156ea8_comptimeEnumField>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d2157ddd_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}

inline jule::Ptr<_1d0408c95_Data> _1b77d51ab_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d215972a_comptimeParam>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d215b4da_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}

inline jule::Ptr<_1d0408c95_Data> _1b77d8896_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d2153ea5_comptimeStatic>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d215577b_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}

inline jule::Ptr<_1d0408c95_Data> _1b77dc01a_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d2164c52_comptimeValue>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d2167062_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}

inline jule::Ptr<_1d0408c95_Data> _1b77e068e_comptimeObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d2168816_comptimeFile>* _273457_ct, jule::Ptr<_1d0408c95_Data>* _273477_d, jule::Ptr<_1d05e6a76_SubIdentExpr>* _273488_si) {
	jule::Ptr<_1d0408c95_Data> _273517_cd = _1d2169ecc_subIdent((*(_273457_ct)), (*(_273488_si)).get()._field_Ident.get()._field_Kind);;
	if ((_273517_cd == nullptr)) {
		_1d040ad1e_pushErr(_self_, (*(_273488_si)).get()._field_Ident, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_273477_d)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any((*(_273488_si)).get()._field_Ident.get()._field_Kind, &__jule_any_type5)}));
	};
	return _273517_cd;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0424d8d_evalObjSubIdent(_1d040a813_Eval* _self_, jule::Ptr<_1d0408c95_Data> _274238_d, jule::Ptr<_1d05e6a76_SubIdentExpr> _274252_si) {
	if (_22be150b2_IsIgnoreIdent(_274252_si.get()._field_Ident.get()._field_Kind)) {
		_1d040ad1e_pushErr(_self_, _274252_si.get()._field_Ident, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if ((_1d21d7b2c_comptimeTypeInfo(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c7951:;
			{
				jule::Ptr<_1d215e257_comptimeTypeInfo> _275021_ct = _1d21d7b2c_comptimeTypeInfo(_274238_d.get()._field_Kind.ptr());;
				return _1b77c9ac9_comptimeObjSubIdent(_self_, &(_275021_ct), &(_274238_d), &(_274252_si));;
			}
		}
		else if ((_1d21d693e_comptimeStructField(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c82e2:;
			{
				jule::Ptr<_1d2150ea2_comptimeStructField> _275321_ct = _1d21d693e_comptimeStructField(_274238_d.get()._field_Kind.ptr());;
				return _1b77cd292_comptimeObjSubIdent(_self_, &(_275321_ct), &(_274238_d), &(_274252_si));;
			}
		}
		else if ((_1d21d6e17_comptimeEnumField(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c8358:;
			{
				jule::Ptr<_1d2156ea8_comptimeEnumField> _275621_ct = _1d21d6e17_comptimeEnumField(_274238_d.get()._field_Kind.ptr());;
				return _1b77d1916_comptimeObjSubIdent(_self_, &(_275621_ct), &(_274238_d), &(_274252_si));;
			}
		}
		else if ((_1d21d73e0_comptimeParam(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c83be:;
			{
				jule::Ptr<_1d215972a_comptimeParam> _275921_ct = _1d21d73e0_comptimeParam(_274238_d.get()._field_Kind.ptr());;
				return _1b77d51ab_comptimeObjSubIdent(_self_, &(_275921_ct), &(_274238_d), &(_274252_si));;
			}
		}
		else if ((_1d21d8105_comptimeStatic(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c8435:;
			{
				jule::Ptr<_1d2153ea5_comptimeStatic> _276221_ct = _1d21d8105_comptimeStatic(_274238_d.get()._field_Kind.ptr());;
				return _1b77d8896_comptimeObjSubIdent(_self_, &(_276221_ct), &(_274238_d), &(_274252_si));;
			}
		}
		else if ((_1d21d8369_comptimeValue(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c849b:;
			{
				jule::Ptr<_1d2164c52_comptimeValue> _276521_ct = _1d21d8369_comptimeValue(_274238_d.get()._field_Kind.ptr());;
				return _1b77dc01a_comptimeObjSubIdent(_self_, &(_276521_ct), &(_274238_d), &(_274252_si));;
			}
		}
		else if ((_1d21d85cd_comptimeFile(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77c8512:;
			{
				jule::Ptr<_1d2168816_comptimeFile> _276821_ct = _1d21d85cd_comptimeFile(_274238_d.get()._field_Kind.ptr());;
				return _1b77e068e_comptimeObjSubIdent(_self_, &(_276821_ct), &(_274238_d), &(_274252_si));;
			}
		}
		_match_end_1b77c7a1c:;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _277217_kind = _274238_d.get()._field_Kind;;
	{
		
		if ((_1d21d4a3b_Ptr(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77dc4e3:;
			{
				jule::Ptr<_1d21e1361_Ptr> _277517_ptr = _1d21d4a3b_Ptr(_274238_d.get()._field_Kind.ptr());;
				if (_1d21e1d34_IsUnsafe(_277517_ptr.ptr())) {
					goto _match_end_1b77c85bc;
				};
				if (((!(_274252_si.get()._field_IsSelf)) && (!(_1d040b759_isUnsafe(_self_))))) {
					_1d040ad1e_pushErr(_self_, _274252_si.get()._field_Ident, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				_277217_kind=_1d21d4a3b_Ptr(_274238_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else if ((_1d21d47c7_Sptr(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77e2295:;
			{
				_277217_kind=_1d21d47c7_Sptr(_274238_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		_match_end_1b77c85bc:;
	};
	{
		
		if ((_1d21d5c29_Trait(_274238_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b77e5661:;
			{
				return _1d04203d8_evalTraitSubIdent(_self_, _274238_d, _1d21d5c29_Trait(_274238_d.get()._field_Kind.ptr()), _274252_si.get()._field_Ident);;
			}
		}
		else if ((_1d21d59b5_Struct(_277217_kind.ptr()) != nullptr)) {
			_case_begin_1b77e56d8:;
			{
				jule::Ptr<_1d0611bd4_StructIns> _279117_s = _1d21d59b5_Struct(_277217_kind.ptr());;
				if (_1d21cc47e_isInstancedStruct(_279117_s)) {
					jule::Bool _279325_usedReferenceElem = (_1d21d47c7_Sptr(_274238_d.get()._field_Kind.ptr()) != nullptr);;
					return _1d0420e11_evalStructSubIdent(_self_, _274238_d, _1d21d59b5_Struct(_277217_kind.ptr()), _274252_si, _279325_usedReferenceElem);;
				};
			}
		}
		else if ((_1d21d54dc_Slc(_277217_kind.ptr()) != nullptr)) {
			_case_begin_1b77e5760:;
			{
				return _1d04212b8_evalSliceSubIdent(_self_, _274238_d, _274252_si.get()._field_Ident);;
			}
		}
		else if ((_1d21d5278_Arr(_277217_kind.ptr()) != nullptr)) {
			_case_begin_1b77e57d7:;
			{
				return _1d0421670_evalArraySubIdent(_self_, _274238_d, _274252_si.get()._field_Ident);;
			}
		}
		_match_end_1b77e5584:;
	};
	_1d040ad1e_pushErr(_self_, _274252_si.get()._field_Ident, jule::Str("object @ is not supports sub-defines", 36), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_274238_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Ptr<_1d0408c95_Data> _1d042519b_evalSubIdent(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e6a76_SubIdentExpr> _280536_si) {
	jule::Ptr<_1d21d1d46_TypeKind> _280617_prefix = _self_.get()._field_prefix;;
	_self_.get()._field_prefix=nullptr;
	__JULE_DEFER({
		_self_.get()._field_prefix=_280617_prefix;
	});;
	jule::Ptr<_1d0408c95_Data> _280917_d = _1d0426598_evalExprKind(_self_, _280536_si.get()._field_Expr.get()._field_Kind);;
	if ((_280917_d == nullptr)) {
		return nullptr;;
	};
	if (_280917_d.get()._field_Decl) {
		return _1d0424585_evalTypeStatic(_self_.ptr(), _280917_d, _280536_si);;
	};
	return _1d0424d8d_evalObjSubIdent(_self_.ptr(), _280917_d, _280536_si);;
}



inline jule::Ptr<_1d0408c95_Data> _1d04254a9_evalTuple(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e436a_TupleExpr> _281933_tup) {
	jule::Ptr<_1d21de2d7_Tuple> _282017_tupT = jule::new_ptr<_1d21de2d7_Tuple>();;
	_282017_tupT.get()._field_Types=jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>::alloc(0LL, _281933_tup.get()._field_Expr.len());
	jule::Ptr<_1d061bbde_TupleExprModel> _282317_model = jule::new_ptr<_1d061bbde_TupleExprModel>(_1d061bbde_TupleExprModel{._field_Datas=jule::Slice<jule::Ptr<_1d0408c95_Data>>::alloc(0LL, _281933_tup.get()._field_Expr.len())});;
	jule::Bool _282717_ok = true;;
	{
		auto expr = &(_281933_tup.get()._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b77edba8:;
		if (it != expr_end) {
			jule::Ptr<_1d05e36dd_Expr> _282821_expr = *it;
			{
				jule::Ptr<_1d0408c95_Data> _282921_d = _1d01dac53_evalExpr(_self_, _282821_expr);;
				if ((_282921_d == nullptr)) {
					_282717_ok=false;
					goto _iter_next_1b77edba8;
				};
				_282017_tupT.get()._field_Types = jule::alloc_for_append(_282017_tupT.get()._field_Types,1);_282017_tupT.get()._field_Types.__push(_282921_d.get()._field_Kind);;
				_282317_model.get()._field_Datas = jule::alloc_for_append(_282317_model.get()._field_Datas,1);_282317_model.get()._field_Datas.__push(_282921_d);;
			}
			_iter_next_1b77edba8:;
			++it;
			goto _iter_begin_1b77edba8;
		}
		_iter_end_1b77edba8:;
	};
	if ((!(_282717_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_282017_tupT, 23)}), ._field_Model=jule::Any(_282317_model, &__jule_any_type87), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d0425861_evalMap(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d21ded10_Map> _284831_m, jule::Ptr<_1d05e8ccb_BraceLit> _284844_lit) {
	jule::Ptr<_1d06194c2_MapExprModel> _284917_model = jule::new_ptr<_1d06194c2_MapExprModel>(_1d06194c2_MapExprModel{._field_KeyKind=_284831_m.get()._field_Key, ._field_ValKind=_284831_m.get()._field_Val, });;
	{
		auto expr = &(_284844_lit.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7801abd:;
		if (it != expr_end) {
			jule::Ptr<_1d05e36dd_Expr> _285421_expr = *it;
			{
				{
					auto &_match_expr{ _285421_expr.get()._field_Kind };
					
					if (_match_expr.type == &__jule_any_type84) {
						_case_begin_1b78022d8:;
						{
							goto _match_end_1b7802382;
						}
					}
					else {
						_case_begin_1b7802519:;
						{
							_1d040ad1e_pushErr(_self_.ptr(), _284844_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1b7802382:;
				};
				jule::Ptr<_1d05e9639_KeyValPair> _286421_pair = _285421_expr.get()._field_Kind.cast_ptr<_1d05e9639_KeyValPair>(&__jule_any_type84);;
				jule::Ptr<_1d0408c95_Data> _286621_key = _1d01dac53_evalExpr(_self_, _286421_pair.get()._field_Key);;
				if ((_286621_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1d0408c95_Data> _287121_val = _1d01dac53_evalExpr(_self_, _286421_pair.get()._field_Val);;
				if ((_287121_val == nullptr)) {
					return nullptr;;
				};
				_1d21a5eb3_checkAssignType(_self_.get()._field_s, false, &(_284831_m.get()._field_Key), &(_286621_key), _286421_pair.get()._field_Colon);
				_1d21a5eb3_checkAssignType(_self_.get()._field_s, false, &(_284831_m.get()._field_Val), &(_287121_val), _286421_pair.get()._field_Colon);
				_284917_model.get()._field_Entries = jule::alloc_for_append(_284917_model.get()._field_Entries,1);_284917_model.get()._field_Entries.__push(jule::new_ptr<_1d061904e_KeyValPairExprModel>(_1d061904e_KeyValPairExprModel{._field_Key=_286621_key.get()._field_Model, ._field_Val=_287121_val.get()._field_Model}));;
			}
			_iter_next_1b7801abd:;
			++it;
			goto _iter_begin_1b7801abd;
		}
		_iter_end_1b7801abd:;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_284831_m, 24)}), ._field_Mutable=true, ._field_Model=jule::Any(_284917_model, &__jule_any_type102), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d0425b6e_evalBraceLit(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e8ccb_BraceLit> _289236_lit) {
	{
		
		if ((_self_.get()._field_prefix == nullptr)) {
			_case_begin_1b7806cc1:;
			{
				_1d040ad1e_pushErr(_self_.ptr(), _289236_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d21d5e8d_Map(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b7807178:;
			{
				return _1d0425861_evalMap(_self_, _1d21d5e8d_Map(_self_.get()._field_prefix.ptr()), _289236_lit);;
			}
		}
		else if ((_1d21d59b5_Struct(_self_.get()._field_prefix.ptr()) != nullptr)) {
			_case_begin_1b7807277:;
			{
				return _1d041c528_evalStructLitExplicit(_self_, _1d21d59b5_Struct(_self_.get()._field_prefix.ptr()), _289236_lit.get()._field_Exprs, _289236_lit.get()._field_Token);;
			}
		}
		else {
			_case_begin_1b7806694:;
			{
				_1d040ad1e_pushErr(_self_.ptr(), _289236_lit.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b78065ea:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0425e7c_evalAnonFn(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d0600b90_FnDecl> _290734_decl) {
	_1d21e3187_typeChecker _290817_tc = _1d21e3187_typeChecker{._field_s=_self_.get()._field_s, ._field_rootLookup=_self_.get()._field_lookup, ._field_lookup=_self_.get()._field_lookup, };;
	jule::Ptr<_1d0626e6e_FnIns> _291317_ins = _1d21e96aa_buildFn(&_290817_tc, _290734_decl);;
	if ((_291317_ins == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _self_.get()._field_lookup };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b780aaa5:;
			{
				jule::Ptr<_1d217b241_scopeChecker> _291921_sc = _self_.get()._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0);;
				jule::Ptr<_1d217b241_scopeChecker> _292021_scc = _1d218b3e9_newChildChecker(_291921_sc);;
				_292021_scc.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d2179ea9_scopeLabel>>>(nullptr);
				_292021_scc.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d217a42c_scopeGoto>>>(nullptr);
				_292021_scc.get()._field_owner=nullptr;
				_292021_scc.get()._field_childIndex=0LL;
				_292021_scc.get()._field_it=0LLU;
				_292021_scc.get()._field_cse=0LLU;
				_292021_scc.get()._field_owner=_291317_ins;
				_1d21b6578_checkFnInsSc(_self_.get()._field_s.ptr(), &(_291317_ins), &(_292021_scc));
			}
		}
		else {
			_case_begin_1b780a962:;
			{
				_1d21b6b1c_checkFnIns(_self_.get()._field_s, &(_291317_ins));
			}
		}
		_match_end_1b780a90c:;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_291317_ins, 1)}), ._field_Model=jule::Any(jule::new_ptr<_1d0618b97_AnonFnExprModel>(_1d0618b97_AnonFnExprModel{._field_Func=_291317_ins, ._field_Global=_1d040b9bd_isGlobal(_self_.ptr())}), &__jule_any_type103), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d042628a_evalBinop(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e6ee9_BinopExpr> _294233_op) {
	_1d062d805_binaryEval _294317_bs = static__1d062ddcc_newPlain(_self_);;
	if ((_self_.get()._field_prefix != nullptr)) {
		jule::Ptr<_1d21d9568_Prim> _294617_prim = _1d21d4563_Prim(_self_.get()._field_prefix.ptr());;
		if (((_294617_prim == nullptr) || (!(_1e76e57b7_IsNum(_1d21d98cb_Str(_294617_prim.ptr())))))) {
			jule::Ptr<_1d21d1d46_TypeKind> _294825_prefix = _self_.get()._field_prefix;;
			_self_.get()._field_prefix=nullptr;
			__JULE_DEFER({
				_self_.get()._field_prefix=_294825_prefix;
			});;
			return _1d21ca999_eval(&_294317_bs, &(_294233_op));;
		};
	};
	return _1d21ca999_eval(&_294317_bs, &(_294233_op));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0426598_evalExprKind(jule::Ptr<_1d040a813_Eval> _self_, jule::Any _295736_kind) {
	{
		auto &_match_expr{ _295736_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1b7811c87:;
			{
				jule::Ptr<_1d05e39c9_RangeExpr> _296021_e = _295736_kind.cast_ptr<_1d05e39c9_RangeExpr>(&__jule_any_type104);;
				return _1d0426598_evalExprKind(_self_, _296021_e.get()._field_Expr.get()._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1b7812925:;
			{
				return _1d040d66d_evalLit(_self_.ptr(), _295736_kind.cast_ptr<_1d05e4722_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b781298b:;
			{
				return _1d0412b28_evalIdent(_self_.ptr(), _295736_kind.cast_ptr<_1d05e52d3_IdentExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1b781246e:;
			{
				return _1d0412e36_evalUnary(_self_, _295736_kind.cast_ptr<_1d05e59dc_UnaryExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type81) {
			_case_begin_1b78124d5:;
			{
				return _1d0413244_evalVariadic(_self_, _295736_kind.cast_ptr<_1d05e5d94_VariadicExpr>(&__jule_any_type81));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1b781255c:;
			{
				return _1d0413552_evalUnsafe(_self_, _295736_kind.cast_ptr<_1d05e4d60_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1b78125d4:;
			{
				return _1d04140be_evalSliceExpr(_self_, _295736_kind.cast_ptr<_1d05e9d21_SliceExpr>(&__jule_any_type99));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1b7812a13:;
			{
				return _1d0417413_evalIndexing(_self_, _295736_kind.cast_ptr<_1d05ea690_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1b7812a8a:;
			{
				return _1d04185ce_evalSlicing(_self_, _295736_kind.cast_ptr<_1d05eac9a_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1b7812b12:;
			{
				return _1d041bcb9_evalCast(_self_, _295736_kind.cast_ptr<_1d05e624b_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1b7812b89:;
			{
				return _1d041c0c7_evalNsSelection(_self_.ptr(), _295736_kind.cast_ptr<_1d05e6603_NsSelectionExpr>(&__jule_any_type95));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1b7812c11:;
			{
				return _1d041c836_evalStructLit(_self_, _295736_kind.cast_ptr<_1d05e8858_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1b7812c88:;
			{
				return _1d041cda8_evalType(_self_.ptr(), _295736_kind.cast_ptr<_1d05de563_TypeDecl>(&__jule_any_type94));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b7812d10:;
			{
				return _1d041e371_evalFnCall(_self_, _295736_kind.cast_ptr<_1d05e7604_FnCallExpr>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b7812d87:;
			{
				return _1d042519b_evalSubIdent(_self_, _295736_kind.cast_ptr<_1d05e6a76_SubIdentExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1b7812e0e:;
			{
				return _1d04254a9_evalTuple(_self_, _295736_kind.cast_ptr<_1d05e436a_TupleExpr>(&__jule_any_type86));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1b7812e86:;
			{
				return _1d0425b6e_evalBraceLit(_self_, _295736_kind.cast_ptr<_1d05e8ccb_BraceLit>(&__jule_any_type112));;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b781300d:;
			{
				return _1d0425e7c_evalAnonFn(_self_, _295736_kind.cast_ptr<_1d0600b90_FnDecl>(&__jule_any_type14));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1b7813085:;
			{
				return _1d042628a_evalBinop(_self_, _295736_kind.cast_ptr<_1d05e6ee9_BinopExpr>(&__jule_any_type113));;
			}
		}
		else {
			_case_begin_1b7812370:;
			{
				return nullptr;;
			}
		}
		_match_end_1b781231a:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d04268a6_eval1(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e36dd_Expr> _300529_expr) {
	jule::Ptr<_1d0408c95_Data> _300617_d = _1d0426598_evalExprKind(_self_, _300529_expr.get()._field_Kind);;
	if (((_300617_d == nullptr) || (_300617_d.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1d21d5751_Fn(_300617_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b781c38b:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _301321_f = _1d21d5751_Fn(_300617_d.get()._field_Kind.ptr());;
				if (_1d0628305_IsBuiltin(_301321_f.ptr())) {
					_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _300529_expr.get()._field_Token, jule::Str("built-in functions should be invoked", 36), jule::Slice<jule::Any>());
					goto _match_end_1b781bca3;
				};
				if ((_301321_f.get()._field_Generics.len() != _301321_f.get()._field_Decl.get()._field_Generics.len())) {
					_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _300529_expr.get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
				};
				if (((!(_301321_f.get()._field_Decl.get()._field_Statically)) && _1d0624994_IsMethod(_301321_f.get()._field_Decl.ptr()))) {
					_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _300529_expr.get()._field_Token, jule::Str("methods should be invoked", 25), jule::Slice<jule::Any>());
				};
			}
		}
		_match_end_1b781bca3:;
	};
	return _300617_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0426bb4_eval(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e36dd_Expr> _303228_expr) {
	jule::Ptr<_1d0408c95_Data> _303317_d = _1d04268a6_eval1(_self_, _303228_expr);;
	if ((_303317_d == nullptr)) {
		return nullptr;;
	};
	if ((((_self_.get()._field_owner == nullptr) || (!(_self_.get()._field_owner.get()._field_Constant))) && _1d21d6466_comptime(_303317_d.get()._field_Kind.ptr()))) {
		_1d219dc25_pushErr(_self_.get()._field_s.ptr(), _303228_expr.get()._field_Token, jule::Str("compile-time evaluations cannot used as expression", 50), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _303317_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d01da3c3_evalExpr1(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e36dd_Expr> _304733_expr) {
	jule::Ptr<_1d0408c95_Data> _304817_d = _1d04268a6_eval1(_self_, _304733_expr);;
	{
		
		if ((_304817_d == nullptr)) {
			_case_begin_1b7823051:;
			{
				return nullptr;;
			}
		}
		else if (_304817_d.get()._field_Decl) {
			_case_begin_1b78230c8:;
			{
				_1d040ad1e_pushErr(_self_.ptr(), _304733_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b7822ea7:;
			{
				return _304817_d;;
			}
		}
		_match_end_1b7822e1e:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d01dac53_evalExpr(jule::Ptr<_1d040a813_Eval> _self_, jule::Ptr<_1d05e36dd_Expr> _306332_expr) {
	jule::Ptr<_1d0408c95_Data> _306417_d = _1d0426bb4_eval(_self_, _306332_expr);;
	{
		
		if ((_306417_d == nullptr)) {
			_case_begin_1b7824a58:;
			{
				return nullptr;;
			}
		}
		else if (_306417_d.get()._field_Decl) {
			_case_begin_1b7824ad0:;
			{
				_1d040ad1e_pushErr(_self_.ptr(), _306332_expr.get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1b78249ae:;
			{
				return _306417_d;;
			}
		}
		_match_end_1b7824915:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d040a813_Eval _Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "immutable:" << _Src._field_immutable << ", ";
	_Stream << "ignored:" << _Src._field_ignored << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "arg:" << _Src._field_arg;
	_Stream << "}";
	return _Stream;
}



inline _1d062bca9_unaryEval static__1d062c062_new(jule::Ptr<_1d040a813_Eval> _308423_e) {
	return _1d062bca9_unaryEval{._field_e=_308423_e, };;
}



inline void _1d062c1d8_minus(_1d062bca9_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b78263a6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78267c4:;
			{
				if ((!(_1e76e57b7_IsNum(_1d21d2242_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d21d59b5_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78260a9:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b7826043:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b7825dab:;
	};
	if (_1d0409658_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e76ea415_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b7829662:;
				{
					_1e76e9524_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((-(_1e76e806c_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e76e9964_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b78296d9:;
				{
					_1e76e8a2e_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e76e75bb_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e76e9bc8_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b7829761:;
				{
					_1e76e8a2e_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((-(_1e76e82d1_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b7829574:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1d062c392_plus(_1d062bca9_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b782d710:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b782d3d0:;
			{
				if ((!(_1e76e57b7_IsNum(_1d21d2242_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d21d59b5_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b782d446:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b782d369:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b782d29d:;
	};
	if (_1d0409658_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e76ea415_IsF64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b78319dd:;
				{
					_1e76e9524_SetF64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::F64>((+(_1e76e806c_ReadF64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e76e9964_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b7831a65:;
				{
					_1e76e8a2e_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e76e75bb_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e76e9bc8_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b7831adc:;
				{
					_1e76e8a2e_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((+(_1e76e82d1_AsI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b7831900:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1d062c56d_caret(_1d062bca9_unaryEval* _self_) {
	{
		
		if (((*(_self_))._field_d.get()._field_Kind == nullptr)) {
			_case_begin_1b7835a8b:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b783575b:;
			{
				if ((!(_1e76e5201_IsInt(_1d21d2242_Str((*(_self_))._field_d.get()._field_Kind.ptr()))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1d21d59b5_Struct((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78357c2:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1b78356e5:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b7835629:;
	};
	if (_1d0409658_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e76e9964_IsI64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b7838d58:;
				{
					_1e76e8a2e_SetI64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::I64>((~(_1e76e75bb_ReadI64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			else if (_1e76e9bc8_IsU64((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b7838dd0:;
				{
					_1e76e8ca4_SetU64((*(_self_))._field_d.get()._field_Constant.ptr(), static_cast<jule::U64>((~(_1e76e7830_ReadU64((*(_self_))._field_d.get()._field_Constant.ptr())))));
				}
			}
			_match_end_1b7838c7b:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1d062c749_excl(_1d062bca9_unaryEval* _self_) {
	jule::Ptr<_1d21d9568_Prim> _320313_t = _1d21d4563_Prim((*(_self_))._field_d.get()._field_Kind.ptr());;
	if (((_320313_t == nullptr) || (!(_1d21dc538_IsBool(_320313_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	if (_1d0409658_IsConst((*(_self_))._field_d.ptr())) {
		{
			
			if (_1e76e9e3c_IsBool((*(_self_))._field_d.get()._field_Constant.ptr())) {
				_case_begin_1b783d247:;
				{
					_1e76e9029_SetBool((*(_self_))._field_d.get()._field_Constant.ptr(), (!(_1e76e7a94_ReadBool((*(_self_))._field_d.get()._field_Constant.ptr()))));
				}
			}
			_match_end_1b783d148:;
		};
	};
	(*(_self_))._field_d.get()._field_Lvalue=false;
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
}



inline void _1d062c925_star(_1d062bca9_unaryEval* _self_) {
	(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
	{
		
		if ((_1d21d4a3b_Ptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7840e09:;
			{
				if ((!(_1d040b759_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1d21e1361_Ptr> _323521_t = _1d21d4a3b_Ptr((*(_self_))._field_d.get()._field_Kind.ptr());;
				if (_1d21e1d34_IsUnsafe(_323521_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*(_self_))._field_d.get()._field_Kind=_323521_t.get()._field_Elem;
			}
		}
		else if ((_1d21d47c7_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7840aeb:;
			{
				(*(_self_))._field_d.get()._field_Kind=_1d21d47c7_Sptr((*(_self_))._field_d.get()._field_Kind.ptr()).get()._field_Elem;
			}
		}
		else {
			_case_begin_1b7840a85:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b783ee91:;
	};
	(*(_self_))._field_d.get()._field_Constant=nullptr;
	(*(_self_))._field_d.get()._field_Lvalue=true;
}



inline void _1d062cb01_amper(_1d062bca9_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b7845408:;
			{
				jule::Ptr<_1d0616ca5_StructLitExprModel> _325521_lit = (*(_self_))._field_d.get()._field_Model.cast_ptr<_1d0616ca5_StructLitExprModel>(&__jule_any_type100);;
				_1d21cb69d_makeStructLitAlloc(&((*(_self_))._field_d), &(_325521_lit));
			}
		}
		else {
			_case_begin_1b7844d97:;
			{
				{
					
					if (_1d21eb833_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1b7845947:;
						{
							(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21e1361_Ptr>(_1d21e1361_Ptr{._field_Elem=(*(_self_))._field_d.get()._field_Kind}), 26)});
							(*(_self_))._field_d.get()._field_Model=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>((*((*(_self_))._field_d))), ._field_Op=(*(_self_))._field_u.get()._field_Op}), &__jule_any_type74);
						}
					}
					else {
						_case_begin_1b7845392:;
						{
							(*(_self_))._field_d=nullptr;
						}
					}
					_match_end_1b78452c6:;
				};
			}
		}
		_match_end_1b7844d20:;
	};
	if (((*(_self_))._field_d != nullptr)) {
		(*(_self_))._field_d.get()._field_Constant=nullptr;
		(*(_self_))._field_d.get()._field_Lvalue=false;
	};
}



inline void _1d062cccc_typeDecl(_1d062bca9_unaryEval* _self_) {
	_1d21e3187_typeChecker _327917_tc = _1d21e3187_typeChecker{._field_s=(*(_self_))._field_e.get()._field_s, ._field_rootLookup=(*(_self_))._field_e.get()._field_lookup, ._field_lookup=(*(_self_))._field_e.get()._field_lookup, ._field_errorToken=(*(_self_))._field_u.get()._field_Op, };;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b784885c:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21e8049_buildPtrFromType(&_327917_tc, &((*(_self_))._field_d.get()._field_Kind)), 26)});
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b784ad8c:;
			{
				(*(_self_))._field_d.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d21e792d_buildSptrFromType(&_327917_tc, &((*(_self_))._field_d.get()._field_Kind)), 21)});
			}
		}
		else {
			_case_begin_1b7849808:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1b78497a3:;
	};
	(*(_self_))._field_d.get()._field_Decl=true;
}



inline void _1d062cea8_evalData(_1d062bca9_unaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1) || _match_expr == jule::Str("&", 1)) {
			_case_begin_1b784d147:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _330221_prefix = (*(_self_))._field_e.get()._field_prefix;;
				(*(_self_))._field_e.get()._field_prefix=nullptr;
				(*(_self_))._field_d=_1d0426bb4_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
				(*(_self_))._field_e.get()._field_prefix=_330221_prefix;
			}
		}
		else {
			_case_begin_1b784cc18:;
			{
				(*(_self_))._field_d=_1d0426bb4_eval((*(_self_))._field_e, (*(_self_))._field_u.get()._field_Expr);
			}
		}
		_match_end_1b784cbb3:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d062d2b6_eval(_1d062bca9_unaryEval* _self_, jule::Ptr<_1d05e59dc_UnaryExpr> _331127_u) {
	(*(_self_))._field_u=_331127_u;
	_1d062cea8_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_self_))._field_d.get()._field_Decl) {
		_1d062cccc_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _332213_kind = (*(_self_))._field_d.get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_u.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b7851ed6:;
			{
				_1d062c1d8_minus(_self_);
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b78519ca:;
			{
				_1d062c392_plus(_self_);
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b7851a41:;
			{
				_1d062c56d_caret(_self_);
			}
		}
		else if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b7851aa7:;
			{
				_1d062c749_excl(_self_);
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b7851b1d:;
			{
				_1d062c925_star(_self_);
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b785217e:;
			{
				_1d062cb01_amper(_self_);
			}
		}
		else {
			_case_begin_1b7851964:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1b785190e:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1b78521e5:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_u.get()._field_Op, jule::Str("unary operator @ is not defined for type @", 42), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_u.get()._field_Op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str(_332213_kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if (_1d0409658_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1b7853ba8:;
			{
				(*(_self_))._field_d.get()._field_Model=jule::Any((*(_self_))._field_d.get()._field_Constant, &__jule_any_type19);
			}
		}
		_match_end_1b7853b53:;
	};
	(*(_self_))._field_d.get()._field_Mutable=true;
	return (*(_self_))._field_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d062bca9_unaryEval _Src) {
	_Stream << "unaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "u:" << _Src._field_u;
	_Stream << "}";
	return _Stream;
}



inline _1d062d805_binaryEval static__1d062ddcc_newPlain(jule::Ptr<_1d040a813_Eval> _336028_e) {
	return _1d062d805_binaryEval{._field_e=_336028_e, };;
}



inline _1d062d805_binaryEval static__1d062e21d_new(jule::Ptr<_1d040a813_Eval> _336623_e, jule::Ptr<_22be1281d_Token> _336637_op) {
	return _1d062d805_binaryEval{._field_e=_336623_e, ._field_op=_336637_op};;
}



inline jule::Bool _1d062e482_checkTypeCompatibility(_1d062d805_binaryEval* _self_) {
	return _1d21a6414_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &((*(_self_))._field_l.get()._field_Kind), &((*(_self_))._field_r.get()._field_Kind), &((*(_self_))._field_op));;
}



inline jule::Bool _1d062e729_checkStructCommonOperatorCompatibility(_1d062d805_binaryEval* _self_) {
	jule::Ptr<_1d0626e6e_FnIns> _338017_overload = nullptr;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b78590dc:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b78579ae:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b7858edd:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Add;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b7858042:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b78580a8:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Div;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b7859153:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b78591b9:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b7859230:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b7859296:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b785930c:;
			{
				_338017_overload=_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1b7857e10:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return false;;
			}
		}
		_match_end_1b7857d88:;
	};
	if ((_338017_overload == nullptr)) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return false;;
	};
	jule::Ptr<_1d06260a0_ParamIns> _341217_p = _338017_overload.get()._field_Params[1LL];;
	return _1d21a5eb3_checkAssignType((*(_self_))._field_e.get()._field_s, _341217_p.get()._field_Decl.get()._field_Reference, &(_341217_p.get()._field_Kind), &((*(_self_))._field_r), (*(_self_))._field_op);;
}



inline jule::Ptr<_1d0408c95_Data> _1d21c5b1a_evalComptimeTypeInfo(_1d062d805_binaryEval* _self_) {
	jule::Ptr<_1d215e257_comptimeTypeInfo> _341717_r = _1d21d7b2c_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((_341717_r == nullptr)) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("comptimeTypeInfo", 16), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d215e257_comptimeTypeInfo> _342217_l = _1d21d7b2c_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b7742e2c:;
			{
				jule::Ptr<_1e76e5cc3_Const> _342521_constant = static__1e76e6785_NewBool(_1d21d2550_Equal(_342217_l.get()._field_base, _341717_r.get()._field_base));;
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_342521_constant, &__jule_any_type19), ._field_Constant=_342521_constant});;
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b78649aa:;
			{
				jule::Ptr<_1e76e5cc3_Const> _343221_constant = static__1e76e6785_NewBool((!(_1d21d2550_Equal(_342217_l.get()._field_base, _341717_r.get()._field_base))));;
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, ._field_Model=jule::Any(_343221_constant, &__jule_any_type19), ._field_Constant=_343221_constant});;
			}
		}
		else {
			_case_begin_1b7863921:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78638bb:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c5c4c_evalNil(_1d062d805_binaryEval* _self_) {
	if ((!(_1d21d3ab2_NilCompatible((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("nil", 3), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b786668d:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b7867abd:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("nil", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b7867a24:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c5d7e_evalEnum(_1d062d805_binaryEval* _self_) {
	jule::Ptr<_1d214bc5b_Enum> _346317_enm = _1d21d4ca0_Enum((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b786984a:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _346721_rkind = (*(_self_))._field_r.get()._field_Kind;;
				if ((_1d21d4ca0_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
					_346721_rkind=_1d21d4ca0_Enum((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind.get()._field_Kind;
				};
				if ((!(_1d21a6414_checkTypeCompatibility((*(_self_))._field_e.get()._field_s, &(_346317_enm.get()._field_Kind.get()._field_Kind), &(_346721_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		_match_end_1b78697c3:;
	};
	if (((_1d21d4ca0_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr) || (_346317_enm != _1d21d4ca0_Enum((*(_self_))._field_r.get()._field_Kind.ptr())))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_346317_enm.get()._field_Ident, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b7867d21:;
			{
				if ((!(_1e76e57b7_IsNum(_1d21d2242_Str(_346317_enm.get()._field_Kind.get()._field_Kind.ptr()))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346317_enm.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b786e4ba:;
			{
				jule::Ptr<_1d214b266_EnumItem> _349717_first = _346317_enm.get()._field_Items[0LL];;
				{
					
					if (_1e76e9964_IsI64(_349717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b7871c2b:;
						{
							if ((_1e76e75bb_ReadI64(_349717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LL)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else if (_1e76e9bc8_IsU64(_349717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr())) {
						_case_begin_1b787138a:;
						{
							if ((_1e76e7830_ReadU64(_349717_first.get()._field_Value.get()._field_Data.get()._field_Constant.ptr()) == 0LLU)) {
								goto _julec_label_next;
							};
							goto _julec_label_err;
						}
					}
					else {
						_case_begin_1b7871885:;
						{
							jule::panic(jule::Str("unimplemented enum type, this panic call should be unreachable", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:3510:17"));;
						}
					}
					_match_end_1b787181e:;
				};
				_julec_label_err:;
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("the @ enum type is not supports @ operator", 42), jule::Slice<jule::Any>::make({jule::Any(_346317_enm.get()._field_Ident, &__jule_any_type5),jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				_1d040b13d_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("define default enum field (the first one is default) with zero value to use & operator", 86), jule::Slice<jule::Any>());
				_julec_label_next:;
				goto _case_begin_1b786e531;
			}
		}
		else if (_match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b786e531:;
			{
				if (((_1d21d4563_Prim(_346317_enm.get()._field_Kind.get()._field_Kind.ptr()) == nullptr) || (!(_1e76e5201_IsInt(_1d21d98cb_Str(_1d21d4563_Prim(_346317_enm.get()._field_Kind.get()._field_Kind.ptr()).ptr())))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346317_enm.get()._field_Ident, &__jule_any_type5)}));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b786d5b8:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_346317_enm.get()._field_Ident, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b786d4ca:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c681e_evalTypeEnum(_1d062d805_binaryEval* _self_) {
	jule::Ptr<_1d214d356_TypeEnum> _353017_enm = _1d21d5014_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr());;
	if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b7878d32:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b78788e2:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d214d686_Str(_353017_enm.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78785b2:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c6a50_evalSptr(_1d062d805_binaryEval* _self_) {
	if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b787a570:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b7879e76:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b7879e21:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c6cb4_evalPtr(_1d062d805_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str("<=", 2) || _match_expr == jule::Str(">=", 2)) {
			_case_begin_1b787ba38:;
			{
				if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1)) {
			_case_begin_1b787d111:;
			{
				if ((_1d21d4a3b_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) == nullptr)) {
					({
						jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
						jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
						(*(_self_))._field_l = ___jule_assign_arg;
						(*(_self_))._field_r = _1___jule_assign_arg;
					});
				};
				if (_1d21e1d34_IsUnsafe(_1d21d4a3b_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()).ptr())) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				};
				if ((!(_1d21cc7e2_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is incompatible to use for pointer arithmetic", 52), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b787bc47:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b787bbe2:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c7028_evalArr(_1d062d805_binaryEval* _self_) {
	if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b7882ad8:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b7882bb5:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b787d96e:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c728c_evalSlc(_1d062d805_binaryEval* _self_) {
	if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b78848a9:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b78842b0:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b788425a:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c7501_evalStruct(_1d062d805_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b78860e7:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Gt == nullptr)) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b788615d:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_GtEq == nullptr)) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b788648d:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_Lt == nullptr)) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b7886504:;
			{
				if ((_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Operators._field_LtEq == nullptr)) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b788656a:;
			{
				if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		_match_end_1b788602b:;
	};
	if ((!(_1d062e729_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1d0408c95_Data> _1d21c7765_evalTrait(_1d062d805_binaryEval* _self_) {
	if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b788e232:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b788e30e:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b788de24:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c79c9_evalAny(_1d062d805_binaryEval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2)) {
			_case_begin_1b78906ea:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b7890909:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("any", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78908a4:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c7c3d_evalBool(_1d062d805_binaryEval* _self_) {
	if ((!(_1d062e482_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("&&", 2) || _match_expr == jule::Str("||", 2)) {
			_case_begin_1b789260e:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b7892015:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b7891eb0:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c7ea2_evalStr(_1d062d805_binaryEval* _self_) {
	jule::Str _372917_rk = _1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr());;
	if ((!_372917_rk.equal("str", 3))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_372917_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b78940d3:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b7896404:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		else {
			_case_begin_1b7894941:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("str", 3), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78948db:;
	};
}



inline void _1d21c817d_setTypeToGreater(_1d062d805_binaryEval* _self_) {
	jule::Ptr<_1d21d9568_Prim> _375413_lp = _1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	jule::Ptr<_1d21d9568_Prim> _375513_rp = _1d21d4563_Prim((*(_self_))._field_r.get()._field_Kind.ptr());;
	if (_1d0409658_IsConst((*(_self_))._field_l.ptr())) {
		if ((!(_1d0409658_IsConst((*(_self_))._field_r.ptr())))) {
			(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375513_rp.get()._field_Kind;
			return;;
		};
		goto _julec_label_set;
	};
	if (_1d0409658_IsConst((*(_self_))._field_r.ptr())) {
		(*(_self_))._field_r.get()._field_Constant.get()._field_Kind=_375413_lp.get()._field_Kind;
		return;;
	};
	_julec_label_set:;
	if (((*(_self_))._field_l.get()._field_untyped && (!((*(_self_))._field_r.get()._field_untyped)))) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1d0409658_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375513_rp.get()._field_Kind;
		};
		(*(_self_))._field_l.get()._field_untyped=false;
		return;;
	} else if (((!((*(_self_))._field_l.get()._field_untyped)) && (*(_self_))._field_r.get()._field_untyped)) {
		return;;
	};
	if (_1e76e3b39_IsGreater(_375513_rp.get()._field_Kind, _375413_lp.get()._field_Kind)) {
		(*(_self_))._field_l.get()._field_Kind=(*(_self_))._field_r.get()._field_Kind;
		if (_1d0409658_IsConst((*(_self_))._field_l.ptr())) {
			(*(_self_))._field_l.get()._field_Constant.get()._field_Kind=_375513_rp.get()._field_Kind;
		};
	};
}



inline void _1d21c8403_checkModData(_1d062d805_binaryEval* _self_, jule::Ptr<_1d0408c95_Data>* _378736_d) {
	if ((!(_1d0409658_IsConst((*(_378736_d)).ptr())))) {
		if (((_1d21d4563_Prim((*(_378736_d)).get()._field_Kind.ptr()) == nullptr) || (!(_1e76e5201_IsInt(_1d21d4563_Prim((*(_378736_d)).get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1d03e1d16_sigAssignable(jule::Str("i64", 3), _378736_d)) {
			_case_begin_1b78a062d:;
			{
				_1e76e8a2e_SetI64((*(_378736_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64((*(_378736_d)).get()._field_Constant.ptr())));
			}
		}
		else if (_1d03e219b_unsigAssignable(jule::Str("u64", 3), _378736_d)) {
			_case_begin_1b78a0331:;
			{
				_1e76e8ca4_SetU64((*(_378736_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64((*(_378736_d)).get()._field_Constant.ptr())));
			}
		}
		else {
			_case_begin_1b789ddac:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("module operator must be used with integer type", 46), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b789dd57:;
	};
}



inline void _1d21c85ce_mod(_1d062d805_binaryEval* _self_) {
	_1d21c8403_checkModData(_self_, &((*(_self_))._field_l));
	_1d21c8403_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1d21c8986_numbersAreCompatibile(_1d062d805_binaryEval* _self_, jule::Str* _380937_lk, jule::Str* _380947_rk) {
	if ((!(_1e76e57b7_IsNum((*(_380947_rk)))))) {
		return false;;
	};
	if ((_1d0409658_IsConst((*(_self_))._field_l.ptr()) && (*(_self_))._field_l.get()._field_untyped)) {
		return true;;
	};
	if ((*(_380937_lk)).equal("f32", 3)) {
		if ((_1d0409658_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_380947_rk)).equal("f32", 3);;
	};
	if ((*(_380937_lk)).equal("f64", 3)) {
		if ((_1d0409658_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
			return true;;
		};
		return (*(_380947_rk)).equal("f64", 3);;
	};
	if ((_1d0409658_IsConst((*(_self_))._field_r.ptr()) && (*(_self_))._field_r.get()._field_untyped)) {
		return true;;
	};
	return ((*(_380937_lk)) == (*(_380947_rk)));;
}



inline jule::Ptr<_1d0408c95_Data> _1d21c8bea_evalFloat(_1d062d805_binaryEval* _self_) {
	jule::Str _383513_lk = _1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _383613_rk = _1d21d4563_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	if ((!(_1d21c8986_numbersAreCompatibile(_self_, &(_383513_lk), &(_383613_rk))))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383513_lk, &__jule_any_type5),jule::Any(_383613_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b78a80c5:;
			{
				if (((!(_1d0409658_IsConst((*(_self_))._field_l.ptr()))) || (!(_1d03e24dc_intAssignable(jule::Str("i64", 3), &((*(_self_))._field_l)))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383513_lk, &__jule_any_type5),jule::Any(_383613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((!(_1d0409658_IsConst((*(_self_))._field_r.ptr()))) || (!(_1d03e24dc_intAssignable(jule::Str("u64", 3), &((*(_self_))._field_r)))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383513_lk, &__jule_any_type5),jule::Any(_383613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1e76e8a2e_SetI64((*(_self_))._field_l.get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64((*(_self_))._field_l.get()._field_Constant.ptr())));
				_1e76e8ca4_SetU64((*(_self_))._field_r.get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64((*(_self_))._field_r.get()._field_Constant.ptr())));
				if ((!(_1d21cc0c7_isOkForShifting(&((*(_self_))._field_r))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b78a758b:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b78ac64b:;
			{
				_1d21c817d_setTypeToGreater(_self_);
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		_match_end_1b78ac4b4:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1)) {
			_case_begin_1b78a738d:;
			{
				_1d21c817d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b78ae21e:;
			{
				if ((!(_1e76e5201_IsInt(_383613_rk)))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_383513_lk, &__jule_any_type5),jule::Any(_383613_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				_1d21c85ce_mod(_self_);
				_1d21c817d_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1b78ad65d:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for floating-point type(s)", 52), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78ad163:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c8e5e_evalInt(_1d062d805_binaryEval* _self_) {
	jule::Str _389913_lk = _1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).get()._field_Kind;;
	jule::Str _390013_rk = _1d21d4563_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).get()._field_Kind;;
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("<<", 2) || _match_expr == jule::Str(">>", 2)) {
			_case_begin_1b78ae30c:;
			{
				if (((!(_1e76e5201_IsInt(_389913_lk))) || (!(_1e76e5201_IsInt(_390013_rk))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_389913_lk, &__jule_any_type5),jule::Any(_390013_rk, &__jule_any_type5)}));
					return nullptr;;
				};
				if ((!(_1d21cc0c7_isOkForShifting(&((*(_self_))._field_r))))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("bit shifting value is must be unsigned", 38), jule::Slice<jule::Any>());
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		_match_end_1b78b2167:;
	};
	if ((!(_1d21c8986_numbersAreCompatibile(_self_, &(_389913_lk), &(_390013_rk))))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_389913_lk, &__jule_any_type5),jule::Any(_390013_rk, &__jule_any_type5)}));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2) || _match_expr == jule::Str("!=", 2) || _match_expr == jule::Str("<", 1) || _match_expr == jule::Str(">", 1) || _match_expr == jule::Str(">=", 2) || _match_expr == jule::Str("<=", 2)) {
			_case_begin_1b78b4d5c:;
			{
				return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06418d4_primBool, });;
			}
		}
		_match_end_1b78b4488:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("+", 1) || _match_expr == jule::Str("-", 1) || _match_expr == jule::Str("*", 1) || _match_expr == jule::Str("/", 1) || _match_expr == jule::Str("&", 1) || _match_expr == jule::Str("|", 1) || _match_expr == jule::Str("^", 1)) {
			_case_begin_1b78b2299:;
			{
				_1d21c817d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b78b6864:;
			{
				_1d21c85ce_mod(_self_);
				_1d21c817d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1b78b5b4e:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for integer type(s)", 45), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78b5ae9:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c91c3_evalPrim(_1d062d805_binaryEval* _self_) {
	jule::Ptr<_1d21d9568_Prim> _395613_prim = _1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr());;
	{
		
		if (_1d21dc538_IsBool(_395613_prim.ptr())) {
			_case_begin_1b78b86ac:;
			{
				return _1d21c7c3d_evalBool(_self_);;
			}
		}
		else if (_1d21dc79c_IsStr(_395613_prim.ptr())) {
			_case_begin_1b78b8734:;
			{
				return _1d21c7ea2_evalStr(_self_);;
			}
		}
		_match_end_1b78b8602:;
	};
	if ((_1d21d4563_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) == nullptr)) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d98cb_Str(_395613_prim.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	{
		
		if (_1e76e5520_IsFloat(_395613_prim.get()._field_Kind)) {
			_case_begin_1b78bacca:;
			{
				return _1d21c8bea_evalFloat(_self_);;
			}
		}
		else if (_1e76e5201_IsInt(_395613_prim.get()._field_Kind)) {
			_case_begin_1b78ba69d:;
			{
				return _1d21c8e5e_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1b78ba637:;
			{
				return nullptr;;
			}
		}
		_match_end_1b78b7744:;
	};
}



inline void _1d21c939e_checkSpecialCases(_1d062d805_binaryEval* _self_) {
	if (((!(_1d21d3375_Comparable((*(_self_))._field_l.get()._field_Kind.ptr()))) && (!(_1d21d2d9c_IsNil((*(_self_))._field_r.get()._field_Kind.ptr()))))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
	} else if (((!(_1d21d3375_Comparable((*(_self_))._field_r.get()._field_Kind.ptr()))) && (!(_1d21d2d9c_IsNil((*(_self_))._field_l.get()._field_Kind.ptr()))))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("type @ is not comparable", 24), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_self_))._field_r.get()._field_Kind.ptr()), &__jule_any_type5)}));
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21c9613_evalOp(_1d062d805_binaryEval* _self_) {
	_1d21c939e_checkSpecialCases(_self_);
	{
		
		if (_1d21d3111_Void((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b78be927:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(jule::Str("void", 4), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		else if ((_1d21d7b2c_comptimeTypeInfo((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78be30b:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0890;
			}
		}
		else if ((_1d21d7b2c_comptimeTypeInfo((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0890:;
			{
				return _1d21c5b1a_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1d21d4563_Prim((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr) && _1d21dca11_IsAny(_1d21d4563_Prim((*(_self_))._field_r.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b78c097d:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0a49;
			}
		}
		else if (_1d21d2d9c_IsNil((*(_self_))._field_r.get()._field_Kind.ptr())) {
			_case_begin_1b78c0a49:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0ab0;
			}
		}
		else if (_1d21d2d9c_IsNil((*(_self_))._field_l.get()._field_Kind.ptr())) {
			_case_begin_1b78c0ab0:;
			{
				return _1d21c5c4c_evalNil(_self_);;
			}
		}
		else if (((_1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr) && _1d21dca11_IsAny(_1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b78c0b26:;
			{
				return _1d21c79c9_evalAny(_self_);;
			}
		}
		else if ((_1d21d5014_TypeEnum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0b8c:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0c03;
			}
		}
		else if ((_1d21d5014_TypeEnum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0c03:;
			{
				return _1d21c681e_evalTypeEnum(_self_);;
			}
		}
		else if ((_1d21d4ca0_Enum((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0c69:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0cd0;
			}
		}
		else if ((_1d21d4ca0_Enum((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0cd0:;
			{
				return _1d21c5d7e_evalEnum(_self_);;
			}
		}
		else if ((_1d21d47c7_Sptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0d46:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0dac;
			}
		}
		else if ((_1d21d47c7_Sptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0dac:;
			{
				return _1d21c6a50_evalSptr(_self_);;
			}
		}
		else if ((_1d21d4a3b_Ptr((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0e23:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c0e89;
			}
		}
		else if ((_1d21d4a3b_Ptr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c0e89:;
			{
				return _1d21c6cb4_evalPtr(_self_);;
			}
		}
		else if ((_1d21d5278_Arr((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c1000:;
			{
				return _1d21c7028_evalArr(_self_);;
			}
		}
		else if ((_1d21d54dc_Slc((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c1066:;
			{
				return _1d21c728c_evalSlc(_self_);;
			}
		}
		else if ((_1d21d5c29_Trait((*(_self_))._field_r.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c10cc:;
			{
				({
					jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_r;
					jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_l;
					(*(_self_))._field_l = ___jule_assign_arg;
					(*(_self_))._field_r = _1___jule_assign_arg;
				});
				goto _case_begin_1b78c1143;
			}
		}
		else if ((_1d21d5c29_Trait((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c1143:;
			{
				return _1d21c7765_evalTrait(_self_);;
			}
		}
		else if ((_1d21d59b5_Struct((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c11a9:;
			{
				return _1d21c7501_evalStruct(_self_);;
			}
		}
		else if ((_1d21d4563_Prim((*(_self_))._field_l.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b78c1220:;
			{
				return _1d21c91c3_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1b78be729:;
			{
				_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("operator @ is not defined for type @", 36), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_op.get()._field_Kind, &__jule_any_type5),jule::Any(_1d21d2242_Str((*(_self_))._field_l.get()._field_Kind.ptr()), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b78be6b3:;
	};
}



inline void _1d21c9888_evalConst(_1d062d805_binaryEval* _self_, jule::Ptr<_1d0408c95_Data>* _404733_d) {
	{
		
		if (((*(_404733_d)) == nullptr) || ((*(_self_))._field_l.get()._field_Model == nullptr) || ((*(_self_))._field_r.get()._field_Model == nullptr)) {
			_case_begin_1b78d56c9:;
			{
				return;;
			}
		}
		else if ((!(_1d0409658_IsConst((*(_self_))._field_l.ptr()))) || (!(_1d0409658_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1b78d5cc3:;
			{
				(*(_404733_d)).get()._field_Constant=nullptr;
				return;;
			}
		}
		_match_end_1b78d55b9:;
	};
	{
		auto &_match_expr{ (*(_self_))._field_op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b78d7995:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76eb3b1_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b78d7a0b:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool((!(_1e76eb3b1_Eq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))))));
			}
		}
		else if (_match_expr == jule::Str("||", 2)) {
			_case_begin_1b78d7a72:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76eb0a3_Or((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b78d7ad8:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76eac95_And((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">", 1)) {
			_case_begin_1b78d7b4e:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76ebcda_Gt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<", 1)) {
			_case_begin_1b78d7bb5:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76eb6be_Lt((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str(">=", 2)) {
			_case_begin_1b78d7c2b:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76ec0e8_GtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("<=", 2)) {
			_case_begin_1b78d7c92:;
			{
				(*(_404733_d)).get()._field_Constant=static__1e76e6785_NewBool(_1e76eb9cc_LtEq((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant))));
			}
		}
		else if (_match_expr == jule::Str("+", 1)) {
			_case_begin_1b78d7d08:;
			{
				_1e76ec406_Add((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("-", 1)) {
			_case_begin_1b78d7d6e:;
			{
				_1e76ec714_Sub((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b78d7dd5:;
			{
				_1e76eca22_Mul((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b78d7e4b:;
			{
				jule::Bool _408617_ok = _1e76ecd30_Div((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_408617_ok)) && (_1e76e87a9_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
				jule::Ptr<_1d21d9568_Prim> _409121_prim = _1d21d4563_Prim((*(_404733_d)).get()._field_Kind.ptr());;
				{
					
					if (_1e76e4b6d_IsSigInt(_409121_prim.get()._field_Kind)) {
						_case_begin_1b78e4298:;
						{
							_1e76e8a2e_SetI64((*(_404733_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64((*(_404733_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_1e76e4e59_IsUnsigInt(_409121_prim.get()._field_Kind)) {
						_case_begin_1b78e4320:;
						{
							_1e76e8ca4_SetU64((*(_404733_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64((*(_404733_d)).get()._field_Constant.ptr())));
						}
					}
					_match_end_1b78e41dd:;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b78d7ec3:;
			{
				jule::Bool _409917_ok = _1e76ed13d_Mod((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));;
				if (((!(_409917_ok)) && (_1e76e87a9_AsF64((*(_self_))._field_r.get()._field_Constant.ptr()) == 0LL))) {
					_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("divide by zero", 14), jule::Slice<jule::Any>());
				};
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("|", 1)) {
			_case_begin_1b78d804a:;
			{
				_1e76ed759_BitwiseOr((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b78d80c2:;
			{
				_1e76ed44b_BitwiseAnd((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b78d8149:;
			{
				_1e76eda67_Xor((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str("<<", 2)) {
			_case_begin_1b78d81c1:;
			{
				_1e76edd75_Lshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		else if (_match_expr == jule::Str(">>", 2)) {
			_case_begin_1b78d8248:;
			{
				_1e76ee183_Rshift((*(_self_))._field_l.get()._field_Constant.ptr(), (*((*(_self_))._field_r.get()._field_Constant)));
				(*(_404733_d)).get()._field_Constant=(*(_self_))._field_l.get()._field_Constant;
			}
		}
		_match_end_1b78d7258:;
	};
	(*(_404733_d)).get()._field_Model=jule::Any((*(_404733_d)).get()._field_Constant, &__jule_any_type19);
	_1d21cd56d_applyCastModelByEnum(_404733_d, _1d21d4ca0_Enum((*(_404733_d)).get()._field_Kind.ptr()));
}



inline void _1d21c9b0d_checkData(_1d062d805_binaryEval* _self_, jule::Ptr<_1d0408c95_Data>* _412433_d) {
	jule::Ptr<_1d0626e6e_FnIns> _412513_f = _1d21d5751_Fn((*(_412433_d)).get()._field_Kind.ptr());;
	if ((((_412513_f != nullptr) && (_412513_f.get()._field_Decl != nullptr)) && _1d0624994_IsMethod(_412513_f.get()._field_Decl.ptr()))) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, jule::Str("invalid expression used for binary operation", 44), jule::Slice<jule::Any>());
	};
}



inline void _1d21c9cd9_checkDatas(_1d062d805_binaryEval* _self_) {
	_1d21c9b0d_checkData(_self_, &((*(_self_))._field_l));
	_1d21c9b0d_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1d21ca05e_setModel(_1d062d805_binaryEval* _self_, jule::Ptr<_1d0408c95_Data>* _413632_d) {
	if (_1d0409658_IsConst((*(_413632_d)).ptr())) {
		if (((_1d0409658_IsConst((*(_self_))._field_l.ptr()) && _1d0409658_IsConst((*(_self_))._field_r.ptr())) || (((*(_self_))._field_l.get()._field_Model == nullptr) && ((*(_self_))._field_r.get()._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1d0408c95_Data> _414518_l;;
	jule::Ptr<_1d0408c95_Data> _414525_r;;
	({
		jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_414518_l = ___jule_assign_arg;
		_414525_r = _1___jule_assign_arg;
	});
	if ((!(_1d0409966_GoodOperand(_414518_l.ptr(), &(_414525_r))))) {
		({
			jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = _414525_r;
			jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = _414518_l;
			_414518_l = ___jule_assign_arg;
			_414525_r = _1___jule_assign_arg;
		});
	};
	(*(_413632_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061614a_BinopExprModel>(_1d061614a_BinopExprModel{._field_Left=jule::new_ptr<_1d0615b83_OperandExprModel>(_1d0615b83_OperandExprModel{._field_Kind=_414518_l.get()._field_Kind, ._field_Model=_414518_l.get()._field_Model}), ._field_Right=jule::new_ptr<_1d0615b83_OperandExprModel>(_1d0615b83_OperandExprModel{._field_Kind=_414525_r.get()._field_Kind, ._field_Model=_414525_r.get()._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1d21ca2d4_postEval(_1d062d805_binaryEval* _self_, jule::Ptr<_1d0408c95_Data>* _416332_d) {
	(*(_416332_d)).get()._field_Lvalue=false;
	_1d21ca05e_setModel(_self_, _416332_d);
}



inline jule::Ptr<_1d0408c95_Data> _1d21ca68b_solveExplicit(_1d062d805_binaryEval* _self_, jule::Ptr<_1d0408c95_Data>* _416837_l, jule::Ptr<_1d0408c95_Data>* _416852_r) {
	({
		jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_416837_l));
		jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_416852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1d21c9cd9_checkDatas(_self_);
	jule::Ptr<_1d0408c95_Data> _417317_d = _1d21c9613_evalOp(_self_);;
	({
		jule::Ptr<_1d0408c95_Data> ___jule_assign_arg = (*(_416837_l));
		jule::Ptr<_1d0408c95_Data> _1___jule_assign_arg = (*(_416852_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1d21c9888_evalConst(_self_, &(_417317_d));
	if ((_417317_d != nullptr)) {
		_417317_d.get()._field_Mutable=true;
		_1d21ca2d4_postEval(_self_, &(_417317_d));
	};
	return _417317_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d21ca999_eval(_1d062d805_binaryEval* _self_, jule::Ptr<_1d05e6ee9_BinopExpr>* _418828_op) {
	if ((*(_418828_op)).get()._field_Op.get()._field_Kind.equal("=", 1)) {
		_1d040ad1e_pushErr((*(_self_))._field_e.ptr(), (*(_418828_op)).get()._field_Op, jule::Str("assignments not available for expressions", 41), jule::Slice<jule::Any>());
		_1d040b13d_pushSuggestion((*(_self_))._field_e.ptr(), jule::Str("use clear imperative approach, comes relevant assignment statement before the expression", 88), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _419517_l = _1d01da3c3_evalExpr1((*(_self_))._field_e, (*(_418828_op)).get()._field_Left);;
	if (((_419517_l == nullptr) || (_419517_l.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _420017_prefix = (*(_self_))._field_e.get()._field_prefix;;
	(*(_self_))._field_e.get()._field_prefix=_419517_l.get()._field_Kind;
	__JULE_DEFER({
		(*(_self_))._field_e.get()._field_prefix=_420017_prefix;
	});;
	jule::Ptr<_1d0408c95_Data> _420317_r = _1d01da3c3_evalExpr1((*(_self_))._field_e, (*(_418828_op)).get()._field_Right);;
	if (((_420317_r == nullptr) || (_420317_r.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*(_418828_op)).get()._field_Op;
	jule::Ptr<_1d0408c95_Data> _421017_d = _1d21ca68b_solveExplicit(_self_, &(_419517_l), &(_420317_r));;
	if ((((_421017_d != nullptr) && _419517_l.get()._field_IsRune) && _420317_r.get()._field_IsRune)) {
		_421017_d.get()._field_IsRune=true;
	};
	return _421017_d;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d062d805_binaryEval _Src) {
	_Stream << "binaryEval{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21d05b4_InsGeneric _Src) {
	_Stream << "InsGeneric{";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Constraint:" << _Src._field_Constraint;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21d10ed_TypeAlias _Src) {
	_Stream << "TypeAlias{";
	_Stream << "Scope:" << _Src._field_Scope << ", ";
	_Stream << "Public:" << _Src._field_Public << ", ";
	_Stream << "Binded:" << _Src._field_Binded << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Generic:" << _Src._field_Generic << ", ";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Ident:" << _Src._field_Ident << ", ";
	_Stream << "Kind:" << _Src._field_Kind << ", ";
	_Stream << "Refers:" << _Src._field_Refers << ", ";
	_Stream << "Generics:" << _Src._field_Generics;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d21d2242_Str(_1d21d1d46_TypeKind* _self_) {
	if (_1d21d2d9c_IsNil(_self_)) {
		return jule::Str("nil", 3);;
	};
	jule::Str _7417_kind = jule::Str();;
	if ((*(_self_))._field_Variadic) {
		(_7417_kind).append("...", 3);
	};
	if (_1d21d2b38_Binded(_self_)) {
		(_7417_kind).append("cpp.", 4);
		_7417_kind+=(*(_self_))._field_BindIdent;
	} else {
		_7417_kind+=_1d21d18d4_Kind_mptr_data[((*(_self_))._field_Kind).type_offset]._1d21d1483_Str((*(_self_))._field_Kind);
	};
	return _7417_kind;;
}



inline jule::Bool _1d21d2550_Equal(jule::Ptr<_1d21d1d46_TypeKind> _self_, jule::Ptr<_1d21d1d46_TypeKind> _9021_other) {
	if (_1d21d2d9c_IsNil(_self_.ptr())) {
		return _1d21d2d9c_IsNil(_9021_other.ptr());;
	};
	if (_1d21d2b38_Binded(_self_.ptr())) {
		return (_1d21d2b38_Binded(_9021_other.ptr()) && (_self_.get()._field_BindIdent == _9021_other.get()._field_BindIdent));;
	};
	return _1d21d18d4_Kind_mptr_data[(_self_.get()._field_Kind).type_offset]._1d21d1791_Equal(_self_.get()._field_Kind, _9021_other);;
}



inline jule::Bool _1d21d2b38_Binded(_1d21d1d46_TypeKind* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1d21d2d9c_IsNil(_1d21d1d46_TypeKind* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1d21d3111_Void(_1d21d1d46_TypeKind* _self_) {
	jule::Ptr<_1d21d9568_Prim> _11013_prim = _1d21d4563_Prim(_self_);;
	return ((_11013_prim != nullptr) && _11013_prim.get()._field_Kind.equal("void", 4));;
}



inline jule::Bool _1d21d3375_Comparable(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _11721__self = (&((*(_self_))));;
		if ((_1d21d59b5_Struct(_11721__self) != nullptr)) {
			return _1d21d59b5_Struct(_11721__self).get()._field_Comparable;;
		};
		return (((_1d21d5e8d_Map(_11721__self) == nullptr) && (_1d21d54dc_Slc(_11721__self) == nullptr)) && (_1d21d5751_Fn(_11721__self) == nullptr));;
	};
}



inline jule::Bool _1d21d35d9_Mutable(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _12821__self = (&((*(_self_))));;
		if ((_1d21d59b5_Struct(_12821__self) != nullptr)) {
			return _1d21d59b5_Struct(_12821__self).get()._field_Mutable;;
		};
		if ((_1d21d5c29_Trait(_12821__self) != nullptr)) {
			return _1d21d5c29_Trait(_12821__self).get()._field_Mutable;;
		};
		if ((_1d21d4563_Prim(_12821__self) != nullptr)) {
			jule::Ptr<_1d21d9568_Prim> _13621_p = _1d21d4563_Prim(_12821__self);;
			return _1d21dca11_IsAny(_13621_p.ptr());;
		};
		if ((_1d21d5278_Arr(_12821__self) != nullptr)) {
			return _1d21d35d9_Mutable(_1d21d5278_Arr(_12821__self).get()._field_Elem.ptr());;
		};
		return (((_1d21d54dc_Slc(_12821__self) != nullptr) || (_1d21d4a3b_Ptr(_12821__self) != nullptr)) || (_1d21d47c7_Sptr(_12821__self) != nullptr));;
	};
}



inline jule::Bool _1d21d384d_Ordered(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _15121__self = (&((*(_self_))));;
		jule::Ptr<_1d21d9568_Prim> _15217_prim = _1d21d4563_Prim(_15121__self);;
		if ((_15217_prim != nullptr)) {
			return (_1e76e57b7_IsNum(_15217_prim.get()._field_Kind) || _1d21dc79c_IsStr(_15217_prim.ptr()));;
		};
		if ((_1d21d4a3b_Ptr(_15121__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1d0611bd4_StructIns> _15917_s = _1d21d59b5_Struct(_15121__self);;
		if ((_15917_s != nullptr)) {
			return ((((_15917_s.get()._field_Operators._field_Gt != nullptr) && (_15917_s.get()._field_Operators._field_GtEq != nullptr)) && (_15917_s.get()._field_Operators._field_Lt != nullptr)) && (_15917_s.get()._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1d214bc5b_Enum> _16617_enm = _1d21d4ca0_Enum(_15121__self);;
		if ((_16617_enm != nullptr)) {
			return _1e76e57b7_IsNum(_1d21d2242_Str(_16617_enm.get()._field_Kind.get()._field_Kind.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1d21d3ab2_NilCompatible(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _17721__self = (&((*(_self_))));;
		jule::Ptr<_1d21d9568_Prim> _17917_prim = _1d21d4563_Prim(_17721__self);;
		if (((_17917_prim != nullptr) && _1d21dca11_IsAny(_17917_prim.ptr()))) {
			return true;;
		};
		return (((((((_1d21d2d9c_IsNil(_17721__self) || (_1d21d5751_Fn(_17721__self) != nullptr)) || (_1d21d47c7_Sptr(_17721__self) != nullptr)) || (_1d21d4a3b_Ptr(_17721__self) != nullptr)) || (_1d21d5c29_Trait(_17721__self) != nullptr)) || (_1d21d54dc_Slc(_17721__self) != nullptr)) || (_1d21d5e8d_Map(_17721__self) != nullptr)) || (_1d21d5014_TypeEnum(_17721__self) != nullptr));;
	};
}



inline jule::Bool _1d21d3d26_PerformsRC(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _19821__self = (&((*(_self_))));;
		jule::Ptr<_1d21d9568_Prim> _19917_prim = _1d21d4563_Prim(_19821__self);;
		if ((_19917_prim != nullptr)) {
			return _1d21dca11_IsAny(_19917_prim.ptr());;
		};
		return (((_1d21d47c7_Sptr(_19821__self) != nullptr) || (_1d21d54dc_Slc(_19821__self) != nullptr)) || (_1d21d5c29_Trait(_19821__self) != nullptr));;
	};
}



inline jule::Bool _1d21d408a_SupportsCloning(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _21021__self = (&((*(_self_))));;
		{
			
			if ((_1d21d4563_Prim(_21021__self) != nullptr)) {
				_case_begin_1b793222b:;
				{
					return (!(_1d21dca11_IsAny(_1d21d4563_Prim(_21021__self).ptr())));;
				}
			}
			else if ((_1d21d4ca0_Enum(_21021__self) != nullptr)) {
				_case_begin_1b7932b77:;
				{
					return true;;
				}
			}
			else if ((_1d21d5751_Fn(_21021__self) != nullptr)) {
				_case_begin_1b7932bdd:;
				{
					return true;;
				}
			}
			else if ((_1d21d4a3b_Ptr(_21021__self) != nullptr)) {
				_case_begin_1b79326e3:;
				{
					return true;;
				}
			}
			else if ((_1d21d54dc_Slc(_21021__self) != nullptr)) {
				_case_begin_1b7932759:;
				{
					return _1d21d408a_SupportsCloning(_1d21d54dc_Slc(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1d21d5e8d_Map(_21021__self) != nullptr)) {
				_case_begin_1b79327c0:;
				{
					jule::Ptr<_1d21ded10_Map> _22321_m = _1d21d5e8d_Map(_21021__self);;
					return (_1d21d408a_SupportsCloning(_22321_m.get()._field_Key.ptr()) && _1d21d408a_SupportsCloning(_22321_m.get()._field_Val.ptr()));;
				}
			}
			else if ((_1d21d5278_Arr(_21021__self) != nullptr)) {
				_case_begin_1b7932836:;
				{
					return _1d21d408a_SupportsCloning(_1d21d5278_Arr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1d21d47c7_Sptr(_21021__self) != nullptr)) {
				_case_begin_1b7932d31:;
				{
					return _1d21d408a_SupportsCloning(_1d21d47c7_Sptr(_21021__self).get()._field_Elem.ptr());;
				}
			}
			else if ((_1d21d59b5_Struct(_21021__self) != nullptr)) {
				_case_begin_1b7932d97:;
				{
					jule::Ptr<_1d0611bd4_StructIns> _23025_s = _1d21d59b5_Struct(_21021__self);;
					return (((_23025_s.get()._field_Decl != nullptr) && (!(_23025_s.get()._field_Decl.get()._field_Binded))) && _1d06106e9_IsDerives(_23025_s.get()._field_Decl.ptr(), jule::Str("Clone", 5)));;
				}
			}
			else {
				_case_begin_1b793267c:;
				{
					return false;;
				}
			}
			_match_end_1b7932616:;
		};
	};
}



inline jule::Bool _1d21d42ee_Variadicable(_1d21d1d46_TypeKind* _self_) {
	{
		_1d21d1d46_TypeKind* _24121__self = (&((*(_self_))));;
		return (_1d21d54dc_Slc(_24121__self) != nullptr);;
	};
}



inline jule::Ptr<_1d21d9568_Prim> _1d21d4563_Prim(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 20)) {
			_case_begin_1b7939750:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21d9568_Prim>(20);;
			}
		}
		else {
			_case_begin_1b792782b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b79277c6:;
	};
}



inline jule::Ptr<_1d21dccec_Sptr> _1d21d47c7_Sptr(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 21)) {
			_case_begin_1b79399d6:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21dccec_Sptr>(21);;
			}
		}
		else {
			_case_begin_1b793a135:;
			{
				return nullptr;;
			}
		}
		_match_end_1b793a0d0:;
	};
}



inline jule::Ptr<_1d21e1361_Ptr> _1d21d4a3b_Ptr(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b793a1bd:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21e1361_Ptr>(26);;
			}
		}
		else {
			_case_begin_1b793aca1:;
			{
				return nullptr;;
			}
		}
		_match_end_1b793b1d0:;
	};
}



inline jule::Ptr<_1d214bc5b_Enum> _1d21d4ca0_Enum(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b793ad5b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d214bc5b_Enum>(3);;
			}
		}
		else {
			_case_begin_1b793b972:;
			{
				return nullptr;;
			}
		}
		_match_end_1b793bda1:;
	};
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d21d5014_TypeEnum(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b793ba2c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d214d356_TypeEnum>(4);;
			}
		}
		else {
			_case_begin_1b793c643:;
			{
				return nullptr;;
			}
		}
		_match_end_1b793ca72:;
	};
}



inline jule::Ptr<_1d21e0904_Arr> _1d21d5278_Arr(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 25)) {
			_case_begin_1b793c6ed:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21e0904_Arr>(25);;
			}
		}
		else {
			_case_begin_1b793d314:;
			{
				return nullptr;;
			}
		}
		_match_end_1b793d743:;
	};
}



inline jule::Ptr<_1d21dd759_Slc> _1d21d54dc_Slc(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 22)) {
			_case_begin_1b793d3be:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21dd759_Slc>(22);;
			}
		}
		else {
			_case_begin_1b793ded5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b793e414:;
	};
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d21d5751_Fn(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 1)) {
			_case_begin_1b793e090:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d0626e6e_FnIns>(1);;
			}
		}
		else {
			_case_begin_1b793eba6:;
			{
				return nullptr;;
			}
		}
		_match_end_1b79400d5:;
	};
}



inline jule::Ptr<_1d0611bd4_StructIns> _1d21d59b5_Struct(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b793ec61:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d0611bd4_StructIns>(0);;
			}
		}
		else {
			_case_begin_1b7940877:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7940ca6:;
	};
}



inline jule::Ptr<_1d21494c8_Trait> _1d21d5c29_Trait(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 2)) {
			_case_begin_1b7940932:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21494c8_Trait>(2);;
			}
		}
		else {
			_case_begin_1b7941548:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7941977:;
	};
}



inline jule::Ptr<_1d21ded10_Map> _1d21d5e8d_Map(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 24)) {
			_case_begin_1b7941603:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21ded10_Map>(24);;
			}
		}
		else {
			_case_begin_1b7942219:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7942648:;
	};
}



inline jule::Ptr<_1d21de2d7_Tuple> _1d21d6202_Tup(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 23)) {
			_case_begin_1b79422c4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21de2d7_Tuple>(23);;
			}
		}
		else {
			_case_begin_1b7942dda:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7943319:;
	};
}



inline jule::Bool _1d21d6466_comptime(_1d21d1d46_TypeKind* _self_) {
	return ((((((((((((((_1d21d78b8_comptimeTypeInfos(_self_) != nullptr) || (_1d21d7b2c_comptimeTypeInfo(_self_) != nullptr)) || (_1d21d66ca_comptimeStructFields(_self_) != nullptr)) || (_1d21d693e_comptimeStructField(_self_) != nullptr)) || (_1d21d6ba3_comptimeEnumFields(_self_) != nullptr)) || (_1d21d6e17_comptimeEnumField(_self_) != nullptr)) || (_1d21d7d91_comptimeStatics(_self_) != nullptr)) || (_1d21d8105_comptimeStatic(_self_) != nullptr)) || (_1d21d717b_comptimeParams(_self_) != nullptr)) || (_1d21d73e0_comptimeParam(_self_) != nullptr)) || (_1d21d7654_comptimeRange(_self_) != nullptr)) || (_1d21d8369_comptimeValue(_self_) != nullptr)) || (_1d21d8842_comptimeFiles(_self_) != nullptr)) || (_1d21d85cd_comptimeFile(_self_) != nullptr));;
}



inline jule::Ptr<_1d2152998_comptimeStructFields> _1d21d66ca_comptimeStructFields(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 7)) {
			_case_begin_1b7948341:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d2152998_comptimeStructFields>(7);;
			}
		}
		else {
			_case_begin_1b7947c58:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7947c03:;
	};
}



inline jule::Ptr<_1d2150ea2_comptimeStructField> _1d21d693e_comptimeStructField(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 6)) {
			_case_begin_1b7948000:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d2150ea2_comptimeStructField>(6);;
			}
		}
		else {
			_case_begin_1b79485a5:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794840c:;
	};
}



inline jule::Ptr<_1d21581c9_comptimeEnumFields> _1d21d6ba3_comptimeEnumFields(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 11)) {
			_case_begin_1b794863d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21581c9_comptimeEnumFields>(11);;
			}
		}
		else {
			_case_begin_1b79492a9:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7949254:;
	};
}



inline jule::Ptr<_1d2156ea8_comptimeEnumField> _1d21d6e17_comptimeEnumField(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 10)) {
			_case_begin_1b7949342:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d2156ea8_comptimeEnumField>(10);;
			}
		}
		else {
			_case_begin_1b7949e7a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7949e25:;
	};
}



inline jule::Ptr<_1d215b7c6_comptimeParams> _1d21d717b_comptimeParams(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 13)) {
			_case_begin_1b794a013:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d215b7c6_comptimeParams>(13);;
			}
		}
		else {
			_case_begin_1b794ab4b:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794aae6:;
	};
}



inline jule::Ptr<_1d215972a_comptimeParam> _1d21d73e0_comptimeParam(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 12)) {
			_case_begin_1b794abd4:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d215972a_comptimeParam>(12);;
			}
		}
		else {
			_case_begin_1b794b81c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794b7b7:;
	};
}



inline jule::Ptr<_1d21504ac_comptimeRange> _1d21d7654_comptimeRange(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 5)) {
			_case_begin_1b794b8a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21504ac_comptimeRange>(5);;
			}
		}
		else {
			_case_begin_1b794c4dd:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794c488:;
	};
}



inline jule::Ptr<_1d215cc8e_comptimeTypeInfos> _1d21d78b8_comptimeTypeInfos(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 14)) {
			_case_begin_1b794c576:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d215cc8e_comptimeTypeInfos>(14);;
			}
		}
		else {
			_case_begin_1b794d1ae:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794d159:;
	};
}



inline jule::Ptr<_1d215e257_comptimeTypeInfo> _1d21d7b2c_comptimeTypeInfo(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 15)) {
			_case_begin_1b794d247:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d215e257_comptimeTypeInfo>(15);;
			}
		}
		else {
			_case_begin_1b794dd80:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794dd2a:;
	};
}



inline jule::Ptr<_1d21559e0_comptimeStatics> _1d21d7d91_comptimeStatics(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 9)) {
			_case_begin_1b794de18:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d21559e0_comptimeStatics>(9);;
			}
		}
		else {
			_case_begin_1b794ea51:;
			{
				return nullptr;;
			}
		}
		_match_end_1b794e9eb:;
	};
}



inline jule::Ptr<_1d2153ea5_comptimeStatic> _1d21d8105_comptimeStatic(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 8)) {
			_case_begin_1b794ead9:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d2153ea5_comptimeStatic>(8);;
			}
		}
		else {
			_case_begin_1b7950722:;
			{
				return nullptr;;
			}
		}
		_match_end_1b79506bc:;
	};
}



inline jule::Ptr<_1d2164c52_comptimeValue> _1d21d8369_comptimeValue(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 16)) {
			_case_begin_1b79507aa:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d2164c52_comptimeValue>(16);;
			}
		}
		else {
			_case_begin_1b79513e3:;
			{
				return nullptr;;
			}
		}
		_match_end_1b795138d:;
	};
}



inline jule::Ptr<_1d2168816_comptimeFile> _1d21d85cd_comptimeFile(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 18)) {
			_case_begin_1b795147b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d2168816_comptimeFile>(18);;
			}
		}
		else {
			_case_begin_1b79520b4:;
			{
				return nullptr;;
			}
		}
		_match_end_1b795205e:;
	};
}



inline jule::Ptr<_1d216734d_comptimeFiles> _1d21d8842_comptimeFiles(_1d21d1d46_TypeKind* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, 17)) {
			_case_begin_1b795214c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1d216734d_comptimeFiles>(17);;
			}
		}
		else {
			_case_begin_1b7952c85:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7952c30:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d21d1d46_TypeKind _Src) {
	_Stream << _1d21d2242_Str(&_Src);
	return _Stream;
}



inline jule::Bool _1d21d90a1_checked(_1d21d8be9_TypeSymbol* _self_) {
	return ((*(_self_))._field_Kind != nullptr);;
}



inline void _1d21d927c_removeKind(_1d21d8be9_TypeSymbol* _self_) {
	(*(_self_))._field_Kind=nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21d8be9_TypeSymbol _Src) {
	_Stream << "TypeSymbol{";
	_Stream << "Decl:" << _Src._field_Decl << ", ";
	_Stream << "Kind:" << _Src._field_Kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d21d98cb_Str(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1d21d9bd9_Equal(jule::Ptr<_1d21d9568_Prim> _self_, jule::Ptr<_1d21d1d46_TypeKind> _53821_other) {
	jule::Ptr<_1d21d9568_Prim> _53913_prim = _1d21d4563_Prim(_53821_other.ptr());;
	if ((_53913_prim == nullptr)) {
		return false;;
	};
	return (_self_.get()._field_Kind == _53913_prim.get()._field_Kind);;
}



inline jule::Bool _1d21da15c_IsConstraint(_1d21d9568_Prim* _self_) {
	return ((((!(_1d21dc79c_IsStr(_self_))) && (!(_1d21dca11_IsAny(_self_)))) && (!(_1d21dc538_IsBool(_self_)))) && (!(_1e76e57b7_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1d21da3c1_IsI8(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i8", 2);;
}



inline jule::Bool _1d21da635_IsI16(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i16", 3);;
}



inline jule::Bool _1d21da899_IsI32(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i32", 3);;
}



inline jule::Bool _1d21dab0d_IsI64(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("i64", 3);;
}



inline jule::Bool _1d21dad72_IsU8(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u8", 2);;
}



inline jule::Bool _1d21db0d6_IsU16(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u16", 3);;
}



inline jule::Bool _1d21db34a_IsU32(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u32", 3);;
}



inline jule::Bool _1d21db5ae_IsU64(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("u64", 3);;
}



inline jule::Bool _1d21db823_IsF32(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f32", 3);;
}



inline jule::Bool _1d21dba87_IsF64(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("f64", 3);;
}



inline jule::Bool _1d21dbceb_IsInt(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("int", 3);;
}



inline jule::Bool _1d21dc060_IsUint(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uint", 4);;
}



inline jule::Bool _1d21dc2c4_IsUintptr(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("uintptr", 7);;
}



inline jule::Bool _1d21dc538_IsBool(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("bool", 4);;
}



inline jule::Bool _1d21dc79c_IsStr(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("str", 3);;
}



inline jule::Bool _1d21dca11_IsAny(_1d21d9568_Prim* _self_) {
	return (*(_self_))._field_Kind.equal("any", 3);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21d9568_Prim _Src) {
	_Stream << _1d21d98cb_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21dd160_Str(_1d21dccec_Sptr* _self_) {
	return (jule::Str("&", 1) + _1d21d2242_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1d21dd46d_Equal(jule::Ptr<_1d21dccec_Sptr> _self_, jule::Ptr<_1d21d1d46_TypeKind> _61521_other) {
	jule::Ptr<_1d21dccec_Sptr> _61613_sptr = _1d21d47c7_Sptr(_61521_other.ptr());;
	if ((_61613_sptr == nullptr)) {
		return false;;
	};
	return _1d21d2550_Equal(_self_.get()._field_Elem, _61613_sptr.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21dccec_Sptr _Src) {
	_Stream << _1d21dd160_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21ddc65_Str(_1d21dd759_Slc* _self_) {
	return (jule::Str("[]", 2) + _1d21d2242_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1d21de073_Equal(jule::Ptr<_1d21dd759_Slc> _self_, jule::Ptr<_1d21d1d46_TypeKind> _63421_other) {
	jule::Ptr<_1d21dd759_Slc> _63513_slc = _1d21d54dc_Slc(_63421_other.ptr());;
	if ((_63513_slc == nullptr)) {
		return false;;
	};
	return _1d21d2550_Equal(_self_.get()._field_Elem, _63513_slc.get()._field_Elem);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21dd759_Slc _Src) {
	_Stream << _1d21ddc65_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21de64a_Str(_1d21de2d7_Tuple* _self_) {
	jule::Str _65117_s = jule::Str("(", 1);;
	_65117_s+=_1d21d2242_Str((*(_self_))._field_Types[0LL].ptr());
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b7961e92:;
		if (it != expr_end) {
			jule::Ptr<_1d21d1d46_TypeKind> *_65316_t = it;
			{
				(_65117_s).append(",", 1);
				_65117_s+=_1d21d2242_Str((*(_65316_t)).ptr());
			}
			_iter_next_1b7961e92:;
			++it;
			goto _iter_begin_1b7961e92;
		}
		_iter_end_1b7961e92:;
	};
	(_65117_s).append(")", 1);
	return _65117_s;;
}



inline jule::Bool _1d21de958_Equal(jule::Ptr<_1d21de2d7_Tuple> _self_, jule::Ptr<_1d21d1d46_TypeKind> _66221_other) {
	jule::Ptr<_1d21de2d7_Tuple> _66313_tup = _1d21d6202_Tup(_66221_other.ptr());;
	if ((_66313_tup == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Types.len() != _66313_tup.get()._field_Types.len())) {
		return false;;
	};
	jule::I64 _67017_i = 0LL;;
	for (; (_67017_i < _self_.get()._field_Types.len()); (_67017_i)++) {
		{
			if ((!(_1d21d2550_Equal(_self_.get()._field_Types[_67017_i], _66313_tup.get()._field_Types[_67017_i])))) {
				return false;;
			};
		}
	_iter_next_1b796459e:;
	}
	_iter_end_1b796459e:;;
	return true;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21de2d7_Tuple _Src) {
	_Stream << _1d21de64a_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21e0173_Str(_1d21ded10_Map* _self_) {
	jule::Str _69017_s = jule::Str("map[", 4);;
	_69017_s+=_1d21d2242_Str((*(_self_))._field_Key.ptr());
	(_69017_s).append("]", 1);
	_69017_s+=_1d21d2242_Str((*(_self_))._field_Val.ptr());
	return _69017_s;;
}



inline jule::Bool _1d21e0481_Equal(jule::Ptr<_1d21ded10_Map> _self_, jule::Ptr<_1d21d1d46_TypeKind> _69821_other) {
	jule::Ptr<_1d21ded10_Map> _69913_m = _1d21d5e8d_Map(_69821_other.ptr());;
	if ((_69913_m == nullptr)) {
		return false;;
	};
	return (_1d21d2550_Equal(_self_.get()._field_Key, _69913_m.get()._field_Key) && _1d21d2550_Equal(_self_.get()._field_Val, _69913_m.get()._field_Val));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21ded10_Map _Src) {
	_Stream << _1d21e0173_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21e0c67_Str(_1d21e0904_Arr* _self_) {
	jule::Str _71717_s = jule::Str("[", 1);;
	_71717_s+=_1e76d6159_Itoa((*(_self_))._field_N);
	(_71717_s).append("]", 1);
	_71717_s+=_1d21d2242_Str((*(_self_))._field_Elem.ptr());
	return _71717_s;;
}



inline jule::Bool _1d21e1075_Equal(jule::Ptr<_1d21e0904_Arr> _self_, jule::Ptr<_1d21d1d46_TypeKind> _72521_other) {
	jule::Ptr<_1d21e0904_Arr> _72613_arr = _1d21d5278_Arr(_72521_other.ptr());;
	if ((_72613_arr == nullptr)) {
		return false;;
	};
	return ((_self_.get()._field_N == _72613_arr.get()._field_N) && _1d21d2550_Equal(_self_.get()._field_Elem, _72613_arr.get()._field_Elem));;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21e0904_Arr _Src) {
	_Stream << _1d21e0c67_Str(&_Src);
	return _Stream;
}



inline jule::Str _1d21e16c4_Str(_1d21e1361_Ptr* _self_) {
	if (_1d21e1d34_IsUnsafe(_self_)) {
		return jule::Str("*unsafe", 7);;
	};
	return (jule::Str("*", 1) + _1d21d2242_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1d21e19d2_Equal(jule::Ptr<_1d21e1361_Ptr> _self_, jule::Ptr<_1d21d1d46_TypeKind> _74921_other) {
	jule::Ptr<_1d21e1361_Ptr> _75013_ptr = _1d21d4a3b_Ptr(_74921_other.ptr());;
	if ((_75013_ptr == nullptr)) {
		return false;;
	};
	return _1d21d2550_Equal(_self_.get()._field_Elem, _75013_ptr.get()._field_Elem);;
}



inline jule::Bool _1d21e1d34_IsUnsafe(_1d21e1361_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21e1361_Ptr _Src) {
	_Stream << _1d21e16c4_Str(&_Src);
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21e22a7_referencer _Src) {
	_Stream << "referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline void _1d21e3880_pushErr(_1d21e3187_typeChecker* _self_, jule::Ptr<_22be1281d_Token> _83526_token, jule::Str _83541_fmt, jule::Slice<jule::Any> _83554_args) {
	_1d219dc25_pushErr((*(_self_))._field_s.ptr(), _83526_token, _83541_fmt, _83554_args);
}



inline void _1d21e3a5b_allowBuiltin(_1d21e3187_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1d21e3c37_disallowBuiltin(_1d21e3187_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1b7970ce7_pushReference(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d0611bd4_StructIns>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b76d6a4c_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1d062aa44_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type9));
}

inline void _1b7973921_pushReference(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d21494c8_Trait>* _84740_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1b797555a_Exist((*(_self_))._field_refers.ptr(), (*(_84740_t)))) {
		return;;
	};
	_1d062aa44_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_84740_t)), &__jule_any_type10));
}



inline void _1d21e4232_pushReferenceByKind(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _85743_k) {
	{
		
		if ((_1d21d59b5_Struct((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1b796ea4e:;
			{
				jule::Ptr<_1d0611bd4_StructIns> _86021_t = _1d21d59b5_Struct((*(_85743_k)).ptr());;
				_1b7970ce7_pushReference(_self_, &(_86021_t));
			}
		}
		else if ((_1d21d5c29_Trait((*(_85743_k)).ptr()) != nullptr)) {
			_case_begin_1b796eac6:;
			{
				jule::Ptr<_1d21494c8_Trait> _86321_t = _1d21d5c29_Trait((*(_85743_k)).ptr());;
				_1b7973921_pushReference(_self_, &(_86321_t));
			}
		}
		_match_end_1b796e93e:;
	};
}



inline void _1d21e45ea_pushCycleError(_1d21e3187_typeChecker* _self_, jule::Any _86829_def1, jule::Any _86840_def2, jule::Str* _86856_message) {
	;
	jule::Fn<jule::Str(jule::Any*)> _87013_getIdent = jule::Fn<jule::Str(jule::Any*)>([=](jule::Any* _87028_def) mutable -> jule::Str {
		{
			auto &_match_expr{ (*(_87028_def)) };
			
			if (_match_expr.type == &__jule_any_type67) {
				_case_begin_1b7978085:;
				{
					return (*(_87028_def)).cast_ptr<_1d21d10ed_TypeAlias>(&__jule_any_type67).get()._field_Ident;;
				}
			}
			else if (_match_expr.type == &__jule_any_type66) {
				_case_begin_1b797863a:;
				{
					return (*(_87028_def)).cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66).get()._field_Ident;;
				}
			}
			else {
				_case_begin_1b797820b:;
				{
					return jule::Str();;
				}
			}
			_match_end_1b797812e:;
		};
	});;
	jule::Str _88013_def1Ident = _87013_getIdent(&(_86829_def1));;
	jule::Str _88113_def2Ident = _87013_getIdent(&(_86840_def2));;
	jule::Str _88213_refersTo = _22ba3cb0d_Logf(jule::Str("@ refers to @", 13), jule::Slice<jule::Any>::make({jule::Any(_88013_def1Ident, &__jule_any_type5),jule::Any(_88113_def2Ident, &__jule_any_type5)}));;
	((*(_86856_message))).buffer.insert(0, (((_22b99a1db_Repeat(jule::Str(" ", 1), 7LL) + _88213_refersTo) + jule::Str("\n", 1))));;
}



inline jule::Bool _1d21e49a2_checkCrossCycle(_1d21e3187_typeChecker* _self_, jule::Any _88630_decl, jule::Str* _88646_message) {
	{
		auto &_match_expr{ _88630_decl };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b797a94a:;
			{
				jule::Ptr<_1d21d10ed_TypeAlias> _88917_ta = _88630_decl.cast_ptr<_1d21d10ed_TypeAlias>(&__jule_any_type67);;
				{
					auto expr = &(_88917_ta.get()._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b797b3c9:;
					if (it != expr_end) {
						jule::Any *_89020_d = it;
						{
							{
								
								if (((*(_89020_d)) == (*(_self_))._field_referencer.get()._field_owner)) {
									_case_begin_1b797c023:;
									{
										_1d21e45ea_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								else if ((!(_1d21e49a2_checkCrossCycle(_self_, (*(_89020_d)), _88646_message)))) {
									_case_begin_1b797c09a:;
									{
										_1d21e45ea_pushCycleError(_self_, jule::Any(_88917_ta, &__jule_any_type67), (*(_89020_d)), _88646_message);
										return false;;
									}
								}
								_match_end_1b797be13:;
							};
						}
						_iter_next_1b797b3c9:;
						++it;
						goto _iter_begin_1b797b3c9;
					}
					_iter_end_1b797b3c9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b797a9b1:;
			{
				jule::Ptr<_1d060ddbd_Struct> _90117_s = _88630_decl.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66);;
				{
					auto expr = &(_90117_s.get()._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b797bc48:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> *_90220_d = it;
						{
							{
								
								if ((__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_90220_d))))) {
									_case_begin_1b797e069:;
									{
										_1d21e45ea_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								else if ((!(_1d21e49a2_checkCrossCycle(_self_, jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message)))) {
									_case_begin_1b797e0e1:;
									{
										_1d21e45ea_pushCycleError(_self_, jule::Any(_90117_s, &__jule_any_type66), jule::Any((*(_90220_d)), &__jule_any_type66), _88646_message);
										return false;;
									}
								}
								_match_end_1b797de59:;
							};
						}
						_iter_next_1b797bc48:;
						++it;
						goto _iter_begin_1b797bc48;
					}
					_iter_end_1b797bc48:;
				};
			}
		}
		_match_end_1b797a8e5:;
	};
	return true;;
}



inline jule::Bool _1d21e4d59_checkIllegalCycles(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _92038_ident, jule::Any _92065_decl) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_referencer == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _92065_decl };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b7980b70:;
			{
				if (((*(_self_))._field_notPlain || _92065_decl.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66).get()._field_Binded)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b7980d18:;
			{
				if (_92065_decl.cast_ptr<_1d21d10ed_TypeAlias>(&__jule_any_type67).get()._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1b7980a3d:;
	};
	if ((_92065_decl == (*(_self_))._field_referencer.get()._field_owner)) {
		_1d21e3880_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cycle in declaration, @ refers to itself", 48), jule::Slice<jule::Any>::make({jule::Any((*(_self_))._field_referencer.get()._field_ident, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Str _94317_message = jule::Str();;
	if ((!(_1d21e49a2_checkCrossCycle(_self_, _92065_decl, &(_94317_message))))) {
		jule::Str _94621_errMsg = _94317_message;;
		_94317_message=jule::Str();
		_1d21e45ea_pushCycleError(_self_, (*(_self_))._field_referencer.get()._field_owner, _92065_decl, &(_94317_message));
		_94621_errMsg+=_94317_message;
		_1d21e3880_pushErr(_self_, (*(_92038_ident)).get()._field_Token, jule::Str("illegal cross cycle in declarations;\n@", 38), jule::Slice<jule::Any>::make({jule::Any(_94621_errMsg, &__jule_any_type5)}));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1b7983216:;
			{
				{
					(*((*(_self_))._field_referencer.get()._field_refs))=jule::append((*((*(_self_))._field_referencer.get()._field_refs)),jule::Slice<jule::Any>::make({_92065_decl}));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b7984866:;
			{
				{
					auto &_match_expr{ _92065_decl };
					
					if (_match_expr.type == &__jule_any_type66) {
						_case_begin_1b79850b4:;
						{
							jule::Ptr<_1d060ddbd_Struct> _96225_s = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66);;
							_96225_s.get()._field_Depends = jule::alloc_for_append(_96225_s.get()._field_Depends,1);_96225_s.get()._field_Depends.__push(_92065_decl.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66));;
						}
					}
					_match_end_1b7984ec6:;
				};
			}
		}
		_match_end_1b7984723:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait<_1d21d18d4_Kind> _1d21e5211_fromTypeAlias(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _97033_decl, jule::Ptr<_1d21d10ed_TypeAlias>* _97060_ta) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_97060_ta)).get()._field_Public, (*(_97060_ta)).get()._field_Token)))) {
		_1d21e3880_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_97060_ta)).get()._field_Used=true;
	if (((*(_97033_decl)).get()._field_Generics.len() > 0LL)) {
		_1d21e3880_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7989140:;
			if (it != expr_end) {
				jule::Ptr<_1d21d10ed_TypeAlias> _98720_bg = *it;
				{
					if (((_98720_bg == (*(_97060_ta))) || (((*(_97060_ta)).get()._field_Kind.get()._field_Kind != nullptr) && _1d21d2550_Equal((*(_97060_ta)).get()._field_Kind.get()._field_Kind, _98720_bg.get()._field_Kind.get()._field_Kind)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1b7989140;
					};
				}
				_iter_next_1b7989140:;
				++it;
				goto _iter_begin_1b7989140;
			}
			_iter_end_1b7989140:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b798abad:;
			if (it != expr_end) {
				jule::Ptr<_1d21d10ed_TypeAlias> _99820_bg = *it;
				{
					if ((_99820_bg == (*(_97060_ta)))) {
						_1d21e3880_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					{
						auto expr = &((*(_97060_ta)).get()._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b798c1a9:;
						if (it != expr_end) {
							jule::Ptr<_1d21d10ed_TypeAlias> _100324_dg = *it;
							{
								if ((_99820_bg == _100324_dg)) {
									_1d21e3880_pushErr(_self_, (*(_97033_decl)).get()._field_Token, jule::Str("type declaration causes initiation cycle", 40), jule::Slice<jule::Any>::make({jule::Any((*(_97033_decl)).get()._field_Ident, &__jule_any_type5)}));
									return nullptr;;
								};
							}
							_iter_next_1b798c1a9:;
							++it;
							goto _iter_begin_1b798c1a9;
						}
						_iter_end_1b798c1a9:;
					};
				}
				_iter_next_1b798abad:;
				++it;
				goto _iter_begin_1b798abad;
			}
			_iter_end_1b798abad:;
		};
	};
	jule::Bool _101217_ok = _1d21e4d59_checkIllegalCycles(_self_, _97033_decl, jule::Any((*(_97060_ta)), &__jule_any_type67));;
	if ((!(_101217_ok))) {
		return nullptr;;
	};
	if (((*(_97060_ta)).get()._field_Kind.get()._field_Kind == nullptr)) {
		_101217_ok=_1d21a9291_checkTypeAliasDeclKind((*(_self_))._field_s, _97060_ta, (*(_self_))._field_lookup);
		if ((!(_101217_ok))) {
			return nullptr;;
		};
	};
	if (((*(_97060_ta)).get()._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(_self_))._field_ownerAlias.get()._field_Generics = jule::alloc_for_append((*(_self_))._field_ownerAlias.get()._field_Generics,1);(*(_self_))._field_ownerAlias.get()._field_Generics.__push((*(_97060_ta)));;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _103117_tk = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Generic=(*(_97060_ta)).get()._field_Generic, ._field_Kind=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_Kind});;
	_1d21e4232_pushReferenceByKind(_self_, &(_103117_tk));
	if ((*(_97060_ta)).get()._field_Binded) {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Ident;
	} else {
		_103117_tk.get()._field_BindIdent=(*(_97060_ta)).get()._field_Kind.get()._field_Kind.get()._field_BindIdent;
	};
	return jule::Trait<_1d21d18d4_Kind>(_103117_tk, 19);;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d21e55b8_fromEnum(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _104428_decl, jule::Ptr<_1d214bc5b_Enum>* _104455_e) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_104455_e)).get()._field_Public, (*(_104455_e)).get()._field_Token)))) {
		_1d21e3880_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_104428_decl)).get()._field_Generics.len() > 0LL)) {
		_1d21e3880_pushErr(_self_, (*(_104428_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_104428_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_104455_e));;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d21e5970_fromTypeEnum(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _105632_decl, jule::Ptr<_1d214d356_TypeEnum>* _105659_e) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_105659_e)).get()._field_Public, (*(_105659_e)).get()._field_Token)))) {
		_1d21e3880_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_105632_decl)).get()._field_Generics.len() > 0LL)) {
		_1d21e3880_pushErr(_self_, (*(_105632_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_105632_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	return (*(_105659_e));;
}



inline jule::Ptr<_1d21494c8_Trait> _1d21e5d27_fromTrait(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _106829_decl, jule::Ptr<_1d21494c8_Trait>* _106856_t) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_106856_t)).get()._field_Public, (*(_106856_t)).get()._field_Token)))) {
		_1d21e3880_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_106829_decl)).get()._field_Generics.len() > 0LL)) {
		_1d21e3880_pushErr(_self_, (*(_106829_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_106829_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	_1b7973921_pushReference(_self_, _106856_t);
	return (*(_106856_t));;
}



inline jule::Bool _1d21e61ce_checkStructIns(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d0611bd4_StructIns>* _108138_ins, jule::Ptr<_22be1281d_Token>* _108160_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*(_108138_ins)).get()._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*(_108138_ins)).get()._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (__jule_any_type66_compare((*(_self_))._field_referencer.get()._field_owner, (*(_108138_ins)).get()._field_Decl)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1d21b5104_precheckStructIns((*(_self_))._field_s, _108138_ins, (*(_108160_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*(_108138_ins)).get()._field_Generics.len() > 0LL)) {
		_1d21b5a72_checkStructInsOperators((*(_self_))._field_s, (*(_108138_ins)));
		_1d21b5379_checkStructIns((*(_self_))._field_s, _108138_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1d21e6476_appendUsedStructReference(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d060ddbd_Struct>* _110249_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_referencer.get()._field_owner };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1b799b493:;
			{
				jule::Ptr<_1d060ddbd_Struct> _110821_refS = (*(_self_))._field_referencer.get()._field_owner.cast_ptr<_1d060ddbd_Struct>(&__jule_any_type66);;
				if ((!(_1d0610a07_IsUses(_110821_refS.ptr(), (*(_110249_s)))))) {
					_110821_refS.get()._field_Uses = jule::alloc_for_append(_110821_refS.get()._field_Uses,1);_110821_refS.get()._field_Uses.__push((*(_110249_s)));;
				};
			}
		}
		_match_end_1b799b43d:;
	};
}



inline jule::Ptr<_1d0611bd4_StructIns> _1d21e683e_buildStructInstance(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _111543_decl, jule::Ptr<_1d060ddbd_Struct>* _111570_s) {
	jule::Ptr<_1d21e22a7_referencer> _111717_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>> _111917_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, 0)) {
				_case_begin_1b799e067:;
				{
					jule::Ptr<_1d217b241_scopeChecker> _112625_sc = (*(_self_))._field_lookup.cast_ptr<_1d217b241_scopeChecker>(0);;
					jule::Ptr<_1d217b241_scopeChecker> _112725_hard = _1d217e2cc_getHardRoot(_112625_sc);;
					if (((_112725_hard.get()._field_owner.get()._field_Owner == nullptr) || (_112725_hard.get()._field_owner.get()._field_Owner.get()._field_Decl != (*(_111570_s))))) {
						goto _match_end_1b799e012;
					};
					jule::I64 _113121_n = (_112725_hard.get()._field_owner.get()._field_Generics.len() + _112725_hard.get()._field_owner.get()._field_Owner.get()._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=_112725_hard.get()._field_table.get()._field_TypeAliases.slice(0LL, _113121_n);
				}
			}
			_match_end_1b799e012:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait<_1d2200172_Lookup> _114117_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1d0611bd4_StructIns> _114517_ins = _1d060e330_instance((*(_111570_s)));;
	_114517_ins.get()._field_Generics=jule::Slice<jule::Ptr<_1d21d05b4_InsGeneric>>::alloc(0LL, (*(_111543_decl)).get()._field_Generics.len());
	{
		auto expr = &((*(_111543_decl)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b799d9a1:;
		if (it != expr_end) {
			jule::Ptr<_1d05de563_TypeDecl> _114721_g = *it;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _114821_kind = _1d21e9cc6_build(_self_, &(_114721_g.get()._field_Kind));;
				if ((_114821_kind == nullptr)) {
					return nullptr;;
				};
				_114517_ins.get()._field_Generics = jule::alloc_for_append(_114517_ins.get()._field_Generics,1);_114517_ins.get()._field_Generics.__push(jule::new_ptr<_1d21d05b4_InsGeneric>(_1d21d05b4_InsGeneric{._field_Kind=_114821_kind, }));;
			}
			_iter_next_1b799d9a1:;
			++it;
			goto _iter_begin_1b799d9a1;
		}
		_iter_end_1b799d9a1:;
	};
	(*(_self_))._field_lookup=_114117_lookup;
	(*(_self_))._field_bannedGenerics=_111917_bannedGenerics;
	(*(_self_))._field_referencer=_111717_referencer;
	return _114517_ins;;
}



inline jule::Ptr<_1d0611bd4_StructIns> _1d21e6be6_fromStruct(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _116334_decl, jule::Ptr<_1d060ddbd_Struct>* _116361_s) {
	if ((!(_1d219e3eb_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_116361_s)).get()._field_Public, (*(_116361_s)).get()._field_Token)))) {
		_1d21e3880_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_116334_decl)).get()._field_Ident, &__jule_any_type5)}));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*(_116334_decl)).get()._field_Generics.len() > 0LL)) {
			_1d21e3880_pushErr(_self_, (*(_116334_decl)).get()._field_Token, jule::Str("generics are not allowed in this scope", 38), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1d0611bd4_StructIns>(_1d0611bd4_StructIns{._field_Decl=(*(_116361_s)), });;
	};
	jule::Bool _118117_ok = ((*(_self_))._field_notPlain || _1d21e4d59_checkIllegalCycles(_self_, _116334_decl, jule::Any((*(_116361_s)), &__jule_any_type66)));;
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	_1d21e6476_appendUsedStructReference(_self_, _116361_s);
	jule::Ptr<_1d0611bd4_StructIns> _118717_ins = _1d21e683e_buildStructInstance(_self_, _116334_decl, _116361_s);;
	if ((_118717_ins == nullptr)) {
		return nullptr;;
	};
	_118117_ok=_1d21a00bc_checkGenericQuantity((*(_self_))._field_s.ptr(), static_cast<jule::I64>(_118717_ins.get()._field_Decl.get()._field_Generics.len()), static_cast<jule::I64>(_118717_ins.get()._field_Generics.len()), (*(_116334_decl)).get()._field_Token);
	if ((!(_118117_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _119717_existInstance = _1d060e60a_appendInstance((*(_116361_s)).ptr(), &(_118717_ins));;
	if ((_119717_existInstance != nullptr)) {
		if ((!(_1d21a7943_checkConstraintsStruct((*(_self_))._field_s, &(_118717_ins), &((*(_116334_decl)).get()._field_Token), _119717_existInstance)))) {
			return nullptr;;
		};
		_1b7970ce7_pushReference(_self_, &(_119717_existInstance));
		return _119717_existInstance;;
	};
	if ((!(_1d21e61ce_checkStructIns(_self_, &(_118717_ins), &((*(_116334_decl)).get()._field_Token))))) {
		return nullptr;;
	};
	_1b7970ce7_pushReference(_self_, &(_118717_ins));
	return _118717_ins;;
}



inline jule::Trait<_1d21d18d4_Kind> _1d21e7004_getDef(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl>* _122130_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79ac0b9:;
		if (it != expr_end) {
			jule::Ptr<_1d05eb509_GenericDecl> _122216_g = *it;
			{
				if ((_122216_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					return jule::Trait<_1d21d18d4_Kind>(_1d21ec7e0_buildPrimType(_122216_g.get()._field_Ident), 20);;
				};
			}
			_iter_next_1b79ac0b9:;
			++it;
			goto _iter_begin_1b79ac0b9;
		}
		_iter_end_1b79ac0b9:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79ac8b1:;
		if (it != expr_end) {
			jule::Ptr<_1d21d10ed_TypeAlias> _122821_g = *it;
			{
				if ((_122821_g.get()._field_Ident == (*(_122130_decl)).get()._field_Ident)) {
					if (((*(_122130_decl)).get()._field_Generics.len() > 0LL)) {
						_1d21e3880_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("type not supports generics", 26), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
						return nullptr;;
					};
					jule::Ptr<_1d0611bd4_StructIns> _123425_st = _1d21d59b5_Struct(_122821_g.get()._field_Kind.get()._field_Kind.ptr());;
					if ((_123425_st != nullptr)) {
						jule::Bool _123625_ok = _1d21e4d59_checkIllegalCycles(_self_, _122130_decl, jule::Any(_123425_st.get()._field_Decl, &__jule_any_type66));;
						if ((!(_123625_ok))) {
							return nullptr;;
						};
					};
					return _122821_g.get()._field_Kind.get()._field_Kind.get()._field_Kind;;
				};
			}
			_iter_next_1b79ac8b1:;
			++it;
			goto _iter_begin_1b79ac8b1;
		}
		_iter_end_1b79ac8b1:;
	};
	if ((!((*(_122130_decl)).get()._field_Binded))) {
		jule::Ptr<_1d214bc5b_Enum> _124621_e = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21eec21_FindEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_124621_e != nullptr)) {
			return jule::Trait<_1d21d18d4_Kind>(_1d21e55b8_fromEnum(_self_, _122130_decl, &(_124621_e)), 3);;
		};
		jule::Ptr<_1d214d356_TypeEnum> _125121_te = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d220002e_FindTypeEnum((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125121_te != nullptr)) {
			return jule::Trait<_1d21d18d4_Kind>(_1d21e5970_fromTypeEnum(_self_, _122130_decl, &(_125121_te)), 4);;
		};
		jule::Ptr<_1d21494c8_Trait> _125621_t = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ee913_FindTrait((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident);;
		if ((_125621_t != nullptr)) {
			return jule::Trait<_1d21d18d4_Kind>(_1d21e5d27_fromTrait(_self_, _122130_decl, &(_125621_t)), 2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1d21e3880_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("binded definitions are not allowed in this scope", 48), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d060ddbd_Struct> _126517_s = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ee24d_FindStruct((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if ((_126517_s != nullptr)) {
		return jule::Trait<_1d21d18d4_Kind>(_1d21e6be6_fromStruct(_self_, _122130_decl, &(_126517_s)), 0);;
	};
	jule::Ptr<_1d21d10ed_TypeAlias> _127017_ta = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21edd96_FindTypeAlias((*(_self_))._field_lookup, (*(_122130_decl)).get()._field_Ident, (*(_122130_decl)).get()._field_Binded);;
	if (((_127017_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_127017_ta=_1d064451e_findBuiltinTypeAlias((*(_122130_decl)).get()._field_Ident);
	};
	if ((_127017_ta != nullptr)) {
		return _1d21e5211_fromTypeAlias(_self_, _122130_decl, &(_127017_ta));;
	};
	_1d21e3880_pushErr(_self_, (*(_122130_decl)).get()._field_Token, jule::Str("undefined identifier: @", 23), jule::Slice<jule::Any>::make({jule::Any((*(_122130_decl)).get()._field_Ident, &__jule_any_type5)}));
	return nullptr;;
}



inline jule::Trait<_1d21d18d4_Kind> _1d21e7312_buildIdent(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05deb29_IdentTypeDecl> _128233_decl) {
	return _1d21e7004_getDef(_self_, &(_128233_decl));;
}



inline jule::Trait<_1d21d18d4_Kind> _1d21e7620_buildSubIdent(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05dee15_SubIdentTypeDecl> _128636_decl) {
	jule::Trait<_1d21d18d4_Kind> _128717_ident = _1d21e7312_buildIdent(_self_, _128636_decl.get()._field_Idents[0LL]);;
	if ((_128717_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _128717_ident };
		
		if (_match_expr.type_is(true, 4)) {
			_case_begin_1b79b8548:;
			{
				goto _match_end_1b79b8328;
			}
		}
		else {
			_case_begin_1b79b8070:;
			{
				_1d21e3880_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b79b8328:;
	};
	jule::Ptr<_1d214d356_TypeEnum> _129817_t = _128717_ident.cast_ptr<_1d214d356_TypeEnum>(4);;
	jule::Slice<jule::Ptr<_1d05deb29_IdentTypeDecl>> _129917_idents = _128636_decl.get()._field_Idents.slice(1LL);;
	{
		auto expr = &(_129917_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79b98bd:;
		if (it != expr_end) {
			jule::I64 _130013_i = it - expr->begin();
			jule::Ptr<_1d05deb29_IdentTypeDecl> _130016_id = *it;
			{
				jule::Ptr<_1d214cc90_TypeEnumItem> _130121_item = _1d214dd90_FindItem(_129817_t.ptr(), _130016_id.get()._field_Ident);;
				if ((_130121_item == nullptr)) {
					_1d21e3880_pushErr(_self_, _130016_id.get()._field_Token, jule::Str("undefined identifier: type @ has no field or method @", 53), jule::Slice<jule::Any>::make({jule::Any(_129817_t.get()._field_Ident, &__jule_any_type5),jule::Any(_130016_id.get()._field_Ident, &__jule_any_type5)}));
					return nullptr;;
				};
				if (((_129917_idents.len() - _130013_i) == 1LL)) {
					_1d21e4232_pushReferenceByKind(_self_, &(_130121_item.get()._field_Kind.get()._field_Kind));
					return jule::Trait<_1d21d18d4_Kind>(_130121_item.get()._field_Kind.get()._field_Kind, 19);;
				};
				_129817_t=_1d21d5014_TypeEnum(_130121_item.get()._field_Kind.get()._field_Kind.ptr());
				if ((_129817_t == nullptr)) {
					_1d21e3880_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1b79b98bd:;
			++it;
			_130013_i++;
			goto _iter_begin_1b79b98bd;
		}
		_iter_end_1b79b98bd:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21dccec_Sptr> _1d21e792d_buildSptrFromType(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _132041_elem) {
	{
		
		if (((*(_132041_elem)) == nullptr)) {
			_case_begin_1b79bd273:;
			{
				return nullptr;;
			}
		}
		else if ((_1d21d59b5_Struct((*(_132041_elem)).ptr()) != nullptr)) {
			_case_begin_1b79bd2ea:;
			{
				jule::Ptr<_1d0611bd4_StructIns> _132617_s = _1d21d59b5_Struct((*(_132041_elem)).ptr());;
				if (((_132617_s.get()._field_Decl != nullptr) && _132617_s.get()._field_Decl.get()._field_Binded)) {
					_1d21e3880_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
		}
		else if (((_1d21d5278_Arr((*(_132041_elem)).ptr()) != nullptr) && _1d21d5278_Arr((*(_132041_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b79bd372:;
			{
				_1d21e3880_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b79ba193:;
	};
	return jule::new_ptr<_1d21dccec_Sptr>(_1d21dccec_Sptr{._field_Elem=(*(_132041_elem))});;
}



inline jule::Ptr<_1d21dccec_Sptr> _1d21e7c3b_buildSptr(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e0575_SptrTypeDecl> _134032_decl) {
	jule::Bool _134113_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_134113_notPlain;
	});;
	jule::Ptr<_1d21d1d46_TypeKind> _134517_elem = _1d21ea0d4_checkDecl(_self_, &(_134032_decl.get()._field_Elem));;
	return _1d21e792d_buildSptrFromType(_self_, &(_134517_elem));;
}



inline jule::Ptr<_1d21e1361_Ptr> _1d21e8049_buildPtrFromType(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _134940_elem) {
	{
		
		if (((*(_134940_elem)) == nullptr)) {
			_case_begin_1b79c2a19:;
			{
				return nullptr;;
			}
		}
		else if (((_1d21d5278_Arr((*(_134940_elem)).ptr()) != nullptr) && _1d21d5278_Arr((*(_134940_elem)).ptr()).get()._field_Auto)) {
			_case_begin_1b79c2a91:;
			{
				_1d21e3880_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return jule::new_ptr<_1d21e1361_Ptr>();;
			}
		}
		_match_end_1b79c2909:;
	};
	return jule::new_ptr<_1d21e1361_Ptr>(_1d21e1361_Ptr{._field_Elem=(*(_134940_elem))});;
}



inline jule::Ptr<_1d21e1361_Ptr> _1d21e8357_buildPtr(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e1048_PtrTypeDecl> _136431_decl) {
	jule::Bool _136513_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_136513_notPlain;
	});;
	jule::Ptr<_1d21d1d46_TypeKind> _136917_elem = nullptr;;
	if ((!(_1d05e13de_IsUnsafe(_136431_decl.ptr())))) {
		_136917_elem=_1d21ea0d4_checkDecl(_self_, &(_136431_decl.get()._field_Elem));
		return _1d21e8049_buildPtrFromType(_self_, &(_136917_elem));;
	};
	return jule::new_ptr<_1d21e1361_Ptr>(_1d21e1361_Ptr{._field_Elem=_136917_elem});;
}



inline jule::Ptr<_1d21dd759_Slc> _1d21e8665_buildSlc(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e0971_SlcTypeDecl> _138131_decl) {
	jule::Bool _138213_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_138213_notPlain;
	});;
	jule::Ptr<_1d21d1d46_TypeKind> _138617_elem = _1d21ea0d4_checkDecl(_self_, &(_138131_decl.get()._field_Elem));;
	{
		
		if ((_138617_elem == nullptr)) {
			_case_begin_1b79c75ce:;
			{
				return nullptr;;
			}
		}
		else if (((_1d21d5278_Arr(_138617_elem.ptr()) != nullptr) && _1d21d5278_Arr(_138617_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b79c7656:;
			{
				_1d21e3880_pushErr(_self_, _138131_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b79c7524:;
	};
	return jule::new_ptr<_1d21dd759_Slc>(_1d21dd759_Slc{._field_Elem=_138617_elem});;
}



inline jule::Ptr<_1d21e0904_Arr> _1d21e8973_buildArr(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e171e_ArrTypeDecl> _140231_decl) {
	jule::Bool _140313_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_140313_notPlain;
	});;
	jule::I64 _140717_n = 0LL;;
	if ((!(_1d05e1a71_AutoSized(_140231_decl.ptr())))) {
		jule::Ptr<_1d0408c95_Data> _141021_size = _1d01dac53_evalExpr(_1d21a59b8_eval((*(_self_))._field_s, (*(_self_))._field_lookup), _140231_decl.get()._field_Size);;
		if ((_141021_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1d0409658_IsConst(_141021_size.ptr())))) {
			_1d21e3880_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1d21d4563_Prim(_141021_size.get()._field_Kind.ptr()) == nullptr) || (!(_1e76e5201_IsInt(_1d21d4563_Prim(_141021_size.get()._field_Kind.ptr()).get()._field_Kind))))) {
			_1d21e3880_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array size must be integer", 26), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_140717_n=static_cast<jule::I64>(static_cast<jule::I64>(_1e76e82d1_AsI64(_141021_size.get()._field_Constant.ptr())));
		if ((_140717_n < 0LL)) {
			_1d21e3880_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array size must be positive integer", 35), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _142821_max = _1e76de4e7_MaxI(jule::Str("int", 3));;
			if (((_1e76d73e1_BitSize != 64LL) && (static_cast<jule::I64>(_140717_n) > _142821_max))) {
				_1d21e3880_pushErr(_self_, _140231_decl.get()._field_Size.get()._field_Token, jule::Str("array with size @ overflows limit (@) of the system", 51), jule::Slice<jule::Any>::make({jule::Any(_1d21ce31b_constoa(&(_141021_size.get()._field_Constant)), &__jule_any_type5),jule::Any(_1e76d5db2_FmtInt(_142821_max, 10LL), &__jule_any_type5)}));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1d21d1d46_TypeKind> _143717_elem = _1d21ea0d4_checkDecl(_self_, &(_140231_decl.get()._field_Elem));;
	{
		
		if ((_143717_elem == nullptr)) {
			_case_begin_1b79d0ad2:;
			{
				return nullptr;;
			}
		}
		else if (((_1d21d5278_Arr(_143717_elem.ptr()) != nullptr) && _1d21d5278_Arr(_143717_elem.ptr()).get()._field_Auto)) {
			_case_begin_1b79d0b48:;
			{
				_1d21e3880_pushErr(_self_, _140231_decl.get()._field_Elem.get()._field_Token, jule::Str("array must have explicit size", 29), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b79ca02c:;
	};
	return jule::new_ptr<_1d21e0904_Arr>(_1d21e0904_Arr{._field_Auto=_1d05e1a71_AutoSized(_140231_decl.ptr()), ._field_N=_140717_n, ._field_Elem=_143717_elem});;
}



inline jule::Ptr<_1d21ded10_Map> _1d21e8c81_buildMap(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e1e28_MapTypeDecl> _145531_decl) {
	jule::Bool _145613_notPlain = (*(_self_))._field_notPlain;;
	(*(_self_))._field_notPlain=true;
	__JULE_DEFER({
		(*(_self_))._field_notPlain=_145613_notPlain;
	});;
	jule::Ptr<_1d21d1d46_TypeKind> _146017_key = _1d21ea0d4_checkDecl(_self_, &(_145531_decl.get()._field_Key));;
	if ((_146017_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _146517_val = _1d21ea0d4_checkDecl(_self_, &(_145531_decl.get()._field_Val));;
	if ((_146517_val == nullptr)) {
		return nullptr;;
	};
	if ((_1d21d4ca0_Enum(_146517_val.ptr()) != nullptr)) {
		_1d21e3880_pushErr(_self_, _145531_decl.get()._field_Val.get()._field_Token, jule::Str("maps do not support enums as map key type", 41), jule::Slice<jule::Any>());
	};
	return jule::new_ptr<_1d21ded10_Map>(_1d21ded10_Map{._field_Key=_146017_key, ._field_Val=_146517_val});;
}



inline jule::Ptr<_1d21de2d7_Tuple> _1d21e908e_buildTuple(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e0c5c_TupleTypeDecl> _147933_decl) {
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _148017_types = jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>::alloc(0LL, _147933_decl.get()._field_Types.len());;
	{
		auto expr = &(_147933_decl.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79d2a4b:;
		if (it != expr_end) {
			jule::Ptr<_1d05de563_TypeDecl> _148121_t = *it;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _148221_kind = _1d21ea0d4_checkDecl(_self_, &(_148121_t));;
				if ((_148221_kind == nullptr)) {
					return nullptr;;
				};
				_148017_types = jule::alloc_for_append(_148017_types,1);_148017_types.__push(_148221_kind);;
			}
			_iter_next_1b79d2a4b:;
			++it;
			goto _iter_begin_1b79d2a4b;
		}
		_iter_end_1b79d2a4b:;
	};
	return jule::new_ptr<_1d21de2d7_Tuple>(_1d21de2d7_Tuple{._field_Types=_148017_types});;
}



inline jule::Bool _1d21e939c_checkFnTypes(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d0626e6e_FnIns>* _149236_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*(_149236_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b79d7aea:;
		if (it != expr_end) {
			jule::Ptr<_1d06260a0_ParamIns> _149321_p = *it;
			{
				_149321_p.get()._field_Kind=_1d21e9cc6_build(_self_, &(_149321_p.get()._field_Decl.get()._field_Kind.get()._field_Decl.get()._field_Kind));
				__jule_func_result=(_149321_p.get()._field_Kind != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1d21a8070_checkFnParamKind((*(_self_))._field_s, &(_149321_p));
			}
			_iter_next_1b79d7aea:;
			++it;
			goto _iter_begin_1b79d7aea;
		}
		_iter_end_1b79d7aea:;
	};
	if ((!(_1d0624730_IsVoid((*(_149236_f)).get()._field_Decl.ptr())))) {
		(*(_149236_f)).get()._field_Result=_1d21e9cc6_build(_self_, &((*(_149236_f)).get()._field_Decl.get()._field_Result.get()._field_Kind.get()._field_Decl.get()._field_Kind));
		__jule_func_result = ((*(_149236_f)).get()._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d21e96aa_buildFn(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d0600b90_FnDecl> _151030_decl) {
	if ((_151030_decl.get()._field_Generics.len() > 0LL)) {
		_1d21e3880_pushErr(_self_, _151030_decl.get()._field_Token, jule::Str("genericed functions cannot use as anonymous function", 52), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d06242bd_Fn> _151617_f = _1d2144726_buildFn(_151030_decl);;
	jule::I64 _151813_n = (*(_self_))._field_s.get()._field_errors.len();;
	_1d21b15d9_checkAnonFnDecl((*(_self_))._field_s, &(_151617_f));
	if ((_151813_n != (*(_self_))._field_s.get()._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _152417_ins = _1d06256a9_instanceForce(_151617_f);;
	_152417_ins.get()._field_Anon=true;
	jule::Bool _152713_ok = _1d21e939c_checkFnTypes(_self_, &(_152417_ins));;
	if ((!(_152713_ok))) {
		return nullptr;;
	};
	return _152417_ins;;
}



inline jule::Trait<_1d21d18d4_Kind> _1d21e99b8_buildByNamespace(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05e0289_NamespaceTypeDecl> _153539_decl) {
	jule::Str _153613_path = _1d21ec438_buildLinkPathByTokens(&(_153539_decl.get()._field_Idents));;
	jule::Ptr<_1d219307c_ImportInfo> _153717_imp = _1d2200172_Lookup_mptr_data[((*(_self_))._field_lookup).type_offset]._1d21ed637_SelectPackage((*(_self_))._field_lookup, jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>([=](jule::Ptr<_1d219307c_ImportInfo> _153752_imp) mutable -> jule::Bool {
		if (((_153539_decl.get()._field_Idents.len() == 1LL) && (_153752_imp.get()._field_Alias == _153613_path))) {
			return true;;
		};
		return ((_153752_imp.get()._field_LinkPath == _153613_path) && _1d21958ba_isAccessibleViaSelection(_153752_imp.ptr()));;
	}));;
	if (((_153717_imp == nullptr) || (!(_1d2195326_isLookupable(_153717_imp.ptr(), jule::Str("self", 4)))))) {
		_1d21e3880_pushErr(_self_, _153539_decl.get()._field_Idents[0LL], jule::Str("undefined namespace: @", 22), jule::Slice<jule::Any>::make({jule::Any(_153613_path, &__jule_any_type5)}));
		return nullptr;;
	};
	_1d21e3c37_disallowBuiltin(_self_);
	jule::Trait<_1d2200172_Lookup> _155017_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait<_1d2200172_Lookup>(_153717_imp, 1);
	jule::Ptr<_1d21d1d46_TypeKind> _155217_kind = _1d21ea0d4_checkDecl(_self_, &(_153539_decl.get()._field_Kind));;
	(*(_self_))._field_lookup=_155017_lookup;
	_1d21e3a5b_allowBuiltin(_self_);
	return jule::Trait<_1d21d18d4_Kind>(_155217_kind, 19);;
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21e9cc6_build(_1d21e3187_typeChecker* _self_, jule::Any* _155829_declKind) {
	jule::Trait<_1d21d18d4_Kind> _155917_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155829_declKind)) };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b79e39a2:;
			{
				jule::Trait<_1d21d18d4_Kind> _156221_t = _1d21e7312_buildIdent(_self_, (*(_155829_declKind)).cast_ptr<_1d05deb29_IdentTypeDecl>(&__jule_any_type20));;
				if ((_156221_t != nullptr)) {
					_155917_kind=_156221_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b79e482c:;
			{
				jule::Trait<_1d21d18d4_Kind> _156721_t = _1d21e7620_buildSubIdent(_self_, (*(_155829_declKind)).cast_ptr<_1d05dee15_SubIdentTypeDecl>(&__jule_any_type92));;
				if ((_156721_t != nullptr)) {
					_155917_kind=_156721_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1b79e4893:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d21dccec_Sptr> _157321_t = _1d21e7c3b_buildSptr(_self_, (*(_155829_declKind)).cast_ptr<_1d05e0575_SptrTypeDecl>(&__jule_any_type78));;
				if ((_157321_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_157321_t, 21);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1b79e3e7a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d21e1361_Ptr> _157921_t = _1d21e8357_buildPtr(_self_, (*(_155829_declKind)).cast_ptr<_1d05e1048_PtrTypeDecl>(&__jule_any_type77));;
				if ((_157921_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_157921_t, 26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1b79e3ee1:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d21dd759_Slc> _158521_t = _1d21e8665_buildSlc(_self_, (*(_155829_declKind)).cast_ptr<_1d05e0971_SlcTypeDecl>(&__jule_any_type76));;
				if ((_158521_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_158521_t, 22);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1b79e4057:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d21e0904_Arr> _159121_t = _1d21e8973_buildArr(_self_, (*(_155829_declKind)).cast_ptr<_1d05e171e_ArrTypeDecl>(&__jule_any_type75));;
				if ((_159121_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_159121_t, 25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1b79e40bd:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d21ded10_Map> _159721_t = _1d21e8c81_buildMap(_self_, (*(_155829_declKind)).cast_ptr<_1d05e1e28_MapTypeDecl>(&__jule_any_type79));;
				if ((_159721_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_159721_t, 24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1b79e4909:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d21de2d7_Tuple> _160321_t = _1d21e908e_buildTuple(_self_, (*(_155829_declKind)).cast_ptr<_1d05e0c5c_TupleTypeDecl>(&__jule_any_type80));;
				if ((_160321_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_160321_t, 23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b79e4970:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1d0626e6e_FnIns> _160921_t = _1d21e96aa_buildFn(_self_, (*(_155829_declKind)).cast_ptr<_1d0600b90_FnDecl>(&__jule_any_type14));;
				if ((_160921_t != nullptr)) {
					_155917_kind=jule::Trait<_1d21d18d4_Kind>(_160921_t, 1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1b79e49d6:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait<_1d21d18d4_Kind> _161521_t = _1d21e99b8_buildByNamespace(_self_, (*(_155829_declKind)).cast_ptr<_1d05e0289_NamespaceTypeDecl>(&__jule_any_type96));;
				if ((_161521_t != nullptr)) {
					_155917_kind=_161521_t;
				};
			}
		}
		else {
			_case_begin_1b79e3d26:;
			{
				_1d21e3880_pushErr(_self_, (*(_self_))._field_errorToken, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b79e3c38:;
	};
	if ((_155917_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155917_kind };
		
		if (_match_expr.type_is(true, 19)) {
			_case_begin_1b7a029c2:;
			{
				return _155917_kind.cast_ptr<_1d21d1d46_TypeKind>(19);;
			}
		}
		else {
			_case_begin_1b79eee20:;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _163021_tk = jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=_155917_kind});;
				{
					auto &_match_expr{ _155917_kind };
					
					if (_match_expr.type_is(true, 20)) {
						_case_begin_1b7a00d11:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									(*((*(_self_))._field_ignoredGenerics))=jule::append((*((*(_self_))._field_ignoredGenerics)),jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>>::make({_163021_tk}));
								};
							};
						}
					}
					else if (_match_expr.type_is(true, 0)) {
						_case_begin_1b7a00d88:;
						{
							jule::Ptr<_1d0611bd4_StructIns> _163721_s = _155917_kind.cast_ptr<_1d0611bd4_StructIns>(0);;
							if (((_163721_s.get()._field_Decl != nullptr) && _163721_s.get()._field_Decl.get()._field_Binded)) {
								_163021_tk.get()._field_BindIdent=_163721_s.get()._field_Decl.get()._field_Ident;
							};
						}
					}
					_match_end_1b7a00c01:;
				};
				return _163021_tk;;
			}
		}
		_match_end_1b79e4ca0:;
	};
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d21ea0d4_checkDecl(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d05de563_TypeDecl>* _164633_decl) {
	jule::Ptr<_22be1281d_Token> _164817_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*(_164633_decl)).get()._field_Token;
	jule::Ptr<_1d21d1d46_TypeKind> _165117_kind = _1d21e9cc6_build(_self_, &((*(_164633_decl)).get()._field_Kind));;
	(*(_self_))._field_errorToken=_164817_errorToken;
	return _165117_kind;;
}



inline void _1d21ea359_check(_1d21e3187_typeChecker* _self_, jule::Ptr<_1d21d8be9_TypeSymbol>* _165729_t) {
	if (((*(_165729_t)).get()._field_Decl == nullptr)) {
		return;;
	};
	jule::Ptr<_1d21d1d46_TypeKind> _166117_kind = _1d21ea0d4_checkDecl(_self_, &((*(_165729_t)).get()._field_Decl));;
	if ((_166117_kind == nullptr)) {
		_1d21d927c_removeKind((*(_165729_t)).ptr());
		return;;
	};
	(*(_165729_t)).get()._field_Kind=_166117_kind;
}







std::ostream &operator<<(std::ostream &_Stream, _1d21e3187_typeChecker _Src) {
	_Stream << "typeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "rootLookup:" << _Src._field_rootLookup << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "refers:" << _Src._field_refers << ", ";
	_Stream << "errorToken:" << _Src._field_errorToken << ", ";
	_Stream << "ignoreGenerics:" << _Src._field_ignoreGenerics << ", ";
	_Stream << "ignoredGenerics:" << _Src._field_ignoredGenerics << ", ";
	_Stream << "useGenerics:" << _Src._field_useGenerics << ", ";
	_Stream << "notPlain:" << _Src._field_notPlain << ", ";
	_Stream << "disBuiltin:" << _Src._field_disBuiltin << ", ";
	_Stream << "selection:" << _Src._field_selection << ", ";
	_Stream << "ownerAlias:" << _Src._field_ownerAlias << ", ";
	_Stream << "bannedGenerics:" << _Src._field_bannedGenerics << ", ";
	_Stream << "inscatch:" << _Src._field_inscatch;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool static__1d21ea9b9_prim(jule::Str* _167321_ident, jule::Ptr<_1d21d9568_Prim> _167333_t) {
	return (_167333_t.get()._field_Kind == (*(_167321_ident)));;
}



inline jule::Bool static__1d21ead0a_exist(jule::Str* _167722_ident, jule::Ptr<_1d21d1d46_TypeKind>* _167739_k) {
	{
		
		if ((_1d21d4563_Prim((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a069c6:;
			{
				return static__1d21ea9b9_prim(_167722_ident, _1d21d4563_Prim((*(_167739_k)).ptr()));;
			}
		}
		else if ((_1d21d47c7_Sptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a06a3c:;
			{
				jule::Ptr<_1d21dccec_Sptr> _168221_sptr = _1d21d47c7_Sptr((*(_167739_k)).ptr());;
				return static__1d21ead0a_exist(_167722_ident, &(_168221_sptr.get()._field_Elem));;
			}
		}
		else if ((_1d21d4a3b_Ptr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a06aa3:;
			{
				jule::Ptr<_1d21e1361_Ptr> _168521_ptr = _1d21d4a3b_Ptr((*(_167739_k)).ptr());;
				return static__1d21ead0a_exist(_167722_ident, &(_168521_ptr.get()._field_Elem));;
			}
		}
		else if ((_1d21d54dc_Slc((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a06ce5:;
			{
				jule::Ptr<_1d21dd759_Slc> _168821_slc = _1d21d54dc_Slc((*(_167739_k)).ptr());;
				return static__1d21ead0a_exist(_167722_ident, &(_168821_slc.get()._field_Elem));;
			}
		}
		else if ((_1d21d5278_Arr((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a06d5b:;
			{
				jule::Ptr<_1d21e0904_Arr> _169121_arr = _1d21d5278_Arr((*(_167739_k)).ptr());;
				return static__1d21ead0a_exist(_167722_ident, &(_169121_arr.get()._field_Elem));;
			}
		}
		else if ((_1d21d5e8d_Map((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a06dd3:;
			{
				jule::Ptr<_1d21ded10_Map> _169421_m = _1d21d5e8d_Map((*(_167739_k)).ptr());;
				return (static__1d21ead0a_exist(_167722_ident, &(_169421_m.get()._field_Key)) || static__1d21ead0a_exist(_167722_ident, &(_169421_m.get()._field_Val)));;
			}
		}
		else if ((_1d21d59b5_Struct((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a06e5a:;
			{
				jule::Ptr<_1d0611bd4_StructIns> _169821_s = _1d21d59b5_Struct((*(_167739_k)).ptr());;
				{
					auto expr = &(_169821_s.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7a0c955:;
					if (it != expr_end) {
						jule::Ptr<_1d21d05b4_InsGeneric> _169925_g = *it;
						{
							if (static__1d21ead0a_exist(_167722_ident, &(_169925_g.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b7a0c955:;
						++it;
						goto _iter_begin_1b7a0c955;
					}
					_iter_end_1b7a0c955:;
				};
				return false;;
			}
		}
		else if ((_1d21d5751_Fn((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a070e2:;
			{
				jule::Ptr<_1d0626e6e_FnIns> _170621_f = _1d21d5751_Fn((*(_167739_k)).ptr());;
				{
					auto expr = &(_170621_f.get()._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7a0e0a5:;
					if (it != expr_end) {
						jule::Ptr<_1d06260a0_ParamIns> _170725_p = *it;
						{
							if (_1d06230ad_IsSelf(_170725_p.get()._field_Decl.ptr())) {
								goto _iter_next_1b7a0e0a5;
							};
							if (static__1d21ead0a_exist(_167722_ident, &(_170725_p.get()._field_Kind))) {
								return true;;
							};
						}
						_iter_next_1b7a0e0a5:;
						++it;
						goto _iter_begin_1b7a0e0a5;
					}
					_iter_end_1b7a0e0a5:;
				};
				if ((_170621_f.get()._field_Result != nullptr)) {
					return static__1d21ead0a_exist(_167722_ident, &(_170621_f.get()._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1d21d6202_Tup((*(_167739_k)).ptr()) != nullptr)) {
			_case_begin_1b7a07158:;
			{
				jule::Ptr<_1d21de2d7_Tuple> _172021_tup = _1d21d6202_Tup((*(_167739_k)).ptr());;
				{
					auto expr = &(_172021_tup.get()._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7a11140:;
					if (it != expr_end) {
						jule::Ptr<_1d21d1d46_TypeKind> _172125_t = *it;
						{
							if (static__1d21ead0a_exist(_167722_ident, &(_172125_t))) {
								return true;;
							};
						}
						_iter_next_1b7a11140:;
						++it;
						goto _iter_begin_1b7a11140;
					}
					_iter_end_1b7a11140:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1b7a068a5:;
			{
				return false;;
			}
		}
		_match_end_1b7a067d9:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d21ea579_identTypeLookup _Src) {
	_Stream << "identTypeLookup{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2592eb5_FileInfo _Src) {
	_Stream << "FileInfo{";
	_Stream << "Ast:" << _Src._field_Ast << ", ";
	_Stream << "Errors:" << _Src._field_Errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d25dca59_stmt _Src) {
	_Stream << "stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _1d25dda16_stop(_1d25dd384_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1d25ddc7a_stopped(_1d25dd384_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1d25ddede_finished(_1d25dd384_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1d25de253_isLastSt(_1d25dd384_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1d25de572_pushErr(_1d25dd384_scopeParser* _self_, jule::Ptr<_22be1281d_Token> _19126_token, jule::Str _19141_fmt) {
	_1d260a505_pushErr((*(_self_))._field_p.ptr(), _19126_token, _19141_fmt, jule::Slice<jule::Any>());
}



inline void _1d25de891_pushSuggestion(_1d25dd384_scopeParser* _self_, jule::Str _19633_fmt, jule::Slice<jule::Any> _19646_args) {
	_1d260a824_pushSuggestion((*(_self_))._field_p.ptr(), _19633_fmt, _19646_args);
}



inline void _1d25deb16_insertAsNext(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _20036_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1d25dca59_stmt>(_1d25dca59_stmt{._field_tokens=(*(_20036_tokens)), });
}



inline jule::Ptr<_1d25dca59_stmt> _1d25ded7a_next(_1d25dd384_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1d05ee199_ScopeTree> _1d25e0232_buildScope(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _21034_tokens, jule::Ptr<_22be1281d_Token> _21056_end) {
	jule::Ptr<_1d05ee199_ScopeTree> _21117_s = _1d25db959_newScope();;
	_21117_s.get()._field_Parent=(*(_self_))._field_s;
	_21117_s.get()._field_End=_21056_end;
	_1d25dd384_scopeParser _21417_ssp = _1d25dd384_scopeParser{._field_p=(*(_self_))._field_p, };;
	_1d25e8e1c_build(&_21417_ssp, _21034_tokens, &(_21117_s));
	return _21117_s;;
}



inline jule::Ptr<_1d0601b6e_VarDecl> _1d25e0540_buildVarSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _22134_tokens) {
	jule::Ptr<_1d0601b6e_VarDecl> _22217_v = _1d260d041_buildVar((*(_self_))._field_p, (*(_22134_tokens)));;
	_22217_v.get()._field_Scope=(*(_self_))._field_s;
	return _22217_v;;
}



inline jule::Ptr<_1d0602026_RetSt> _1d25e084d_buildRetSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _22733_tokens) {
	jule::Ptr<_1d0602026_RetSt> _22817_st = jule::new_ptr<_1d0602026_RetSt>(_1d0602026_RetSt{._field_Token=_22733_tokens[0LL], });;
	if ((_22733_tokens.len() > 1LL)) {
		_22733_tokens=_22733_tokens.slice(1LL);
		_22817_st.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, &(_22733_tokens));
	};
	return _22817_st;;
}



inline jule::Ptr<_1d0602686_Iter> _1d25e0b5b_buildWhileNextIter(_1d25dd384_scopeParser* _self_, jule::Ptr<_1d25dca59_stmt>* _23842_s) {
	jule::Ptr<_1d0602686_Iter> _23917_it = jule::new_ptr<_1d0602686_Iter>(_1d0602686_Iter{._field_Token=(*(_23842_s)).get()._field_tokens[0LL], });;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _24217_tokens = (*(_23842_s)).get()._field_tokens.slice(1LL);;
	jule::Ptr<_1d0602e5b_WhileKind> _24317_kind = jule::new_ptr<_1d0602e5b_WhileKind>();;
	if ((_24217_tokens.len() > 0LL)) {
		_24317_kind.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, &(_24217_tokens));
	};
	if (_1d25de253_isLastSt(_self_)) {
		_1d25de572_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	_24217_tokens=_1d25ded7a_next(_self_).get()._field_tokens;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _25517_stTokens = _1d2604b70_getBlockExpr(&(_24217_tokens));;
	if ((_25517_stTokens.len() > 0LL)) {
		jule::Ptr<_1d25dca59_stmt> _25721_stmt = jule::new_ptr<_1d25dca59_stmt>(_1d25dca59_stmt{._field_tokens=_25517_stTokens, ._field_terminated=(*(_23842_s)).get()._field_terminated});;
		_24317_kind.get()._field_NextToken=_25517_stTokens[0LL];
		_24317_kind.get()._field_Next=_1d25e8aed_buildSt(_self_, &(_25721_stmt));
	};
	jule::I64 _26517_i = _25517_stTokens.len();;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _26617_blockTokens = _1d2607c3e_range(&(_26517_i), jule::Str("{", 1), jule::Str("}", 1), &(_24217_tokens));;
	if ((_26617_blockTokens == nullptr)) {
		_1d25dda16_stop(_self_);
		_1d25de572_pushErr(_self_, _23917_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1d25de891_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_26517_i < _24217_tokens.len())) {
		_1d25de572_pushErr(_self_, _24217_tokens[_26517_i], jule::Str("invalid syntax", 14));
	};
	_23917_it.get()._field_Scope=_1d25e0232_buildScope(_self_, &(_26617_blockTokens), _24217_tokens[(_26517_i - 1LL)]);
	_23917_it.get()._field_Kind=jule::Any(_24317_kind, &__jule_any_type38);
	return _23917_it;;
}



inline jule::Ptr<_1d0602e5b_WhileKind> _1d25e0e69_buildWhileIterKind(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _28342_tokens) {
	return jule::new_ptr<_1d0602e5b_WhileKind>(_1d0602e5b_WhileKind{._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, _28342_tokens), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d25e1277_getRangeKindKeysTokens(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _28946_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _29018_vars;;
	jule::Slice<_22ba3c6bd_Log> _29024_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(_28946_toks, static_cast<jule::U64>(7LLU), true);
		_29018_vars = __jule_assign_result.__jule_result_arg0;
		_29024_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_29024_errs);
	return _29018_vars;;
}



inline jule::Ptr<_1d0601b6e_VarDecl> _1d25e1585_buildRangeKindKey(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _29541_tokens) {
	if (((*(_29541_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1d0601b6e_VarDecl> _29917_key = jule::new_ptr<_1d0601b6e_VarDecl>(_1d0601b6e_VarDecl{._field_Token=(*(_29541_tokens))[0LL], });;
	if ((_29917_key.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_29917_key.get()._field_Mutable=true;
		if (((*(_29541_tokens)).len() == 1LL)) {
			_1d25de572_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		};
		_29917_key.get()._field_Token=(*(_29541_tokens))[1LL];
	} else if (((*(_29541_tokens)).len() > 1LL)) {
		_1d25de572_pushErr(_self_, (*(_29541_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	if ((_29917_key.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d25de572_pushErr(_self_, _29917_key.get()._field_Token, jule::Str("invalid syntax", 14));
		_1d25de891_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_29917_key.get()._field_Ident=_29917_key.get()._field_Token.get()._field_Kind;
	return _29917_key;;
}



inline jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>> _1d25e1893_buildRangeKindKeys(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>* _32042_parts) {
	jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>> _32117_keys = nullptr;;
	{
		auto expr = _32042_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ba758e:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _32221_tokens = *it;
			{
				_32117_keys = jule::alloc_for_append(_32117_keys,1);_32117_keys.__push(_1d25e1585_buildRangeKindKey(_self_, &(_32221_tokens)));;
			}
			_iter_next_1b7ba758e:;
			++it;
			goto _iter_begin_1b7ba758e;
		}
		_iter_end_1b7ba758e:;
	};
	return _32117_keys;;
}



inline void _1d25e1bd4_setupRangeKindKeysPlain(_1d25dd384_scopeParser* _self_, jule::Ptr<_1d06037ec_RangeKind>* _32847_rng, jule::Slice<jule::Ptr<_22be1281d_Token>>* _32869_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _32917_keyTokens = _1d25e1277_getRangeKindKeysTokens(_self_, _32869_tokens);;
	if ((_32917_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_32917_keyTokens.len() > 2LL)) {
		_1d25de572_pushErr(_self_, (*(_32847_rng)).get()._field_InToken, jule::Str("range variables can be maximum two", 34));
	};
	jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>> _33617_keys = _1d25e1893_buildRangeKindKeys(_self_, &(_32917_keyTokens));;
	(*(_32847_rng)).get()._field_KeyA=_33617_keys[0LL];
	if ((_33617_keys.len() > 1LL)) {
		(*(_32847_rng)).get()._field_KeyB=_33617_keys[1LL];
	};
}



inline void _1d25e2036_setupRangeKindKeysExplicit(_1d25dd384_scopeParser* _self_, jule::Ptr<_1d06037ec_RangeKind>* _34350_rng, jule::Slice<jule::Ptr<_22be1281d_Token>>* _34372_tokens) {
	jule::I64 _34417_i = 0LL;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _34517_rang = _1d2607c3e_range(&(_34417_i), jule::Str("(", 1), jule::Str(")", 1), _34372_tokens);;
	if ((_34417_i < (*(_34372_tokens)).len())) {
		_1d25de572_pushErr(_self_, (*(_34350_rng)).get()._field_InToken, jule::Str("invalid syntax", 14));
	};
	_1d25e1bd4_setupRangeKindKeysPlain(_self_, _34350_rng, &(_34517_rang));
}



inline void _1d25e2366_setupRangeKindKeys(_1d25dd384_scopeParser* _self_, jule::Ptr<_1d06037ec_RangeKind>* _35242_rng, jule::Slice<jule::Ptr<_22be1281d_Token>>* _35264_tokens) {
	if (((*(_35264_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(2LLU))) {
		if ((!(*(_35264_tokens))[0LL].get()._field_Kind.equal("(", 1))) {
			_1d25de572_pushErr(_self_, (*(_35264_tokens))[0LL], jule::Str("invalid syntax", 14));
			return;;
		};
		_1d25e2036_setupRangeKindKeysExplicit(_self_, _35242_rng, _35264_tokens);
		return;;
	};
	_1d25e1bd4_setupRangeKindKeysPlain(_self_, _35242_rng, _35264_tokens);
}



inline jule::Ptr<_1d06037ec_RangeKind> _1d25e27b7_buildRangeIterKind(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _36442_var_tokens, jule::Slice<jule::Ptr<_22be1281d_Token>>* _36514_exprTokens, jule::Ptr<_22be1281d_Token>* _36541_inToken) {
	jule::Ptr<_1d06037ec_RangeKind> _36617_rng = jule::new_ptr<_1d06037ec_RangeKind>(_1d06037ec_RangeKind{._field_InToken=(*(_36541_inToken)), });;
	if (((*(_36514_exprTokens)).len() == 0LL)) {
		_1d25de572_pushErr(_self_, _36617_rng.get()._field_InToken, jule::Str("expression missing", 18));
		return _36617_rng;;
	};
	_36617_rng.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, _36514_exprTokens);
	if (((*(_36442_var_tokens)).len() > 0LL)) {
		_1d25e2366_setupRangeKindKeys(_self_, &(_36617_rng), _36442_var_tokens);
	};
	return _36617_rng;;
}



inline jule::Any _1d25e2b6e_buildCommonIterKind(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _38043_tokens, jule::Ptr<_22be1281d_Token>* _38062_err_tok) {
	jule::I64 _38117_braceN = 0LL;;
	{
		auto expr = _38043_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bb1db2:;
		if (it != expr_end) {
			jule::I64 _38214_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _38221_tok = *it;
			{
				if ((_38221_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _38221_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7bb33be:;
							{
								(_38117_braceN)++;
								goto _iter_next_1b7bb1db2;
							}
						}
						else {
							_case_begin_1b7bb2ec3:;
							{
								(_38117_braceN)--;
							}
						}
						_match_end_1b7bb2cb4:;
					};
				};
				if ((_38117_braceN != 0LL)) {
					goto _iter_next_1b7bb1db2;
				};
				{
					auto &_match_expr{ _38221_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(14LLU)) {
						_case_begin_1b7bb2ac7:;
						{
							jule::Slice<jule::Ptr<_22be1281d_Token>> _39925_declTokens = (*(_38043_tokens)).slice(0LL, _38214_i);;
							jule::Slice<jule::Ptr<_22be1281d_Token>> _40025_exprTokens = (*(_38043_tokens)).slice((_38214_i + 1LL));;
							return jule::Any(_1d25e27b7_buildRangeIterKind(_self_, &(_39925_declTokens), &(_40025_exprTokens), &(_38221_tok)), &__jule_any_type40);;
						}
					}
					_match_end_1b7bb3bb6:;
				};
			}
			_iter_next_1b7bb1db2:;
			++it;
			_38214_i++;
			goto _iter_begin_1b7bb1db2;
		}
		_iter_end_1b7bb1db2:;
	};
	return jule::Any(_1d25e0e69_buildWhileIterKind(_self_, _38043_tokens), &__jule_any_type38);;
}



inline jule::Ptr<_1d0602686_Iter> _1d25e2e7c_buildCommonIter(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _40738_tokens) {
	jule::Ptr<_1d0602686_Iter> _40817_it = jule::new_ptr<_1d0602686_Iter>(_1d0602686_Iter{._field_Token=_40738_tokens[0LL], });;
	_40738_tokens=_40738_tokens.slice(1LL);
	if ((_40738_tokens.len() == 0LL)) {
		_1d25dda16_stop(_self_);
		_1d25de572_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1d25de891_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _41817_exprTokens = _1d2604b70_getBlockExpr(&(_40738_tokens));;
	if ((_41817_exprTokens.len() > 0LL)) {
		_40817_it.get()._field_Kind=_1d25e2b6e_buildCommonIterKind(_self_, &(_41817_exprTokens), &(_40817_it.get()._field_Token));
	};
	jule::I64 _42217_i = _41817_exprTokens.len();;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _42317_scopeTokens = _1d2607c3e_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_40738_tokens));;
	if ((_42317_scopeTokens == nullptr)) {
		_1d25dda16_stop(_self_);
		_1d25de572_pushErr(_self_, _40817_it.get()._field_Token, jule::Str("body is not exist", 17));
		_1d25de891_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_42217_i < _40738_tokens.len())) {
		_1d25de572_pushErr(_self_, _40738_tokens[_42217_i], jule::Str("invalid syntax", 14));
	};
	_40817_it.get()._field_Scope=_1d25e0232_buildScope(_self_, &(_42317_scopeTokens), _40738_tokens[(_42217_i - 1LL)]);
	return _40817_it;;
}



inline jule::Ptr<_1d0602686_Iter> _1d25e328a_buildIterSt(_1d25dd384_scopeParser* _self_, jule::Ptr<_1d25dca59_stmt>* _43735_st) {
	if ((*(_43735_st)).get()._field_terminated) {
		return _1d25e0b5b_buildWhileNextIter(_self_, _43735_st);;
	};
	return _1d25e2e7c_buildCommonIter(_self_, (*(_43735_st)).get()._field_tokens);;
}



inline jule::Ptr<_1d0603ba4_BreakSt> _1d25e3598_buildBreakSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _44436_tokens) {
	jule::Ptr<_1d0603ba4_BreakSt> _44517_brk = jule::new_ptr<_1d0603ba4_BreakSt>(_1d0603ba4_BreakSt{._field_Token=(*(_44436_tokens))[0LL], });;
	if (((*(_44436_tokens)).len() > 1LL)) {
		if (((*(_44436_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1d25de572_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1d25de891_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_44517_brk.get()._field_Label=(*(_44436_tokens))[1LL];
			if (((*(_44436_tokens)).len() > 2LL)) {
				_1d25de572_pushErr(_self_, (*(_44436_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _44517_brk;;
}



inline jule::Ptr<_1d060405b_ContSt> _1d25e38a6_buildContSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _46235_tokens) {
	jule::Ptr<_1d060405b_ContSt> _46317_cont = jule::new_ptr<_1d060405b_ContSt>(_1d060405b_ContSt{._field_Token=(*(_46235_tokens))[0LL], });;
	if (((*(_46235_tokens)).len() > 1LL)) {
		if (((*(_46235_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1d25de572_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			_1d25de891_pushSuggestion(_self_, jule::Str("write a label identifier because label expected", 47), jule::Slice<jule::Any>());
		} else {
			_46317_cont.get()._field_Label=(*(_46235_tokens))[1LL];
			if (((*(_46235_tokens)).len() > 2LL)) {
				_1d25de572_pushErr(_self_, (*(_46235_tokens))[1LL], jule::Str("invalid syntax", 14));
			};
		};
	};
	return _46317_cont;;
}



inline jule::Ptr<_1d06044ce_If> _1d25e3bb4_buildIf(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _48031_tokens) {
	jule::Ptr<_1d06044ce_If> _48117_model = jule::new_ptr<_1d06044ce_If>(_1d06044ce_If{._field_Token=(*(_48031_tokens))[0LL], });;
	(*(_48031_tokens))=(*(_48031_tokens)).slice(1LL);
	jule::Slice<jule::Ptr<_22be1281d_Token>> _48517_exprTokens = _1d2604b70_getBlockExpr(_48031_tokens);;
	jule::I64 _48617_i = 0LL;;
	if ((_48517_exprTokens.len() == 0LL)) {
		_1d25de572_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("expression missing", 18));
	} else {
		_48617_i=static_cast<jule::I64>(_48517_exprTokens.len());
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _49217_scopeTokens = _1d2607c3e_range(&(_48617_i), jule::Str("{", 1), jule::Str("}", 1), _48031_tokens);;
	if ((_49217_scopeTokens == nullptr)) {
		_1d25dda16_stop(_self_);
		_1d25de572_pushErr(_self_, _48117_model.get()._field_Token, jule::Str("body is not exist", 17));
		_1d25de891_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22be1281d_Token> _49917_end = (*(_48031_tokens))[(_48617_i - 1LL)];;
	if ((_48617_i < (*(_48031_tokens)).len())) {
		if (((*(_48031_tokens))[_48617_i].get()._field_Id == static_cast<jule::U64>(16LLU))) {
			(*(_48031_tokens))=(*(_48031_tokens)).slice(_48617_i);
		} else {
			_1d25de572_pushErr(_self_, (*(_48031_tokens))[_48617_i], jule::Str("invalid syntax", 14));
			(*(_48031_tokens))=nullptr;
		};
	};
	_48117_model.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, &(_48517_exprTokens));
	_48117_model.get()._field_Scope=_1d25e0232_buildScope(_self_, &(_49217_scopeTokens), _49917_end);
	return _48117_model;;
}



inline jule::Ptr<_1d0604886_Else> _1d25e3ec2_buildElse(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _51333_tokens) {
	jule::Ptr<_1d0604886_Else> _51417_els = jule::new_ptr<_1d0604886_Else>(_1d0604886_Else{._field_Token=(*(_51333_tokens))[0LL], });;
	(*(_51333_tokens))=(*(_51333_tokens)).slice(1LL);
	jule::I64 _51817_i = 0LL;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _51917_scopeTokens = _1d2607c3e_range(&(_51817_i), jule::Str("{", 1), jule::Str("}", 1), _51333_tokens);;
	if ((_51917_scopeTokens == nullptr)) {
		if ((_51817_i < (*(_51333_tokens)).len())) {
			_1d25de572_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("else's cannot have any expression", 33));
		} else {
			_1d25dda16_stop(_self_);
			_1d25de572_pushErr(_self_, _51417_els.get()._field_Token, jule::Str("body is not exist", 17));
			_1d25de891_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_51817_i < (*(_51333_tokens)).len())) {
		_1d25de572_pushErr(_self_, (*(_51333_tokens))[_51817_i], jule::Str("invalid syntax", 14));
	};
	_51417_els.get()._field_Scope=_1d25e0232_buildScope(_self_, &(_51917_scopeTokens), (*(_51333_tokens))[(_51817_i - 1LL)]);
	return _51417_els;;
}



inline jule::Ptr<_1d0604d09_Conditional> _1d25e42d0_buildIfElseChain(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _53739_tokens) {
	jule::Ptr<_1d0604d09_Conditional> _53817_chain = jule::new_ptr<_1d0604d09_Conditional>(_1d0604d09_Conditional{._field_Head=_1d25e3bb4_buildIf(_self_, &(_53739_tokens)), });;
	if ((_53817_chain.get()._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_53739_tokens.len() != 0LL)) {
		{
			if ((_53739_tokens[0LL].get()._field_Id != static_cast<jule::U64>(16LLU))) {
				goto _iter_end_1b7bcb8b0;
			};
			if (((_53739_tokens.len() > 1LL) && (_53739_tokens[1LL].get()._field_Id == static_cast<jule::U64>(15LLU)))) {
				_53739_tokens=_53739_tokens.slice(1LL);
				jule::Ptr<_1d06044ce_If> _55025_elif = _1d25e3bb4_buildIf(_self_, &(_53739_tokens));;
				_53817_chain.get()._field_Tail = jule::alloc_for_append(_53817_chain.get()._field_Tail,1);_53817_chain.get()._field_Tail.__push(_55025_elif);;
				goto _iter_next_1b7bcb8b0;
			};
			_53817_chain.get()._field_Default=_1d25e3ec2_buildElse(_self_, &(_53739_tokens));
			goto _iter_end_1b7bcb8b0;
		}
	_iter_next_1b7bcb8b0:;
	}
	_iter_end_1b7bcb8b0:;;
	return _53817_chain;;
}



inline jule::Ptr<_1d05e36dd_Expr> _1d25e45dd_buildCoCallSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _56036_tokens) {
	jule::Ptr<_22be1281d_Token> _56113_token = _56036_tokens[0LL];;
	_56036_tokens=_56036_tokens.slice(1LL);
	jule::Ptr<_1d05e36dd_Expr> _56317_e = _1d260ab32_buildExpr((*(_self_))._field_p, &(_56036_tokens));;
	if ((_56317_e == nullptr)) {
		return _56317_e;;
	};
	{
		auto &_match_expr{ _56317_e.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1b7bd0919:;
			{
				_56317_e.get()._field_Kind.cast_ptr<_1d05e7604_FnCallExpr>(&__jule_any_type111).get()._field_IsCo=true;
			}
		}
		else {
			_case_begin_1b7bd0551:;
			{
				_1d25de572_pushErr(_self_, _56113_token, jule::Str("statement must have function call expression", 44));
			}
		}
		_match_end_1b7bd04eb:;
	};
	return _56317_e;;
}



inline jule::Ptr<_1d05ebc68_GotoSt> _1d25e48eb_buildGotoSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _57635_tokens) {
	jule::Ptr<_1d05ebc68_GotoSt> _57717_gt = jule::new_ptr<_1d05ebc68_GotoSt>(_1d05ebc68_GotoSt{._field_Token=(*(_57635_tokens))[0LL], });;
	if (((*(_57635_tokens)).len() == 1LL)) {
		_1d25de572_pushErr(_self_, _57717_gt.get()._field_Token, jule::Str("missing label identifier for goto statement", 43));
		return nullptr;;
	} else if (((*(_57635_tokens)).len() > 2LL)) {
		_1d25de572_pushErr(_self_, (*(_57635_tokens))[2LL], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_22be1281d_Token> _58617_identToken = (*(_57635_tokens))[1LL];;
	if ((_58617_identToken.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d25de572_pushErr(_self_, _58617_identToken, jule::Str("invalid syntax", 14));
		_1d25de891_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return _57717_gt;;
	};
	_57717_gt.get()._field_Label=_58617_identToken;
	return _57717_gt;;
}



inline jule::Ptr<_1d05ec054_FallSt> _1d25e4c09_buildFallSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _59635_tokens) {
	jule::Ptr<_1d05ec054_FallSt> _59717_fll = jule::new_ptr<_1d05ec054_FallSt>(_1d05ec054_FallSt{._field_Token=(*(_59635_tokens))[0LL]});;
	if (((*(_59635_tokens)).len() > 1LL)) {
		_1d25de572_pushErr(_self_, (*(_59635_tokens))[1LL], jule::Str("invalid syntax", 14));
	};
	return _59717_fll;;
}



inline jule::Ptr<_1d06054d0_TypeAliasDecl> _1d25e5017_buildTypeAliasSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _60640_tokens) {
	jule::Ptr<_1d06054d0_TypeAliasDecl> _60717_tad = _1d260c22c_buildTypeAliasDecl((*(_self_))._field_p, _60640_tokens);;
	_60717_tad.get()._field_Scope=(*(_self_))._field_s;
	return _60717_tad;;
}



inline void _1d25e5479_pushCaseExpr(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _61235_tokens, jule::Ptr<_22be1281d_Token> _61257_token, jule::Bool _6139_typeMatch, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>* _61331_exprs) {
	if ((_61235_tokens.len() == 0LL)) {
		return;;
	};
	if (_6139_typeMatch) {
		jule::I64 _61921_i = 0LL;;
		jule::Ptr<_1d05de563_TypeDecl> _62022_t;;
		jule::Bool _62025_ok = false;;
		({
			__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &(_61235_tokens), (&(_61921_i)), true);
			_62022_t = __jule_assign_result.__jule_result_arg0;
			_62025_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62025_ok) {
			(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(jule::new_ptr<_1d05e36dd_Expr>(_1d05e36dd_Expr{._field_Token=_61235_tokens[0LL], ._field_End=_61235_tokens[(_61235_tokens.len() - 1LL)], ._field_Kind=jule::Any(_62022_t, &__jule_any_type94)}));;
			if ((_61921_i < _61235_tokens.len())) {
				_1d25de572_pushErr(_self_, _61235_tokens[_61921_i], jule::Str("invalid syntax", 14));
			};
		};
		return;;
	};
	(*(_61331_exprs)) = jule::alloc_for_append((*(_61331_exprs)),1);(*(_61331_exprs)).__push(_1d260ab32_buildExpr((*(_self_))._field_p, &(_61235_tokens)));;
}



inline jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _1d25e58ca_buildCaseExprs(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _63638_tokens, jule::Ptr<_22be1281d_Token>* _63661_colon, jule::Bool _63676_typeMatch) {
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _63717_exprs = jule::Slice<jule::Ptr<_1d05e36dd_Expr>>::alloc(0LL, 1LL);;
	jule::I64 _63917_braceN = 0LL;;
	jule::I64 _64017_j = 0LL;;
	{
		auto expr = _63638_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7bda6e3:;
		if (it != expr_end) {
			jule::I64 _64114_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _64121_tok = *it;
			{
				if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _64121_tok.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
							_case_begin_1b7bdc8e3:;
							{
								(_63917_braceN)++;
							}
						}
						else {
							_case_begin_1b7bdc4e7:;
							{
								(_63917_braceN)--;
							}
						}
						_match_end_1b7bdc2d8:;
					};
					goto _iter_next_1b7bda6e3;
				} else if ((_63917_braceN != 0LL)) {
					goto _iter_next_1b7bda6e3;
				};
				{
					
					if (((_64121_tok.get()._field_Id == static_cast<jule::U64>(6LLU)) && _64121_tok.get()._field_Kind.equal("|", 1))) {
						_case_begin_1b7bdce10:;
						{
							jule::Slice<jule::Ptr<_22be1281d_Token>> _65721_exprTokens = (*(_63638_tokens)).slice(_64017_j, _64114_i);;
							if ((_65721_exprTokens.len() == 0LL)) {
								_1d25de572_pushErr(_self_, _64121_tok, jule::Str("expression missing", 18));
							} else {
								_1d25e5479_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							};
							_64017_j=static_cast<jule::I64>((_64114_i + 1LL));
						}
					}
					else if ((_64121_tok.get()._field_Id == static_cast<jule::U64>(10LLU))) {
						_case_begin_1b7bdce87:;
						{
							(*(_63661_colon))=_64121_tok;
							_1d25e5479_pushCaseExpr(_self_, (*(_63638_tokens)).slice(_64017_j, _64114_i), _64121_tok, _63676_typeMatch, &(_63717_exprs));
							(*(_63638_tokens))=(*(_63638_tokens)).slice((_64114_i + 1LL));
							return _63717_exprs;;
						}
					}
					_match_end_1b7bdc98c:;
				};
			}
			_iter_next_1b7bda6e3:;
			++it;
			_64114_i++;
			goto _iter_begin_1b7bda6e3;
		}
		_iter_end_1b7bda6e3:;
	};
	_1d25de572_pushErr(_self_, (*(_63638_tokens))[0LL], jule::Str("invalid syntax", 14));
	(*(_63638_tokens))=nullptr;
	return nullptr;;
}



inline jule::Ptr<_1d05ee199_ScopeTree> _1d25e5bd8_buildCaseScope(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _67638_tokens) {
	jule::I64 _67717_n = 0LL;;
	for (;;) {
		{
			jule::I64 _67921_i = 0LL;;
			jule::Slice<jule::Ptr<_22be1281d_Token>> _68022_next;;
			({
				__jule_tuple_sx_22be1281d_Token__jule_tuple_bool __jule_assign_result = _1d25dc75c_skipSt(&(_67921_i), (*(_67638_tokens)).slice(_67717_n));
				_68022_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_68022_next.len() == 0LL)) {
				goto _iter_end_1b7be1463;
			};
			jule::Ptr<_22be1281d_Token> _68417_tok = _68022_next[0LL];;
			if (((_68417_tok.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_68417_tok.get()._field_Kind.equal("|", 1)))) {
				_67717_n+=_67921_i;
				goto _iter_next_1b7be1463;
			};
			jule::Slice<jule::Ptr<_22be1281d_Token>> _68921_scopeTokens = (*(_67638_tokens)).slice(0LL, _67717_n);;
			jule::Ptr<_1d05ee199_ScopeTree> _69021_scope = _1d25e0232_buildScope(_self_, &(_68921_scopeTokens), (*(_67638_tokens))[_67717_n]);;
			(*(_67638_tokens))=(*(_67638_tokens)).slice(_67717_n);
			return _69021_scope;;
		}
	_iter_next_1b7be1463:;
	}
	_iter_end_1b7be1463:;;
	jule::Ptr<_22be1281d_Token> _69417_end;;
	if (((*(_67638_tokens)).len() > 0LL)) {
		_69417_end=(*(_67638_tokens))[((*(_67638_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1d05ee199_ScopeTree> _69817_scope = _1d25e0232_buildScope(_self_, _67638_tokens, _69417_end);;
	(*(_67638_tokens))=nullptr;
	return _69817_scope;;
}



inline __jule_tuple_x_1d0605953_Case__jule_tuple_bool _1d25e6090_buildCase(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _70333_tokens, jule::Bool _70351_typeMatch) {
	__jule_tuple_x_1d0605953_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d0605953_Case> _70417_c = jule::new_ptr<_1d0605953_Case>(_1d0605953_Case{._field_Token=(*(_70333_tokens))[0LL], });;
	(*(_70333_tokens))=(*(_70333_tokens)).slice(1LL);
	jule::Ptr<_22be1281d_Token> _70817_colon = nullptr;;
	_70417_c.get()._field_Exprs=_1d25e58ca_buildCaseExprs(_self_, _70333_tokens, &(_70817_colon), _70351_typeMatch);
	_70417_c.get()._field_Scope=_1d25e5bd8_buildCaseScope(_self_, _70333_tokens);
	if ((_70417_c.get()._field_Scope.get()._field_End == nullptr)) {
		_70417_c.get()._field_Scope.get()._field_End=_70817_colon;
	};
	jule::Bool _71413_isDefault = (_70417_c.get()._field_Exprs.len() == 0LL);;
	__jule_func_result.__jule_result_arg0 = _70417_c;
	__jule_func_result.__jule_result_arg1 = _71413_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1d0605953_Case__jule_tuple_x_1d0604886_Else _1d25e6447_buildCases(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _71833_tokens, jule::Bool _71851_typeMatch) {
	__jule_tuple_sx_1d0605953_Case__jule_tuple_x_1d0604886_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1d0605953_Case>> _71917_cases = nullptr;;
	jule::Ptr<_1d0604886_Else> _72017_def = nullptr;;
	jule::Bool _72117_defNotLast = false;;
	while ((_71833_tokens.len() > 0LL)) {
		{
			jule::Ptr<_22be1281d_Token> _72321_tok = _71833_tokens[0LL];;
			if (((_72321_tok.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_72321_tok.get()._field_Kind.equal("|", 1)))) {
				_1d25de572_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				goto _iter_end_1b7be946b;
			};
			jule::Ptr<_1d0605953_Case> _72822_c;;
			jule::Bool _72825_isDefault = false;;
			({
				__jule_tuple_x_1d0605953_Case__jule_tuple_bool __jule_assign_result = _1d25e6090_buildCase(_self_, &(_71833_tokens), _71851_typeMatch);
				_72822_c = __jule_assign_result.__jule_result_arg0;
				_72825_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_72825_isDefault) {
				_72822_c.get()._field_Token=_72321_tok;
				if ((_72017_def == nullptr)) {
					_72017_def=jule::new_ptr<_1d0604886_Else>(_1d0604886_Else{._field_Token=_72822_c.get()._field_Token, ._field_Scope=_72822_c.get()._field_Scope});
				} else {
					_1d25de572_pushErr(_self_, _72321_tok, jule::Str("invalid syntax", 14));
				};
			} else {
				_72117_defNotLast=(_72117_defNotLast || (_72017_def != nullptr));
				_71917_cases = jule::alloc_for_append(_71917_cases,1);_71917_cases.__push(_72822_c);;
			};
		}
	_iter_next_1b7be946b:;
	}
	_iter_end_1b7be946b:;;
	if (_72117_defNotLast) {
		_1d25de572_pushErr(_self_, _72017_def.get()._field_Token, jule::Str("default case should be last case", 32));
	};
	__jule_func_result.__jule_result_arg0 = _71917_cases;
	__jule_func_result.__jule_result_arg1 = _72017_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1d0606129_MatchCase> _1d25e6755_buildMatchCase(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _75237_tokens) {
	jule::Ptr<_1d0606129_MatchCase> _75317_m = jule::new_ptr<_1d0606129_MatchCase>(_1d0606129_MatchCase{._field_Token=_75237_tokens[0LL], });;
	_75237_tokens=_75237_tokens.slice(1LL);
	if (((_75237_tokens.len() > 0LL) && (_75237_tokens[0LL].get()._field_Id == static_cast<jule::U64>(9LLU)))) {
		_75317_m.get()._field_TypeMatch=true;
		_75237_tokens=_75237_tokens.slice(1LL);
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _76317_exprTokens = _1d2604b70_getBlockExpr(&(_75237_tokens));;
	if ((_76317_exprTokens.len() > 0LL)) {
		_75317_m.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, &(_76317_exprTokens));
	} else if (_75317_m.get()._field_TypeMatch) {
		_1d25de572_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("expression missing", 18));
	};
	jule::I64 _77017_i = _76317_exprTokens.len();;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _77117_blockToks = _1d2607c3e_range(&(_77017_i), jule::Str("{", 1), jule::Str("}", 1), &(_75237_tokens));;
	if ((_77117_blockToks == nullptr)) {
		_1d25dda16_stop(_self_);
		_1d25de572_pushErr(_self_, _75317_m.get()._field_Token, jule::Str("body is not exist", 17));
		_1d25de891_pushSuggestion(_self_, jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_77017_i < _75237_tokens.len())) {
		_1d25de572_pushErr(_self_, _75237_tokens[_77017_i], jule::Str("invalid syntax", 14));
	};
	_75317_m.get()._field_End=_75237_tokens[(_77017_i - 1LL)];
	({
		__jule_tuple_sx_1d0605953_Case__jule_tuple_x_1d0604886_Else __jule_assign_result = _1d25e6447_buildCases(_self_, _77117_blockToks, _75317_m.get()._field_TypeMatch);
		_75317_m.get()._field_Cases = __jule_assign_result.__jule_result_arg0;
		_75317_m.get()._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _75317_m;;
}



inline jule::Ptr<_1d05ee199_ScopeTree> _1d25e6a63_buildScopeSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _78535_tokens) {
	jule::Bool _78617_isUnsafe = false;;
	jule::Bool _78717_isDeferred = false;;
	jule::Ptr<_22be1281d_Token> _78817_token = _78535_tokens[0LL];;
	if ((_78817_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_78617_isUnsafe=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1d25de572_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
		_78817_token=_78535_tokens[0LL];
		if ((_78817_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
			_78717_isDeferred=true;
			_78535_tokens=_78535_tokens.slice(1LL);
			if ((_78535_tokens.len() == 0LL)) {
				_1d25de572_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			};
		};
	} else if ((_78817_token.get()._field_Id == static_cast<jule::U64>(35LLU))) {
		_78717_isDeferred=true;
		_78535_tokens=_78535_tokens.slice(1LL);
		if ((_78535_tokens.len() == 0LL)) {
			_1d25de572_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
			return nullptr;;
		};
	};
	jule::I64 _81417_i = 0LL;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _81517_scopeTokens = _1d2607c3e_range(&(_81417_i), jule::Str("{", 1), jule::Str("}", 1), &(_78535_tokens));;
	if ((_81517_scopeTokens == nullptr)) {
		_1d25de572_pushErr(_self_, _78817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	} else if ((_81417_i < _78535_tokens.len())) {
		_1d25de572_pushErr(_self_, _78535_tokens[_81417_i], jule::Str("invalid syntax", 14));
	};
	jule::Ptr<_1d05ee199_ScopeTree> _82217_scope = _1d25e0232_buildScope(_self_, &(_81517_scopeTokens), _78535_tokens[(_81417_i - 1LL)]);;
	_82217_scope.get()._field_Unsafety=_78617_isUnsafe;
	_82217_scope.get()._field_Deferred=_78717_isDeferred;
	return _82217_scope;;
}



inline jule::Ptr<_1d05eb8b1_LabelSt> _1d25e6d71_buildLabelSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _82836_tokens) {
	jule::Ptr<_1d05eb8b1_LabelSt> _82917_lbl = jule::new_ptr<_1d05eb8b1_LabelSt>(_1d05eb8b1_LabelSt{._field_Token=(*(_82836_tokens))[0LL], ._field_Ident=(*(_82836_tokens))[0LL].get()._field_Kind});;
	if (((*(_82836_tokens)).len() > 2LL)) {
		(*(_82836_tokens))=(*(_82836_tokens)).slice(2LL);
		_1d25deb16_insertAsNext(_self_, _82836_tokens);
	};
	return _82917_lbl;;
}



inline __jule_tuple__1d05ed85d_StmtData__jule_tuple_bool _1d25e717e_buildIdSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _84333_tokens) {
	__jule_tuple__1d05ed85d_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_84333_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_22be1281d_Token> _84817_token = (*(_84333_tokens))[1LL];;
	{
		auto &_match_expr{ _84817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b7c0d408:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1d25e6d71_buildLabelSt(_self_, _84333_tokens), &__jule_any_type57);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b7c0d3a3:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1d260619e_assignInfo> _1d25e748c_buildAssignInfo(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _85739_tokens) {
	jule::Ptr<_1d260619e_assignInfo> _85817_info = jule::new_ptr<_1d260619e_assignInfo>(_1d260619e_assignInfo{._field_ok=true});;
	jule::I64 _86117_braceN = 0LL;;
	{
		auto expr = _85739_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c0ea25:;
		if (it != expr_end) {
			jule::I64 _86214_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _86221_token = *it;
			{
				if ((_86221_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _86221_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7c11054:;
							{
								(_86117_braceN)++;
							}
						}
						else {
							_case_begin_1b7c10b58:;
							{
								(_86117_braceN)--;
							}
						}
						_match_end_1b7c10949:;
					};
				};
				{
					
					if ((_86117_braceN > 0LL)) {
						_case_begin_1b7c1130c:;
						{
							goto _iter_next_1b7c0ea25;
						}
					}
					else if ((_86221_token.get()._field_Id != static_cast<jule::U64>(6LLU))) {
						_case_begin_1b7c11373:;
						{
							goto _iter_next_1b7c0ea25;
						}
					}
					else if ((!(_22be17405_IsAssignOp(_86221_token.get()._field_Kind)))) {
						_case_begin_1b7c113d9:;
						{
							goto _iter_next_1b7c0ea25;
						}
					}
					_match_end_1b7c10790:;
				};
				_85817_info.get()._field_l=(*(_85739_tokens)).slice(0LL, _86214_i);
				if ((_85817_info.get()._field_l.len() == 0LL)) {
					_85817_info.get()._field_ok=false;
				};
				_85817_info.get()._field_setter=_86221_token;
				if (((_86214_i + 1LL) >= (*(_85739_tokens)).len())) {
					_85817_info.get()._field_r=nullptr;
					_85817_info.get()._field_ok=_22be1715d_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind);
					goto _iter_end_1b7c0ea25;
				};
				_85817_info.get()._field_r=(*(_85739_tokens)).slice((_86214_i + 1LL));
				if (_22be1715d_IsPostfixOp(_85817_info.get()._field_setter.get()._field_Kind)) {
					if ((_85817_info.get()._field_r.len() > 0LL)) {
						_1d25de572_pushErr(_self_, _85817_info.get()._field_r[0LL], jule::Str("invalid syntax", 14));
						_85817_info.get()._field_r=nullptr;
					};
				};
				goto _iter_end_1b7c0ea25;
			}
			_iter_next_1b7c0ea25:;
			++it;
			_86214_i++;
			goto _iter_begin_1b7c0ea25;
		}
		_iter_end_1b7c0ea25:;
	};
	return _85817_info;;
}



inline jule::Ptr<_1d05ec65e_AssignLeft> _1d25e779a_buildAssignL(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _90536_tokens) {
	jule::Ptr<_1d05ec65e_AssignLeft> _90617_l = jule::new_ptr<_1d05ec65e_AssignLeft>(_1d05ec65e_AssignLeft{._field_Token=(*(_90536_tokens))[0LL], });;
	if (((*(_90536_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(1LLU))) {
		_90617_l.get()._field_Ident=_90617_l.get()._field_Token.get()._field_Kind;
	};
	_90617_l.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, _90536_tokens);
	return _90617_l;;
}



inline jule::Slice<jule::Ptr<_1d05ec65e_AssignLeft>> _1d25e7aa8_buildAssignLs(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>* _91637_parts) {
	jule::Slice<jule::Ptr<_1d05ec65e_AssignLeft>> _91717_lefts = nullptr;;
	{
		auto expr = _91637_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c17731:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _91821_part = *it;
			{
				jule::Ptr<_1d05ec65e_AssignLeft> _91921_l = _1d25e779a_buildAssignL(_self_, &(_91821_part));;
				_91717_lefts = jule::alloc_for_append(_91717_lefts,1);_91717_lefts.__push(_91921_l);;
			}
			_iter_next_1b7c17731:;
			++it;
			goto _iter_begin_1b7c17731;
		}
		_iter_end_1b7c17731:;
	};
	return _91717_lefts;;
}



inline __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool _1d25e7db6_buildPlainAssign(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _92640_tokens) {
	__jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d260619e_assignInfo> _92717_info = _1d25e748c_buildAssignInfo(_self_, _92640_tokens);;
	if ((!(_92717_info.get()._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05ecb9d_AssignSt> _93217_assign = jule::new_ptr<_1d05ecb9d_AssignSt>(_1d05ecb9d_AssignSt{._field_Setter=_92717_info.get()._field_setter, });;
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _93618_parts;;
	jule::Slice<_22ba3c6bd_Log> _93625_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_92717_info.get()._field_l), static_cast<jule::U64>(7LLU), true);
		_93618_parts = __jule_assign_result.__jule_result_arg0;
		_93625_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_93625_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_93625_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_93217_assign.get()._field_Left=_1d25e7aa8_buildAssignLs(_self_, &(_93618_parts));
	if ((_92717_info.get()._field_r != nullptr)) {
		_93217_assign.get()._field_Right=_1d260ab32_buildExpr((*(_self_))._field_p, &(_92717_info.get()._field_r));
	};
	__jule_func_result.__jule_result_arg0 = _93217_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool _1d25e81c4_buildDeclAssign(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _95038_tokens) {
	__jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_95038_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_95038_tokens=_95038_tokens.slice(1LL);
	jule::Ptr<_22be1281d_Token> _95617_token = _95038_tokens[0LL];;
	if (((_95617_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_95617_token.get()._field_Kind.equal("(", 1)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1d05ecb9d_AssignSt> _96117_assign = jule::new_ptr<_1d05ecb9d_AssignSt>(_1d05ecb9d_AssignSt{._field_Declarative=true, });;
	jule::I64 _96517_i = 0LL;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _96617_rang = _1d2607c3e_range(&(_96517_i), jule::Str("(", 1), jule::Str(")", 1), &(_95038_tokens));;
	if ((_96617_rang == nullptr)) {
		_1d25de572_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_96517_i + 1LL) < _95038_tokens.len())) {
		_96117_assign.get()._field_Setter=_95038_tokens[_96517_i];
		(_96517_i)++;
		jule::Slice<jule::Ptr<_22be1281d_Token>> _97321_exprTokens = _95038_tokens.slice(_96517_i);;
		_96117_assign.get()._field_Right=_1d260ab32_buildExpr((*(_self_))._field_p, &(_97321_exprTokens));
	};
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _97818_parts;;
	jule::Slice<_22ba3c6bd_Log> _97825_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_96617_rang), static_cast<jule::U64>(7LLU), true);
		_97818_parts = __jule_assign_result.__jule_result_arg0;
		_97825_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_97825_errs.len() > 0LL)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_97825_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto expr = &(_97818_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c22c25:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _98421_part = *it;
			{
				jule::Bool _98521_isMut = false;;
				jule::Bool _98621_isRef = false;;
				_95617_token=_98421_part[0LL];
				if ((_95617_token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
					_98521_isMut=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1d25de572_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b7c22c25;
					};
				};
				if (((_98421_part[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _98421_part[0LL].get()._field_Kind.equal("&", 1))) {
					_98621_isRef=true;
					_98421_part=_98421_part.slice(1LL);
					if ((_98421_part.len() == 0LL)) {
						_1d25de572_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
						goto _iter_next_1b7c22c25;
					};
				};
				if ((((_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(1LLU)) && (_98421_part[0LL].get()._field_Id != static_cast<jule::U64>(2LLU))) && (!_98421_part[0LL].get()._field_Kind.equal("(", 1)))) {
					_1d25de572_pushErr(_self_, _95617_token, jule::Str("invalid syntax", 14));
					goto _iter_next_1b7c22c25;
				};
				jule::Ptr<_1d05ec65e_AssignLeft> _101421_l = _1d25e779a_buildAssignL(_self_, &(_98421_part));;
				_101421_l.get()._field_Mutable=_98521_isMut;
				_101421_l.get()._field_Reference=_98621_isRef;
				_96117_assign.get()._field_Left = jule::alloc_for_append(_96117_assign.get()._field_Left,1);_96117_assign.get()._field_Left.__push(_101421_l);;
			}
			_iter_next_1b7c22c25:;
			++it;
			goto _iter_begin_1b7c22c25;
		}
		_iter_end_1b7c22c25:;
	};
	__jule_func_result.__jule_result_arg0 = _96117_assign;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool _1d25e84d2_buildAssignSt(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _102337_tokens) {
	__jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1d2606545_checkAssignTokens(_102337_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_102337_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b7c2a029:;
			{
				({
					__jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool __jule_assign_result = _1d25e81c4_buildDeclAssign(_self_, (*(_102337_tokens)));
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b7c29b3e:;
			{
				({
					__jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool __jule_assign_result = _1d25e7db6_buildPlainAssign(_self_, _102337_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b7c29ad9:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1d05e407e_UseExpr> _1d25e87e0_buildUseExpr(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _103836_tokens) {
	if (((*(_103836_tokens)).len() == 1LL)) {
		_1d25de572_pushErr(_self_, (*(_103836_tokens))[0LL], jule::Str("expression missing", 18));
		return nullptr;;
	};
	jule::Ptr<_1d05e407e_UseExpr> _104317_ue = jule::new_ptr<_1d05e407e_UseExpr>(_1d05e407e_UseExpr{._field_Token=(*(_103836_tokens))[0LL], });;
	(*(_103836_tokens))=(*(_103836_tokens)).slice(1LL);
	_104317_ue.get()._field_Expr=_1d260ab32_buildExpr((*(_self_))._field_p, _103836_tokens);
	return _104317_ue;;
}



inline jule::Any _1d25e8aed_buildSt(_1d25dd384_scopeParser* _self_, jule::Ptr<_1d25dca59_stmt>* _105131_st) {
	jule::Ptr<_22be1281d_Token> _105217_token = (*(_105131_st)).get()._field_tokens[0LL];;
	if ((_105217_token.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		jule::Any _105422_s = jule::Any(nullptr);;
		jule::Bool _105425_ok = false;;
		({
			__jule_tuple__1d05ed85d_StmtData__jule_tuple_bool __jule_assign_result = _1d25e717e_buildIdSt(_self_, &((*(_105131_st)).get()._field_tokens));
			_105422_s = __jule_assign_result.__jule_result_arg0;
			_105425_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_105425_ok) {
			return _105422_s;;
		};
	};
	jule::Ptr<_1d05ecb9d_AssignSt> _106018_s;;
	jule::Bool _106021_ok = false;;
	({
		__jule_tuple_x_1d05ecb9d_AssignSt__jule_tuple_bool __jule_assign_result = _1d25e84d2_buildAssignSt(_self_, &((*(_105131_st)).get()._field_tokens));
		_106018_s = __jule_assign_result.__jule_result_arg0;
		_106021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_106021_ok) {
		return jule::Any(_106018_s, &__jule_any_type59);;
	};
	{
		auto &_match_expr{ _105217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1b7c2ed0e:;
			{
				return jule::Any(_1d25e87e0_buildUseExpr(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type64);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(34LLU)) {
			_case_begin_1b7c2eade:;
			{
				return jule::Any(_1d25e0540_buildVarSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(3LLU)) {
			_case_begin_1b7c2eb55:;
			{
				return jule::Any(_1d25e084d_buildRetSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(11LLU)) {
			_case_begin_1b7c2ebbb:;
			{
				return jule::Any(_1d25e328a_buildIterSt(_self_, _105131_st), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(12LLU)) {
			_case_begin_1b7c2ee1e:;
			{
				return jule::Any(_1d25e3598_buildBreakSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(13LLU)) {
			_case_begin_1b7c2ee85:;
			{
				return jule::Any(_1d25e38a6_buildContSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type56);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(15LLU)) {
			_case_begin_1b7c2eeeb:;
			{
				return jule::Any(_1d25e42d0_buildIfElseChain(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(24LLU)) {
			_case_begin_1b7c30073:;
			{
				return jule::Any(_1d25e45dd_buildCoCallSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(20LLU)) {
			_case_begin_1b7c300ea:;
			{
				return jule::Any(_1d25e48eb_buildGotoSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type58);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(30LLU)) {
			_case_begin_1b7c30172:;
			{
				return jule::Any(_1d25e4c09_buildFallSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b7c301e9:;
			{
				return jule::Any(_1d25e5017_buildTypeAliasSt(_self_, &((*(_105131_st)).get()._field_tokens)), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(25LLU)) {
			_case_begin_1b7c30271:;
			{
				return jule::Any(_1d25e6755_buildMatchCase(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(33LLU) || _match_expr == static_cast<jule::U64>(35LLU)) {
			_case_begin_1b7c302e8:;
			{
				return jule::Any(_1d25e6a63_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7c30370:;
			{
				if (_105217_token.get()._field_Kind.equal("{", 1)) {
					return jule::Any(_1d25e6a63_buildScopeSt(_self_, (*(_105131_st)).get()._field_tokens), &__jule_any_type52);;
				};
			}
		}
		_match_end_1b7c2e7e2:;
	};
	jule::Ptr<_1d05e36dd_Expr> _110117_expr = _1d260ab32_buildExpr((*(_self_))._field_p, &((*(_105131_st)).get()._field_tokens));;
	if ((_110117_expr != nullptr)) {
		return jule::Any(_110117_expr, &__jule_any_type53);;
	};
	_1d25de572_pushErr(_self_, _105217_token, jule::Str("invalid syntax", 14));
	return nullptr;;
}



inline void _1d25e8e1c_build(_1d25dd384_scopeParser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _110929_tokens, jule::Ptr<_1d05ee199_ScopeTree>* _110952_s) {
	if (((*(_110952_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1d25dce00_splitStmts(_110929_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_110952_s));
	while (((!(_1d25de253_isLastSt(_self_))) && (!(_1d25ddede_finished(_self_))))) {
		{
			jule::Ptr<_1d25dca59_stmt> _111721_st = _1d25ded7a_next(_self_);;
			jule::Any _111821_data = _1d25e8aed_buildSt(_self_, &(_111721_st));;
			if ((_111821_data != nullptr)) {
				(*(_self_))._field_s.get()._field_Stmts = jule::alloc_for_append((*(_self_))._field_s.get()._field_Stmts,1);(*(_self_))._field_s.get()._field_Stmts.__push(_1d05eda8e_Stmt{._field_Token=_111721_st.get()._field_tokens[0LL], ._field_Data=_111821_data});;
			};
			if (_1d25ddc7a_stopped(_self_)) {
				goto _iter_end_1b7c38532;
			};
		}
	_iter_next_1b7c38532:;
	}
	_iter_end_1b7c38532:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d25dd384_scopeParser _Src) {
	_Stream << "scopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline void _1d25ea13d_pushErr(_1d25e9868_exprBuilder* _self_, jule::Ptr<_22be1281d_Token> _4426_token, jule::Str _4441_fmt, jule::Slice<jule::Any> _4454_args) {
	_1d260a505_pushErr((*(_self_))._field_p.ptr(), _4426_token, _4441_fmt, _4454_args);
}



inline void _1d25ea45c_pushSuggestion(_1d25e9868_exprBuilder* _self_, jule::Str _4933_fmt, jule::Slice<jule::Any> _4946_args) {
	_1d260a824_pushSuggestion((*(_self_))._field_p.ptr(), _4933_fmt, _4946_args);
}



inline jule::Ptr<_1d05e436a_TupleExpr> _1d25ea76a_buildTuple(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>* _5334_parts) {
	jule::Ptr<_1d05e436a_TupleExpr> _5417_tuple = jule::new_ptr<_1d05e436a_TupleExpr>(_1d05e436a_TupleExpr{._field_Expr=jule::Slice<jule::Ptr<_1d05e36dd_Expr>>::alloc(0LL, (*(_5334_parts)).len())});;
	{
		auto expr = _5334_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c56088:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _5721_part = *it;
			{
				_5417_tuple.get()._field_Expr = jule::alloc_for_append(_5417_tuple.get()._field_Expr,1);_5417_tuple.get()._field_Expr.__push(_1d260428a_buildFromTokens(_self_, _5721_part));;
			}
			_iter_next_1b7c56088:;
			++it;
			goto _iter_begin_1b7c56088;
		}
		_iter_end_1b7c56088:;
	};
	return _5417_tuple;;
}



inline jule::Ptr<_1d05e4722_LitExpr> _1d25eaa78_buildLit(_1d25e9868_exprBuilder* _self_, jule::Ptr<_22be1281d_Token> _6327_token) {
	return jule::new_ptr<_1d05e4722_LitExpr>(_1d05e4722_LitExpr{._field_Token=_6327_token, ._field_Value=_6327_token.get()._field_Kind});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d25ead86_buildPrimitiveType(_1d25e9868_exprBuilder* _self_, jule::Ptr<_22be1281d_Token>* _7038_token) {
	return _1d261a339_buildPrimType((*(_7038_token)));;
}



inline jule::Any _1d25eb194_buildSingle(_1d25e9868_exprBuilder* _self_, jule::Ptr<_22be1281d_Token> _7434_token) {
	{
		auto &_match_expr{ _7434_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(5LLU)) {
			_case_begin_1b7c57a29:;
			{
				return jule::Any(_1d25eaa78_buildLit(_self_, _7434_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7c57aa1:;
			{
				if (_7434_token.get()._field_Kind.equal("...", 3)) {
					return jule::Any(jule::new_ptr<_1d05e5d94_VariadicExpr>(_1d05e5d94_VariadicExpr{._field_Token=_7434_token, }), &__jule_any_type81);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(26LLU) || _match_expr == static_cast<jule::U64>(38LLU)) {
			_case_begin_1b7c57b28:;
			{
				return jule::Any(_1d2605544_buildIdentExpr(&(_7434_token)), &__jule_any_type85);;
			}
		}
		_match_end_1b7c57980:;
	};
	_1d25ea13d_pushErr(_self_, _7434_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1d05e52d3_IdentExpr> _1d25eb4a2_buildBindIdent(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _9338_tokens) {
	if (((*(_9338_tokens))[0LL].get()._field_Id != static_cast<jule::U64>(29LLU))) {
		return nullptr;;
	} else if (((*(_9338_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(19LLU))) {
		_1d25ea13d_pushErr(_self_, (*(_9338_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("use dot (.) to access binded defines", 36), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22be1281d_Token> _10117_token = (*(_9338_tokens))[2LL];;
	if ((_10117_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d25ea13d_pushErr(_self_, (*(_9338_tokens))[2LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d05e52d3_IdentExpr> _10717_expr = _1d2605544_buildIdentExpr(&(_10117_token));;
	_10717_expr.get()._field_Binded=true;
	return _10717_expr;;
}



inline jule::Ptr<_1d05e59dc_UnaryExpr> _1d25eb7b0_buildUnary(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _11233_tokens) {
	jule::Ptr<_22be1281d_Token> _11317_op = _11233_tokens[0LL];;
	if ((_11233_tokens.len() == 1LL)) {
		_1d25ea13d_pushErr(_self_, _11317_op, jule::Str("missing expression for unary operator", 37), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_22be13027_IsUnaryOp(_11317_op.get()._field_Kind)))) {
		_1d25ea13d_pushErr(_self_, _11317_op, jule::Str("invalid unary operator: @", 25), jule::Slice<jule::Any>::make({jule::Any(_11317_op.get()._field_Kind, &__jule_any_type5)}));
		return nullptr;;
	};
	_11233_tokens=_11233_tokens.slice(1LL);
	return jule::new_ptr<_1d05e59dc_UnaryExpr>(_1d05e59dc_UnaryExpr{._field_Op=_11317_op, ._field_Expr=_1d260428a_buildFromTokens(_self_, _11233_tokens)});;
}



inline jule::Ptr<_1d05e6a76_SubIdentExpr> _1d25ebabd_buildObjSubIdent(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _13339_tokens) {
	jule::I64 _13417_i = (_13339_tokens.len() - 1LL);;
	jule::Ptr<_22be1281d_Token> _13517_identToken = _13339_tokens[_13417_i];;
	(_13417_i)--;
	_13339_tokens=_13339_tokens.slice(0LL, _13417_i);
	if ((_13339_tokens.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, _13517_identToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d05e6a76_SubIdentExpr>(_1d05e6a76_SubIdentExpr{._field_Expr=_1d260428a_buildFromTokens(_self_, _13339_tokens), ._field_Ident=_13517_identToken});;
}



inline jule::Ptr<_1d05e6603_NsSelectionExpr> _1d25ebdcb_buildNsSubIdent(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _14839_tokens) {
	jule::Ptr<_1d05e6603_NsSelectionExpr> _14917_ns = jule::new_ptr<_1d05e6603_NsSelectionExpr>();;
	{
		auto expr = _14839_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c62726:;
		if (it != expr_end) {
			jule::I64 _15014_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _15021_token = *it;
			{
				if (((_15014_i & 1LL) == 0LL)) {
					if ((_15021_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
						_1d25ea13d_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1d25ea45c_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					};
					_14917_ns.get()._field_Ns = jule::alloc_for_append(_14917_ns.get()._field_Ns,1);_14917_ns.get()._field_Ns.__push(_15021_token);;
				} else if ((_15021_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1d25ea13d_pushErr(_self_, _15021_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1d25ea45c_pushSuggestion(_self_, jule::Str("expected double colon \"::\"", 26), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1b7c62726:;
			++it;
			_15014_i++;
			goto _iter_begin_1b7c62726;
		}
		_iter_end_1b7c62726:;
	};
	_14917_ns.get()._field_Ident=_14917_ns.get()._field_Ns[(_14917_ns.get()._field_Ns.len() - 1LL)];
	_14917_ns.get()._field_Ns=_14917_ns.get()._field_Ns.slice(0LL, (_14917_ns.get()._field_Ns.len() - 1LL));
	return _14917_ns;;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d25ec1d9_buildType(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _16733_tokens) {
	jule::I64 _16817_i = 0LL;;
	jule::Ptr<_1d05de563_TypeDecl> _16918_t;;
	jule::Bool _16921_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, _16733_tokens, (&(_16817_i)), false);
		_16918_t = __jule_assign_result.__jule_result_arg0;
		_16921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_16921_ok))) {
		_1d25ea13d_pushErr(_self_, (*(_16733_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_16817_i < (*(_16733_tokens)).len())) {
		_1d25ea13d_pushErr(_self_, (*(_16733_tokens))[_16817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	return _16918_t;;
}



inline jule::Any _1d25ec4e7_buildSubIdent(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _18137_tokens) {
	jule::I64 _18213_i = ((*(_18137_tokens)).len() - 2LL);;
	jule::Ptr<_22be1281d_Token> _18313_token = (*(_18137_tokens))[_18213_i];;
	{
		auto &_match_expr{ _18313_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(19LLU)) {
			_case_begin_1b7c69552:;
			{
				return jule::Any(_1d25ebabd_buildObjSubIdent(_self_, (*(_18137_tokens))), &__jule_any_type91);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b7c689a2:;
			{
				return jule::Any(_1d25ebdcb_buildNsSubIdent(_self_, _18137_tokens), &__jule_any_type95);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7c69684:;
			{
				if (_18313_token.get()._field_Kind.equal("]", 1)) {
					return jule::Any(_1d25ec1d9_buildType(_self_, _18137_tokens), &__jule_any_type94);;
				};
			}
		}
		_match_end_1b7c694ec:;
	};
	_1d25ea13d_pushErr(_self_, _18313_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1d05e5d94_VariadicExpr> _1d25ec805_buildVariadic(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _19936_tokens) {
	jule::Ptr<_22be1281d_Token> _20017_token = _19936_tokens[(_19936_tokens.len() - 1LL)];;
	_19936_tokens=_19936_tokens.slice(0LL, (_19936_tokens.len() - 1LL));
	return jule::new_ptr<_1d05e5d94_VariadicExpr>(_1d05e5d94_VariadicExpr{._field_Token=_20017_token, ._field_Expr=_1d260428a_buildFromTokens(_self_, _19936_tokens)});;
}



inline jule::Any _1d25ecb13_buildOpRight(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _20836_tokens) {
	jule::Ptr<_22be1281d_Token> _20917_token = (*(_20836_tokens))[((*(_20836_tokens)).len() - 1LL)];;
	{
		auto &_match_expr{ _20917_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("!", 1)) {
			_case_begin_1b7c6d325:;
			{
				(*(_20836_tokens))=(*(_20836_tokens)).slice(0LL, ((*(_20836_tokens)).len() - 1LL));
				jule::Any _21321_d = _1d2603b6e_build(_self_, _20836_tokens);;
				if ((_21321_d == nullptr)) {
					return nullptr;;
				};
				{
					auto &_match_expr{ _21321_d };
					
					if (_match_expr.type == &__jule_any_type111) {
						_case_begin_1b7c6e59b:;
						{
							_21321_d.cast_ptr<_1d05e7604_FnCallExpr>(&__jule_any_type111).get()._field_Exception=jule::new_ptr<_1d05ee199_ScopeTree>(_1d05ee199_ScopeTree{._field_Deferred=true, });
							return _21321_d;;
						}
					}
					_match_end_1b7c6e843:;
				};
			}
		}
		_match_end_1b7c6d16b:;
	};
	_1d25ea13d_pushErr(_self_, _20917_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1d05e39c9_RangeExpr> _1d25ece43_buildBetweenParentheses(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _22946_tokens) {
	if ((_22946_tokens.len() == 2LL)) {
		_1d25ea13d_pushErr(_self_, _22946_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("empty parentheses are not valid expression, must include an expression in range", 79), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_22946_tokens=_22946_tokens.slice(1LL, (_22946_tokens.len() - 1LL));
	return jule::new_ptr<_1d05e39c9_RangeExpr>(_1d05e39c9_RangeExpr{._field_Expr=_1d260428a_buildFromTokens(_self_, _22946_tokens)});;
}



inline jule::Ptr<_1d05e624b_CastExpr> _1d25ed262_tryBuildCast(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _24136_tokens) {
	jule::I64 _24217_rangeN = 0LL;;
	{
		auto expr = _24136_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c726e2:;
		if (it != expr_end) {
			jule::I64 _24313_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _24316_token = *it;
			{
				if ((_24316_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _24316_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7c73bcc:;
							{
								(_24217_rangeN)++;
								goto _iter_next_1b7c726e2;
							}
						}
						else {
							_case_begin_1b7c737d1:;
							{
								(_24217_rangeN)--;
							}
						}
						_match_end_1b7c735c2:;
					};
				};
				if ((_24217_rangeN > 0LL)) {
					goto _iter_next_1b7c726e2;
				} else if (((_24313_i + 1LL) == (*(_24136_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_22be1281d_Token>> _26221_typeTokens = (*(_24136_tokens)).slice(0LL, (_24313_i + 1LL));;
				jule::Slice<jule::Ptr<_22be1281d_Token>> _26321_exprTokens = (*(_24136_tokens)).slice((_24313_i + 1LL));;
				if ((_26321_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_22be1281d_Token> _27017_tok = _26321_exprTokens[0LL];;
				if (((_27017_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_27017_tok.get()._field_Kind.equal("(", 1)))) {
					return nullptr;;
				};
				jule::Ptr<_1d05e624b_CastExpr> _27521_cast = jule::new_ptr<_1d05e624b_CastExpr>(_1d05e624b_CastExpr{});;
				if ((_26321_exprTokens.len() == 2LL)) {
					_1d25ea13d_pushErr(_self_, _26321_exprTokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
					_1d25ea45c_pushSuggestion(_self_, jule::Str("give an expression for casting", 30), jule::Slice<jule::Any>());
				};
				if ((_26221_typeTokens.len() == 2LL)) {
					_1d25ea13d_pushErr(_self_, _26221_typeTokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
					_1d25ea45c_pushSuggestion(_self_, jule::Str("type declaration expected for casting", 37), jule::Slice<jule::Any>());
				} else {
					_26221_typeTokens=_26221_typeTokens.slice(1LL, (_26221_typeTokens.len() - 1LL));
					jule::I64 _28925_typeIndex = 0LL;;
					jule::Ptr<_1d05de563_TypeDecl> _29026_t;;
					jule::Bool _29029_ok = false;;
					({
						__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &(_26221_typeTokens), (&(_28925_typeIndex)), true);
						_29026_t = __jule_assign_result.__jule_result_arg0;
						_29029_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_29029_ok && (_28925_typeIndex < _26221_typeTokens.len()))) {
						_1d25ea13d_pushErr(_self_, _26221_typeTokens[_28925_typeIndex], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					} else if ((!(_29029_ok))) {
						return _27521_cast;;
					};
					_27521_cast.get()._field_Kind=_29026_t;
					if ((_26321_exprTokens.len() > 2LL)) {
						jule::I64 _30029_j = 0LL;;
						_1d2607c3e_range(&(_30029_j), jule::Str("(", 1), jule::Str(")", 1), &(_26321_exprTokens));
						if ((_30029_j < _26321_exprTokens.len())) {
							return nullptr;;
						};
						_26321_exprTokens=_26321_exprTokens.slice(0LL, _30029_j);
						_27521_cast.get()._field_Expr=_1d260428a_buildFromTokens(_self_, _26321_exprTokens);
					};
				};
				return _27521_cast;;
			}
			_iter_next_1b7c726e2:;
			++it;
			_24313_i++;
			goto _iter_begin_1b7c726e2;
		}
		_iter_end_1b7c726e2:;
	};
	return nullptr;;
}



inline void _1d25ed62a_pushArg(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_1d05e36dd_Expr>>* _31531_args, jule::Slice<jule::Ptr<_22be1281d_Token>> _31550_tokens, jule::Ptr<_22be1281d_Token> _31568_err_token) {
	if ((_31550_tokens.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, _31568_err_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_31531_args)) = jule::alloc_for_append((*(_31531_args)),1);(*(_31531_args)).__push(_1d260428a_buildFromTokens(_self_, _31550_tokens));;
}



inline jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _1d25ed938_buildArgs(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _32432_tokens) {
	if ((_32432_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _33017_args = nullptr;;
	jule::I64 _33117_last = 0LL;;
	jule::I64 _33217_rangeN = 0LL;;
	_32432_tokens=_32432_tokens.slice(1LL, (_32432_tokens.len() - 1LL));
	{
		auto expr = &(_32432_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c7ec60:;
		if (it != expr_end) {
			jule::I64 _33413_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _33416_token = *it;
			{
				if ((_33416_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _33416_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7c81569:;
							{
								(_33217_rangeN)++;
							}
						}
						else {
							_case_begin_1b7c8116d:;
							{
								(_33217_rangeN)--;
							}
						}
						_match_end_1b7c80e5e:;
					};
				};
				if (((_33217_rangeN > 0LL) || (_33416_token.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
					goto _iter_next_1b7c7ec60;
				};
				_1d25ed62a_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last, _33413_i), _33416_token);
				_33117_last=static_cast<jule::I64>((_33413_i + 1LL));
			}
			_iter_next_1b7c7ec60:;
			++it;
			_33413_i++;
			goto _iter_begin_1b7c7ec60;
		}
		_iter_end_1b7c7ec60:;
	};
	if ((_33117_last < _32432_tokens.len())) {
		if ((_33117_last == 0LL)) {
			if ((_32432_tokens.len() > 0LL)) {
				_1d25ed62a_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[_33117_last]);
			};
		} else {
			_1d25ed62a_pushArg(_self_, &(_33017_args), _32432_tokens.slice(_33117_last), _32432_tokens[(_33117_last - 1LL)]);
		};
	};
	return _33017_args;;
}



inline jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _1d25edc46_buildCallGenerics(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _36640_tokens) {
	if ((_36640_tokens.len() == 0LL)) {
		return nullptr;;
	};
	_36640_tokens=_36640_tokens.slice(1LL, (_36640_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _37218_parts;;
	jule::Slice<_22ba3c6bd_Log> _37225_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_36640_tokens), static_cast<jule::U64>(7LLU), true);
		_37218_parts = __jule_assign_result.__jule_result_arg0;
		_37225_errs = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _37317_generics = jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, _37218_parts.len());;
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_37225_errs);
	{
		auto expr = &(_37218_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c8567d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _37521_part = *it;
			{
				if ((_37521_part.len() == 0LL)) {
					goto _iter_next_1b7c8567d;
				};
				jule::I64 _37921_j = 0LL;;
				jule::Ptr<_1d05de563_TypeDecl> _38022_generic;;
				({
					__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &(_37521_part), (&(_37921_j)), true);
					_38022_generic = __jule_assign_result.__jule_result_arg0;
				});
				if ((_37921_j < _37521_part.len())) {
					_1d25ea13d_pushErr(_self_, _37521_part[_37921_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_37317_generics = jule::alloc_for_append(_37317_generics,1);_37317_generics.__push(_38022_generic);;
			}
			_iter_next_1b7c8567d:;
			++it;
			goto _iter_begin_1b7c8567d;
		}
		_iter_end_1b7c8567d:;
	};
	return _37317_generics;;
}



inline jule::Ptr<_1d05e7604_FnCallExpr> _1d25ee197_buildFnCall(_1d25e9868_exprBuilder* _self_, jule::Ptr<_22be1281d_Token>* _39035_token, jule::Slice<jule::Ptr<_22be1281d_Token>>* _39055_expr, jule::Slice<jule::Ptr<_22be1281d_Token>>* _39076_args) {
	return jule::new_ptr<_1d05e7604_FnCallExpr>(_1d05e7604_FnCallExpr{._field_Token=(*(_39035_token)), ._field_Expr=_1d260428a_buildFromTokens(_self_, (*(_39055_expr))), ._field_Args=_1d25ed938_buildArgs(_self_, (*(_39076_args))), });;
}



inline jule::Any _1d25ee4a5_buildParenthesesRange(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _39845_tokens) {
	jule::Ptr<_22be1281d_Token> _39917_token = (*(_39845_tokens))[0LL];;
	{
		auto &_match_expr{ _39917_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7c898e6:;
			{
				{
					auto &_match_expr{ _39917_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b7c8a265:;
						{
							jule::Ptr<_1d05e624b_CastExpr> _40425_expr = _1d25ed262_tryBuildCast(_self_, _39845_tokens);;
							if ((_40425_expr != nullptr)) {
								return jule::Any(_40425_expr, &__jule_any_type109);;
							};
						}
					}
					_match_end_1b7c8a09a:;
				};
			}
		}
		_match_end_1b7c8973c:;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _41018_exprTokens;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _41034_args_tokens;;
	({
		__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_assign_result = _1d2607ed6_rangeLast(_39845_tokens);
		_41018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_41034_args_tokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41018_exprTokens.len() == 0LL)) {
		return jule::Any(_1d25ece43_buildBetweenParentheses(_self_, _41034_args_tokens), &__jule_any_type104);;
	};
	return jule::Any(_1d25ee197_buildFnCall(_self_, &(_39917_token), &(_41018_exprTokens), &(_41034_args_tokens)), &__jule_any_type111);;
}



inline jule::Ptr<_1d05e4d60_UnsafeExpr> _1d25ee7b3_buildUnsafeExpr(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _41938_tokens) {
	jule::Ptr<_22be1281d_Token> _42017_token = _41938_tokens[0LL];;
	_41938_tokens=_41938_tokens.slice(1LL);
	jule::I64 _42217_i = 0LL;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _42317_rangeTokens = _1d2607c3e_range(&(_42217_i), jule::Str("{", 1), jule::Str("}", 1), &(_41938_tokens));;
	if ((_42317_rangeTokens.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, _41938_tokens[0LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d05e4d60_UnsafeExpr>(_1d05e4d60_UnsafeExpr{._field_Token=_42017_token, ._field_Expr=_1d260428a_buildFromTokens(_self_, _42317_rangeTokens)});;
}



inline jule::Ptr<_1d0600b90_FnDecl> _1d25eeac1_buildAnonFn(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _43435_tokens) {
	jule::Ptr<_1d0600b90_FnDecl> _43517_f = _1d2611066_buildFn((*(_self_))._field_p, _43435_tokens, false, false);;
	if ((!(_1d0600ee2_IsAnon(_43517_f.ptr())))) {
		_1d25ea13d_pushErr(_self_, _43517_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("anonymous function expected, remove identifier of function", 58), jule::Slice<jule::Any>());
	};
	return _43517_f;;
}



inline jule::Any _1d25eedce_buildUnsafe(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _44335_tokens) {
	{
		auto &_match_expr{ (*(_44335_tokens))[1LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b7c90c60:;
			{
				return jule::Any(_1d25eeac1_buildAnonFn(_self_, _44335_tokens), &__jule_any_type14);;
			}
		}
		else {
			_case_begin_1b7c91139:;
			{
				return jule::Any(_1d25ee7b3_buildUnsafeExpr(_self_, (*(_44335_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1b7c910b2:;
	};
}



inline void _1d2600297_pushRangeLitPart(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _45339_part, jule::Ptr<_22be1281d_Token> _4549_errorToken, jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>* _45434_parts) {
	if ((_45339_part.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, _4549_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("an expression expected", 22), jule::Slice<jule::Any>());
		return;;
	};
	(*(_45434_parts)) = jule::alloc_for_append((*(_45434_parts)),1);(*(_45434_parts)).__push(_45339_part);;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d26005c7_getBraceRangeLitExprParts(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _46448_tokens) {
	if ((_46448_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _47017_parts = nullptr;;
	jule::I64 _47217_last = 0LL;;
	jule::I64 _47317_rangeN = 0LL;;
	_46448_tokens=_46448_tokens.slice(1LL, (_46448_tokens.len() - 1LL));
	{
		auto expr = &(_46448_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c94ba9:;
		if (it != expr_end) {
			jule::I64 _47513_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _47516_token = *it;
			{
				if ((_47516_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _47516_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7c964b3:;
							{
								(_47317_rangeN)++;
							}
						}
						else {
							_case_begin_1b7c960b7:;
							{
								(_47317_rangeN)--;
							}
						}
						_match_end_1b7c95da8:;
					};
				};
				if (((_47317_rangeN > 0LL) || (_47516_token.get()._field_Id != static_cast<jule::U64>(7LLU)))) {
					goto _iter_next_1b7c94ba9;
				};
				_1d2600297_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last, _47513_i), _47516_token, &(_47017_parts));
				_47217_last=static_cast<jule::I64>((_47513_i + 1LL));
			}
			_iter_next_1b7c94ba9:;
			++it;
			_47513_i++;
			goto _iter_begin_1b7c94ba9;
		}
		_iter_end_1b7c94ba9:;
	};
	if ((_47217_last < _46448_tokens.len())) {
		if ((_47217_last == 0LL)) {
			if ((_46448_tokens.len() > 0LL)) {
				_1d2600297_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[_47217_last], &(_47017_parts));
			};
		} else {
			_1d2600297_pushRangeLitPart(_self_, _46448_tokens.slice(_47217_last), _46448_tokens[(_47217_last - 1LL)], &(_47017_parts));
		};
	};
	return _47017_parts;;
}



inline jule::Ptr<_1d05e8083_FieldExprPair> _1d26008e6_buildFieldExprPair(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _50641_tokens) {
	if (((_50641_tokens.len() - 2LL) == 0LL)) {
		_1d25ea13d_pushErr(_self_, _50641_tokens[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d05e8083_FieldExprPair> _51117_pair = jule::new_ptr<_1d05e8083_FieldExprPair>(_1d05e8083_FieldExprPair{._field_Field=_50641_tokens[0LL], });;
	_50641_tokens=_50641_tokens.slice(2LL);
	_51117_pair.get()._field_Expr=_1d260428a_buildFromTokens(_self_, _50641_tokens);
	return _51117_pair;;
}



inline jule::Ptr<_1d05e36dd_Expr> _1d2600c04_buildStructLitExpr(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _51942_tokens) {
	jule::Ptr<_22be1281d_Token> _52017_token = (*(_51942_tokens))[0LL];;
	if (((_52017_token.get()._field_Id == static_cast<jule::U64>(1LLU)) && ((*(_51942_tokens)).len() > 1LL))) {
		_52017_token=(*(_51942_tokens))[1LL];
		if ((_52017_token.get()._field_Id == static_cast<jule::U64>(10LLU))) {
			return jule::new_ptr<_1d05e36dd_Expr>(_1d05e36dd_Expr{._field_Token=_52017_token, ._field_End=(*(_51942_tokens))[((*(_51942_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1d26008e6_buildFieldExprPair(_self_, (*(_51942_tokens))), &__jule_any_type83)});;
		};
	};
	return _1d260428a_buildFromTokens(_self_, (*(_51942_tokens)));;
}



inline jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _1d2601012_buildStructLitExprs(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _53443_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _53517_parts = _1d26005c7_getBraceRangeLitExprParts(_self_, (*(_53443_tokens)));;
	if ((_53517_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d05e36dd_Expr>> _54017_pairs = jule::Slice<jule::Ptr<_1d05e36dd_Expr>>::alloc(0LL, _53517_parts.len());;
	{
		auto expr = &(_53517_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c9d762:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _54121_part = *it;
			{
				_54017_pairs = jule::alloc_for_append(_54017_pairs,1);_54017_pairs.__push(_1d2600c04_buildStructLitExpr(_self_, &(_54121_part)));;
			}
			_iter_next_1b7c9d762:;
			++it;
			goto _iter_begin_1b7c9d762;
		}
		_iter_end_1b7c9d762:;
	};
	return _54017_pairs;;
}



inline jule::Ptr<_1d05e8858_StructLit> _1d2601342_buildTypedStructLiteral(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _54746_tokens) {
	jule::I64 _54817_i = 0LL;;
	jule::Ptr<_1d05de563_TypeDecl> _54918_t;;
	jule::Bool _54921_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &(_54746_tokens), (&(_54817_i)), true);
		_54918_t = __jule_assign_result.__jule_result_arg0;
		_54921_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_54921_ok))) {
		return nullptr;;
	} else if ((_54817_i >= _54746_tokens.len())) {
		_1d25ea13d_pushErr(_self_, _54746_tokens[_54817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_54746_tokens=_54746_tokens.slice(_54817_i);
	jule::Ptr<_22be1281d_Token> _55813_token = _54746_tokens[0LL];;
	if (((_55813_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_55813_token.get()._field_Kind.equal("{", 1)))) {
		_1d25ea13d_pushErr(_self_, _55813_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d05e8858_StructLit>(_1d05e8858_StructLit{._field_End=_54746_tokens[(_54746_tokens.len() - 1LL)], ._field_Kind=_54918_t, ._field_Exprs=_1d2601012_buildStructLitExprs(_self_, &(_54746_tokens))});;
}



inline jule::Ptr<_1d05e36dd_Expr> _1d2601661_buildBraceLitPart(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _57141_tokens) {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _57218_l;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _57225_r;;
	({
		__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_assign_result = _1d2605005_splitDelim(_57141_tokens, static_cast<jule::U64>(10LLU));
		_57218_l = __jule_assign_result.__jule_result_arg0;
		_57225_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_57218_l != nullptr)) {
		return jule::new_ptr<_1d05e36dd_Expr>(_1d05e36dd_Expr{._field_Token=(*(_57141_tokens))[0LL], ._field_End=(*(_57141_tokens))[((*(_57141_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1d05e9639_KeyValPair>(_1d05e9639_KeyValPair{._field_Key=_1d260428a_buildFromTokens(_self_, _57218_l), ._field_Val=_1d260428a_buildFromTokens(_self_, _57225_r), ._field_Colon=(*(_57141_tokens))[_57218_l.len()]}), &__jule_any_type84)});;
	};
	return _1d260428a_buildFromTokens(_self_, (*(_57141_tokens)));;
}



inline jule::Ptr<_1d05e8ccb_BraceLit> _1d260196e_buildBraceLit(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _58837_tokens) {
	jule::Ptr<_1d05e8ccb_BraceLit> _58917_lit = jule::new_ptr<_1d05e8ccb_BraceLit>(_1d05e8ccb_BraceLit{._field_Token=(*(_58837_tokens))[0LL], ._field_End=(*(_58837_tokens))[((*(_58837_tokens)).len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _59417_parts = _1d26005c7_getBraceRangeLitExprParts(_self_, (*(_58837_tokens)));;
	if ((_59417_parts == nullptr)) {
		return _58917_lit;;
	};
	_58917_lit.get()._field_Exprs=jule::Slice<jule::Ptr<_1d05e36dd_Expr>>::alloc(0LL, _59417_parts.len());
	{
		auto expr = &(_59417_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ca745d:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _60021_part = *it;
			{
				_58917_lit.get()._field_Exprs = jule::alloc_for_append(_58917_lit.get()._field_Exprs,1);_58917_lit.get()._field_Exprs.__push(_1d2601661_buildBraceLitPart(_self_, &(_60021_part)));;
			}
			_iter_next_1b7ca745d:;
			++it;
			goto _iter_begin_1b7ca745d;
		}
		_iter_end_1b7ca745d:;
	};
	return _58917_lit;;
}



inline jule::Any _1d2601c7c_buildBraceRange(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _60739_tokens) {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _60818_exprTokens;;
	jule::I64 _60830_rangeN = 0;;
	({
		__jule_tuple_sx_22be1281d_Token__jule_tuple_int __jule_assign_result = _1d26057db_getRangeExprTokens(_60739_tokens);
		_60818_exprTokens = __jule_assign_result.__jule_result_arg0;
		_60830_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_60818_exprTokens.len() == 0LL)) {
			_case_begin_1b7ca8063:;
			{
				return jule::Any(_1d260196e_buildBraceLit(_self_, _60739_tokens), &__jule_any_type112);;
			}
		}
		else if ((_60830_rangeN > 0LL)) {
			_case_begin_1b7ca90a8:;
			{
				_1d25ea13d_pushErr(_self_, (*(_60739_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7ca84d6:;
	};
	jule::Ptr<_22be1281d_Token> _61913_elseToken = _60818_exprTokens[(_60818_exprTokens.len() - 1LL)];;
	if ((_60818_exprTokens[(_60818_exprTokens.len() - 1LL)].get()._field_Id == static_cast<jule::U64>(16LLU))) {
		_60818_exprTokens=_60818_exprTokens.slice(0LL, (_60818_exprTokens.len() - 1LL));
		jule::Any _62221_d = _1d2603b6e_build(_self_, &(_60818_exprTokens));;
		if ((_62221_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _62221_d };
			
			if (_match_expr.type == &__jule_any_type111) {
				_case_begin_1b7cabd8b:;
				{
					(*(_60739_tokens))=(*(_60739_tokens)).slice((_60818_exprTokens.len() + 1LL));
					jule::I64 _62925_i = 0LL;;
					jule::Slice<jule::Ptr<_22be1281d_Token>> _63025_rangeTokens = _1d2607c3e_range(&(_62925_i), jule::Str("{", 1), jule::Str("}", 1), _60739_tokens);;
					jule::Ptr<_1d05e7604_FnCallExpr> _63125_model = _62221_d.cast_ptr<_1d05e7604_FnCallExpr>(&__jule_any_type111);;
					if (_1d05e7bcb_Ignored(_63125_model.ptr())) {
						_1d25ea13d_pushErr(_self_, _61913_elseToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
						_1d25ea45c_pushSuggestion(_self_, jule::Str("just ignore exceptional or handle it but you cannot do both at same time", 72), jule::Slice<jule::Any>());
					};
					_63125_model.get()._field_Exception=_1d260b56c_buildScope((*(_self_))._field_p, &(_63025_rangeTokens), (*(_60739_tokens))[(_62925_i - 1LL)]);
					return _62221_d;;
				}
			}
			else {
				_case_begin_1b7cab8e6:;
				{
					_1d25ea13d_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1b7cabb8d:;
		};
	};
	{
		auto &_match_expr{ _60818_exprTokens[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b7cb1115:;
			{
				return _1d25eedce_buildUnsafe(_self_, _60739_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b7cb117b:;
			{
				return jule::Any(_1d25eeac1_buildAnonFn(_self_, _60739_tokens), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(1LLU) || _match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b7cb0ea0:;
			{
				return jule::Any(_1d2601342_buildTypedStructLiteral(_self_, (*(_60739_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1b7cac6c7:;
			{
				_1d25ea13d_pushErr(_self_, _60818_exprTokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7caaa05:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d260208a_getEnumerableParts(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _65941_tokens) {
	_65941_tokens=_65941_tokens.slice(1LL, (_65941_tokens.len() - 1LL));
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _66118_parts;;
	jule::Slice<_22ba3c6bd_Log> _66125_errors;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_65941_tokens), static_cast<jule::U64>(7LLU), true);
		_66118_parts = __jule_assign_result.__jule_result_arg0;
		_66125_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_66125_errors);
	return _66118_parts;;
}



inline jule::Ptr<_1d05e9d21_SliceExpr> _1d2602398_buildSlice(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _66633_tokens) {
	jule::Ptr<_1d05e9d21_SliceExpr> _66717_slc = jule::new_ptr<_1d05e9d21_SliceExpr>(_1d05e9d21_SliceExpr{._field_Token=_66633_tokens[0LL], ._field_End=_66633_tokens[(_66633_tokens.len() - 1LL)], });;
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _67217_parts = _1d260208a_getEnumerableParts(_self_, _66633_tokens);;
	if ((_67217_parts.len() == 0LL)) {
		return _66717_slc;;
	};
	_66717_slc.get()._field_Exprs=jule::Slice<jule::Ptr<_1d05e36dd_Expr>>::alloc(0LL, _67217_parts.len());
	{
		auto expr = &(_67217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cb523a:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _67821_p = *it;
			{
				if ((_67821_p.len() == 0LL)) {
					goto _iter_next_1b7cb523a;
				};
				_66717_slc.get()._field_Exprs = jule::alloc_for_append(_66717_slc.get()._field_Exprs,1);_66717_slc.get()._field_Exprs.__push(_1d260428a_buildFromTokens(_self_, _67821_p));;
			}
			_iter_next_1b7cb523a:;
			++it;
			goto _iter_begin_1b7cb523a;
		}
		_iter_end_1b7cb523a:;
	};
	return _66717_slc;;
}



inline jule::Ptr<_1d05ea690_IndexingExpr> _1d26027e9_buildIndexing(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _68836_exprTokens, jule::Slice<jule::Ptr<_22be1281d_Token>> _68913_tokens, jule::Ptr<_22be1281d_Token> _68935_errorToken) {
	jule::Ptr<_22be1281d_Token> _69017_end = _68913_tokens[(_68913_tokens.len() - 1LL)];;
	_68913_tokens=_68913_tokens.slice(1LL, (_68913_tokens.len() - 1LL));
	if ((_68913_tokens.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, _68935_errorToken, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d05e36dd_Expr> _69617_expr = _1d260428a_buildFromTokens(_self_, _68836_exprTokens);;
	if ((_69617_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d05e36dd_Expr> _70017_index = _1d260428a_buildFromTokens(_self_, _68913_tokens);;
	if ((_70017_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05ea690_IndexingExpr>(_1d05ea690_IndexingExpr{._field_Token=_68935_errorToken, ._field_End=_69017_end, ._field_Expr=_69617_expr, ._field_Index=_70017_index});;
}



inline jule::Ptr<_1d05eac9a_SlicingExpr> _1d2602d8d_buildSlicing(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _71236_exprTokens, jule::Slice<jule::Ptr<_22be1281d_Token>>* _71263_start, jule::Slice<jule::Ptr<_22be1281d_Token>>* _71314_to, jule::Ptr<_22be1281d_Token>* _71333_errorToken, jule::Ptr<_22be1281d_Token> _71357_end) {
	jule::Ptr<_1d05eac9a_SlicingExpr> _71417_slc = jule::new_ptr<_1d05eac9a_SlicingExpr>(_1d05eac9a_SlicingExpr{._field_Token=(*(_71333_errorToken)), ._field_End=_71357_end, ._field_Expr=_1d260428a_buildFromTokens(_self_, (*(_71236_exprTokens))), });;
	if (((*(_71263_start)).len() > 0LL)) {
		_71417_slc.get()._field_Start=_1d260428a_buildFromTokens(_self_, (*(_71263_start)));
	};
	if (((*(_71314_to)).len() > 0LL)) {
		_71417_slc.get()._field_To=_1d260428a_buildFromTokens(_self_, (*(_71314_to)));
	};
	return _71417_slc;;
}



inline jule::Any _1d260319b_buildBracketRange(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _72840_tokens) {
	jule::Ptr<_22be1281d_Token> _72917_errorToken = _72840_tokens[0LL];;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _73018_exprTokens;;
	jule::I64 _73030_rangeN = 0;;
	({
		__jule_tuple_sx_22be1281d_Token__jule_tuple_int __jule_assign_result = _1d26057db_getRangeExprTokens(&(_72840_tokens));
		_73018_exprTokens = __jule_assign_result.__jule_result_arg0;
		_73030_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_73018_exprTokens.len() == 0LL)) {
		return jule::Any(_1d2602398_buildSlice(_self_, _72840_tokens), &__jule_any_type99);;
	} else if ((_73030_rangeN > 0LL)) {
		_1d25ea13d_pushErr(_self_, _72917_errorToken, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_72840_tokens=_72840_tokens.slice(_73018_exprTokens.len());
	jule::Slice<jule::Ptr<_22be1281d_Token>> _74517_splitTokens = _72840_tokens.slice(1LL, (_72840_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _74618_start;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _74629_to;;
	({
		__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_assign_result = _1d2605005_splitDelim(&(_74517_splitTokens), static_cast<jule::U64>(10LLU));
		_74618_start = __jule_assign_result.__jule_result_arg0;
		_74629_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_74618_start != nullptr) || (_74629_to != nullptr))) {
		return jule::Any(_1d2602d8d_buildSlicing(_self_, &(_73018_exprTokens), &(_74618_start), &(_74629_to), &(_72917_errorToken), _72840_tokens[(_72840_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1d26027e9_buildIndexing(_self_, _73018_exprTokens, _72840_tokens, _72917_errorToken), &__jule_any_type107);;
}



inline jule::Any _1d26034a9_buildData(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _75333_tokens) {
	{
		auto _match_expr{ (*(_75333_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b7cc1587:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b7cc15ed:;
			{
				return _1d25eb194_buildSingle(_self_, (*(_75333_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b7cc16ca:;
			{
				if (((*(_75333_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(29LLU))) {
					return jule::Any(_1d25eb4a2_buildBindIdent(_self_, _75333_tokens), &__jule_any_type85);;
				};
			}
		}
		_match_end_1b7cc117a:;
	};
	jule::Ptr<_22be1281d_Token> _76517_token = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
	if (((_76517_token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _76517_token.get()._field_Kind.equal("...", 3))) {
		return jule::Any(_1d25ec805_buildVariadic(_self_, (*(_75333_tokens))), &__jule_any_type81);;
	};
	_76517_token=(*(_75333_tokens))[0LL];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7cc425a:;
			{
				if ((((*(_75333_tokens)).len() > 1LL) && _76517_token.get()._field_Kind.equal("*", 1))) {
					_76517_token=(*(_75333_tokens))[1LL];
					if ((_76517_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
						return jule::Any(_1d25ec1d9_buildType(_self_, _75333_tokens), &__jule_any_type94);;
					};
				};
				return jule::Any(_1d25eb7b0_buildUnary(_self_, (*(_75333_tokens))), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7cc42d2:;
			{
				if (((*(_75333_tokens)).len() < 3LL)) {
					goto _match_end_1b7cc417d;
				};
				if (((*(_75333_tokens)).len() > 3LL)) {
					jule::Ptr<_22be1281d_Token> _78721_t = (*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];;
					if (((_78721_t.get()._field_Id == static_cast<jule::U64>(2LLU)) && _78721_t.get()._field_Kind.equal(")", 1))) {
						goto _match_end_1b7cc417d;
					};
				};
				jule::Ptr<_22be1281d_Token> _79317_next = (*(_75333_tokens))[1LL];;
				if (((_79317_next.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_79317_next.get()._field_Kind.equal("]", 1)))) {
					goto _match_end_1b7cc417d;
				};
				return jule::Any(_1d25ec1d9_buildType(_self_, _75333_tokens), &__jule_any_type94);;
			}
		}
		_match_end_1b7cc417d:;
	};
	_76517_token=(*(_75333_tokens))[((*(_75333_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ _76517_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b7cc4733:;
			{
				return _1d25ec4e7_buildSubIdent(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7cc4799:;
			{
				return _1d25ecb13_buildOpRight(_self_, _75333_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7cc8e1e:;
			{
				{
					auto &_match_expr{ _76517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b7cca184:;
						{
							return _1d25ee4a5_buildParenthesesRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b7cca20b:;
						{
							return _1d2601c7c_buildBraceRange(_self_, _75333_tokens);;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b7cca283:;
						{
							return _1d260319b_buildBracketRange(_self_, (*(_75333_tokens)));;
						}
					}
					_match_end_1b7cca030:;
				};
			}
		}
		_match_end_1b7cc46bc:;
	};
	if ((_76517_token.get()._field_Id == static_cast<jule::U64>(31LLU))) {
		return jule::Any(_1d25ec1d9_buildType(_self_, _75333_tokens), &__jule_any_type94);;
	};
	_1d25ea13d_pushErr(_self_, _76517_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1d2603861_buildBinop(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _82634_tokens, jule::I64 _82652_i) {
	jule::Ptr<_22be1281d_Token> _82717_op = (*(_82634_tokens))[_82652_i];;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _82817_leftTokens = (*(_82634_tokens)).slice(0LL, _82652_i);;
	if ((_1d26045dc_isTypeOp(&(_82717_op.get()._field_Kind)) && _1d26048c8_isTypeRange(&(_82817_leftTokens)))) {
		return jule::Any(_1d25ec1d9_buildType(_self_, _82634_tokens), &__jule_any_type94);;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _83317_rightTokens = (*(_82634_tokens)).slice((_82652_i + 1LL));;
	if ((_82817_leftTokens.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("left operand expected for binary operator", 41), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_83317_rightTokens.len() == 0LL)) {
		_1d25ea13d_pushErr(_self_, (*(_82634_tokens))[_82652_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d25ea45c_pushSuggestion(_self_, jule::Str("right operand expected for binary operator", 42), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1d05e6ee9_BinopExpr>(_1d05e6ee9_BinopExpr{._field_Left=_1d260428a_buildFromTokens(_self_, _82817_leftTokens), ._field_Right=_1d260428a_buildFromTokens(_self_, _83317_rightTokens), ._field_Op=_82717_op}), &__jule_any_type113);;
}



inline jule::Any _1d2603b6e_build(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _85129_tokens) {
	if (((*(_85129_tokens))[0LL].get()._field_Id == static_cast<jule::U64>(39LLU))) {
		return jule::Any(_1d25ec1d9_buildType(_self_, _85129_tokens), &__jule_any_type94);;
	};
	jule::I64 _85513_i = _1d260529c_findLowestPrecOp(_85129_tokens);;
	if ((_85513_i == -1LL)) {
		return _1d26034a9_buildData(_self_, _85129_tokens);;
	};
	return _1d2603861_buildBinop(_self_, _85129_tokens, _85513_i);;
}



inline jule::Any _1d2603e7c_buildKind(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _86233_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _86318_parts;;
	jule::Slice<_22ba3c6bd_Log> _86325_errors;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(_86233_tokens, static_cast<jule::U64>(7LLU), true);
		_86318_parts = __jule_assign_result.__jule_result_arg0;
		_86325_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_86325_errors != nullptr)) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_86325_errors);
		return nullptr;;
	} else if ((_86318_parts.len() > 1LL)) {
		return jule::Any(_1d25ea76a_buildTuple(_self_, &(_86318_parts)), &__jule_any_type86);;
	};
	return _1d2603b6e_build(_self_, _86233_tokens);;
}



inline jule::Ptr<_1d05e36dd_Expr> _1d260428a_buildFromTokens(_1d25e9868_exprBuilder* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _87338_tokens) {
	if ((_87338_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _87717_kind = _1d2603e7c_buildKind(_self_, &(_87338_tokens));;
	if ((_87717_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05e36dd_Expr>(_1d05e36dd_Expr{._field_Token=_87338_tokens[0LL], ._field_End=_87338_tokens[(_87338_tokens.len() - 1LL)], ._field_Kind=_87717_kind});;
}







std::ostream &operator<<(std::ostream &_Stream, _1d25e9868_exprBuilder _Src) {
	_Stream << "exprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d260619e_assignInfo _Src) {
	_Stream << "assignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline void _1d2609dc8_stop(_1d2609a98_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1d260a13c_stopped(_1d2609a98_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1d260a505_pushErr(_1d2609a98_parser* _self_, jule::Ptr<_22be1281d_Token> _28326_token, jule::Str _28341_fmt, jule::Slice<jule::Any> _28354_args) {
	(*(_self_))._field_errors = jule::alloc_for_append((*(_self_))._field_errors,1);(*(_self_))._field_errors.__push(_1d2608e3d_compilerErr(&(_28326_token), &(_28341_fmt), _28354_args));;
}



inline void _1d260a824_pushSuggestion(_1d2609a98_parser* _self_, jule::Str _28833_fmt, jule::Slice<jule::Any> _28846_args) {
	{
		_1d260936c_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _28833_fmt, _28846_args);
	};
}



inline jule::Ptr<_1d05e36dd_Expr> _1d260ab32_buildExpr(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _29234_tokens) {
	return _1d260428a_buildFromTokens(_self_.get()._field_ep.ptr(), (*(_29234_tokens)));;
}



inline jule::Ptr<_1d05aba4c_Directive> _1d260ae40_buildDirective(_1d2609a98_parser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _29637_tokens) {
	if ((_29637_tokens.len() == 1LL)) {
		_1d260a505_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_29637_tokens[1LL].get()._field_Column != (_29637_tokens[0LL].get()._field_Column + 1LL))) {
		_1d260a505_pushErr(_self_, _29637_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d05aba4c_Directive>(_1d05aba4c_Directive{._field_Tag=_29637_tokens[1LL], ._field_Args=_29637_tokens.slice(2LL)});;
}



inline void _1d260b1b5_pushDirective(_1d2609a98_parser* _self_, jule::Ptr<_1d05aba4c_Directive> _31136_d) {
	if ((_31136_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d11110:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _31616_pd = *it;
			{
				if ((_31136_d.get()._field_Tag.get()._field_Kind == _31616_pd.get()._field_Tag.get()._field_Kind)) {
					return;;
				};
			}
			_iter_next_1b7d11110:;
			++it;
			goto _iter_begin_1b7d11110;
		}
		_iter_end_1b7d11110:;
	};
	(*(_self_))._field_directives = jule::alloc_for_append((*(_self_))._field_directives,1);(*(_self_))._field_directives.__push(_31136_d);;
}



inline jule::Ptr<_1d05ee199_ScopeTree> _1d260b56c_buildScope(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _32435_tokens, jule::Ptr<_22be1281d_Token> _32457_end) {
	jule::Ptr<_1d05ee199_ScopeTree> _32517_s = _1d25db959_newScope();;
	_32517_s.get()._field_End=_32457_end;
	_1d25dd384_scopeParser _32717_sp = _1d25dd384_scopeParser{._field_p=_self_, };;
	_1d25e8e1c_build(&_32717_sp, _32435_tokens, &(_32517_s));
	return _32517_s;;
}



inline __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool _1d260b9bd__buildType(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _33442_tokens, jule::I64* _33513_i, jule::Bool _33522_err) {
	__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1d261a7bd_typeBuilder _33617_tb = _1d261a7bd_typeBuilder{._field_p=_self_, ._field_tokens=(*(_33442_tokens)), ._field_i=_33513_i, ._field_err=_33522_err};;
	jule::Ptr<_1d05de563_TypeDecl> _34218_decl;;
	jule::Bool _34224_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d261d7e3_build(&_33617_tb);
		_34218_decl = __jule_assign_result.__jule_result_arg0;
		_34224_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _34218_decl;
	__jule_func_result.__jule_result_arg1 = _34224_ok;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool _1d260be1e_buildType(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _34741_tokens, jule::I64* _34813_i, jule::Bool _34822_err) {
	__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_22be1281d_Token> _34913_token = (*(_34741_tokens))[(*(_34813_i))];;
	jule::Ptr<_1d05de563_TypeDecl> _35018_t;;
	jule::Bool _35021_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260b9bd__buildType(_self_, _34741_tokens, _34813_i, _34822_err);
		_35018_t = __jule_assign_result.__jule_result_arg0;
		_35021_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_34822_err && (!(_35021_ok)))) {
		_1d260a505_pushErr(_self_.ptr(), _34913_token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _35018_t;
	__jule_func_result.__jule_result_arg1 = _35021_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1d06054d0_TypeAliasDecl> _1d260c22c_buildTypeAliasDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _35743_tokens) {
	jule::I64 _35817_i = 1LL;;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d06054d0_TypeAliasDecl> _36317_tad = jule::new_ptr<_1d06054d0_TypeAliasDecl>(_1d06054d0_TypeAliasDecl{._field_Token=(*(_35743_tokens))[1LL], ._field_Ident=(*(_35743_tokens))[1LL].get()._field_Kind, });;
	jule::Ptr<_22be1281d_Token> _36717_token = (*(_35743_tokens))[_35817_i];;
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _36717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	_36717_token=(*(_35743_tokens))[_35817_i];
	if ((_36717_token.get()._field_Id != static_cast<jule::U64>(10LLU))) {
		_1d260a505_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\"", 18), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	(_35817_i)++;
	if ((_35817_i >= (*(_35743_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_35743_tokens))[(_35817_i - 1LL)], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return _36317_tad;;
	};
	jule::Ptr<_1d05de563_TypeDecl> _38818_t;;
	jule::Bool _38821_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, _35743_tokens, (&(_35817_i)), true);
		_38818_t = __jule_assign_result.__jule_result_arg0;
		_38821_ok = __jule_assign_result.__jule_result_arg1;
	});
	_36317_tad.get()._field_Kind=_38818_t;
	if ((_38821_ok && (_35817_i < (*(_35743_tokens)).len()))) {
		_1d260a505_pushErr(_self_.ptr(), (*(_35743_tokens))[_35817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_36317_tad.get()._field_Public=_1d2619756_isPub(&(_36317_tad.get()._field_Ident));
	return _36317_tad;;
}



inline void _1d260c54b_buildVarTypeAndExpr(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d0601b6e_VarDecl>* _39744_v, jule::Slice<jule::Ptr<_22be1281d_Token>>* _39762_tokens) {
	jule::I64 _39817_i = 0LL;;
	jule::Ptr<_22be1281d_Token> _39917_tok = (*(_39762_tokens))[_39817_i];;
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(10LLU))) {
		(_39817_i)++;
		if (((_39817_i >= (*(_39762_tokens)).len()) || (((*(_39762_tokens))[_39817_i].get()._field_Id == static_cast<jule::U64>(6LLU)) && (*(_39762_tokens))[_39817_i].get()._field_Kind.equal("=", 1)))) {
			_1d260a505_pushErr(_self_.ptr(), _39917_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1d05de563_TypeDecl> _40722_t;;
		jule::Bool _40725_ok = false;;
		({
			__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, _39762_tokens, (&(_39817_i)), true);
			_40722_t = __jule_assign_result.__jule_result_arg0;
			_40725_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_40725_ok) {
			(*(_39744_v)).get()._field_Kind=_40722_t;
			if ((_39817_i >= (*(_39762_tokens)).len())) {
				return;;
			};
			_39917_tok=(*(_39762_tokens))[_39817_i];
		};
	};
	if ((_39917_tok.get()._field_Id == static_cast<jule::U64>(6LLU))) {
		if ((!_39917_tok.get()._field_Kind.equal("=", 1))) {
			_1d260a505_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return;;
		};
		jule::Slice<jule::Ptr<_22be1281d_Token>> _42221_exprTokens = (*(_39762_tokens)).slice((_39817_i + 1LL));;
		if ((_42221_exprTokens.len() == 0LL)) {
			_1d260a505_pushErr(_self_.ptr(), _39917_tok, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return;;
		};
		(*(_39744_v)).get()._field_Expr=_1d260ab32_buildExpr(_self_, &(_42221_exprTokens));
	} else {
		_1d260a505_pushErr(_self_.ptr(), _39917_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d260c86a_buildVarCommon(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d0601b6e_VarDecl>* _43339_v, jule::Slice<jule::Ptr<_22be1281d_Token>> _43356_tokens) {
	(*(_43339_v)).get()._field_Token=_43356_tokens[0LL];
	if (((*(_43339_v)).get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), (*(_43339_v)).get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	(*(_43339_v)).get()._field_Ident=(*(_43339_v)).get()._field_Token.get()._field_Kind;
	(*(_43339_v)).get()._field_Public=_1d2619756_isPub(&((*(_43339_v)).get()._field_Ident));
	(*(_43339_v)).get()._field_Kind=nullptr;
	if ((_43356_tokens.len() > 1LL)) {
		_43356_tokens=_43356_tokens.slice(1LL);
		_1d260c54b_buildVarTypeAndExpr(_self_, _43339_v, &(_43356_tokens));
	};
}



inline void _1d260cc33_buildVarBegin(_1d2609a98_parser* _self_, jule::Ptr<_1d0601b6e_VarDecl>* _44937_v, jule::I64* _44955_i, jule::Slice<jule::Ptr<_22be1281d_Token>>* _44964_tokens) {
	jule::Ptr<_22be1281d_Token> _45013_tok = (*(_44964_tokens))[(*(_44955_i))];;
	{
		auto &_match_expr{ _45013_tok.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b7d283d0:;
			{
				(*(_44937_v)).get()._field_Statically=true;
				goto _case_begin_1b7d2916c;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b7d2916c:;
			{
				((*(_44955_i)))++;
				if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
					_1d260a505_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				if (((*(_44964_tokens))[(*(_44955_i))].get()._field_Id == static_cast<jule::U64>(34LLU))) {
					(*(_44937_v)).get()._field_Mutable=true;
					((*(_44955_i)))++;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU)) {
			_case_begin_1b7d288ec:;
			{
				((*(_44955_i)))++;
				(*(_44937_v)).get()._field_Constant=true;
			}
		}
		else {
			_case_begin_1b7d28842:;
			{
				_1d260a505_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1b7d286bb:;
	};
	if (((*(_44955_i)) >= (*(_44964_tokens)).len())) {
		_1d260a505_pushErr(_self_, _45013_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1d0601b6e_VarDecl> _1d260d041_buildVar(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _47932_tokens) {
	jule::I64 _48017_i = 0LL;;
	jule::Ptr<_1d0601b6e_VarDecl> _48117_v = jule::new_ptr<_1d0601b6e_VarDecl>(_1d0601b6e_VarDecl{._field_Token=_47932_tokens[0LL], });;
	_1d260cc33_buildVarBegin(_self_.ptr(), &(_48117_v), &(_48017_i), &(_47932_tokens));
	if ((_48017_i >= _47932_tokens.len())) {
		return nullptr;;
	};
	_47932_tokens=_47932_tokens.slice(_48017_i);
	if (((_47932_tokens[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _47932_tokens[0LL].get()._field_Kind.equal("&", 1))) {
		_48117_v.get()._field_Reference=true;
		if ((_47932_tokens.len() == 1LL)) {
			return nullptr;;
		};
		_47932_tokens=_47932_tokens.slice(1LL);
	};
	_1d260c86a_buildVarCommon(_self_, &(_48117_v), _47932_tokens);
	return _48117_v;;
}



inline jule::Ptr<_1d05eb509_GenericDecl> _1d260d34e_buildGeneric(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _50137_tokens) {
	jule::Ptr<_1d05eb509_GenericDecl> _50217_g = jule::new_ptr<_1d05eb509_GenericDecl>(_1d05eb509_GenericDecl{._field_Token=(*(_50137_tokens))[0LL], });;
	if ((_50217_g.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _50217_g.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_50217_g.get()._field_Ident=_50217_g.get()._field_Token.get()._field_Kind;
	if (((*(_50137_tokens)).len() > 1LL)) {
		if (((*(_50137_tokens))[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
			_1d260a505_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_50137_tokens)).len() == 2LL)) {
			_1d260a505_pushErr(_self_.ptr(), (*(_50137_tokens))[1LL], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_22be1281d_Token>> _51921_constraintTokens = (*(_50137_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _52022_parts;;
		jule::Slice<_22ba3c6bd_Log> _52029_errors;;
		({
			__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26083c1_partsKind(&(_51921_constraintTokens), jule::Str("|", 1), true);
			_52022_parts = __jule_assign_result.__jule_result_arg0;
			_52029_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_52029_errors.len() > 0LL)) {
			_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_52029_errors);
			return nullptr;;
		};
		_50217_g.get()._field_Constraint=jule::new_ptr<_1d05eb086_Constraint>(_1d05eb086_Constraint{._field_Mask=jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, _52022_parts.len())});
		{
			auto expr = &(_52022_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7d33e9b:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_22be1281d_Token>> _52625_part = *it;
				{
					jule::I64 _52725_i = 0LL;;
					jule::Ptr<_1d05de563_TypeDecl> _52826_kind;;
					({
						__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_52625_part), (&(_52725_i)), true);
						_52826_kind = __jule_assign_result.__jule_result_arg0;
					});
					_50217_g.get()._field_Constraint.get()._field_Mask = jule::alloc_for_append(_50217_g.get()._field_Constraint.get()._field_Mask,1);_50217_g.get()._field_Constraint.get()._field_Mask.__push(_52826_kind);;
					if ((_52725_i < _52625_part.len())) {
						_1d260a505_pushErr(_self_.ptr(), _52625_part[_52725_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1b7d33e9b:;
				++it;
				goto _iter_begin_1b7d33e9b;
			}
			_iter_end_1b7d33e9b:;
		};
	};
	return _50217_g;;
}



inline jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _1d260d706_buildGenerics(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _53838_tokens, jule::Ptr<_22be1281d_Token>* _53857_errorToken) {
	if (((*(_53838_tokens)).len() == 0LL)) {
		_1d260a505_pushErr(_self_.ptr(), (*(_53857_errorToken)), jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _54418_parts;;
	jule::Slice<_22ba3c6bd_Log> _54425_errors;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(_53838_tokens, static_cast<jule::U64>(7LLU), true);
		_54418_parts = __jule_assign_result.__jule_result_arg0;
		_54425_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_54425_errors.len() > 0LL)) {
		_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_54425_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>> _55017_generics = jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>::alloc(0LL, _54418_parts.len());;
	{
		auto expr = &(_54418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d3890c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _55121_part = *it;
			{
				_55017_generics = jule::alloc_for_append(_55017_generics,1);_55017_generics.__push(_1d260d34e_buildGeneric(_self_, &(_55121_part)));;
			}
			_iter_next_1b7d3890c:;
			++it;
			goto _iter_begin_1b7d3890c;
		}
		_iter_end_1b7d3890c:;
	};
	return _55017_generics;;
}



inline jule::Ptr<_1d05ee870_ParamDecl> _1d260da14_buildSelfParam(_1d2609a98_parser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _55837_tokens) {
	if ((_55837_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1d05ee870_ParamDecl> _56317_param = jule::new_ptr<_1d05ee870_ParamDecl>();;
	jule::I64 _56617_i = 0LL;;
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_56317_param.get()._field_Mutable=true;
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1d260a505_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if (_55837_tokens[_56617_i].get()._field_Kind.equal("&", 1)) {
		_56317_param.get()._field_Ident=jule::Str("&", 1);
		(_56617_i)++;
		if ((_56617_i >= _55837_tokens.len())) {
			_1d260a505_pushErr(_self_, _55837_tokens[(_56617_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	if ((_55837_tokens[_56617_i].get()._field_Id == static_cast<jule::U64>(26LLU))) {
		(_56317_param.get()._field_Ident).append("self", 4);
		_56317_param.get()._field_Token=_55837_tokens[_56617_i];
		(_56617_i)++;
		if ((_56617_i < _55837_tokens.len())) {
			_1d260a505_pushErr(_self_, _55837_tokens[_56617_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	};
	return _56317_param;;
}



inline void _1d260ddcc_paramTypeBegin(_1d2609a98_parser* _self_, jule::Ptr<_1d05ee870_ParamDecl>* _59738_param, jule::I64* _59762_i, jule::Slice<jule::Ptr<_22be1281d_Token>>* _59771_tokens) {
	for (; ((*(_59762_i)) < (*(_59771_tokens)).len()); ((*(_59762_i)))++) {
		{
			jule::Ptr<_22be1281d_Token> _59917_token = (*(_59771_tokens))[(*(_59762_i))];;
			if ((_59917_token.get()._field_Id != static_cast<jule::U64>(6LLU))) {
				return;;
			} else if ((!_59917_token.get()._field_Kind.equal("...", 3))) {
				return;;
			};
			if ((*(_59738_param)).get()._field_Variadic) {
				_1d260a505_pushErr(_self_, _59917_token, jule::Str("define is already variadic", 26), jule::Slice<jule::Any>());
				goto _iter_next_1b7d3eeeb;
			};
			(*(_59738_param)).get()._field_Variadic=true;
		}
	_iter_next_1b7d3eeeb:;
	}
	_iter_end_1b7d3eeeb:;;
}



inline void _1d260e1eb_buildParamType(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d05ee870_ParamDecl>* _61439_param, jule::Slice<jule::Ptr<_22be1281d_Token>>* _61463_tokens) {
	jule::I64 _61517_i = 0LL;;
	_1d260ddcc_paramTypeBegin(_self_.ptr(), _61439_param, &(_61517_i), _61463_tokens);
	if ((_61517_i >= (*(_61463_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, _61463_tokens, (&(_61517_i)), true);
		(*(_61439_param)).get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_61517_i < (*(_61463_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_61463_tokens))[_61517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
}



inline void _1d260e51a_buildParamBody(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d05ee870_ParamDecl>* _62739_param, jule::Slice<jule::Ptr<_22be1281d_Token>> _62762_tokens) {
	jule::Ptr<_22be1281d_Token> _62817_tok = _62762_tokens[0LL];;
	if ((_62762_tokens.len() == 1LL)) {
		(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
		return;;
	} else if ((_62762_tokens.len() < 3LL)) {
		_1d260a505_pushErr(_self_.ptr(), _62817_tok, jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return;;
	};
	if ((_62762_tokens[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
		(*(_62739_param)).get()._field_Ident=jule::Str("<anonymous>", 11);
		_1d260e1eb_buildParamType(_self_, _62739_param, &(_62762_tokens));
		return;;
	};
	(*(_62739_param)).get()._field_Ident=_62817_tok.get()._field_Kind;
	_62762_tokens=_62762_tokens.slice(2LL);
	_1d260e1eb_buildParamType(_self_, _62739_param, &(_62762_tokens));
}



inline jule::Ptr<_1d05ee870_ParamDecl> _1d260e828_buildParam(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _64734_tokens) {
	jule::Ptr<_1d05ee870_ParamDecl> _64817_param = jule::new_ptr<_1d05ee870_ParamDecl>(_1d05ee870_ParamDecl{._field_Token=_64734_tokens[0LL], });;
	if ((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(34LLU))) {
		_64817_param.get()._field_Mutable=true;
		if ((_64734_tokens.len() == 1LL)) {
			_1d260a505_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_64734_tokens=_64734_tokens.slice(1LL);
		_64817_param.get()._field_Token=_64734_tokens[0LL];
	};
	if ((_64734_tokens.len() >= 3LL)) {
		if (((_64817_param.get()._field_Token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _64817_param.get()._field_Token.get()._field_Kind.equal("&", 1))) {
			if ((_64734_tokens.len() == 1LL)) {
				_1d260a505_pushErr(_self_.ptr(), _64734_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if (((_64734_tokens[1LL].get()._field_Id == static_cast<jule::U64>(1LLU)) && (_64734_tokens[2LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
				_64817_param.get()._field_Reference=true;
				_64734_tokens=_64734_tokens.slice(1LL);
				_64817_param.get()._field_Token=_64734_tokens[0LL];
			};
		};
	};
	if ((_64817_param.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_64817_param.get()._field_Ident=jule::Str("<anonymous>", 11);
		_1d260e1eb_buildParamType(_self_, &(_64817_param), &(_64734_tokens));
	} else {
		_1d260e51a_buildParamBody(_self_, &(_64817_param), _64734_tokens);
	};
	return _64817_param;;
}



inline void _1d260ea9d_checkParams(_1d2609a98_parser* _self_, jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>>* _69035_params) {
	{
		auto expr = _69035_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d4c965:;
		if (it != expr_end) {
			jule::Ptr<_1d05ee870_ParamDecl> _69121_param = *it;
			{
				if ((_1d05eebd3_IsSelf(_69121_param.ptr()) || (_69121_param.get()._field_Kind != nullptr))) {
					goto _iter_next_1b7d4c965;
				};
				if ((_69121_param.get()._field_Token == nullptr)) {
					_1d260a505_pushErr(_self_, _69121_param.get()._field_Token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
				} else {
					_69121_param.get()._field_Kind=jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_69121_param.get()._field_Token, ._field_Ident=_69121_param.get()._field_Token.get()._field_Kind, }), &__jule_any_type20)});
					_69121_param.get()._field_Ident=jule::Str("<anonymous>", 11);
				};
			}
			_iter_next_1b7d4c965:;
			++it;
			goto _iter_begin_1b7d4c965;
		}
		_iter_end_1b7d4c965:;
	};
}



inline jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>> _1d260ee55_buildParams(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _71036_tokens, jule::Bool _71054_method) {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _71118_parts;;
	jule::Slice<_22ba3c6bd_Log> _71125_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(_71036_tokens, static_cast<jule::U64>(7LLU), true);
		_71118_parts = __jule_assign_result.__jule_result_arg0;
		_71125_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_71125_errs);
	if ((_71118_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>> _71717_params = nullptr;;
	if ((_71054_method && (_71118_parts.len() > 0LL))) {
		jule::Ptr<_1d05ee870_ParamDecl> _71921_param = _1d260da14_buildSelfParam(_self_.ptr(), _71118_parts[0LL]);;
		if (((_71921_param != nullptr) && _1d05eebd3_IsSelf(_71921_param.ptr()))) {
			_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_71921_param);;
			_71118_parts=_71118_parts.slice(1LL);
		};
	};
	{
		auto expr = &(_71118_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d51d10:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _72621_part = *it;
			{
				jule::Ptr<_1d05ee870_ParamDecl> _72721_param = _1d260e828_buildParam(_self_, _72621_part);;
				if ((_72721_param != nullptr)) {
					_71717_params = jule::alloc_for_append(_71717_params,1);_71717_params.__push(_72721_param);;
				};
			}
			_iter_next_1b7d51d10:;
			++it;
			goto _iter_begin_1b7d51d10;
		}
		_iter_end_1b7d51d10:;
	};
	_1d260ea9d_checkParams(_self_.ptr(), &(_71717_params));
	return _71717_params;;
}



inline __jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool _1d261030c_buildMultiRetType(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _73742_tokens, jule::I64* _73765_i) {
	__jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1d05e22d0_RetTypeDecl>();
	((*(_73765_i)))++;
	if (((*(_73765_i)) >= (*(_73742_tokens)).len())) {
		((*(_73765_i)))--;
		({
			__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, _73742_tokens, (&((*(_73765_i)))), false);
			__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_73765_i)))--;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _74717_rangeTokens = _1d2607c3e_range(_73765_i, jule::Str("(", 1), jule::Str(")", 1), _73742_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _74918_parts;;
	jule::Slice<_22ba3c6bd_Log> _74925_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_74717_rangeTokens), static_cast<jule::U64>(7LLU), true);
		_74918_parts = __jule_assign_result.__jule_result_arg0;
		_74925_errs = __jule_assign_result.__jule_result_arg1;
	});
	_self_.get()._field_errors=jule::append(_self_.get()._field_errors,_74925_errs);
	if ((_74918_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _75517_types = jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, _74918_parts.len());;
	__jule_func_result.__jule_result_arg0.get()._field_Idents=jule::Slice<jule::Ptr<_22be1281d_Token>>::alloc(0LL, _74918_parts.len());
	{
		auto expr = &(_74918_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d57e15:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _75721_part = *it;
			{
				jule::Ptr<_22be1281d_Token> _75821_token = _75721_part[0LL];;
				jule::I64 _75921_offset = 0LL;;
				if ((_75721_part.len() > 1LL)) {
					_75821_token=_75721_part[1LL];
					if ((_75821_token.get()._field_Id == static_cast<jule::U64>(10LLU))) {
						_75921_offset=2LL;
						if ((_75721_part.len() < 3LL)) {
							_1d260a505_pushErr(_self_.ptr(), _75821_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
							goto _iter_next_1b7d57e15;
						};
					};
				};
				_75821_token=_75721_part[0LL];
				if ((_75921_offset != 2LL)) {
					jule::Ptr<_22be1281d_Token> _77525_newToken = jule::new_ptr<_22be1281d_Token>((*(_75821_token)));;
					_77525_newToken.get()._field_Kind=jule::Str("<anonymous>", 11);
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_77525_newToken);;
				} else {
					__jule_func_result.__jule_result_arg0.get()._field_Idents = jule::alloc_for_append(__jule_func_result.__jule_result_arg0.get()._field_Idents,1);__jule_func_result.__jule_result_arg0.get()._field_Idents.__push(_75821_token);;
				};
				jule::Ptr<_1d05de563_TypeDecl> _78222_tk;;
				({
					__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_75721_part), (&(_75921_offset)), true);
					_78222_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_75921_offset < _75721_part.len())) {
					_1d260a505_pushErr(_self_.ptr(), _75721_part[_75921_offset], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				_75517_types = jule::alloc_for_append(_75517_types,1);_75517_types.__push(_78222_tk);;
			}
			_iter_next_1b7d57e15:;
			++it;
			goto _iter_begin_1b7d57e15;
		}
		_iter_end_1b7d57e15:;
	};
	if ((_75517_types.len() > 1LL)) {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=(*(_73742_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1d05e0c5c_TupleTypeDecl>(_1d05e0c5c_TupleTypeDecl{._field_Types=_75517_types}), &__jule_any_type80)});
	} else {
		__jule_func_result.__jule_result_arg0.get()._field_Kind=_75517_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool _1d26106b4_buildRetType(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _80537_tokens, jule::I64* _80560_i) {
	__jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1d05e22d0_RetTypeDecl>();
	if (((*(_80560_i)) >= (*(_80537_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_22be1281d_Token> _81117_token = (*(_80537_tokens))[(*(_80560_i))];;
	{
		auto &_match_expr{ _81117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7d60c75:;
			{
				if (_81117_token.get()._field_Kind.equal("{", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7d60cdb:;
			{
				if (_81117_token.get()._field_Kind.equal("=", 1)) {
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(10LLU)) {
			_case_begin_1b7d60d52:;
			{
				if ((((*(_80560_i)) + 1LL) >= (*(_80537_tokens)).len())) {
					_1d260a505_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_80560_i)))++;
				_81117_token=(*(_80537_tokens))[(*(_80560_i))];
				if ((_81117_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _81117_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("(", 1)) {
							_case_begin_1b7d63580:;
							{
								({
									__jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1d261030c_buildMultiRetType(_self_, _80537_tokens, _80560_i);
									__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
									__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
								});
								return __jule_func_result;;
							}
						}
						else if (_match_expr == jule::Str("{", 1)) {
							_case_begin_1b7d635e6:;
							{
								_1d260a505_pushErr(_self_.ptr(), _81117_token, jule::Str("type missing", 12), jule::Slice<jule::Any>());
								return __jule_func_result;;
							}
						}
						_match_end_1b7d63382:;
					};
				};
				({
					__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, _80537_tokens, (&((*(_80560_i)))), true);
					__jule_func_result.__jule_result_arg0.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1b7d60c0e:;
	};
	((*(_80560_i)))++;
	_1d260a505_pushErr(_self_.ptr(), _81117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1d0600b90_FnDecl> _1d2610b15_buildFnPrototype(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _85041_tokens, jule::I64* _85064_i, jule::Bool _85072_method) {
	jule::Ptr<_1d0600b90_FnDecl> _85117_f = jule::new_ptr<_1d0600b90_FnDecl>(_1d0600b90_FnDecl{._field_Token=(*(_85041_tokens))[(*(_85064_i))], });;
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		_85117_f.get()._field_Statically=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	if ((_85117_f.get()._field_Token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		_85117_f.get()._field_Unsafety=true;
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Token=(*(_85041_tokens))[(*(_85064_i))];
	};
	((*(_85064_i)))++;
	if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_22be1281d_Token> _88413_tok = (*(_85041_tokens))[(*(_85064_i))];;
	if ((_88413_tok.get()._field_Id == static_cast<jule::U64>(1LLU))) {
		((*(_85064_i)))++;
		if (((*(_85064_i)) >= (*(_85041_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), _85117_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_85117_f.get()._field_Ident=_88413_tok.get()._field_Kind;
	} else {
		_85117_f.get()._field_Ident=jule::Str("<anonymous>", 11);
	};
	jule::Ptr<_22be1281d_Token> _89613_errorToken = (*(_85041_tokens))[(*(_85064_i))];;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _89717_genericsTokens = _1d2607c3e_range(_85064_i, jule::Str("[", 1), jule::Str("]", 1), _85041_tokens);;
	if ((_89717_genericsTokens != nullptr)) {
		_85117_f.get()._field_Generics=_1d260d706_buildGenerics(_self_, &(_89717_genericsTokens), &(_89613_errorToken));
	};
	if ((!(*(_85041_tokens))[(*(_85064_i))].get()._field_Kind.equal("(", 1))) {
		_1d260a505_pushErr(_self_.ptr(), (*(_85041_tokens))[(*(_85064_i))], jule::Str("missing function parentheses", 28), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _90717_paramsToks = _1d2607c3e_range(_85064_i, jule::Str("(", 1), jule::Str(")", 1), _85041_tokens);;
	if ((_90717_paramsToks.len() > 0LL)) {
		_85117_f.get()._field_Params=_1d260ee55_buildParams(_self_, &(_90717_paramsToks), _85072_method);
	};
	if (((*(_85064_i)) < (*(_85041_tokens)).len())) {
		jule::Ptr<_22be1281d_Token> _91317_token = (*(_85041_tokens))[(*(_85064_i))];;
		if (((_91317_token.get()._field_Id == static_cast<jule::U64>(6LLU)) && _91317_token.get()._field_Kind.equal("!", 1))) {
			_85117_f.get()._field_Exceptional=true;
			((*(_85064_i)))++;
		};
	};
	_85117_f.get()._field_Public=_1d2619756_isPub(&(_85117_f.get()._field_Ident));
	({
		__jule_tuple_x_1d05e22d0_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1d26106b4_buildRetType(_self_, _85041_tokens, _85064_i);
		_85117_f.get()._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _85117_f;;
}



inline jule::Ptr<_1d0600b90_FnDecl> _1d2611066_buildFn(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _92732_tokens, jule::Bool _92750_method, jule::Bool _92764_prototype) {
	jule::I64 _92817_i = 0LL;;
	jule::Ptr<_1d0600b90_FnDecl> _92917_f = _1d2610b15_buildFnPrototype(_self_, _92732_tokens, &(_92817_i), _92750_method);;
	if (_92764_prototype) {
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), (*(_92732_tokens))[(_92817_i + 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
		return _92917_f;;
	} else if ((_92917_f == nullptr)) {
		return _92917_f;;
	};
	if ((_92817_i >= (*(_92732_tokens)).len())) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _94517_blockTokens = _1d2607c3e_range(&(_92817_i), jule::Str("{", 1), jule::Str("}", 1), _92732_tokens);;
	if ((_94517_blockTokens != nullptr)) {
		_92917_f.get()._field_Scope=_1d260b56c_buildScope(_self_, &(_94517_blockTokens), (*(_92732_tokens))[(_92817_i - 1LL)]);
		_92917_f.get()._field_Scope.get()._field_Unsafety=_92917_f.get()._field_Unsafety;
		if ((_92817_i < (*(_92732_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), (*(_92732_tokens))[_92817_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		};
	} else {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _92917_f.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _92917_f;;
}



inline jule::Slice<jule::Ptr<_22be1281d_Token>> _1d2611374_getUseDeclSelectors(_1d2609a98_parser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _96142_tokens) {
	jule::I64 _96217_i = 0LL;;
	_96142_tokens=_1d2607c3e_range(&(_96217_i), jule::Str("{", 1), jule::Str("}", 1), &(_96142_tokens));
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _96418_parts;;
	jule::Slice<_22ba3c6bd_Log> _96425_errs;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_96142_tokens), static_cast<jule::U64>(7LLU), true);
		_96418_parts = __jule_assign_result.__jule_result_arg0;
		_96425_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_96425_errs.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*(_self_))._field_errors,_96425_errs);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _97017_selectors = jule::Slice<jule::Ptr<_22be1281d_Token>>::alloc(0LL, _96418_parts.len());;
	{
		auto expr = &(_96418_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d773c9:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _97121_part = *it;
			{
				if ((_97121_part.len() > 1LL)) {
					_1d260a505_pushErr(_self_, _97121_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				jule::Ptr<_22be1281d_Token> _97521_tok = _97121_part[0LL];;
				if (((_97521_tok.get()._field_Id != static_cast<jule::U64>(1LLU)) && (_97521_tok.get()._field_Id != static_cast<jule::U64>(26LLU)))) {
					_1d260a505_pushErr(_self_, _97521_tok, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					_1d260a824_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
					goto _iter_next_1b7d773c9;
				};
				_97017_selectors = jule::alloc_for_append(_97017_selectors,1);_97017_selectors.__push(_97521_tok);;
			}
			_iter_next_1b7d773c9:;
			++it;
			goto _iter_begin_1b7d773c9;
		}
		_iter_end_1b7d773c9:;
	};
	return _97017_selectors;;
}



inline void _1d2611693_buildBindUseDecl(_1d2609a98_parser* _self_, jule::Ptr<_1d06068bb_UseDecl>* _98640_decl, jule::Slice<jule::Ptr<_22be1281d_Token>>* _98657_tokens) {
	if (((*(_98657_tokens)).len() > 1LL)) {
		_1d260a505_pushErr(_self_, (*(_98657_tokens))[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	jule::Ptr<_22be1281d_Token> _99013_token = (*(_98657_tokens))[0LL];;
	if (((_99013_token.get()._field_Id != static_cast<jule::U64>(5LLU)) || ((_99013_token.get()._field_Kind[0LL] != '`') && (_99013_token.get()._field_Kind[0LL] != '\"')))) {
		_1d260a505_pushErr(_self_, _99013_token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return;;
	};
	(*(_98640_decl)).get()._field_Binded=true;
	(*(_98640_decl)).get()._field_LinkPath=_99013_token.get()._field_Kind.slice(1LL, (_99013_token.get()._field_Kind.len() - 1LL));
}



inline void _1d26119b2_buildStdUseDecl(_1d2609a98_parser* _self_, jule::Ptr<_1d06068bb_UseDecl>* _99939_decl, jule::Slice<jule::Ptr<_22be1281d_Token>> _99959_tokens) {
	(*(_99939_decl)).get()._field_Std=true;
	jule::Ptr<_22be1281d_Token> _100217_token = _99959_tokens[0LL];;
	if ((_99959_tokens.len() < 3LL)) {
		_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return;;
	};
	_99959_tokens=_99959_tokens.slice(2LL);
	_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _100217_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b7d8017e:;
			{
				_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7d80206:;
			{
				if ((!_100217_token.get()._field_Kind.equal("}", 1))) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_22be1281d_Token>> _101921_selectors = nullptr;;
				({
					__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_assign_result = _1d2607ed6_rangeLast(&(_99959_tokens));
					_99959_tokens = __jule_assign_result.__jule_result_arg0;
					_101921_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_99939_decl)).get()._field_Selected=_1d2611374_getUseDeclSelectors(_self_, _101921_selectors);
				if ((_99959_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7d8027d:;
			{
				if ((!_100217_token.get()._field_Kind.equal("*", 1))) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_100217_token=_99959_tokens[(_99959_tokens.len() - 1LL)];
				if ((_100217_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_99959_tokens=_99959_tokens.slice(0LL, (_99959_tokens.len() - 1LL));
				if ((_99959_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _100217_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_99939_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b7d80107:;
	};
	(*(_99939_decl)).get()._field_LinkPath=(jule::Str("std::", 5) + _1d2609614_tokstoa(&(_99959_tokens)));
}



inline void _1d2611cd1_buildIdentUseDecl(_1d2609a98_parser* _self_, jule::Ptr<_1d06068bb_UseDecl>* _106141_decl, jule::Slice<jule::Ptr<_22be1281d_Token>> _106161_tokens) {
	(*(_106141_decl)).get()._field_Std=false;
	jule::Ptr<_22be1281d_Token> _106417_token = _106161_tokens[(_106161_tokens.len() - 1LL)];;
	{
		auto &_match_expr{ _106417_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(21LLU)) {
			_case_begin_1b7d88907:;
			{
				_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7d88e35:;
			{
				if ((!_106417_token.get()._field_Kind.equal("}", 1))) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				jule::Slice<jule::Ptr<_22be1281d_Token>> _107521_selectors = nullptr;;
				({
					__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_assign_result = _1d2607ed6_rangeLast(&(_106161_tokens));
					_106161_tokens = __jule_assign_result.__jule_result_arg0;
					_107521_selectors = __jule_assign_result.__jule_result_arg1;
				});
				(*(_106141_decl)).get()._field_Selected=_1d2611374_getUseDeclSelectors(_self_, _107521_selectors);
				if ((_106161_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7d890cd:;
			{
				if ((!_106417_token.get()._field_Kind.equal("*", 1))) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106417_token=_106161_tokens[(_106161_tokens.len() - 1LL)];
				if ((_106417_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				_106161_tokens=_106161_tokens.slice(0LL, (_106161_tokens.len() - 1LL));
				if ((_106161_tokens.len() == 0LL)) {
					_1d260a505_pushErr(_self_, _106417_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
					return;;
				};
				(*(_106141_decl)).get()._field_Full=true;
			}
		}
		_match_end_1b7d88dd0:;
	};
	(*(_106141_decl)).get()._field_LinkPath=_1d2609614_tokstoa(&(_106161_tokens));
}



inline void _1d2612100_parseUseDecl(_1d2609a98_parser* _self_, jule::Ptr<_1d06068bb_UseDecl>* _112436_decl, jule::Slice<jule::Ptr<_22be1281d_Token>> _112456_tokens) {
	if ((*(_112436_decl)).get()._field_Binded) {
		_1d2611693_buildBindUseDecl(_self_, _112436_decl, &(_112456_tokens));
		return;;
	};
	jule::Ptr<_22be1281d_Token> _113017_token = _112456_tokens[0LL];;
	if ((_113017_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return;;
	};
	if (((_112456_tokens.len() > 2LL) && (_112456_tokens[1LL].get()._field_Id == static_cast<jule::U64>(11LLU)))) {
		(*(_112436_decl)).get()._field_Alias=_113017_token.get()._field_Kind;
		if ((_112456_tokens[2LL].get()._field_Id != static_cast<jule::U64>(1LLU))) {
			_1d260a505_pushErr(_self_, _113017_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			_1d260a824_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			return;;
		};
		_112456_tokens=_112456_tokens.slice(2LL);
		_113017_token=_112456_tokens[0LL];
	};
	;
	{
		
		if (_113017_token.get()._field_Kind.equal("std", 3)) {
			_case_begin_1b7d94281:;
			{
				_1d26119b2_buildStdUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		else {
			_case_begin_1b7d95b89:;
			{
				_1d2611cd1_buildIdentUseDecl(_self_, _112436_decl, _112456_tokens);
			}
		}
		_match_end_1b7d95b23:;
	};
}



inline jule::Ptr<_1d06068bb_UseDecl> _1d26124a7_buildUseDecl(_1d2609a98_parser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _115835_tokens, jule::Bool _115853_binded) {
	jule::Ptr<_1d06068bb_UseDecl> _115917_decl = jule::new_ptr<_1d06068bb_UseDecl>(_1d06068bb_UseDecl{._field_Token=_115835_tokens[0LL], ._field_Binded=_115853_binded, });;
	if ((_115835_tokens.len() < 2LL)) {
		_1d260a505_pushErr(_self_, _115917_decl.get()._field_Token, jule::Str("missing path of use statement", 29), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_115835_tokens=_115835_tokens.slice(1LL);
	_1d2612100_parseUseDecl(_self_, &(_115917_decl), _115835_tokens);
	return _115917_decl;;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261285e_buildTypeEnumItemKind(jule::Ptr<_1d2609a98_parser> _self_, jule::I64* _117246_i, jule::Slice<jule::Ptr<_22be1281d_Token>>* _117259_tokens) {
	jule::I64 _117317_braceN = 0LL;;
	jule::I64 _117413_exprStart = (*(_117246_i));;
	for (; ((*(_117246_i)) < (*(_117259_tokens)).len()); ((*(_117246_i)))++) {
		{
			jule::Ptr<_22be1281d_Token> _117617_t = (*(_117259_tokens))[(*(_117246_i))];;
			if ((_117617_t.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _117617_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b7d9a72c:;
						{
							(_117317_braceN)++;
							goto _iter_next_1b7d99297;
						}
					}
					else {
						_case_begin_1b7d9a331:;
						{
							(_117317_braceN)--;
						}
					}
					_match_end_1b7d9a122:;
				};
			};
			if ((_117317_braceN > 0LL)) {
				goto _iter_next_1b7d99297;
			};
			if (((_117617_t.get()._field_Id == static_cast<jule::U64>(7LLU)) || (((*(_117246_i)) + 1LL) >= (*(_117259_tokens)).len()))) {
				jule::Slice<jule::Ptr<_22be1281d_Token>> _119225_kindTokens = nullptr;;
				if ((_117617_t.get()._field_Id == static_cast<jule::U64>(7LLU))) {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart, (*(_117246_i)));
				} else {
					_119225_kindTokens=(*(_117259_tokens)).slice(_117413_exprStart);
				};
				jule::I64 _119825_j = 0LL;;
				jule::Ptr<_1d05de563_TypeDecl> _119926_kind;;
				({
					__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_119225_kindTokens), (&(_119825_j)), true);
					_119926_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_119825_j < _119225_kindTokens.len())) {
					_1d260a505_pushErr(_self_.ptr(), _119225_kindTokens[_119825_j], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				};
				return _119926_kind;;
			};
		}
	_iter_next_1b7d99297:;
	}
	_iter_end_1b7d99297:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>> _1d2612b6c_buildTypeEnumItems(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _120943_tokens) {
	jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>> _121017_items = jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _121117_i = 0LL;;
	for (; (_121117_i < (*(_120943_tokens)).len()); (_121117_i)++) {
		{
			jule::Ptr<_22be1281d_Token> _121321_t = (*(_120943_tokens))[_121117_i];;
			jule::Ptr<_1d060813c_TypeEnumItemDecl> _121421_item = jule::new_ptr<_1d060813c_TypeEnumItemDecl>();;
			_121421_item.get()._field_Token=_121321_t;
			if (((_121421_item.get()._field_Token.get()._field_Id == static_cast<jule::U64>(1LLU)) && (((*(_120943_tokens)).len() - _121117_i) > 2LL))) {
				_121421_item.get()._field_Ident=_121421_item.get()._field_Token.get()._field_Kind;
				_121321_t=(*(_120943_tokens))[(_121117_i + 1LL)];
				if ((_121321_t.get()._field_Id == static_cast<jule::U64>(10LLU))) {
					_121117_i+=2LL;
					if (((_121117_i >= (*(_120943_tokens)).len()) || ((*(_120943_tokens))[_121117_i].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
						_1d260a505_pushErr(_self_.ptr(), _121321_t, jule::Str("type missing", 12), jule::Slice<jule::Any>());
						goto _iter_next_1b7d9e9b7;
					};
				};
			};
			_121421_item.get()._field_Kind=_1d261285e_buildTypeEnumItemKind(_self_, &(_121117_i), _120943_tokens);
			_121017_items = jule::alloc_for_append(_121017_items,1);_121017_items.__push(_121421_item);;
		}
	_iter_next_1b7d9e9b7:;
	}
	_iter_end_1b7d9e9b7:;;
	return _121017_items;;
}



inline jule::Ptr<_1d0608747_TypeEnumDecl> _1d2612e7a_buildTypeEnumDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _123342_tokens) {
	jule::I64 _123417_i = 1LL;;
	jule::Ptr<_1d0608747_TypeEnumDecl> _123517_e = jule::new_ptr<_1d0608747_TypeEnumDecl>(_1d0608747_TypeEnumDecl{._field_Token=(*(_123342_tokens))[_123417_i], });;
	if ((_123517_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Ident=_123517_e.get()._field_Token.get()._field_Kind;
	_123417_i+=3LL;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _124517_itemTokens = _1d2607c3e_range(&(_123417_i), jule::Str("{", 1), jule::Str("}", 1), _123342_tokens);;
	if ((_124517_itemTokens == nullptr)) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _123517_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _123517_e;;
	} else if ((_123417_i < (*(_123342_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_123342_tokens))[_123417_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_123517_e.get()._field_Public=_1d2619756_isPub(&(_123517_e.get()._field_Ident));
	_123517_e.get()._field_End=(*(_123342_tokens))[(_123417_i - 1LL)];
	_123517_e.get()._field_Items=_1d2612b6c_buildTypeEnumItems(_self_, &(_124517_itemTokens));
	return _123517_e;;
}



inline jule::Ptr<_1d05e36dd_Expr> _1d2613332_buildEnumItemExpr(jule::Ptr<_1d2609a98_parser> _self_, jule::I64* _126042_i, jule::Slice<jule::Ptr<_22be1281d_Token>>* _126055_tokens) {
	jule::I64 _126117_braceN = 0LL;;
	jule::I64 _126213_exprStart = (*(_126042_i));;
	for (; ((*(_126042_i)) < (*(_126055_tokens)).len()); ((*(_126042_i)))++) {
		{
			jule::Ptr<_22be1281d_Token> _126417_t = (*(_126055_tokens))[(*(_126042_i))];;
			if ((_126417_t.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _126417_t.get()._field_Kind };
					
					if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
						_case_begin_1b7daa462:;
						{
							(_126117_braceN)++;
							goto _iter_next_1b7da8ecc;
						}
					}
					else {
						_case_begin_1b7daa066:;
						{
							(_126117_braceN)--;
						}
					}
					_match_end_1b7da9d57:;
				};
			};
			if ((_126117_braceN > 0LL)) {
				goto _iter_next_1b7da8ecc;
			};
			if (((_126417_t.get()._field_Id == static_cast<jule::U64>(7LLU)) || (((*(_126042_i)) + 1LL) >= (*(_126055_tokens)).len()))) {
				jule::Slice<jule::Ptr<_22be1281d_Token>> _128025_exprTokens = nullptr;;
				if ((_126417_t.get()._field_Id == static_cast<jule::U64>(7LLU))) {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart, (*(_126042_i)));
				} else {
					_128025_exprTokens=(*(_126055_tokens)).slice(_126213_exprStart);
				};
				return _1d260ab32_buildExpr(_self_, &(_128025_exprTokens));;
			};
		}
	_iter_next_1b7da8ecc:;
	}
	_iter_end_1b7da8ecc:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>> _1d2613640_buildEnumItems(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _129239_tokens) {
	jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>> _129317_items = jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>>::alloc(0LL, 1LL);;
	jule::I64 _129417_i = 0LL;;
	for (; (_129417_i < (*(_129239_tokens)).len()); (_129417_i)++) {
		{
			jule::Ptr<_22be1281d_Token> _129621_t = (*(_129239_tokens))[_129417_i];;
			jule::Ptr<_1d0606d3e_EnumItemDecl> _129721_item = jule::new_ptr<_1d0606d3e_EnumItemDecl>();;
			_129721_item.get()._field_Token=_129621_t;
			if ((_129721_item.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
				_1d260a505_pushErr(_self_.ptr(), _129721_item.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
			};
			_129721_item.get()._field_Ident=_129721_item.get()._field_Token.get()._field_Kind;
			if ((((_129417_i + 1LL) >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[(_129417_i + 1LL)].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
				if (((_129417_i + 1LL) < (*(_129239_tokens)).len())) {
					(_129417_i)++;
				};
				_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
				goto _iter_next_1b7dad564;
			};
			(_129417_i)++;
			_129621_t=(*(_129239_tokens))[_129417_i];
			(_129417_i)++;
			if ((_129621_t.get()._field_Id != static_cast<jule::U64>(10LLU))) {
				_1d260a505_pushErr(_self_.ptr(), _129621_t, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected colon \":\" for assignment", 33), jule::Slice<jule::Any>());
				goto _iter_next_1b7dad564;
			};
			if (((_129417_i >= (*(_129239_tokens)).len()) || ((*(_129239_tokens))[_129417_i].get()._field_Id == static_cast<jule::U64>(7LLU)))) {
				_1d260a505_pushErr(_self_.ptr(), _129621_t, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
				goto _iter_next_1b7dad564;
			};
			_129721_item.get()._field_Expr=_1d2613332_buildEnumItemExpr(_self_, &(_129417_i), _129239_tokens);
			_129317_items = jule::alloc_for_append(_129317_items,1);_129317_items.__push(_129721_item);;
		}
	_iter_next_1b7dad564:;
	}
	_iter_end_1b7dad564:;;
	return _129317_items;;
}



inline jule::Ptr<_1d0607867_EnumDecl> _1d261394d_buildEnumDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _132938_tokens) {
	if (((*(_132938_tokens)).len() < 3LL)) {
		_1d260a505_pushErr(_self_.ptr(), (*(_132938_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0607867_EnumDecl> _133417_e = jule::new_ptr<_1d0607867_EnumDecl>(_1d0607867_EnumDecl{._field_Token=(*(_132938_tokens))[1LL], });;
	if ((_133417_e.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Ident=_133417_e.get()._field_Token.get()._field_Kind;
	jule::I64 _134217_i = 2LL;;
	if (((*(_132938_tokens))[_134217_i].get()._field_Id == static_cast<jule::U64>(10LLU))) {
		(_134217_i)++;
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), (*(_132938_tokens))[(_134217_i - 1LL)], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return _133417_e;;
		};
		({
			__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, _132938_tokens, (&(_134217_i)), true);
			_133417_e.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_134217_i >= (*(_132938_tokens)).len())) {
			_1d2609dc8_stop(_self_.ptr());
			_1d260a505_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
			_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
			return _133417_e;;
		};
	} else {
		_133417_e.get()._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _135917_itemTokens = _1d2607c3e_range(&(_134217_i), jule::Str("{", 1), jule::Str("}", 1), _132938_tokens);;
	if ((_135917_itemTokens == nullptr)) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _133417_e.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _133417_e;;
	} else if ((_134217_i < (*(_132938_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_132938_tokens))[_134217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_133417_e.get()._field_Public=_1d2619756_isPub(&(_133417_e.get()._field_Ident));
	_133417_e.get()._field_End=(*(_132938_tokens))[(_134217_i - 1LL)];
	_133417_e.get()._field_Items=_1d2613640_buildEnumItems(_self_, &(_135917_itemTokens));
	return _133417_e;;
}



inline jule::Any _1d2613c5b_buildNodeEnumDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _137442_tokens) {
	if ((((*(_137442_tokens)).len() > 3LL) && ((*(_137442_tokens))[2LL].get()._field_Id == static_cast<jule::U64>(10LLU)))) {
		if (((*(_137442_tokens))[3LL].get()._field_Id == static_cast<jule::U64>(9LLU))) {
			return jule::Any(_1d2612e7a_buildTypeEnumDecl(_self_, _137442_tokens), &__jule_any_type18);;
		};
	};
	return jule::Any(_1d261394d_buildEnumDecl(_self_, _137442_tokens), &__jule_any_type17);;
}



inline jule::Ptr<_1d06089ab_FieldDecl> _1d2614069_buildField(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _138334_tokens) {
	jule::Ptr<_1d06089ab_FieldDecl> _138417_f = jule::new_ptr<_1d06089ab_FieldDecl>();;
	_138417_f.get()._field_Mutable=(_138334_tokens[0LL].get()._field_Id == static_cast<jule::U64>(34LLU));
	if (_138417_f.get()._field_Mutable) {
		if ((_138334_tokens.len() == 1LL)) {
			_1d260a505_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(1LL);
	};
	_138417_f.get()._field_Token=_138334_tokens[0LL];
	if ((_138417_f.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _138417_f.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138417_f.get()._field_Ident=_138417_f.get()._field_Token.get()._field_Kind;
	if ((_138334_tokens.len() == 1LL)) {
		_1d260a505_pushErr(_self_.ptr(), _138334_tokens[0LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_138334_tokens[1LL].get()._field_Id != static_cast<jule::U64>(10LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _138334_tokens[1LL], jule::Str("type missing", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_138334_tokens=_138334_tokens.slice(2LL);
	jule::I64 _141217_i = 0LL;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_138334_tokens), (&(_141217_i)), true);
		_138417_f.get()._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_141217_i < _138334_tokens.len())) {
		jule::Ptr<_22be1281d_Token> _141517_token = _138334_tokens[_141217_i];;
		if (((_141517_token.get()._field_Id != static_cast<jule::U64>(6LLU)) || (!_141517_token.get()._field_Kind.equal("=", 1)))) {
			_1d260a505_pushErr(_self_.ptr(), _138334_tokens[_141217_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_141217_i)++;
		if ((_141217_i >= _138334_tokens.len())) {
			_1d260a505_pushErr(_self_.ptr(), _141517_token, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_138334_tokens=_138334_tokens.slice(_141217_i);
		_138417_f.get()._field_Default=_1d260ab32_buildExpr(_self_, &(_138334_tokens));
	};
	_138417_f.get()._field_Public=_1d2619756_isPub(&(_138417_f.get()._field_Ident));
	return _138417_f;;
}



inline jule::Slice<jule::Ptr<_1d06089ab_FieldDecl>> _1d2614377_buildStructDeclFields(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _143245_tokens) {
	jule::Slice<jule::Ptr<_1d06089ab_FieldDecl>> _143317_fields = nullptr;;
	jule::Slice<jule::Ptr<_1d25dca59_stmt>> _143417_stmts = _1d25dce00_splitStmts(&(_143245_tokens));;
	{
		auto expr = &(_143417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7dc736e:;
		if (it != expr_end) {
			jule::Ptr<_1d25dca59_stmt> _143521_stmt = *it;
			{
				_143245_tokens=_143521_stmt.get()._field_tokens;
				jule::Ptr<_1d06089ab_FieldDecl> _143721_f = _1d2614069_buildField(_self_, _143245_tokens);;
				_143317_fields = jule::alloc_for_append(_143317_fields,1);_143317_fields.__push(_143721_f);;
			}
			_iter_next_1b7dc736e:;
			++it;
			goto _iter_begin_1b7dc736e;
		}
		_iter_end_1b7dc736e:;
	};
	return _143317_fields;;
}



inline jule::Ptr<_1d0609308_StructDecl> _1d2614685_buildStructDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _144340_tokens) {
	if (((*(_144340_tokens)).len() < 3LL)) {
		_1d260a505_pushErr(_self_.ptr(), (*(_144340_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _144917_i = 1LL;;
	jule::Ptr<_1d0609308_StructDecl> _145017_s = jule::new_ptr<_1d0609308_StructDecl>(_1d0609308_StructDecl{._field_Token=(*(_144340_tokens))[_144917_i], });;
	if ((_145017_s.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	(_144917_i)++;
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	_145017_s.get()._field_Ident=_145017_s.get()._field_Token.get()._field_Kind;
	jule::Ptr<_22be1281d_Token> _146413_errorToken = (*(_144340_tokens))[_144917_i];;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _146517_genericsTokens = _1d2607c3e_range(&(_144917_i), jule::Str("[", 1), jule::Str("]", 1), _144340_tokens);;
	if ((_146517_genericsTokens != nullptr)) {
		_145017_s.get()._field_Generics=_1d260d706_buildGenerics(_self_, &(_146517_genericsTokens), &(_146413_errorToken));
	};
	if ((_144917_i >= (*(_144340_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_144340_tokens))[(_144917_i - 1LL)], jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _147517_bodyTokens = _1d2607c3e_range(&(_144917_i), jule::Str("{", 1), jule::Str("}", 1), _144340_tokens);;
	if ((_147517_bodyTokens == nullptr)) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _145017_s.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return _145017_s;;
	};
	if ((_144917_i < (*(_144340_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_144340_tokens))[_144917_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_145017_s.get()._field_Public=_1d2619756_isPub(&(_145017_s.get()._field_Ident));
	_145017_s.get()._field_Fields=_1d2614377_buildStructDeclFields(_self_, _147517_bodyTokens);
	_145017_s.get()._field_End=(*(_144340_tokens))[(_144917_i - 1LL)];
	return _145017_s;;
}



inline void _1d261490a_checkMethodReceiver(_1d2609a98_parser* _self_, jule::Ptr<_1d0600b90_FnDecl>* _149139_f) {
	if ((*(_149139_f)).get()._field_Statically) {
		if ((((*(_149139_f)).get()._field_Params.len() > 0LL) && _1d05eebd3_IsSelf((*(_149139_f)).get()._field_Params[0LL].ptr()))) {
			_1d260a505_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("static functions cannot have receiver parameter", 47), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*(_149139_f)).get()._field_Params.len() == 0LL)) {
		_1d260a505_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1d05ee870_ParamDecl> _150313_param = (*(_149139_f)).get()._field_Params[0LL];;
	if ((!(_1d05eebd3_IsSelf(_150313_param.ptr())))) {
		_1d260a505_pushErr(_self_, (*(_149139_f)).get()._field_Token, jule::Str("missing receiver parameter", 26), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1d2614c29_buildTraitBody(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d06099ce_TraitDecl>* _151039_t, jule::Slice<jule::Ptr<_22be1281d_Token>> _151058_tokens) {
	jule::Slice<jule::Ptr<_1d25dca59_stmt>> _151117_stmts = _1d25dce00_splitStmts(&(_151058_tokens));;
	{
		auto expr = &(_151117_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7dd4c83:;
		if (it != expr_end) {
			jule::Ptr<_1d25dca59_stmt> _151221_stmt = *it;
			{
				_151058_tokens=_151221_stmt.get()._field_tokens;
				if ((_151058_tokens.len() == 0LL)) {
					goto _iter_next_1b7dd4c83;
				};
				{
					auto &_match_expr{ _151058_tokens[0LL].get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(31LLU)) {
						_case_begin_1b7dd7d52:;
						{
							jule::Ptr<_1d0600b90_FnDecl> _151925_f = _1d2611066_buildFn(_self_, &(_151058_tokens), true, true);;
							if ((_151925_f == nullptr)) {
								goto _match_end_1b7dd5d83;
							};
							_1d261490a_checkMethodReceiver(_self_.ptr(), &(_151925_f));
							if ((_151925_f.get()._field_Generics.len() > 0LL)) {
								_1d260a505_pushErr(_self_.ptr(), _151925_f.get()._field_Token, jule::Str("trait methods cannot have generics", 34), jule::Slice<jule::Any>());
							};
							(*(_151039_t)).get()._field_Methods = jule::alloc_for_append((*(_151039_t)).get()._field_Methods,1);(*(_151039_t)).get()._field_Methods.__push(_151925_f);;
						}
					}
					else {
						_case_begin_1b7dd57cd:;
						{
							jule::I64 _152925_i = 0LL;;
							jule::Ptr<_1d05de563_TypeDecl> _153026_ti;;
							jule::Bool _153030_ok = false;;
							({
								__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_151058_tokens), (&(_152925_i)), true);
								_153026_ti = __jule_assign_result.__jule_result_arg0;
								_153030_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_153030_ok))) {
								goto _match_end_1b7dd5d83;
							};
							if ((_152925_i < _151058_tokens.len())) {
								_1d260a505_pushErr(_self_.ptr(), _151058_tokens[_152925_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							};
							(*(_151039_t)).get()._field_Inherits = jule::alloc_for_append((*(_151039_t)).get()._field_Inherits,1);(*(_151039_t)).get()._field_Inherits.__push(_153026_ti);;
						}
					}
					_match_end_1b7dd5d83:;
				};
			}
			_iter_next_1b7dd4c83:;
			++it;
			goto _iter_begin_1b7dd4c83;
		}
		_iter_end_1b7dd4c83:;
	};
}



inline jule::Ptr<_1d06099ce_TraitDecl> _1d2615037_buildTraitDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _154239_tokens) {
	if (((*(_154239_tokens)).len() < 3LL)) {
		_1d260a505_pushErr(_self_.ptr(), (*(_154239_tokens))[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d06099ce_TraitDecl> _154717_t = jule::new_ptr<_1d06099ce_TraitDecl>(_1d06099ce_TraitDecl{._field_Token=(*(_154239_tokens))[1LL], });;
	if ((_154717_t.get()._field_Token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Ident=_154717_t.get()._field_Token.get()._field_Kind;
	jule::I64 _155517_i = 2LL;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _155617_bodyTokens = _1d2607c3e_range(&(_155517_i), jule::Str("{", 1), jule::Str("}", 1), _154239_tokens);;
	if ((_155617_bodyTokens == nullptr)) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _154717_t.get()._field_Token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_155517_i < (*(_154239_tokens)).len())) {
		_1d260a505_pushErr(_self_.ptr(), (*(_154239_tokens))[_155517_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_154717_t.get()._field_Public=_1d2619756_isPub(&(_154717_t.get()._field_Ident));
	_1d2614c29_buildTraitBody(_self_, &(_154717_t), _155617_bodyTokens);
	_154717_t.get()._field_End=(*(_154239_tokens))[(_155517_i - 1LL)];
	return _154717_t;;
}



inline jule::Ptr<_1d0600b90_FnDecl> _1d2615345_buildBindFn(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _157235_tokens) {
	_157235_tokens=_157235_tokens.slice(1LL);
	jule::Ptr<_1d0600b90_FnDecl> _157417_f = _1d2611066_buildFn(_self_, &(_157235_tokens), false, true);;
	if ((_157417_f != nullptr)) {
		_157417_f.get()._field_Public=false;
		_157417_f.get()._field_Binded=true;
	};
	return _157417_f;;
}



inline jule::Ptr<_1d0601b6e_VarDecl> _1d2615653_buildBindVar(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _158236_tokens) {
	_158236_tokens=_158236_tokens.slice(1LL);
	jule::Ptr<_1d0601b6e_VarDecl> _158417_v = _1d260d041_buildVar(_self_, _158236_tokens);;
	if ((_158417_v != nullptr)) {
		_158417_v.get()._field_Public=false;
		_158417_v.get()._field_Binded=true;
		if ((_158417_v.get()._field_Expr != nullptr)) {
			_1d260a505_pushErr(_self_.ptr(), _158417_v.get()._field_Token, jule::Str("binded variables cannot have expression", 39), jule::Slice<jule::Any>());
		};
	};
	return _158417_v;;
}



inline jule::Ptr<_1d0609308_StructDecl> _1d2615961_buildBindStruct(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _159539_tokens) {
	_159539_tokens=_159539_tokens.slice(1LL);
	jule::Ptr<_1d0609308_StructDecl> _159717_s = _1d2614685_buildStructDecl(_self_, &(_159539_tokens));;
	if ((_159717_s != nullptr)) {
		_159717_s.get()._field_Public=false;
		{
			auto expr = &(_159717_s.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7de4644:;
			if (it != expr_end) {
				jule::Ptr<_1d06089ab_FieldDecl> _160025_f = *it;
				{
					_160025_f.get()._field_Public=true;
				}
				_iter_next_1b7de4644:;
				++it;
				goto _iter_begin_1b7de4644;
			}
			_iter_end_1b7de4644:;
		};
		_159717_s.get()._field_Binded=true;
	};
	return _159717_s;;
}



inline jule::Ptr<_1d06054d0_TypeAliasDecl> _1d2615c6e_buildBindTypeAlias(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _160942_tokens) {
	_160942_tokens=_160942_tokens.slice(1LL);
	jule::Ptr<_1d06054d0_TypeAliasDecl> _161117_t = _1d260c22c_buildTypeAliasDecl(_self_, &(_160942_tokens));;
	if ((_161117_t != nullptr)) {
		_161117_t.get()._field_Public=false;
		_161117_t.get()._field_Binded=true;
	};
	return _161117_t;;
}



inline jule::Ptr<_1d06068bb_UseDecl> _1d261607c_buildBindUse(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _161936_tokens) {
	if ((_161936_tokens.len() == 1LL)) {
		_1d260a505_pushErr(_self_.ptr(), _161936_tokens[0LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_161936_tokens=_161936_tokens.slice(1LL);
	;
	return _1d26124a7_buildUseDecl(_self_.ptr(), _161936_tokens, true);;
}



inline jule::Any _1d261638a_buildBind(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _163034_tokens) {
	jule::Ptr<_22be1281d_Token> _163117_token = (*(_163034_tokens))[0LL];;
	if (((*(_163034_tokens)).len() == 1LL)) {
		_1d260a505_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_163117_token=(*(_163034_tokens))[1LL];
	{
		auto &_match_expr{ _163117_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b7de8b65:;
			{
				return jule::Any(_1d2615345_buildBindFn(_self_, (*(_163034_tokens))), &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(32LLU)) {
			_case_begin_1b7de9638:;
			{
				return jule::Any(_1d2615653_buildBindVar(_self_, (*(_163034_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b7de969e:;
			{
				return jule::Any(_1d2615961_buildBindStruct(_self_, (*(_163034_tokens))), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b7de9715:;
			{
				return jule::Any(_1d2615c6e_buildBindTypeAlias(_self_, (*(_163034_tokens))), &__jule_any_type12);;
			}
		}
		else {
			_case_begin_1b7de94d4:;
			{
				_1d260a505_pushErr(_self_.ptr(), _163117_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7de95c2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d0600b90_FnDecl> _1d2616698_getMethod(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _165434_tokens) {
	jule::I64 _165517_i = 0LL;;
	jule::Ptr<_22be1281d_Token> _165617_token = (*(_165434_tokens))[_165517_i];;
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(36LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id == static_cast<jule::U64>(33LLU))) {
		if (((_165517_i + 1LL) >= (*(_165434_tokens)).len())) {
			_1d260a505_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_165517_i)++;
		_165617_token=(*(_165434_tokens))[_165517_i];
	};
	if ((_165617_token.get()._field_Id != static_cast<jule::U64>(31LLU))) {
		_1d260a505_pushErr(_self_.ptr(), _165617_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1d2611066_buildFn(_self_, _165434_tokens, true, false);;
}



inline void _1d26169b7_parseImplBody(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d060a0d9_Impl>* _168338_ipl, jule::Slice<jule::Ptr<_22be1281d_Token>>* _168355_tokens) {
	jule::Slice<jule::Ptr<_1d25dca59_stmt>> _168417_stmts = _1d25dce00_splitStmts(_168355_tokens);;
	{
		auto expr = &(_168417_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e01035:;
		if (it != expr_end) {
			jule::Ptr<_1d25dca59_stmt> _168521_stmt = *it;
			{
				(*(_168355_tokens))=_168521_stmt.get()._field_tokens;
				jule::Ptr<_22be1281d_Token> _168721_token = (*(_168355_tokens))[0LL];;
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(37LLU)) {
						_case_begin_1b7e020be:;
						{
							_1d260b1b5_pushDirective(_self_.ptr(), _1d260ae40_buildDirective(_self_.ptr(), (*(_168355_tokens))));
							goto _iter_next_1b7e01035;
						}
					}
					_match_end_1b7e02069:;
				};
				{
					auto &_match_expr{ _168721_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(8LLU)) {
						_case_begin_1b7e02223:;
						{
							jule::Ptr<_1d0601b6e_VarDecl> _169625_v = _1d260d041_buildVar(_self_, (*(_168355_tokens)));;
							if ((_169625_v != nullptr)) {
								(*(_168338_ipl)).get()._field_Statics = jule::alloc_for_append((*(_168338_ipl)).get()._field_Statics,1);(*(_168338_ipl)).get()._field_Statics.__push(_169625_v);;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U64>(36LLU) || _match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
						_case_begin_1b7e02d39:;
						{
							jule::Ptr<_1d0600b90_FnDecl> _170325_f = _1d2616698_getMethod(_self_, _168355_tokens);;
							if ((_170325_f != nullptr)) {
								_1d261490a_checkMethodReceiver(_self_.ptr(), &(_170325_f));
								_1d2617358_applyFnMeta(_self_.ptr(), &(_170325_f));
								(*(_168338_ipl)).get()._field_Methods = jule::alloc_for_append((*(_168338_ipl)).get()._field_Methods,1);(*(_168338_ipl)).get()._field_Methods.__push(_170325_f);;
							};
						}
					}
					else {
						_case_begin_1b7e025db:;
						{
							_1d260a505_pushErr(_self_.ptr(), _168721_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
							goto _iter_next_1b7e01035;
						}
					}
					_match_end_1b7e02586:;
				};
			}
			_iter_next_1b7e01035:;
			++it;
			goto _iter_begin_1b7e01035;
		}
		_iter_end_1b7e01035:;
	};
}



inline jule::Ptr<_1d060a0d9_Impl> _1d2616cc5_buildImpl(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _171633_tokens) {
	jule::Ptr<_22be1281d_Token> _171717_token = _171633_tokens[0LL];;
	if ((_171633_tokens.len() < 2LL)) {
		_1d260a505_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I64 _172317_i = 1LL;;
	jule::Ptr<_1d05de563_TypeDecl> _172518_base;;
	jule::Bool _172528_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_172518_base = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1d260a505_pushErr(_self_.ptr(), _171717_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d060a0d9_Impl> _173417_ipl = jule::new_ptr<_1d060a0d9_Impl>(_1d060a0d9_Impl{._field_Base=_172518_base, });;
	_171717_token=_171633_tokens[_172317_i];
	if ((_171717_token.get()._field_Id != static_cast<jule::U64>(11LLU))) {
		if (((_171717_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && _171717_token.get()._field_Kind.equal("{", 1))) {
			({
				jule::Ptr<_1d05de563_TypeDecl> ___jule_assign_arg = _173417_ipl.get()._field_Dest;
				jule::Ptr<_1d05de563_TypeDecl> _1___jule_assign_arg = _173417_ipl.get()._field_Base;
				_173417_ipl.get()._field_Base = ___jule_assign_arg;
				_173417_ipl.get()._field_Dest = _1___jule_assign_arg;
			});
			goto _julec_label_body;
		};
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_172317_i)++;
	if ((_172317_i >= _171633_tokens.len())) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType(_self_, &(_171633_tokens), (&(_172317_i)), true);
		_173417_ipl.get()._field_Dest = __jule_assign_result.__jule_result_arg0;
		_172528_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_172528_ok))) {
		return nullptr;;
	};
	if ((_172317_i >= _171633_tokens.len())) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_body:;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _177217_bodyTokens = _1d2607c3e_range(&(_172317_i), jule::Str("{", 1), jule::Str("}", 1), &(_171633_tokens));;
	if ((_177217_bodyTokens == nullptr)) {
		_1d2609dc8_stop(_self_.ptr());
		_1d260a505_pushErr(_self_.ptr(), _171717_token, jule::Str("body is not exist", 17), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_172317_i < _171633_tokens.len())) {
		_1d260a505_pushErr(_self_.ptr(), _171633_tokens[_172317_i], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
	};
	_173417_ipl.get()._field_End=_171633_tokens[(_172317_i - 1LL)];
	_1d26169b7_parseImplBody(_self_, &(_173417_ipl), &(_177217_bodyTokens));
	return _173417_ipl;;
}



inline jule::Any _1d26170d3_buildNodeData(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _178738_tokens) {
	jule::Ptr<_22be1281d_Token> _178817_token = (*(_178738_tokens))[0LL];;
	{
		auto &_match_expr{ _178817_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(31LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
			_case_begin_1b7e11254:;
			{
				jule::Ptr<_1d0600b90_FnDecl> _179221_f = _1d2611066_buildFn(_self_, _178738_tokens, false, false);;
				if ((_179221_f != nullptr)) {
					_179221_f.get()._field_Global=true;
				};
				return jule::Any(_179221_f, &__jule_any_type14);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(32LLU) || _match_expr == static_cast<jule::U64>(8LLU) || _match_expr == static_cast<jule::U64>(34LLU) || _match_expr == static_cast<jule::U64>(36LLU)) {
			_case_begin_1b7e12079:;
			{
				return jule::Any(_1d260d041_buildVar(_self_, (*(_178738_tokens))), &__jule_any_type16);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(9LLU)) {
			_case_begin_1b7e120e0:;
			{
				return jule::Any(_1d260c22c_buildTypeAliasDecl(_self_, _178738_tokens), &__jule_any_type12);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(22LLU)) {
			_case_begin_1b7e1182b:;
			{
				return _1d2613c5b_buildNodeEnumDecl(_self_, _178738_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(23LLU)) {
			_case_begin_1b7e11892:;
			{
				return jule::Any(_1d2614685_buildStructDecl(_self_, _178738_tokens), &__jule_any_type13);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(27LLU)) {
			_case_begin_1b7e11908:;
			{
				return jule::Any(_1d2615037_buildTraitDecl(_self_, _178738_tokens), &__jule_any_type15);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(28LLU)) {
			_case_begin_1b7e1196e:;
			{
				return jule::Any(_1d2616cc5_buildImpl(_self_, (*(_178738_tokens))), &__jule_any_type11);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b7e122bb:;
			{
				return _1d261638a_buildBind(_self_, _178738_tokens);;
			}
		}
		else {
			_case_begin_1b7e11793:;
			{
				_1d260a505_pushErr(_self_.ptr(), _178817_token, jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7e115ea:;
	};
}



inline void _1d2617358_applyFnMeta(_1d2609a98_parser* _self_, jule::Ptr<_1d0600b90_FnDecl>* _182035_f) {
	(*(_182035_f)).get()._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1d26175cd_applyMeta(_1d2609a98_parser* _self_, _1d05ab651_Node* _182533_node) {
	{
		auto &_match_expr{ (*(_182533_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1b7e16e91:;
			{
				jule::Ptr<_1d0601b6e_VarDecl> _182821_v = (*(_182533_node))._field_Data.cast_ptr<_1d0601b6e_VarDecl>(&__jule_any_type16);;
				if ((_182821_v == nullptr)) {
					return;;
				};
				_182821_v.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1b7e17007:;
			{
				jule::Ptr<_1d0600b90_FnDecl> _183521_f = (*(_182533_node))._field_Data.cast_ptr<_1d0600b90_FnDecl>(&__jule_any_type14);;
				if ((_183521_f == nullptr)) {
					return;;
				};
				_1d2617358_applyFnMeta(_self_, &(_183521_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1b7e1706d:;
			{
				jule::Ptr<_1d0609308_StructDecl> _184121_sd = (*(_182533_node))._field_Data.cast_ptr<_1d0609308_StructDecl>(&__jule_any_type13);;
				if ((_184121_sd == nullptr)) {
					return;;
				};
				_184121_sd.get()._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1b7e16c82:;
	};
}



inline void _1d2617853_pushUseDecl(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_1d06068bb_UseDecl>* _185036_decl) {
	_self_.get()._field_ast.get()._field_UseDecls = jule::alloc_for_append(_self_.get()._field_ast.get()._field_UseDecls,1);_self_.get()._field_ast.get()._field_UseDecls.__push((*(_185036_decl)));;
	if ((_self_.get()._field_ast.get()._field_Nodes.len() > 0LL)) {
		_1d260a505_pushErr(_self_.ptr(), (*(_185036_decl)).get()._field_Token, jule::Str("use declarations must declared top of source code", 49), jule::Slice<jule::Any>());
		_1d260a824_pushSuggestion(_self_.ptr(), jule::Str("move this use declaration to top of source file", 47), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1d2617b61_pushMetaNodes(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _185838_tokens) {
	{
		auto &_match_expr{ (*(_185838_tokens))[0LL].get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(18LLU)) {
			_case_begin_1b7e1c606:;
			{
				;
				jule::Ptr<_1d06068bb_UseDecl> _186221_decl = _1d26124a7_buildUseDecl(_self_.ptr(), (*(_185838_tokens)), false);;
				_1d2617853_pushUseDecl(_self_, &(_186221_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b7e1c67d:;
			{
				if ((((*(_185838_tokens)).len() > 1LL) && ((*(_185838_tokens))[1LL].get()._field_Id == static_cast<jule::U64>(18LLU)))) {
					jule::Ptr<_1d06068bb_UseDecl> _186725_decl = _1d261607c_buildBindUse(_self_, (*(_185838_tokens)));;
					_1d2617853_pushUseDecl(_self_, &(_186725_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U64>(37LLU)) {
			_case_begin_1b7e1c705:;
			{
				_1d260b1b5_pushDirective(_self_.ptr(), _1d260ae40_buildDirective(_self_.ptr(), (*(_185838_tokens))));
				return true;;
			}
		}
		_match_end_1b7e1c529:;
	};
	return false;;
}



inline _1d05ab651_Node _1d2617e6e_parseNode(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _187834_st) {
	_1d05ab651_Node _187917_node = _1d05ab651_Node{._field_Token=(*(_187834_st))[0LL], };;
	if (_1d2617b61_pushMetaNodes(_self_, _187834_st)) {
		return _187917_node;;
	};
	jule::Any _188717_data = _1d26170d3_buildNodeData(_self_, _187834_st);;
	if ((_188717_data == nullptr)) {
		return _187917_node;;
	};
	_187917_node._field_Data=_188717_data;
	_1d26175cd_applyMeta(_self_.ptr(), &(_187917_node));
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1d260a505_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
	_self_.get()._field_directives=nullptr;
	return _187917_node;;
}



inline void _1d26181e4_appendNode(jule::Ptr<_1d2609a98_parser> _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _190235_st) {
	if (((*(_190235_st)).len() == 0LL)) {
		return;;
	};
	_1d05ab651_Node _190617_node = _1d2617e6e_parseNode(_self_, _190235_st);;
	if (((_190617_node._field_Data == nullptr) || _1d260a13c_stopped(_self_.ptr()))) {
		return;;
	};
	_self_.get()._field_ast.get()._field_Nodes = jule::alloc_for_append(_self_.get()._field_ast.get()._field_Nodes,1);_self_.get()._field_ast.get()._field_Nodes.__push(_190617_node);;
}



inline void _1d2618656_removeRange(_1d2609a98_parser* _self_, jule::I64 _191330_i, jule::Str _191338_kind, jule::Slice<jule::Ptr<_22be1281d_Token>>* _191350_tokens, jule::Slice<jule::I64>* _191373_ranges) {
	jule::Str _191413_close = _1d2608a53_getCloseKindOfBrace(_191338_kind);;
	for (; (_191330_i >= 0LL); (_191330_i)--) {
		{
			jule::Ptr<_22be1281d_Token> _191617_tok = (*(_191350_tokens))[(*(_191373_ranges))[_191330_i]];;
			if ((_191617_tok.get()._field_Kind != _191413_close)) {
				goto _iter_next_1b7e2616a;
			};
			(*(_191373_ranges))=jule::append((*(_191373_ranges)).slice(0LL, _191330_i),(*(_191373_ranges)).slice((_191330_i + 1LL)));
			goto _iter_end_1b7e2616a;
		}
	_iter_next_1b7e2616a:;
	}
	_iter_end_1b7e2616a:;;
}



inline void _1d2618a1e_pushWrongOrderCloseErr(_1d2609a98_parser* _self_, jule::Ptr<_22be1281d_Token>* _192542_t, jule::Slice<jule::Ptr<_22be1281d_Token>>* _192554_tokens, jule::Slice<jule::I64>* _192573_ranges) {
	{
		auto &_match_expr{ (*(_192554_tokens))[(*(_192573_ranges))[((*(_192573_ranges)).len() - 1LL)]].get()._field_Kind };
		
		if (_match_expr == jule::Str("(", 1)) {
			_case_begin_1b7e2815b:;
			{
				_1d260a505_pushErr(_self_, (*(_192542_t)), jule::Str("was expected parentheses close", 30), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("{", 1)) {
			_case_begin_1b7e281d3:;
			{
				_1d260a505_pushErr(_self_, (*(_192542_t)), jule::Str("was expected brace close", 24), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == jule::Str("[", 1)) {
			_case_begin_1b7e2825a:;
			{
				_1d260a505_pushErr(_self_, (*(_192542_t)), jule::Str("was expected bracket close", 26), jule::Slice<jule::Any>());
			}
		}
		_match_end_1b7e2803a:;
	};
}



inline void _1d2618e81_pushRangeClose(_1d2609a98_parser* _self_, jule::Ptr<_22be1281d_Token> _193633_t, jule::Str _193644_left, jule::Slice<jule::Ptr<_22be1281d_Token>>* _193656_tokens, jule::Slice<jule::I64>* _193679_ranges) {
	jule::I64 _193713_n = (*(_193679_ranges)).len();;
	if ((_193713_n == 0LL)) {
		{
			auto &_match_expr{ _193633_t.get()._field_Kind };
			
			if (_match_expr == jule::Str("]", 1)) {
				_case_begin_1b7e2a9aa:;
				{
					_1d260a505_pushErr(_self_, _193633_t, jule::Str("extra closed brackets", 21), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str("}", 1)) {
				_case_begin_1b7e2aa32:;
				{
					_1d260a505_pushErr(_self_, _193633_t, jule::Str("extra closed braces", 19), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == jule::Str(")", 1)) {
				_case_begin_1b7e2aaa9:;
				{
					_1d260a505_pushErr(_self_, _193633_t, jule::Str("extra closed parentheses", 24), jule::Slice<jule::Any>());
				}
			}
			_match_end_1b7e2a779:;
		};
		return;;
	} else if (((*(_193656_tokens))[(*(_193679_ranges))[(_193713_n - 1LL)]].get()._field_Kind != _193644_left)) {
		_1d2618a1e_pushWrongOrderCloseErr(_self_, &(_193633_t), _193656_tokens, _193679_ranges);
	};
	_1d2618656_removeRange(_self_, static_cast<jule::I64>((_193713_n - 1LL)), _193633_t.get()._field_Kind, _193656_tokens, _193679_ranges);
}



inline void _1d2619206_checkRanges(_1d2609a98_parser* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>>* _195431_tokens) {
	jule::Slice<jule::I64> _195517_ranges = nullptr;;
	{
		auto expr = _195431_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e2d749:;
		if (it != expr_end) {
			jule::I64 _195713_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> *_195716_token = it;
			{
				if (((*(_195716_token)).get()._field_Id != static_cast<jule::U64>(2LLU))) {
					goto _iter_next_1b7e2d749;
				};
				{
					auto &_match_expr{ (*(_195716_token)).get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1)) {
						_case_begin_1b7e2e97b:;
						{
							_195517_ranges = jule::alloc_for_append(_195517_ranges,1);_195517_ranges.__push(_195713_i);;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b7e2e9e2:;
						{
							_1d2618e81_pushRangeClose(_self_, (*(_195716_token)), jule::Str("(", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("}", 1)) {
						_case_begin_1b7e2ea58:;
						{
							_1d2618e81_pushRangeClose(_self_, (*(_195716_token)), jule::Str("{", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b7e2eabe:;
						{
							_1d2618e81_pushRangeClose(_self_, (*(_195716_token)), jule::Str("[", 1), _195431_tokens, &(_195517_ranges));
						}
					}
					_match_end_1b7e2e86b:;
				};
			}
			_iter_next_1b7e2d749:;
			++it;
			_195713_i++;
			goto _iter_begin_1b7e2d749;
		}
		_iter_end_1b7e2d749:;
	};
	{
		auto expr = &(_195517_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e30c24:;
		if (it != expr_end) {
			jule::I64 _197516_i = *it;
			{
				jule::Ptr<_22be1281d_Token> _197617_token = (*(_195431_tokens))[_197516_i];;
				{
					auto &_match_expr{ _197617_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b7e31d9b:;
						{
							_1d260a505_pushErr(_self_, _197617_token, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("{", 1)) {
						_case_begin_1b7e31e23:;
						{
							_1d260a505_pushErr(_self_, _197617_token, jule::Str("brace waiting to close", 22), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b7e31e9a:;
						{
							_1d260a505_pushErr(_self_, _197617_token, jule::Str("bracket are waiting to close", 28), jule::Slice<jule::Any>());
						}
					}
					_match_end_1b7e31bc0:;
				};
			}
			_iter_next_1b7e30c24:;
			++it;
			goto _iter_begin_1b7e30c24;
		}
		_iter_end_1b7e30c24:;
	};
}



inline void _1d261947b_parse(jule::Ptr<_1d2609a98_parser> _self_, jule::Ptr<_22be17ba8_File>* _198830_f) {
	_self_.get()._field_ast=jule::new_ptr<_1d05aa7a4_Ast>(_1d05aa7a4_Ast{._field_File=(*(_198830_f)), });
	_self_.get()._field_ep=jule::new_ptr<_1d25e9868_exprBuilder>(_1d25e9868_exprBuilder{._field_p=_self_});
	_1d2619206_checkRanges(_self_.ptr(), &((*(_198830_f)).get()._field_Tokens));
	if ((_self_.get()._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d25dca59_stmt>> _200117_stmts = _1d25dce00_splitStmts(&((*(_198830_f)).get()._field_Tokens));;
	jule::I64 _200417_i = 0LL;;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1d25dca59_stmt> _200621_stmt = _200117_stmts[_200417_i];;
			if ((_200621_stmt.get()._field_tokens.len() < 2LL)) {
				return;;
			};
			if ((_200621_stmt.get()._field_tokens[0LL].get()._field_Id != static_cast<jule::U64>(37LLU))) {
				goto _iter_end_1b7e34d8d;
			};
			if ((!(_22ba3e59e_IsTopDirective(_200621_stmt.get()._field_tokens[1LL].get()._field_Kind)))) {
				goto _iter_end_1b7e34d8d;
			};
			_self_.get()._field_ast.get()._field_TopDirectives = jule::alloc_for_append(_self_.get()._field_ast.get()._field_TopDirectives,1);_self_.get()._field_ast.get()._field_TopDirectives.__push(_1d260ae40_buildDirective(_self_.ptr(), _200621_stmt.get()._field_tokens));;
		}
	_iter_next_1b7e34d8d:;
	}
	_iter_end_1b7e34d8d:;;
	_self_.get()._field_errors=nullptr;
	for (; (_200417_i < _200117_stmts.len()); (_200417_i)++) {
		{
			jule::Ptr<_1d25dca59_stmt> _202321_stmt = _200117_stmts[_200417_i];;
			_1d26181e4_appendNode(_self_, &(_202321_stmt.get()._field_tokens));
			if (_1d260a13c_stopped(_self_.ptr())) {
				goto _iter_end_1b7e351e0;
			};
		}
	_iter_next_1b7e351e0:;
	}
	_iter_end_1b7e351e0:;;
	if ((_self_.get()._field_directives.len() != 0LL)) {
		_1d260a505_pushErr(_self_.ptr(), _self_.get()._field_directives[0LL].get()._field_Tag, jule::Str("this directive is out of scope, put it where it will be useful or delete it", 75), jule::Slice<jule::Any>());
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d2609a98_parser _Src) {
	_Stream << "parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ep:" << _Src._field_ep;
	_Stream << "}";
	return _Stream;
}



inline void _1d261ad84_pushErr(_1d261a7bd_typeBuilder* _self_, jule::Ptr<_22be1281d_Token> _4126_token, jule::Str _4141_fmt) {
	if ((*(_self_))._field_err) {
		_1d260a505_pushErr((*(_self_))._field_p.ptr(), _4126_token, _4141_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1d261b1a3_pushSuggestion(_1d261a7bd_typeBuilder* _self_, jule::Str _4833_fmt, jule::Slice<jule::Any> _4846_args) {
	if ((*(_self_))._field_err) {
		_1d260a824_pushSuggestion((*(_self_))._field_p.ptr(), _4833_fmt, _4846_args);
	};
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261b417_buildNamespace(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_1d05de563_TypeDecl> _5517_t = jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], });;
	jule::Ptr<_1d05e0289_NamespaceTypeDecl> _5917_nst = jule::new_ptr<_1d05e0289_NamespaceTypeDecl>();;
	jule::I64 _6017_n = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_22be1281d_Token> _6221_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if (((_6017_n & 1LL) == 0LL)) {
				if ((_6221_token.get()._field_Id != static_cast<jule::U64>(1LLU))) {
					_1d261ad84_pushErr(_self_, _6221_token, jule::Str("invalid syntax", 14));
					_1d261b1a3_pushSuggestion(_self_, jule::Str("write an identifier because identifier expected", 47), jule::Slice<jule::Any>());
				};
				_5917_nst.get()._field_Idents = jule::alloc_for_append(_5917_nst.get()._field_Idents,1);_5917_nst.get()._field_Idents.__push(_6221_token);;
			} else if ((_6221_token.get()._field_Id != static_cast<jule::U64>(21LLU))) {
				goto _iter_end_1b7e3c2b3;
			};
			(_6017_n)++;
		}
	_iter_next_1b7e3c2b3:;
	}
	_iter_end_1b7e3c2b3:;;
	_5917_nst.get()._field_Idents=_5917_nst.get()._field_Idents.slice(0LL, (_5917_nst.get()._field_Idents.len() - 1LL));
	((*((*(_self_))._field_i)))--;
	_5917_nst.get()._field_Kind=_1d261bb54_buildIdent(_self_);
	_5517_t.get()._field_Kind=jule::Any(_5917_nst, &__jule_any_type96);
	return _5517_t;;
}



inline jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _1d261b67b_buildGenerics(_1d261a7bd_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_22be1281d_Token> _8813_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((_8813_token.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_8813_token.get()._field_Kind.equal("[", 1)))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _9317_parts = _1d261b8e0_identGenerics(_self_);;
	if ((_9317_parts.len() == 0LL)) {
		_1d261ad84_pushErr(_self_, _8813_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1d05de563_TypeDecl>> _9917_types = jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>::alloc(0LL, _9317_parts.len());;
	{
		auto expr = &(_9317_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e44111:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _10021_part = *it;
			{
				jule::I64 _10121_j = 0LL;;
				jule::Ptr<_1d05de563_TypeDecl> _10222_t;;
				({
					__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &(_10021_part), (&(_10121_j)), true);
					_10222_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_10121_j < _10021_part.len())) {
					_1d261ad84_pushErr(_self_, _10021_part[_10121_j], jule::Str("invalid syntax", 14));
				};
				_9917_types = jule::alloc_for_append(_9917_types,1);_9917_types.__push(_10222_t);;
			}
			_iter_next_1b7e44111:;
			++it;
			goto _iter_begin_1b7e44111;
		}
		_iter_end_1b7e44111:;
	};
	return _9917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d261b8e0_identGenerics(_1d261a7bd_typeBuilder* _self_) {
	jule::I64 _11213_first = (*((*(_self_))._field_i));;
	jule::I64 _11317_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_22be1281d_Token> _11517_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			if ((_11517_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _11517_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("[", 1)) {
						_case_begin_1b7e47a4e:;
						{
							(_11317_rangeN)++;
						}
					}
					else if (_match_expr == jule::Str("]", 1)) {
						_case_begin_1b7e47ac6:;
						{
							(_11317_rangeN)--;
						}
					}
					_match_end_1b7e4782e:;
				};
			};
			if ((_11317_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1b7e46762;
			};
		}
	_iter_next_1b7e46762:;
	}
	_iter_end_1b7e46762:;;
	jule::Slice<jule::Ptr<_22be1281d_Token>> _12917_tokens = (*(_self_))._field_tokens.slice((_11213_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _13018_parts;;
	jule::Slice<_22ba3c6bd_Log> _13025_errors;;
	({
		__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d26087ab_parts(&(_12917_tokens), static_cast<jule::U64>(7LLU), true);
		_13018_parts = __jule_assign_result.__jule_result_arg0;
		_13025_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*(_self_))._field_p.get()._field_errors=jule::append((*(_self_))._field_p.get()._field_errors,_13025_errors);
	};
	return _13018_parts;;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261bb54_buildIdent(_1d261a7bd_typeBuilder* _self_) {
	jule::Bool _13817_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_13817_next && ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id == static_cast<jule::U64>(21LLU)))) {
		return _1d261b417_buildNamespace(_self_);;
	};
	jule::Ptr<_22be1281d_Token> _14217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1d05deb29_IdentTypeDecl> _14317_it = jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_14217_token, ._field_Ident=_14217_token.get()._field_Kind, ._field_Binded=false, });;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1d05de563_TypeDecl> _14917_itd = jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_14317_it, &__jule_any_type20)});;
	if (((!(_13817_next)) || ((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(19LLU)))) {
		_14317_it.get()._field_Generics=_1d261b67b_buildGenerics(_self_);
		return _14917_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1d261ad84_pushErr(_self_, _14217_token, jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id != static_cast<jule::U64>(1LLU))) {
		_1d261ad84_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("invalid syntax", 14));
		return _14917_itd;;
	};
	jule::Ptr<_1d05dee15_SubIdentTypeDecl> _16617_sit = jule::new_ptr<_1d05dee15_SubIdentTypeDecl>();;
	_16617_sit.get()._field_Idents = jule::alloc_for_append(_16617_sit.get()._field_Idents,1);_16617_sit.get()._field_Idents.__push(_14317_it);;
	jule::Ptr<_1d05de563_TypeDecl> _16817_ident = _1d261bb54_buildIdent(_self_);;
	{
		auto &_match_expr{ _16817_ident.get()._field_Kind };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1b7e522ea:;
			{
				_16617_sit.get()._field_Idents = jule::alloc_for_append(_16617_sit.get()._field_Idents,1);_16617_sit.get()._field_Idents.__push(_16817_ident.get()._field_Kind.cast_ptr<_1d05deb29_IdentTypeDecl>(&__jule_any_type20));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1b7e52372:;
			{
				_16617_sit.get()._field_Idents=jule::append(_16617_sit.get()._field_Idents,_16817_ident.get()._field_Kind.cast_ptr<_1d05dee15_SubIdentTypeDecl>(&__jule_any_type92).get()._field_Idents);
			}
		}
		_match_end_1b7e5222e:;
	};
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_14217_token, ._field_Kind=jule::Any(_16617_sit, &__jule_any_type92)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261bdb8_buildCppLink(_1d261a7bd_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)].get()._field_Id != static_cast<jule::U64>(19LLU)))) {
		_1d261ad84_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1d05de563_TypeDecl> _18717_t = _1d261bb54_buildIdent(_self_);;
	_18717_t.get()._field_Kind.cast_ptr<_1d05deb29_IdentTypeDecl>(&__jule_any_type20).get()._field_Binded=true;
	return _18717_t;;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261c12c_buildFn(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _19317_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1d0600b90_FnDecl> _19417_f = _1d2610b15_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_19417_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d0600ee2_IsAnon(_19417_f.ptr())))) {
		_1d261ad84_pushErr(_self_, _19417_f.get()._field_Token, jule::Str("invalid syntax", 14));
	};
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_19317_token, ._field_Kind=jule::Any(_19417_f, &__jule_any_type14)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261c391_buildPtr(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _20817_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1d261ad84_pushErr(_self_, _20817_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens[(*((*(_self_))._field_i))].get()._field_Id == static_cast<jule::U64>(33LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_1d05e1048_PtrTypeDecl>(_1d05e1048_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type77)});;
	};
	jule::Ptr<_1d05de563_TypeDecl> _22517_elem = _1d261d57e_step(_self_);;
	if ((_22517_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_20817_token, ._field_Kind=jule::Any(jule::new_ptr<_1d05e1048_PtrTypeDecl>(_1d05e1048_PtrTypeDecl{._field_Elem=_22517_elem}), &__jule_any_type77)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261c605_buildSptr(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _23917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1d261ad84_pushErr(_self_, _23917_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1d05de563_TypeDecl> _24617_elem = _1d261d57e_step(_self_);;
	if ((_24617_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_23917_token, ._field_Kind=jule::Any(jule::new_ptr<_1d05e0575_SptrTypeDecl>(_1d05e0575_SptrTypeDecl{._field_Elem=_24617_elem}), &__jule_any_type78)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261c869_buildOp(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _26017_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _26017_token.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b7e63e88:;
			{
				return _1d261c391_buildPtr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&", 1)) {
			_case_begin_1b7e650dd:;
			{
				return _1d261c605_buildSptr(_self_);;
			}
		}
		else if (_match_expr == jule::Str("&&", 2)) {
			_case_begin_1b7e651cb:;
			{
				return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Kind=jule::Any(jule::new_ptr<_1d05e0575_SptrTypeDecl>(_1d05e0575_SptrTypeDecl{._field_Elem=_1d261c605_buildSptr(_self_)}), &__jule_any_type78)});;
			}
		}
		else {
			_case_begin_1b7e64807:;
			{
				_1d261ad84_pushErr(_self_, _26017_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b7e64681:;
	};
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261cacd_buildSlc(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _27917_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1d05de563_TypeDecl> _28117_elem = _1d261d57e_step(_self_);;
	if ((_28117_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_27917_token, ._field_Kind=jule::Any(jule::new_ptr<_1d05e0971_SlcTypeDecl>(_1d05e0971_SlcTypeDecl{._field_Elem=_28117_elem}), &__jule_any_type76)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261cd42_buildArr(_1d261a7bd_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_22be1281d_Token>> _29417_exprTokens = _1d2607c3e_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1d261ad84_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1d05de563_TypeDecl> _30017_elem = _1d261d57e_step(_self_);;
	if ((_30017_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d05e171e_ArrTypeDecl> _30517_arrt = jule::new_ptr<_1d05e171e_ArrTypeDecl>(_1d05e171e_ArrTypeDecl{._field_Elem=_30017_elem, });;
	jule::Ptr<_22be1281d_Token> _30917_token = _29417_exprTokens[0LL];;
	if ((((_29417_exprTokens.len() == 1LL) && (_30917_token.get()._field_Id == static_cast<jule::U64>(6LLU))) && _30917_token.get()._field_Kind.equal("...", 3))) {
	} else {
		_30517_arrt.get()._field_Size=_1d260ab32_buildExpr((*(_self_))._field_p, &(_29417_exprTokens));
	};
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_30917_token, ._field_Kind=jule::Any(_30517_arrt, &__jule_any_type75)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261d0a6_buildMap(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _32317_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1d261ad84_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_22be1281d_Token>> _33117_keyTokens = _1d2607c3e_range(&((*((*(_self_))._field_i))), jule::Str("[", 1), jule::Str("]", 1), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1d261ad84_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], jule::Str("type missing", 12));
		return nullptr;;
	} else if ((_33117_keyTokens.len() == 0LL)) {
		_1d261ad84_pushErr(_self_, _32317_mapToken, jule::Str("type missing", 12));
		return nullptr;;
	};
	jule::Ptr<_1d05e1e28_MapTypeDecl> _34017_mapt = jule::new_ptr<_1d05e1e28_MapTypeDecl>();;
	jule::I64 _34117_j = 0LL;;
	jule::Ptr<_1d05de563_TypeDecl> _34218_keyt;;
	jule::Bool _34228_ok = false;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &(_33117_keyTokens), (&(_34117_j)), (*(_self_))._field_err);
		_34218_keyt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	} else if ((_34117_j < _33117_keyTokens.len())) {
		_1d261ad84_pushErr(_self_, _33117_keyTokens[_34117_j], jule::Str("invalid syntax", 14));
	};
	_34017_mapt.get()._field_Key=_34218_keyt;
	jule::Ptr<_1d05de563_TypeDecl> _35018_valt;;
	({
		__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_assign_result = _1d260be1e_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_35018_valt = __jule_assign_result.__jule_result_arg0;
		_34228_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34228_ok))) {
		return nullptr;;
	};
	_34017_mapt.get()._field_Val=_35018_valt;
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_32317_mapToken, ._field_Kind=jule::Any(_34017_mapt, &__jule_any_type79)});;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261d31a_buildEnumerable(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _36217_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len()) || (_36217_token.get()._field_Id != static_cast<jule::U64>(2LLU))) || (!_36217_token.get()._field_Kind.equal("[", 1)))) {
		_1d261ad84_pushErr(_self_, _36217_token, jule::Str("invalid syntax", 14));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_36217_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((_36217_token.get()._field_Id == static_cast<jule::U64>(2LLU)) && _36217_token.get()._field_Kind.equal("]", 1))) {
		return _1d261cacd_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1d261cd42_buildArr(_self_);;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261d57e_step(_1d261a7bd_typeBuilder* _self_) {
	jule::Ptr<_22be1281d_Token> _37913_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ _37913_token.get()._field_Id };
		
		if (_match_expr == static_cast<jule::U64>(1LLU)) {
			_case_begin_1b7e77320:;
			{
				return _1d261bb54_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(29LLU)) {
			_case_begin_1b7e7760b:;
			{
				return _1d261bdb8_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(31LLU)) {
			_case_begin_1b7e7794c:;
			{
				return _1d261c12c_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(6LLU)) {
			_case_begin_1b7e779b3:;
			{
				return _1d261c869_buildOp(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(2LLU)) {
			_case_begin_1b7e77a29:;
			{
				return _1d261d31a_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U64>(39LLU)) {
			_case_begin_1b7e76e13:;
			{
				return _1d261d0a6_buildMap(_self_);;
			}
		}
		else {
			_case_begin_1b7e76d9c:;
			{
				((*((*(_self_))._field_i)))++;
				_1d261ad84_pushErr(_self_, _37913_token, jule::Str("invalid syntax", 14));
				return nullptr;;
			}
		}
		_match_end_1b7e76c26:;
	};
}



inline __jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool _1d261d7e3_build(_1d261a7bd_typeBuilder* _self_) {
	__jule_tuple_x_1d05de563_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1d05de563_TypeDecl> _40317_root = _1d261d57e_step(_self_);;
	if ((_40317_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1d261a0e7_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _40317_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d261a7bd_typeBuilder _Src) {
	_Stream << "typeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2004a7b_CompileInfo _Src) {
	_Stream << "CompileInfo{";
	_Stream << "Prod:" << _Src._field_Prod << ", ";
	_Stream << "Test:" << _Src._field_Test << ", ";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CppStd:" << _Src._field_CppStd;
	_Stream << "}";
	return _Stream;
}



inline void _1d200642e_pushErr(_1d2005dce_directiveEval* _self_, jule::Ptr<_22be1281d_Token> _2126_t, jule::Str _2137_fmt, jule::Slice<jule::Any> _2150_args) {
	(*(_self_))._field_logs = jule::alloc_for_append((*(_self_))._field_logs,1);(*(_self_))._field_logs.__push(_22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_2126_t.get()._field_Row, ._field_Column=_2126_t.get()._field_Column, ._field_Path=_2126_t.get()._field_File.get()._field_Path, ._field_Text=_22ba3cb0d_Logf(_2137_fmt, _2150_args), });;
}



inline jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _1d20067d6_splitOperans(_1d2005dce_directiveEval* _self_, jule::Str _3331_op, jule::Slice<jule::Ptr<_22be1281d_Token>>* _3351_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _3417_parts = jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>>::alloc(0LL, 10LL);;
	jule::I64 _3617_i = 0LL;;
	jule::I64 _3717_rangeN = 0LL;;
	jule::I64 _3817_last = 0LL;;
	for (; (_3617_i < ((*(_3351_tokens)).len() - 1LL)); (_3617_i)++) {
		{
			jule::Ptr<_22be1281d_Token> _4017_b = (*(_3351_tokens))[_3617_i];;
			if ((_4017_b.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _4017_b.get()._field_Kind };
					
					if (_match_expr == jule::Str("(", 1)) {
						_case_begin_1b7e9aa3b:;
						{
							(_3717_rangeN)++;
							goto _iter_next_1b7e98c6a;
						}
					}
					else if (_match_expr == jule::Str(")", 1)) {
						_case_begin_1b7e9aaa2:;
						{
							(_3717_rangeN)--;
						}
					}
					_match_end_1b7e9a81b:;
				};
			};
			if (((_3717_rangeN > 0LL) || (_4017_b.get()._field_Id != static_cast<jule::U64>(6LLU)))) {
				goto _iter_next_1b7e98c6a;
			};
			if ((_4017_b.get()._field_Kind == _3331_op)) {
				_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last, _3617_i));;
				_3817_last=static_cast<jule::I64>((_3617_i + 1LL));
			};
		}
	_iter_next_1b7e98c6a:;
	}
	_iter_end_1b7e98c6a:;;
	if ((_3817_last < (*(_3351_tokens)).len())) {
		_3417_parts = jule::alloc_for_append(_3417_parts,1);_3417_parts.__push((*(_3351_tokens)).slice(_3817_last));;
	} else {
		_1d200642e_pushErr(_self_, (*(_3351_tokens))[(_3817_last - 1LL)], jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _3417_parts;;
}



inline jule::Bool _1d2006ae4_evalDirectiveIdent(_1d2005dce_directiveEval* _self_, jule::Str _7333_ident) {
	if (_7333_ident.empty()) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7e9d984:;
		if (it != expr_end) {
			jule::Str *_7716_var = it;
			{
				if (((*(_7716_var)) == _7333_ident)) {
					return true;;
				};
			}
			_iter_next_1b7e9d984:;
			++it;
			goto _iter_begin_1b7e9d984;
		}
		_iter_end_1b7e9d984:;
	};
	return false;;
}



inline jule::Bool _1d2006e02_evalDirectivePart(_1d2005dce_directiveEval* _self_, jule::Slice<jule::Ptr<_22be1281d_Token>> _8740_part) {
	jule::Bool _8813_logicalNot = ((_8740_part[0LL].get()._field_Id == static_cast<jule::U64>(6LLU)) && _8740_part[0LL].get()._field_Kind.equal("!", 1));;
	if (_8813_logicalNot) {
		_8740_part=_8740_part.slice(1LL);
	};
	if ((_8740_part.len() > 1LL)) {
		_1d200642e_pushErr(_self_, _8740_part[1LL], jule::Str("invalid syntax", 14), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _9817_result = _1d2006ae4_evalDirectiveIdent(_self_, _8740_part[0LL].get()._field_Kind);;
	if (_8813_logicalNot) {
		_9817_result=(!(_9817_result));
	};
	return _9817_result;;
}



inline jule::Bool _1d2007166_eval(_1d2005dce_directiveEval* _self_) {
	if (((*(_self_))._field_d.get()._field_Args.len() == 0LL)) {
		_1d200642e_pushErr(_self_, (*(_self_))._field_d.get()._field_Tag, jule::Str("expression missing", 18), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _11117_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _11317_logicalOrParts = _1d20067d6_splitOperans(_self_, jule::Str("||", 2), &((*(_self_))._field_d.get()._field_Args));;
	if ((_11317_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_11317_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ea401c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_22be1281d_Token>> _11821_part = *it;
			{
				jule::Bool _11921_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _12021_logicalAndParts = _1d20067d6_splitOperans(_self_, jule::Str("&&", 2), &(_11821_part));;
				if ((_12021_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_12021_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7ea54a2:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_22be1281d_Token>> _12525_andPart = *it;
						{
							jule::Ptr<_22be1281d_Token> _12621_first = _12525_andPart[0LL];;
							if (((_12621_first.get()._field_Id == static_cast<jule::U64>(2LLU)) && _12621_first.get()._field_Kind.equal("(", 1))) {
								jule::Ptr<_22be1281d_Token> _12825_end = _12525_andPart[(_12525_andPart.len() - 1LL)];;
								if (((_12825_end.get()._field_Id != static_cast<jule::U64>(2LLU)) || (!_12825_end.get()._field_Kind.equal(")", 1)))) {
									_1d200642e_pushErr(_self_, _12621_first, jule::Str("parentheses waiting to close", 28), jule::Slice<jule::Any>());
									return false;;
								};
								_12525_andPart=_12525_andPart.slice(1LL, (_12525_andPart.len() - 1LL));
							};
							_11921_and=(_11921_and && _1d2006e02_evalDirectivePart(_self_, _12525_andPart));
						}
						_iter_next_1b7ea54a2:;
						++it;
						goto _iter_begin_1b7ea54a2;
					}
					_iter_end_1b7ea54a2:;
				};
				_11117_result=(_11117_result || _11921_and);
			}
			_iter_next_1b7ea401c:;
			++it;
			goto _iter_begin_1b7ea401c;
		}
		_iter_end_1b7ea401c:;
	};
	return _11117_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2005dce_directiveEval _Src) {
	_Stream << "directiveEval{";
	_Stream << "logs:" << _Src._field_logs << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d261e6c3_JuleImporter> static__1d261eb02_New(_1d2004a7b_CompileInfo _5819_info) {
	jule::Ptr<_1d261e6c3_JuleImporter> _5917_imp = jule::new_ptr<_1d261e6c3_JuleImporter>(_1d261e6c3_JuleImporter{._field_mods=jule::Slice<jule::Str>::make({_22bb20cac_PathStdlib}), });;
	_1d2005395_initVars(&(_5917_imp.get()._field_vars), &(_5819_info));
	return _5917_imp;;
}



inline jule::Slice<jule::Ptr<_1d219307c_ImportInfo>> _1d261ed66_AllPackages(_1d261e6c3_JuleImporter* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1d262022e_SetModPath(_1d261e6c3_JuleImporter* _self_, jule::Str _7529_path) {
	(*(_self_))._field_mod=_7529_path;
}



inline jule::Str _1d2620493_GetModPath(_1d261e6c3_JuleImporter* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1d26207a1_ModById(_1d261e6c3_JuleImporter* _self_, jule::I64 _8322_id) {
	return (*(_self_))._field_mods[_8322_id];;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d2620aae_GetImport(_1d261e6c3_JuleImporter* _self_, jule::Str _8728_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7eabcc2:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _8821_p = *it;
			{
				if ((_8821_p.get()._field_Path == _8728_path)) {
					return _8821_p;;
				};
			}
			_iter_next_1b7eabcc2:;
			++it;
			goto _iter_begin_1b7eabcc2;
		}
		_iter_end_1b7eabcc2:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log _1d2620e66_ImportPackage(_1d261e6c3_JuleImporter* _self_, jule::Str _9632_path, jule::Bool _9643_update_mod) {
	__jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>> _9717_dirents = ({
		auto except = static__22b9a8480_Read(_9632_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = jule::Slice<_22ba3c6bd_Log>::make({_1d261e23e_flatCompilerErr((jule::Str("connot read package directory: ", 31) + _9632_path))});
			return __jule_func_result;;
		} jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>(nullptr);});
	});;
	if (_9643_update_mod) {
		jule::Str _10217_newMod = _1d02005a3_FindModuleFileDeep(_9632_path);;
		if ((_10217_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_10217_newMod;
			jule::Slice<_22ba3c6bd_Log> _10525_errs = _1d020084a_CheckModuleFile((*(_self_))._field_mod);;
			if ((_10525_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _10525_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1d05aa7a4_Ast>> _11217_asts = jule::Slice<jule::Ptr<_1d05aa7a4_Ast>>::alloc(0LL, _9717_dirents.len());;
	{
		auto expr = &(_9717_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ead2ce:;
		if (it != expr_end) {
			jule::Ptr<_22a8aadbc_DirEntry> _11316_dirent = *it;
			{
				if ((_22a8bae98_IsDir(_11316_dirent.get()._field_Stat.ptr()) || (!(_22b99b1cb_HasSuffix(_11316_dirent.get()._field_Name, jule::Str(".jule", 5)))))) {
					goto _iter_next_1b7ead2ce;
				};
				jule::Str _11917__path = _22b9a56d0_Join(jule::Slice<jule::Str>::make({_9632_path,_11316_dirent.get()._field_Name}));;
				jule::Ptr<_22be17ba8_File> _12021_file = _22be18e62_NewFileSet(_11917__path);;
				_22be180b5_Fill(_12021_file.ptr(), _1d261dea8_readBuff(_12021_file.get()._field_Path));
				jule::Slice<_22ba3c6bd_Log> _12221_errors = _22be2480d_Lex(_12021_file, static_cast<jule::I64>(0LL));;
				if ((_12221_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12221_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1d2592eb5_FileInfo> _12721_finfo = _1d2595abc_ParseFile(_12021_file);;
				if ((_12721_finfo.get()._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12721_finfo.get()._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1d2003b02_isPassFileAnnotation(_11316_dirent.get()._field_Name)))) {
					goto _iter_next_1b7ead2ce;
				};
				jule::Bool _13718_r = false;;
				jule::Slice<_22ba3c6bd_Log> _13725_logs;;
				({
					__jule_tuple_bool__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d262162b_isPassBuildDirectives(_self_, &(_12721_finfo.get()._field_Ast));
					_13718_r = __jule_assign_result.__jule_result_arg0;
					_13725_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_13725_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _13725_logs;
					return __jule_func_result;;
				};
				if ((!(_13718_r))) {
					goto _iter_next_1b7ead2ce;
				};
				_11217_asts = jule::alloc_for_append(_11217_asts,1);_11217_asts.__push(_12721_finfo.get()._field_Ast);;
			}
			_iter_next_1b7ead2ce:;
			++it;
			goto _iter_begin_1b7ead2ce;
		}
		_iter_end_1b7ead2ce:;
	};
	__jule_func_result.__jule_result_arg0 = _11217_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1d26211db_Imported(_1d261e6c3_JuleImporter* _self_, jule::Ptr<_1d219307c_ImportInfo> _15331_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7eb0ec4:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _15516_p = *it;
			{
				if (((_15516_p.get()._field_Binded == _15331_imp.get()._field_Binded) && (_15516_p.get()._field_LinkPath == _15331_imp.get()._field_LinkPath))) {
					return;;
				};
			}
			_iter_next_1b7eb0ec4:;
			++it;
			goto _iter_begin_1b7eb0ec4;
		}
		_iter_end_1b7eb0ec4:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b7eb7618:;
			if (it != expr_end) {
				jule::I64 _16217_i = it - expr->begin();
				jule::Str _16220_mod = *it;
				{
					if (((*(_self_))._field_mod == _16220_mod)) {
						_15331_imp.get()._field_ModId=_16217_i;
						goto _julec_label_setted;
					};
				}
				_iter_next_1b7eb7618:;
				++it;
				_16217_i++;
				goto _iter_begin_1b7eb7618;
			}
			_iter_end_1b7eb7618:;
		};
		_15331_imp.get()._field_ModId=static_cast<jule::I64>((*(_self_))._field_mods.len());
		(*(_self_))._field_mods = jule::alloc_for_append((*(_self_))._field_mods,1);(*(_self_))._field_mods.__push((*(_self_))._field_mod);;
		_julec_label_setted:;
	};
	(*(_self_))._field_pkgs = jule::alloc_for_append((*(_self_))._field_pkgs,1);(*(_self_))._field_pkgs.__push(_15331_imp);;
}



inline __jule_tuple_bool__jule_tuple_s_22ba3c6bd_Log _1d262162b_isPassBuildDirectives(_1d261e6c3_JuleImporter* _self_, jule::Ptr<_1d05aa7a4_Ast>* _17945_file) {
	__jule_tuple_bool__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*(_17945_file)).get()._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7eba572:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _18021_td = *it;
			{
				if ((!_18021_td.get()._field_Tag.get()._field_Kind.equal("build", 5))) {
					goto _iter_next_1b7eba572;
				};
				_1d2005dce_directiveEval _18421_de = _1d2005dce_directiveEval{._field_d=_18021_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _18817_result = _1d2007166_eval(&_18421_de);;
				if ((_18421_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _18421_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_18817_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1b7eba572:;
			++it;
			goto _iter_begin_1b7eba572;
		}
		_iter_end_1b7eba572:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d261e6c3_JuleImporter _Src) {
	_Stream << "JuleImporter{";
	_Stream << "mods:" << _Src._field_mods << ", ";
	_Stream << "mod:" << _Src._field_mod << ", ";
	_Stream << "pkgs:" << _Src._field_pkgs << ", ";
	_Stream << "vars:" << _Src._field_vars;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2624475_OrderedDefines _Src) {
	_Stream << "OrderedDefines{";
	_Stream << "Structs:" << _Src._field_Structs << ", ";
	_Stream << "Globals:" << _Src._field_Globals;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1b66a1331_isCommonOrdered(jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _1834_s, jule::Ptr<_1d060ddbd_Struct> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66a2332:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b66a2b4b:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b66a2b4b:;
						++it;
						goto _iter_begin_1b66a2b4b;
					}
					_iter_end_1b66a2b4b:;
				};
			}
			_iter_next_1b66a2332:;
			++it;
			goto _iter_begin_1b66a2332;
		}
		_iter_end_1b66a2332:;
	};
	return true;;
}

inline jule::Bool _1b66a5c2b_isCommonOrdered(jule::Slice<jule::Ptr<_1d21bb65a_Var>> _1834_s, jule::Ptr<_1d21bb65a_Var> _1842_t) {
	{
		auto expr = &(_1842_t.get()._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66a6bd8:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> *_1916_d = it;
			{
				{
					auto expr = &(_1834_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b66a7502:;
					if (it != expr_end) {
						jule::Ptr<_1d21bb65a_Var> *_2020_d2 = it;
						{
							if (((*(_1916_d)) == (*(_2020_d2)))) {
								return false;;
							};
						}
						_iter_next_1b66a7502:;
						++it;
						goto _iter_begin_1b66a7502;
					}
					_iter_end_1b66a7502:;
				};
			}
			_iter_next_1b66a6bd8:;
			++it;
			goto _iter_begin_1b66a6bd8;
		}
		_iter_end_1b66a6bd8:;
	};
	return true;;
}



inline void _1b669ce54_orderCommon(jule::Slice<jule::Ptr<_1d060ddbd_Struct>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b669e3b7:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b66a1331_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b66a00aa:;
				}
				_iter_end_1b66a00aa:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b669e3b7;
				};
				(_3217_n)--;
			}
			_iter_next_1b669e3b7:;
			++it;
			goto _iter_begin_1b669e3b7;
		}
		_iter_end_1b669e3b7:;
	};
}

inline void _1b669d790_orderCommon(jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _3135_s) {
	jule::I64 _3217_n = ((*(_3135_s)).len() - 1LL);;
	{
		auto expr = _3135_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66a3cb2:;
		if (it != expr_end) {
			{
				jule::Bool _3421_swapped = false;;
				jule::I64 _3521_k = 0LL;;
				for (; (_3521_k < _3217_n); (_3521_k)++) {
					{
						if ((!(_1b66a5c2b_isCommonOrdered((*(_3135_s)), (*(_3135_s))[_3521_k])))) {
							(*(_3135_s)).swap(_3521_k, static_cast<jule::I64>((_3521_k + 1LL)));
							_3421_swapped=true;
						};
					}
				_iter_next_1b66a49a5:;
				}
				_iter_end_1b66a49a5:;;
				if ((!(_3421_swapped))) {
					goto _iter_end_1b66a3cb2;
				};
				(_3217_n)--;
			}
			_iter_next_1b66a3cb2:;
			++it;
			goto _iter_begin_1b66a3cb2;
		}
		_iter_end_1b66a3cb2:;
	};
}



inline void static__1d26250ad_orderStructures(jule::Slice<jule::Ptr<_1d060ddbd_Struct>>* _5136_structs) {
	_1b669ce54_orderCommon(_5136_structs);
}



inline void static__1d26252bc_orderVars(jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _5730_vars) {
	_1b669d790_orderCommon(_5730_vars);
}







std::ostream &operator<<(std::ostream &_Stream, _1d26246d9_defineOrderer _Src) {
	_Stream << "defineOrderer{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d075e66c_liveTable _Src) {
	_Stream << "liveTable{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "fns:" << _Src._field_fns << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "traits:" << _Src._field_traits;
	_Stream << "}";
	return _Stream;
}



inline void _1d07958e5_optimizeChild(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d2174613_Scope>* _3938_s) {
	jule::Ptr<_1d079541c_scopeDeadCode> _4017_sdc = jule::new_ptr<_1d079541c_scopeDeadCode>(_1d079541c_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_3938_s)), ._field_stmts=(&((*(_3938_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1d0798035_optimizeStmts(_4017_sdc);
	};
}



inline void _1d0795b8c_optimizeBodyChildExceptional(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d2174613_Scope>* _5053_s) {
	jule::Ptr<_1d079541c_scopeDeadCode> _5117_sdc = jule::new_ptr<_1d079541c_scopeDeadCode>(_1d079541c_scopeDeadCode{._field_s=(*(_5053_s)), ._field_stmts=(&((*(_5053_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, ._field_except=true});;
	{
		_1d0798035_optimizeStmts(_5117_sdc);
	};
}



inline void _1d0795e23_optimizeBodyChild(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d2174613_Scope>* _6142_s) {
	jule::Ptr<_1d079541c_scopeDeadCode> _6217_sdc = jule::new_ptr<_1d079541c_scopeDeadCode>(_1d079541c_scopeDeadCode{._field_s=(*(_6142_s)), ._field_stmts=(&((*(_6142_s)).get()._field_Stmts)), ._field_labels=_self_.get()._field_labels, ._field_gotos=_self_.get()._field_gotos, });;
	{
		_1d0798035_optimizeStmts(_6217_sdc);
	};
}



inline void _1d0796198_optimizeExprModel(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Any* _7142_model) {
	_1d0799377_exprDeadCode _7213_edc = static__1d07999a4_new(&(_self_));;
	_1d07a06be_optimize(&_7213_edc, _7142_model);
}



inline void _1d0796374_eliminateFollowed(_1d079541c_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		(*((*(_self_))._field_stmts))=(*((*(_self_))._field_stmts)).slice(0LL, ((*(_self_))._field_i + 1LL));
	};
	jule::Ptr<_1d079541c_scopeDeadCode> _8317_parent = (*(_self_))._field_parent;;
	while ((_8317_parent != nullptr)) {
		{
			{
				(*(_8317_parent.get()._field_stmts))=(*(_8317_parent.get()._field_stmts)).slice(0LL, (_8317_parent.get()._field_i + 1LL));
			};
			_8317_parent=_8317_parent.get()._field_parent;
		}
	_iter_next_1b671e14b:;
	}
	_iter_end_1b671e14b:;;
}



inline void _1d07965e9_pushGoto(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d217713d_GotoSt> _9232_gt) {
	jule::I64 _9317_i = 0LL;;
	for (; (_9317_i < (*(_self_.get()._field_labels)).len()); (_9317_i)++) {
		{
			if ((_9232_gt.get()._field_Ident == (*(_self_.get()._field_labels))[_9317_i].get()._field_Ident)) {
				return;;
			};
		}
	_iter_next_1b6722083:;
	}
	_iter_end_1b6722083:;;
	(*(_self_.get()._field_gotos))=jule::append((*(_self_.get()._field_gotos)),jule::Slice<jule::Ptr<_1d217713d_GotoSt>>::make({_9232_gt}));
}



inline void _1d079686e_pushLabel(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d2176d52_Label> _10233_l) {
	jule::I64 _10317_i = 0LL;;
	while ((_10317_i < (*(_self_.get()._field_gotos)).len())) {
		{
			if ((_10233_l.get()._field_Ident == (*(_self_.get()._field_gotos))[_10317_i].get()._field_Ident)) {
				jule::copy(((*(_self_.get()._field_gotos)).slice(_10317_i)), ((*(_self_.get()._field_gotos)).slice((_10317_i + 1LL))));
				(*(_self_.get()._field_gotos))=(*(_self_.get()._field_gotos)).slice(0LL, ((*(_self_.get()._field_gotos)).len() - 1LL));
				goto _iter_next_1b67236a0;
			};
			(_10317_i)++;
		}
	_iter_next_1b67236a0:;
	}
	_iter_end_1b67236a0:;;
	(*(_self_.get()._field_labels))=jule::append((*(_self_.get()._field_labels)),jule::Slice<jule::Ptr<_1d2176d52_Label>>::make({_10233_l}));
}



inline void _1d0796ae4_optimizeRangeIter(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d21762b3_RangeIter> _11541_it) {
	_1d0796198_optimizeExprModel(_self_, &(_11541_it.get()._field_Expr.get()._field_Model));
	_1d0795e23_optimizeBodyChild(_self_, &(_11541_it.get()._field_Scope));
}



inline void _1d0796d69_optimizeWhileIter(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d21758cd_WhileIter> _12041_it) {
	_1d0796198_optimizeExprModel(_self_, &(_12041_it.get()._field_Expr));
	if ((_12041_it.get()._field_Next != nullptr)) {
		_1d0797d59_optimizeStmt(_self_, _12041_it.get()._field_Next);
	};
	_1d0795e23_optimizeBodyChild(_self_, &(_12041_it.get()._field_Scope));
}



inline void _1d07970de_optimizeInfIter(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d217545a_InfIter> _12839_it) {
	_1d0795e23_optimizeBodyChild(_self_, &(_12839_it.get()._field_Scope));
}



inline void _1d0797364_optimizeConditional(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d217516e_Conditional> _13243_c) {
	{
		auto expr = &(_13243_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b672908a:;
		if (it != expr_end) {
			jule::Ptr<_1d2174a0e_If> _13321_case = *it;
			{
				if ((_13321_case != nullptr)) {
					_1d0796198_optimizeExprModel(_self_, &(_13321_case.get()._field_Expr));
					_1d0795e23_optimizeBodyChild(_self_, &(_13321_case.get()._field_Scope));
				};
			}
			_iter_next_1b672908a:;
			++it;
			goto _iter_begin_1b672908a;
		}
		_iter_end_1b672908a:;
	};
	if ((_13243_c.get()._field_Default != nullptr)) {
		if ((_13243_c.get()._field_Elifs.len() == 0LL)) {
			_1d07958e5_optimizeChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		} else {
			_1d0795e23_optimizeBodyChild(_self_, &(_13243_c.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1d07975d9_optimizeMatch(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d217842a_Match> _15037_m) {
	{
		auto expr = &(_15037_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b672b7c9:;
		if (it != expr_end) {
			jule::Ptr<_1d2178e75_Case> _15121_case = *it;
			{
				{
					auto expr = &(_15121_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b672c104:;
					if (it != expr_end) {
						jule::Ptr<_1d0408c95_Data> _15225_expr = *it;
						{
							_1d0796198_optimizeExprModel(_self_, &(_15225_expr.get()._field_Model));
						}
						_iter_next_1b672c104:;
						++it;
						goto _iter_begin_1b672c104;
					}
					_iter_end_1b672c104:;
				};
				_1d0795e23_optimizeBodyChild(_self_, &(_15121_case.get()._field_Scope));
			}
			_iter_next_1b672b7c9:;
			++it;
			goto _iter_begin_1b672b7c9;
		}
		_iter_end_1b672b7c9:;
	};
	if ((_15037_m.get()._field_Default != nullptr)) {
		if ((_15037_m.get()._field_Cases.len() == 0LL)) {
			_1d07958e5_optimizeChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		} else {
			_1d0795e23_optimizeBodyChild(_self_, &(_15037_m.get()._field_Default.get()._field_Scope));
		};
	};
}



inline void _1d079785e_optimizeAssign(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d2177968_Assign> _16838_assign) {
	_1d0796198_optimizeExprModel(_self_, &(_16838_assign.get()._field_L.get()._field_Model));
	_1d0796198_optimizeExprModel(_self_, &(_16838_assign.get()._field_R.get()._field_Model));
}



inline void _1d0797ad4_optimizeMultiAssign(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Ptr<_1d2177d20_MultiAssign> _17343_assign) {
	{
		auto expr = &(_17343_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6730019:;
		if (it != expr_end) {
			jule::Ptr<_1d0408c95_Data> _17421_l = *it;
			{
				if ((_17421_l != nullptr)) {
					_1d0796198_optimizeExprModel(_self_, &(_17421_l.get()._field_Model));
				};
			}
			_iter_next_1b6730019:;
			++it;
			goto _iter_begin_1b6730019;
		}
		_iter_end_1b6730019:;
	};
	_1d0796198_optimizeExprModel(_self_, &(_17343_assign.get()._field_R));
}



inline void _1d0797d59_optimizeStmt(jule::Ptr<_1d079541c_scopeDeadCode> _self_, jule::Any _18236_st) {
	{
		auto &_match_expr{ _18236_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b6731559:;
			{
				jule::Ptr<_1d2174613_Scope> _18521_scope = _18236_st.cast_ptr<_1d2174613_Scope>(&__jule_any_type22);;
				if (_18521_scope.get()._field_Deferred) {
					_1d0798321_eliminateDeadCodeOfScope(_18521_scope);
				} else {
					_1d07958e5_optimizeChild(_self_, &(_18521_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b67316d0:;
			{
				_1d0796ae4_optimizeRangeIter(_self_, _18236_st.cast_ptr<_1d21762b3_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b6731746:;
			{
				_1d0796d69_optimizeWhileIter(_self_, _18236_st.cast_ptr<_1d21758cd_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b67317ac:;
			{
				_1d07970de_optimizeInfIter(_self_, _18236_st.cast_ptr<_1d217545a_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b6731834:;
			{
				_1d0797364_optimizeConditional(_self_, _18236_st.cast_ptr<_1d217516e_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b67318ab:;
			{
				_1d07975d9_optimizeMatch(_self_, _18236_st.cast_ptr<_1d217842a_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b6731933:;
			{
				_1d079785e_optimizeAssign(_self_, _18236_st.cast_ptr<_1d2177968_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b67319aa:;
			{
				_1d0797ad4_optimizeMultiAssign(_self_, _18236_st.cast_ptr<_1d2177d20_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b6731a32:;
			{
				jule::Ptr<_1d0408c95_Data> _20621_d = _18236_st.cast_ptr<_1d0408c95_Data>(&__jule_any_type24);;
				if (_self_.get()._field_except) {
					goto _match_end_1b6731669;
				};
				{
					auto &_match_expr{ _20621_d.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type30) {
						_case_begin_1b6736e77:;
						{
							_1d0796374_eliminateFollowed(_self_.ptr());
						}
					}
					else {
						_case_begin_1b673684a:;
						{
							_1d0796198_optimizeExprModel(_self_, &(_20621_d.get()._field_Model));
						}
					}
					_match_end_1b67367e5:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b6731aa9:;
			{
				_1d0796374_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b6731b31:;
			{
				_1d07965e9_pushGoto(_self_, _18236_st.cast_ptr<_1d217713d_GotoSt>(&__jule_any_type43));
				_1d0796374_eliminateFollowed(_self_.ptr());
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b6731ba8:;
			{
				_1d079686e_pushLabel(_self_, _18236_st.cast_ptr<_1d2176d52_Label>(&__jule_any_type21));
			}
		}
		_match_end_1b6731669:;
	};
}



inline void _1d0798035_optimizeStmts(jule::Ptr<_1d079541c_scopeDeadCode> _self_) {
	_self_.get()._field_i=0LL;
	for (; (_self_.get()._field_i < (*(_self_.get()._field_stmts)).len()); (_self_.get()._field_i)++) {
		{
			_1d0797d59_optimizeStmt(_self_, (*(_self_.get()._field_stmts))[_self_.get()._field_i]);
		}
	_iter_next_1b6738891:;
	}
	_iter_end_1b6738891:;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d079541c_scopeDeadCode _Src) {
	_Stream << "scopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "except:" << _Src._field_except;
	_Stream << "}";
	return _Stream;
}



inline _1d0799377_exprDeadCode static__1d07999a4_new(jule::Ptr<_1d079541c_scopeDeadCode>* _5024_s) {
	return _1d0799377_exprDeadCode{._field_s=(*(_5024_s))};;
}



inline void _1d0799c29_binary(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061614a_BinopExprModel> _5625_m) {
	_1d07a06be_optimize(_self_, &(_5625_m.get()._field_Left.get()._field_Model));
	_1d07a06be_optimize(_self_, &(_5625_m.get()._field_Right.get()._field_Model));
}



inline void _1d0799e9e_unary(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0616502_UnaryExprModel> _6124_m) {
	_1d07a06be_optimize(_self_, &(_6124_m.get()._field_Expr.get()._field_Model));
}



inline void _1d079a224_structureLit(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0616ca5_StructLitExprModel> _6531_m) {
	{
		auto expr = &(_6531_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b673b674:;
		if (it != expr_end) {
			jule::Ptr<_1d06168ed_StructArgExprModel> _6621_arg = *it;
			{
				_1d07a06be_optimize(_self_, &(_6621_arg.get()._field_Expr));
			}
			_iter_next_1b673b674:;
			++it;
			goto _iter_begin_1b673b674;
		}
		_iter_end_1b673b674:;
	};
}



inline void _1d079a499_allocStructure(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d06170b3_AllocStructLitExprModel> _7133_m) {
	_1d079a224_structureLit(_self_, _7133_m.get()._field_Lit);
}



inline void _1d079a71e_casting(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0617613_CastingExprModel> _7526_m) {
	_1d07a06be_optimize(_self_, &(_7526_m.get()._field_Expr));
}



inline void _1d079a994_args(_1d0799377_exprDeadCode* _self_, jule::Slice<jule::Any>* _7924_args) {
	{
		auto expr = _7924_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b673d676:;
		if (it != expr_end) {
			jule::Any _8021_arg = *it;
			{
				_1d07a06be_optimize(_self_, &(_8021_arg));
			}
			_iter_next_1b673d676:;
			++it;
			goto _iter_begin_1b673d676;
		}
		_iter_end_1b673d676:;
	};
}



inline void _1d079ac19_funcCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0617eb5_FnCallExprModel> _8527_m) {
	_1d07a06be_optimize(_self_, &(_8527_m.get()._field_Expr));
	_1d079a994_args(_self_, &(_8527_m.get()._field_Args));
	if ((_8527_m.get()._field_Except != nullptr)) {
		_1d0795b8c_optimizeBodyChildExceptional((*(_self_))._field_s, &(_8527_m.get()._field_Except));
	};
}



inline void _1d079ae8e_slice(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061836c_SliceExprModel> _9324_m) {
	_1d079a994_args(_self_, &(_9324_m.get()._field_Elems));
}



inline void _1d079b214_array(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061b095_ArrayExprModel> _9724_m) {
	if (((_9724_m.get()._field_Elems.len() == 2LL) && (_9724_m.get()._field_Elems[1LL] == nullptr))) {
		_1d07a06be_optimize(_self_, &(_9724_m.get()._field_Elems[0LL]));
	};
	_1d079a994_args(_self_, &(_9724_m.get()._field_Elems));
}



inline void _1d079b489_indexing(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d06187e0_IndexingExprModel> _10427_m) {
	_1d07a06be_optimize(_self_, &(_10427_m.get()._field_Expr.get()._field_Model));
	_1d07a06be_optimize(_self_, &(_10427_m.get()._field_Index.get()._field_Model));
}



inline void _1d079b70e_anonFunc(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0618b97_AnonFnExprModel> _10927_m) {
	_1d0798321_eliminateDeadCodeOfScope(_10927_m.get()._field_Func.get()._field_Scope);
}



inline void _1d079b984_mapExpr(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d06194c2_MapExprModel> _11326_m) {
	{
		auto expr = &(_11326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80ba41e:;
		if (it != expr_end) {
			jule::Ptr<_1d061904e_KeyValPairExprModel> _11421_pair = *it;
			{
				_1d07a06be_optimize(_self_, &(_11421_pair.get()._field_Key));
				_1d07a06be_optimize(_self_, &(_11421_pair.get()._field_Val));
			}
			_iter_next_1b80ba41e:;
			++it;
			goto _iter_begin_1b80ba41e;
		}
		_iter_end_1b80ba41e:;
	};
}



inline void _1d079bc09_slicing(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0619a11_SlicingExprModel> _12026_m) {
	_1d07a06be_optimize(_self_, &(_12026_m.get()._field_Expr));
	_1d07a06be_optimize(_self_, &(_12026_m.get()._field_Left));
	if ((_12026_m.get()._field_Right != nullptr)) {
		_1d07a06be_optimize(_self_, &(_12026_m.get()._field_Right));
	};
}



inline void _1d079be7e_traitSub(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061a050_TraitSubIdentExprModel> _12827_m) {
	_1d07a06be_optimize(_self_, &(_12827_m.get()._field_Expr));
}



inline void _1d079c204_structureSub(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061a836_StructSubIdentExprModel> _13231_m) {
	_1d07a06be_optimize(_self_, &(_13231_m.get()._field_Expr.get()._field_Model));
}



inline void _1d079c479_commonSub(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061b8e2_CommonSubIdentExprModel> _13628_m) {
	_1d07a06be_optimize(_self_, &(_13628_m.get()._field_Expr));
}



inline void _1d079c6ee_tuple(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061bbde_TupleExprModel> _14024_m) {
	{
		auto expr = &(_14024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b80be27a:;
		if (it != expr_end) {
			jule::Ptr<_1d0408c95_Data> _14121_d = *it;
			{
				_1d07a06be_optimize(_self_, &(_14121_d.get()._field_Model));
			}
			_iter_next_1b80be27a:;
			++it;
			goto _iter_begin_1b80be27a;
		}
		_iter_end_1b80be27a:;
	};
}



inline void _1d079c974_newCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061cbac_BuiltinNewCallExprModel> _14626_m) {
	if ((_14626_m.get()._field_Init != nullptr)) {
		_1d07a06be_optimize(_self_, &(_14626_m.get()._field_Init));
	};
}



inline void _1d079cbe9_outCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel> _15226_m) {
	_1d07a06be_optimize(_self_, &(_15226_m.get()._field_Expr));
}



inline void _1d079ce6e_outlnCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel> _15628_m) {
	_1d07a06be_optimize(_self_, &(_15628_m.get()._field_Expr));
}



inline void _1d079d1e4_panicCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061d097_BuiltinPanicCallExprModel> _16028_m) {
	_1d07a06be_optimize(_self_, &(_16028_m.get()._field_Expr));
}



inline void _1d079d469_assertCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel> _16429_m) {
	_1d07a06be_optimize(_self_, &(_16429_m.get()._field_Expr));
}



inline void _1d079d6de_errorCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel> _16828_m) {
	_1d07a06be_optimize(_self_, &(_16828_m.get()._field_Err.get()._field_Model));
}



inline void _1d079d964_makeCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel> _17227_m) {
	if ((_17227_m.get()._field_Len != nullptr)) {
		_1d07a06be_optimize(_self_, &(_17227_m.get()._field_Len));
	};
	if ((_17227_m.get()._field_Cap != nullptr)) {
		_1d07a06be_optimize(_self_, &(_17227_m.get()._field_Cap));
	};
}



inline void _1d079dbd9_appendCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel> _18129_m) {
	_1d07a06be_optimize(_self_, &(_18129_m.get()._field_Dest));
	_1d07a06be_optimize(_self_, &(_18129_m.get()._field_Elements));
}



inline void _1d079de5e_lenCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061e20d_BuiltinLenCallExprModel> _18626_m) {
	_1d07a06be_optimize(_self_, &(_18626_m.get()._field_Expr.get()._field_Model));
}



inline void _1d079e1d4_capCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061e52c_BuiltinCapCallExprModel> _19026_m) {
	_1d07a06be_optimize(_self_, &(_19026_m.get()._field_Expr.get()._field_Model));
}



inline void _1d079e459_cloneCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel> _19428_m) {
	_1d07a06be_optimize(_self_, &(_19428_m.get()._field_Expr));
}



inline void _1d079e6ce_deleteCall(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel> _19829_m) {
	_1d07a06be_optimize(_self_, &(_19829_m.get()._field_Dest.get()._field_Model));
	if ((_19829_m.get()._field_Key != nullptr)) {
		_1d07a06be_optimize(_self_, &(_19829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1d079e954_sizeof(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d062072b_SizeofExprModel> _20525_m) {
	_1d07a06be_optimize(_self_, &(_20525_m.get()._field_Expr));
}



inline void _1d079ebc9_alignof(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0620a17_AlignofExprModel> _20926_m) {
	_1d07a06be_optimize(_self_, &(_20926_m.get()._field_Expr));
}



inline void _1d079ee4e_integratedToStr(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d0621111_IntegratedToStrExprModel> _21334_m) {
	_1d07a06be_optimize(_self_, &(_21334_m.get()._field_Expr));
}



inline void _1d07a01c4_free(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d06217b5_FreeExprModel> _21723_m) {
	_1d07a06be_optimize(_self_, &(_21723_m.get()._field_Expr));
}



inline void _1d07a0449_backendEmit(_1d0799377_exprDeadCode* _self_, jule::Ptr<_1d06214c9_BackendEmitExprModel> _22130_m) {
	_1d079a994_args(_self_, &(_22130_m.get()._field_Exprs));
}



inline void _1d07a06be_optimize(_1d0799377_exprDeadCode* _self_, jule::Any* _22528_model) {
	{
		auto &_match_expr{ (*(_22528_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b80cab5a:;
			{
				_1d0799c29_binary(_self_, (*(_22528_model)).cast_ptr<_1d061614a_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b80cabd2:;
			{
				_1d0799e9e_unary(_self_, (*(_22528_model)).cast_ptr<_1d0616502_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b80cac59:;
			{
				_1d079a224_structureLit(_self_, (*(_22528_model)).cast_ptr<_1d0616ca5_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b80cb133:;
			{
				_1d079a499_allocStructure(_self_, (*(_22528_model)).cast_ptr<_1d06170b3_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b80cb199:;
			{
				_1d079a71e_casting(_self_, (*(_22528_model)).cast_ptr<_1d0617613_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b80cb221:;
			{
				_1d079ac19_funcCall(_self_, (*(_22528_model)).cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b80cb298:;
			{
				_1d079ae8e_slice(_self_, (*(_22528_model)).cast_ptr<_1d061836c_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b80cb320:;
			{
				_1d079b214_array(_self_, (*(_22528_model)).cast_ptr<_1d061b095_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b80cb397:;
			{
				_1d079b489_indexing(_self_, (*(_22528_model)).cast_ptr<_1d06187e0_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b80cb41e:;
			{
				_1d079b70e_anonFunc(_self_, (*(_22528_model)).cast_ptr<_1d0618b97_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b80cb496:;
			{
				_1d079b984_mapExpr(_self_, (*(_22528_model)).cast_ptr<_1d06194c2_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b80cb51d:;
			{
				_1d079bc09_slicing(_self_, (*(_22528_model)).cast_ptr<_1d0619a11_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b80cb595:;
			{
				_1d079be7e_traitSub(_self_, (*(_22528_model)).cast_ptr<_1d061a050_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b80cb61c:;
			{
				_1d079c204_structureSub(_self_, (*(_22528_model)).cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b80cb694:;
			{
				_1d079c479_commonSub(_self_, (*(_22528_model)).cast_ptr<_1d061b8e2_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b80cb71b:;
			{
				_1d079c6ee_tuple(_self_, (*(_22528_model)).cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b80cb793:;
			{
				_1d079cbe9_outCall(_self_, (*(_22528_model)).cast_ptr<_1d061c0b8_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b80cb81a:;
			{
				_1d079ce6e_outlnCall(_self_, (*(_22528_model)).cast_ptr<_1d061c4a3_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b80cb892:;
			{
				_1d079c974_newCall(_self_, (*(_22528_model)).cast_ptr<_1d061cbac_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b80cb919:;
			{
				_1d079d1e4_panicCall(_self_, (*(_22528_model)).cast_ptr<_1d061d097_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b80cb991:;
			{
				_1d079d469_assertCall(_self_, (*(_22528_model)).cast_ptr<_1d061d54d_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b80cba18:;
			{
				_1d079d6de_errorCall(_self_, (*(_22528_model)).cast_ptr<_1d062042e_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b80cba90:;
			{
				_1d079d964_makeCall(_self_, (*(_22528_model)).cast_ptr<_1d061da04_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b80cbb17:;
			{
				_1d079dbd9_appendCall(_self_, (*(_22528_model)).cast_ptr<_1d061ddde_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b80cbb8e:;
			{
				_1d079de5e_lenCall(_self_, (*(_22528_model)).cast_ptr<_1d061e20d_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b80cbc16:;
			{
				_1d079e1d4_capCall(_self_, (*(_22528_model)).cast_ptr<_1d061e52c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b80cbc8d:;
			{
				_1d079e459_cloneCall(_self_, (*(_22528_model)).cast_ptr<_1d061c7c2_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b80cbd15:;
			{
				_1d079e6ce_deleteCall(_self_, (*(_22528_model)).cast_ptr<_1d061ebd1_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b80cbd8c:;
			{
				_1d079e954_sizeof(_self_, (*(_22528_model)).cast_ptr<_1d062072b_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b80cbe14:;
			{
				_1d079ebc9_alignof(_self_, (*(_22528_model)).cast_ptr<_1d0620a17_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b80cbe8b:;
			{
				_1d079ee4e_integratedToStr(_self_, (*(_22528_model)).cast_ptr<_1d0621111_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b80cc013:;
			{
				_1d07a01c4_free(_self_, (*(_22528_model)).cast_ptr<_1d06217b5_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b80cc08a:;
			{
				_1d07a0449_backendEmit(_self_, (*(_22528_model)).cast_ptr<_1d06214c9_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b80cad58:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d0799377_exprDeadCode _Src) {
	_Stream << "exprDeadCode{";
	_Stream << "s:" << _Src._field_s;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06556ea_StrCompExprModel _Src) {
	_Stream << "StrCompExprModel{";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right << ", ";
	_Stream << "NotEq:" << _Src._field_NotEq;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0655ab3_StrAppendExprModel _Src) {
	_Stream << "StrAppendExprModel{";
	_Stream << "Str:" << _Src._field_Str << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0655d9e_UnsafeBinopExprModel _Src) {
	_Stream << "UnsafeBinopExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0656234_UnsafeIndexingExprModel _Src) {
	_Stream << "UnsafeIndexingExprModel{";
	_Stream << "Node:" << _Src._field_Node;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d06565b9_PushToSliceExprModel _Src) {
	_Stream << "PushToSliceExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Elems:" << _Src._field_Elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0656b08_MutSlicingExprModel _Src) {
	_Stream << "MutSlicingExprModel{";
	_Stream << "Token:" << _Src._field_Token << ", ";
	_Stream << "Expr:" << _Src._field_Expr << ", ";
	_Stream << "Left:" << _Src._field_Left << ", ";
	_Stream << "Right:" << _Src._field_Right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0656ed2_StrInsertBeginExprModel _Src) {
	_Stream << "StrInsertBeginExprModel{";
	_Stream << "Dest:" << _Src._field_Dest << ", ";
	_Stream << "Expr:" << _Src._field_Expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d06581e2_scopeOptimizer> static__1d0658753_new(jule::Ptr<_1d2174613_Scope> _4623_scope) {
	return jule::new_ptr<_1d06581e2_scopeOptimizer>(_1d06581e2_scopeOptimizer{._field_scope=_4623_scope});;
}



inline void _1d06589c8_setCurrentStmt(_1d06581e2_scopeOptimizer* _self_, jule::Any _5237_stmt) {
	(*(_self_))._field_scope.get()._field_Stmts[(*(_self_))._field_i]=(*(((jule::Any*)((&(_5237_stmt))))));
}



inline void _1d0658c4d_optimizeData(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d0408c95_Data> _5635_d) {
	{
		auto &_match_expr{ _5635_d.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b8115d71:;
			{
				jule::Ptr<_1d0617eb5_FnCallExprModel> _5921_m = _5635_d.get()._field_Model.cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35);;
				if (_229913002_Production) {
					if (((!(_1d0628305_IsBuiltin(_5921_m.get()._field_Func.ptr()))) && _1d065bdb6_isStdPackage(_5921_m.get()._field_Func.get()._field_Decl.get()._field_Token.get()._field_File.get()._field_Path, jule::Str("debug", 5)))) {
						_1d06589c8_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
			}
		}
		_match_end_1b8115b62:;
	};
	static__1d1ecb459_optimize(&(_5635_d.get()._field_Model));
}



inline void _1d0658ec3_optimizeVar(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d21bb65a_Var> _7134_v) {
	if ((_7134_v.get()._field_Value != nullptr)) {
		static__1d1ecb459_optimize(&(_7134_v.get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1d0659248_optimizeConditional(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d217516e_Conditional> _7742_c) {
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8118a66:;
		if (it != expr_end) {
			jule::Ptr<_1d2174a0e_If> _7821_elif = *it;
			{
				static__1d1ecb459_optimize(&(_7821_elif.get()._field_Expr));
				_1d065b7de_optimizeChild(_self_, _7821_elif.get()._field_Scope);
			}
			_iter_next_1b8118a66:;
			++it;
			goto _iter_begin_1b8118a66;
		}
		_iter_end_1b8118a66:;
	};
	if ((_7742_c.get()._field_Default != nullptr)) {
		_1d065b7de_optimizeChild(_self_, _7742_c.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1d2214e67_Cond))) {
		return;;
	};
	jule::Bool _9017_constCase = false;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b811a6d3:;
		if (it != expr_end) {
			jule::I64 _9314_i = it - expr->begin();
			jule::Ptr<_1d2174a0e_If> _9321_elif = *it;
			{
				if ((!(_1d065c1c4_isConstantValidConditionalCase(&(_9321_elif))))) {
					goto _iter_next_1b811a6d3;
				};
				_9017_constCase=true;
				_7742_c.get()._field_Elifs=_7742_c.get()._field_Elifs.slice(0LL, _9314_i);
				_7742_c.get()._field_Default=jule::new_ptr<_1d2174cea_Else>(_1d2174cea_Else{._field_Scope=_9321_elif.get()._field_Scope});
				goto _iter_end_1b811a6d3;
			}
			_iter_next_1b811a6d3:;
			++it;
			_9314_i++;
			goto _iter_begin_1b811a6d3;
		}
		_iter_end_1b811a6d3:;
	};
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d2174a0e_If>* _11017_i = (&(_7742_c.get()._field_Elifs[0LL]));;
	jule::Ptr<_1d2174a0e_If>* _11113_end = (&(_7742_c.get()._field_Elifs[(_7742_c.get()._field_Elifs.len() - 1LL)]));;
	for (; (_11017_i <= _11113_end); (_11017_i)++) {
		{
			{
				if (_1d065ca65_isUnreachableConditionalCase(&((*(_11017_i))))) {
					(*(_11017_i))=nullptr;
				};
			};
		}
	_iter_next_1b811d50a:;
	}
	_iter_end_1b811d50a:;;
	if ((_7742_c.get()._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_9017_constCase))) {
		return;;
	};
	jule::I64 _12917_only = -1LL;;
	{
		auto expr = &(_7742_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b811ea17:;
		if (it != expr_end) {
			jule::I64 _13013_j = it - expr->begin();
			jule::Ptr<_1d2174a0e_If> _13016_elif = *it;
			{
				if ((_13016_elif != nullptr)) {
					if ((_12917_only != -1LL)) {
						return;;
					};
					_12917_only=_13013_j;
				};
			}
			_iter_next_1b811ea17:;
			++it;
			_13013_j++;
			goto _iter_begin_1b811ea17;
		}
		_iter_end_1b811ea17:;
	};
	if ((_12917_only != -1LL)) {
		_1d06589c8_setCurrentStmt(_self_, jule::Any(_7742_c.get()._field_Elifs[_12917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1d0659633_buildDefaultConstatTrueCase(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2178e75_Case> _14650_case, jule::I64* _14668_i, jule::Ptr<_1d217842a_Match>* _14681_m) {
	_14650_case.get()._field_Exprs=nullptr;
	jule::I64 _14813_start = (*(_14668_i));;
	_julec_label_loop:;
	for (;;) {
		{
			if ((_14650_case.get()._field_Scope.get()._field_Stmts.len() == 0LL)) {
				goto _iter_end_1b8122311;
			};
			jule::Any *_15422_stmt = &(_14650_case.get()._field_Scope.get()._field_Stmts[(_14650_case.get()._field_Scope.get()._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_15422_stmt)) };
				
				if (_match_expr.type == &__jule_any_type49) {
					_case_begin_1b8122982:;
					{
						((*(_14668_i)))++;
						if (((*(_14668_i)) >= (*(_14681_m)).get()._field_Cases.len())) {
							(*(_15422_stmt))=jule::Any((*(_14681_m)).get()._field_Default.get()._field_Scope, &__jule_any_type22);
							goto _iter_end_1b8122311;
						};
						_14650_case=(*(_14681_m)).get()._field_Cases[(*(_14668_i))];
						(*(_15422_stmt))=jule::Any(_14650_case.get()._field_Scope, &__jule_any_type22);
					}
				}
				else {
					_case_begin_1b8123c08:;
					{
						goto _iter_end_1b8122311;
					}
				}
				_match_end_1b8123b1a:;
			};
		}
	_iter_next_1b8122311:;
	}
	_iter_end_1b8122311:;;
	(*(_14681_m)).get()._field_Default=(*(_14681_m)).get()._field_Cases[_14813_start];
	(*(_14681_m)).get()._field_Cases=(*(_14681_m)).get()._field_Cases.slice(0LL, _14813_start);
}



inline void _1d0659842_optimizeMatch(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d217842a_Match> _17236_m) {
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8125bb6:;
		if (it != expr_end) {
			jule::Ptr<_1d2178e75_Case> _17321_case = *it;
			{
				{
					auto expr = &(_17321_case.get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8126502:;
					if (it != expr_end) {
						jule::Ptr<_1d0408c95_Data> _17425_expr = *it;
						{
							static__1d1ecb459_optimize(&(_17425_expr.get()._field_Model));
						}
						_iter_next_1b8126502:;
						++it;
						goto _iter_begin_1b8126502;
					}
					_iter_end_1b8126502:;
				};
				_1d065b7de_optimizeChild(_self_, _17321_case.get()._field_Scope);
			}
			_iter_next_1b8125bb6:;
			++it;
			goto _iter_begin_1b8125bb6;
		}
		_iter_end_1b8125bb6:;
	};
	if ((_17236_m.get()._field_Default != nullptr)) {
		_1d065b7de_optimizeChild(_self_, _17236_m.get()._field_Default.get()._field_Scope);
	};
	if ((!(_1d2214e67_Cond))) {
		return;;
	};
	jule::Bool _18717_constCase = false;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8127d72:;
		if (it != expr_end) {
			jule::I64 _19018_i = it - expr->begin();
			jule::Ptr<_1d2178e75_Case> _19025_case = *it;
			{
				if ((!(_1d065c7bd_isConstantValidMatchCase(&(_19025_case))))) {
					goto _iter_next_1b8127d72;
				};
				_18717_constCase=true;
				_1d0659633_buildDefaultConstatTrueCase(_self_, _19025_case, &(_19018_i), &(_17236_m));
				goto _iter_end_1b8127d72;
			}
			_iter_next_1b8127d72:;
			++it;
			_19018_i++;
			goto _iter_begin_1b8127d72;
		}
		_iter_end_1b8127d72:;
	};
	if ((_17236_m.get()._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1d2178e75_Case>* _20417_i = (&(_17236_m.get()._field_Cases[0LL]));;
	jule::Ptr<_1d2178e75_Case>* _20513_end = (&(_17236_m.get()._field_Cases[(_17236_m.get()._field_Cases.len() - 1LL)]));;
	for (; (_20417_i <= _20513_end); (_20417_i)++) {
		{
			{
				if (_1d065cd1d_isUnreachableMatchCase(&((*(_20417_i))))) {
					(*(_20417_i))=nullptr;
				};
			};
		}
	_iter_next_1b812a616:;
	}
	_iter_end_1b812a616:;;
	if ((!(_18717_constCase))) {
		return;;
	};
	jule::I64 _21917_only = -1LL;;
	{
		auto expr = &(_17236_m.get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b812b628:;
		if (it != expr_end) {
			jule::I64 _22013_j = it - expr->begin();
			jule::Ptr<_1d2178e75_Case> _22016_case = *it;
			{
				if ((_22016_case != nullptr)) {
					if ((_21917_only != -1LL)) {
						return;;
					};
					_21917_only=_22013_j;
				};
			}
			_iter_next_1b812b628:;
			++it;
			_22013_j++;
			goto _iter_begin_1b812b628;
		}
		_iter_end_1b812b628:;
	};
	if ((_21917_only != -1LL)) {
		_1d06589c8_setCurrentStmt(_self_, jule::Any(_17236_m.get()._field_Cases[_21917_only].get()._field_Scope, &__jule_any_type22));
	};
}



inline void _1d0659ab7_optimizeRangeIter(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d21762b3_RangeIter> _23640_it) {
	static__1d1ecb459_optimize(&(_23640_it.get()._field_Expr.get()._field_Model));
	_1d065b7de_optimizeChild(_self_, _23640_it.get()._field_Scope);
}



inline void _1d0659d3c_optimizeWhileIter(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d21758cd_WhileIter> _24140_it) {
	static__1d1ecb459_optimize(&(_24140_it.get()._field_Expr));
	_1d065b569_optimizeStmt(_self_, _24140_it.get()._field_Next);
	_1d065b7de_optimizeChild(_self_, _24140_it.get()._field_Scope);
}



inline jule::Bool _1d065a14a_substr(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2177968_Assign> _24729_a) {
	if ((!_24729_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _24729_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b81307b4:;
			{
				jule::Ptr<_1d0619a11_SlicingExprModel> _25321_sem = _24729_a.get()._field_R.get()._field_Model.cast_ptr<_1d0619a11_SlicingExprModel>(&__jule_any_type97);;
				if ((_25321_sem.get()._field_Expr == _24729_a.get()._field_L.get()._field_Model)) {
					_1d06589c8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d0656b08_MutSlicingExprModel>(_1d0656b08_MutSlicingExprModel{._field_Token=_25321_sem.get()._field_Token, ._field_Expr=_25321_sem.get()._field_Expr, ._field_Left=_25321_sem.get()._field_Left, ._field_Right=_25321_sem.get()._field_Right}), &__jule_any_type123));
					return true;;
				};
			}
		}
		_match_end_1b813075e:;
	};
	return false;;
}



inline jule::Bool _1d065a458_strInsert(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2177968_Assign> _26732_a) {
	if ((!_26732_a.get()._field_Op.get()._field_Kind.equal("=", 1))) {
		return false;;
	};
	{
		auto &_match_expr{ _26732_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b8133157:;
			{
				jule::Ptr<_1d061614a_BinopExprModel> _27321_m = _26732_a.get()._field_R.get()._field_Model.cast_ptr<_1d061614a_BinopExprModel>(&__jule_any_type114);;
				if ((_27321_m.get()._field_Right.get()._field_Model == _26732_a.get()._field_L.get()._field_Model)) {
					_1d06589c8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d0656ed2_StrInsertBeginExprModel>(_1d0656ed2_StrInsertBeginExprModel{._field_Dest=_26732_a.get()._field_L.get()._field_Model, ._field_Expr=_27321_m.get()._field_Left.get()._field_Model}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1b8133102:;
	};
	return false;;
}



inline jule::Bool _1d065a766_strAppend(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2177968_Assign> _28532_a) {
	if ((!_28532_a.get()._field_Op.get()._field_Kind.equal("+=", 2))) {
		return false;;
	};
	{
		auto &_match_expr{ _28532_a.get()._field_R.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b81359ea:;
			{
				_1d06589c8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d0655ab3_StrAppendExprModel>(_1d0655ab3_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_28532_a.get()._field_R.get()._field_Model}), &__jule_any_type125));
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b8135a61:;
			{
				jule::Ptr<_1d0617613_CastingExprModel> _30021_c = _28532_a.get()._field_R.get()._field_Model.cast_ptr<_1d0617613_CastingExprModel>(&__jule_any_type98);;
				jule::Ptr<_1d21d9568_Prim> _30121_prim = _1d21d4563_Prim(_30021_c.get()._field_ExprKind.ptr());;
				if (((_30121_prim == nullptr) && (_1d21d54dc_Slc(_30021_c.get()._field_ExprKind.ptr()) != nullptr))) {
					_30121_prim=_1d21d4563_Prim(_1d21d54dc_Slc(_30021_c.get()._field_ExprKind.ptr()).get()._field_Elem.ptr());
				};
				if (((_30121_prim == nullptr) || ((!(_1d21dad72_IsU8(_30121_prim.ptr()))) && (!(_1d21da899_IsI32(_30121_prim.ptr())))))) {
					goto _match_end_1b8135995;
				};
				_1d06589c8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d0655ab3_StrAppendExprModel>(_1d0655ab3_StrAppendExprModel{._field_Str=_28532_a.get()._field_L.get()._field_Model, ._field_Expr=_30021_c.get()._field_Expr}), &__jule_any_type125));
				return true;;
			}
		}
		_match_end_1b8135995:;
	};
	return false;;
}



inline jule::Bool _1d065aa74_strAssign(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2177968_Assign> _31732_a) {
	if ((!(_1d2215231_Str))) {
		return false;;
	};
	jule::Ptr<_1d21d9568_Prim> _32113_lp = _1d21d4563_Prim(_31732_a.get()._field_L.get()._field_Kind.ptr());;
	if (((_32113_lp == nullptr) || (!(_1d21dc79c_IsStr(_32113_lp.ptr()))))) {
		return false;;
	};
	{
		
		if (_1d065a14a_substr(_self_, _31732_a) || _1d065a458_strInsert(_self_, _31732_a) || _1d065a766_strAppend(_self_, _31732_a)) {
			_case_begin_1b813b25e:;
			{
				return true;;
			}
		}
		_match_end_1b813b209:;
	};
	return false;;
}



inline void _1d065ace9_optimizeAssign(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2177968_Assign> _33437_assign) {
	if (_1d065aa74_strAssign(_self_, _33437_assign)) {
		return;;
	};
	static__1d1ecb459_optimize(&(_33437_assign.get()._field_L.get()._field_Model));
	static__1d1ecb459_optimize(&(_33437_assign.get()._field_R.get()._field_Model));
	{
		auto &_match_expr{ _33437_assign.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/=", 2) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b813d140:;
			{
				if ((_1d22142a7_Math && (_1d21d59b5_Struct(_33437_assign.get()._field_L.get()._field_Kind.ptr()) == nullptr))) {
					_33437_assign.get()._field_Op.get()._field_Kind=_33437_assign.get()._field_Op.get()._field_Kind.slice(0LL, (_33437_assign.get()._field_Op.get()._field_Kind.len() - 1LL));
					jule::Any _34725_model = jule::Any(jule::new_ptr<_1d061614a_BinopExprModel>(_1d061614a_BinopExprModel{._field_Left=_33437_assign.get()._field_L, ._field_Right=_33437_assign.get()._field_R, ._field_Op=_33437_assign.get()._field_Op}), &__jule_any_type114);;
					static__1d1ecb459_optimize(&(_34725_model));
					{
						auto &_match_expr{ _34725_model };
						
						if (_match_expr.type == &__jule_any_type114) {
							_case_begin_1b81405b5:;
							{
								_33437_assign.get()._field_R=jule::new_ptr<_1d0615b83_OperandExprModel>((*(_33437_assign.get()._field_R)));
								_33437_assign.get()._field_Op.get()._field_Kind=jule::Str("=", 1);
								_33437_assign.get()._field_R.get()._field_Model=_34725_model;
								return;;
							}
						}
						_match_end_1b8140560:;
					};
					(_33437_assign.get()._field_Op.get()._field_Kind).append("=", 1);
					return;;
				};
			}
		}
		_match_end_1b813d041:;
	};
	if (_1d220ea22_Append) {
		{
			auto &_match_expr{ _33437_assign.get()._field_R.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type26) {
				_case_begin_1b8141cd1:;
				{
					jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel> _36825_m = _33437_assign.get()._field_R.get()._field_Model.cast_ptr<_1d061ddde_BuiltinAppendCallExprModel>(&__jule_any_type26);;
					{
						auto &_match_expr{ _36825_m.get()._field_Elements };
						
						if (_match_expr.type == &__jule_any_type82) {
							_case_begin_1b8142d48:;
							{
								{
									auto &_match_expr{ _36825_m.get()._field_Dest };
									
									if (_match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type71) {
										_case_begin_1b81435c9:;
										{
											_1d06589c8_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1d06565b9_PushToSliceExprModel>(_1d06565b9_PushToSliceExprModel{._field_Dest=_36825_m.get()._field_Dest, ._field_Elems=_36825_m.get()._field_Elements.cast_ptr<_1d061836c_SliceExprModel>(&__jule_any_type82)}), &__jule_any_type126));
										}
									}
									_match_end_1b8143574:;
								};
							}
						}
						_match_end_1b8142b39:;
					};
				}
			}
			_match_end_1b813ea15:;
		};
	};
}



inline void _1d065b06e_optimizeMultiAssign(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2177d20_MultiAssign> _38442_assign) {
	{
		auto expr = &(_38442_assign.get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81421cc:;
		if (it != expr_end) {
			jule::Ptr<_1d0408c95_Data> _38521_l = *it;
			{
				if ((_38521_l != nullptr)) {
					static__1d1ecb459_optimize(&(_38521_l.get()._field_Model));
				};
			}
			_iter_next_1b81421cc:;
			++it;
			goto _iter_begin_1b81421cc;
		}
		_iter_end_1b81421cc:;
	};
	static__1d1ecb459_optimize(&(_38442_assign.get()._field_R));
}



inline void _1d065b2e4_optimizeRet(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d217989e_RetSt> _39334_r) {
	static__1d1ecb459_optimize(&(_39334_r.get()._field_Expr));
}



inline void _1d065b569_optimizeStmt(_1d06581e2_scopeOptimizer* _self_, jule::Any _39735_stmt) {
	{
		auto &_match_expr{ _39735_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b8145796:;
			{
				_1d065b7de_optimizeChild(_self_, _39735_stmt.cast_ptr<_1d2174613_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b814581d:;
			{
				_1d0658c4d_optimizeData(_self_, _39735_stmt.cast_ptr<_1d0408c95_Data>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8145884:;
			{
				_1d0658ec3_optimizeVar(_self_, _39735_stmt.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b81458ea:;
			{
				_1d0659248_optimizeConditional(_self_, _39735_stmt.cast_ptr<_1d217516e_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b8145961:;
			{
				_1d0659ab7_optimizeRangeIter(_self_, _39735_stmt.cast_ptr<_1d21762b3_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b81459d8:;
			{
				_1d0659d3c_optimizeWhileIter(_self_, _39735_stmt.cast_ptr<_1d21758cd_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b8145a60:;
			{
				_1d065b7de_optimizeChild(_self_, _39735_stmt.cast_ptr<_1d217545a_InfIter>(&__jule_any_type37).get()._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b8145ad7:;
			{
				_1d065ace9_optimizeAssign(_self_, _39735_stmt.cast_ptr<_1d2177968_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b8145b5e:;
			{
				_1d065b06e_optimizeMultiAssign(_self_, _39735_stmt.cast_ptr<_1d2177d20_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b8145bd6:;
			{
				_1d0659842_optimizeMatch(_self_, _39735_stmt.cast_ptr<_1d217842a_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b8145c5d:;
			{
				_1d065b2e4_optimizeRet(_self_, _39735_stmt.cast_ptr<_1d217989e_RetSt>(&__jule_any_type51));
			}
		}
		_match_end_1b81455cb:;
	};
}



inline void _1d065b7de_optimizeChild(_1d06581e2_scopeOptimizer* _self_, jule::Ptr<_1d2174613_Scope> _42436_child) {
	jule::Ptr<_1d06581e2_scopeOptimizer> _42517_so = static__1d0658753_new(_42436_child);;
	_1d065b9ba_optimize(_42517_so.ptr());
}



inline void _1d065b9ba_optimize(_1d06581e2_scopeOptimizer* _self_) {
	{
		auto expr = &((*(_self_))._field_scope.get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b814b516:;
		if (it != expr_end) {
			jule::I64 _43114_i = it - expr->begin();
			jule::Any _43121_stmt = *it;
			{
				(*(_self_))._field_i=_43114_i;
				_1d065b569_optimizeStmt(_self_, _43121_stmt);
			}
			_iter_next_1b814b516:;
			++it;
			_43114_i++;
			goto _iter_begin_1b814b516;
		}
		_iter_end_1b814b516:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d06581e2_scopeOptimizer _Src) {
	_Stream << "scopeOptimizer{";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline void static__1d1ecb459_optimize(jule::Any* _5829_model) {
	if (_1d07a0cda_exprEnabled) {
		jule::Ptr<_1d1ecaea3_exprOptimizer> _6121_exop = jule::new_ptr<_1d1ecaea3_exprOptimizer>(_1d1ecaea3_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)((&((*(_5829_model))))))});;
		_1d1ed264c_do(_6121_exop.ptr());
	};
}



inline jule::Bool _1d1ecb756_strCond(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061614a_BinopExprModel> _6826_m) {
	jule::Ptr<_1d21d9568_Prim> _6913_lp = _1d21d4563_Prim(_6826_m.get()._field_Left.get()._field_Kind.ptr());;
	if (((_6913_lp == nullptr) || (!(_1d21dc79c_IsStr(_6913_lp.ptr()))))) {
		return false;;
	};
	if (((!_6826_m.get()._field_Op.get()._field_Kind.equal("==", 2)) && (!_6826_m.get()._field_Op.get()._field_Kind.equal("!=", 2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Left.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b815450d:;
			{
				({
					jule::Ptr<_1d0615b83_OperandExprModel> ___jule_assign_arg = _6826_m.get()._field_Right;
					jule::Ptr<_1d0615b83_OperandExprModel> _1___jule_assign_arg = _6826_m.get()._field_Left;
					_6826_m.get()._field_Left = ___jule_assign_arg;
					_6826_m.get()._field_Right = _1___jule_assign_arg;
				});
				goto _julec_label_opt;
			}
		}
		_match_end_1b81544a8:;
	};
	{
		auto &_match_expr{ _6826_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b8153870:;
			{
				goto _match_end_1b8155047;
			}
		}
		else {
			_case_begin_1b81555db:;
			{
				return true;;
			}
		}
		_match_end_1b8155047:;
	};
	_julec_label_opt:;
	jule::Ptr<_1e76e5cc3_Const> _8817_c = _6826_m.get()._field_Right.get()._field_Model.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
	{
		auto &_match_expr{ _6826_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("==", 2)) {
			_case_begin_1b81566a8:;
			{
				if (_1e76e7d08_ReadStr(_8817_c.ptr()).empty()) {
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1d061b8e2_CommonSubIdentExprModel>(_1d061b8e2_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73);
					goto _match_end_1b8156653;
				};
				jule::Any _9921_model = jule::Any(jule::new_ptr<_1d06556ea_StrCompExprModel>(_1d06556ea_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=false}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_9921_model))))));
			}
		}
		else if (_match_expr == jule::Str("!=", 2)) {
			_case_begin_1b815671e:;
			{
				if (_1e76e7d08_ReadStr(_8817_c.ptr()).empty()) {
					jule::Ptr<_22be1281d_Token> _10725_op = _6826_m.get()._field_Op;;
					_10725_op.get()._field_Kind=jule::Str("!", 1);
					(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1d0616502_UnaryExprModel>(_1d0616502_UnaryExprModel{._field_Expr=jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Model=jule::Any(jule::new_ptr<_1d061b8e2_CommonSubIdentExprModel>(_1d061b8e2_CommonSubIdentExprModel{._field_ExprKind=_6826_m.get()._field_Left.get()._field_Kind, ._field_Expr=_6826_m.get()._field_Left.get()._field_Model, ._field_Ident=jule::Str("empty()", 7)}), &__jule_any_type73), }), ._field_Op=_10725_op}), &__jule_any_type74);
					goto _match_end_1b8156653;
				};
				jule::Any _12121_model = jule::Any(jule::new_ptr<_1d06556ea_StrCompExprModel>(_1d06556ea_StrCompExprModel{._field_Left=_6826_m.get()._field_Left.get()._field_Model, ._field_Right=_8817_c, ._field_NotEq=true}), &__jule_any_type127);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_12121_model))))));
			}
		}
		_match_end_1b8156653:;
	};
	return true;;
}



inline void _1d1ecb9cb_binary(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061614a_BinopExprModel> _13125_m) {
	static__1d1ecb459_optimize(&(_13125_m.get()._field_Left.get()._field_Model));
	static__1d1ecb459_optimize(&(_13125_m.get()._field_Right.get()._field_Model));
	{
		auto &_match_expr{ _13125_m.get()._field_Right.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b815cea6:;
			{
				goto _match_end_1b815c9cd;
			}
		}
		else {
			_case_begin_1b815ca77:;
			{
				return;;
			}
		}
		_match_end_1b815c9cd:;
	};
	if ((_1d2214e67_Cond && _1d1ecb756_strCond(_self_, _13125_m))) {
		return;;
	};
	if ((!(_1d22142a7_Math))) {
		return;;
	};
	{
		auto &_match_expr{ _13125_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b815da89:;
			{
				jule::Bool _15118_ok = false;;
				jule::U64 _15122_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1d1ed2a48_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15118_ok = __jule_assign_result.__jule_result_arg0;
					_15122_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15118_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("<<", 2);
					jule::Ptr<_1e76e5cc3_Const> _15425_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
					_1e76e8ca4_SetU64(_15425_c.ptr(), _15122_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("/", 1)) {
			_case_begin_1b815db00:;
			{
				jule::Bool _15918_ok = false;;
				jule::U64 _15922_x = 0;;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1d1ed2a48_checkForBitShiftOpt(&(_13125_m.get()._field_Left), &(_13125_m.get()._field_Right));
					_15918_ok = __jule_assign_result.__jule_result_arg0;
					_15922_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_15918_ok) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str(">>", 2);
					jule::Ptr<_1e76e5cc3_Const> _16225_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
					_1e76e8ca4_SetU64(_16225_c.ptr(), _15922_x);
					return;;
				};
			}
		}
		else if (_match_expr == jule::Str("%", 1)) {
			_case_begin_1b815db77:;
			{
				jule::Ptr<_1e76e5cc3_Const> _16721_c = _13125_m.get()._field_Right.get()._field_Model.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
				jule::F64 _16817_d = _1e76e87a9_AsF64(_16721_c.ptr());;
				if ((_16817_d == 2LL)) {
					_13125_m.get()._field_Op.get()._field_Kind=jule::Str("&", 1);
					_1e76e8a2e_SetI64(_16721_c.ptr(), 1LL);
				};
			}
		}
		_match_end_1b815da34:;
	};
	jule::Any _17417_model = jule::Any(jule::new_ptr<_1d0655d9e_UnsafeBinopExprModel>(_1d0655d9e_UnsafeBinopExprModel{._field_Node=_13125_m}), &__jule_any_type128);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_17417_model))))));
}



inline void _1d1ecbc51_unary(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0616502_UnaryExprModel> _17824_m) {
	static__1d1ecb459_optimize(&(_17824_m.get()._field_Expr.get()._field_Model));
	if ((_1d2214a8d_Ptr && _17824_m.get()._field_Op.get()._field_Kind.equal("*", 1))) {
		{
			auto &_match_expr{ _17824_m.get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type74) {
				_case_begin_1b8165673:;
				{
					jule::Ptr<_1d0616502_UnaryExprModel> _18325_um = _17824_m.get()._field_Expr.get()._field_Model.cast_ptr<_1d0616502_UnaryExprModel>(&__jule_any_type74);;
					if (_18325_um.get()._field_Op.get()._field_Kind.equal("&", 1)) {
						(*((*(_self_))._field_model))=_18325_um.get()._field_Expr.get()._field_Model;
					};
				}
			}
			_match_end_1b816561d:;
		};
	};
}



inline void _1d1ecbec6_structureLit(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0616ca5_StructLitExprModel> _19131_m) {
	{
		auto expr = &(_19131_m.get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81670e2:;
		if (it != expr_end) {
			jule::Ptr<_1d06168ed_StructArgExprModel> _19221_arg = *it;
			{
				static__1d1ecb459_optimize(&(_19221_arg.get()._field_Expr));
			}
			_iter_next_1b81670e2:;
			++it;
			goto _iter_begin_1b81670e2;
		}
		_iter_end_1b81670e2:;
	};
}



inline void _1d1ecc24b_allocStructure(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d06170b3_AllocStructLitExprModel> _19733_m) {
	_1d1ecbec6_structureLit(_self_, _19733_m.get()._field_Lit);
}



inline void _1d1ecc4c1_casting(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0617613_CastingExprModel> _20126_m) {
	static__1d1ecb459_optimize(&(_20126_m.get()._field_Expr));
}



inline void _1d1ecc746_args(_1d1ecaea3_exprOptimizer* _self_, jule::Slice<jule::Any>* _20524_args) {
	{
		auto expr = _20524_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81688b8:;
		if (it != expr_end) {
			jule::I64 _20614_i = it - expr->begin();
			jule::Any _20621_arg = *it;
			{
				static__1d1ecb459_optimize(&(_20621_arg));
				(*(_20524_args))[_20614_i]=_20621_arg;
			}
			_iter_next_1b81688b8:;
			++it;
			_20614_i++;
			goto _iter_begin_1b81688b8;
		}
		_iter_end_1b81688b8:;
	};
}



inline void _1d1ecc9bb_scope(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d2174613_Scope>* _21225_s) {
	jule::Ptr<_1d06581e2_scopeOptimizer> _21317_scopt = static__1d0658753_new((*(_21225_s)));;
	_1d065b9ba_optimize(_21317_scopt.ptr());
}



inline void _1d1eccc41_funcCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0617eb5_FnCallExprModel> _21727_m) {
	static__1d1ecb459_optimize(&(_21727_m.get()._field_Expr));
	_1d1ecc746_args(_self_, &(_21727_m.get()._field_Args));
	if ((_21727_m.get()._field_Except != nullptr)) {
		_1d1ecc9bb_scope(_self_, &(_21727_m.get()._field_Except));
	};
}



inline void _1d1ecceb6_slice(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061836c_SliceExprModel> _22524_m) {
	_1d1ecc746_args(_self_, &(_22524_m.get()._field_Elems));
}



inline void _1d1ecd23b_array(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061b095_ArrayExprModel> _22924_m) {
	if (((_22924_m.get()._field_Elems.len() == 2LL) && (_22924_m.get()._field_Elems[1LL] == nullptr))) {
		jule::Any _23121_elem = _22924_m.get()._field_Elems[0LL];;
		static__1d1ecb459_optimize(&(_23121_elem));
		_22924_m.get()._field_Elems[0LL]=_23121_elem;
	};
	_1d1ecc746_args(_self_, &(_22924_m.get()._field_Elems));
}



inline void _1d1ecd4b1_indexing(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d06187e0_IndexingExprModel> _23827_m) {
	static__1d1ecb459_optimize(&(_23827_m.get()._field_Expr.get()._field_Model));
	static__1d1ecb459_optimize(&(_23827_m.get()._field_Index.get()._field_Model));
	if ((!(_1d221450a_Access))) {
		return;;
	};
	jule::Bool _24413_array = (_1d21d5278_Arr(_23827_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr);;
	if ((_24413_array && _1d0409658_IsConst(_23827_m.get()._field_Index.ptr()))) {
		jule::Any _24721_model = jule::Any(jule::new_ptr<_1d0656234_UnsafeIndexingExprModel>(_1d0656234_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type129);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_24721_model))))));
		return;;
	};
	{
		auto &_match_expr{ _23827_m.get()._field_Index.get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b81713a4:;
			{
				jule::Ptr<_1d21bb65a_Var> _25317_i = _23827_m.get()._field_Index.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
				if ((_25317_i.get()._field_Mutable || (_25317_i.get()._field_IterRelation == nullptr))) {
					goto _match_end_1b8171250;
				};
				{
					auto &_match_expr{ _23827_m.get()._field_Expr.get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b8172a6a:;
						{
							jule::Ptr<_1d21bb65a_Var> _25921_r = _23827_m.get()._field_Expr.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
							if ((_25317_i.get()._field_IterRelation.get()._field_Range == _25921_r)) {
								jule::Any _26229_model = jule::Any(jule::new_ptr<_1d0656234_UnsafeIndexingExprModel>(_1d0656234_UnsafeIndexingExprModel{._field_Node=_23827_m}), &__jule_any_type129);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_26229_model))))));
							};
						}
					}
					_match_end_1b817274b:;
				};
			}
		}
		_match_end_1b8171250:;
	};
}



inline void _1d1ecd736_anonFunc(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0618b97_AnonFnExprModel> _26927_m) {
	_1d1ecc9bb_scope(_self_, &(_26927_m.get()._field_Func.get()._field_Scope));
}



inline void _1d1ecd9ab_mapExpr(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d06194c2_MapExprModel> _27326_m) {
	{
		auto expr = &(_27326_m.get()._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8175056:;
		if (it != expr_end) {
			jule::Ptr<_1d061904e_KeyValPairExprModel> _27421_pair = *it;
			{
				static__1d1ecb459_optimize(&(_27421_pair.get()._field_Key));
				static__1d1ecb459_optimize(&(_27421_pair.get()._field_Val));
			}
			_iter_next_1b8175056:;
			++it;
			goto _iter_begin_1b8175056;
		}
		_iter_end_1b8175056:;
	};
}



inline void _1d1ecdc31_slicing(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0619a11_SlicingExprModel> _28026_m) {
	static__1d1ecb459_optimize(&(_28026_m.get()._field_Expr));
	static__1d1ecb459_optimize(&(_28026_m.get()._field_Left));
	if ((_28026_m.get()._field_Right != nullptr)) {
		static__1d1ecb459_optimize(&(_28026_m.get()._field_Right));
	};
}



inline void _1d1ecdea6_traitSub(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061a050_TraitSubIdentExprModel> _28827_m) {
	static__1d1ecb459_optimize(&(_28827_m.get()._field_Expr));
}



inline void _1d1ece22b_structureSub(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061a836_StructSubIdentExprModel> _29231_m) {
	static__1d1ecb459_optimize(&(_29231_m.get()._field_Expr.get()._field_Model));
}



inline void _1d1ece4a1_commonSub(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061b8e2_CommonSubIdentExprModel> _29628_m) {
	static__1d1ecb459_optimize(&(_29628_m.get()._field_Expr));
}



inline void _1d1ece726_tuple(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061bbde_TupleExprModel> _30024_m) {
	{
		auto expr = &(_30024_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8177d39:;
		if (it != expr_end) {
			jule::Ptr<_1d0408c95_Data> _30121_d = *it;
			{
				static__1d1ecb459_optimize(&(_30121_d.get()._field_Model));
			}
			_iter_next_1b8177d39:;
			++it;
			goto _iter_begin_1b8177d39;
		}
		_iter_end_1b8177d39:;
	};
}



inline void _1d1ece99b_newCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061cbac_BuiltinNewCallExprModel> _30626_m) {
	if ((_30626_m.get()._field_Init != nullptr)) {
		static__1d1ecb459_optimize(&(_30626_m.get()._field_Init));
	};
}



inline void _1d1ecec21_outCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel> _31226_m) {
	static__1d1ecb459_optimize(&(_31226_m.get()._field_Expr));
}



inline void _1d1ecee96_outlnCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel> _31628_m) {
	static__1d1ecb459_optimize(&(_31628_m.get()._field_Expr));
}



inline void _1d1ed021b_panicCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061d097_BuiltinPanicCallExprModel> _32028_m) {
	static__1d1ecb459_optimize(&(_32028_m.get()._field_Expr));
}



inline void _1d1ed0491_assertCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel> _32429_m) {
	static__1d1ecb459_optimize(&(_32429_m.get()._field_Expr));
}



inline void _1d1ed0716_errorCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel> _32828_m) {
	static__1d1ecb459_optimize(&(_32828_m.get()._field_Err.get()._field_Model));
}



inline void _1d1ed098b_makeCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel> _33227_m) {
	if ((_33227_m.get()._field_Len != nullptr)) {
		static__1d1ecb459_optimize(&(_33227_m.get()._field_Len));
	};
	if ((_33227_m.get()._field_Cap != nullptr)) {
		static__1d1ecb459_optimize(&(_33227_m.get()._field_Cap));
	};
}



inline void _1d1ed0c11_appendCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel> _34129_m) {
	static__1d1ecb459_optimize(&(_34129_m.get()._field_Dest));
	static__1d1ecb459_optimize(&(_34129_m.get()._field_Elements));
}



inline void _1d1ed0e86_lenCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061e20d_BuiltinLenCallExprModel> _34626_m) {
	static__1d1ecb459_optimize(&(_34626_m.get()._field_Expr.get()._field_Model));
}



inline void _1d1ed120b_capCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061e52c_BuiltinCapCallExprModel> _35026_m) {
	static__1d1ecb459_optimize(&(_35026_m.get()._field_Expr.get()._field_Model));
}



inline void _1d1ed1481_cloneCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel> _35428_m) {
	static__1d1ecb459_optimize(&(_35428_m.get()._field_Expr));
}



inline void _1d1ed1706_deleteCall(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel> _35829_m) {
	static__1d1ecb459_optimize(&(_35829_m.get()._field_Dest.get()._field_Model));
	if ((_35829_m.get()._field_Key != nullptr)) {
		static__1d1ecb459_optimize(&(_35829_m.get()._field_Key.get()._field_Model));
	};
}



inline void _1d1ed197b_sizeof(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d062072b_SizeofExprModel> _36525_m) {
	static__1d1ecb459_optimize(&(_36525_m.get()._field_Expr));
}



inline void _1d1ed1c01_alignof(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0620a17_AlignofExprModel> _36926_m) {
	static__1d1ecb459_optimize(&(_36926_m.get()._field_Expr));
}



inline void _1d1ed1e76_integratedToStr(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d0621111_IntegratedToStrExprModel> _37334_m) {
	static__1d1ecb459_optimize(&(_37334_m.get()._field_Expr));
}



inline void _1d1ed21eb_free(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d06217b5_FreeExprModel> _37723_m) {
	static__1d1ecb459_optimize(&(_37723_m.get()._field_Expr));
}



inline void _1d1ed2471_backendEmit(_1d1ecaea3_exprOptimizer* _self_, jule::Ptr<_1d06214c9_BackendEmitExprModel> _38130_m) {
	_1d1ecc746_args(_self_, &(_38130_m.get()._field_Exprs));
}



inline void _1d1ed264c_do(_1d1ecaea3_exprOptimizer* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_model)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b81812e8:;
			{
				_1d1ecb9cb_binary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061614a_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b81815e5:;
			{
				_1d1ecbc51_unary(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0616502_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b818165b:;
			{
				_1d1ecbec6_structureLit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0616ca5_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b81816c2:;
			{
				_1d1ecc24b_allocStructure(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d06170b3_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b8181738:;
			{
				_1d1ecc4c1_casting(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0617613_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b81817b0:;
			{
				_1d1eccc41_funcCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b8181837:;
			{
				_1d1ecceb6_slice(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061836c_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b81818ae:;
			{
				_1d1ecd23b_array(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061b095_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b8181936:;
			{
				_1d1ecd4b1_indexing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d06187e0_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b81819ad:;
			{
				_1d1ecd736_anonFunc(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0618b97_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b8181a35:;
			{
				_1d1ecd9ab_mapExpr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d06194c2_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b8181aac:;
			{
				_1d1ecdc31_slicing(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0619a11_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b8181b34:;
			{
				_1d1ecdea6_traitSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061a050_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b8181bab:;
			{
				_1d1ece22b_structureSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b8181c33:;
			{
				_1d1ece4a1_commonSub(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061b8e2_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b8181caa:;
			{
				_1d1ece726_tuple(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b8181d32:;
			{
				_1d1ecec21_outCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061c0b8_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b8181da9:;
			{
				_1d1ecee96_outlnCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061c4a3_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b8181e31:;
			{
				_1d1ece99b_newCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061cbac_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b8181ea8:;
			{
				_1d1ed021b_panicCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061d097_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b8182030:;
			{
				_1d1ed0491_assertCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061d54d_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b81820a7:;
			{
				_1d1ed0716_errorCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d062042e_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b818212e:;
			{
				_1d1ed098b_makeCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061da04_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b81821a6:;
			{
				_1d1ed0c11_appendCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061ddde_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b818222d:;
			{
				_1d1ed0e86_lenCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061e20d_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b81822a5:;
			{
				_1d1ed120b_capCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061e52c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b818232c:;
			{
				_1d1ed1481_cloneCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061c7c2_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b81823a4:;
			{
				_1d1ed1706_deleteCall(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d061ebd1_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b818242b:;
			{
				_1d1ed197b_sizeof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d062072b_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b81824a3:;
			{
				_1d1ed1c01_alignof(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0620a17_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b818252a:;
			{
				_1d1ed1e76_integratedToStr(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d0621111_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b81825a2:;
			{
				_1d1ed21eb_free(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d06217b5_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b8182629:;
			{
				_1d1ed2471_backendEmit(_self_, (*((*(_self_))._field_model)).cast_ptr<_1d06214c9_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		_match_end_1b8181293:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d1ecaea3_exprOptimizer _Src) {
	_Stream << "exprOptimizer{";
	_Stream << "model:" << _Src._field_model;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d07a11e7_Optimizer> static__1d07a169d_New(jule::Ptr<_1d2621e34_IR>* _2524_ir) {
	return jule::new_ptr<_1d07a11e7_Optimizer>(_1d07a11e7_Optimizer{._field_ir=(*(_2524_ir))});;
}



inline void _1d07a1923_optimizeGlobal(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d21bb65a_Var>* _3138_v) {
	if ((!((*(_3138_v)).get()._field_Binded))) {
		static__1d1ecb459_optimize(&((*(_3138_v)).get()._field_Value.get()._field_Data.get()._field_Model));
	};
}



inline void _1d07a1b98_optimizeFunction(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d06242bd_Fn>* _3740_func) {
	if ((*(_3740_func)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_3740_func)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8197b28:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _4121_ins = *it;
			{
				jule::Ptr<_1d06581e2_scopeOptimizer> _4221_so = static__1d0658753_new(_4121_ins.get()._field_Scope);;
				_1d065b9ba_optimize(_4221_so.ptr());
			}
			_iter_next_1b8197b28:;
			++it;
			goto _iter_begin_1b8197b28;
		}
		_iter_end_1b8197b28:;
	};
}



inline void _1d07a1e1d_optimizeStruct(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d060ddbd_Struct>* _4738_s) {
	if ((*(_4738_s)).get()._field_Binded) {
		return;;
	};
	{
		auto expr = &((*(_4738_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8199047:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _5121_ins = *it;
			{
				{
					auto expr = &(_5121_ins.get()._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8199751:;
					if (it != expr_end) {
						jule::Ptr<_1d06111de_FieldIns> _5225_f = *it;
						{
							if ((_5225_f.get()._field_Default != nullptr)) {
								static__1d1ecb459_optimize(&(_5225_f.get()._field_Default.get()._field_Model));
							};
						}
						_iter_next_1b8199751:;
						++it;
						goto _iter_begin_1b8199751;
					}
					_iter_end_1b8199751:;
				};
				{
					auto expr = &(_5121_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b819a5ba:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _5725_m = *it;
						{
							_1d07a1b98_optimizeFunction(_self_, &(_5725_m));
						}
						_iter_next_1b819a5ba:;
						++it;
						goto _iter_begin_1b819a5ba;
					}
					_iter_end_1b819a5ba:;
				};
			}
			_iter_next_1b8199047:;
			++it;
			goto _iter_begin_1b8199047;
		}
		_iter_end_1b8199047:;
	};
}



inline void _1d07a2193_optimizeGlobals(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d2195bb7_Package>* _6339_p) {
	{
		auto expr = &((*(_6339_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b819a9c7:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _6421_f = *it;
			{
				{
					auto expr = &(_6421_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b819b70e:;
					if (it != expr_end) {
						jule::Ptr<_1d21bb65a_Var> _6525_v = *it;
						{
							_1d07a1923_optimizeGlobal(_self_, &(_6525_v));
						}
						_iter_next_1b819b70e:;
						++it;
						goto _iter_begin_1b819b70e;
					}
					_iter_end_1b819b70e:;
				};
			}
			_iter_next_1b819a9c7:;
			++it;
			goto _iter_begin_1b819a9c7;
		}
		_iter_end_1b819a9c7:;
	};
}



inline void _1d07a2418_optimizeFunctions(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d2195bb7_Package>* _7141_p) {
	{
		auto expr = &((*(_7141_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b819bc1a:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _7221_f = *it;
			{
				{
					auto expr = &(_7221_f.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b819c930:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _7325_func = *it;
						{
							_1d07a1b98_optimizeFunction(_self_, &(_7325_func));
						}
						_iter_next_1b819c930:;
						++it;
						goto _iter_begin_1b819c930;
					}
					_iter_end_1b819c930:;
				};
			}
			_iter_next_1b819bc1a:;
			++it;
			goto _iter_begin_1b819bc1a;
		}
		_iter_end_1b819bc1a:;
	};
}



inline void _1d07a268d_optimizeStructs(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d2195bb7_Package>* _7939_p) {
	{
		auto expr = &((*(_7939_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b819ce3b:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b819db51:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> _8125_s = *it;
						{
							_1d07a1e1d_optimizeStruct(_self_, &(_8125_s));
						}
						_iter_next_1b819db51:;
						++it;
						goto _iter_begin_1b819db51;
					}
					_iter_end_1b819db51:;
				};
			}
			_iter_next_1b819ce3b:;
			++it;
			goto _iter_begin_1b819ce3b;
		}
		_iter_end_1b819ce3b:;
	};
}



inline void _1d07a2913_optimizePackage(_1d07a11e7_Optimizer* _self_, jule::Ptr<_1d2195bb7_Package>* _8739_p) {
	_1d07a2193_optimizeGlobals(_self_, _8739_p);
	_1d07a2418_optimizeFunctions(_self_, _8739_p);
	_1d07a268d_optimizeStructs(_self_, _8739_p);
}



inline void _1d07a2ade_Optimize(_1d07a11e7_Optimizer* _self_) {
	_1d07a2d0e_detectEnabled();
	if (_1d22039b1_Deadcode) {
		_1d0793eed_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1d07a100a_scopeEnabled || _1d07a0cda_exprEnabled)) {
		{
			auto expr = &((*(_self_))._field_ir.get()._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b81a05e2:;
			if (it != expr_end) {
				jule::Ptr<_1d219307c_ImportInfo> _10325_u = *it;
				{
					if ((!(_10325_u.get()._field_Binded))) {
						_1d07a2913_optimizePackage(_self_, &(_10325_u.get()._field_Package));
					};
				}
				_iter_next_1b81a05e2:;
				++it;
				goto _iter_begin_1b81a05e2;
			}
			_iter_end_1b81a05e2:;
		};
		_1d07a2913_optimizePackage(_self_, &((*(_self_))._field_ir.get()._field_Main));
	};
	if (_1d22039b1_Deadcode) {
		_1d0798ca0_EliminateScopes(&((*(_self_))._field_ir));
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1d07a11e7_Optimizer _Src) {
	_Stream << "Optimizer{";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline void static__1e29a0802_Reset(void) {
	jule::out(jule::Str("\033[0m", 4));
}



inline void static__1e29a1a78_Print(jule::Str _1921_escape, jule::Str _1934_text) {
	jule::out(_1921_escape);
	jule::out(_1934_text);
	static__1e29a0802_Reset();
}







std::ostream &operator<<(std::ostream &_Stream, _1e29a188b_AnsiEscape _Src) {
	_Stream << "AnsiEscape{";
	_Stream << "}";
	return _Stream;
}



inline void static__1e29a31a6_LogFlat(_22ba3c6bd_Log* _1424_l) {
	jule::outln((*(_1424_l))._field_Text);
}



inline void static__1e29a33b5_LogError(_22ba3c6bd_Log* _1925_l) {
	jule::out(jule::Str("\033[31m", 5));
	jule::out(jule::Str("error: ", 7));
	jule::out((*(_1925_l))._field_Text);
	static__1e29a0802_Reset();
	if (((*(_1925_l))._field_Path.len() != 0LL)) {
		jule::out(jule::Str("\n  --> ", 7));
		jule::out((*(_1925_l))._field_Path);
	};
	if ((((*(_1925_l))._field_Row != 0LL) && ((*(_1925_l))._field_Column != 0LL))) {
		jule::out(jule::Str(":", 1));
		jule::out(_1e76d6159_Itoa((*(_1925_l))._field_Row));
		jule::out(jule::Str(":", 1));
		jule::out(_1e76d6159_Itoa((*(_1925_l))._field_Column));
	};
	if (((*(_1925_l))._field_Line.len() != 0LL)) {
		jule::Str _3621_line = _22b9a2a0c_TrimLeft((*(_1925_l))._field_Line, jule::Str("\r\n\v\b ", 5));;
		jule::I64 _3721_offset = (((*(_1925_l))._field_Line.len() - _3621_line.len()) + 1LL);;
		jule::I64 _3821_oldLen = _3621_line.len();;
		_3621_line=_22b9a2a0c_TrimLeft(_3621_line, jule::Str("\t", 1));
		if ((_3821_oldLen != _3621_line.len())) {
			_3721_offset+=((_3821_oldLen - _3621_line.len()) << 3LLU);
		};
		jule::out(jule::Str("\n  ", 3));
		jule::Str _4417_row = _1e76d6159_Itoa((*(_1925_l))._field_Row);;
		jule::out(_4417_row);
		jule::out(jule::Str(" | ", 3));
		jule::out(_3621_line);
		jule::out(jule::Str("\n  ", 3));
		jule::out(_22b99a1db_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
		jule::out(jule::Str(" | ", 3));
		jule::out(_22b99a1db_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((*(_1925_l))._field_Column - _3721_offset))));
		jule::out(jule::Str("^", 1));
		if (((*(_1925_l))._field_Suggestion.len() != 0LL)) {
			jule::out(jule::Str("\n  ", 3));
			jule::out(_22b99a1db_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(_4417_row.len())));
			jule::out(jule::Str(" | ", 3));
			static__1e29a1a78_Print(jule::Str("\033[95m", 5), jule::Str("suggestion: ", 12));
			jule::out((*(_1925_l))._field_Suggestion);
		};
	};
	jule::outln(jule::Str("\n", 1));
}



inline void static__1e29a35c4_Log(_22ba3c6bd_Log* _6520_l) {
	{
		auto &_match_expr{ (*(_6520_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I64>(0LL)) {
			_case_begin_1b81ad369:;
			{
				static__1e29a31a6_LogFlat(_6520_l);
			}
		}
		else if (_match_expr == static_cast<jule::I64>(1LL)) {
			_case_begin_1b81ad3d0:;
			{
				static__1e29a33b5_LogError(_6520_l);
			}
		}
		_match_end_1b81ad27b:;
	};
}



inline void static__1e29a37d3_PrintLogs(jule::Slice<_22ba3c6bd_Log>* _7526_logs) {
	{
		auto expr = _7526_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81ae26b:;
		if (it != expr_end) {
			_22ba3c6bd_Log *_7616_l = it;
			{
				static__1e29a35c4_Log(_7616_l);
			}
			_iter_next_1b81ae26b:;
			++it;
			goto _iter_begin_1b81ae26b;
		}
		_iter_end_1b81ae26b:;
	};
	jule::out(jule::Str("=== ", 4));
	jule::out(_1e76d6159_Itoa(static_cast<jule::I64>((*(_7526_logs)).len())));
	jule::outln(jule::Str(" error generated ===", 20));
}







std::ostream &operator<<(std::ostream &_Stream, _1e29a2e20_Logger _Src) {
	_Stream << "Logger{";
	_Stream << "}";
	return _Stream;
}



inline jule::U64 _1b5a6b6b9_Unix(_1b5a6b312_AbsTime* _self_) {
	jule::Bool _5617_leap = false;;
	jule::U64 _5717_y = ((*(_self_))._field_Year - 1900LLU);;
	jule::U64 _5817_m = ((*(_self_))._field_Month - 1LLU);;
	if (((_5817_m >= 12LLU) || (_5817_m < 0LLU))) {
		jule::U64 _6021_adj = (_5817_m / 12LLU);;
		_5817_m%=12LL;
		if ((_5817_m < 0LLU)) {
			(_6021_adj)--;
			_5817_m+=12LLU;
		};
		_5717_y+=_6021_adj;
	};
	jule::U64 _6817_t = _1b5a6dc4e_unixYearToSeconds(_5717_y, &(_5617_leap));;
	_6817_t+=_1b5a6e0d4_unixMonthToSeconds(_5817_m, _5617_leap);
	_6817_t+=(86400LLU * ((*(_self_))._field_Day - 1LLU));
	_6817_t+=(3600LLU * (*(_self_))._field_Hour);
	_6817_t+=(60LLU * (*(_self_))._field_Minute);
	_6817_t+=(*(_self_))._field_Second;
	return _6817_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a6b312_AbsTime _Src) {
	_Stream << "AbsTime{";
	_Stream << "Day:" << _Src._field_Day << ", ";
	_Stream << "WeekDay:" << _Src._field_WeekDay << ", ";
	_Stream << "YearDay:" << _Src._field_YearDay << ", ";
	_Stream << "Month:" << _Src._field_Month << ", ";
	_Stream << "Year:" << _Src._field_Year << ", ";
	_Stream << "Second:" << _Src._field_Second << ", ";
	_Stream << "Minute:" << _Src._field_Minute << ", ";
	_Stream << "Hour:" << _Src._field_Hour;
	_Stream << "}";
	return _Stream;
}



inline _1b5a6b9a5_Time static__1b5a6bd4b_Unix(jule::U64 _9120_sec) {
	return _1b5a6b9a5_Time{._field_sec=_9120_sec};;
}



inline _1b5a6b9a5_Time static__1b5a6c049_Now(void) {
	return static__1b5a6bd4b_Unix(static_cast<jule::U64>(_1b5a6d941_unix()));;
}



inline jule::U64 _1b5a6c49a_Unix(_1b5a6b9a5_Time* _self_) {
	return (*(_self_))._field_sec;;
}



inline jule::U64 _1b5a6c70e_Day(_1b5a6b9a5_Time* _self_) {
	return _1b5a6d688_Abs(_self_)._field_Day;;
}



inline jule::U64 _1b5a6c973_Month(_1b5a6b9a5_Time* _self_) {
	return _1b5a6d688_Abs(_self_)._field_Month;;
}



inline jule::U64 _1b5a6cbd7_Year(_1b5a6b9a5_Time* _self_) {
	return _1b5a6d688_Abs(_self_)._field_Year;;
}



inline jule::U64 _1b5a6ce4b_Second(_1b5a6b9a5_Time* _self_) {
	return _1b5a6d688_Abs(_self_)._field_Second;;
}



inline jule::U64 _1b5a6d1b0_Minute(_1b5a6b9a5_Time* _self_) {
	return _1b5a6d688_Abs(_self_)._field_Minute;;
}



inline jule::U64 _1b5a6d424_Hour(_1b5a6b9a5_Time* _self_) {
	return _1b5a6d688_Abs(_self_)._field_Hour;;
}



inline _1b5a6b312_AbsTime _1b5a6d688_Abs(_1b5a6b9a5_Time* _self_) {
	jule::U64 _12713_secs = ((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _12817_days = (_12713_secs / 86400LLU);;
	jule::U64 _12917_remSecs = (_12713_secs % 86400LL);;
	if ((_12917_remSecs < 0LLU)) {
		_12917_remSecs+=86400LLU;
		(_12817_days)--;
	};
	jule::U64 _13517_qcCycles = (_12817_days / 146097LLU);;
	jule::U64 _13617_remDays = (_12817_days % 146097LL);;
	if ((_13617_remDays < 0LLU)) {
		_13617_remDays+=146097LLU;
		(_13517_qcCycles)--;
	};
	jule::U64 _14217_cCycles = (_13617_remDays / 36524LLU);;
	if ((_14217_cCycles == 4LLU)) {
		(_14217_cCycles)--;
	};
	_13617_remDays-=(_14217_cCycles * 36524LLU);
	jule::U64 _14817_qCycles = (_13617_remDays / 1461LLU);;
	if ((_14817_qCycles == 25LLU)) {
		(_14817_qCycles)--;
	};
	_13617_remDays-=(_14817_qCycles * 1461LLU);
	jule::U64 _15417_remYears = (_13617_remDays / 365LLU);;
	if ((_15417_remYears == 4LLU)) {
		(_15417_remYears)--;
	};
	_13617_remDays-=(_15417_remYears * 365LLU);
	jule::U64 _16017_leap = static_cast<jule::U64>(0LLU);;
	if (((_15417_remYears == 0LLU) && ((_14817_qCycles > 0LLU) || (_14217_cCycles == 0LLU)))) {
		_16017_leap=1LLU;
	};
	jule::U64 _16417_yDay = (((_13617_remDays + 31LLU) + 28LLU) + _16017_leap);;
	if ((_16417_yDay >= (365LLU + _16017_leap))) {
		_16417_yDay-=(365LLU + _16017_leap);
	};
	jule::U64 _16917_months = 0LLU;;
	for (; (_1b5a6a894_mdays[static_cast<jule::I64>(_16917_months)] <= _13617_remDays); (_16917_months)++) {
		{
			_13617_remDays-=_1b5a6a894_mdays[static_cast<jule::I64>(_16917_months)];
		}
	_iter_next_1b81dbdae:;
	}
	_iter_end_1b81dbdae:;;
	_1b5a6b312_AbsTime _17417_t = _1b5a6b312_AbsTime{};;
	_17417_t._field_Year=static_cast<jule::U64>(((((_15417_remYears + (4LLU * _14817_qCycles)) + (100LLU * _14217_cCycles)) + (400LLU * _13517_qcCycles)) + 100LLU));
	_17417_t._field_Month=static_cast<jule::U64>((_16917_months + 2LLU));
	if ((_17417_t._field_Month >= 12LLU)) {
		_17417_t._field_Month-=12LLU;
		(_17417_t._field_Year)++;
	};
	_17417_t._field_Month+=1LLU;
	_17417_t._field_Year+=1900LLU;
	_17417_t._field_Day=static_cast<jule::U64>((_13617_remDays + 1LLU));
	_17417_t._field_WeekDay=static_cast<jule::U64>(((3LLU + _12817_days) % 7LL));
	if ((_17417_t._field_WeekDay < 0LLU)) {
		_17417_t._field_WeekDay+=7LLU;
	};
	_17417_t._field_YearDay=_16417_yDay;
	_17417_t._field_Hour=static_cast<jule::U64>((_12917_remSecs / 3600LLU));
	_17417_t._field_Minute=static_cast<jule::U64>(((_12917_remSecs / 60LLU) % 60LL));
	_17417_t._field_Second=static_cast<jule::U64>((_12917_remSecs % 60LL));
	return _17417_t;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a6b9a5_Time _Src) {
	_Stream << "Time{";
	_Stream << "sec:" << _Src._field_sec;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b56e9e08_scopeCoder> static__1b56ea546_new(jule::Ptr<_1b5a75a36_ObjectCoder>* _6424_oc) {
	return jule::new_ptr<_1b56e9e08_scopeCoder>(_1b56e9e08_scopeCoder{._field_oc=(*(_6424_oc))});;
}



inline void _1b695c19c_iterHead(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21762b3_RangeIter>* _7132_it, jule::Bool* _7144_ref, jule::Str* _7156_begin) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto expr = ", 12));
	if ((_1d2203bae_Copy && _1b5700abd_isCopyOptimizable(&((*(_7132_it)).get()._field_Expr)))) {
		(*(_7144_ref))=true;
		{
			auto &_match_expr{ (*(_7132_it)).get()._field_Expr.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b695d841:;
				{
					jule::Ptr<_1d21bb65a_Var> _8021_v = (*(_7132_it)).get()._field_Expr.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
					if (_8021_v.get()._field_Reference) {
						_1b57100c7_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
						goto _match_end_1b696005c;
					};
					goto _case_begin_1b69600b2;
				}
			}
			else {
				_case_begin_1b69600b2:;
				{
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b57100c7_model(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
				}
			}
			_match_end_1b696005c:;
		};
	} else {
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_7132_it)).get()._field_Expr.get()._field_Model);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto it = expr", 14));
	if ((*(_7144_ref))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("begin();\n", 9));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto expr_end = expr", 20));
	if ((*(_7144_ref))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("end();\n", 7));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, (*(_7156_begin)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (it != expr_end) {\n", 22));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
}



inline void _1b56eab84_rangeIndexIter(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21762b3_RangeIter>* _12039_it) {
	jule::Str _12113_begin = static__1b59d528c_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Str _12213_next = static__1b59d57cb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it)))));;
	jule::Bool _12417_ref = false;;
	_1b695c19c_iterHead(_self_, _12039_it, &(_12417_ref), &(_12113_begin));
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1b5a7d29c_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			if (_12417_ref) {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("it - expr->begin()", 18));
			} else {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("it - expr.begin()", 17));
			};
		}));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b5a7675c_indent(_self_.get()._field_oc);
	};
	if (((*(_12039_it)).get()._field_KeyB != nullptr)) {
		(*(_12039_it)).get()._field_KeyB.get()._field_Reference=(_1d2203bae_Copy && _1b5700e53_isIterCopyOptimizable(&((*(_12039_it)).get()._field_Expr), &((*(_12039_it)).get()._field_KeyB)));
		_1b5a7d29c_varInitExpr(_self_.get()._field_oc, &((*(_12039_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			{
				if ((*(_12039_it)).get()._field_KeyB.get()._field_Reference) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("it", 2));
				} else {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("*it", 3));
				};
			};
		}));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b5a7675c_indent(_self_.get()._field_oc);
	};
	_1b57004e6_scope(_self_, (*(_12039_it)).get()._field_Scope);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, _12213_next);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b5a7675c_indent(_self_.get()._field_oc);
	if (((*(_12039_it)).get()._field_KeyA != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, static__1b59d4ee5_var((*(_12039_it)).get()._field_KeyA));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("++;\n", 4));
		_1b5a7675c_indent(_self_.get()._field_oc);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b5a761c9_write(_self_.get()._field_oc, _12113_begin);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5534_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12039_it))))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b56eae09_rangeHashmapIter(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21762b3_RangeIter>* _18341_it) {
	jule::Str _18413_begin = static__1b59d528c_iterBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Str _18513_next = static__1b59d57cb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it)))));;
	jule::Bool _18717_ref = false;;
	_1b695c19c_iterHead(_self_, _18341_it, &(_18717_ref), &(_18413_begin));
	if (((*(_18341_it)).get()._field_KeyA != nullptr)) {
		_1b5a7d29c_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyA), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("it->first", 9));
		}));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b5a7675c_indent(_self_.get()._field_oc);
	};
	if (((*(_18341_it)).get()._field_KeyB != nullptr)) {
		_1b5a7d29c_varInitExpr(_self_.get()._field_oc, &((*(_18341_it)).get()._field_KeyB), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("it->second", 10));
		}));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b5a7675c_indent(_self_.get()._field_oc);
	};
	_1b57004e6_scope(_self_, (*(_18341_it)).get()._field_Scope);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, _18513_next);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("++it;\n", 6));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b5a761c9_write(_self_.get()._field_oc, _18413_begin);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5534_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_18341_it))))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b56eb17e_ifCase(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2174a0e_If> _22630_i) {
	if ((_22630_i.get()._field_Expr != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (", 4));
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _22630_i.get()._field_Expr);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") ", 2));
	};
	_1b57004e6_scope(_self_, _22630_i.get()._field_Scope);
}



inline void _1b56eb404_conditional(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217516e_Conditional> _23535_c) {
	jule::Bool _23617_writed = false;;
	{
		auto expr = &(_23535_c.get()._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b697e0c0:;
		if (it != expr_end) {
			jule::Ptr<_1d2174a0e_If> _23721_elif = *it;
			{
				if ((_23721_elif == nullptr)) {
					goto _iter_next_1b697e0c0;
				};
				if (_23617_writed) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" else ", 6));
				};
				_23617_writed=true;
				_1b56eb17e_ifCase(_self_, _23721_elif);
			}
			_iter_next_1b697e0c0:;
			++it;
			goto _iter_begin_1b697e0c0;
		}
		_iter_end_1b697e0c0:;
	};
	if ((_23535_c.get()._field_Default != nullptr)) {
		if (_23617_writed) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" else ", 6));
		};
		_1b57004e6_scope(_self_, _23535_c.get()._field_Default.get()._field_Scope);
	};
}



inline void _1b56eb679_infIter(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217545a_InfIter> _25531_it) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("for (;;) {\n", 11));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b57004e6_scope(_self_, _25531_it.get()._field_Scope);
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d57cb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5534_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_25531_it))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b56eb8ee_whileIter(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21758cd_WhileIter> _27233_it) {
	if (((_27233_it.get()._field_Expr != nullptr) && (_27233_it.get()._field_Next == nullptr))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("while (", 7));
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("for (; ", 7));
		if ((_27233_it.get()._field_Expr != nullptr)) {
			_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _27233_it.get()._field_Expr);
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("; ", 2));
		if ((_27233_it.get()._field_Next != nullptr)) {
			_1b56eeeeb_st(_self_, _27233_it.get()._field_Next);
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") {\n", 4));
	};
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b57004e6_scope(_self_, _27233_it.get()._field_Scope);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d57cb_iterNext(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5534_iterEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_27233_it))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;", 2));
}



inline void _1b56ebb74_rangeIter(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21762b3_RangeIter> _30533_it) {
	{
		
		if ((_1d21d54dc_Slc(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b698c1ee:;
			{
				_1b56eab84_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1d21d5278_Arr(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b698c5c8:;
			{
				_1b56eab84_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		else if ((_1d21d5e8d_Map(_30533_it.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b698bdbe:;
			{
				_1b56eae09_rangeHashmapIter(_self_, &(_30533_it));
			}
		}
		else {
			_case_begin_1b698bd58:;
			{
				_1b56eab84_rangeIndexIter(_self_, &(_30533_it));
			}
		}
		_match_end_1b698bc8c:;
	};
}



inline void _1b56ebde9_cont(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21766ae_ContSt> _31824_c) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d57cb_iterNext(_31824_c.get()._field_It));
}



inline void _1b56ec16e_label(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2176d52_Label> _32325_l) {
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5a73_label(&(_32325_l.get()._field_Ident)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":", 1));
}



inline void _1b56ec3e4_gotoSt(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217713d_GotoSt> _32826_gt) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5a73_label(&(_32826_gt.get()._field_Ident)));
}



inline void _1b56ec669_postfix(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21774e5_Postfix> _33331_p) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _33331_p.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	_1b5a761c9_write(_self_.get()._field_oc, _33331_p.get()._field_Op);
}



inline void _1b56ec8de_assign(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2177968_Assign> _34030_a) {
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_L.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, _34030_a.get()._field_Op.get()._field_Kind);
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34030_a.get()._field_R.get()._field_Model);
}



inline void _1b56ecb64_mapLookupAssign(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2177d20_MultiAssign>* _34640_a) {
	jule::Ptr<_1d06187e0_IndexingExprModel> _34717_iem = (*(_34640_a)).get()._field_R.cast_ptr<_1d06187e0_IndexingExprModel>(&__jule_any_type46);;
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Expr.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".lookup(", 8));
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _34717_iem.get()._field_Index.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_34640_a)).get()._field_L[0LL] != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[0LL].get()._field_Model);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("), ", 3));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("nullptr, ", 9));
	};
	if (((*(_34640_a)).get()._field_L[1LL] != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&(", 2));
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_34640_a)).get()._field_L[1LL].get()._field_Model);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b56ecdd9_multiAssignTup(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2177d20_MultiAssign>* _36939_a) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	jule::Ptr<_1d061bbde_TupleExprModel> _37317_tup = (*(_36939_a)).get()._field_R.cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87);;
	{
		auto expr = &(_37317_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b699ac24:;
		if (it != expr_end) {
			jule::I64 _37514_i = it - expr->begin();
			jule::Ptr<_1d0408c95_Data> _37521_r = *it;
			{
				_1b5a7675c_indent(_self_.get()._field_oc);
				jule::Ptr<_1d0408c95_Data> _37721_l = (*(_36939_a)).get()._field_L[_37514_i];;
				if ((_37721_l != nullptr)) {
					{
						auto &_match_expr{ _37721_l.get()._field_Model };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b699d320:;
							{
								jule::Ptr<_1d21bb65a_Var> _38129_v = _37721_l.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
								if ((_38129_v.get()._field_Reference && (!(_1d21bba23_IsInitialized(_38129_v.ptr()))))) {
									_1b5a761c9_write(_self_.get()._field_oc, static__1b59d4ee5_var(_38129_v));
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = &(", 5));
									_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");\n", 3));
									(*(_36939_a)).get()._field_L[_37514_i]=nullptr;
									goto _iter_next_1b699ac24;
								};
							}
						}
						_match_end_1b699d166:;
					};
					_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _37721_l.get()._field_Kind));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" ", 1));
					_1b5a761c9_write(_self_.get()._field_oc, static__1b59d34ee_toOut(&(_1b56e98ca_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_37514_i))));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				};
				_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _37521_r.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b699ac24:;
			++it;
			_37514_i++;
			goto _iter_begin_1b699ac24;
		}
		_iter_end_1b699ac24:;
	};
	{
		auto expr = &((*(_36939_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69a25aa:;
		if (it != expr_end) {
			jule::I64 _40214_i = it - expr->begin();
			jule::Ptr<_1d0408c95_Data> _40221_l = *it;
			{
				if ((_40221_l == nullptr)) {
					goto _iter_next_1b69a25aa;
				};
				_1b5a7675c_indent(_self_.get()._field_oc);
				_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _40221_l.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b5a761c9_write(_self_.get()._field_oc, static__1b59d34ee_toOut(&(_1b56e98ca_assignArgName), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_40214_i))));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b69a25aa:;
			++it;
			_40214_i++;
			goto _iter_begin_1b69a25aa;
		}
		_iter_end_1b69a25aa:;
	};
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b56ed15e_multiAssignFn(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2177d20_MultiAssign>* _41838_a) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	jule::Ptr<_1d0617eb5_FnCallExprModel> _42317_f = (*(_41838_a)).get()._field_R.cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35);;
	_1b5a8e1d1_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_42317_f.get()._field_Func.get()._field_Result));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" __jule_assign_result = ", 24));
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, (*(_41838_a)).get()._field_R);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	{
		auto expr = &((*(_41838_a)).get()._field_L);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69a7e95:;
		if (it != expr_end) {
			jule::I64 _42914_i = it - expr->begin();
			jule::Ptr<_1d0408c95_Data> _42921_l = *it;
			{
				if ((_42921_l != nullptr)) {
					_1b5a7675c_indent(_self_.get()._field_oc);
					_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _42921_l.get()._field_Model);
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = __jule_assign_result.__jule_result_arg", 41));
					_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_42914_i));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				};
			}
			_iter_next_1b69a7e95:;
			++it;
			_42914_i++;
			goto _iter_begin_1b69a7e95;
		}
		_iter_end_1b69a7e95:;
	};
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b56ed3d4_multiAssign(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2177d20_MultiAssign> _44435_a) {
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b69ab10d:;
			{
				_1b56ecb64_mapLookupAssign(_self_, &(_44435_a));
				return;;
			}
		}
		_match_end_1b69aadee:;
	};
	{
		auto &_match_expr{ _44435_a.get()._field_R };
		
		if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b69aad33:;
			{
				_1b56ecdd9_multiAssignTup(_self_, &(_44435_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b69ab4e8:;
			{
				_1b56ed15e_multiAssignFn(_self_, &(_44435_a));
			}
		}
		else {
			_case_begin_1b69aba59:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:458:13"));;
			}
		}
		_match_end_1b69aba04:;
	};
}



inline jule::Fn<void(void)> _1b56ed6e2_matchExpr(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217842a_Match> _46233_m) {
	if ((!(_1d0409658_IsConst(_46233_m.get()._field_Expr.ptr())))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
		});;
	};
	if (((!(_1e76e9e3c_IsBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))) || (!(_1e76e7a94_ReadBool(_46233_m.get()._field_Expr.get()._field_Constant.ptr()))))) {
		return jule::Fn<void(void)>([=](void) mutable -> void {
			_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _46233_m.get()._field_Expr.get()._field_Model);
		});;
	};
	return nullptr;;
}



inline void _1b56eda11_case(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217842a_Match> _47228_m, jule::Ptr<_1d2178e75_Case> _47243_c) {
	if (((_47243_c.get()._field_Exprs.len() != 0LL) && (!(_47228_m.get()._field_Comptime)))) {
		if (((_47228_m.get()._field_Cases.len() > 0LL) && (_47228_m.get()._field_Cases[0LL] == _47243_c))) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (", 4));
		} else {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("else if (", 9));
		};
		{
			auto expr = &(_47243_c.get()._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b69b1c18:;
			if (it != expr_end) {
				jule::I64 _47918_i = it - expr->begin();
				jule::Ptr<_1d0408c95_Data> _47925_expr = *it;
				{
					{
						
						if ((!(_47228_m.get()._field_TypeMatch))) {
							_case_begin_1b69b7889:;
							{
								jule::Fn<void(void)> _48225_caseExpr = _1b56ed6e2_matchExpr(_self_, _47228_m);;
								if (_1d0409966_GoodOperand(_47228_m.get()._field_Expr.ptr(), &(_47925_expr))) {
									if ((_48225_caseExpr != nullptr)) {
										_48225_caseExpr();
										_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" == ", 4));
									};
									_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
								} else {
									_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _47925_expr.get()._field_Model);
									if ((_48225_caseExpr != nullptr)) {
										_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" == ", 4));
										_48225_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1b69b2be7:;
							{
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str("_match_expr", 11));
								jule::Ptr<_1d21d1d46_TypeKind> _49829_tk = _47925_expr.get()._field_Model.cast_ptr<_1d21d1d46_TypeKind>(&__jule_any_type89);;
								if ((_1d21d5c29_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".type_is(", 9));
									_1b5703c47_boolean(_self_.get()._field_oc.get()._field_ec, (_1d21d47c7_Sptr(_47925_expr.get()._field_Kind.ptr()) != nullptr));
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
									_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(static_cast<jule::I64>(_1b5a77ad2_findTypeOffset(_self_.get()._field_oc.ptr(), _1d21d5c29_Trait(_47228_m.get()._field_Expr.get()._field_Kind.ptr()), _47925_expr.get()._field_Kind))));
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
								} else {
									jule::I64 _50629_j = _1b5a76d78_pushAnyType(_self_.get()._field_oc, _49829_tk);;
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".type == &__jule_any_type", 25));
									_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_50629_j));
								};
							}
						}
						_match_end_1b69b2b2b:;
					};
					if (((_47243_c.get()._field_Exprs.len() - _47918_i) > 1LL)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" || ", 4));
					};
				}
				_iter_next_1b69b1c18:;
				++it;
				_47918_i++;
				goto _iter_begin_1b69b1c18;
			}
			_iter_end_1b69b1c18:;
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") ", 2));
	} else if (((_47228_m.get()._field_Default == _47243_c) && (_47228_m.get()._field_Cases.len() != 0LL))) {
		_1b5a7675c_indent(_self_.get()._field_oc);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("else ", 5));
	};
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d60b2_caseBegin(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_47243_c))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;\n", 3));
	if ((_47243_c.get()._field_Scope.get()._field_Stmts.len() > 0LL)) {
		_1b5a7675c_indent(_self_.get()._field_oc);
		_1b57004e6_scope(_self_, _47243_c.get()._field_Scope);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	};
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b56edc86_matchSt(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217842a_Match> _54031_m) {
	if (((_54031_m.get()._field_Cases.len() == 0LL) && (_54031_m.get()._field_Default == nullptr))) {
		return;;
	};
	if ((_54031_m.get()._field_Comptime && ((_54031_m.get()._field_Default == nullptr) || (_54031_m.get()._field_Default.get()._field_Scope.get()._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	if (((!(_54031_m.get()._field_Comptime)) && (!(_1d0409658_IsConst(_54031_m.get()._field_Expr.ptr()))))) {
		if ((_1d2203bae_Copy && _1b5700abd_isCopyOptimizable(&(_54031_m.get()._field_Expr)))) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto &_match_expr{ ", 19));
		} else {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto _match_expr{ ", 18));
		};
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _54031_m.get()._field_Expr.get()._field_Model);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" };\n", 4));
		_1b5a7675c_indent(_self_.get()._field_oc);
	};
	if ((_54031_m.get()._field_Cases.len() > 0LL)) {
		{
			auto expr = &(_54031_m.get()._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b69c439b:;
			if (it != expr_end) {
				jule::Ptr<_1d2178e75_Case> _56825_c = *it;
				{
					if ((_56825_c == nullptr)) {
						goto _iter_next_1b69c439b;
					};
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b5a7675c_indent(_self_.get()._field_oc);
					_1b56eda11_case(_self_, _54031_m, _56825_c);
				}
				_iter_next_1b69c439b:;
				++it;
				goto _iter_begin_1b69c439b;
			}
			_iter_end_1b69c439b:;
		};
	};
	if ((_54031_m.get()._field_Default != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		_1b56eda11_case(_self_, _54031_m, _54031_m.get()._field_Default);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5d1a_matchEnd(static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_54031_m))));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(":;", 2));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b56ee00b_fallSt(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217952a_FallSt> _59526_f) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d60b2_caseBegin(_59526_f.get()._field_DestCase));
}



inline void _1b56ee281_breakSt(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2176a66_BreakSt> _60027_b) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("goto ", 5));
	if ((_60027_b.get()._field_It != 0LLU)) {
		_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5534_iterEnd(_60027_b.get()._field_It));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, static__1b59d5d1a_matchEnd(_60027_b.get()._field_Mtch));
	};
}



inline void _1b56ee506_setResult(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217989e_RetSt> _60933_r) {
	if ((_60933_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("__jule_func_result = ", 21));
		_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _60933_r.get()._field_Expr);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		_1b5a7675c_indent(_self_.get()._field_oc);
		return;;
	};
	jule::Slice<jule::Ptr<_1d0408c95_Data>> _61717_datas = _60933_r.get()._field_Expr.cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
	{
		auto expr = &(_61717_datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69cd273:;
		if (it != expr_end) {
			jule::I64 _61813_i = it - expr->begin();
			jule::Ptr<_1d0408c95_Data> _61816_data = *it;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_61813_i));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _61816_data.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				_1b5a7675c_indent(_self_.get()._field_oc);
			}
			_iter_next_1b69cd273:;
			++it;
			_61813_i++;
			goto _iter_begin_1b69cd273;
		}
		_iter_end_1b69cd273:;
	};
}



inline void _1b56ee77b_retSt(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d217989e_RetSt> _62829_r) {
	if (_1d0624730_IsVoid(_62829_r.get()._field_Func.get()._field_Decl.ptr())) {
		if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();", 31));
			return;;
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return;", 7));
		return;;
	} else if ((_62829_r.get()._field_Func.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 0LL)) {
		if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
			_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _62829_r.get()._field_Func.get()._field_Result));
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), ", 15));
			_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62829_r.get()._field_Expr);
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");", 2));
		} else {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return ", 7));
			_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _62829_r.get()._field_Expr);
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";", 1));
		};
		return;;
	};
	if ((_62829_r.get()._field_Expr != nullptr)) {
		_1b56ee506_setResult(_self_, _62829_r);
	};
	if (_62829_r.get()._field_Func.get()._field_Decl.get()._field_Exceptional) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return jule::Exceptional<", 25));
		_1b5a8e1d1_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_62829_r.get()._field_Func.get()._field_Result));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(), __jule_func_result);", 35));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return __jule_func_result;", 26));
	};
}



inline void _1b56eea01_var(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d21bb65a_Var> _66427_v) {
	if ((!(_66427_v.get()._field_Constant))) {
		_1b5a7d522_var(_self_.get()._field_oc, _66427_v);
	};
}



inline void _1b56eec76_strAppend(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d0655ab3_StrAppendExprModel> _67033_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67033_m.get()._field_Str);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(").append(", 9));
	{
		auto &_match_expr{ _67033_m.get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b69d8190:;
			{
				jule::Ptr<_1e76e5cc3_Const> _67617_c = _67033_m.get()._field_Expr.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
				jule::Slice<jule::U8> _67717_bytes = static_cast<jule::Slice<jule::U8>>(_1e76e7d08_ReadStr(_67617_c.ptr()));;
				_1b5a761c9_write(_self_.get()._field_oc, _1b5711051_cstrLit(_67717_bytes));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d5db2_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_67717_bytes.len())), 10LL));
			}
		}
		else {
			_case_begin_1b69d9191:;
			{
				_1b5706354_possibleRefExpr(_self_.get()._field_oc.get()._field_ec, _67033_m.get()._field_Expr);
			}
		}
		_match_end_1b69d913b:;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b56eeeeb_st(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Any _68826_st) {
	if ((_68826_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _68826_st };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b69dc66c:;
			{
				_1b57004e6_scope(_self_, _68826_st.cast_ptr<_1d2174613_Scope>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b69dc518:;
			{
				_1b56eea01_var(_self_, _68826_st.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b69dcdcb:;
			{
				_1b57100c7_model(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1d0408c95_Data>(&__jule_any_type24).get()._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b69dce42:;
			{
				_1b56eb404_conditional(_self_, _68826_st.cast_ptr<_1d217516e_Conditional>(&__jule_any_type36));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b69dcea8:;
			{
				_1b56eb679_infIter(_self_, _68826_st.cast_ptr<_1d217545a_InfIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b69dd01e:;
			{
				_1b56eb8ee_whileIter(_self_, _68826_st.cast_ptr<_1d21758cd_WhileIter>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b69dd085:;
			{
				_1b56ebb74_rangeIter(_self_, _68826_st.cast_ptr<_1d21762b3_RangeIter>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1b69dd0eb:;
			{
				_1b56ebde9_cont(_self_, _68826_st.cast_ptr<_1d21766ae_ContSt>(&__jule_any_type42));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1b69dd162:;
			{
				_1b56ec16e_label(_self_, _68826_st.cast_ptr<_1d2176d52_Label>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1b69dd1c8:;
			{
				_1b56ec3e4_gotoSt(_self_, _68826_st.cast_ptr<_1d217713d_GotoSt>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1b69dd23e:;
			{
				_1b56ec669_postfix(_self_, _68826_st.cast_ptr<_1d21774e5_Postfix>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1b69dd2b6:;
			{
				_1b56ec8de_assign(_self_, _68826_st.cast_ptr<_1d2177968_Assign>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1b69dd33d:;
			{
				_1b56ed3d4_multiAssign(_self_, _68826_st.cast_ptr<_1d2177d20_MultiAssign>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b69dd3b5:;
			{
				_1b56edc86_matchSt(_self_, _68826_st.cast_ptr<_1d217842a_Match>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1b69dd43c:;
			{
				_1b56ee00b_fallSt(_self_, _68826_st.cast_ptr<_1d217952a_FallSt>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1b69dd4b4:;
			{
				_1b56ee281_breakSt(_self_, _68826_st.cast_ptr<_1d2176a66_BreakSt>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1b69dd53b:;
			{
				_1b56ee77b_retSt(_self_, _68826_st.cast_ptr<_1d217989e_RetSt>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1b69dd5b3:;
			{
				_1b570ccd9_pushToSlice(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1d06565b9_PushToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b69dd63a:;
			{
				_1b570e857_mutSlicing(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1d0656b08_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b69dd6b2:;
			{
				_1b570eacc_strInsertBegin(_self_.get()._field_oc.get()._field_ec, _68826_st.cast_ptr<_1d0656ed2_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1b69dd739:;
			{
				_1b56eec76_strAppend(_self_, _68826_st.cast_ptr<_1d0655ab3_StrAppendExprModel>(&__jule_any_type125));
			}
		}
		else {
			_case_begin_1b69dc606:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1b69dc2a4:;
	};
}



inline void _1b5700271_scopeStmts(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2174613_Scope>* _74035_s) {
	{
		auto expr = &((*(_74035_s)).get()._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b69e7b2d:;
		if (it != expr_end) {
			jule::Any _74121_st = *it;
			{
				_1b5a7675c_indent(_self_.get()._field_oc);
				_1b56eeeeb_st(_self_, _74121_st);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
			}
			_iter_next_1b69e7b2d:;
			++it;
			goto _iter_begin_1b69e7b2d;
		}
		_iter_end_1b69e7b2d:;
	};
}



inline void _1b57004e6_scope(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d2174613_Scope> _74929_s) {
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	if (_74929_s.get()._field_Deferred) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("__JULE_DEFER(", 13));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b5700271_scopeStmts(_self_, &(_74929_s));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
	if (_74929_s.get()._field_Deferred) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");", 2));
	};
}



inline void _1b570076b_funcScope(jule::Ptr<_1b56e9e08_scopeCoder> _self_, jule::Ptr<_1d0626e6e_FnIns> _76533_f) {
	if ((_76533_f.get()._field_Scope == nullptr)) {
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	if ((!(_1d0624730_IsVoid(_76533_f.get()._field_Decl.ptr())))) {
		jule::Ptr<_1d21de2d7_Tuple> _77221_tup = _1d21d6202_Tup(_76533_f.get()._field_Result.ptr());;
		if ((_77221_tup != nullptr)) {
			_1b5a7675c_indent(_self_.get()._field_oc);
			_1b5a8da93_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _77221_tup);
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" __jule_func_result;\n", 21));
			{
				auto expr = &(_77221_tup.get()._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b69ed392:;
				if (it != expr_end) {
					jule::I64 _77722_i = it - expr->begin();
					jule::Ptr<_1d21d1d46_TypeKind> _77729_t = *it;
					{
						if (_1b5a914be_shouldInitialized(&(_77729_t))) {
							_1b5a7675c_indent(_self_.get()._field_oc);
							_1b5a761c9_write(_self_.get()._field_oc, jule::Str("__jule_func_result.__jule_result_arg", 36));
							_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_77722_i));
							_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
							_1b571034c_initExpr(_self_.get()._field_oc.get()._field_ec, _77729_t);
							_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
						};
					}
					_iter_next_1b69ed392:;
					++it;
					_77722_i++;
					goto _iter_begin_1b69ed392;
				}
				_iter_end_1b69ed392:;
			};
		} else if ((_76533_f.get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL)) {
			_1b5a7675c_indent(_self_.get()._field_oc);
			_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _76533_f.get()._field_Result));
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" __jule_func_result", 19));
			if (_1b5a914be_shouldInitialized(&(_76533_f.get()._field_Result))) {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b571034c_initExpr(_self_.get()._field_oc.get()._field_ec, _76533_f.get()._field_Result);
			};
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
		};
	};
	_1b5700271_scopeStmts(_self_, &(_76533_f.get()._field_Scope));
	if ((_76533_f.get()._field_Decl.get()._field_Exceptional && _1d0624730_IsVoid(_76533_f.get()._field_Decl.ptr()))) {
		_1b5a7675c_indent(_self_.get()._field_oc);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return jule::VoidExceptional();\n", 32));
	};
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}







std::ostream &operator<<(std::ostream &_Stream, _1b56e9e08_scopeCoder _Src) {
	_Stream << "scopeCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5703351_exprCoder> static__1b570374c_new(jule::Ptr<_1b5a75a36_ObjectCoder>* _10924_oc) {
	return jule::new_ptr<_1b5703351_exprCoder>(_1b5703351_exprCoder{._field_oc=(*(_10924_oc))});;
}



inline void _1b57039c2_string(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1e76e5cc3_Const>* _11527_c) {
	jule::Str _11613_content = _1e76e7d08_ReadStr((*(_11527_c)).ptr());;
	if ((_11613_content.len() == 0LL)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		return;;
	};
	jule::Slice<jule::U8> _12113_bytes = static_cast<jule::Slice<jule::U8>>(_11613_content);;
	jule::Str _12213_len = _1e76d5db2_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_12113_bytes.len())), 10LL);;
	jule::Str _12313_lit = _1b5711051_cstrLit(_12113_bytes);;
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5a761c9_write(_self_.get()._field_oc, _12313_lit);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b5a761c9_write(_self_.get()._field_oc, _12213_len);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b5703c47_boolean(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Bool _13227_b) {
	if (_13227_b) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("true", 4));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("false", 5));
	};
}



inline void _1b5703e23_nilLit(jule::Ptr<_1b5703351_exprCoder> _self_) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
}



inline jule::Bool _1b5704231_ftoaSpecialCases(jule::Ptr<_1b5703351_exprCoder> _self_, jule::F64* _14437_x) {
	{
		
		if (_1e768b5c6_IsNaN((*(_14437_x)))) {
			_case_begin_1b8239406:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("NAN", 3));
			}
		}
		else if (_1e768bb7b_IsInf((*(_14437_x)), 1LL)) {
			_case_begin_1b823947d:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("INFINITY", 8));
			}
		}
		else if (_1e768bb7b_IsInf((*(_14437_x)), -1LL)) {
			_case_begin_1b8239505:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1b8239390:;
			{
				return false;;
			}
		}
		_match_end_1b82392c4:;
	};
	return true;;
}



inline void _1b57044a6_float32(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1e76e5cc3_Const>* _15828_c) {
	jule::F64 _15913_x = _1e76e87a9_AsF64((*(_15828_c)).ptr());;
	if (_1b5704231_ftoaSpecialCases(_self_, &(_15913_x))) {
		return;;
	};
	{
		
		if ((_15913_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1b823c140:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::MAX_F32", 13));
			}
		}
		else if ((_15913_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1b823bd76:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1b823bd10:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b571135e_ftoa(_15913_x, 32LL));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("f", 1));
			}
		}
		_match_end_1b823bbcd:;
	};
}



inline void _1b570472b_float64(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1e76e5cc3_Const>* _17728_c) {
	jule::F64 _17813_x = _1e76e87a9_AsF64((*(_17728_c)).ptr());;
	if (_1b5704231_ftoaSpecialCases(_self_, &(_17813_x))) {
		return;;
	};
	{
		
		if ((_17813_x == jule::MAX_F64)) {
			_case_begin_1b823ee01:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::MAX_F64", 13));
			}
		}
		else if ((_17813_x == jule::MIN_F64)) {
			_case_begin_1b8240253:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1b823e791:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b571135e_ftoa(_17813_x, 64LL));
			}
		}
		_match_end_1b823e65e:;
	};
}



inline void _1b57049a1_constant(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1e76e5cc3_Const> _19532_c) {
	{
		
		if (_1e76ea1a1_IsStr(_19532_c.ptr())) {
			_case_begin_1b8241430:;
			{
				_1b57039c2_string(_self_, &(_19532_c));
			}
		}
		else if (_1e76e9e3c_IsBool(_19532_c.ptr())) {
			_case_begin_1b8241496:;
			{
				_1b5703c47_boolean(_self_, _1e76e7a94_ReadBool(_19532_c.ptr()));
			}
		}
		else if (_1e76ea415_IsF64(_19532_c.ptr())) {
			_case_begin_1b824150c:;
			{
				{
					
					if (_19532_c.get()._field_Kind.equal("f32", 3)) {
						_case_begin_1b8243553:;
						{
							_1b57044a6_float32(_self_, &(_19532_c));
						}
					}
					else {
						_case_begin_1b82431ac:;
						{
							_1b570472b_float64(_self_, &(_19532_c));
						}
					}
					_match_end_1b82430e1:;
				};
			}
		}
		else if (_1e76e9964_IsI64(_19532_c.ptr())) {
			_case_begin_1b8241573:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b5711606_itoa(static_cast<jule::I64>(_1e76e75bb_ReadI64(_19532_c.ptr()))));
			}
		}
		else if (_1e76e9bc8_IsU64(_19532_c.ptr())) {
			_case_begin_1b8241d04:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b571189d_utoa(static_cast<jule::U64>(_1e76e7830_ReadU64(_19532_c.ptr()))));
			}
		}
		else if (_1e76ea679_IsNil(_19532_c.ptr())) {
			_case_begin_1b8241d6a:;
			{
				_1b5703e23_nilLit(_self_);
			}
		}
		else {
			_case_begin_1b82413b9:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1b82412ed:;
	};
}



inline void _1b5704d69_divByZeroBinary(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_22be1281d_Token>* _21936_op, jule::Ptr<_1d0615b83_OperandExprModel>* _21953_l, jule::Ptr<_1d0615b83_OperandExprModel>* _21980_r) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::", 6));
	{
		auto &_match_expr{ (*(_21936_op)).get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("/=", 2)) {
			_case_begin_1b82462c0:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("div(", 4));
			}
		}
		else if (_match_expr == jule::Str("%", 1) || _match_expr == jule::Str("%=", 2)) {
			_case_begin_1b8246347:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("mod(", 4));
			}
		}
		_match_end_1b8246259:;
	};
	if ((!(_229913002_Production))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b5a78176_locInfo(_self_.get()._field_oc, _21936_op);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\",", 2));
	};
	_1b5706354_possibleRefExpr(_self_, (*(_21953_l)).get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b5706354_possibleRefExpr(_self_, (*(_21980_r)).get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b57050de_unsafeBinary(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061614a_BinopExprModel> _24136_m) {
	if ((_24136_m.get()._field_Op.get()._field_Kind.equal("==", 2) || _24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2))) {
		if (_1b57124e7_isAny(&(_24136_m.get()._field_Left.get()._field_Kind))) {
			if (((!(_1d21d2d9c_IsNil(_24136_m.get()._field_Right.get()._field_Kind.ptr()))) && (!(_1b57124e7_isAny(&(_24136_m.get()._field_Right.get()._field_Kind)))))) {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
				if (_24136_m.get()._field_Op.get()._field_Kind.equal("!=", 2)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("!", 1));
				};
				jule::I64 _25125_i = _1b5a76d78_pushAnyType(_self_.get()._field_oc, _24136_m.get()._field_Right.get()._field_Kind);;
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("__jule_any_type", 15));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_25125_i));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("_compare(", 9));
				_1b5706354_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b5706354_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			};
		};
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5706354_possibleRefExpr(_self_, _24136_m.get()._field_Left.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b5a761c9_write(_self_.get()._field_oc, _24136_m.get()._field_Op.get()._field_Kind);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b5706354_possibleRefExpr(_self_, _24136_m.get()._field_Right.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b5705364_binary(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061614a_BinopExprModel> _27230_m) {
	{
		auto &_match_expr{ _27230_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("/", 1) || _match_expr == jule::Str("%", 1)) {
			_case_begin_1b8251781:;
			{
				if ((_1d21d59b5_Struct(_27230_m.get()._field_Left.get()._field_Kind.ptr()) == nullptr)) {
					_1b5704d69_divByZeroBinary(_self_, &(_27230_m.get()._field_Op), &(_27230_m.get()._field_Left), &(_27230_m.get()._field_Right));
					return;;
				};
			}
		}
		_match_end_1b8251709:;
	};
	_1b57050de_unsafeBinary(_self_, _27230_m);
}



inline void _1b57055d9_var(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d21bb65a_Var> _28427_m) {
	if (_28427_m.get()._field_Binded) {
		jule::Ptr<_1d05aba4c_Directive> _28617_d = _1b5a90d92_findDirective(&(_28427_m.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_28617_d != nullptr)) {
			_1b5a761c9_write(_self_.get()._field_oc, _1b5a8225c_concatAllParts(_28617_d.get()._field_Args));
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d4ee5_var(_28427_m));
}



inline void _1b570585e_structureIns(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0611bd4_StructIns> _29536_m) {
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a87c13_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _29536_m));
}



inline void _1b5705ad4_unary(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0616502_UnaryExprModel> _29929_m) {
	{
		auto &_match_expr{ _29929_m.get()._field_Op.get()._field_Kind };
		
		if (_match_expr == jule::Str("^", 1)) {
			_case_begin_1b8255eb1:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(~(", 3));
				_1b5706354_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if (_match_expr == jule::Str("*", 1)) {
			_case_begin_1b8256038:;
			{
				if ((_229913002_Production || (_1d21d47c7_Sptr(_29929_m.get()._field_Expr.get()._field_Kind.ptr()) == nullptr))) {
					goto _match_end_1b8255e28;
				};
				_1b5706354_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".get(\"", 6));
				_1b5a78176_locInfo(_self_.get()._field_oc, &(_29929_m.get()._field_Op));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\")", 2));
				return;;
			}
		}
		_match_end_1b8255e28:;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5a761c9_write(_self_.get()._field_oc, _29929_m.get()._field_Op.get()._field_Kind);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5706354_possibleRefExpr(_self_, _29929_m.get()._field_Expr.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b5705d59_structureLit(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0616ca5_StructLitExprModel> _32336_m) {
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	};
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d49a6_structureIns(&(_32336_m.get()._field_Strct)));
	if (_32336_m.get()._field_Strct.get()._field_Decl.get()._field_Binded) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{", 1));
	if ((_32336_m.get()._field_Args.len() > 0LL)) {
		_julec_label_iter:;
		{
			auto expr = &(_32336_m.get()._field_Strct.get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b825c759:;
			if (it != expr_end) {
				jule::I64 _33617_i = it - expr->begin();
				jule::Ptr<_1d06111de_FieldIns> _33620_f = *it;
				{
					{
						auto expr = &(_32336_m.get()._field_Args);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b825d1b6:;
						if (it != expr_end) {
							jule::Ptr<_1d06168ed_StructArgExprModel> _33729_arg = *it;
							{
								if ((_33729_arg.get()._field_Field == _33620_f)) {
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
									_1b5a761c9_write(_self_.get()._field_oc, static__1b59d4c4d_field(&(_33729_arg.get()._field_Field.get()._field_Decl)));
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str("=", 1));
									_1b5706354_possibleRefExpr(_self_, _33729_arg.get()._field_Expr);
									if (((_32336_m.get()._field_Strct.get()._field_Fields.len() - _33617_i) > 1LL)) {
										_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
									};
									goto _iter_next_1b825c759;
								};
							}
							_iter_next_1b825d1b6:;
							++it;
							goto _iter_begin_1b825d1b6;
						}
						_iter_end_1b825d1b6:;
					};
				}
				_iter_next_1b825c759:;
				++it;
				_33617_i++;
				goto _iter_begin_1b825c759;
			}
			_iter_end_1b825c759:;
		};
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b57060ce_allocStructure(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06170b3_AllocStructLitExprModel> _35438_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d49a6_structureIns(&(_35438_m.get()._field_Lit.get()._field_Strct)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b5705d59_structureLit(_self_, _35438_m.get()._field_Lit);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b5706354_possibleRefExpr(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Any _36235_expr) {
	{
		auto &_match_expr{ _36235_expr };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b82631bb:;
			{
				jule::Ptr<_1d21bb65a_Var> _36517_v = _36235_expr.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
				if (_36517_v.get()._field_Reference) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(*(", 3));
					_1b57100c7_model(_self_, _36235_expr);
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("))", 2));
					return;;
				};
			}
		}
		_match_end_1b82630bc:;
	};
	_1b57100c7_model(_self_, _36235_expr);
}



inline void _1b570671c_castTraitFromTrait(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617613_CastingExprModel>* _37643_m, jule::Ptr<_1d21494c8_Trait> _37669_t1, jule::Ptr<_1d21494c8_Trait> _37685_t2) {
	_1b5706354_possibleRefExpr(_self_, (*(_37643_m)).get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".mask<", 6));
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d41c0_traitDecl(_37669_t1));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b5a77e01_pushAndWriteMaskMapper(_self_.get()._field_oc, _37669_t1, _37685_t2);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b5706992_casting(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617613_CastingExprModel> _39131_m) {
	{
		
		if (_1b57124e7_isAny(&(_39131_m.get()._field_Kind))) {
			_case_begin_1b8267236:;
			{
				if (_1d21d2d9c_IsNil(_39131_m.get()._field_ExprKind.ptr())) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Any()", 11));
					return;;
				};
				if ((_1d21d5014_TypeEnum(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
					_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
					return;;
				};
				jule::I64 _40217_i = _1b5a76d78_pushAnyType(_self_.get()._field_oc, _39131_m.get()._field_ExprKind);;
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Any(", 10));
				{
					auto &_match_expr{ _39131_m.get()._field_Expr };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1b8268cb5:;
						{
							jule::Ptr<_1d21d9568_Prim> _40621_prim = _1d21d4563_Prim(_39131_m.get()._field_ExprKind.ptr());;
							if (((_40621_prim != nullptr) && _1e76e5201_IsInt(_40621_prim.get()._field_Kind))) {
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
								_1b5a761c9_write(_self_.get()._field_oc, _1b5a84e41_prim(_self_.get()._field_oc.get()._field_tc.ptr(), _40621_prim));
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
								_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
								goto _match_end_1b8269964;
							};
							goto _case_begin_1b8269ba6;
						}
					}
					else {
						_case_begin_1b8269ba6:;
						{
							_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
						}
					}
					_match_end_1b8269964:;
				};
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_40217_i));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if (_1b57124e7_isAny(&(_39131_m.get()._field_ExprKind))) {
			_case_begin_1b82672ad:;
			{
				_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1d21d47c7_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1d21d47c7_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_229913002_Production))) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b5a78176_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&__jule_any_type", 16));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(static_cast<jule::I64>(_1b5a76d78_pushAnyType(_self_.get()._field_oc, _39131_m.get()._field_Kind))));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1d21d4a3b_Ptr(_39131_m.get()._field_ExprKind.ptr()) != nullptr) || (_1d21d4a3b_Ptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8267335:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("((", 2));
				_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")(", 2));
				_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("))", 2));
				return;;
			}
		}
		else if ((_1d21d5c29_Trait(_39131_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b82673ac:;
			{
				if ((_1d21d5c29_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b570671c_castTraitFromTrait(_self_, &(_39131_m), _1d21d5c29_Trait(_39131_m.get()._field_Kind.ptr()), _1d21d5c29_Trait(_39131_m.get()._field_ExprKind.ptr()));
					return;;
				};
				_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
				if ((_1d21d47c7_Sptr(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("cast_ptr<", 9));
					_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _1d21d47c7_Sptr(_39131_m.get()._field_Kind.ptr()).get()._field_Elem));
				} else {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("cast<", 5));
					_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				};
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
				if ((!(_229913002_Production))) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b5a78176_locInfo(_self_.get()._field_oc, &(_39131_m.get()._field_Token));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				};
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(static_cast<jule::I64>(_1b5a77ad2_findTypeOffset(_self_.get()._field_oc.ptr(), _1d21d5c29_Trait(_39131_m.get()._field_ExprKind.ptr()), _39131_m.get()._field_Kind))));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		else if ((_1d21d5c29_Trait(_39131_m.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b8267434:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
				_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(static_cast<jule::I64>(_1b5a77ad2_findTypeOffset(_self_.get()._field_oc.ptr(), _1d21d5c29_Trait(_39131_m.get()._field_Kind.ptr()), _39131_m.get()._field_ExprKind))));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
				return;;
			}
		}
		_match_end_1b82670e3:;
	};
	jule::Ptr<_1d21d9568_Prim> _48313_prim = _1d21d4563_Prim(_39131_m.get()._field_Kind.ptr());;
	jule::Ptr<_1d21d9568_Prim> _48413_eprim = _1d21d4563_Prim(_39131_m.get()._field_ExprKind.ptr());;
	if ((((_48413_eprim != nullptr) && (_48313_prim != nullptr)) && _1d21dc79c_IsStr(_48313_prim.ptr()))) {
		if (_1d21dad72_IsU8(_48413_eprim.ptr())) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Str::from_byte(", 21));
		} else {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Str::from_rune(", 21));
		};
		_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("static_cast<", 12));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _39131_m.get()._field_Kind));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	_1b5706354_possibleRefExpr(_self_, _39131_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b5706c17_models(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Slice<jule::Any> _50230_args) {
	if ((_50230_args.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &(_50230_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8283252:;
		if (it != expr_end) {
			jule::I64 _50614_i = it - expr->begin();
			jule::Any _50621_a = *it;
			{
				_1b5706354_possibleRefExpr(_self_, _50621_a);
				if (((_50230_args.len() - _50614_i) > 1LL)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(",", 1));
				};
			}
			_iter_next_1b8283252:;
			++it;
			_50614_i++;
			goto _iter_begin_1b8283252;
		}
		_iter_end_1b8283252:;
	};
}



inline void _1b5706e8c_args(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617eb5_FnCallExprModel>* _51429_m) {
	jule::I64 _51517_j = 0LL;;
	if (((((*(_51429_m)).get()._field_Func.get()._field_Owner != nullptr) && (!((*(_51429_m)).get()._field_Func.get()._field_Decl.get()._field_Statically))) || (((*(_51429_m)).get()._field_Func.get()._field_Params.len() > 0LL) && _1d06230ad_IsSelf((*(_51429_m)).get()._field_Func.get()._field_Params[0LL].get()._field_Decl.ptr())))) {
		(_51517_j)++;
	};
	{
		auto expr = &((*(_51429_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8286909:;
		if (it != expr_end) {
			jule::I64 _52013_i = it - expr->begin();
			jule::Any _52016_arg = *it;
			{
				jule::Ptr<_1d06260a0_ParamIns> _52117_p = (*(_51429_m)).get()._field_Func.get()._field_Params[_51517_j];;
				if (((_52117_p.get()._field_Decl != nullptr) && _52117_p.get()._field_Decl.get()._field_Reference)) {
					{
						auto &_match_expr{ _52016_arg };
						
						if (_match_expr.type == &__jule_any_type8) {
							_case_begin_1b82880d1:;
							{
								jule::Ptr<_1d21bb65a_Var> _52525_v = _52016_arg.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
								if (_52525_v.get()._field_Reference) {
									_1b57100c7_model(_self_, _52016_arg);
									goto _julec_label_end;
								};
							}
						}
						_match_end_1b8287ee3:;
					};
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&(", 2));
					_1b57100c7_model(_self_, _52016_arg);
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
					goto _julec_label_end;
				};
				_1b5706354_possibleRefExpr(_self_, _52016_arg);
				_julec_label_end:;
				if ((((*(_51429_m)).get()._field_Args.len() - _52013_i) > 1LL)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
				(_51517_j)++;
			}
			_iter_next_1b8286909:;
			++it;
			_52013_i++;
			goto _iter_begin_1b8286909;
		}
		_iter_end_1b8286909:;
	};
}



inline void _1b5707212_modelForCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Any _54536_expr) {
	{
		auto &_match_expr{ _54536_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b828bd93:;
			{
				_1b570a589_funcIns(_self_, _54536_expr.cast_ptr<_1d0626e6e_FnIns>(&__jule_any_type7));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b828be1a:;
			{
				jule::Ptr<_1d061a836_StructSubIdentExprModel> _55121_ssie = _54536_expr.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71);;
				if ((_55121_ssie.get()._field_Method != nullptr)) {
					_1b570a589_funcIns(_self_, _55121_ssie.get()._field_Method);
					return;;
				};
			}
		}
		_match_end_1b828bc83:;
	};
	_1b5706354_possibleRefExpr(_self_, _54536_expr);
}



inline void _1b5707487_pushCallInf(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617eb5_FnCallExprModel>* _56032_m) {
	if ((_229913002_Production || ((!((*(_56032_m)).get()._field_Func.get()._field_Anon)) && (!(_1b571201e_isBuiltinCallHasDebuginf(_56032_m)))))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
		return;;
	};
	if ((*(_56032_m)).get()._field_Func.get()._field_Anon) {
		{
			auto &_match_expr{ (*(_56032_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b828ed30:;
				{
					if ((*(_56032_m)).get()._field_Expr.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Field.get()._field_Decl.get()._field_Owner.get()._field_Binded) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
						return;;
					};
					goto _case_begin_1b829000b;
				}
			}
			else {
				_case_begin_1b829000b:;
				{
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".call", 5));
				}
			}
			_match_end_1b828edc9:;
		};
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(\"", 2));
	_1b5a78176_locInfo(_self_.get()._field_oc, &((*(_56032_m)).get()._field_Token));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
	if (((*(_56032_m)).get()._field_Args.len() != 0LL)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	};
}



inline jule::Bool _1b5707795_isWrapped(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617eb5_FnCallExprModel>* _58534_m) {
	if ((((!(_1d0628305_IsBuiltin((*(_58534_m)).get()._field_Func.ptr()))) && ((*(_58534_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1d06230ad_IsSelf((*(_58534_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_58534_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b82934d7:;
				{
					jule::Ptr<_1d061a836_StructSubIdentExprModel> _58925_ssie = (*(_58534_m)).get()._field_Expr.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1d0623322_IsRef((*(_58534_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()) || (_1d21d47c7_Sptr(_58925_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b82949d3:;
							{
								goto _match_end_1b82942a7;
							}
						}
						else {
							_case_begin_1b829431d:;
							{
								if ((_1d21d59b5_Struct(_58925_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									if ((!(_58925_ssie.get()._field_Expr.get()._field_Lvalue))) {
										_1b5a761c9_write(_self_.get()._field_oc, jule::Str("({ auto _wrap_copy = ", 21));
										_1b57100c7_model(_self_, _58925_ssie.get()._field_Expr.get()._field_Model);
										_1b5a761c9_write(_self_.get()._field_oc, jule::Str("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1b82942a7:;
					};
				}
			}
			_match_end_1b82932c8:;
		};
	};
	return false;;
}



inline void _1b5707a1a_pureFuncCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617eb5_FnCallExprModel>* _60937_m) {
	jule::Bool _61013_wrapped = _1b5707795_isWrapped(_self_, _60937_m);;
	_1b5707212_modelForCall(_self_, (*(_60937_m)).get()._field_Expr);
	if ((!(_1d0628305_IsBuiltin((*(_60937_m)).get()._field_Func.ptr())))) {
		if (((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Binded && ((*(_60937_m)).get()._field_Func.get()._field_Generics.len() > 0LL))) {
			if ((!(_1b5a91227_hasDirective(&((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Directives), jule::Str("cdef", 4))))) {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("<", 1));
				{
					auto expr = &((*(_60937_m)).get()._field_Func.get()._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b82995ba:;
					if (it != expr_end) {
						jule::I64 _61626_i = it - expr->begin();
						jule::Ptr<_1d21d05b4_InsGeneric> _61633_g = *it;
						{
							_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _61633_g.get()._field_Kind));
							if ((((*(_60937_m)).get()._field_Func.get()._field_Generics.len() - _61626_i) > 1LL)) {
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
							};
						}
						_iter_next_1b82995ba:;
						++it;
						_61626_i++;
						goto _iter_begin_1b82995ba;
					}
					_iter_end_1b82995ba:;
				};
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">", 1));
			};
		};
	};
	_1b5707487_pushCallInf(_self_, _60937_m);
	jule::Bool _62717_locinfo = false;;
	if ((((!(_1d0628305_IsBuiltin((*(_60937_m)).get()._field_Func.ptr()))) && ((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Params.len() > 0LL)) && _1d06230ad_IsSelf((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*(_60937_m)).get()._field_Expr };
			
			if (_match_expr.type == &__jule_any_type71) {
				_case_begin_1b829c9a8:;
				{
					jule::Ptr<_1d061a836_StructSubIdentExprModel> _63125_ssie = (*(_60937_m)).get()._field_Expr.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71);;
					{
						
						if (_1d0623322_IsRef((*(_60937_m)).get()._field_Func.get()._field_Decl.get()._field_Params[0LL].ptr())) {
							_case_begin_1b82a1380:;
							{
								_1b5706354_possibleRefExpr(_self_, _63125_ssie.get()._field_Expr.get()._field_Model);
							}
						}
						else if ((_1d21d47c7_Sptr(_63125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
							_case_begin_1b829d8dd:;
							{
								_1b5706354_possibleRefExpr(_self_, _63125_ssie.get()._field_Expr.get()._field_Model);
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".ptr(", 5));
								if ((!(_229913002_Production))) {
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
									_1b5a78176_locInfo(_self_.get()._field_oc, &((*(_60937_m)).get()._field_Token));
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
								};
								_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
							}
						}
						else {
							_case_begin_1b829d877:;
							{
								if ((_1d21d59b5_Struct(_63125_ssie.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
									{
										auto &_match_expr{ _63125_ssie.get()._field_Expr.get()._field_Model };
										
										if (_match_expr.type == &__jule_any_type8) {
											_case_begin_1b829d316:;
											{
												jule::Ptr<_1d21bb65a_Var> _64833_v = _63125_ssie.get()._field_Expr.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
												if (_64833_v.get()._field_Reference) {
													goto _match_end_1b829e3e4;
												};
												goto _case_begin_1b829e449;
											}
										}
										else {
											_case_begin_1b829e449:;
											{
												_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&", 1));
											}
										}
										_match_end_1b829e3e4:;
									};
								};
								if (_61013_wrapped) {
									_1b5a761c9_write(_self_.get()._field_oc, jule::Str("_wrap_copy", 10));
								} else {
									_1b57100c7_model(_self_, _63125_ssie.get()._field_Expr.get()._field_Model);
								};
							}
						}
						_match_end_1b829d811:;
					};
					if (((*(_60937_m)).get()._field_Args.len() > 0LL)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type70) {
				_case_begin_1b829ca1e:;
				{
					_1b5706354_possibleRefExpr(_self_, (*(_60937_m)).get()._field_Expr.cast_ptr<_1d061a050_TraitSubIdentExprModel>(&__jule_any_type70).get()._field_Expr);
					if ((!(_229913002_Production))) {
						_62717_locinfo=true;
					};
					if (((*(_60937_m)).get()._field_Args.len() > 0LL)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
			}
			_match_end_1b829c799:;
		};
	};
	_1b5706e8c_args(_self_, _60937_m);
	if (_62717_locinfo) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", \"", 3));
		_1b5a78176_locInfo(_self_.get()._field_oc, &((*(_60937_m)).get()._field_Token));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_61013_wrapped) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("; })", 4));
	};
}



inline void _1b5707c90_coFuncCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617eb5_FnCallExprModel>* _69035_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	jule::Str _69317_head = jule::Str("std::thread([", 13);;
	if (((*(_69035_m)).get()._field_Func.get()._field_Owner != nullptr)) {
		(_69317_head).append("_self_", 6);
		if (((*(_69035_m)).get()._field_Args.len() > 0LL)) {
			(_69317_head).append(", ", 2);
		};
	};
	{
		auto expr = &((*(_69035_m)).get()._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82aa411:;
		if (it != expr_end) {
			jule::I64 _70013_i = it - expr->begin();
			jule::Any _70016_arg = *it;
			{
				if ((_70013_i > 0LL)) {
					(_69317_head).append(", ", 2);
				};
				{
					auto &_match_expr{ _70016_arg };
					
					if (_match_expr.type == &__jule_any_type8) {
						_case_begin_1b82aae6c:;
						{
							jule::Ptr<_1d21bb65a_Var> _70625_v = _70016_arg.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
							_69317_head+=static__1b59d4ee5_var(_70625_v);
							goto _iter_next_1b82aa411;
						}
					}
					_match_end_1b82ab159:;
				};
				jule::Str _71017_name = (jule::Str("_co_arg_", 8) + _1e76d6159_Itoa(_70013_i));;
				_69317_head+=_71017_name;
				_1b5a7675c_indent(_self_.get()._field_oc);
				_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_69035_m)).get()._field_Func.get()._field_Params[_70013_i].get()._field_Kind));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" ", 1));
				if ((*(_69035_m)).get()._field_Func.get()._field_Params[_70013_i].get()._field_Decl.get()._field_Reference) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("&", 1));
				};
				_1b5a761c9_write(_self_.get()._field_oc, _71017_name);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = ", 3));
				_1b5706354_possibleRefExpr(_self_, _70016_arg);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
				jule::Any _72217_argS = jule::Any(_71017_name, &__jule_any_type5);;
				(*(_69035_m)).get()._field_Args[_70013_i]=(*(((jule::Any*)((&(_72217_argS))))));
			}
			_iter_next_1b82aa411:;
			++it;
			_70013_i++;
			goto _iter_begin_1b82aa411;
		}
		_iter_end_1b82aa411:;
	};
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, _69317_head);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("](void) mutable -> void {\n", 26));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5707a1a_pureFuncCall(_self_, _69035_m);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}).detach();\n", 13));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
}



inline void _1b57080ae_writeUseExpr(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0626e6e_FnIns>* _74037_f, jule::Ptr<_1d0408c95_Data> _74052_d) {
	if ((_1d21d6202_Tup(_74052_d.get()._field_Kind.ptr()) == nullptr)) {
		_1b5706354_possibleRefExpr(_self_, _74052_d.get()._field_Model);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";", 1));
		return;;
	};
	jule::Ptr<_1d061bbde_TupleExprModel> _74617_tup = _74052_d.get()._field_Model.cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87);;
	_1b5a8da93_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _1d21d6202_Tup((*(_74037_f)).get()._field_Result.ptr()));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{", 1));
	{
		auto expr = &(_74617_tup.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b82b61ec:;
		if (it != expr_end) {
			jule::I64 _74913_i = it - expr->begin();
			jule::Ptr<_1d0408c95_Data> _74916_data = *it;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
				_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_74913_i));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("=", 1));
				_1b5706354_possibleRefExpr(_self_, _74916_data.get()._field_Model);
				if (((_74617_tup.get()._field_Datas.len() - _74913_i) > 1LL)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
				};
			}
			_iter_next_1b82b61ec:;
			++it;
			_74913_i++;
			goto _iter_begin_1b82b61ec;
		}
		_iter_end_1b82b61ec:;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("};", 2));
}



inline void _1b5708334_funcCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0617eb5_FnCallExprModel> _76132_m) {
	if (_76132_m.get()._field_IsCo) {
		_1b5707c90_coFuncCall(_self_, &(_76132_m));
		return;;
	};
	if (((_1d0628305_IsBuiltin(_76132_m.get()._field_Func.ptr()) || (!(_76132_m.get()._field_Func.get()._field_Decl.get()._field_Exceptional))) || ((_76132_m.get()._field_Except != nullptr) && (_76132_m.get()._field_Except.get()._field_Stmts.len() == 0LL)))) {
		_1b5707a1a_pureFuncCall(_self_, &(_76132_m));
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("({\n", 3));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto except = ", 14));
	_1b5707a1a_pureFuncCall(_self_, &(_76132_m));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	if ((_76132_m.get()._field_Except != nullptr)) {
		if (((_76132_m.get()._field_Func.get()._field_Result == nullptr) || (!(_76132_m.get()._field_Assigned)))) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) ", 18));
			_1b57004e6_scope(_self_.get()._field_oc.get()._field_sc, _76132_m.get()._field_Except);
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
		} else {
			jule::Bool _78721_forwarded = _1b5711c55_isForwarded(&(_76132_m.get()._field_Except));;
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(except.ok()) ? (except.result) : (", 35));
			if (_78721_forwarded) {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{", 1));
			};
			jule::Any _79225_stmt = _76132_m.get()._field_Except.get()._field_Stmts[(_76132_m.get()._field_Except.get()._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _79225_stmt };
				
				if (_match_expr.type == &__jule_any_type24) {
					_case_begin_1b82be821:;
					{
						_76132_m.get()._field_Except.get()._field_Stmts=_76132_m.get()._field_Except.get()._field_Stmts.slice(0LL, (_76132_m.get()._field_Except.get()._field_Stmts.len() - 1LL));
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{\n", 2));
						_1b5a763a5_addIndent(_self_.get()._field_oc);
						_1b5700271_scopeStmts(_self_.get()._field_oc.get()._field_sc, &(_76132_m.get()._field_Except));
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1b5a7675c_indent(_self_.get()._field_oc);
						_1b57080ae_writeUseExpr(_self_, &(_76132_m.get()._field_Func), _79225_stmt.cast_ptr<_1d0408c95_Data>(&__jule_any_type24));
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
						_1b5a76581_doneIndent(_self_.get()._field_oc);
						_1b5a7675c_indent(_self_.get()._field_oc);
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
					}
				}
				else {
					_case_begin_1b82c05ad:;
					{
						_1b57004e6_scope(_self_.get()._field_oc.get()._field_sc, _76132_m.get()._field_Except);
					}
				}
				_match_end_1b82c0558:;
			};
			if (_78721_forwarded) {
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" ", 1));
				_1b571034c_initExpr(_self_, _76132_m.get()._field_Func.get()._field_Result);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";}", 2));
			};
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");\n", 3));
		};
		_1b5a76581_doneIndent(_self_.get()._field_oc);
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (!except.ok()) jule::panic(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 139));
		_1b5a78176_locInfo(_self_.get()._field_oc, &(_76132_m.get()._field_Token));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"));\n", 5));
		if ((!(_1d0624730_IsVoid(_76132_m.get()._field_Func.get()._field_Decl.ptr())))) {
			_1b5a7675c_indent(_self_.get()._field_oc);
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(except.result);\n", 17));
		};
		_1b5a76581_doneIndent(_self_.get()._field_oc);
	};
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b57085a9_slice(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061836c_SliceExprModel> _83229_m) {
	if ((_83229_m.get()._field_Elems.len() == 0LL)) {
		_1b5a761c9_write(_self_.get()._field_oc, _1b5a868b0_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83229_m.get()._field_ElemKind));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a868b0_asSlice(_self_.get()._field_oc.get()._field_tc.ptr(), _83229_m.get()._field_ElemKind));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("::make({", 8));
	_1b5706c17_models(_self_, _83229_m.get()._field_Elems);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b570882e_indexing(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06187e0_IndexingExprModel> _84432_m) {
	_1b5706354_possibleRefExpr(_self_, _84432_m.get()._field_Expr.get()._field_Model);
	{
		
		if (_229913002_Production || (_1d21d4a3b_Ptr(_84432_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1d21d5e8d_Map(_84432_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || _1b5712250_isExprComesFromBind(&(_84432_m.get()._field_Expr))) {
			_case_begin_1b82ca783:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b5706354_possibleRefExpr(_self_, _84432_m.get()._field_Index.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b82cadb0:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".at(\"", 5));
				_1b5a78176_locInfo(_self_.get()._field_oc, &(_84432_m.get()._field_Token));
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\", ", 3));
				_1b5706354_possibleRefExpr(_self_, _84432_m.get()._field_Index.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b82cad5a:;
	};
}



inline void _1b5708aa4_unsafeIndexing(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0656234_UnsafeIndexingExprModel> _86438_m) {
	_1b5706354_possibleRefExpr(_self_, _86438_m.get()._field_Node.get()._field_Expr.get()._field_Model);
	{
		
		if (_229913002_Production || (_1d21d4a3b_Ptr(_86438_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr) || (_1d21d5e8d_Map(_86438_m.get()._field_Node.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b82cd70e:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("[", 1));
				_1b5706354_possibleRefExpr(_self_, _86438_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("]", 1));
			}
		}
		else {
			_case_begin_1b82cec1b:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".__at(", 6));
				_1b5706354_possibleRefExpr(_self_, _86438_m.get()._field_Node.get()._field_Index.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
			}
		}
		_match_end_1b82ceba5:;
	};
}



inline void _1b5708d29_anonFunc(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0618b97_AnonFnExprModel> _88132_m) {
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89385_func(_self_.get()._field_oc.get()._field_tc.ptr(), _88132_m.get()._field_Func));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("([=]", 4));
	_1b5a7ce7d_paramsIns(_self_.get()._field_oc, &(_88132_m.get()._field_Func.get()._field_Params));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" mutable -> ", 12));
	_1b5a88c69_funcInsResult(_self_.get()._field_oc.get()._field_tc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_88132_m.get()._field_Func));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" ", 1));
	_1b570076b_funcScope(_self_.get()._field_oc.get()._field_sc, _88132_m.get()._field_Func);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570909e_mapExpr(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06194c2_MapExprModel> _89231_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Map<", 10));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89231_m.get()._field_KeyKind));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _89231_m.get()._field_ValKind));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">({", 3));
	if ((_89231_m.get()._field_Entries.len() > 0LL)) {
		{
			auto expr = &(_89231_m.get()._field_Entries);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b82d7ce0:;
			if (it != expr_end) {
				jule::I64 _89918_i = it - expr->begin();
				jule::Ptr<_1d061904e_KeyValPairExprModel> _89925_pair = *it;
				{
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{", 1));
					_1b5706354_possibleRefExpr(_self_, _89925_pair.get()._field_Key);
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(",", 1));
					_1b5706354_possibleRefExpr(_self_, _89925_pair.get()._field_Val);
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
					if (((_89231_m.get()._field_Entries.len() - _89918_i) > 1LL)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str(",", 1));
					};
				}
				_iter_next_1b82d7ce0:;
				++it;
				_89918_i++;
				goto _iter_begin_1b82d7ce0;
			}
			_iter_end_1b82d7ce0:;
		};
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("})", 2));
}



inline void _1b5709324_slicing(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0619a11_SlicingExprModel> _91331_m) {
	_1b5706354_possibleRefExpr(_self_, _91331_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".slice(", 7));
	if ((!(_229913002_Production))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b5a78176_locInfo(_self_.get()._field_oc, &(_91331_m.get()._field_Token));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b5706354_possibleRefExpr(_self_, _91331_m.get()._field_Left);
	if ((_91331_m.get()._field_Right != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b5706354_possibleRefExpr(_self_, _91331_m.get()._field_Right);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b5709599_traitSub(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061a050_TraitSubIdentExprModel> _92932_m) {
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d41c0_traitDecl(_92932_m.get()._field_Trt));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("_mptr_data", 10));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("[(", 2));
	_1b5706354_possibleRefExpr(_self_, _92932_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(").type_offset].", 15));
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3b81_func(&(_92932_m.get()._field_Method)));
}



inline void _1b570981e_structureSub(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061a836_StructSubIdentExprModel> _93836_m) {
	_1b5706354_possibleRefExpr(_self_, _93836_m.get()._field_Expr.get()._field_Model);
	if ((_93836_m.get()._field_Field == nullptr)) {
		return;;
	};
	if ((_1d21d4a3b_Ptr(_93836_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("->", 2));
	} else if ((_1d21d47c7_Sptr(_93836_m.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".get(", 5));
		if ((!(_229913002_Production))) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
			_1b5a78176_locInfo(_self_.get()._field_oc, &(_93836_m.get()._field_Token));
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(").", 2));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
	};
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d4c4d_field(&(_93836_m.get()._field_Field.get()._field_Decl)));
}



inline void _1b5709a94_commonIdent(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061b381_CommonIdentExprModel> _95931_m) {
	_1b5a761c9_write(_self_.get()._field_oc, _95931_m.get()._field_Ident);
}



inline void _1b5709d19_commonSub(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061b8e2_CommonSubIdentExprModel> _96333_m) {
	_1b5706354_possibleRefExpr(_self_, _96333_m.get()._field_Expr);
	{
		
		if ((_1d21d4a3b_Ptr(_96333_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b82e56d2:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("->", 2));
			}
		}
		else if ((_1d21d47c7_Sptr(_96333_m.get()._field_ExprKind.ptr()) != nullptr)) {
			_case_begin_1b82e5c98:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".get(", 5));
				if ((!(_229913002_Production))) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
					_1b5a78176_locInfo(_self_.get()._field_oc, &(_96333_m.get()._field_Token));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
				};
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(").", 2));
			}
		}
		else {
			_case_begin_1b82e5c32:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".", 1));
			}
		}
		_match_end_1b82e5bbb:;
	};
	_1b5a761c9_write(_self_.get()._field_oc, _96333_m.get()._field_Ident);
}



inline void _1b570a08e_array(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061b095_ArrayExprModel> _98229_m) {
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a88021_array(_self_.get()._field_oc.get()._field_tc.ptr(), _98229_m.get()._field_Kind));
	if ((_98229_m.get()._field_Elems.len() == 0LL)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("()", 2));
		return;;
	};
	if (((_98229_m.get()._field_Elems.len() == 2LL) && (_98229_m.get()._field_Elems[1LL] == nullptr))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b5706354_possibleRefExpr(_self_, _98229_m.get()._field_Elems[0LL]);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("({", 2));
	_1b5706c17_models(_self_, _98229_m.get()._field_Elems);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("})", 2));
	return;;
}



inline void _1b570a314_funcInsCommon(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0626e6e_FnIns> _100537_m) {
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89385_func(_self_.get()._field_oc.get()._field_tc.ptr(), _100537_m));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b570a589_funcIns(_self_, _100537_m);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570a589_funcIns(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0626e6e_FnIns> _101231_m) {
	if (((_101231_m.get()._field_Decl != nullptr) && _101231_m.get()._field_Decl.get()._field_Binded)) {
		jule::Ptr<_1d05aba4c_Directive> _101417_d = _1b5a90d92_findDirective(&(_101231_m.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_101417_d != nullptr)) {
			_1b5a761c9_write(_self_.get()._field_oc, _1b5a8225c_concatAllParts(_101417_d.get()._field_Args));
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("::", 2));
		};
	};
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3e28_funcIns(&(_101231_m)));
}



inline void _1b570a80e_tuple(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061bbde_TupleExprModel> _102329_m) {
	{
		auto expr = &(_102329_m.get()._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8301a1d:;
		if (it != expr_end) {
			jule::I64 _102414_i = it - expr->begin();
			jule::Ptr<_1d0408c95_Data> _102421_d = *it;
			{
				_1b5706354_possibleRefExpr(_self_, _102421_d.get()._field_Model);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";", 1));
				if (((_102329_m.get()._field_Datas.len() - _102414_i) > 1LL)) {
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n", 1));
					_1b5a7675c_indent(_self_.get()._field_oc);
				};
			}
			_iter_next_1b8301a1d:;
			++it;
			_102414_i++;
			goto _iter_begin_1b8301a1d;
		}
		_iter_end_1b8301a1d:;
	};
}



inline void _1b570aa84_newCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061cbac_BuiltinNewCallExprModel> _103431_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::new_ptr<", 14));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _103431_m.get()._field_Kind));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(", 2));
	if ((_103431_m.get()._field_Init != nullptr)) {
		_1b5706354_possibleRefExpr(_self_, _103431_m.get()._field_Init);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570ad09_outCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061c0b8_BuiltinOutCallExprModel> _104431_m) {
	if ((_104431_m.get()._field_Debug && _229913002_Production)) {
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::out(", 10));
	_1b5706354_possibleRefExpr(_self_, _104431_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570b07e_outlnCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061c4a3_BuiltinOutlnCallExprModel> _105333_m) {
	if ((_105333_m.get()._field_Debug && _229913002_Production)) {
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::outln(", 12));
	_1b5706354_possibleRefExpr(_self_, _105333_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570b304_panicCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061d097_BuiltinPanicCallExprModel> _106233_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::panic(", 12));
	_1b5706354_possibleRefExpr(_self_, _106233_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" + jule::Str(\"\\nlocation: ", 26));
	_1b5a78176_locInfo(_self_.get()._field_oc, &(_106233_m.get()._field_Token));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b570b579_assertCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel> _107034_m) {
	if (_229913002_Production) {
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (!(", 6));
	_1b5706354_possibleRefExpr(_self_, _107034_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")) jule::panic(jule::Str(", 25));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5711051_cstrLit(static_cast<jule::Slice<jule::U8>>(_107034_m.get()._field_Log)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") + jule::Str(\"\\nlocation: ", 27));
	_1b5a78176_locInfo(_self_.get()._field_oc, &(_107034_m.get()._field_Token));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"));", 4));
}



inline void _1b570b7ee_errorCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d062042e_BuiltinErrorCallExprModel> _108333_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("return ", 7));
	if (_1d0624730_IsVoid(_108333_m.get()._field_Func.get()._field_Decl.ptr())) {
		{
			auto &_match_expr{ _108333_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b830d376:;
				{
					jule::Ptr<_1d21bb65a_Var> _108821_v = _108333_m.get()._field_Err.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
					if (_108821_v.get()._field_Ident.equal("error", 5)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(except.error)", 35));
						return;;
					};
				}
			}
			_match_end_1b830d321:;
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::VoidExceptional(jule::Any(", 32));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Exceptional<", 18));
		_1b5a8e1d1_codeMut1(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), &(_108333_m.get()._field_Func.get()._field_Result));
		{
			auto &_match_expr{ _108333_m.get()._field_Err.get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1b8310dc3:;
				{
					jule::Ptr<_1d21bb65a_Var> _110021_v = _108333_m.get()._field_Err.get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
					if (_110021_v.get()._field_Ident.equal("error", 5)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(except.error)", 15));
						return;;
					};
				}
			}
			_match_end_1b8310ce6:;
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(jule::Any(", 12));
	};
	_1b5706354_possibleRefExpr(_self_, _108333_m.get()._field_Err.get()._field_Model);
	jule::I64 _110913_i = _1b5a76d78_pushAnyType(_self_.get()._field_oc, _108333_m.get()._field_Err.get()._field_Kind);;
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", &__jule_any_type", 18));
	_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_110913_i));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("))", 2));
}



inline void _1b570ba74_copyCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0620044_BuiltinCopyCallExprModel> _111532_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::copy((", 12));
	_1b5706354_possibleRefExpr(_self_, _111532_m.get()._field_Dest.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1d21d4563_Prim(_111532_m.get()._field_Dest.get()._field_Kind.ptr()) != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", (", 3));
	_1b5706354_possibleRefExpr(_self_, _111532_m.get()._field_Src.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if ((_1d21d4563_Prim(_111532_m.get()._field_Src.get()._field_Kind.ptr()) != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".fake_slice()", 13));
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570bce9_lenCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061e20d_BuiltinLenCallExprModel> _113131_m) {
	_1b5706354_possibleRefExpr(_self_, _113131_m.get()._field_Expr.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".len()", 6));
}



inline void _1b570c06e_capCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061e52c_BuiltinCapCallExprModel> _113631_m) {
	_1b5706354_possibleRefExpr(_self_, _113631_m.get()._field_Expr.get()._field_Model);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".cap()", 6));
}



inline void _1b570c2e4_deleteCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel> _114134_m) {
	_1b5706354_possibleRefExpr(_self_, _114134_m.get()._field_Dest.get()._field_Model);
	if ((_114134_m.get()._field_Key != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".del(", 5));
		_1b5706354_possibleRefExpr(_self_, _114134_m.get()._field_Key.get()._field_Model);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	} else {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".clear()", 8));
	};
}



inline void _1b570c569_makeCallSlice(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>* _115238_m) {
	jule::Ptr<_1d21dd759_Slc> _115317_slice = _1d21d54dc_Slc((*(_115238_m)).get()._field_Kind.ptr());;
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), (*(_115238_m)).get()._field_Kind));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b5706354_possibleRefExpr(_self_, (*(_115238_m)).get()._field_Len);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	if (((*(_115238_m)).get()._field_Cap != nullptr)) {
		_1b5706354_possibleRefExpr(_self_, (*(_115238_m)).get()._field_Cap);
	} else {
		_1b5706354_possibleRefExpr(_self_, (*(_115238_m)).get()._field_Len);
	};
	if (_1b5a914be_shouldInitialized(&(_115317_slice.get()._field_Elem))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b571034c_initExpr(_self_, _115317_slice.get()._field_Elem);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570c7de_makeCallStr(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel>* _117036_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Str", 9));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("::alloc(", 8));
	_1b5706354_possibleRefExpr(_self_, (*(_117036_m)).get()._field_Len);
	if (((*(_117036_m)).get()._field_Cap != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b5706354_possibleRefExpr(_self_, (*(_117036_m)).get()._field_Cap);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570ca64_makeCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061da04_BuiltinMakeCallExprModel> _118132_m) {
	if ((_1d21d54dc_Slc(_118132_m.get()._field_Kind.ptr()) != nullptr)) {
		_1b570c569_makeCallSlice(_self_, &(_118132_m));
		return;;
	};
	_1b570c7de_makeCallStr(_self_, &(_118132_m));
}



inline void _1b570ccd9_pushToSlice(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06565b9_PushToSliceExprModel> _118935_m) {
	jule::I64 _119013_n = _self_.get()._field_oc.get()._field_Obj.len();;
	_1b5706354_possibleRefExpr(_self_, _118935_m.get()._field_Dest);
	jule::Str _119213_dest = _self_.get()._field_oc.get()._field_Obj.slice(_119013_n);;
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" = jule::alloc_for_append(", 26));
	_1b5a761c9_write(_self_.get()._field_oc, _119213_dest);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(static_cast<jule::I64>(_118935_m.get()._field_Elems.get()._field_Elems.len())));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");", 2));
	{
		auto expr = &(_118935_m.get()._field_Elems.get()._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8325932:;
		if (it != expr_end) {
			jule::Any _119921_e = *it;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _119213_dest);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".__push(", 8));
				_1b5706354_possibleRefExpr(_self_, _119921_e);
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");", 2));
			}
			_iter_next_1b8325932:;
			++it;
			goto _iter_begin_1b8325932;
		}
		_iter_end_1b8325932:;
	};
}



inline void _1b570d05e_appendCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061ddde_BuiltinAppendCallExprModel> _120834_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::append(", 13));
	_1b5706354_possibleRefExpr(_self_, _120834_m.get()._field_Dest);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(",", 1));
	_1b5706354_possibleRefExpr(_self_, _120834_m.get()._field_Elements);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570d2d4_cloneCall(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061c7c2_BuiltinCloneCallExprModel> _121633_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::clone(", 12));
	_1b5706354_possibleRefExpr(_self_, _121633_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570d559_sizeof(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d062072b_SizeofExprModel> _122230_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("sizeof(", 7));
	_1b5706354_possibleRefExpr(_self_, _122230_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570d7ce_alignof(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0620a17_AlignofExprModel> _122831_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("alignof(", 8));
	_1b5706354_possibleRefExpr(_self_, _122831_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline jule::Str _1b570dadc_runeLit(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0620d03_RuneExprModel> _123427_m) {
	if ((_123427_m.get()._field_Code <= 127LL)) {
		jule::Str _123621_b = _1b571098a_sbtoa(static_cast<jule::U8>(static_cast<jule::U8>(_123427_m.get()._field_Code)));;
		if (_123621_b.equal("'", 1)) {
			_123621_b=jule::Str("\\'", 2);
		};
		return ((jule::Str("'", 1) + _123621_b) + jule::Str("'", 1));;
	};
	return _1b5711606_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_123427_m.get()._field_Code)));;
}



inline void _1b570dd62_structureStatic(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d061abcc_StructStaticIdentExprModel> _124539_m) {
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3e28_funcIns(&(_124539_m.get()._field_Method)));
}



inline void _1b570e0d7_integratedToStr(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0621111_IntegratedToStrExprModel> _124939_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::to_str(", 13));
	_1b5706354_possibleRefExpr(_self_, _124939_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
}



inline void _1b570e35c_backendEmit(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06214c9_BackendEmitExprModel> _125535_m) {
	if ((_125535_m.get()._field_Exprs.len() == 0LL)) {
		_1b5a761c9_write(_self_.get()._field_oc, _125535_m.get()._field_Code);
		return;;
	};
	jule::I64 _126013_n = _self_.get()._field_oc.get()._field_Obj.len();;
	jule::Slice<jule::Any> _126117_args = jule::Slice<jule::Any>::alloc(_125535_m.get()._field_Exprs.len(), _125535_m.get()._field_Exprs.len());;
	{
		auto expr = &(_125535_m.get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83301cd:;
		if (it != expr_end) {
			jule::I64 _126214_i = it - expr->begin();
			jule::Any _126221_expr = *it;
			{
				_1b5706354_possibleRefExpr(_self_, _126221_expr);
				_126117_args[_126214_i]=jule::Any(_self_.get()._field_oc.get()._field_Obj.slice(_126013_n), &__jule_any_type5);
				_self_.get()._field_oc.get()._field_Obj=_self_.get()._field_oc.get()._field_Obj.slice(0LL, _126013_n);
			}
			_iter_next_1b83301cd:;
			++it;
			_126214_i++;
			goto _iter_begin_1b83301cd;
		}
		_iter_end_1b83301cd:;
	};
	_1b5a761c9_write(_self_.get()._field_oc, _1d0650cab_Format(_125535_m.get()._field_Code, _126117_args));
}



inline void _1b570e5d2_free(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06217b5_FreeExprModel> _127028_m) {
	_1b5706354_possibleRefExpr(_self_, _127028_m.get()._field_Expr);
	if (_22991285e_RC) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".dealloc()", 10));
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".__free()", 9));
}



inline void _1b570e857_mutSlicing(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0656b08_MutSlicingExprModel> _127934_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5706354_possibleRefExpr(_self_, _127934_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(").mut_slice(", 12));
	if ((!(_229913002_Production))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\"", 1));
		_1b5a78176_locInfo(_self_.get()._field_oc, &(_127934_m.get()._field_Token));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\", ", 3));
	};
	_1b5706354_possibleRefExpr(_self_, _127934_m.get()._field_Left);
	if ((_127934_m.get()._field_Right != nullptr)) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
		_1b5706354_possibleRefExpr(_self_, _127934_m.get()._field_Right);
	};
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(");", 2));
}



inline void _1b570eacc_strInsertBegin(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d0656ed2_StrInsertBeginExprModel> _129638_m) {
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
	_1b5706354_possibleRefExpr(_self_, _129638_m.get()._field_Dest);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(").buffer.insert(0, (", 20));
	_1b5706354_possibleRefExpr(_self_, _129638_m.get()._field_Expr);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("));", 3));
}



inline void _1b570ed52_strComp(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d06556ea_StrCompExprModel> _130431_m) {
	if (_130431_m.get()._field_NotEq) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(!", 2));
	};
	jule::Slice<jule::U8> _130813_bytes = static_cast<jule::Slice<jule::U8>>(_1e76e7d08_ReadStr(_130431_m.get()._field_Right.ptr()));;
	_1b5706354_possibleRefExpr(_self_, _130431_m.get()._field_Left);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".equal(", 7));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5711051_cstrLit(_130813_bytes));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
	_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(static_cast<jule::I64>(_130813_bytes.len())));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	if (_130431_m.get()._field_NotEq) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
	};
}



inline void _1b57100c7_model(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Any _132029_m) {
	{
		auto &_match_expr{ _132029_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b833cb03:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _132029_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1b833cdcd:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _132029_m.cast_ptr<_1d21d1d46_TypeKind>(&__jule_any_type89)));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b833ce44:;
			{
				_1b57049a1_constant(_self_, _132029_m.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b833ceaa:;
			{
				_1b57055d9_var(_self_, _132029_m.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8));
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1b833d021:;
			{
				_1b570585e_structureIns(_self_, _132029_m.cast_ptr<_1d0611bd4_StructIns>(&__jule_any_type9));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b833d98e:;
			{
				_1b570a314_funcInsCommon(_self_, _132029_m.cast_ptr<_1d0626e6e_FnIns>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1b833da05:;
			{
				_1b57050de_unsafeBinary(_self_, _132029_m.cast_ptr<_1d0655d9e_UnsafeBinopExprModel>(&__jule_any_type128).get()._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b833da6b:;
			{
				_1b5705364_binary(_self_, _132029_m.cast_ptr<_1d061614a_BinopExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b833dad2:;
			{
				_1b5705ad4_unary(_self_, _132029_m.cast_ptr<_1d0616502_UnaryExprModel>(&__jule_any_type74));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1b833db48:;
			{
				_1b5705d59_structureLit(_self_, _132029_m.cast_ptr<_1d0616ca5_StructLitExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1b833dbae:;
			{
				_1b57060ce_allocStructure(_self_, _132029_m.cast_ptr<_1d06170b3_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1b833dc25:;
			{
				_1b5706992_casting(_self_, _132029_m.cast_ptr<_1d0617613_CastingExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b833dc8b:;
			{
				_1b5708334_funcCall(_self_, _132029_m.cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type82) {
			_case_begin_1b833dd02:;
			{
				_1b57085a9_slice(_self_, _132029_m.cast_ptr<_1d061836c_SliceExprModel>(&__jule_any_type82));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1b833dd68:;
			{
				_1b570a08e_array(_self_, _132029_m.cast_ptr<_1d061b095_ArrayExprModel>(&__jule_any_type90));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1b833ddce:;
			{
				_1b5708aa4_unsafeIndexing(_self_, _132029_m.cast_ptr<_1d0656234_UnsafeIndexingExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1b833de45:;
			{
				_1b570882e_indexing(_self_, _132029_m.cast_ptr<_1d06187e0_IndexingExprModel>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1b833debc:;
			{
				_1b5708d29_anonFunc(_self_, _132029_m.cast_ptr<_1d0618b97_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1b833e044:;
			{
				_1b570909e_mapExpr(_self_, _132029_m.cast_ptr<_1d06194c2_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b833e0bb:;
			{
				_1b5709324_slicing(_self_, _132029_m.cast_ptr<_1d0619a11_SlicingExprModel>(&__jule_any_type97));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b833e143:;
			{
				_1b5709599_traitSub(_self_, _132029_m.cast_ptr<_1d061a050_TraitSubIdentExprModel>(&__jule_any_type70));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b833e1ba:;
			{
				_1b570981e_structureSub(_self_, _132029_m.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71));
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1b833e242:;
			{
				_1b5709a94_commonIdent(_self_, _132029_m.cast_ptr<_1d061b381_CommonIdentExprModel>(&__jule_any_type72));
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b833e2b9:;
			{
				_1b5709d19_commonSub(_self_, _132029_m.cast_ptr<_1d061b8e2_CommonSubIdentExprModel>(&__jule_any_type73));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1b833e341:;
			{
				_1b570a80e_tuple(_self_, _132029_m.cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1b833e3b8:;
			{
				_1b570ad09_outCall(_self_, _132029_m.cast_ptr<_1d061c0b8_BuiltinOutCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1b833e440:;
			{
				_1b570b07e_outlnCall(_self_, _132029_m.cast_ptr<_1d061c4a3_BuiltinOutlnCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1b833e4b7:;
			{
				_1b570aa84_newCall(_self_, _132029_m.cast_ptr<_1d061cbac_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1b833e53e:;
			{
				_1b570b304_panicCall(_self_, _132029_m.cast_ptr<_1d061d097_BuiltinPanicCallExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1b833e5b6:;
			{
				_1b570b579_assertCall(_self_, _132029_m.cast_ptr<_1d061d54d_BuiltinAssertCallExprModel>(&__jule_any_type31));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1b833e63d:;
			{
				_1b570b7ee_errorCall(_self_, _132029_m.cast_ptr<_1d062042e_BuiltinErrorCallExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1b833e6b5:;
			{
				_1b570ca64_makeCall(_self_, _132029_m.cast_ptr<_1d061da04_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1b833e73c:;
			{
				_1b570d05e_appendCall(_self_, _132029_m.cast_ptr<_1d061ddde_BuiltinAppendCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1b833e7b4:;
			{
				_1b570d2d4_cloneCall(_self_, _132029_m.cast_ptr<_1d061c7c2_BuiltinCloneCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1b833e83b:;
			{
				_1b570ba74_copyCall(_self_, _132029_m.cast_ptr<_1d0620044_BuiltinCopyCallExprModel>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1b833e8b3:;
			{
				_1b570bce9_lenCall(_self_, _132029_m.cast_ptr<_1d061e20d_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1b833e93a:;
			{
				_1b570c06e_capCall(_self_, _132029_m.cast_ptr<_1d061e52c_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1b833e9b2:;
			{
				_1b570c2e4_deleteCall(_self_, _132029_m.cast_ptr<_1d061ebd1_BuiltinDeleteCallExprModel>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1b833ea39:;
			{
				_1b570d559_sizeof(_self_, _132029_m.cast_ptr<_1d062072b_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1b833eab1:;
			{
				_1b570d7ce_alignof(_self_, _132029_m.cast_ptr<_1d0620a17_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1b833eb38:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, _1b570dadc_runeLit(_self_, _132029_m.cast_ptr<_1d0620d03_RuneExprModel>(&__jule_any_type88)));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b833ebb0:;
			{
				_1b570dd62_structureStatic(_self_, _132029_m.cast_ptr<_1d061abcc_StructStaticIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1b833ec37:;
			{
				_1b570e0d7_integratedToStr(_self_, _132029_m.cast_ptr<_1d0621111_IntegratedToStrExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1b833ecae:;
			{
				_1b570e35c_backendEmit(_self_, _132029_m.cast_ptr<_1d06214c9_BackendEmitExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1b833ed36:;
			{
				_1b570e5d2_free(_self_, _132029_m.cast_ptr<_1d06217b5_FreeExprModel>(&__jule_any_type34));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1b833edad:;
			{
				_1b570e857_mutSlicing(_self_, _132029_m.cast_ptr<_1d0656b08_MutSlicingExprModel>(&__jule_any_type123));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1b833ee35:;
			{
				_1b570eacc_strInsertBegin(_self_, _132029_m.cast_ptr<_1d0656ed2_StrInsertBeginExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1b833eeac:;
			{
				_1b570ed52_strComp(_self_, _132029_m.cast_ptr<_1d06556ea_StrCompExprModel>(&__jule_any_type127));
			}
		}
		else {
			_case_begin_1b833cc79:;
			{
				_1b5a761c9_write(_self_.get()._field_oc, jule::Str("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1b833cb9c:;
	};
}



inline void _1b571034c_initExpr(jule::Ptr<_1b5703351_exprCoder> _self_, jule::Ptr<_1d21d1d46_TypeKind> _142332_t) {
	if (_1d21d3ab2_NilCompatible(_142332_t.ptr())) {
		if ((_1d21d4a3b_Ptr(_142332_t.ptr()) != nullptr)) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("nullptr", 7));
		} else {
			_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1d21de2d7_Tuple> _143317_tup = _1d21d6202_Tup(_142332_t.ptr());;
	if ((_143317_tup != nullptr)) {
		_1b5a8da93_tup(_self_.get()._field_oc.get()._field_tc.get()._field_rc.ptr(), &(_self_.get()._field_oc.get()._field_Obj), _143317_tup);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("{", 1));
		{
			auto expr = &(_143317_tup.get()._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8358129:;
			if (it != expr_end) {
				jule::I64 _143718_i = it - expr->begin();
				jule::Ptr<_1d21d1d46_TypeKind> _143725_tt = *it;
				{
					if ((!(_1b5a914be_shouldInitialized(&(_143725_tt))))) {
						goto _iter_next_1b8358129;
					};
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str(".__jule_result_arg", 18));
					_1b5a761c9_write(_self_.get()._field_oc, _1e76d6159_Itoa(_143718_i));
					_1b5a761c9_write(_self_.get()._field_oc, jule::Str("=", 1));
					_1b571034c_initExpr(_self_, _143725_tt);
					if (((_143317_tup.get()._field_Types.len() - _143718_i) > 1LL)) {
						_1b5a761c9_write(_self_.get()._field_oc, jule::Str(", ", 2));
					};
				}
				_iter_next_1b8358129:;
				++it;
				_143718_i++;
				goto _iter_begin_1b8358129;
			}
			_iter_end_1b8358129:;
		};
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
		return;;
	};
	jule::Ptr<_1d214bc5b_Enum> _145217_enm = _1d21d4ca0_Enum(_142332_t.ptr());;
	if ((_145217_enm != nullptr)) {
		_1b57100c7_model(_self_, _145217_enm.get()._field_Items[0LL].get()._field_Value.get()._field_Data.get()._field_Model);
		return;;
	};
	jule::Ptr<_1d21d9568_Prim> _145713_prim = _1d21d4563_Prim(_142332_t.ptr());;
	if ((_145713_prim != nullptr)) {
		if (_1e76e57b7_IsNum(_145713_prim.get()._field_Kind)) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("0", 1));
		} else if (_1d21dc538_IsBool(_145713_prim.ptr())) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("false", 5));
		} else if (_1d21dc79c_IsStr(_145713_prim.ptr())) {
			_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Str()", 11));
		};
		return;;
	};
	if ((_1d21d5278_Arr(_142332_t.ptr()) != nullptr)) {
		jule::Ptr<_1d21e0904_Arr> _146921_arr = _1d21d5278_Arr(_142332_t.ptr());;
		_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b571034c_initExpr(_self_, _146921_arr.get()._field_Elem);
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str(")", 1));
		return;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _147617_s = _1d21d59b5_Struct(_142332_t.ptr());;
	if ((((_147617_s != nullptr) && _147617_s.get()._field_Decl.get()._field_Binded) && (_1b5a90d92_findDirective(&(_147617_s.get()._field_Decl.get()._field_Directives), jule::Str("typedef", 7)) == nullptr))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(", 1));
		_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("){}", 3));
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a89693_kind(_self_.get()._field_oc.get()._field_tc.ptr(), _142332_t));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("()", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b5703351_exprCoder _Src) {
	_Stream << "exprCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5712ae1_deriveCoder> static__1b5712ecb_new(jule::Ptr<_1b5a75a36_ObjectCoder> _1223_oc) {
	return jule::new_ptr<_1b5712ae1_deriveCoder>(_1b5712ae1_deriveCoder{._field_oc=_1223_oc});;
}



inline jule::Str _1b57132d9_cloneFuncDecl(_1b5712ae1_deriveCoder* _self_, jule::Ptr<_1d060ddbd_Struct>* _1633_s) {
	jule::Str _1717_obj = _1b5a87905_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_1633_s)));;
	(_1717_obj).append(" clone(void) const ", 19);
	return _1717_obj;;
}



inline jule::Str _1b57135e7_cloneFuncDef(_1b5712ae1_deriveCoder* _self_, jule::Ptr<_1d060ddbd_Struct>* _2232_s) {
	jule::Str _2317_obj = _1b5a87905_structure((*(_self_))._field_oc.get()._field_tc.ptr(), (*(_2232_s)));;
	_2317_obj+=(jule::Str(" ", 1) + _2317_obj);
	(_2317_obj).append("::clone(void) const ", 20);
	return _2317_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5712ae1_deriveCoder _Src) {
	_Stream << "deriveCoder{";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b57144c7_TestCoder> static__1b571494a_New(jule::Ptr<_1b5a75a36_ObjectCoder>* _2824_oc) {
	return jule::new_ptr<_1b57144c7_TestCoder>(_1b57144c7_TestCoder{._field_oc=(*(_2824_oc))});;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1b5714bae_findTestingPackage(jule::Ptr<_1b57144c7_TestCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_oc.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8365b1a:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _3521_imp = *it;
			{
				if (_3521_imp.get()._field_LinkPath.equal("std::testing", 12)) {
					return _3521_imp;;
				};
			}
			_iter_next_1b8365b1a:;
			++it;
			goto _iter_begin_1b8365b1a;
		}
		_iter_end_1b8365b1a:;
	};
	return nullptr;;
}



inline void _1b5714e34_appendTest(jule::Ptr<_1b57144c7_TestCoder> _self_, jule::Ptr<_1d0626e6e_FnIns> _4334_f) {
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b57155e9_callTmReset(_self_);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(";\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("std::cout << \">>> TEST RUNNING: \" ", 34));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5711051_cstrLit(static_cast<jule::Slice<jule::U8>>(_4334_f.get()._field_Decl.get()._field_Ident)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" << std::endl;\n", 15));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3e28_funcIns(&(_4334_f)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(_t);\n", 6));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("post_test();\n", 13));
}



inline void _1b57151a9_appendPackageTests(jule::Ptr<_1b57144c7_TestCoder> _self_, jule::Ptr<_1d2195bb7_Package>* _5843_p) {
	{
		auto expr = &((*(_5843_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b836a1e6:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _5921_file = *it;
			{
				{
					auto expr = &(_5921_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b836aa32:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _6025_f = *it;
						{
							if (_1b5a91227_hasDirective(&(_6025_f.get()._field_Directives), jule::Str("test", 4))) {
								_1b5714e34_appendTest(_self_, _6025_f.get()._field_Instances[0LL]);
							};
						}
						_iter_next_1b836aa32:;
						++it;
						goto _iter_begin_1b836aa32;
					}
					_iter_end_1b836aa32:;
				};
			}
			_iter_next_1b836a1e6:;
			++it;
			goto _iter_begin_1b836a1e6;
		}
		_iter_end_1b836a1e6:;
	};
}



inline jule::Bool _1b571541d_readyTestingPackage(jule::Ptr<_1b57144c7_TestCoder> _self_) {
	jule::Ptr<_1d219307c_ImportInfo> _6917_p = _1b5714bae_findTestingPackage(_self_);;
	if ((_6917_p == nullptr)) {
		return false;;
	};
	_self_.get()._field_t=_1d219419e_FindStruct(_6917_p.ptr(), jule::Str("T", 1), false).get()._field_Instances[0LL];
	_self_.get()._field_tmReset=_1d0612b80_FindMethod(_self_.get()._field_t.ptr(), jule::Str("reset", 5), false);
	_self_.get()._field_tmFailed=_1d0612b80_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Failed", 6), false);
	_self_.get()._field_tmSkipped=_1d0612b80_FindMethod(_self_.get()._field_t.ptr(), jule::Str("Skipped", 7), false);
	return true;;
}



inline void _1b57155e9_callTmReset(jule::Ptr<_1b57144c7_TestCoder> _self_) {
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3b81_func(&(_self_.get()._field_tmReset)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b57157c5_callTmFailed(jule::Ptr<_1b57144c7_TestCoder> _self_) {
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3b81_func(&(_self_.get()._field_tmFailed)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b57159a1_callTmSkipped(jule::Ptr<_1b57144c7_TestCoder> _self_) {
	_1b5a761c9_write(_self_.get()._field_oc, static__1b59d3b81_func(&(_self_.get()._field_tmSkipped)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("(_t)", 4));
}



inline void _1b59d208b_Serialize(jule::Ptr<_1b57144c7_TestCoder> _self_) {
	_1b5a81932_serializeHead(_self_.get()._field_oc);
	__JULE_DEFER({
		_1b5a81756_end(_self_.get()._field_oc);
	});;
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\nvoid test_point(void) {\n", 25));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	if ((!(_1b571541d_readyTestingPackage(_self_)))) {
		_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}", 1));
		_1b5a76581_doneIndent(_self_.get()._field_oc);
		return;;
	};
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a8555c_asSptr(_self_.get()._field_oc.get()._field_tc.ptr(), _1b5a87c13_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t)));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(" _t = jule::new_ptr<", 20));
	_1b5a761c9_write(_self_.get()._field_oc, _1b5a87c13_structureIns(_self_.get()._field_oc.get()._field_tc.ptr(), _self_.get()._field_t));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(">(); _t.ref = nullptr;\n", 23));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("jule::Uint total = 0, failed = 0, skipped = 0;\n", 47));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("auto post_test = [&](void) {\n", 29));
	_1b5a763a5_addIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("++total;\n", 9));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (", 4));
	_1b57157c5_callTmFailed(_self_);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") { ++failed; std::cout << \"    [*] FAILED\" << std::endl; }\n", 60));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("else if (", 9));
	_1b57159a1_callTmSkipped(_self_);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str(") { ++skipped; std::cout << \"    [*] SKIPPED\" << std::endl; }\n", 62));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("else { std::cout << \"    [*] PASSED\" << std::endl; }\n", 53));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("};\n", 3));
	_1b57151a9_appendPackageTests(_self_, &(_self_.get()._field_oc.get()._field_ir.get()._field_Main));
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("\n\n", 2));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("std::cout << std::endl << \"total tests: \" << total << \" skipped: \" << skipped << \" failed: \" << failed << \" pass: \" << total-failed-skipped << std::endl;\n", 154));
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("if (failed != 0) std::exit(1);\n", 31));
	_1b5a76581_doneIndent(_self_.get()._field_oc);
	_1b5a7675c_indent(_self_.get()._field_oc);
	_1b5a761c9_write(_self_.get()._field_oc, jule::Str("}\n", 2));
}







std::ostream &operator<<(std::ostream &_Stream, _1b57144c7_TestCoder _Src) {
	_Stream << "TestCoder{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "tmReset:" << _Src._field_tmReset << ", ";
	_Stream << "tmFailed:" << _Src._field_tmFailed << ", ";
	_Stream << "tmSkipped:" << _Src._field_tmSkipped << ", ";
	_Stream << "oc:" << _Src._field_oc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str static__1b59d34ee_toOut(jule::Str* _3322_ident, jule::Uintptr _3334_addr) {
	if ((_3334_addr != 0LLU)) {
		jule::Str _3521_obj = jule::Str::alloc(0LL, 40LL);;
		(_3521_obj).append("_", 1);
		_3521_obj+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_3334_addr)), 15LL);
		(_3521_obj).append("_", 1);
		_3521_obj+=(*(_3322_ident));
		return _3521_obj;;
	};
	jule::Str _4217_obj = jule::Str::alloc(0LL, ((*(_3322_ident)).len() + 1LL));;
	(_4217_obj).append("_", 1);
	_4217_obj+=(*(_3322_ident));
	return _4217_obj;;
}



inline jule::Str static__1b59d38d9_toLocal(jule::I64 _5423_row, jule::I64 _5433_col, jule::Str* _5444_ident) {
	jule::Str _5517_obj = jule::Str::alloc(0LL, 40LL);;
	(_5517_obj).append("_", 1);
	_5517_obj+=_1e76d6159_Itoa(_5423_row);
	_5517_obj+=_1e76d6159_Itoa(_5433_col);
	(_5517_obj).append("_", 1);
	_5517_obj+=(*(_5444_ident));
	return _5517_obj;;
}



inline jule::Str static__1b59d3b81_func(jule::Ptr<_1d06242bd_Fn>* _6521_f) {
	{
		
		if ((*(_6521_f)).get()._field_Binded) {
			_case_begin_1b83857d8:;
			{
				return (*(_6521_f)).get()._field_Ident;;
			}
		}
		else if ((*(_6521_f)).get()._field_Ident.equal("main", 4)) {
			_case_begin_1b838584e:;
			{
				return jule::Str("entry_point", 11);;
			}
		}
		else if (_1d0624994_IsMethod((*(_6521_f)).ptr())) {
			_case_begin_1b8384cc1:;
			{
				jule::Str _7221_obj = static__1b59d34ee_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
				if ((*(_6521_f)).get()._field_Statically) {
					(_7221_obj).buffer.insert(0, (jule::Str("static_", 7)));;
					return _7221_obj;;
				};
				return _7221_obj;;
			}
		}
		else {
			_case_begin_1b8384bb1:;
			{
				return static__1b59d34ee_toOut(&((*(_6521_f)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_6521_f)))));;
			}
		}
		_match_end_1b838495d:;
	};
}



inline jule::Str static__1b59d3e28_funcIns(jule::Ptr<_1d0626e6e_FnIns>* _8424_f) {
	if (_1d0628305_IsBuiltin((*(_8424_f)).ptr())) {
		return (jule::Str("jule::", 6) + (*(_8424_f)).get()._field_Decl.get()._field_Ident);;
	};
	if (((*(_8424_f)).get()._field_Decl.get()._field_Binded || ((*(_8424_f)).get()._field_Generics.len() == 0LL))) {
		return static__1b59d3b81_func(&((*(_8424_f)).get()._field_Decl));;
	};
	return static__1b59d34ee_toOut(&((*(_8424_f)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_8424_f)))));;
}



inline jule::Str static__1b59d41c0_traitDecl(jule::Ptr<_1d21494c8_Trait> _9525_t) {
	if (_1d214a067_IsBuiltin(_9525_t.ptr())) {
		return (jule::Str("jule::", 6) + _9525_t.get()._field_Ident);;
	};
	return static__1b59d34ee_toOut(&(_9525_t.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_9525_t)));;
}



inline jule::Str static__1b59d4467_param(jule::Ptr<_1d0622981_Param>* _10322_p) {
	if ((_22be15359_IsAnonIdent((*(_10322_p)).get()._field_Ident) || _22be150b2_IsIgnoreIdent((*(_10322_p)).get()._field_Ident))) {
		return jule::Str();;
	};
	if (_1d06230ad_IsSelf((*(_10322_p)).ptr())) {
		return jule::Str("_self_", 6);;
	};
	if (((*(_10322_p)).get()._field_Token == nullptr)) {
		return static__1b59d38d9_toLocal(0LL, 0LL, &((*(_10322_p)).get()._field_Ident));;
	};
	return static__1b59d38d9_toLocal((*(_10322_p)).get()._field_Token.get()._field_Row, (*(_10322_p)).get()._field_Token.get()._field_Column, &((*(_10322_p)).get()._field_Ident));;
}



inline jule::Str static__1b59d470e_structure(jule::Ptr<_1d060ddbd_Struct>* _11726_s) {
	if ((*(_11726_s)).get()._field_Binded) {
		if (_1b5a91227_hasDirective(&((*(_11726_s)).get()._field_Directives), jule::Str("typedef", 7))) {
			return (*(_11726_s)).get()._field_Ident;;
		};
		return (jule::Str("struct ", 7) + (*(_11726_s)).get()._field_Ident);;
	};
	return static__1b59d34ee_toOut(&((*(_11726_s)).get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_11726_s)))));;
}



inline jule::Str static__1b59d49a6_structureIns(jule::Ptr<_1d0611bd4_StructIns>* _12829_s) {
	if (((*(_12829_s)).get()._field_Decl.get()._field_Binded || ((*(_12829_s)).get()._field_Generics.len() == 0LL))) {
		return static__1b59d470e_structure(&((*(_12829_s)).get()._field_Decl));;
	};
	return static__1b59d34ee_toOut(&((*(_12829_s)).get()._field_Decl.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>((*(_12829_s)))));;
}



inline jule::Str static__1b59d4c4d_field(jule::Ptr<_1d060b2e9_Field>* _13622_f) {
	if ((*(_13622_f)).get()._field_Owner.get()._field_Binded) {
		return (*(_13622_f)).get()._field_Ident;;
	};
	return (jule::Str("_field_", 7) + (*(_13622_f)).get()._field_Ident);;
}



inline jule::Str static__1b59d4ee5_var(jule::Ptr<_1d21bb65a_Var> _14423_v) {
	{
		
		if (_14423_v.get()._field_Binded) {
			_case_begin_1b838ea89:;
			{
				return _14423_v.get()._field_Ident;;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("error", 5)) {
			_case_begin_1b838de95:;
			{
				return jule::Str("except.error", 12);;
			}
		}
		else if (_14423_v.get()._field_Ident.equal("self", 4)) {
			_case_begin_1b838e00b:;
			{
				return jule::Str("_self_", 6);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder == -1LL)) {
			_case_begin_1b838e072:;
			{
				return jule::Str("__jule_func_result", 18);;
			}
		}
		else if ((_14423_v.get()._field_RetOrder >= 0LL)) {
			_case_begin_1b838e0d8:;
			{
				return (jule::Str("__jule_func_result.__jule_result_arg", 36) + _1e76d6159_Itoa(_14423_v.get()._field_RetOrder));;
			}
		}
		else if ((_14423_v.get()._field_Scope != nullptr)) {
			_case_begin_1b838e32a:;
			{
				return static__1b59d38d9_toLocal(_14423_v.get()._field_Token.get()._field_Row, _14423_v.get()._field_Token.get()._field_Column, &(_14423_v.get()._field_Ident));;
			}
		}
		else {
			_case_begin_1b838d6c0:;
			{
				return static__1b59d34ee_toOut(&(_14423_v.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_14423_v)));;
			}
		}
		_match_end_1b838d945:;
	};
}



inline jule::Str static__1b59d528c_iterBegin(jule::Uintptr _16425_it) {
	jule::Str _16517_obj = jule::Str::alloc(0LL, 30LL);;
	(_16517_obj).append("_iter_begin_", 12);
	_16517_obj+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_16425_it)), 15LL);
	return _16517_obj;;
}



inline jule::Str static__1b59d5534_iterEnd(jule::Uintptr _17223_it) {
	jule::Str _17317_obj = jule::Str::alloc(0LL, 30LL);;
	(_17317_obj).append("_iter_end_", 10);
	_17317_obj+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_17223_it)), 15LL);
	return _17317_obj;;
}



inline jule::Str static__1b59d57cb_iterNext(jule::Uintptr _18024_it) {
	jule::Str _18117_obj = jule::Str::alloc(0LL, 30LL);;
	(_18117_obj).append("_iter_next_", 11);
	_18117_obj+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_18024_it)), 15LL);
	return _18117_obj;;
}



inline jule::Str static__1b59d5a73_label(jule::Str* _18822_ident) {
	jule::Str _18917_obj = jule::Str::alloc(0LL, 30LL);;
	(_18917_obj).append("_julec_label_", 13);
	_18917_obj+=(*(_18822_ident));
	return _18917_obj;;
}



inline jule::Str static__1b59d5d1a_matchEnd(jule::Uintptr _19624_m) {
	jule::Str _19717_obj = jule::Str::alloc(0LL, 30LL);;
	(_19717_obj).append("_match_end_", 11);
	_19717_obj+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_19624_m)), 15LL);
	return _19717_obj;;
}



inline jule::Str static__1b59d60b2_caseBegin(jule::Uintptr _20425_c) {
	jule::Str _20517_obj = jule::Str::alloc(0LL, 30LL);;
	(_20517_obj).append("_case_begin_", 12);
	_20517_obj+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_20425_c)), 15LL);
	return _20517_obj;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b59d2e27_identCoder _Src) {
	_Stream << "identCoder{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a74194_SerializationInfo _Src) {
	_Stream << "SerializationInfo{";
	_Stream << "Compiler:" << _Src._field_Compiler << ", ";
	_Stream << "CompilerCommand:" << _Src._field_CompilerCommand;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a7465b_traitHash _Src) {
	_Stream << "traitHash{";
	_Stream << "t:" << _Src._field_t << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a74a13_traitCast _Src) {
	_Stream << "traitCast{";
	_Stream << "t1:" << _Src._field_t1 << ", ";
	_Stream << "t2:" << _Src._field_t2;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b5a83b21_Str(_1b5a83868_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1b5a83e2e_Equal(jule::Ptr<_1b5a83868_customType> _self_, jule::Ptr<_1d21d1d46_TypeKind> _3921_k) {
	return false;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a83868_customType _Src) {
	_Stream << _1b5a83b21_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_1b5a842d6_typeCoder> static__1b5a84825_new(jule::Ptr<_1b5a75a36_ObjectCoder>* _6324_oc) {
	jule::Ptr<_1b5a842d6_typeCoder> _6417_tc = jule::new_ptr<_1b5a842d6_typeCoder>(_1b5a842d6_typeCoder{._field_oc=(*(_6324_oc)), });;
	_6417_tc.get()._field_rc=static__1b5a8c3aa_new(&(_6417_tc));
	return _6417_tc;;
}



inline jule::Str _1b5a84b33_toType(_1b5a842d6_typeCoder* _self_, jule::Str _7029_id) {
	if ((!_7029_id.equal("uintptr", 7))) {
		_7029_id=_1e76d815b_RealKindOf(_7029_id);
	};
	if (((97LL <= _7029_id[0LL]) && (_7029_id[0LL] <= 122LLU))) {
		_7029_id[0LL]-=32LLU;
	};
	return (jule::Str("jule::", 6) + _7029_id);;
}



inline jule::Str _1b5a84e41_prim(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21d9568_Prim> _8123_p) {
	return _1b5a84b33_toType(_self_, _1d21d98cb_Str(_8123_p.ptr()));;
}



inline jule::Str _1b5a8524e_tuple(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21de2d7_Tuple> _8628_t) {
	jule::Str _8717_obj = jule::Str("std::tuple<", 11);;
	{
		auto expr = &(_8628_t.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b848e1c7:;
		if (it != expr_end) {
			jule::Ptr<_1d21d1d46_TypeKind> _8821_tk = *it;
			{
				_8717_obj+=_1b5a89693_kind(_self_, _8821_tk);
				(_8717_obj).append(",", 1);
			}
			_iter_next_1b848e1c7:;
			++it;
			goto _iter_begin_1b848e1c7;
		}
		_iter_end_1b848e1c7:;
	};
	(_8717_obj).mut_slice(0LL, (_8717_obj.len() - 1LL));;
	(_8717_obj).append(">", 1);
	return _8717_obj;;
}



inline jule::Str _1b5a8555c_asSptr(_1b5a842d6_typeCoder* _self_, jule::Str _9825_elem) {
	jule::Str _9917_obj = jule::Str("jule::Ptr<", 10);;
	_9917_obj+=_9825_elem;
	(_9917_obj).append(">", 1);
	return _9917_obj;;
}



inline jule::Str _1b5a8586a_asPtr(_1b5a842d6_typeCoder* _self_, jule::Str _10624_elem) {
	return (_10624_elem + jule::Str("*", 1));;
}



inline jule::Str _1b5a85b78_sptr(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21dccec_Sptr> _11127_sptr) {
	return _1b5a8555c_asSptr(_self_, _1b5a89693_kind(_self_, _11127_sptr.get()._field_Elem));;
}



inline jule::Str _1b5a85e86_ptr(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21e1361_Ptr> _11626_p) {
	;
	if (_1d21e1d34_IsUnsafe(_11626_p.ptr())) {
		return jule::Str("void*", 5);;
	};
	jule::Str _12117_elem = _1b5a89693_kind(_self_, _11626_p.get()._field_Elem);;
	(_12117_elem).append("*", 1);
	return _12117_elem;;
}



inline jule::Str _1b5a86294_enumDecl(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d214bc5b_Enum> _12731_e) {
	return _1b5a89693_kind(_self_, _12731_e.get()._field_Kind.get()._field_Kind);;
}



inline jule::Str _1b5a865a2_typeEnumDecl(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d214d356_TypeEnum> _13235_e) {
	return jule::Str("jule::Any", 9);;
}



inline jule::Str _1b5a868b0_asSlice(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21d1d46_TypeKind> _13630_elem) {
	jule::Str _13717_obj = jule::Str("jule::Slice<", 12);;
	_13717_obj+=_1b5a89693_kind(_self_, _13630_elem);
	(_13717_obj).append(">", 1);
	return _13717_obj;;
}



inline jule::Str _1b5a86bbd_slice(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21dd759_Slc> _14428_s) {
	return _1b5a868b0_asSlice(_self_, _14428_s.get()._field_Elem);;
}



inline jule::Str _1b5a86ecb_mapType(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21ded10_Map> _14930_m) {
	jule::Str _15017_obj = jule::Str("jule::Map<", 10);;
	_15017_obj+=_1b5a89693_kind(_self_, _14930_m.get()._field_Key);
	(_15017_obj).append(",", 1);
	_15017_obj+=_1b5a89693_kind(_self_, _14930_m.get()._field_Val);
	(_15017_obj).append(">", 1);
	return _15017_obj;;
}



inline jule::Str _1b5a872d9_traitIdent(_1b5a842d6_typeCoder* _self_, jule::Str _15829_ident) {
	jule::Str _15917_obj = jule::Str("jule::Trait<", 12);;
	_15917_obj+=_15829_ident;
	(_15917_obj).append(">", 1);
	return _15917_obj;;
}



inline jule::Str _1b5a875e7_traitDecl(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21494c8_Trait> _16628_t) {
	return _1b5a872d9_traitIdent(_self_, static__1b59d41c0_traitDecl(_16628_t));;
}



inline jule::Str _1b5a87905_structure(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d060ddbd_Struct> _17128_s) {
	jule::Str _17217_rep = jule::Str();;
	if ((_17128_s.get()._field_Binded && (!(_1b5a91227_hasDirective(&(_17128_s.get()._field_Directives), jule::Str("typedef", 7)))))) {
		(_17217_rep).append("struct ", 7);
	};
	_17217_rep+=static__1b59d470e_structure(&(_17128_s));
	return _17217_rep;;
}



inline jule::Str _1b5a87c13_structureIns(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d0611bd4_StructIns> _18135_s) {
	if (_18135_s.get()._field_Decl.get()._field_Binded) {
		jule::Str _18321_ident = static__1b59d49a6_structureIns(&(_18135_s));;
		if ((_18135_s.get()._field_Generics.len() > 0LL)) {
			(_18321_ident).append("<", 1);
			{
				auto expr = &(_18135_s.get()._field_Generics);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b8499ce8:;
				if (it != expr_end) {
					jule::Ptr<_1d21d05b4_InsGeneric> _18629_g = *it;
					{
						_18321_ident+=_1b5a89693_kind(_self_, _18629_g.get()._field_Kind);
						(_18321_ident).append(",", 1);
					}
					_iter_next_1b8499ce8:;
					++it;
					goto _iter_begin_1b8499ce8;
				}
				_iter_end_1b8499ce8:;
			};
			(_18321_ident).mut_slice(0LL, (_18321_ident.len() - 1LL));;
			(_18321_ident).append(">", 1);
		};
		jule::Ptr<_1d05aba4c_Directive> _19317_d = _1b5a90d92_findDirective(&(_18135_s.get()._field_Decl.get()._field_Directives), jule::Str("namespace", 9));;
		if ((_19317_d != nullptr)) {
			(_18321_ident).buffer.insert(0, ((_1b5a8225c_concatAllParts(_19317_d.get()._field_Args) + jule::Str("::", 2))));;
		};
		return _18321_ident;;
	};
	return static__1b59d49a6_structureIns(&(_18135_s));;
}



inline jule::Str _1b5a88021_array(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21e0904_Arr> _20328_a) {
	jule::Str _20417_obj = jule::Str("jule::Array<", 12);;
	_20417_obj+=_1b5a89693_kind(_self_, _20328_a.get()._field_Elem);
	(_20417_obj).append(",", 1);
	_20417_obj+=_1e76d6159_Itoa(_20328_a.get()._field_N);
	(_20417_obj).append(">", 1);
	return _20417_obj;;
}



inline jule::Str _1b5a8863c_paramIns(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d06260a0_ParamIns>* _22932_p) {
	jule::Str _23017_obj = jule::Str();;
	if ((*(_22932_p)).get()._field_Decl.get()._field_Variadic) {
		(_23017_obj).append("jule::Slice<", 12);
		_23017_obj+=_1b5a89693_kind(_self_, (*(_22932_p)).get()._field_Kind);
		(_23017_obj).append(">", 1);
	} else {
		_23017_obj+=_1b5a89693_kind(_self_, (*(_22932_p)).get()._field_Kind);
	};
	if ((*(_22932_p)).get()._field_Decl.get()._field_Reference) {
		(_23017_obj).append("*", 1);
	};
	return _23017_obj;;
}



inline void _1b5a88c69_funcInsResult(_1b5a842d6_typeCoder* _self_, jule::Str* _25937_s, jule::Ptr<_1d0626e6e_FnIns>* _25950_f) {
	if (_1d0624730_IsVoid((*(_25950_f)).get()._field_Decl.ptr())) {
		if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
			((*(_25937_s))).append("jule::VoidExceptional", 21);
		} else {
			((*(_25937_s))).append("void", 4);
		};
		return;;
	};
	if ((*(_25950_f)).get()._field_Decl.get()._field_Exceptional) {
		((*(_25937_s))).append("jule::Exceptional<", 18);
		_1b5a8e1d1_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
		((*(_25937_s))).append(">", 1);
		return;;
	};
	_1b5a8e1d1_codeMut1((*(_self_))._field_rc.ptr(), _25937_s, &((*(_25950_f)).get()._field_Result));
}



inline jule::Str _1b5a89077_anonFunc(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d0626e6e_FnIns> _27731_f) {
	if (((_27731_f.get()._field_Result != nullptr) && (_1d21d6202_Tup(_27731_f.get()._field_Result.ptr()) != nullptr))) {
		_1b5a770ed_pushResultIns((*(_self_))._field_oc, &(_27731_f));
	};
	jule::Str _28117_decl = jule::Str();;
	_1b5a88c69_funcInsResult(_self_, &(_28117_decl), &(_27731_f));
	(_28117_decl).append("(", 1);
	if ((_27731_f.get()._field_Params.len() > 0LL)) {
		{
			auto expr = &(_27731_f.get()._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b84a7be6:;
			if (it != expr_end) {
				jule::Ptr<_1d06260a0_ParamIns> _28525_param = *it;
				{
					if (_1d06230ad_IsSelf(_28525_param.get()._field_Decl.ptr())) {
						goto _iter_next_1b84a7be6;
					};
					_28117_decl+=_1b5a8863c_paramIns(_self_, &(_28525_param));
					(_28117_decl).append(",", 1);
				}
				_iter_next_1b84a7be6:;
				++it;
				goto _iter_begin_1b84a7be6;
			}
			_iter_end_1b84a7be6:;
		};
		(_28117_decl).mut_slice(0LL, (_28117_decl.len() - 1LL));;
	} else {
		(_28117_decl).append("void", 4);
	};
	(_28117_decl).append(")", 1);
	return _28117_decl;;
}



inline jule::Str _1b5a89385_func(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d0626e6e_FnIns> _30127_f) {
	jule::Str _30217_obj = jule::Str("jule::Fn<", 9);;
	_30217_obj+=_1b5a89077_anonFunc(_self_, _30127_f);
	(_30217_obj).append(">", 1);
	return _30217_obj;;
}



inline jule::Str _1b5a89693_kind(_1b5a842d6_typeCoder* _self_, jule::Ptr<_1d21d1d46_TypeKind> _30927_k) {
	{
		
		if ((_1d21d59b5_Struct(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aa8ec:;
			{
				return _1b5a87c13_structureIns(_self_, _1d21d59b5_Struct(_30927_k.ptr()));;
			}
		}
		else if (_1d21d2b38_Binded(_30927_k.ptr())) {
			_case_begin_1b84aa974:;
			{
				return _30927_k.get()._field_BindIdent;;
			}
		}
		else if ((_1d21d4563_Prim(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aa9eb:;
			{
				return _1b5a84e41_prim(_self_, _1d21d4563_Prim(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d6202_Tup(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aaa73:;
			{
				return _1b5a8524e_tuple(_self_, _1d21d6202_Tup(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d47c7_Sptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aaaea:;
			{
				return _1b5a85b78_sptr(_self_, _1d21d47c7_Sptr(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d4a3b_Ptr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aab72:;
			{
				return _1b5a85e86_ptr(_self_, _1d21d4a3b_Ptr(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d4ca0_Enum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aabe9:;
			{
				return _1b5a86294_enumDecl(_self_, _1d21d4ca0_Enum(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d5014_TypeEnum(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aac71:;
			{
				return _1b5a865a2_typeEnumDecl(_self_, _1d21d5014_TypeEnum(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d54dc_Slc(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aace8:;
			{
				return _1b5a86bbd_slice(_self_, _1d21d54dc_Slc(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d5e8d_Map(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aad70:;
			{
				return _1b5a86ecb_mapType(_self_, _1d21d5e8d_Map(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d5c29_Trait(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aade7:;
			{
				return _1b5a875e7_traitDecl(_self_, _1d21d5c29_Trait(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d5278_Arr(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aae6e:;
			{
				return _1b5a88021_array(_self_, _1d21d5278_Arr(_30927_k.ptr()));;
			}
		}
		else if ((_1d21d5751_Fn(_30927_k.ptr()) != nullptr)) {
			_case_begin_1b84aaee6:;
			{
				return _1b5a89385_func(_self_, _1d21d5751_Fn(_30927_k.ptr()));;
			}
		}
		_match_end_1b84aa754:;
	};
	{
		auto &_match_expr{ _30927_k.get()._field_Kind };
		
		if (_match_expr.type_is(true, 27)) {
			_case_begin_1b84ab0a1:;
			{
				return _30927_k.get()._field_Kind.cast_ptr<_1b5a83868_customType>(27).get()._field_kind;;
			}
		}
		else {
			_case_begin_1b84b287c:;
			{
				return jule::Str("[<unimplemented_type_kind>]", 27);;
			}
		}
		_match_end_1b84b1b34:;
	};
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a842d6_typeCoder _Src) {
	_Stream << "typeCoder{";
	_Stream << "oc:" << _Src._field_oc << ", ";
	_Stream << "rc:" << _Src._field_rc;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5a8bd9e_resultCoder> static__1b5a8c3aa_new(jule::Ptr<_1b5a842d6_typeCoder>* _36324_tc) {
	return jule::new_ptr<_1b5a8bd9e_resultCoder>(_1b5a8bd9e_resultCoder{._field_tc=(*(_36324_tc))});;
}



inline void _1b5a8c6c9_ptr(_1b5a8bd9e_resultCoder* _self_, jule::Str* _36727_s, jule::Ptr<_1d21e1361_Ptr> _36739_p) {
	((*(_36727_s))).append("p", 1);
	_1b5a8ddb2_codeMut(_self_, _36727_s, &(_36739_p.get()._field_Elem));
}



inline void _1b5a8c9e8_sptr(_1b5a8bd9e_resultCoder* _self_, jule::Str* _37228_s, jule::Ptr<_1d21dccec_Sptr> _37240_p) {
	((*(_37228_s))).append("x", 1);
	_1b5a8ddb2_codeMut(_self_, _37228_s, &(_37240_p.get()._field_Elem));
}



inline void _1b5a8cd17_mapType(_1b5a8bd9e_resultCoder* _self_, jule::Str* _37731_s, jule::Ptr<_1d21ded10_Map> _37743_p) {
	((*(_37731_s))).append("m", 1);
	_1b5a8ddb2_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Key));
	_1b5a8ddb2_codeMut(_self_, _37731_s, &(_37743_p.get()._field_Val));
}



inline void _1b5a8d136_slice(_1b5a8bd9e_resultCoder* _self_, jule::Str* _38329_s, jule::Ptr<_1d21dd759_Slc> _38341_slc) {
	((*(_38329_s))).append("s", 1);
	_1b5a8ddb2_codeMut(_self_, _38329_s, &(_38341_slc.get()._field_Elem));
}



inline void _1b5a8d455_arr(_1b5a8bd9e_resultCoder* _self_, jule::Str* _38827_s, jule::Ptr<_1d21e0904_Arr> _38839_arr) {
	((*(_38827_s))).append("a", 1);
	(*(_38827_s))+=_1e76d5db2_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_38839_arr.get()._field_N)), 16LL);
	_1b5a8ddb2_codeMut(_self_, _38827_s, &(_38839_arr.get()._field_Elem));
}



inline void _1b5a8d774_func(_1b5a8bd9e_resultCoder* _self_, jule::Str* _39428_s, jule::Ptr<_1d0626e6e_FnIns> _39440_f) {
	((*(_39428_s))).append("f", 1);
	{
		auto expr = &(_39440_f.get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84b8641:;
		if (it != expr_end) {
			jule::Ptr<_1d06260a0_ParamIns> _39621_p = *it;
			{
				if (_39621_p.get()._field_Decl.get()._field_Reference) {
					((*(_39428_s))).append("r", 1);
				};
				_1b5a8ddb2_codeMut(_self_, _39428_s, &(_39621_p.get()._field_Kind));
			}
			_iter_next_1b84b8641:;
			++it;
			goto _iter_begin_1b84b8641;
		}
		_iter_end_1b84b8641:;
	};
	if ((_39440_f.get()._field_Result != nullptr)) {
		_1b5a8ddb2_codeMut(_self_, _39428_s, &(_39440_f.get()._field_Result));
	};
}



inline void _1b5a8da93_tup(_1b5a8bd9e_resultCoder* _self_, jule::Str* _40727_s, jule::Ptr<_1d21de2d7_Tuple> _40739_tup) {
	{
		auto expr = &(_40739_tup.get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84ba148:;
		if (it != expr_end) {
			jule::Ptr<_1d21d1d46_TypeKind> _40821_t = *it;
			{
				((*(_40727_s))).append("__jule_tuple_", 13);
				_1b5a8ddb2_codeMut(_self_, _40727_s, &(_40821_t));
			}
			_iter_next_1b84ba148:;
			++it;
			goto _iter_begin_1b84ba148;
		}
		_iter_end_1b84ba148:;
	};
}



inline void _1b5a8ddb2_codeMut(_1b5a8bd9e_resultCoder* _self_, jule::Str* _41431_s, jule::Ptr<_1d21d1d46_TypeKind>* _41444_t) {
	{
		auto &_match_expr{ (*(_41444_t)).get()._field_Kind };
		
		if (_match_expr.type_is(true, 26)) {
			_case_begin_1b84bb15a:;
			{
				_1b5a8c6c9_ptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21e1361_Ptr>(26));
			}
		}
		else if (_match_expr.type_is(true, 21)) {
			_case_begin_1b84bb4ce:;
			{
				_1b5a8c9e8_sptr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21dccec_Sptr>(21));
			}
		}
		else if (_match_expr.type_is(true, 24)) {
			_case_begin_1b84bb545:;
			{
				_1b5a8cd17_mapType(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21ded10_Map>(24));
			}
		}
		else if (_match_expr.type_is(true, 22)) {
			_case_begin_1b84bb996:;
			{
				_1b5a8d136_slice(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21dd759_Slc>(22));
			}
		}
		else if (_match_expr.type_is(true, 25)) {
			_case_begin_1b84bba0c:;
			{
				_1b5a8d455_arr(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21e0904_Arr>(25));
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b84bba73:;
			{
				_1b5a8d774_func(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d0626e6e_FnIns>(1));
			}
		}
		else if (_match_expr.type_is(true, 3)) {
			_case_begin_1b84bbad9:;
			{
				jule::Ptr<_1d214bc5b_Enum> _42917_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1d214bc5b_Enum>(3);;
				(*(_41431_s))+=static__1b59d34ee_toOut(&(_42917_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_42917_te)));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b84bbb50:;
			{
				jule::Ptr<_1d214d356_TypeEnum> _43217_te = (*(_41444_t)).get()._field_Kind.cast_ptr<_1d214d356_TypeEnum>(4);;
				(*(_41431_s))+=static__1b59d34ee_toOut(&(_43217_te.get()._field_Ident), static_cast<jule::Uintptr>(static_cast<jule::Uintptr>(_43217_te)));
			}
		}
		else if (_match_expr.type_is(true, 0)) {
			_case_begin_1b84bbbb6:;
			{
				jule::Ptr<_1d0611bd4_StructIns> _43521_si = (*(_41444_t)).get()._field_Kind.cast_ptr<_1d0611bd4_StructIns>(0);;
				(*(_41431_s))+=static__1b59d49a6_structureIns(&(_43521_si));
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b84bbc2c:;
			{
				jule::Ptr<_1d21494c8_Trait> _43821_trt = (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21494c8_Trait>(2);;
				(*(_41431_s))+=static__1b59d41c0_traitDecl(_43821_trt);
			}
		}
		else if (_match_expr.type_is(true, 20)) {
			_case_begin_1b84bbc93:;
			{
				(*(_41431_s))+=(*(_41444_t)).get()._field_Kind.cast_ptr<_1d21d9568_Prim>(20).get()._field_Kind;
			}
		}
		else if (_match_expr.type_is(true, 23)) {
			_case_begin_1b84bbd09:;
			{
				_1b5a8da93_tup(_self_, _41431_s, (*(_41444_t)).get()._field_Kind.cast_ptr<_1d21de2d7_Tuple>(23));
			}
		}
		else {
			_case_begin_1b84bb347:;
			{
				jule::panic(jule::Str("this panic call should be unreachable", 37) + jule::Str("\nlocation: julec/obj/cxx/type.jule:445:13"));;
			}
		}
		_match_end_1b84bb2e2:;
	};
}



inline void _1b5a8e1d1_codeMut1(_1b5a8bd9e_resultCoder* _self_, jule::Str* _44932_s, jule::Ptr<_1d21d1d46_TypeKind>* _44945_t) {
	jule::Ptr<_1d21de2d7_Tuple> _45017_tup = _1d21d6202_Tup((*(_44945_t)).ptr());;
	if ((_45017_tup != nullptr)) {
		_1b5a8da93_tup(_self_, _44932_s, _45017_tup);
	} else {
		(*(_44932_s))+=_1b5a89693_kind((*(_self_))._field_tc.ptr(), (*(_44945_t)));
	};
}



inline jule::Str _1b5a8e4ab_code(_1b5a8bd9e_resultCoder* _self_, jule::Ptr<_1d21d1d46_TypeKind>* _45828_t) {
	jule::Str _45917_s = jule::Str::alloc(0LL, 20LL);;
	_1b5a8ddb2_codeMut(_self_, &(_45917_s), _45828_t);
	return _45917_s;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a8bd9e_resultCoder _Src) {
	_Stream << "resultCoder{";
	_Stream << "tc:" << _Src._field_tc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1b84c6363_Name(_1b84c6077_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b84c6495_What(_1b84c6077_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b84c65c7_Reset(_1b84c6077_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b84c6709_Short(_1b84c6077_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b84c6077_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b84c9597_Name(_1b84c9a09_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b84c9ce5_What(_1b84c9a09_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b84c9e27_Reset(_1b84c9a09_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b84ca059_Short(_1b84c9a09_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b84c9a09_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b84ccc4e_Name(_1b84cd1b1_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b84cd49c_What(_1b84cd1b1_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b84cd5ce_Reset(_1b84cd1b1_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b84cd711_Short(_1b84cd1b1_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b84cd1b1_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b84d144a_Name(_1b84d18ac_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b84d1b98_What(_1b84d18ac_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b84d1cca_Reset(_1b84d18ac_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b84d1e0c_Short(_1b84d18ac_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b84d18ac_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}

inline jule::Str _1b84d4b02_Name(_1b84d5064_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1b84d5350_What(_1b84d5064_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1b84d5482_Reset(_1b84d5064_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1b84d55b4_Short(_1b84d5064_Flag* _self_) {
	return (*(_self_))._field_short;;
}







std::ostream &operator<<(std::ostream &_Stream, _1b84d5064_Flag _Src) {
	_Stream << "Flag{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "short:" << _Src._field_short << ", ";
	_Stream << "default:" << _Src._field_default << ", ";
	_Stream << "what:" << _Src._field_what << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d2a66642_FlagSet> static__1d2a6692d_New(void) {
	return jule::new_ptr<_1d2a66642_FlagSet>(_1d2a66642_FlagSet{._field_flags=jule::Slice<jule::Trait<_1d2a64b90_CommonFlag>>::alloc(0LL, 20LL)});;
}



inline jule::Trait<_1d2a64b90_CommonFlag> _1d2a66db2_FindFlag(_1d2a66642_FlagSet* _self_, jule::Str _7127_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84e4d98:;
		if (it != expr_end) {
			jule::Trait<_1d2a64b90_CommonFlag> _7221_flag = *it;
			{
				if ((_1d2a64b90_CommonFlag_mptr_data[(_7221_flag).type_offset]._1d2a34e7e_Name(_7221_flag) == _7127_name)) {
					return _7221_flag;;
				};
			}
			_iter_next_1b84e4d98:;
			++it;
			goto _iter_begin_1b84e4d98;
		}
		_iter_end_1b84e4d98:;
	};
	return nullptr;;
}



inline jule::Trait<_1d2a64b90_CommonFlag> _1d2a671c0_FindFlagShort(_1d2a66642_FlagSet* _self_, jule::I32 _8132_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84e5c9a:;
		if (it != expr_end) {
			jule::Trait<_1d2a64b90_CommonFlag> _8221_flag = *it;
			{
				if ((_1d2a64b90_CommonFlag_mptr_data[(_8221_flag).type_offset]._1d2a3516b_Short(_8221_flag) == _8132_name)) {
					return _8221_flag;;
				};
			}
			_iter_next_1b84e5c9a:;
			++it;
			goto _iter_begin_1b84e5c9a;
		}
		_iter_end_1b84e5c9a:;
	};
	return nullptr;;
}



inline jule::Slice<jule::Trait<_1d2a64b90_CommonFlag>> _1d2a67434_Flags(_1d2a66642_FlagSet* _self_) {
	return (*(_self_))._field_flags;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1b5a922a0_Parse(_1d2a66642_FlagSet* _self_, jule::Slice<jule::Str> _11524_args) {
	_1b5a936d0_argParser _11617_ap = _1b5a936d0_argParser{._field_set=(*(_self_)), ._field_args=_11524_args, };;
	({
		auto except = _1b5a94b10_parse(&_11617_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>(except.error);
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>(jule::Any(), _11617_ap._field_content);;
}



inline void _1b5a92536_Reset(_1d2a66642_FlagSet* _self_) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84e81ed:;
		if (it != expr_end) {
			jule::Trait<_1d2a64b90_CommonFlag> _12616_f = *it;
			{
				_1d2a64b90_CommonFlag_mptr_data[(_12616_f).type_offset]._1d2a64a4c_Reset(_12616_f);
			}
			_iter_next_1b84e81ed:;
			++it;
			goto _iter_begin_1b84e81ed;
		}
		_iter_end_1b84e81ed:;
	};
}



inline jule::Ptr<_1b84d5064_Flag> _1b854d286_addFlagCommon(_1d2a66642_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b854e85e:;
			{
				goto _match_end_1b854e809;
			}
		}
		_match_end_1b854e809:;
	};
	if ((_1d2a66db2_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1d2a671c0_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b84d5064_Flag> _14817_flag = jule::new_ptr<_1b84d5064_Flag>(_1b84d5064_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1d2a64b90_CommonFlag>(_14817_flag, 4));;
	return _14817_flag;;
}

inline jule::Ptr<_1b84d18ac_Flag> _1b85560c4_addFlagCommon(_1d2a66642_FlagSet* _self_, jule::Str _13135_name, jule::I32 _13146_short, jule::Str _13159_what) {
	{
		
{
			_case_begin_1b8557647:;
			{
				goto _match_end_1b855759d;
			}
		}
		_match_end_1b855759d:;
	};
	if ((_1d2a66db2_FindFlag(_self_, _13135_name) != nullptr)) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this name: ", 63) + _13135_name) + jule::Str("\nlocation: std/flag/flag.jule:141:13"));;
	};
	if (((_13146_short != 0LL) && (_1d2a671c0_FindFlagShort(_self_, _13146_short) != nullptr))) {
		jule::panic((jule::Str("std::flag: FlagSet.Add[T]: flag is already exist in this short name: ", 69) + jule::Str::from_rune(_13146_short)) + jule::Str("\nlocation: std/flag/flag.jule:145:13"));;
	};
	jule::Ptr<_1b84d18ac_Flag> _14817_flag = jule::new_ptr<_1b84d18ac_Flag>(_1b84d18ac_Flag{._field_name=_13135_name, ._field_short=_13146_short, ._field_what=_13159_what, });;
	(*(_self_))._field_flags = jule::alloc_for_append((*(_self_))._field_flags,1);(*(_self_))._field_flags.__push(jule::Trait<_1d2a64b90_CommonFlag>(_14817_flag, 3));;
	return _14817_flag;;
}



inline void _1b854b1b8_AddVar(_1d2a66642_FlagSet* _self_, jule::Ptr<jule::Str> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b84d5064_Flag> _17617_flag = _1b854d286_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}

inline void _1b855406c_AddVar(_1d2a66642_FlagSet* _self_, jule::Ptr<jule::Bool> _17532_var, jule::Str _17541_name, jule::I32 _17552_short, jule::Str _17565_what) {
	jule::Ptr<_1b84d18ac_Flag> _17617_flag = _1b85560c4_addFlagCommon(_self_, _17541_name, _17552_short, _17565_what);;
	_17617_flag.get()._field_default=(*(_17532_var));
	_17617_flag.get()._field_data=_17532_var;
}







std::ostream &operator<<(std::ostream &_Stream, _1d2a66642_FlagSet _Src) {
	_Stream << "FlagSet{";
	_Stream << "flags:" << _Src._field_flags;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_i64__jule_tuple_bool _1b84ec6db_parseInteger(_1b5a936d0_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b8500249:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22b99a95b_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b850059b:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22b99a95b_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b85006bc:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22b99a95b_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b8500865:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b85008cb:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b84eeda3:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b84eecd7:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1b8504c43_parseInteger(_1b5a936d0_argParser* _self_, jule::Str* _19031_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)> _19039_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((*(_19031_s)).empty()) {
			_case_begin_1b850775c:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_22b99a95b_HasPrefix((*(_19031_s)), jule::Str("0x", 2))) {
			_case_begin_1b8507aae:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22b99a95b_HasPrefix((*(_19031_s)), jule::Str("0b", 2))) {
			_case_begin_1b8507bd0:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_22b99a95b_HasPrefix((*(_19031_s)), jule::Str("0o", 2))) {
			_case_begin_1b8507d78:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_19031_s))[0LL] == '0')) {
			_case_begin_1b8507dde:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1b85073b6:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _19039_parser((*(_19031_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1b85072ea:;
	};
	return __jule_func_result;;
}



inline jule::Str _1b5a93ed8_getData(_1b5a936d0_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1b5a9425d_processFlag(_1b5a936d0_argParser* _self_, jule::Trait<_1d2a64b90_CommonFlag>* _21735_flag) {
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 3)) {
			_case_begin_1b84e9c05:;
			{
				jule::Ptr<_1b84d18ac_Flag> _22021_bf = (*(_21735_flag)).cast_ptr<_1b84d18ac_Flag>(3);;
				(*(_22021_bf.get()._field_data))=(!(_22021_bf.get()._field_default));
				return jule::VoidExceptional();;
			}
		}
		_match_end_1b84e9b8e:;
	};
	jule::Str _22513_data = _1b5a93ed8_getData(_self_);;
	if (_22513_data.empty()) {
		return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1d2a64b90_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1d2a34e7e_Name((*(_21735_flag)))) + jule::Str(": expression missing", 20)), &__jule_any_type5));
	};
	{
		auto &_match_expr{ (*(_21735_flag)) };
		
		if (_match_expr.type_is(true, 0)) {
			_case_begin_1b84eb1ac:;
			{
				jule::Ptr<_1b84c6077_Flag> _23221_intf = (*(_21735_flag)).cast_ptr<_1b84c6077_Flag>(0);;
				jule::Bool _23332_ok = false;;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1b84ec6db_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_i64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _23370_s, jule::I64 _23378_base) mutable -> __jule_tuple_i64__jule_tuple_bool {
						__jule_tuple_i64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::I64>(({
							auto except = _1e76c5544_ParseInt(_23370_s, _23378_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LL;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_23221_intf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23332_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23332_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1d2a64b90_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1d2a34e7e_Name((*(_21735_flag)))) + jule::Str(": expression must be valid signed integer", 41)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 1)) {
			_case_begin_1b84eb960:;
			{
				jule::Ptr<_1b84c9a09_Flag> _24021_uintf = (*(_21735_flag)).cast_ptr<_1b84c9a09_Flag>(1);;
				jule::Bool _24133_ok = false;;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1b8504c43_parseInteger(_self_, &(_22513_data), jule::Fn<__jule_tuple_u64__jule_tuple_bool(jule::Str,jule::I64)>([=](jule::Str _24171_s, jule::I64 _24179_base) mutable -> __jule_tuple_u64__jule_tuple_bool {
						__jule_tuple_u64__jule_tuple_bool __jule_func_result;
						__jule_func_result.__jule_result_arg0 = 0;
						__jule_func_result.__jule_result_arg1 = false;
						__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(({
							auto except = _1e76c50d2_ParseUint(_24171_s, _24179_base, 64LL);
							(except.ok()) ? (except.result) : ({{
								__jule_func_result.__jule_result_arg0 = 0LLU;
								__jule_func_result.__jule_result_arg1 = false;
								return __jule_func_result;;
							} 0;});
						}));
						__jule_func_result.__jule_result_arg1 = true;
						return __jule_func_result;;
					}));
					(*(_24021_uintf.get()._field_data)) = __jule_assign_result.__jule_result_arg0;
					_24133_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_24133_ok))) {
					return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1d2a64b90_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1d2a34e7e_Name((*(_21735_flag)))) + jule::Str(": expression must be valid unsigned integer", 43)), &__jule_any_type5));
				};
			}
		}
		else if (_match_expr.type_is(true, 2)) {
			_case_begin_1b84eb9c6:;
			{
				jule::Ptr<_1b84cd1b1_Flag> _24821_ff = (*(_21735_flag)).cast_ptr<_1b84cd1b1_Flag>(2);;
				(*(_24821_ff.get()._field_data))=static_cast<jule::F64>(({
					auto except = _1e76cba34_ParseFloat(_22513_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional(jule::Any(((jule::Str("--", 2) + _1d2a64b90_CommonFlag_mptr_data[((*(_21735_flag))).type_offset]._1d2a34e7e_Name((*(_21735_flag)))) + jule::Str(": expression must be valid floating-point", 41)), &__jule_any_type5));
					} 0;});
				}));
			}
		}
		else if (_match_expr.type_is(true, 4)) {
			_case_begin_1b84eba3c:;
			{
				(*((*(_21735_flag)).cast_ptr<_1b84d5064_Flag>(4).get()._field_data))=_22513_data;
			}
		}
		_match_end_1b84eb90a:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b5a944d3_singleDash(_1b5a936d0_argParser* _self_, jule::Str* _25730_arg) {
	if (((*(_25730_arg)).len() == 1LL)) {
		return jule::VoidExceptional(jule::Any(((*(_25730_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Slice<jule::I32> _26113_rarg = static_cast<jule::Slice<jule::I32>>((*(_25730_arg))).slice(1LL);;
	{
		auto expr = &(_26113_rarg);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b850e038:;
		if (it != expr_end) {
			jule::I32 *_26216_r = it;
			{
				jule::Trait<_1d2a64b90_CommonFlag> _26321_flag = _1d2a671c0_FindFlagShort(&(*(_self_))._field_set, (*(_26216_r)));;
				if ((_26321_flag == nullptr)) {
					return jule::VoidExceptional(jule::Any((((*(_25730_arg)) + jule::Str(": flag is not exist: ", 21)) + jule::Str::from_rune((*(_26216_r)))), &__jule_any_type5));
				};
				({
					auto except = _1b5a9425d_processFlag(_self_, &(_26321_flag));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
			}
			_iter_next_1b850e038:;
			++it;
			goto _iter_begin_1b850e038;
		}
		_iter_end_1b850e038:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b5a94758_doubleDash(_1b5a936d0_argParser* _self_, jule::Str* _27230_arg) {
	if (((*(_27230_arg)).len() == 2LL)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": missing argument", 18)), &__jule_any_type5));
	};
	jule::Trait<_1d2a64b90_CommonFlag> _27617_flag = _1d2a66db2_FindFlag(&(*(_self_))._field_set, (*(_27230_arg)).slice(2LL));;
	if ((_27617_flag == nullptr)) {
		return jule::VoidExceptional(jule::Any(((*(_27230_arg)) + jule::Str(": flag is not exist", 19)), &__jule_any_type5));
	};
	({
		auto except = _1b5a9425d_processFlag(_self_, &(_27617_flag));
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b5a94934_tryArg(_1b5a936d0_argParser* _self_) {
	jule::Str _28413_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional();;
	};
	if ((_28413_arg[0LL] == '-')) {
		if (((_28413_arg.len() > 1LL) && (_28413_arg[1LL] == '-'))) {
			({
				auto except = _1b5a94758_doubleDash(_self_, &(_28413_arg));
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
			return jule::VoidExceptional();;
		};
		({
			auto except = _1b5a944d3_singleDash(_self_, &(_28413_arg));
			if (!except.ok()) {
				return jule::VoidExceptional(except.error);
			}
		});
		return jule::VoidExceptional();;
	};
	(*(_self_))._field_content = jule::alloc_for_append((*(_self_))._field_content,1);(*(_self_))._field_content.__push(_28413_arg);;
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _1b5a94b10_parse(_1b5a936d0_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1b5a94934_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional(except.error);
				}
			});
		}
	_iter_next_1b85139dd:;
	}
	_iter_end_1b85139dd:;;
	return jule::VoidExceptional();
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a936d0_argParser _Src) {
	_Stream << "argParser{";
	_Stream << "set:" << _Src._field_set << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "content:" << _Src._field_content << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1b5a75a36_ObjectCoder> static__1b5a75e54_New(jule::Ptr<_1d2621e34_IR>* _9224_ir, _1b5a74194_SerializationInfo _9233_info) {
	jule::Ptr<_1b5a75a36_ObjectCoder> _9317_oc = jule::new_ptr<_1b5a75a36_ObjectCoder>(_1b5a75a36_ObjectCoder{._field_ir=(*(_9224_ir)), ._field_info=_9233_info, });;
	_9317_oc.get()._field_ec=static__1b570374c_new(&(_9317_oc));
	_9317_oc.get()._field_sc=static__1b56ea546_new(&(_9317_oc));
	_9317_oc.get()._field_tc=static__1b5a84825_new(&(_9317_oc));
	_9317_oc.get()._field_dc=static__1b5712ecb_new(_9317_oc);
	return _9317_oc;;
}



inline void _1b5a761c9_write(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Str _10425_s) {
	_self_.get()._field_Obj+=_10425_s;
}



inline void _1b5a763a5_addIndent(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	(_self_.get()._field_indentBuffer).append("\t", 1);
}



inline void _1b5a76581_doneIndent(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_self_.get()._field_indentBuffer=_self_.get()._field_indentBuffer.slice(0LL, (_self_.get()._field_indentBuffer.len() - 1LL));
}



inline void _1b5a7675c_indent(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_self_.get()._field_Obj+=_self_.get()._field_indentBuffer;
}



inline jule::I64 _1b5a76a6a_findAnyType(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21d1d46_TypeKind>* _12336_t) {
	{
		auto expr = &(_self_.get()._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83a1749:;
		if (it != expr_end) {
			jule::I64 _12414_i = it - expr->begin();
			jule::Ptr<_1d21d1d46_TypeKind> _12421_at = *it;
			{
				if (_1d21d2550_Equal(_12421_at, (*(_12336_t)))) {
					return _12414_i;;
				};
			}
			_iter_next_1b83a1749:;
			++it;
			_12414_i++;
			goto _iter_begin_1b83a1749;
		}
		_iter_end_1b83a1749:;
	};
	return -1LL;;
}



inline jule::I64 _1b5a76d78_pushAnyType(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21d1d46_TypeKind> _13235_t) {
	if ((_1d21d4ca0_Enum(_13235_t.ptr()) != nullptr)) {
		_13235_t=_1d21d4ca0_Enum(_13235_t.ptr()).get()._field_Kind.get()._field_Kind;
	};
	jule::I64 _13617_i = _1b5a76a6a_findAnyType(_self_, &(_13235_t));;
	if ((_13617_i != -1LL)) {
		return _13617_i;;
	};
	_13617_i=static_cast<jule::I64>(_self_.get()._field_anyTypeMap.len());
	_self_.get()._field_anyTypeMap = jule::alloc_for_append(_self_.get()._field_anyTypeMap,1);_self_.get()._field_anyTypeMap.__push(_13235_t);;
	jule::Str _14213_si = _1e76d6159_Itoa(_13617_i);;
	if ((_1d21d47c7_Sptr(_13235_t.ptr()) != nullptr)) {
		jule::Str _14417_elem_kind = _1b5a89693_kind(_self_.get()._field_tc.ptr(), _1d21d47c7_Sptr(_13235_t.ptr()).get()._field_Elem);;
		jule::Str _14517_kind = _1b5a8555c_asSptr(_self_.get()._field_tc.ptr(), _14417_elem_kind);;
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_14417_elem_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc, .eq=jule::ptr_equal, .to_str=jule::ptr_to_str};\n", 58);
		(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
		_self_.get()._field_anyObj+=_14517_kind;
		(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append(" && jule::ptr_equal(any.data.alloc, other.alloc); }\n", 52);
	} else {
		jule::Bool _17117_comparable = _1d21d3375_Comparable(_13235_t.ptr());;
		jule::Str _17217_kind = _1b5a89693_kind(_self_.get()._field_tc.ptr(), _13235_t);;
		if (_17217_kind.equal("[<unimplemented_type_kind>]", 27)) {
			jule::outln(_1d21d2242_Str(_13235_t.ptr()));
		};
		(_self_.get()._field_anyObj).append("void __jule_any_type", 20);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 64);
		_self_.get()._field_anyObj+=_17217_kind;
		(_self_.get()._field_anyObj).append(">().dealloc(); }\n", 17);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq(void *alloc, void *other) noexcept { return *reinterpret_cast<", 66);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("*>(alloc) == *reinterpret_cast<", 31);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("*>(other); }\n", 13);
		};
		(_self_.get()._field_anyObj).append("jule::Str __jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_to_str(const void *alloc) noexcept { return jule::to_str(*reinterpret_cast<", 76);
		if ((_1d21d4a3b_Ptr(_13235_t.ptr()) == nullptr)) {
			(_self_.get()._field_anyObj).append("const ", 6);
			_self_.get()._field_anyObj+=_17217_kind;
		} else {
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append("* const", 7);
		};
		(_self_.get()._field_anyObj).append("*>(alloc)); }\n", 14);
		(_self_.get()._field_anyObj).append("struct jule::Any::Type ", 23);
		(_self_.get()._field_anyObj).append("__jule_any_type", 15);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("{.dealloc=__jule_any_type", 25);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_dealloc, ", 10);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append(".eq=__jule_any_type", 19);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq, ", 5);
		};
		(_self_.get()._field_anyObj).append(".to_str=__jule_any_type", 23);
		_self_.get()._field_anyObj+=_14213_si;
		(_self_.get()._field_anyObj).append("_to_str};\n", 10);
		if (_17117_comparable) {
			(_self_.get()._field_anyObj).append("jule::Bool __jule_any_type", 26);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_compare(const jule::Any &any, const ", 37);
			_self_.get()._field_anyObj+=_17217_kind;
			(_self_.get()._field_anyObj).append(" &other) { return any.type == &__jule_any_type", 46);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append(" && __jule_any_type", 19);
			_self_.get()._field_anyObj+=_14213_si;
			(_self_.get()._field_anyObj).append("_eq(any.data.alloc, (void*)&other); }\n", 38);
		};
	};
	return _13617_i;;
}



inline void _1b5a770ed_pushResultIns(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0626e6e_FnIns>* _24038_f) {
	jule::Str _24113_s = _1b5a8e4ab_code(_self_.get()._field_tc.get()._field_rc.ptr(), &((*(_24038_f)).get()._field_Result));;
	jule::Bool _24217_ok = false;;
	_self_.get()._field_resultMap.lookup(_24113_s, nullptr, &(_24217_ok));
	if (_24217_ok) {
		return;;
	};
	_self_.get()._field_resultMap[_24113_s]=false;
	jule::Str _24717_obj = jule::Str::alloc(0LL, 128LL);;
	(_24717_obj).append("struct ", 7);
	_24717_obj+=_24113_s;
	(_24717_obj).append(" {\n", 3);
	{
		auto expr = &(_1d21d6202_Tup((*(_24038_f)).get()._field_Result.ptr()).get()._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83b3ccd:;
		if (it != expr_end) {
			jule::I64 _25114_i = it - expr->begin();
			jule::Ptr<_1d21d1d46_TypeKind> _25121_t = *it;
			{
				(_24717_obj).append("\t", 1);
				_24717_obj+=_1b5a89693_kind(_self_.get()._field_tc.ptr(), _25121_t);
				(_24717_obj).append(" ", 1);
				(_24717_obj).append("__jule_result_arg", 17);
				_24717_obj+=_1e76d6159_Itoa(_25114_i);
				(_24717_obj).append(";\n", 2);
			}
			_iter_next_1b83b3ccd:;
			++it;
			_25114_i++;
			goto _iter_begin_1b83b3ccd;
		}
		_iter_end_1b83b3ccd:;
	};
	(_24717_obj).append("};\n", 3);
	_self_.get()._field_resultDecls = jule::alloc_for_append(_self_.get()._field_resultDecls,1);_self_.get()._field_resultDecls.__push(_24717_obj);;
}



inline void _1b5a77373_pushResult(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d06242bd_Fn>* _26335_f) {
	if ((_1d0624730_IsVoid((*(_26335_f)).ptr()) || ((*(_26335_f)).get()._field_Result.get()._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I64 _26717_n = (*(_26335_f)).get()._field_Instances.len();;
	if (((*(_26335_f)).get()._field_Generics.len() == 0LL)) {
		_26717_n=1LL;
	};
	{
		auto expr = (*(_26335_f)).get()._field_Instances.slice(0LL, _26717_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b83b74da:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _27121_ins = *it;
			{
				_1b5a770ed_pushResultIns(_self_, &(_27121_ins));
			}
			_iter_next_1b83b74da:;
			++it;
			goto _iter_begin_1b83b74da;
		}
		_iter_end_1b83b74da:;
	};
}



inline jule::I64 _1b5a7772a_findTypeOffsetS(_1b5a75a36_ObjectCoder* _self_, jule::Ptr<_1d21494c8_Trait> _27630_t, jule::Ptr<_1d0611bd4_StructIns> _27645_s) {
	if ((_27630_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	{
		auto expr = &((*(_self_))._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83b8b07:;
		if (it != expr_end) {
			jule::Ptr<_1b5a7465b_traitHash> *_28016_hash = it;
			{
				if ((((*(_28016_hash)).get()._field_t == _27630_t) && ((*(_28016_hash)).get()._field_s == _27645_s))) {
					return (*(_28016_hash)).get()._field_i;;
				};
			}
			_iter_next_1b83b8b07:;
			++it;
			goto _iter_begin_1b83b8b07;
		}
		_iter_end_1b83b8b07:;
	};
	return -1LL;;
}



inline jule::I64 _1b5a77ad2_findTypeOffset(_1b5a75a36_ObjectCoder* _self_, jule::Ptr<_1d21494c8_Trait> _28829_t, jule::Ptr<_1d21d1d46_TypeKind> _28844_k) {
	if ((_28829_t.get()._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1d0611bd4_StructIns> _29217_s = nullptr;;
	if ((_1d21d47c7_Sptr(_28844_k.ptr()) != nullptr)) {
		_28844_k=_1d21d47c7_Sptr(_28844_k.ptr()).get()._field_Elem;
	};
	_29217_s=_1d21d59b5_Struct(_28844_k.ptr());
	if ((_29217_s == nullptr)) {
		return -1LL;;
	};
	return static_cast<jule::I64>(_1b5a7772a_findTypeOffsetS(_self_, _28829_t, _29217_s));;
}



inline void _1b5a77e01_pushAndWriteMaskMapper(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21494c8_Trait> _30346_t1, jule::Ptr<_1d21494c8_Trait> _30362_t2) {
	jule::Str _30417_ident = jule::Str("__jule_trait_offset_mapper_", 27);;
	_30417_ident+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30362_t2))), 15LL);
	(_30417_ident).append("_to_", 4);
	_30417_ident+=_1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::Uintptr>(_30346_t1))), 15LL);
	_1b5a761c9_write(_self_, _30417_ident);
	{
		auto expr = &(_self_.get()._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83bd5e0:;
		if (it != expr_end) {
			_1b5a74a13_traitCast _31116_m = *it;
			{
				if (((_31116_m._field_t1 == _30346_t1) && (_31116_m._field_t2 == _30362_t2))) {
					return;;
				};
			}
			_iter_next_1b83bd5e0:;
			++it;
			goto _iter_begin_1b83bd5e0;
		}
		_iter_end_1b83bd5e0:;
	};
	_self_.get()._field_traitCastMap = jule::alloc_for_append(_self_.get()._field_traitCastMap,1);_self_.get()._field_traitCastMap.__push(_1b5a74a13_traitCast{._field_t1=_30346_t1, ._field_t2=_30362_t2});;
	;
	(_self_.get()._field_anyObj).append("jule::Int", 9);
	(_self_.get()._field_anyObj).append(" ", 1);
	_self_.get()._field_anyObj+=_30417_ident;
	(_self_.get()._field_anyObj).append("(const jule::Int offset) noexcept { ", 36);
	{
		auto expr = &(_30346_t1.get()._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83c0191:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _33021_s1 = *it;
			{
				{
					auto expr = &(_30362_t2.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b83c0bca:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> _33120_s2 = *it;
						{
							if ((_33021_s1 == _33120_s2)) {
								{
									auto expr = &(_33021_s1.get()._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1b83c1934:;
									if (it != expr_end) {
										jule::Ptr<_1d0611bd4_StructIns> _33333_s1i = *it;
										{
											jule::I64 _33429_i1 = _1b5a7772a_findTypeOffsetS(_self_.ptr(), _30346_t1, _33333_s1i);;
											jule::I64 _33529_i2 = _1b5a7772a_findTypeOffsetS(_self_.ptr(), _30362_t2, _33333_s1i);;
											(_self_.get()._field_anyObj).append("if (offset == ", 14);
											_self_.get()._field_anyObj+=_1e76d6159_Itoa(_33529_i2);
											(_self_.get()._field_anyObj).append(") return ", 9);
											_self_.get()._field_anyObj+=_1e76d6159_Itoa(_33429_i1);
											(_self_.get()._field_anyObj).append("; ", 2);
										}
										_iter_next_1b83c1934:;
										++it;
										goto _iter_begin_1b83c1934;
									}
									_iter_end_1b83c1934:;
								};
							};
						}
						_iter_next_1b83c0bca:;
						++it;
						goto _iter_begin_1b83c0bca;
					}
					_iter_end_1b83c0bca:;
				};
			}
			_iter_next_1b83c0191:;
			++it;
			goto _iter_begin_1b83c0191;
		}
		_iter_end_1b83c0191:;
	};
	(_self_.get()._field_anyObj).append(" return ", 8);
	_self_.get()._field_anyObj+=_1e76d6159_Itoa(0LL);
	(_self_.get()._field_anyObj).append("; }\n", 4);
}



inline void _1b5a78176_locInfo(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_22be1281d_Token>* _35128_t) {
	jule::Str *_35214_loc = &((*(_35128_t)).get()._field_File.get()._field_Path);;
	if (_229913002_Production) {
		{
			
			if (_22b99a95b_HasPrefix((*(_35214_loc)), _22bb20cac_PathStdlib)) {
				_case_begin_1b83c4d22:;
				{
					_1b5a761c9_write(_self_, _1b5710c32_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)).slice((_22b9a633a_Dir(_22bb20cac_PathStdlib).len() + 1LL)))));
				}
			}
			else if (_22b99a95b_HasPrefix((*(_35214_loc)), _self_.get()._field_ir.get()._field_Root)) {
				_case_begin_1b83c53d8:;
				{
					_1b5a761c9_write(_self_, _1b5710c32_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)).slice((_22b9a633a_Dir(_self_.get()._field_ir.get()._field_Root).len() + 1LL)))));
				}
			}
			else {
				_case_begin_1b83c497b:;
				{
					_1b5a761c9_write(_self_, _1b5710c32_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)))));
				}
			}
			_match_end_1b83c48b0:;
		};
	} else {
		_1b5a761c9_write(_self_, _1b5710c32_cstrBytes(static_cast<jule::Slice<jule::U8>>((*(_35214_loc)))));
	};
	_1b5a761c9_write(_self_, jule::Str(":", 1));
	_1b5a761c9_write(_self_, _1e76d6159_Itoa((*(_35128_t)).get()._field_Row));
	_1b5a761c9_write(_self_, jule::Str(":", 1));
	_1b5a761c9_write(_self_, _1e76d6159_Itoa((*(_35128_t)).get()._field_Column));
}



inline void _1b5a78352_head(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a6b9a5_Time _37813_time = static__1b5a6c049_Now();;
	_1b5a6b312_AbsTime _37913_abs = _1b5a6d688_Abs(&_37813_time);;
	_1b5a761c9_write(_self_, jule::Str("// Auto generated by JuleC.\n", 28));
	_1b5a761c9_write(_self_, jule::Str("// JuleC version: ", 18));
	_1b5a761c9_write(_self_, jule::Str("jule0.0.15 @master", 18));
	_1b5a761c9_write(_self_, jule::Str("\n", 1));
	_1b5a761c9_write(_self_, jule::Str("// Date: ", 9));
	_1b5a761c9_write(_self_, _1e76d5a2c_FmtUint(_37913_abs._field_Day, 10LL));
	_1b5a761c9_write(_self_, jule::Str("/", 1));
	_1b5a761c9_write(_self_, _1e76d5a2c_FmtUint(_37913_abs._field_Month, 10LL));
	_1b5a761c9_write(_self_, jule::Str("/", 1));
	_1b5a761c9_write(_self_, _1e76d5a2c_FmtUint(_37913_abs._field_Year, 10LL));
	_1b5a761c9_write(_self_, jule::Str(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1b5a761c9_write(_self_, _self_.get()._field_info._field_Compiler);
	_1b5a761c9_write(_self_, jule::Str(" ", 1));
	_1b5a761c9_write(_self_, _self_.get()._field_info._field_CompilerCommand);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	if (_229913002_Production) {
		_1b5a761c9_write(_self_, jule::Str("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_22991285e_RC))) {
		_1b5a761c9_write(_self_, jule::Str("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_229912c38_Safety))) {
		_1b5a761c9_write(_self_, jule::Str("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1b5a7852d_links(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n\n#include \"", 12));
	_1b5a761c9_write(_self_, _22bb21593_PathApi);
	_1b5a761c9_write(_self_, jule::Str("\"\n\n", 3));
}



inline void _1b5a7852d_links(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83ce2e3:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _41616_used = *it;
			{
				{
					
					if ((!(_41616_used.get()._field_Binded))) {
						_case_begin_1b83cec83:;
						{
							goto _iter_next_1b83ce2e3;
						}
					}
					else if (_22ba2eb99_IsStdHeaderPath(_41616_used.get()._field_Path)) {
						_case_begin_1b83ced0a:;
						{
							_1b5a761c9_write(_self_, jule::Str("#include ", 9));
							_1b5a761c9_write(_self_, _41616_used.get()._field_Path);
							_1b5a761c9_write(_self_, jule::Str("\n", 1));
						}
					}
					else if (_22ba2ee52_IsValidHeaderExt(_22b9a5977_Ext(_41616_used.get()._field_Path))) {
						_case_begin_1b83ced82:;
						{
							_1b5a761c9_write(_self_, jule::Str("#include \"", 10));
							_1b5a761c9_write(_self_, _41616_used.get()._field_Path);
							_1b5a761c9_write(_self_, jule::Str("\"\n", 2));
						}
					}
					_match_end_1b83ceb62:;
				};
			}
			_iter_next_1b83ce2e3:;
			++it;
			goto _iter_begin_1b83ce2e3;
		}
		_iter_end_1b83ce2e3:;
	};
}



inline void _1b5a787a3_prepareStructure(_1b5a75a36_ObjectCoder* _self_, jule::Ptr<_1d060ddbd_Struct>* _43240_s) {
	{
		auto expr = &((*(_43240_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83d156a:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _43321_ins = *it;
			{
				{
					auto expr = &(_43321_ins.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b83d2802:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _43425_m = *it;
						{
							if (_43425_m.get()._field_Statically) {
								goto _iter_next_1b83d2802;
							};
							{
								auto expr = &(_43425_m.get()._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b83d355b:;
								if (it != expr_end) {
									jule::Ptr<_1d0626e6e_FnIns> _43829_mins = *it;
									{
										jule::Ptr<_1d06260a0_ParamIns> _43929_p = _43829_mins.get()._field_Params[0LL];;
										if ((!(_1d0623322_IsRef(_43929_p.get()._field_Decl.ptr())))) {
											_43929_p.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1b5a83868_customType>(_1b5a83868_customType{._field_kind=_1b5a8586a_asPtr((*(_self_))._field_tc.ptr(), _1b5a89693_kind((*(_self_))._field_tc.ptr(), _43929_p.get()._field_Kind))}), 27)});
										} else {
											_43929_p.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1b5a83868_customType>(_1b5a83868_customType{._field_kind=_1b5a89693_kind((*(_self_))._field_tc.ptr(), _43929_p.get()._field_Kind)}), 27)});
										};
									}
									_iter_next_1b83d355b:;
									++it;
									goto _iter_begin_1b83d355b;
								}
								_iter_end_1b83d355b:;
							};
						}
						_iter_next_1b83d2802:;
						++it;
						goto _iter_begin_1b83d2802;
					}
					_iter_end_1b83d2802:;
				};
			}
			_iter_next_1b83d156a:;
			++it;
			goto _iter_begin_1b83d156a;
		}
		_iter_end_1b83d156a:;
	};
}



inline void _1b5a7897e_prepareStructures(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83ce9ca:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _45921_s = *it;
			{
				if ((_45921_s.get()._field_Token != nullptr)) {
					_1b5a787a3_prepareStructure(_self_.ptr(), &(_45921_s));
				};
			}
			_iter_next_1b83ce9ca:;
			++it;
			goto _iter_begin_1b83ce9ca;
		}
		_iter_end_1b83ce9ca:;
	};
}



inline void _1b5a78c04_iterPackages(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)> _46632_f) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83d6d78:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _46721_used = *it;
			{
				if ((!(_46721_used.get()._field_Binded))) {
					_46632_f(&(_46721_used.get()._field_Package));
				};
			}
			_iter_next_1b83d6d78:;
			++it;
			goto _iter_begin_1b83d6d78;
		}
		_iter_end_1b83d6d78:;
	};
	_46632_f(&(_self_.get()._field_ir.get()._field_Main));
}



inline void _1b5a78dd0_buildTraitMap(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a78c04_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>([=](jule::Ptr<_1d2195bb7_Package>* _47635_pkg) mutable -> void {
		_1b5a81e71_iterFiles(_47635_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>([=](jule::Ptr<_1d040428a_SymbolTable>* _47736_file) mutable -> void {
			{
				auto expr = &((*(_47736_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b83d9e25:;
				if (it != expr_end) {
					jule::Ptr<_1d21494c8_Trait> _47829_t = *it;
					{
						if ((_47829_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_47829_t.get()._field_Implemented.len() == 0LL)) {
							_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1b5a7465b_traitHash>(_1b5a7465b_traitHash{._field_t=_47829_t, ._field_s=nullptr, ._field_i=0LL}));;
							goto _iter_next_1b83d9e25;
						};
						jule::I64 _49029_i = 0LL;;
						{
							auto expr = &(_47829_t.get()._field_Implemented);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b83da6b7:;
							if (it != expr_end) {
								jule::Ptr<_1d060ddbd_Struct> _49133_s = *it;
								{
									{
										auto expr = &(_49133_s.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b83db60d:;
										if (it != expr_end) {
											jule::Ptr<_1d0611bd4_StructIns> _49237_ins = *it;
											{
												_self_.get()._field_tmap = jule::alloc_for_append(_self_.get()._field_tmap,1);_self_.get()._field_tmap.__push(jule::new_ptr<_1b5a7465b_traitHash>(_1b5a7465b_traitHash{._field_t=_47829_t, ._field_s=_49237_ins, ._field_i=_49029_i}));;
												(_49029_i)++;
											}
											_iter_next_1b83db60d:;
											++it;
											goto _iter_begin_1b83db60d;
										}
										_iter_end_1b83db60d:;
									};
								}
								_iter_next_1b83da6b7:;
								++it;
								goto _iter_begin_1b83da6b7;
							}
							_iter_end_1b83da6b7:;
						};
						_1b5a82b75_pushMethodsFromInherits(&(_47829_t), &(_47829_t));
					}
					_iter_next_1b83d9e25:;
					++it;
					goto _iter_begin_1b83d9e25;
				}
				_iter_end_1b83d9e25:;
			};
		}));
	}));
}



inline void _1b5a790ab_traitDecls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a78c04_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>([=](jule::Ptr<_1d2195bb7_Package>* _51035_pkg) mutable -> void {
		_1b5a81e71_iterFiles(_51035_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>([=](jule::Ptr<_1d040428a_SymbolTable>* _51136_file) mutable -> void {
			{
				auto expr = &((*(_51136_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b83de600:;
				if (it != expr_end) {
					jule::Ptr<_1d21494c8_Trait> _51229_t = *it;
					{
						if ((_51229_t.get()._field_Token == nullptr)) {
							return;;
						};
						_1b5a7675c_indent(_self_);
						_1b5a761c9_write(_self_, jule::Str("struct ", 7));
						_1b5a761c9_write(_self_, static__1b59d41c0_traitDecl(_51229_t));
						_1b5a761c9_write(_self_, jule::Str("{};\n", 4));
					}
					_iter_next_1b83de600:;
					++it;
					goto _iter_begin_1b83de600;
				}
				_iter_end_1b83de600:;
			};
		}));
	}));
}



inline void _1b5a79331_structurePlainDecl(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d060ddbd_Struct>* _52543_s) {
	{
		auto expr = &((*(_52543_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83de028:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _52621_ins = *it;
			{
				_1b5a761c9_write(_self_, jule::Str("struct ", 7));
				_1b5a761c9_write(_self_, static__1b59d49a6_structureIns(&(_52621_ins)));
				_1b5a761c9_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b83de028:;
			++it;
			goto _iter_begin_1b83de028;
		}
		_iter_end_1b83de028:;
	};
}



inline void _1b5a7950c_structurePlainDecls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b83e1e60:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _53421_s = *it;
			{
				if ((_53421_s.get()._field_Token != nullptr)) {
					_1b5a79331_structurePlainDecl(_self_, &(_53421_s));
				};
			}
			_iter_next_1b83e1e60:;
			++it;
			goto _iter_begin_1b83e1e60;
		}
		_iter_end_1b83e1e60:;
	};
}



inline void _1b5a79782_fieldDecl(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d06111de_FieldIns>* _54134_f) {
	_1b5a761c9_write(_self_, _1b5a89693_kind(_self_.get()._field_tc.ptr(), (*(_54134_f)).get()._field_Kind));
	_1b5a761c9_write(_self_, jule::Str(" ", 1));
	_1b5a761c9_write(_self_, static__1b59d4c4d_field(&((*(_54134_f)).get()._field_Decl)));
	if (((*(_54134_f)).get()._field_Default == nullptr)) {
		if (_1b5a914be_shouldInitialized(&((*(_54134_f)).get()._field_Kind))) {
			_1b5a761c9_write(_self_, jule::Str(" = ", 3));
			_1b571034c_initExpr(_self_.get()._field_ec, (*(_54134_f)).get()._field_Kind);
		};
	} else {
		_1b5a761c9_write(_self_, jule::Str(" = ", 3));
		_1b5706354_possibleRefExpr(_self_.get()._field_ec, (*(_54134_f)).get()._field_Default.get()._field_Model);
	};
	_1b5a761c9_write(_self_, jule::Str(";", 1));
}



inline void _1b5a79a07_structureDestructor(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _55944_s) {
	;
	jule::Ptr<_1d06242bd_Fn> _56213_disposeMethod = _1d0612b80_FindMethod((*(_55944_s)).ptr(), jule::Str("Dispose", 7), false);;
	jule::Bool _56317_disposed = static__1d21bca79_Dispose(_56213_disposeMethod);;
	if ((!(_56317_disposed))) {
		return;;
	};
	_1b5a761c9_write(_self_, jule::Str("~", 1));
	_1b5a761c9_write(_self_, static__1b59d49a6_structureIns(_55944_s));
	_1b5a761c9_write(_self_, jule::Str("(void) { ", 9));
	_1b5a761c9_write(_self_, static__1b59d3b81_func(&(_56213_disposeMethod)));
	_1b5a761c9_write(_self_, jule::Str("(this); }", 9));
}



inline void _1b5a79c9e_structureDeriveDefsDecls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _57545_s) {
	if (_1d06106e9_IsDerives((*(_57545_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, _1b57132d9_cloneFuncDecl(_self_.get()._field_dc.ptr(), &((*(_57545_s)).get()._field_Decl)));
		_1b5a761c9_write(_self_, jule::Str(";\n\n", 3));
	};
}



inline void _1b5a7a0ce_structureOperatorEq(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Str* _58340_ident, jule::Ptr<_1d0611bd4_StructIns>* _58357_s) {
	if ((!((*(_58357_s)).get()._field_Comparable))) {
		return;;
	};
	if (((*(_58357_s)).get()._field_Operators._field_Eq != nullptr)) {
		_1b5a7a7b6_structureOperator(_self_, _58340_ident, &((*(_58357_s)).get()._field_Operators._field_Eq), jule::Str("==", 2));
		return;;
	};
	_1b5a7675c_indent(_self_);
	if (_1d22147c4_Inline) {
		_1b5a761c9_write(_self_, jule::Str("inline ", 7));
	};
	_1b5a761c9_write(_self_, jule::Str("bool operator==(", 16));
	_1b5a761c9_write(_self_, (*(_58340_ident)));
	_1b5a761c9_write(_self_, jule::Str(" _other) {", 10));
	if (((*(_58357_s)).get()._field_Fields.len() > 0LL)) {
		_1b5a763a5_addIndent(_self_);
		_1b5a761c9_write(_self_, jule::Str("\n", 1));
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, jule::Str("return ", 7));
		_1b5a763a5_addIndent(_self_);
		jule::Bool _60621_writed = false;;
		{
			auto expr = &((*(_58357_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b83ed6ca:;
			if (it != expr_end) {
				jule::Ptr<_1d06111de_FieldIns> _60725_f = *it;
				{
					jule::Ptr<_1d0611bd4_StructIns> _60921_strct = _1d21d59b5_Struct(_60725_f.get()._field_Kind.ptr());;
					if ((((_60921_strct != nullptr) && (_60921_strct.get()._field_Decl != nullptr)) && _60921_strct.get()._field_Decl.get()._field_Binded)) {
						goto _iter_next_1b83ed6ca;
					};
					if (_60621_writed) {
						_1b5a761c9_write(_self_, jule::Str(" &&", 3));
					};
					_60621_writed=true;
					_1b5a761c9_write(_self_, jule::Str("\n", 1));
					_1b5a7675c_indent(_self_);
					_1b5a761c9_write(_self_, jule::Str("this->", 6));
					jule::Str _62021_fIdent = static__1b59d4c4d_field(&(_60725_f.get()._field_Decl));;
					_1b5a761c9_write(_self_, _62021_fIdent);
					_1b5a761c9_write(_self_, jule::Str(" == _other.", 11));
					_1b5a761c9_write(_self_, _62021_fIdent);
				}
				_iter_next_1b83ed6ca:;
				++it;
				goto _iter_begin_1b83ed6ca;
			}
			_iter_end_1b83ed6ca:;
		};
		_1b5a76581_doneIndent(_self_);
		if ((!(_60621_writed))) {
			_1b5a761c9_write(_self_, jule::Str("true", 4));
		};
		_1b5a761c9_write(_self_, jule::Str(";\n", 2));
		_1b5a76581_doneIndent(_self_);
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, jule::Str("}", 1));
	} else {
		_1b5a761c9_write(_self_, jule::Str(" return true; }", 15));
	};
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b5a7a3ed_structureOperatorNotEq(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Str* _63943_ident, jule::Ptr<_1d0611bd4_StructIns>* _63960_s) {
	if ((!((*(_63960_s)).get()._field_Comparable))) {
		return;;
	};
	_1b5a7675c_indent(_self_);
	if (_1d22147c4_Inline) {
		_1b5a761c9_write(_self_, jule::Str("inline ", 7));
	};
	_1b5a761c9_write(_self_, jule::Str("bool operator!=(", 16));
	_1b5a761c9_write(_self_, (*(_63943_ident)));
	_1b5a761c9_write(_self_, jule::Str(" _other) { return !this->operator==(_other); }\n\n", 48));
}



inline void _1b5a7a7b6_structureOperator(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Str* _65338_ident, jule::Ptr<_1d0626e6e_FnIns>* _65355_f, jule::Str _65366_op) {
	if (((*(_65355_f)) == nullptr)) {
		return;;
	};
	jule::Bool _65813_unary = ((*(_65355_f)).get()._field_Params.len() == 1LL);;
	jule::Bool _65913_assignment = _1d0624730_IsVoid((*(_65355_f)).get()._field_Decl.ptr());;
	_1b5a7675c_indent(_self_);
	if (_1d22147c4_Inline) {
		_1b5a761c9_write(_self_, jule::Str("inline ", 7));
	};
	if (_65913_assignment) {
		_1b5a761c9_write(_self_, (*(_65338_ident)));
		_1b5a761c9_write(_self_, jule::Str("&", 1));
	} else {
		if ((_1d21d4563_Prim((*(_65355_f)).get()._field_Result.ptr()) == nullptr)) {
			_1b5a761c9_write(_self_, (*(_65338_ident)));
		} else {
			_1b5a761c9_write(_self_, jule::Str("jule::Bool", 10));
		};
	};
	_1b5a761c9_write(_self_, jule::Str(" operator", 9));
	_1b5a761c9_write(_self_, _65366_op);
	_1b5a761c9_write(_self_, jule::Str("(", 1));
	if ((!(_65813_unary))) {
		jule::Ptr<_1d06260a0_ParamIns> _68121_p = (*(_65355_f)).get()._field_Params[1LL];;
		_1b5a761c9_write(_self_, _1b5a8863c_paramIns(_self_.get()._field_tc.ptr(), &(_68121_p)));
		_1b5a761c9_write(_self_, jule::Str(" _other", 7));
	};
	_1b5a761c9_write(_self_, jule::Str(") { ", 4));
	if ((!(_65913_assignment))) {
		_1b5a761c9_write(_self_, jule::Str("return ", 7));
	};
	_1b5a761c9_write(_self_, static__1b59d3e28_funcIns(_65355_f));
	if ((!(_65813_unary))) {
		_1b5a761c9_write(_self_, jule::Str("(this, _other); ", 16));
		if (_65913_assignment) {
			_1b5a761c9_write(_self_, jule::Str("return *this; ", 14));
		};
		_1b5a761c9_write(_self_, jule::Str("}", 1));
	} else {
		_1b5a761c9_write(_self_, jule::Str("(this); }", 9));
	};
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
}



inline void _1b5a7aa3b_structureOperators(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _70243_s) {
	jule::Str _70313_ident = static__1b59d49a6_structureIns(_70243_s);;
	_1b5a7a0ce_structureOperatorEq(_self_, &(_70313_ident), _70243_s);
	_1b5a7a3ed_structureOperatorNotEq(_self_, &(_70313_ident), _70243_s);
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Gt), jule::Str(">", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_GtEq), jule::Str(">=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Lt), jule::Str("<", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_LtEq), jule::Str("<=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Shl), jule::Str("<<", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Shr), jule::Str(">>", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Add), jule::Str("+", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Sub), jule::Str("-", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Div), jule::Str("/", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Mul), jule::Str("*", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Mod), jule::Str("%", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitAnd), jule::Str("&", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitOr), jule::Str("|", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitXor), jule::Str("^", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Neg), jule::Str("-", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_Pos), jule::Str("+", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitNot), jule::Str("~", 1));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_AddAssign), jule::Str("+=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_SubAssign), jule::Str("-=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_DivAssign), jule::Str("/=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_MulAssign), jule::Str("*=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ModAssign), jule::Str("%=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ShlAssign), jule::Str("<<=", 3));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_ShrAssign), jule::Str(">>=", 3));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitOrAssign), jule::Str("|=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitAndAssign), jule::Str("&=", 2));
	_1b5a7a7b6_structureOperator(_self_, &(_70313_ident), &((*(_70243_s)).get()._field_Operators._field_BitXorAssign), jule::Str("^=", 2));
}



inline void _1b5a7acb1_structureInsDecl(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _74141_s) {
	if (((*(_74141_s)).get()._field_Methods.len() > 0LL)) {
		{
			auto expr = &((*(_74141_s)).get()._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b84178c0:;
			if (it != expr_end) {
				jule::Ptr<_1d06242bd_Fn> _74325_m = *it;
				{
					_1b5a77373_pushResult(_self_, &(_74325_m));
					_1b5a7bde4_funcDecl(_self_, &(_74325_m), false);
				}
				_iter_next_1b84178c0:;
				++it;
				goto _iter_begin_1b84178c0;
			}
			_iter_end_1b84178c0:;
		};
	};
	_1b5a761c9_write(_self_, jule::Str("struct ", 7));
	jule::Str _75013_outIdent = static__1b59d49a6_structureIns(_74141_s);;
	_1b5a761c9_write(_self_, _75013_outIdent);
	_1b5a761c9_write(_self_, jule::Str(" {\n", 3));
	_1b5a763a5_addIndent(_self_);
	{
		auto expr = &((*(_74141_s)).get()._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b841952b:;
		if (it != expr_end) {
			jule::Ptr<_1d06111de_FieldIns> _75621_f = *it;
			{
				_1b5a7675c_indent(_self_);
				_1b5a79782_fieldDecl(_self_, &(_75621_f));
				_1b5a761c9_write(_self_, jule::Str("\n", 1));
			}
			_iter_next_1b841952b:;
			++it;
			goto _iter_begin_1b841952b;
		}
		_iter_end_1b841952b:;
	};
	_1b5a7675c_indent(_self_);
	_1b5a79a07_structureDestructor(_self_, _74141_s);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_1b5a7675c_indent(_self_);
	_1b5a761c9_write(_self_, _75013_outIdent);
	_1b5a761c9_write(_self_, jule::Str("(void) = default;\n\n", 19));
	_1b5a79c9e_structureDeriveDefsDecls(_self_, _74141_s);
	_1b5a7aa3b_structureOperators(_self_, _74141_s);
	_1b5a761c9_write(_self_, jule::Str("\n", 1));
	_1b5a76581_doneIndent(_self_);
	_1b5a7675c_indent(_self_);
	_1b5a761c9_write(_self_, jule::Str("};", 2));
}



inline void _1b5a7b036_structureDecl(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d060ddbd_Struct>* _78138_s) {
	{
		auto expr = &((*(_78138_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b841c8c5:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _78221_ins = *it;
			{
				_1b5a7acb1_structureInsDecl(_self_, &(_78221_ins));
			}
			_iter_next_1b841c8c5:;
			++it;
			goto _iter_begin_1b841c8c5;
		}
		_iter_end_1b841c8c5:;
	};
}



inline void _1b5a7b212_structureDecls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b841d112:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _78821_s = *it;
			{
				if ((_78821_s.get()._field_Token != nullptr)) {
					_1b5a7b036_structureDecl(_self_, &(_78821_s));
					_1b5a761c9_write(_self_, jule::Str("\n", 1));
				};
			}
			_iter_next_1b841d112:;
			++it;
			goto _iter_begin_1b841d112;
		}
		_iter_end_1b841d112:;
	};
}



inline void _1b5a7b487_paramsDecls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>* _79636_params) {
	if (((*(_79636_params)).len() == 0LL)) {
		_1b5a761c9_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b5a761c9_write(_self_, jule::Str("(", 1));
	{
		auto expr = _79636_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84203de:;
		if (it != expr_end) {
			jule::I64 _80314_i = it - expr->begin();
			jule::Ptr<_1d06260a0_ParamIns> _80321_p = *it;
			{
				_1b5a761c9_write(_self_, _1b5a8863c_paramIns(_self_.get()._field_tc.ptr(), &(_80321_p)));
				if ((((*(_79636_params)).len() - _80314_i) > 1LL)) {
					_1b5a761c9_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b84203de:;
			++it;
			_80314_i++;
			goto _iter_begin_1b84203de;
		}
		_iter_end_1b84203de:;
	};
	_1b5a761c9_write(_self_, jule::Str(")", 1));
}



inline void _1b5a7b7a6_funcHead(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0626e6e_FnIns>* _81333_f, jule::Bool _81344_ptr) {
	if ((((!(_81344_ptr)) && _1d22147c4_Inline) && (!(_1d0624c08_IsEntryPoint((*(_81333_f)).get()._field_Decl.ptr()))))) {
		_1b5a761c9_write(_self_, jule::Str("inline ", 7));
	};
	_1b5a88c69_funcInsResult(_self_.get()._field_tc.ptr(), &(_self_.get()._field_Obj), _81333_f);
	if (_81344_ptr) {
		_1b5a761c9_write(_self_, jule::Str("(*", 2));
		_1b5a761c9_write(_self_, static__1b59d3e28_funcIns(_81333_f));
		_1b5a761c9_write(_self_, jule::Str(")", 1));
	} else {
		_1b5a761c9_write(_self_, jule::Str(" ", 1));
		_1b5a761c9_write(_self_, static__1b59d3e28_funcIns(_81333_f));
	};
}



inline void _1b5a7bac5_funcDeclIns(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0626e6e_FnIns>* _82836_f, jule::Bool _82847_ptr) {
	_1b5a7675c_indent(_self_);
	_1b5a7b7a6_funcHead(_self_, _82836_f, _82847_ptr);
	_1b5a7b487_paramsDecls(_self_, &((*(_82836_f)).get()._field_Params));
	_1b5a761c9_write(_self_, jule::Str(";\n", 2));
}



inline void _1b5a7bde4_funcDecl(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d06242bd_Fn>* _83533_f, jule::Bool _83541_ptr) {
	{
		auto expr = &((*(_83533_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8426291:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _83621_c = *it;
			{
				_1b5a7bac5_funcDeclIns(_self_, &(_83621_c), _83541_ptr);
			}
			_iter_next_1b8426291:;
			++it;
			goto _iter_begin_1b8426291;
		}
		_iter_end_1b8426291:;
	};
}



inline void _1b5a7c2ac_funcDeclTrait(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21494c8_Trait>* _84138_t, jule::Ptr<_1d06242bd_Fn>* _84154_f, jule::Bool _84162_ptr) {
	{
		auto expr = &((*(_84154_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8427407:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _84221_c = *it;
			{
				jule::Ptr<_1d21d1d46_TypeKind> _84321_k = _84221_c.get()._field_Params[0LL].get()._field_Kind;;
				_84221_c.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_84138_t)), 2)});
				_1b5a7bac5_funcDeclIns(_self_, &(_84221_c), _84162_ptr);
				_84221_c.get()._field_Params[0LL].get()._field_Kind=_84321_k;
			}
			_iter_next_1b8427407:;
			++it;
			goto _iter_begin_1b8427407;
		}
		_iter_end_1b8427407:;
	};
}



inline void _1b5a7c488_funcDecls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a78c04_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>([=](jule::Ptr<_1d2195bb7_Package>* _85135_pkg) mutable -> void {
		_1b5a81e71_iterFiles(_85135_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>([=](jule::Ptr<_1d040428a_SymbolTable>* _85236_file) mutable -> void {
			{
				auto expr = &((*(_85236_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b842b054:;
				if (it != expr_end) {
					jule::Ptr<_1d06242bd_Fn> _85329_f = *it;
					{
						if (((!(_85329_f.get()._field_Binded)) && (_85329_f.get()._field_Token != nullptr))) {
							_1b5a77373_pushResult(_self_, &(_85329_f));
							_1b5a7bde4_funcDecl(_self_, &(_85329_f), false);
						};
					}
					_iter_next_1b842b054:;
					++it;
					goto _iter_begin_1b842b054;
				}
				_iter_end_1b842b054:;
			};
		}));
	}));
}



inline void _1b5a7c7a7_traitDataTypeMethods(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21494c8_Trait>* _86345_owner, jule::Ptr<_1d21494c8_Trait>* _86365_t) {
	{
		auto expr = &((*(_86365_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b842abbe:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _86421_m = *it;
			{
				jule::Ptr<_1d0626e6e_FnIns> _86521_ins = _86421_m.get()._field_Instances[0LL];;
				jule::Ptr<_1d06260a0_ParamIns> _86621_p = _86521_ins.get()._field_Params[0LL];;
				_86621_p.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_86365_t)), 2)});
				{
					auto expr = _86521_ins.get()._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1b842ce57:;
					if (it != expr_end) {
						jule::I64 _87018_i = it - expr.begin();
						jule::Ptr<_1d06260a0_ParamIns> _87025_ip = *it;
						{
							if (_22be15359_IsAnonIdent(_87025_ip.get()._field_Decl.get()._field_Ident)) {
								_87025_ip.get()._field_Decl.get()._field_Ident=(jule::Str("_", 1) + _1e76d6159_Itoa(_87018_i));
							};
						}
						_iter_next_1b842ce57:;
						++it;
						_87018_i++;
						goto _iter_begin_1b842ce57;
					}
					_iter_end_1b842ce57:;
				};
				if ((!(_229913002_Production))) {
					jule::Ptr<_1d06260a0_ParamIns> _87625_lp = _86521_ins.get()._field_Params[(_86521_ins.get()._field_Params.len() - 1LL)];;
					{
						auto &_match_expr{ _87625_lp.get()._field_Kind.get()._field_Kind };
						
						if (_match_expr.type_is(true, 27)) {
							_case_begin_1b8432511:;
							{
								goto _match_end_1b8430e27;
							}
						}
						else {
							_case_begin_1b843106a:;
							{
								_86521_ins.get()._field_Params = jule::alloc_for_append(_86521_ins.get()._field_Params,1);_86521_ins.get()._field_Params.__push(jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Ident=jule::Str("__file", 6)}), ._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1b5a83868_customType>(_1b5a83868_customType{._field_kind=jule::Str("const char*", 11)}), 27)})}));;
							}
						}
						_match_end_1b8430e27:;
					};
				};
				_1b5a77373_pushResult(_self_, &(_86421_m));
				_1b5a7c2ac_funcDeclTrait(_self_, _86345_owner, &(_86421_m), true);
			}
			_iter_next_1b842abbe:;
			++it;
			goto _iter_begin_1b842abbe;
		}
		_iter_end_1b842abbe:;
	};
}



inline void _1b5a7c983_traitDataTypes(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a78c04_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>([=](jule::Ptr<_1d2195bb7_Package>* _89935_pkg) mutable -> void {
		_1b5a81e71_iterFiles(_89935_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>([=](jule::Ptr<_1d040428a_SymbolTable>* _90036_file) mutable -> void {
			{
				auto expr = &((*(_90036_file)).get()._field_Traits);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b8434249:;
				if (it != expr_end) {
					jule::Ptr<_1d21494c8_Trait> _90129_t = *it;
					{
						if ((_90129_t.get()._field_Token == nullptr)) {
							return;;
						};
						if ((_90129_t.get()._field_Methods.len() == 0LL)) {
							goto _iter_next_1b8434249;
						};
						_1b5a761c9_write(_self_, jule::Str("struct ", 7));
						_1b5a761c9_write(_self_, static__1b59d41c0_traitDecl(_90129_t));
						_1b5a761c9_write(_self_, jule::Str("MptrData", 8));
						_1b5a761c9_write(_self_, jule::Str(" {\n", 3));
						_1b5a763a5_addIndent(_self_);
						_1b5a7c7a7_traitDataTypeMethods(_self_, &(_90129_t), &(_90129_t));
						_1b5a76581_doneIndent(_self_);
						_1b5a7675c_indent(_self_);
						_1b5a761c9_write(_self_, jule::Str("};\n\n", 4));
					}
					_iter_next_1b8434249:;
					++it;
					goto _iter_begin_1b8434249;
				}
				_iter_end_1b8434249:;
			};
		}));
	}));
}



inline void _1b5a7cc08_paramIns(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d06260a0_ParamIns>* _92233_p) {
	_1b5a761c9_write(_self_, _1b5a8863c_paramIns(_self_.get()._field_tc.ptr(), _92233_p));
	_1b5a761c9_write(_self_, jule::Str(" ", 1));
	_1b5a761c9_write(_self_, static__1b59d4467_param(&((*(_92233_p)).get()._field_Decl)));
}



inline void _1b5a7ce7d_paramsIns(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>* _92834_params) {
	if (((*(_92834_params)).len() == 0LL)) {
		_1b5a761c9_write(_self_, jule::Str("(void)", 6));
		return;;
	};
	_1b5a761c9_write(_self_, jule::Str("(", 1));
	{
		auto expr = _92834_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8438539:;
		if (it != expr_end) {
			jule::I64 _93414_i = it - expr->begin();
			jule::Ptr<_1d06260a0_ParamIns> _93421_p = *it;
			{
				_1b5a7cc08_paramIns(_self_, &(_93421_p));
				if ((((*(_92834_params)).len() - _93414_i) > 1LL)) {
					_1b5a761c9_write(_self_, jule::Str(", ", 2));
				};
			}
			_iter_next_1b8438539:;
			++it;
			_93414_i++;
			goto _iter_begin_1b8438539;
		}
		_iter_end_1b8438539:;
	};
	_1b5a761c9_write(_self_, jule::Str(")", 1));
}



inline void _1b5a7d29c_varInitExpr(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21bb65a_Var>* _94336_v, jule::Fn<void(void)> _94345_init) {
	if ((*(_94336_v)).get()._field_Statically) {
		_1b5a761c9_write(_self_, jule::Str("static ", 7));
	};
	_1b5a761c9_write(_self_, _1b5a89693_kind(_self_.get()._field_tc.ptr(), (*(_94336_v)).get()._field_Kind.get()._field_Kind));
	_1b5a761c9_write(_self_, jule::Str(" ", 1));
	if ((*(_94336_v)).get()._field_Reference) {
		_1b5a761c9_write(_self_, jule::Str("*", 1));
	};
	_1b5a761c9_write(_self_, static__1b59d4ee5_var((*(_94336_v))));
	if ((_94345_init != nullptr)) {
		_1b5a761c9_write(_self_, jule::Str(" = ", 3));
		_94345_init();
	};
	_1b5a761c9_write(_self_, jule::Str(";", 1));
}



inline void _1b5a7d522_var(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21bb65a_Var> _96127_v) {
	if (_22be150b2_IsIgnoreIdent(_96127_v.get()._field_Ident)) {
		return;;
	};
	if (((_96127_v.get()._field_Value != nullptr) && (_96127_v.get()._field_Value.get()._field_Expr != nullptr))) {
		if ((_96127_v.get()._field_Value.get()._field_Data.get()._field_Model != nullptr)) {
			if (_96127_v.get()._field_Reference) {
				_1b5a7d29c_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b5a761c9_write(_self_, jule::Str("&(", 2));
					_1b57100c7_model(_self_.get()._field_ec, _96127_v.get()._field_Value.get()._field_Data.get()._field_Model);
					_1b5a761c9_write(_self_, jule::Str(")", 1));
				}));
			} else {
				_1b5a7d29c_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
					_1b5706354_possibleRefExpr(_self_.get()._field_ec, _96127_v.get()._field_Value.get()._field_Data.get()._field_Model);
				}));
			};
			return;;
		};
		_1b5a7d29c_varInitExpr(_self_, &(_96127_v), nullptr);
		return;;
	};
	if (_96127_v.get()._field_Reference) {
		_1b5a7d29c_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b5a761c9_write(_self_, jule::Str("nullptr", 7));
		}));
		return;;
	};
	if (_1b5a914be_shouldInitialized(&(_96127_v.get()._field_Kind.get()._field_Kind))) {
		_1b5a7d29c_varInitExpr(_self_, &(_96127_v), jule::Fn<void(void)>([=](void) mutable -> void {
			_1b571034c_initExpr(_self_.get()._field_ec, _96127_v.get()._field_Kind.get()._field_Kind);
		}));
		return;;
	};
	_1b5a7d29c_varInitExpr(_self_, &(_96127_v), nullptr);
}



inline void _1b5a7d797_funcIns(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0626e6e_FnIns>* _99232_f) {
	_1b5a7b7a6_funcHead(_self_, _99232_f, false);
	_1b5a7ce7d_paramsIns(_self_, &((*(_99232_f)).get()._field_Params));
	_1b5a761c9_write(_self_, jule::Str(" ", 1));
	_1b570076b_funcScope(_self_.get()._field_sc, (*(_99232_f)));
	if (((*(_99232_f)).get()._field_Scope != nullptr)) {
		_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	};
}



inline void _1b5a7da1c_func(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d06242bd_Fn>* _100229_f) {
	{
		auto expr = &((*(_100229_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8445b95:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _100321_ins = *it;
			{
				_1b5a7d797_funcIns(_self_, &(_100321_ins));
			}
			_iter_next_1b8445b95:;
			++it;
			goto _iter_begin_1b8445b95;
		}
		_iter_end_1b8445b95:;
	};
}



inline void _1b5a7dd3b_funcTrait(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1b5a7465b_traitHash>* _100834_hash, jule::Ptr<_1d06242bd_Fn>* _100857_f) {
	jule::Str _100913_ident = (*(_100857_f)).get()._field_Ident;;
	{
		auto expr = &((*(_100857_f)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8446ee8:;
		if (it != expr_end) {
			jule::Ptr<_1d0626e6e_FnIns> _101021_ins = *it;
			{
				_101021_ins.get()._field_Scope=nullptr;
				(*(_100857_f)).get()._field_Ident=_100913_ident;
				((*(_100857_f)).get()._field_Ident).append("_", 1);
				(*(_100857_f)).get()._field_Ident+=(*(_100834_hash)).get()._field_t.get()._field_Ident;
				((*(_100857_f)).get()._field_Ident).append("_", 1);
				(*(_100857_f)).get()._field_Ident+=_1e76d6159_Itoa((*(_100834_hash)).get()._field_i);
				jule::Ptr<_1d21d1d46_TypeKind> _101921_k = _101021_ins.get()._field_Params[0LL].get()._field_Kind;;
				_101021_ins.get()._field_Params[0LL].get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_100834_hash)).get()._field_t, 2)});
				_1b5a7d797_funcIns(_self_, &(_101021_ins));
				_101021_ins.get()._field_Params[0LL].get()._field_Kind=_101921_k;
			}
			_iter_next_1b8446ee8:;
			++it;
			goto _iter_begin_1b8446ee8;
		}
		_iter_end_1b8446ee8:;
	};
	(*(_100857_f)).get()._field_Ident=_100913_ident;
}



inline void _1b5a7e15a_traitWrapper(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d06242bd_Fn>* _102737_m, jule::Ptr<_1b5a7465b_traitHash>* _102750_hash) {
	_1b5a7dd3b_funcTrait(_self_, _102750_hash, _102737_m);
	if (((*(_102750_hash)).get()._field_s == nullptr)) {
		if (_229913002_Production) {
			_1b5a761c9_write(_self_, jule::Str(" { jule::panic(__JULE_ERROR__INVALID_MEMORY); }\n", 48));
		} else {
			_1b5a761c9_write(_self_, jule::Str(" { jule::panic(jule::Str(__JULE_ERROR__INVALID_MEMORY \"\\nlocation: \") + jule::Str(_00___file)); }\n", 98));
		};
		return;;
	};
	jule::Bool _103913_ptr = (!(_1d0623322_IsRef((*(_102737_m)).get()._field_Params[0LL].ptr())));;
	jule::Ptr<_1d06242bd_Fn> _104117_sm = _1d0612b80_FindMethod((*(_102750_hash)).get()._field_s.ptr(), (*(_102737_m)).get()._field_Ident, false);;
	if (((_104117_sm == nullptr) || (_104117_sm.get()._field_Instances.len() == 0LL))) {
		return;;
	};
	_1b5a763a5_addIndent(_self_);
	_1b5a761c9_write(_self_, jule::Str("{\n", 2));
	_1b5a7675c_indent(_self_);
	if ((_104117_sm.get()._field_Exceptional || (!(_1d0624730_IsVoid(_104117_sm.ptr()))))) {
		_1b5a761c9_write(_self_, jule::Str("return ", 7));
	};
	_1b5a761c9_write(_self_, static__1b59d3b81_func(&(_104117_sm)));
	_1b5a761c9_write(_self_, jule::Str("(", 1));
	if (_103913_ptr) {
		_1b5a761c9_write(_self_, jule::Str("_self_.safe_ptr<", 16));
		_1b5a761c9_write(_self_, _1b5a87c13_structureIns(_self_.get()._field_tc.ptr(), (*(_102750_hash)).get()._field_s));
		_1b5a761c9_write(_self_, jule::Str(">(", 2));
		if ((!(_229913002_Production))) {
			_1b5a761c9_write(_self_, jule::Str("_00___file", 10));
		};
		_1b5a761c9_write(_self_, jule::Str(")", 1));
	} else {
		_1b5a761c9_write(_self_, jule::Str("_self_.data.as<", 15));
		_1b5a761c9_write(_self_, _1b5a87905_structure(_self_.get()._field_tc.ptr(), _104117_sm.get()._field_Owner));
		_1b5a761c9_write(_self_, jule::Str(">()", 3));
	};
	{
		auto expr = (*(_102737_m)).get()._field_Params.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b844ea6c:;
		if (it != expr_end) {
			jule::Ptr<_1d0622981_Param> _106716_mp = *it;
			{
				_1b5a761c9_write(_self_, jule::Str(", ", 2));
				_1b5a761c9_write(_self_, static__1b59d4467_param(&(_106716_mp)));
			}
			_iter_next_1b844ea6c:;
			++it;
			goto _iter_begin_1b844ea6c;
		}
		_iter_end_1b844ea6c:;
	};
	_1b5a761c9_write(_self_, jule::Str(");\n}\n", 5));
	_1b5a76581_doneIndent(_self_);
}



inline void _1b5a7e336_traitWrappers(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84534cc:;
		if (it != expr_end) {
			jule::Ptr<_1b5a7465b_traitHash> _107621_hash = *it;
			{
				{
					auto expr = &(_107621_hash.get()._field_t.get()._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b8453d7e:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _107725_m = *it;
						{
							_1b5a7e15a_traitWrapper(_self_, &(_107725_m), &(_107621_hash));
						}
						_iter_next_1b8453d7e:;
						++it;
						goto _iter_begin_1b8453d7e;
					}
					_iter_end_1b8453d7e:;
				};
			}
			_iter_next_1b84534cc:;
			++it;
			goto _iter_begin_1b84534cc;
		}
		_iter_end_1b84534cc:;
	};
}



inline void _1b5a7e655_traitDataMethods(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d21494c8_Trait>* _108341_t, jule::Ptr<_1b5a7465b_traitHash>* _108353_hash) {
	{
		auto expr = &((*(_108341_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8454632:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _108421_m = *it;
			{
				jule::Str _108517_mIdent = static__1b59d3b81_func(&(_108421_m));;
				_1b5a7675c_indent(_self_);
				_1b5a761c9_write(_self_, jule::Str(".", 1));
				_1b5a761c9_write(_self_, _108517_mIdent);
				_1b5a761c9_write(_self_, jule::Str("=", 1));
				_1b5a761c9_write(_self_, _108517_mIdent);
				_1b5a761c9_write(_self_, jule::Str("_", 1));
				_1b5a761c9_write(_self_, (*(_108353_hash)).get()._field_t.get()._field_Ident);
				_1b5a761c9_write(_self_, jule::Str("_", 1));
				_1b5a761c9_write(_self_, _1e76d6159_Itoa((*(_108353_hash)).get()._field_i));
				_1b5a761c9_write(_self_, jule::Str(",\n", 2));
			}
			_iter_next_1b8454632:;
			++it;
			goto _iter_begin_1b8454632;
		}
		_iter_end_1b8454632:;
	};
}



inline void _1b5a7e974_traitData(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1b5a7465b_traitHash>* _109934_hash, jule::Ptr<_1d21494c8_Trait>* _109957_old) {
	if (((*(_109934_hash)).get()._field_t.get()._field_Methods.len() == 0LL)) {
		return;;
	};
	jule::Str _110313_ident = static__1b59d41c0_traitDecl((*(_109934_hash)).get()._field_t);;
	if (((*(_109934_hash)).get()._field_t != (*(_109957_old)))) {
		if (((*(_109957_old)) != nullptr)) {
			_1b5a76581_doneIndent(_self_);
			_1b5a7675c_indent(_self_);
			_1b5a761c9_write(_self_, jule::Str("};\n", 3));
		};
		_1b5a761c9_write(_self_, jule::Str("static ", 7));
		_1b5a761c9_write(_self_, _110313_ident);
		_1b5a761c9_write(_self_, jule::Str("MptrData ", 9));
		_1b5a761c9_write(_self_, _110313_ident);
		_1b5a761c9_write(_self_, jule::Str("_mptr_data[] = {\n", 17));
		(*(_109957_old))=(*(_109934_hash)).get()._field_t;
		_1b5a763a5_addIndent(_self_);
	};
	_1b5a7675c_indent(_self_);
	_1b5a761c9_write(_self_, jule::Str("{\n", 2));
	_1b5a763a5_addIndent(_self_);
	_1b5a7e655_traitDataMethods(_self_, &((*(_109934_hash)).get()._field_t), _109934_hash);
	_1b5a76581_doneIndent(_self_);
	_1b5a7675c_indent(_self_);
	_1b5a761c9_write(_self_, jule::Str("},\n", 3));
}



inline void _1b5a7eb50_traitDatas(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	jule::Ptr<_1d21494c8_Trait> _112817_old = nullptr;;
	{
		auto expr = &(_self_.get()._field_tmap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b845c294:;
		if (it != expr_end) {
			jule::Ptr<_1b5a7465b_traitHash> _112921_hash = *it;
			{
				_1b5a7e974_traitData(_self_, &(_112921_hash), &(_112817_old));
			}
			_iter_next_1b845c294:;
			++it;
			goto _iter_begin_1b845c294;
		}
		_iter_end_1b845c294:;
	};
	if ((_112817_old != nullptr)) {
		_1b5a76581_doneIndent(_self_);
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, jule::Str("};\n", 3));
	};
}



inline void _1b5a7ed2b_globals(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b845dc68:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _114021_v = *it;
			{
				_1b5a761c9_write(_self_, _1b5a89693_kind(_self_.get()._field_tc.ptr(), _114021_v.get()._field_Kind.get()._field_Kind));
				_1b5a761c9_write(_self_, jule::Str(" ", 1));
				_1b5a761c9_write(_self_, static__1b59d4ee5_var(_114021_v));
				_1b5a761c9_write(_self_, jule::Str(" = ", 3));
				_1b57100c7_model(_self_.get()._field_ec, _114021_v.get()._field_Value.get()._field_Data.get()._field_Model);
				_1b5a761c9_write(_self_, jule::Str(";\n", 2));
			}
			_iter_next_1b845dc68:;
			++it;
			goto _iter_begin_1b845dc68;
		}
		_iter_end_1b845dc68:;
	};
}



inline void _1b5a80007_decls(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a790ab_traitDecls(_self_);
	_1b5a7950c_structurePlainDecls(_self_);
	_self_.get()._field_headPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1b5a7b212_structureDecls(_self_);
	_1b5a7c488_funcDecls(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_1b5a7c983_traitDataTypes(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_1b5a7e336_traitWrappers(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_1b5a7eb50_traitDatas(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_self_.get()._field_declPos=static_cast<jule::I64>(_self_.get()._field_Obj.len());
	_1b5a7ed2b_globals(_self_);
}



inline void _1b5a8027c_structureMethods(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _116741_s) {
	{
		auto expr = &((*(_116741_s)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8463bc4:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _116821_f = *it;
			{
				_1b5a7da1c_func(_self_, &(_116821_f));
				_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b8463bc4:;
			++it;
			goto _iter_begin_1b8463bc4;
		}
		_iter_end_1b8463bc4:;
	};
}



inline void _1b5a80502_structureDeriveDefs(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _117444_s) {
	if (_1d06106e9_IsDerives((*(_117444_s)).get()._field_Decl.ptr(), jule::Str("Clone", 5))) {
		_1b5a761c9_write(_self_, _1b57135e7_cloneFuncDef(_self_.get()._field_dc.ptr(), &((*(_117444_s)).get()._field_Decl)));
		_1b5a761c9_write(_self_, jule::Str("{\n", 2));
		_1b5a763a5_addIndent(_self_);
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, _1b5a87c13_structureIns(_self_.get()._field_tc.ptr(), (*(_117444_s))));
		_1b5a761c9_write(_self_, jule::Str(" clone;\n", 8));
		{
			auto expr = &((*(_117444_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b8466754:;
			if (it != expr_end) {
				jule::Ptr<_1d06111de_FieldIns> _118220_f = *it;
				{
					jule::Str _118321_ident = static__1b59d4c4d_field(&(_118220_f.get()._field_Decl));;
					_1b5a7675c_indent(_self_);
					_1b5a761c9_write(_self_, jule::Str("clone.", 6));
					_1b5a761c9_write(_self_, _118321_ident);
					_1b5a761c9_write(_self_, jule::Str(" = jule::clone(this->", 21));
					_1b5a761c9_write(_self_, _118321_ident);
					_1b5a761c9_write(_self_, jule::Str(");\n", 3));
				}
				_iter_next_1b8466754:;
				++it;
				goto _iter_begin_1b8466754;
			}
			_iter_end_1b8466754:;
		};
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, jule::Str("return clone;\n", 14));
		_1b5a76581_doneIndent(_self_);
		_1b5a761c9_write(_self_, jule::Str("}", 1));
	};
}



inline void _1b5a80777_structureOstream(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _119841_s) {
	_1b5a7675c_indent(_self_);
	_1b5a761c9_write(_self_, jule::Str("std::ostream &operator<<(std::ostream &_Stream, ", 48));
	_1b5a761c9_write(_self_, static__1b59d49a6_structureIns(_119841_s));
	_1b5a761c9_write(_self_, jule::Str(" _Src) {\n", 9));
	_1b5a763a5_addIndent(_self_);
	_1b5a7675c_indent(_self_);
	jule::Ptr<_1d06242bd_Fn> _120617_fts = _1d0612b80_FindMethod((*(_119841_s)).ptr(), jule::Str("Str", 3), false);;
	if (static__1d21bcd21_Str(_120617_fts)) {
		_1b5a761c9_write(_self_, jule::Str("_Stream << ", 11));
		_1b5a761c9_write(_self_, static__1b59d3b81_func(&(_120617_fts)));
		_1b5a761c9_write(_self_, jule::Str("(&_Src);\n", 9));
	} else {
		_1b5a761c9_write(_self_, jule::Str("_Stream << \"", 12));
		_1b5a761c9_write(_self_, (*(_119841_s)).get()._field_Decl.get()._field_Ident);
		_1b5a761c9_write(_self_, jule::Str("{\";\n", 4));
		{
			auto expr = &((*(_119841_s)).get()._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b846c9d0:;
			if (it != expr_end) {
				jule::I64 _121618_i = it - expr->begin();
				jule::Ptr<_1d06111de_FieldIns> _121625_f = *it;
				{
					_1b5a7675c_indent(_self_);
					_1b5a761c9_write(_self_, jule::Str("_Stream << \"", 12));
					_1b5a761c9_write(_self_, _121625_f.get()._field_Decl.get()._field_Ident);
					_1b5a761c9_write(_self_, jule::Str(":", 1));
					jule::Ptr<_1d0611bd4_StructIns> _122321_strct = _1d21d59b5_Struct(_121625_f.get()._field_Kind.ptr());;
					if ((((_122321_strct != nullptr) && (_122321_strct.get()._field_Decl != nullptr)) && _122321_strct.get()._field_Decl.get()._field_Binded)) {
						_1b5a761c9_write(_self_, jule::Str(" cpp.", 5));
						_1b5a761c9_write(_self_, static__1b59d4c4d_field(&(_121625_f.get()._field_Decl)));
						_1b5a761c9_write(_self_, jule::Str("\"", 1));
					} else {
						_1b5a761c9_write(_self_, jule::Str("\" << _Src.", 10));
						_1b5a761c9_write(_self_, static__1b59d4c4d_field(&(_121625_f.get()._field_Decl)));
					};
					if (((_121618_i + 1LL) < (*(_119841_s)).get()._field_Fields.len())) {
						_1b5a761c9_write(_self_, jule::Str(" << \", \"", 8));
					};
					_1b5a761c9_write(_self_, jule::Str(";\n", 2));
				}
				_iter_next_1b846c9d0:;
				++it;
				_121618_i++;
				goto _iter_begin_1b846c9d0;
			}
			_iter_end_1b846c9d0:;
		};
		_1b5a7675c_indent(_self_);
		_1b5a761c9_write(_self_, jule::Str("_Stream << \"}\";\n", 16));
	};
	_1b5a7675c_indent(_self_);
	_1b5a761c9_write(_self_, jule::Str("return _Stream;\n", 16));
	_1b5a76581_doneIndent(_self_);
	_1b5a761c9_write(_self_, jule::Str("}", 1));
}



inline void _1b5a809ec_structureIns(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d0611bd4_StructIns>* _124937_s) {
	_1b5a8027c_structureMethods(_self_, _124937_s);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_1b5a80502_structureDeriveDefs(_self_, _124937_s);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	_1b5a80777_structureOstream(_self_, _124937_s);
}



inline void _1b5a80c72_structure(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d060ddbd_Struct>* _125734_s) {
	{
		auto expr = &((*(_125734_s)).get()._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84743dd:;
		if (it != expr_end) {
			jule::Ptr<_1d0611bd4_StructIns> _125821_ins = *it;
			{
				_1b5a809ec_structureIns(_self_, &(_125821_ins));
				_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
			}
			_iter_next_1b84743dd:;
			++it;
			goto _iter_begin_1b84743dd;
		}
		_iter_end_1b84743dd:;
	};
}



inline void _1b5a80e4d_structures(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b84754aa:;
		if (it != expr_end) {
			jule::Ptr<_1d060ddbd_Struct> _126521_s = *it;
			{
				if ((_126521_s.get()._field_Token != nullptr)) {
					_1b5a80c72_structure(_self_, &(_126521_s));
					_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
				};
			}
			_iter_next_1b84754aa:;
			++it;
			goto _iter_begin_1b84754aa;
		}
		_iter_end_1b84754aa:;
	};
}



inline void _1b5a81129_funcs(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a78c04_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>([=](jule::Ptr<_1d2195bb7_Package>* _127435_pkg) mutable -> void {
		_1b5a81e71_iterFiles(_127435_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>([=](jule::Ptr<_1d040428a_SymbolTable>* _127536_file) mutable -> void {
			{
				auto expr = &((*(_127536_file)).get()._field_Funcs);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1b84784ad:;
				if (it != expr_end) {
					jule::Ptr<_1d06242bd_Fn> _127629_f = *it;
					{
						if (((!(_229912595_Test)) && _1b5a91227_hasDirective(&(_127629_f.get()._field_Directives), jule::Str("test", 4)))) {
							goto _iter_next_1b84784ad;
						};
						if (((!(_127629_f.get()._field_Binded)) && (_127629_f.get()._field_Token != nullptr))) {
							_1b5a7da1c_func(_self_, &(_127629_f));
							_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
						};
					}
					_iter_next_1b84784ad:;
					++it;
					goto _iter_begin_1b84784ad;
				}
				_iter_end_1b84784ad:;
			};
		}));
	}));
}



inline void _1b5a8139e_pushInit(jule::Ptr<_1b5a75a36_ObjectCoder> _self_, jule::Ptr<_1d2195bb7_Package>* _128933_pkg) {
	_1b5a81e71_iterFiles(_128933_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)>([=](jule::Ptr<_1d040428a_SymbolTable>* _129032_file) mutable -> void {
		{
			auto expr = &((*(_129032_file)).get()._field_Funcs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b847a8cd:;
			if (it != expr_end) {
				jule::Ptr<_1d06242bd_Fn> _129120_f = *it;
				{
					if (_129120_f.get()._field_Ident.equal("init", 4)) {
						_1b5a7675c_indent(_self_);
						_1b5a761c9_write(_self_, static__1b59d3b81_func(&(_129120_f)));
						_1b5a761c9_write(_self_, jule::Str("();\n", 4));
					};
				}
				_iter_next_1b847a8cd:;
				++it;
				goto _iter_begin_1b847a8cd;
			}
			_iter_end_1b847a8cd:;
		};
	}));
}



inline void _1b5a8157a_initCaller(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a761c9_write(_self_, jule::Str("void __jule_call_initializers(void) {\n", 38));
	_1b5a763a5_addIndent(_self_);
	_1b5a78c04_iterPackages(_self_, jule::Fn<void(jule::Ptr<_1d2195bb7_Package>*)>([=](jule::Ptr<_1d2195bb7_Package>* _130435_pkg) mutable -> void {
		_1b5a8139e_pushInit(_self_, _130435_pkg);
	}));
	_1b5a76581_doneIndent(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n}", 2));
}



inline void _1b5a81756_end(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a761c9_write(_self_, jule::Str("int main(int argc, char *argv[], char *envp[]) {\n    jule::setup_argv(argc, argv);\n    jule::setup_envp(envp);\n\n    __jule_call_initializers();\n    ", 148));
	if (_229912595_Test) {
		_1b5a761c9_write(_self_, jule::Str("test_point();", 13));
	} else {
		_1b5a761c9_write(_self_, jule::Str("entry_point();", 14));
	};
	_1b5a761c9_write(_self_, jule::Str("\n\n    return EXIT_SUCCESS;\n}", 28));
}



inline void _1b5a81932_serializeHead(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a7897e_prepareStructures(_self_);
	_1b5a78dd0_buildTraitMap(_self_);
	_1b5a78352_head(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n", 1));
	_1b5a80007_decls(_self_);
	if ((_self_.get()._field_resultDecls.len() > 0LL)) {
		jule::Str _133921_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_headPos);;
		{
			auto expr = &(_self_.get()._field_resultDecls);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b848151b:;
			if (it != expr_end) {
				jule::Str _134020_decl = *it;
				{
					_133921_head+=_134020_decl;
					_self_.get()._field_declPos+=_134020_decl.len();
				}
				_iter_next_1b848151b:;
				++it;
				goto _iter_begin_1b848151b;
			}
			_iter_end_1b848151b:;
		};
		_133921_head+=_self_.get()._field_Obj.slice(_self_.get()._field_headPos);
		_self_.get()._field_Obj=_133921_head;
	};
	_1b5a761c9_write(_self_, jule::Str("\n", 1));
	_1b5a80e4d_structures(_self_);
	_1b5a81129_funcs(_self_);
	_1b5a8157a_initCaller(_self_);
	_1b5a761c9_write(_self_, jule::Str("\n\n", 2));
	if ((_self_.get()._field_anyObj.len() > 0LL)) {
		jule::Str _135521_head = _self_.get()._field_Obj.slice(0LL, _self_.get()._field_declPos);;
		_135521_head+=_self_.get()._field_anyObj;
		_135521_head+=_self_.get()._field_Obj.slice(_self_.get()._field_declPos);
		_self_.get()._field_Obj=_135521_head;
	};
}



inline void _1b5a81b0d_Serialize(jule::Ptr<_1b5a75a36_ObjectCoder> _self_) {
	_1b5a81932_serializeHead(_self_);
	_1b5a81756_end(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1b5a75a36_ObjectCoder _Src) {
	_Stream << "ObjectCoder{";
	_Stream << "Obj:" << _Src._field_Obj << ", ";
	_Stream << "resultDecls:" << _Src._field_resultDecls << ", ";
	_Stream << "anyObj:" << _Src._field_anyObj << ", ";
	_Stream << "ir:" << _Src._field_ir << ", ";
	_Stream << "info:" << _Src._field_info << ", ";
	_Stream << "tmap:" << _Src._field_tmap << ", ";
	_Stream << "indentBuffer:" << _Src._field_indentBuffer << ", ";
	_Stream << "resultMap:" << _Src._field_resultMap << ", ";
	_Stream << "anyTypeMap:" << _Src._field_anyTypeMap << ", ";
	_Stream << "traitCastMap:" << _Src._field_traitCastMap << ", ";
	_Stream << "ec:" << _Src._field_ec << ", ";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "tc:" << _Src._field_tc << ", ";
	_Stream << "dc:" << _Src._field_dc << ", ";
	_Stream << "headPos:" << _Src._field_headPos << ", ";
	_Stream << "declPos:" << _Src._field_declPos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ptr<_1d075ea35_ObjectDeadCode> static__1d07918ad_new(jule::Ptr<_1d2621e34_IR>* _3424_ir) {
	return jule::new_ptr<_1d075ea35_ObjectDeadCode>(_1d075ea35_ObjectDeadCode{._field_ir=(*(_3424_ir))});;
}



inline jule::Bool _1b66cc78b_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d21494c8_Trait>* _4030_t) {
	jule::Slice<jule::Ptr<_1d21494c8_Trait>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b66ce4d5:;
			{
				_4117_live=_self_.get()._field_live._field_traits;
			}
		}
		_match_end_1b66ce1e9:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66cebbc:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b66cebbc:;
			++it;
			_5213_i++;
			goto _iter_begin_1b66cebbc;
		}
		_iter_end_1b66cebbc:;
	};
	return false;;
}

inline jule::Bool _1b66d23b7_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d0626e6e_FnIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1d0626e6e_FnIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b66d4584:;
			{
				_4117_live=_self_.get()._field_live._field_fns;
			}
		}
		_match_end_1b66d44c9:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66d4d59:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b66d4d59:;
			++it;
			_5213_i++;
			goto _iter_begin_1b66d4d59;
		}
		_iter_end_1b66d4d59:;
	};
	return false;;
}

inline jule::Bool _1b66d939c_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d0611bd4_StructIns>* _4030_t) {
	jule::Slice<jule::Ptr<_1d0611bd4_StructIns>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b66dca65:;
			{
				_4117_live=_self_.get()._field_live._field_structs;
			}
		}
		_match_end_1b66dc7e0:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66dcb42:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b66dcb42:;
			++it;
			_5213_i++;
			goto _iter_begin_1b66dcb42;
		}
		_iter_end_1b66dcb42:;
	};
	return false;;
}

inline jule::Bool _1b66e01d8_isLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d21bb65a_Var>* _4030_t) {
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _4117_live = nullptr;;
	{
		
{
			_case_begin_1b66e1c23:;
			{
				_4117_live=_self_.get()._field_live._field_vars;
			}
		}
		_match_end_1b66e1b02:;
	};
	{
		auto expr = &(_4117_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66e2482:;
		if (it != expr_end) {
			jule::I64 _5213_i = it - expr->begin();
			{
				if ((_4117_live[_5213_i] == (*(_4030_t)))) {
					return true;;
				};
			}
			_iter_next_1b66e2482:;
			++it;
			_5213_i++;
			goto _iter_begin_1b66e2482;
		}
		_iter_end_1b66e2482:;
	};
	return false;;
}



inline void _1b66ccadd_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d21494c8_Trait> _6035_t) {
	{
		
{
			_case_begin_1b66d14d7:;
			{
				_self_.get()._field_live._field_traits = jule::alloc_for_append(_self_.get()._field_live._field_traits,1);_self_.get()._field_live._field_traits.__push(_6035_t);;
			}
		}
		_match_end_1b66d1185:;
	};
}

inline void _1b66d2e12_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d0626e6e_FnIns> _6035_t) {
	{
		
{
			_case_begin_1b66d6d06:;
			{
				_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_6035_t);;
			}
		}
		_match_end_1b66d6a81:;
	};
}

inline void _1b66d8e29_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d0611bd4_StructIns> _6035_t) {
	{
		
{
			_case_begin_1b66da623:;
			{
				_self_.get()._field_live._field_structs = jule::alloc_for_append(_self_.get()._field_live._field_structs,1);_self_.get()._field_live._field_structs.__push(_6035_t);;
			}
		}
		_match_end_1b66da337:;
	};
}

inline void _1b66e053a_pushLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d21bb65a_Var> _6035_t) {
	{
		
{
			_case_begin_1b66e4066:;
			{
				_self_.get()._field_live._field_vars = jule::alloc_for_append(_self_.get()._field_live._field_vars,1);_self_.get()._field_live._field_vars.__push(_6035_t);;
			}
		}
		_match_end_1b66e3e89:;
	};
}



inline void _1d07921b6_setReferencesAsLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d0629dc8_ReferenceStack>* _7344_rs) {
	if (((*(_7344_rs)) == nullptr)) {
		return;;
	};
	jule::I64 _7717_i = 0LL;;
	for (; (_7717_i < _1d062a4b1_Len((*(_7344_rs)).ptr())); (_7717_i)++) {
		{
			jule::Any _7921_ref = _1d062a7be_At((*(_7344_rs)).ptr(), _7717_i);;
			{
				auto &_match_expr{ _7921_ref };
				
				if (_match_expr.type == &__jule_any_type10) {
					_case_begin_1b66cb38e:;
					{
						jule::Ptr<_1d21494c8_Trait> _8225_t = _7921_ref.cast_ptr<_1d21494c8_Trait>(&__jule_any_type10);;
						if (_1b66cc78b_isLive(_self_, &(_8225_t))) {
							goto _iter_next_1b66ca8aa;
						};
						_1b66ccadd_pushLive(_self_, _8225_t);
						{
							auto expr = &(_8225_t.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b66cd46d:;
							if (it != expr_end) {
								jule::Ptr<_1d06242bd_Fn> _8729_ins = *it;
								{
									{
										auto expr = &(_8729_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b66d1a6a:;
										if (it != expr_end) {
											jule::Ptr<_1d0626e6e_FnIns> _8833_mins = *it;
											{
												if (_1b66d23b7_isLive(_self_, &(_8833_mins))) {
													goto _iter_next_1b66d1a6a;
												};
												_1b66d2e12_pushLive(_self_, _8833_mins);
												_1d07921b6_setReferencesAsLive(_self_, &(_8833_mins.get()._field_Refers));
											}
											_iter_next_1b66d1a6a:;
											++it;
											goto _iter_begin_1b66d1a6a;
										}
										_iter_end_1b66d1a6a:;
									};
								}
								_iter_next_1b66cd46d:;
								++it;
								goto _iter_begin_1b66cd46d;
							}
							_iter_end_1b66cd46d:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1b66cb405:;
					{
						jule::Ptr<_1d0626e6e_FnIns> _9725_f = _7921_ref.cast_ptr<_1d0626e6e_FnIns>(&__jule_any_type7);;
						if (_1b66d23b7_isLive(_self_, &(_9725_f))) {
							goto _match_end_1b66cb526;
						};
						if (((_9725_f.get()._field_Owner != nullptr) && (!(_9725_f.get()._field_Decl.get()._field_Statically)))) {
							if ((!(_1b66d939c_isLive(_self_, &(_9725_f.get()._field_Owner))))) {
								_1b66d8e29_pushLive(_self_, _9725_f.get()._field_Owner);
								_1d07921b6_setReferencesAsLive(_self_, &(_9725_f.get()._field_Owner.get()._field_Refers));
							};
						};
						_1b66d2e12_pushLive(_self_, _9725_f);
						_1d07921b6_setReferencesAsLive(_self_, &(_9725_f.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type8) {
					_case_begin_1b66cb636:;
					{
						jule::Ptr<_1d21bb65a_Var> _11025_v = _7921_ref.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8);;
						if (_1b66e01d8_isLive(_self_, &(_11025_v))) {
							goto _match_end_1b66cb526;
						};
						_1b66e053a_pushLive(_self_, _11025_v);
						_1d07921b6_setReferencesAsLive(_self_, &(_11025_v.get()._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type9) {
					_case_begin_1b66cb69c:;
					{
						jule::Ptr<_1d0611bd4_StructIns> _11725_s = _7921_ref.cast_ptr<_1d0611bd4_StructIns>(&__jule_any_type9);;
						if (_1b66d939c_isLive(_self_, &(_11725_s))) {
							goto _match_end_1b66cb526;
						};
						_1b66d8e29_pushLive(_self_, _11725_s);
						_1d07921b6_setReferencesAsLive(_self_, &(_11725_s.get()._field_Refers));
						{
							auto expr = &(_11725_s.get()._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b66e65eb:;
							if (it != expr_end) {
								jule::Ptr<_1d06242bd_Fn> _12329_ins = *it;
								{
									{
										auto expr = &(_12329_ins.get()._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1b66e75ca:;
										if (it != expr_end) {
											jule::Ptr<_1d0626e6e_FnIns> _12433_mins = *it;
											{
												if (_1b66d23b7_isLive(_self_, &(_12433_mins))) {
													goto _iter_next_1b66e75ca;
												};
												_1b66d2e12_pushLive(_self_, _12433_mins);
												_1d07921b6_setReferencesAsLive(_self_, &(_12433_mins.get()._field_Refers));
											}
											_iter_next_1b66e75ca:;
											++it;
											goto _iter_begin_1b66e75ca;
										}
										_iter_end_1b66e75ca:;
									};
								}
								_iter_next_1b66e65eb:;
								++it;
								goto _iter_begin_1b66e65eb;
							}
							_iter_end_1b66e65eb:;
						};
					}
				}
				_match_end_1b66cb526:;
			};
		}
	_iter_next_1b66ca8aa:;
	}
	_iter_end_1b66ca8aa:;;
}



inline void _1d079243b_inits(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d2195bb7_Package>* _13630_pkg) {
	{
		auto expr = &((*(_13630_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66cac51:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _13721_file = *it;
			{
				{
					auto expr = &(_13721_file.get()._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b66e99c8:;
					if (it != expr_end) {
						jule::Ptr<_1d06242bd_Fn> _13825_f = *it;
						{
							if (_13825_f.get()._field_Ident.equal("init", 4)) {
								jule::Ptr<_1d0626e6e_FnIns> _14029_ins = _13825_f.get()._field_Instances[0LL];;
								_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_14029_ins);;
								_1d07921b6_setReferencesAsLive(_self_, &(_14029_ins.get()._field_Refers));
							};
						}
						_iter_next_1b66e99c8:;
						++it;
						goto _iter_begin_1b66e99c8;
					}
					_iter_end_1b66e99c8:;
				};
			}
			_iter_next_1b66cac51:;
			++it;
			goto _iter_begin_1b66cac51;
		}
		_iter_end_1b66cac51:;
	};
}



inline void _1d07926b1_collectLivePackage(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d2195bb7_Package>* _14843_pkg) {
	_1d079243b_inits(_self_, _14843_pkg);
	if (_229912595_Test) {
		{
			auto expr = &((*(_14843_pkg)).get()._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b66ebba6:;
			if (it != expr_end) {
				jule::Ptr<_1d040428a_SymbolTable> _15425_file = *it;
				{
					{
						auto expr = &(_15425_file.get()._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b66ec4c0:;
						if (it != expr_end) {
							jule::Ptr<_1d06242bd_Fn> _15529_f = *it;
							{
								if (_1d07946c4_hasDirective(&(_15529_f.get()._field_Directives), jule::Str("test", 4))) {
									jule::Ptr<_1d0626e6e_FnIns> _15733_ins = _15529_f.get()._field_Instances[0LL];;
									_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_15733_ins);;
									_1d07921b6_setReferencesAsLive(_self_, &(_15733_ins.get()._field_Refers));
								};
							}
							_iter_next_1b66ec4c0:;
							++it;
							goto _iter_begin_1b66ec4c0;
						}
						_iter_end_1b66ec4c0:;
					};
				}
				_iter_next_1b66ebba6:;
				++it;
				goto _iter_begin_1b66ebba6;
			}
			_iter_end_1b66ebba6:;
		};
	};
}



inline void _1d079288c_collectLive(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66ea0c2:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _16721_used = *it;
			{
				if ((!(_16721_used.get()._field_Binded))) {
					_1d07926b1_collectLivePackage(_self_, &(_16721_used.get()._field_Package));
				};
			}
			_iter_next_1b66ea0c2:;
			++it;
			goto _iter_begin_1b66ea0c2;
		}
		_iter_end_1b66ea0c2:;
	};
	_1d07926b1_collectLivePackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
	jule::Ptr<_1d06242bd_Fn> _17517_main = _1d219714c_FindFn(_self_.get()._field_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
	jule::Ptr<_1d0626e6e_FnIns> _17617_ins = _17517_main.get()._field_Instances[0LL];;
	_self_.get()._field_live._field_fns = jule::alloc_for_append(_self_.get()._field_live._field_fns,1);_self_.get()._field_live._field_fns.__push(_17617_ins);;
	_1d07921b6_setReferencesAsLive(_self_, &(_17617_ins.get()._field_Refers));
}



inline void _1d0792b12_removeDeadGlobals(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _18142_vars) {
	jule::I64 _18217_i = 0LL;;
	while ((_18217_i < (*(_18142_vars)).len())) {
		{
			jule::Ptr<_1d21bb65a_Var> _18417_v = (*(_18142_vars))[_18217_i];;
			if (_1b66e01d8_isLive(_self_, &(_18417_v))) {
				(_18217_i)++;
				goto _iter_next_1b6701b45;
			};
			(*(_18142_vars))=jule::append((*(_18142_vars)).slice(0LL, _18217_i),(*(_18142_vars)).slice((_18217_i + 1LL)));
		}
	_iter_next_1b6701b45:;
	}
	_iter_end_1b6701b45:;;
}



inline void _1d0792d87_removeDeadFns(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d06242bd_Fn>>* _19338_funcs) {
	jule::I64 _19417_i = 0LL;;
	while ((_19417_i < (*(_19338_funcs)).len())) {
		{
			jule::Ptr<_1d06242bd_Fn> _19621_f = (*(_19338_funcs))[_19417_i];;
			jule::I64 _19721_j = 0LL;;
			while ((_19721_j < _19621_f.get()._field_Instances.len())) {
				{
					jule::Ptr<_1d0626e6e_FnIns> _19921_ins = _19621_f.get()._field_Instances[_19721_j];;
					if (_1b66d23b7_isLive(_self_, &(_19921_ins))) {
						(_19721_j)++;
						goto _iter_next_1b6704cbe;
					};
					_19621_f.get()._field_Instances=jule::append(_19621_f.get()._field_Instances.slice(0LL, _19721_j),_19621_f.get()._field_Instances.slice((_19721_j + 1LL)));
				}
			_iter_next_1b6704cbe:;
			}
			_iter_end_1b6704cbe:;;
			if ((_19621_f.get()._field_Instances.len() == 0LL)) {
				(*(_19338_funcs))=jule::append((*(_19338_funcs)).slice(0LL, _19417_i),(*(_19338_funcs)).slice((_19417_i + 1LL)));
				goto _iter_next_1b6703570;
			};
			(_19417_i)++;
		}
	_iter_next_1b6703570:;
	}
	_iter_end_1b6703570:;;
}



inline void _1d079310c_removeDeadStructs(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d060ddbd_Struct>>* _21442_structs) {
	jule::I64 _21517_i = 0LL;;
	while ((_21517_i < (*(_21442_structs)).len())) {
		{
			jule::Ptr<_1d060ddbd_Struct> _21721_s = (*(_21442_structs))[_21517_i];;
			jule::I64 _21821_j = 0LL;;
			while ((_21821_j < _21721_s.get()._field_Instances.len())) {
				{
					jule::Ptr<_1d0611bd4_StructIns> _22025_ins = _21721_s.get()._field_Instances[_21821_j];;
					_1d0792d87_removeDeadFns(_self_, &(_22025_ins.get()._field_Methods));
					if (((_22025_ins.get()._field_Methods.len() != 0LL) || _1b66d939c_isLive(_self_, &(_22025_ins)))) {
						(_21821_j)++;
						goto _iter_next_1b6708960;
					};
					_21721_s.get()._field_Instances=jule::append(_21721_s.get()._field_Instances.slice(0LL, _21821_j),_21721_s.get()._field_Instances.slice((_21821_j + 1LL)));
				}
			_iter_next_1b6708960:;
			}
			_iter_end_1b6708960:;;
			if ((_21721_s.get()._field_Instances.len() == 0LL)) {
				(*(_21442_structs))=jule::append((*(_21442_structs)).slice(0LL, _21517_i),(*(_21442_structs)).slice((_21517_i + 1LL)));
				goto _iter_next_1b67079c5;
			};
			(_21517_i)++;
		}
	_iter_next_1b67079c5:;
	}
	_iter_end_1b67079c5:;;
}



inline void _1d0793382_removeDeadTraits(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1d21494c8_Trait>>* _23641_traits) {
	jule::I64 _23717_i = 0LL;;
	while ((_23717_i < (*(_23641_traits)).len())) {
		{
			jule::Ptr<_1d21494c8_Trait> _23921_t = (*(_23641_traits))[_23717_i];;
			if ((!(_1b66cc78b_isLive(_self_, &(_23921_t))))) {
				(*(_23641_traits))=jule::append((*(_23641_traits)).slice(0LL, _23717_i),(*(_23641_traits)).slice((_23717_i + 1LL)));
				goto _iter_next_1b670bda3;
			};
			jule::I64 _24421_j = 0LL;;
			while ((_24421_j < _23921_t.get()._field_Implemented.len())) {
				{
					jule::Ptr<_1d060ddbd_Struct> _24621_s = _23921_t.get()._field_Implemented[_24421_j];;
					if ((_24621_s.get()._field_Instances.len() > 0LL)) {
						(_24421_j)++;
						goto _iter_next_1b670c8dc;
					};
					_23921_t.get()._field_Implemented=jule::append(_23921_t.get()._field_Implemented.slice(0LL, _24421_j),_23921_t.get()._field_Implemented.slice((_24421_j + 1LL)));
				}
			_iter_next_1b670c8dc:;
			}
			_iter_end_1b670c8dc:;;
			(_23717_i)++;
		}
	_iter_next_1b670bda3:;
	}
	_iter_end_1b670bda3:;;
}



inline void _1d0793607_removeDeadsFile(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d040428a_SymbolTable>* _25740_file) {
	_1d0792d87_removeDeadFns(_self_, &((*(_25740_file)).get()._field_Funcs));
	_1d079310c_removeDeadStructs(_self_, &((*(_25740_file)).get()._field_Structs));
	_1d0793382_removeDeadTraits(_self_, &((*(_25740_file)).get()._field_Traits));
	_1d0792b12_removeDeadGlobals(_self_, &((*(_25740_file)).get()._field_Vars));
}



inline void _1d079387c_removeDeadsPackage(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_, jule::Ptr<_1d2195bb7_Package>* _26443_pkg) {
	{
		auto expr = &((*(_26443_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6711bcc:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _26521_file = *it;
			{
				_1d0793607_removeDeadsFile(_self_, &(_26521_file));
			}
			_iter_next_1b6711bcc:;
			++it;
			goto _iter_begin_1b6711bcc;
		}
		_iter_end_1b6711bcc:;
	};
}



inline void _1d0793a58_removeDeads(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_) {
	{
		auto expr = &(_self_.get()._field_ir.get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b671233c:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _27121_used = *it;
			{
				if ((!(_27121_used.get()._field_Binded))) {
					_1d079387c_removeDeadsPackage(_self_, &(_27121_used.get()._field_Package));
				};
			}
			_iter_next_1b671233c:;
			++it;
			goto _iter_begin_1b671233c;
		}
		_iter_end_1b671233c:;
	};
	_1d079387c_removeDeadsPackage(_self_, &(_self_.get()._field_ir.get()._field_Main));
}



inline void _1d0793c34_elimanate(jule::Ptr<_1d075ea35_ObjectDeadCode> _self_) {
	_1d079288c_collectLive(_self_);
	_1d0793a58_removeDeads(_self_);
}







std::ostream &operator<<(std::ostream &_Stream, _1d075ea35_ObjectDeadCode _Src) {
	_Stream << "ObjectDeadCode{";
	_Stream << "live:" << _Src._field_live << ", ";
	_Stream << "ir:" << _Src._field_ir;
	_Stream << "}";
	return _Stream;
}



inline __jule_tuple_x_1d2621e34_IR__jule_tuple_s_22ba3c6bd_Log static__1d26223b8_Build(jule::Str _2721_path, jule::I64 _2732_flags) {
	__jule_tuple_x_1d2621e34_IR__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	jule::Ptr<_1d261e6c3_JuleImporter> _2817_importer = static__1d261eb02_New(_1d2623bd3_buildCompileInfo());;
	jule::Slice<jule::Ptr<_1d05aa7a4_Ast>> _2918_files;;
	jule::Slice<_22ba3c6bd_Log> _2929_logs;;
	({
		__jule_tuple_sx_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d2620e66_ImportPackage(_2817_importer.ptr(), _2721_path, true);
		_2918_files = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Str _3313_root = _2721_path;;
	if ((_2918_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1d2195bb7_Package> _3918_pkg;;
	({
		__jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d22016a1_AnalyzePackage(_2918_files, jule::Trait<_1d21903cb_Importer>(_2817_importer, 0), _2732_flags);
		_3918_pkg = __jule_assign_result.__jule_result_arg0;
		_2929_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2929_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _2929_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1d2621e34_IR> _4417_ir = jule::new_ptr<_1d2621e34_IR>(_1d2621e34_IR{._field_Root=_3313_root, ._field_Main=_3918_pkg, ._field_Used=_1d261ed66_AllPackages(_2817_importer.ptr()), });;
	_4417_ir.get()._field_Passes=_1d26239d5_getAllUniquePasses(&(_4417_ir.get()._field_Main), _4417_ir.get()._field_Used);
	__jule_func_result.__jule_result_arg0 = _4417_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1d2622819_appendStructs(_1d2621e34_IR* _self_, jule::Ptr<_1d2195bb7_Package>* _5633_p, jule::Slice<jule::Ptr<_1d060ddbd_Struct>>* _5657_buffer) {
	{
		auto expr = &((*(_5633_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6695a62:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _5721_f = *it;
			{
				{
					auto expr = &(_5721_f.get()._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b669639d:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> _5825_s = *it;
						{
							if ((!(_5825_s.get()._field_Binded))) {
								(*(_5657_buffer)) = jule::alloc_for_append((*(_5657_buffer)),1);(*(_5657_buffer)).__push(_5825_s);;
							};
						}
						_iter_next_1b669639d:;
						++it;
						goto _iter_begin_1b669639d;
					}
					_iter_end_1b669639d:;
				};
			}
			_iter_next_1b6695a62:;
			++it;
			goto _iter_begin_1b6695a62;
		}
		_iter_end_1b6695a62:;
	};
}



inline jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _1d2622a7d_GetAllStructures(_1d2621e34_IR* _self_) {
	jule::Slice<jule::Ptr<_1d060ddbd_Struct>> _6917_buffer = nullptr;;
	_1d2622819_appendStructs(_self_, &((*(_self_))._field_Main), &(_6917_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6696ce9:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _7121_u = *it;
			{
				if ((!(_7121_u.get()._field_Binded))) {
					_1d2622819_appendStructs(_self_, &(_7121_u.get()._field_Package), &(_6917_buffer));
				};
			}
			_iter_next_1b6696ce9:;
			++it;
			goto _iter_begin_1b6696ce9;
		}
		_iter_end_1b6696ce9:;
	};
	return _6917_buffer;;
}



inline void _1d2622d9c_appendGlobals(_1d2621e34_IR* _self_, jule::Ptr<_1d2195bb7_Package>* _7933_p, jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _7957_buffer) {
	{
		auto expr = &((*(_7933_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b669889a:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _8021_f = *it;
			{
				{
					auto expr = &(_8021_f.get()._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b66991a3:;
					if (it != expr_end) {
						jule::Ptr<_1d21bb65a_Var> _8125_v = *it;
						{
							if ((((_8125_v.get()._field_Token != nullptr) && (!(_8125_v.get()._field_Binded))) && (!(_8125_v.get()._field_Constant)))) {
								(*(_7957_buffer)) = jule::alloc_for_append((*(_7957_buffer)),1);(*(_7957_buffer)).__push(_8125_v);;
							};
						}
						_iter_next_1b66991a3:;
						++it;
						goto _iter_begin_1b66991a3;
					}
					_iter_end_1b66991a3:;
				};
			}
			_iter_next_1b669889a:;
			++it;
			goto _iter_begin_1b669889a;
		}
		_iter_end_1b669889a:;
	};
}



inline jule::Slice<jule::Ptr<_1d21bb65a_Var>> _1d2623111_GetAllGlobals(_1d2621e34_IR* _self_) {
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _9217_buffer = nullptr;;
	_1d2622d9c_appendGlobals(_self_, &((*(_self_))._field_Main), &(_9217_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b669a748:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _9421_u = *it;
			{
				if ((!(_9421_u.get()._field_Binded))) {
					_1d2622d9c_appendGlobals(_self_, &(_9421_u.get()._field_Package), &(_9217_buffer));
				};
			}
			_iter_next_1b669a748:;
			++it;
			goto _iter_begin_1b669a748;
		}
		_iter_end_1b669a748:;
	};
	return _9217_buffer;;
}



inline void _1d26232dc_Order(_1d2621e34_IR* _self_) {
	(*(_self_))._field_Ordered._field_Structs=_1d2622a7d_GetAllStructures(_self_);
	(*(_self_))._field_Ordered._field_Globals=_1d2623111_GetAllGlobals(_self_);
	static__1d26250ad_orderStructures(&((*(_self_))._field_Ordered._field_Structs));
	static__1d26252bc_orderVars(&((*(_self_))._field_Ordered._field_Globals));
}







std::ostream &operator<<(std::ostream &_Stream, _1d2621e34_IR _Src) {
	_Stream << "IR{";
	_Stream << "Root:" << _Src._field_Root << ", ";
	_Stream << "Passes:" << _Src._field_Passes << ", ";
	_Stream << "Main:" << _Src._field_Main << ", ";
	_Stream << "Used:" << _Src._field_Used << ", ";
	_Stream << "Ordered:" << _Src._field_Ordered;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1d061208b_Str(_1d0611bd4_StructIns* _self_) {
	jule::Str _25017_kind = jule::Str();;
	_25017_kind+=(*(_self_))._field_Decl.get()._field_Ident;
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		(_25017_kind).append("[", 1);
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b6e1b914:;
			if (it != expr_end) {
				jule::Ptr<_1d21d05b4_InsGeneric> *_25420_g = it;
				{
					_25017_kind+=_1d21d2242_Str((*(_25420_g)).get()._field_Kind.ptr());
					(_25017_kind).append(",", 1);
				}
				_iter_next_1b6e1b914:;
				++it;
				goto _iter_begin_1b6e1b914;
			}
			_iter_end_1b6e1b914:;
		};
		(_25017_kind).mut_slice(0LL, (_25017_kind.len() - 1LL));;
		(_25017_kind).append("]", 1);
	};
	return _25017_kind;;
}



inline jule::Bool _1d0612399_Equal(jule::Ptr<_1d0611bd4_StructIns> _self_, jule::Ptr<_1d21d1d46_TypeKind> _26521_other) {
	jule::Ptr<_1d0611bd4_StructIns> _26613_s = _1d21d59b5_Struct(_26521_other.ptr());;
	if ((_26613_s == nullptr)) {
		return false;;
	};
	if ((_self_.get()._field_Decl != _26613_s.get()._field_Decl)) {
		return false;;
	};
	if ((_self_.get()._field_Generics.len() != _26613_s.get()._field_Generics.len())) {
		return false;;
	};
	jule::I64 _27917_i = 0LL;;
	for (; (_27917_i < _self_.get()._field_Generics.len()); (_27917_i)++) {
		{
			if ((!(_1d21d2550_Equal(_self_.get()._field_Generics[_27917_i].get()._field_Kind, _26613_s.get()._field_Generics[_27917_i].get()._field_Kind)))) {
				return false;;
			};
		}
	_iter_next_1b6e1ea8d:;
	}
	_iter_end_1b6e1ea8d:;;
	return true;;
}



inline jule::Bool _1d06127c8_Same(_1d0611bd4_StructIns* _self_, jule::Ptr<_1d0611bd4_StructIns> _29319_s) {
	if ((((*(_self_))._field_Decl != _29319_s.get()._field_Decl) || (_29319_s.get()._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e21ae5:;
		if (it != expr_end) {
			jule::I64 _29713_i = it - expr->begin();
			jule::Ptr<_1d21d05b4_InsGeneric> *_29716_g = it;
			{
				jule::Ptr<_1d21d05b4_InsGeneric> _29817_g2 = _29319_s.get()._field_Generics[_29713_i];;
				if ((((*(_29716_g)).get()._field_Kind.get()._field_BindIdent != _29817_g2.get()._field_Kind.get()._field_BindIdent) || (!(_1d21d2550_Equal((*(_29716_g)).get()._field_Kind, _29817_g2.get()._field_Kind))))) {
					return false;;
				};
			}
			_iter_next_1b6e21ae5:;
			++it;
			_29713_i++;
			goto _iter_begin_1b6e21ae5;
		}
		_iter_end_1b6e21ae5:;
	};
	return true;;
}



inline jule::Ptr<_1d06242bd_Fn> _1d0612b80_FindMethod(_1d0611bd4_StructIns* _self_, jule::Str _30829_ident, jule::Bool _30841_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e23c6d:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _30921_f = *it;
			{
				if (((_30921_f.get()._field_Statically == _30841_statically) && (_30921_f.get()._field_Ident == _30829_ident))) {
					return _30921_f;;
				};
			}
			_iter_next_1b6e23c6d:;
			++it;
			goto _iter_begin_1b6e23c6d;
		}
		_iter_end_1b6e23c6d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d06111de_FieldIns> _1d0612e8d_FindField(_1d0611bd4_StructIns* _self_, jule::Str _31928_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e24488:;
		if (it != expr_end) {
			jule::Ptr<_1d06111de_FieldIns> _32021_f = *it;
			{
				if ((_32021_f.get()._field_Decl.get()._field_Ident == _31928_ident)) {
					return _32021_f;;
				};
			}
			_iter_next_1b6e24488:;
			++it;
			goto _iter_begin_1b6e24488;
		}
		_iter_end_1b6e24488:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21bb65a_Var> _1d061329b_FindStatic(_1d0611bd4_StructIns* _self_, jule::Str _33029_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e26028:;
		if (it != expr_end) {
			jule::Ptr<_1d21bb65a_Var> _33121_v = *it;
			{
				if ((_33121_v.get()._field_Ident == _33029_ident)) {
					return _33121_v;;
				};
			}
			_iter_next_1b6e26028:;
			++it;
			goto _iter_begin_1b6e26028;
		}
		_iter_end_1b6e26028:;
	};
	return nullptr;;
}







std::ostream &operator<<(std::ostream &_Stream, _1d0611bd4_StructIns _Src) {
	_Stream << _1d061208b_Str(&_Src);
	return _Stream;
}



inline jule::Ptr<_22bac9925_Cmd> static__22bac9d76_New(jule::Str _2619_path) {
	return jule::new_ptr<_22bac9925_Cmd>(_22bac9925_Cmd{._field_path=_2619_path, });;
}



inline jule::VoidExceptional _22baca052_Spawn(_22bac9925_Cmd* _self_) {
	({
		auto except = _22bb1e195_spawn(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _22baca22d_Kill(_22bac9925_Cmd* _self_) {
	({
		auto except = _22bb1e371_kill(_self_);
		if (!except.ok()) {
			return jule::VoidExceptional(except.error);
		}
	});
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22baca492_Wait(_22bac9925_Cmd* _self_) {
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(({
		auto except = _22bb1e5d5_wait(_self_);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::I64>(except.error);
		} 0;});
	})));;
}



inline jule::VoidExceptional _22bb1e195_spawn(_22bac9925_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		jule::panic(jule::Str("command is already spawned", 26) + jule::Str("\nlocation: std/process/cmd_unix.jule:79:13"));;
	};
	jule::Str _8113_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _8213_pipe = jule::Array<signed,2>(0);;
	if ((pipe((&(_8213_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	if ((_22a87674a_Fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_SETFD, static_cast<jule::I64>((fcntl(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), F_GETFD) | FD_CLOEXEC))) == -1LL)) {
		_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
		_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
		return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=static_cast<jule::I64>(fork());
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1d22cb21a:;
			{
				return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(3LL), &__jule_any_type0));
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1d22ca2d5:;
			{
				_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				jule::Slice<jule::Str> _9721_args = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len()));;
				_9721_args[0LL]=_8113_path;
				_9721_args=jule::append(_9721_args,(*(_self_))._field_Args);
				({
					auto except = _22bb1de20_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional(except.error);
					}
				});
				_22bb1dc11_execvp(&(_8113_path), &(_9721_args));
				jule::Str _10217_code = _22bb1a108_Itoa(static_cast<jule::I64>(_2299ab3ca_GetLastErrno()));;
				{
					_22a8995c5_Write(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])), (&(_10217_code[0LL])), static_cast<jule::U64>(static_cast<jule::U64>(_10217_code.len())));
				};
				_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				_22bb207c3_Exit(1LL);
			}
		}
		else {
			_case_begin_1d22c814b:;
			{
				_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[1LL])));
				jule::Array<jule::U8,16> _10821_buf = jule::Array<jule::U8,16>(0);;
				jule::I64 _10917_n = _22a898d66_Read(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])), (&(_10821_buf[0LL])), 16LLU);;
				_22a8991da_Close(static_cast<jule::I64>(static_cast<jule::I64>(_8213_pipe[0LL])));
				if ((_10917_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I64 _11322_code = 0;;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _22bacb3d8_AtoiBp((&(_10821_buf[0LL])), _10917_n);
						_11322_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional(jule::Any(_22bb1eccd_processErrorFromCode(_11322_code), &__jule_any_type0));
				};
			}
		}
		_match_end_1d22c80e6:;
	};
	return jule::VoidExceptional();
}



inline jule::VoidExceptional _22bb1e371_kill(_22bac9925_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:121:13"));;
	};
	if ((kill((*(_self_))._field_attrs._field_pid, 1LL) != 0LL)) {
		return jule::VoidExceptional(jule::Any(_22bb20020_getLastProcessError(), &__jule_any_type0));
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::VoidExceptional();
}



inline jule::Exceptional<jule::I64> _22bb1e5d5_wait(_22bac9925_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		jule::panic(jule::Str("command is not spawned", 22) + jule::Str("\nlocation: std/process/cmd_unix.jule:131:13"));;
	};
	jule::I64 _13317_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_13317_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I64>(jule::Any(_22bb20020_getLastProcessError(), &__jule_any_type0));
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I64>(jule::Any(), static_cast<jule::I64>(WEXITSTATUS(_13317_stat)));;
}







std::ostream &operator<<(std::ostream &_Stream, _22bac9925_Cmd _Src) {
	_Stream << "Cmd{";
	_Stream << "attrs:" << _Src._field_attrs << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "Args:" << _Src._field_Args << ", ";
	_Stream << "Env:" << _Src._field_Env;
	_Stream << "}";
	return _Stream;
}



inline void _22a83d459_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _22a867d13_BytePtrToStr(jule::U8* _6924_s) {
	if ((_6924_s == nullptr)) {
		return jule::Str();;
	};
	{
		return static_cast<jule::Str>(_6924_s);;
	};
}



inline jule::I64 _2299ab3ca_GetLastErrno(void) {
	return errno;;
}



inline jule::I64 _22a87674a_Fcntl(jule::I64 _5410_handle, jule::I64 _5423_cmd, jule::I64 _5433_arg) {
	return static_cast<jule::I64>(fcntl(_5410_handle, _5423_cmd, _5433_arg));;
}



inline jule::I64 _22a876a8b_Stat(jule::U8* _5916_path, struct stat* _5933_stat) {
	return static_cast<jule::I64>(stat(((char*)(_5916_path)), _5933_stat));;
}



inline jule::I64 _22a876e76_Open(jule::U8* _6416_path, jule::I64 _6429_flag, jule::I64 _6440_mode) {
	return static_cast<jule::I64>(open(((char*)(_6416_path)), _6429_flag, _6440_mode));;
}



inline jule::U8* _22a8772b7_Getcwd(jule::U8* _7018_buff, jule::U64 _7031_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7018_buff)), _7031_bufflen)));;
}



inline DIR* _22a877790_Opendir(jule::U8* _7519_path) {
	return opendir(((char*)(_7519_path)));;
}



inline struct dirent* _22a87c8a5_Readdir(DIR* _7823_dir) {
	return readdir(_7823_dir);;
}



inline jule::I64 _22a87cb3b_Closedir(DIR* _8124_dir) {
	return static_cast<jule::I64>(closedir(_8124_dir));;
}



inline jule::I64 _22a87d4bb_Mkdir(jule::U8* _9017_path, jule::I64 _9030_mode) {
	return static_cast<jule::I64>(mkdir(((char*)(_9017_path)), _9030_mode));;
}



inline jule::I64 _22a87d763_Rmdir(jule::U8* _9517_path) {
	return static_cast<jule::I64>(rmdir(((char*)(_9517_path))));;
}



inline jule::I64 _22a87da0a_Unlink(jule::U8* _9818_path) {
	return static_cast<jule::I64>(unlink(((char*)(_9818_path))));;
}



inline jule::I64 _22a89897b_Seek(jule::I64 _159_handle, jule::I64 _1522_offset, jule::I64 _1535_origin) {
	return static_cast<jule::I64>(lseek(_159_handle, _1522_offset, _1535_origin));;
}



inline jule::I64 _22a898d66_Read(jule::I64 _2016_handle, void* _2033_buff, jule::U64 _2048_n) {
	return static_cast<jule::I64>(read(_2016_handle, _2033_buff, _2048_n));;
}



inline jule::I64 _22a8991da_Close(jule::I64 _2510_handle) {
	return static_cast<jule::I64>(close(_2510_handle));;
}



inline jule::I64 _22a8995c5_Write(jule::I64 _2817_handle, void* _2830_buff, jule::U64 _2845_n) {
	return static_cast<jule::I64>(write(_2817_handle, _2830_buff, _2845_n));;
}



inline void _22a8997d4_Exit(jule::I64 _339_code) {
	exit(_339_code);
}



inline jule::Slice<jule::U8> _22a8b6c85_Stobs(jule::Str* _911_s) {
	return (*(_911_s)).fake_slice();;
}



inline void _22a8b7439_PushToStrBuffer(jule::Str* _2825_s, jule::Slice<jule::U8> _2833_b) {
	{
		((*(_2825_s))).buffer.append((_2833_b).begin(), (_2833_b).end());
	};
}



inline jule::I64 _22a968661_getLastOsError(void) {
	jule::I64 _309_err = _2299ab3ca_GetLastErrno();;
	{
		auto &_match_expr{ _309_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1d2a72362:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1d2a71c68:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1d2a71ce0:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1d2a71d67:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1d2a72098:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1d2a7210e:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1d2a72175:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else {
			_case_begin_1d2a71aae:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1d2a71a59:;
	};
}



inline jule::Slice<jule::Str> _22a969145_Args(void) {
	return jule::args();;
}



inline jule::Exceptional<jule::Str> _22a9695b8_WorkingDir(void) {
	return jule::Exceptional<jule::Str>(jule::Any(), ({
		auto except = _22a96a4dc_getwd();
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Str>(except.error);
		} jule::Str();});
	}));;
}



inline jule::Exceptional<jule::Str> _22a96a4dc_getwd(void) {
	jule::U8* _1113_buff = _22a8772b7_Getcwd(nullptr, 0LLU);;
	if ((_1113_buff == nullptr)) {
		return jule::Exceptional<jule::Str>(jule::Any(_22a968661_getLastOsError(), &__jule_any_type0));
	};
	jule::Str _159_pwd = _22a867d13_BytePtrToStr(_1113_buff);;
	{
		_22a83d459_Free(_1113_buff);
	};
	return jule::Exceptional<jule::Str>(jule::Any(), _159_pwd);;
}



inline jule::Bool _22b817c7e_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_22b877eed__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _22b881336_isExcludingLatin(_22b821e64_Letter, _7613_r);;
}



inline jule::Bool _22b880753_is16(jule::Slice<_22b87db91_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b638737a:;
			if (it != expr_end) {
				jule::I64 _19313_i = it - expr->begin();
				{
					_22b87db91_Range16* _19417_range = (&(_1919_ranges[_19313_i]));;
					{
						if ((_19128_r < _19417_range->_field_Lo)) {
							return false;;
						};
						if ((_19128_r <= _19417_range->_field_Hi)) {
							return ((_19417_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _19417_range->_field_Lo),_19417_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b638737a:;
				++it;
				_19313_i++;
				goto _iter_begin_1b638737a;
			}
			_iter_end_1b638737a:;
		};
		return false;;
	};
	jule::I64 _20813_lo = 0LL;;
	jule::I64 _20913_hi = _1919_ranges.len();;
	while ((_20813_lo < _20913_hi)) {
		{
			jule::I64 _21113_m = (_20813_lo + ((_20913_hi - _20813_lo) >> 1LLU));;
			_22b87db91_Range16* _21213_range = (&(_1919_ranges[_21113_m]));;
			{
				if (((_21213_range->_field_Lo <= _19128_r) && (_19128_r <= _21213_range->_field_Hi))) {
					return ((_21213_range->_field_Stride == 1LLU) || (jule::mod((_19128_r - _21213_range->_field_Lo),_21213_range->_field_Stride) == 0LLU));;
				};
				if ((_19128_r < _21213_range->_field_Lo)) {
					_20913_hi=_21113_m;
				} else {
					_20813_lo=static_cast<jule::I64>((_21113_m + 1LL));
				};
			};
		}
	_iter_next_1b6386e4b:;
	}
	_iter_end_1b6386e4b:;;
	return false;;
}



inline jule::Bool _22b880a94_is32(jule::Slice<_22b87e114_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b638ce30:;
			if (it != expr_end) {
				jule::I64 _23013_i = it - expr->begin();
				{
					_22b87e114_Range32* _23117_range = (&(_2289_ranges[_23013_i]));;
					{
						if ((_22828_r < _23117_range->_field_Lo)) {
							return false;;
						};
						if ((_22828_r <= _23117_range->_field_Hi)) {
							return ((_23117_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _23117_range->_field_Lo),_23117_range->_field_Stride) == 0LLU));;
						};
					};
				}
				_iter_next_1b638ce30:;
				++it;
				_23013_i++;
				goto _iter_begin_1b638ce30;
			}
			_iter_end_1b638ce30:;
		};
		return false;;
	};
	jule::I64 _24513_lo = 0LL;;
	jule::I64 _24613_hi = _2289_ranges.len();;
	while ((_24513_lo < _24613_hi)) {
		{
			jule::I64 _24813_m = (_24513_lo + ((_24613_hi - _24513_lo) >> 1LLU));;
			_22b87e114_Range32* _24913_range = (&(_2289_ranges[_24813_m]));;
			{
				if (((_24913_range->_field_Lo <= _22828_r) && (_22828_r <= _24913_range->_field_Hi))) {
					return ((_24913_range->_field_Stride == 1LLU) || (jule::mod((_22828_r - _24913_range->_field_Lo),_24913_range->_field_Stride) == 0LLU));;
				};
				if ((_22828_r < _24913_range->_field_Lo)) {
					_24613_hi=_24813_m;
				} else {
					_24513_lo=static_cast<jule::I64>((_24813_m + 1LL));
				};
			};
		}
	_iter_next_1b638c968:;
	}
	_iter_end_1b638c968:;;
	return false;;
}



inline jule::Bool _22b881336_isExcludingLatin(jule::Ptr<_22b87e587_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_22b87db91_Range16> *_28014_R16 = &(_27821_rangeTab.get()._field_R16);;
		jule::I64 _28213_off = _27821_rangeTab.get()._field_LatinOffset;;
		if ((((*(_28014_R16)).len() > _28213_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_28014_R16))[((*(_28014_R16)).len() - 1LL)]._field_Hi)))) {
			return _22b880753_is16((*(_28014_R16)).slice(_28213_off), static_cast<jule::U16>(static_cast<jule::U16>(_27844_r)));;
		};
	};
	jule::Slice<_22b87e114_Range32> *_28710_R32 = &(_27821_rangeTab.get()._field_R32);;
	if ((((*(_28710_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_28710_R32))[0LL]._field_Lo)))) {
		return _22b880a94_is32((*(_28710_R32)), static_cast<jule::U32>(static_cast<jule::U32>(_27844_r)));;
	};
	return false;;
}



inline jule::Bool _22b8815cd_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_22b877eed__PROPERTIES[static_cast<jule::I64>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _22b881336_isExcludingLatin(_22b8284ba_Upper, _29512_r);;
}



inline __jule_tuple_i32__jule_tuple_int _22b96377b_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1869_p0 = _18215_p[0LL];;
	jule::U8 _1879_x = _22b962659_first[static_cast<jule::I64>(_1869_p0)];;
	if ((_1879_x >= 240LLU)) {
		jule::I32 _19213_mask = static_cast<jule::I32>(((_1879_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_18215_p[0LL]) & (~(_19213_mask))) | (65533LL & _19213_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _1959_sz = static_cast<jule::I64>((_1879_x & 7LLU));;
	_22b962bdc_acceptRange _1969_accept = _22b962eea_acceptRanges[static_cast<jule::I64>((_1879_x >> 4LLU))];;
	if ((_18215_p.len() < _1959_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2009_b1 = _18215_p[1LL];;
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_1869_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2009_b1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2079_b2 = _18215_p[2LL];;
	if (((_2079_b2 < 128LLU) || (191LL < _2079_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1959_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_1869_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2079_b2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2149_b3 = _18215_p[3LL];;
	if (((_2149_b3 < 128LLU) || (191LL < _2149_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_1869_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2009_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2079_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2149_b3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22b963a9a_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2339_s0 = _22918_s[0LL];;
	jule::U8 _2349_x = _22b962659_first[static_cast<jule::I64>(_2339_s0)];;
	if ((_2349_x >= 240LLU)) {
		jule::I32 _23913_mask = static_cast<jule::I32>(((_2349_x << 31LLU) >> 31LLU));;
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>(_22918_s[0LL]) & (~(_23913_mask))) | (65533LL & _23913_mask)));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _2429_sz = static_cast<jule::I64>((_2349_x & 7LLU));;
	_22b962bdc_acceptRange _2439_accept = _22b962eea_acceptRanges[static_cast<jule::I64>((_2349_x >> 4LLU))];;
	if ((_22918_s.len() < _2429_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2479_s1 = _22918_s[1LL];;
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((static_cast<jule::I32>((_2339_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2479_s1 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2549_s2 = _22918_s[2LL];;
	if (((_2549_s2 < 128LLU) || (191LL < _2549_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2429_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>((((static_cast<jule::I32>((_2339_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2549_s2 & 63LLU))));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2619_s3 = _22918_s[3LL];;
	if (((_2619_s3 < 128LLU) || (191LL < _2619_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::I32>(((((static_cast<jule::I32>((_2339_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2479_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2549_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2619_s3 & 63LLU))));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _22b963d42_DecodeLastRune(jule::Slice<jule::U8> _27619_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_27619_p.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I64 _2809_end = _27619_p.len();;
	jule::I64 _28113_start = (_2809_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(static_cast<jule::I32>(_27619_p[_28113_start]));
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I64 _28913_lim = (_2809_end - 4LL);;
	if ((_28913_lim < 0LL)) {
		_28913_lim=0LL;
	};
	(_28113_start)--;
	for (; (_28113_start >= _28913_lim); (_28113_start)--) {
		{
			if (_22b965717_RuneStart(_27619_p[_28113_start])) {
				goto _iter_end_1b5505e12;
			};
		}
	_iter_next_1b5505e12:;
	}
	_iter_end_1b5505e12:;;
	if ((_28113_start < 0LL)) {
		_28113_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune(_27619_p.slice(_28113_start, _2809_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28113_start + __jule_func_result.__jule_result_arg1) != _2809_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _22b964ae0_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_40530_r))}));;
	};
	return _22b964e31_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _22b964e31_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4149_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4149_i <= 2047LLU)) {
			_case_begin_1b5518331:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((192LLU | static_cast<jule::U8>((_41242_r >> 6LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else if ((_4149_i > 1114111LLU) || ((55296LL <= _4149_i) && (_4149_i <= 57343LLU))) {
			_case_begin_1b551a036:;
			{
				_41242_r=128LL;
				goto _case_begin_1b5518672;
			}
		}
		else if ((_4149_i <= 65535LLU)) {
			_case_begin_1b5518672:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((224LLU | static_cast<jule::U8>((_41242_r >> 12LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		else {
			_case_begin_1b5517c59:;
			{
				return jule::append(_41227_p,jule::Slice<jule::U8>::make({static_cast<jule::U8>((240LLU | static_cast<jule::U8>((_41242_r >> 18LL)))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU))),static_cast<jule::U8>((128LLU | (static_cast<jule::U8>(_41242_r) & 63LLU)))}));;
			}
		}
		_match_end_1b5517b9e:;
	};
}



inline jule::I64 _22b965470_RuneCountStr(jule::Str _47317_s) {
	jule::I64 __jule_func_result = 0;
	jule::I64 _47413_i = 0LL;;
	for (; (_47413_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _47617_c = _47317_s[_47413_i];;
			if ((_47617_c < 128LLU)) {
				(_47413_i)++;
				goto _iter_next_1b551b6ca;
			};
			jule::U8 _48213_x = _22b962659_first[static_cast<jule::I64>(_47617_c)];;
			if ((_48213_x == 241LLU)) {
				(_47413_i)++;
				goto _iter_next_1b551b6ca;
			};
			jule::I64 _48717_size = static_cast<jule::I64>((_48213_x & 7LLU));;
			if (((_47413_i + _48717_size) > _47317_s.len())) {
				(_47413_i)++;
				goto _iter_next_1b551b6ca;
			};
			_22b962bdc_acceptRange _49213_accept = _22b962eea_acceptRanges[static_cast<jule::I64>((_48213_x >> 4LLU))];;
			_47617_c=_47317_s[(_47413_i + 1LL)];
			if (((_47617_c < _49213_accept._field_lo) || (_49213_accept._field_hi < _47617_c))) {
				_48717_size=1LL;
			} else if ((_48717_size == 2LL)) {
			} else {
				_47617_c=_47317_s[(_47413_i + 2LL)];
				if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
					_48717_size=1LL;
				} else if ((_48717_size == 3LL)) {
				} else {
					_47617_c=_47317_s[(_47413_i + 3LL)];
					if (((_47617_c < 128LLU) || (191LL < _47617_c))) {
						_48717_size=1LL;
					};
				};
			};
			_47413_i+=_48717_size;
		}
	_iter_next_1b551b6ca:;
	}
	_iter_end_1b551b6ca:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _22b965717_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I64 _22b9873e8_FindByte(jule::Slice<jule::U8> _3713_s, jule::U8 _3724_b) {
	{
		auto expr = &(_3713_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5544071:;
		if (it != expr_end) {
			jule::I64 _399_i = it - expr->begin();
			jule::U8 *_3912_se = it;
			{
				if (((*(_3912_se)) == _3724_b)) {
					return _399_i;;
				};
			}
			_iter_next_1b5544071:;
			++it;
			_399_i++;
			goto _iter_begin_1b5544071;
		}
		_iter_end_1b5544071:;
	};
	return -1LL;;
}



inline jule::I64 _22b999718_FindLastByte(jule::Slice<jule::U8> _5017_s, jule::U8 _5028_b) {
	if ((_5017_s.len() == 0LL)) {
		return -1LL;;
	};
	jule::U8* _549_first = (&(_5017_s[0LL]));;
	jule::U8* _5513_it = (&(_5017_s[(_5017_s.len() - 1LL)]));;
	for (; (_5513_it >= _549_first); (_5513_it)--) {
		{
			{
				if (((*(_5513_it)) == _5028_b)) {
					return static_cast<jule::I64>(((jule::I64)((_5513_it - _549_first))));;
				};
			};
		}
	_iter_next_1b5545160:;
	}
	_iter_end_1b5545160:;;
	return -1LL;;
}



inline jule::I64 _22b9999d2_FindByteStr(jule::Str* _6717_s, jule::U8 _6725_b) {
	return static_cast<jule::I64>(_22b9873e8_FindByte(_22a8b6c85_Stobs(_6717_s), _6725_b));;
}



inline jule::I64 _22b999d23_FindLastByteStr(jule::Str* _7221_s, jule::U8 _7229_b) {
	return static_cast<jule::I64>(_22b999718_FindLastByte(_22a8b6c85_Stobs(_7221_s), _7229_b));;
}



inline jule::Str _22b99a1db_Repeat(jule::Str _1211_s, jule::I64 _1223_n) {
	if ((_1223_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1211_s.len() > jule::div(jule::MAX_I64,_1223_n))) {
		jule::panic(jule::Str("std::strings: repeat: integer buffer size overflow", 50) + jule::Str("\nlocation: std/strings/strings.jule:17:9"));;
	};
	jule::Str _2013_ss = jule::Str::alloc(0LL, (_1211_s.len() * _1223_n));;
	for (; (_1223_n > 0LL); (_1223_n)--) {
		{
			_2013_ss+=_1211_s;
		}
	_iter_next_1b55599d2:;
	}
	_iter_end_1b55599d2:;;
	return _2013_ss;;
}



inline jule::Bool _22b99a61a_hasPrefix(jule::Str* _2715_s, jule::Str* _2724_sub, jule::I64 _2738_start) {
	if ((((*(_2724_sub)).len() == 0LL) || (((*(_2715_s)).len() - _2738_start) < (*(_2724_sub)).len()))) {
		return false;;
	};
	jule::I64 _3213_i = 0LL;;
	for (; (_3213_i < (*(_2724_sub)).len()); ({
		jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_3213_i + 1LL));
		jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_2738_start + 1LL));
		_3213_i = ___jule_assign_arg;
		_2738_start = _1___jule_assign_arg;
	})) {
		{
			if (((*(_2715_s))[_2738_start] != (*(_2724_sub))[_3213_i])) {
				return false;;
			};
		}
	_iter_next_1b555c584:;
	}
	_iter_end_1b555c584:;;
	return true;;
}



inline jule::Bool _22b99a95b_HasPrefix(jule::Str _4214_s, jule::Str _4222_sub) {
	return _22b99a61a_hasPrefix(&(_4214_s), &(_4222_sub), 0LL);;
}



inline jule::Bool _22b99adbd_hasSuffix(jule::Str* _4615_s, jule::Str* _4624_sub, jule::I64 _4638_start) {
	if ((((*(_4624_sub)).len() == 0LL) || (((*(_4615_s)).len() - _4638_start) < (*(_4624_sub)).len()))) {
		return false;;
	};
	_4638_start=static_cast<jule::I64>(((*(_4615_s)).len() - _4638_start));
	jule::I64 _5213_i = 0LL;;
	for (; (_5213_i < (*(_4624_sub)).len()); (_5213_i)++) {
		{
			if (((*(_4615_s))[((_4638_start - _5213_i) - 1LL)] != (*(_4624_sub))[(((*(_4624_sub)).len() - _5213_i) - 1LL)])) {
				return false;;
			};
		}
	_iter_next_1b555e3bb:;
	}
	_iter_end_1b555e3bb:;;
	return true;;
}



inline jule::Bool _22b99b1cb_HasSuffix(jule::Str _6214_s, jule::Str _6222_sub) {
	return _22b99adbd_hasSuffix(&(_6214_s), &(_6222_sub), 0LL);;
}



inline jule::I64 _22b99b5b6_FindAt(jule::Str _7011_s, jule::Str _7019_sub, jule::I64 _7033_i) {
	if ((((_7033_i < 0LL) || (_7011_s.len() < _7019_sub.len())) || (_7019_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_7033_i < _7011_s.len()); (_7033_i)++) {
		{
			if (_22b99a61a_hasPrefix(&(_7011_s), &(_7019_sub), _7033_i)) {
				return _7033_i;;
			};
		}
	_iter_next_1b5562534:;
	}
	_iter_end_1b5562534:;;
	return -1LL;;
}



inline jule::I64 _22b99be02_FindLastAt(jule::Str _9315_s, jule::Str _9323_sub, jule::I64 _9333_i) {
	jule::I64 _9413_j = ((_9333_i - _9323_sub.len()) + 1LL);;
	if (((((_9323_sub.len() == 0LL) || (_9333_i < 0LL)) || (_9333_i >= _9315_s.len())) || (_9413_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_loop:;
	for (; (_9413_j >= 0LL); (_9413_j)--) {
		{
			jule::I64 _10017_k = _9413_j;;
			jule::I64 _10117_z = 0LL;;
			for (; (_10117_z < _9323_sub.len()); ({
				jule::I64 ___jule_assign_arg = static_cast<jule::I64>((_10017_k + 1LL));
				jule::I64 _1___jule_assign_arg = static_cast<jule::I64>((_10117_z + 1LL));
				_10017_k = ___jule_assign_arg;
				_10117_z = _1___jule_assign_arg;
			})) {
				{
					if ((_9315_s[_10017_k] != _9323_sub[_10117_z])) {
						goto _iter_next_1b5564eb5;
					};
				}
			_iter_next_1b55662a2:;
			}
			_iter_end_1b55662a2:;;
			return _9413_j;;
		}
	_iter_next_1b5564eb5:;
	}
	_iter_end_1b5564eb5:;;
	return -1LL;;
}



inline jule::I64 _22b99c243_FindLast(jule::Str _11513_s, jule::Str _11521_sub) {
	return static_cast<jule::I64>(_22b99be02_FindLastAt(_11513_s, _11521_sub, static_cast<jule::I64>((_11513_s.len() - 1LL))));;
}



inline jule::I64 _22b99d4db_findRune(jule::Slice<jule::U8>* _17114_s, jule::I32 _17125_r) {
	jule::I64 _17213_i = 0LL;;
	while ((_17213_i < (*(_17114_s)).len())) {
		{
			jule::I32 _17414_br = 0;;
			jule::I64 _17418_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_17114_s)).slice(_17213_i));
				_17414_br = __jule_assign_result.__jule_result_arg0;
				_17418_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_17125_r == _17414_br)) {
				return _17213_i;;
			};
			_17213_i+=_17418_n;
		}
	_iter_next_1b556d5d9:;
	}
	_iter_end_1b556d5d9:;;
	return -1LL;;
}



inline jule::I64 _22b99dd27_FindLastByte(jule::Str _19317_s, jule::U8 _19325_b) {
	return static_cast<jule::I64>(_22b999d23_FindLastByteStr(&(_19317_s), _19325_b));;
}



inline jule::I64 _22b99eb3b_FindAny(jule::Str _22812_s, jule::Str _22820_runes) {
	jule::Slice<jule::U8> _2299_sb = _22a8b6c85_Stobs(&(_22812_s));;
	jule::Slice<jule::U8> _23013_rb = _22a8b6c85_Stobs(&(_22820_runes));;
	jule::I64 _23113_i = 0LL;;
	while ((_23113_i < _2299_sb.len())) {
		{
			jule::I32 _23314_r = 0;;
			jule::I64 _23317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune(_2299_sb.slice(_23113_i));
				_23314_r = __jule_assign_result.__jule_result_arg0;
				_23317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22b99d4db_findRune(&(_23013_rb), _23314_r) != -1LL)) {
				return _23113_i;;
			};
			_23113_i+=_23317_n;
		}
	_iter_next_1b5573b83:;
	}
	_iter_end_1b5573b83:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _22b9a0367_Split(jule::Str _26210_s, jule::Str _26218_sub, jule::I64 _26232_n) {
	jule::I64 _26313_cap = _26232_n;;
	if ((_26232_n < 0LL)) {
		_26313_cap=16LLU;
	};
	jule::Slice<jule::Str> _26713_parts = jule::Slice<jule::Str>::alloc(0LL, _26313_cap);;
	if ((_26232_n == 0LL)) {
		return _26713_parts;;
	};
	if ((_26232_n < 0LL)) {
		_26232_n=static_cast<jule::I64>(_26210_s.len());
	};
	jule::I64 _27413_i = 0LL;;
	for (; (_26232_n > 0LL); (_26232_n)--) {
		{
			jule::I64 _27613_j = _22b99b5b6_FindAt(_26210_s, _26218_sub, _27413_i);;
			if ((_27613_j == -1LL)) {
				goto _iter_end_1b5579c22;
			};
			_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i, _27613_j));;
			_27413_i=static_cast<jule::I64>((_27613_j + _26218_sub.len()));
		}
	_iter_next_1b5579c22:;
	}
	_iter_end_1b5579c22:;;
	if (((_26232_n > 0LL) && (_27413_i < _26210_s.len()))) {
		_26713_parts = jule::alloc_for_append(_26713_parts,1);_26713_parts.__push(_26210_s.slice(_27413_i));;
	};
	return _26713_parts;;
}



inline jule::Bool _22b9a06a8_Contains(jule::Str _29013_s, jule::Str _29021_sub) {
	return (_22b99b5b6_FindAt(_29013_s, _29021_sub, 0LL) != -1LL);;
}



inline jule::Bool _22b9a117b_ContainsAny(jule::Str _30616_s, jule::Str _30624_runes) {
	return (_22b99eb3b_FindAny(_30616_s, _30624_runes) != -1LL);;
}



inline jule::I64 _22b9a14bc_Count(jule::Str _31210_s, jule::Str _31218_sub) {
	if ((_31218_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I64 _31613_n = 0LL;;
	jule::I64 _31713_i = 0LL;;
	for (;;) {
		{
			jule::I64 _31913_j = _22b99b5b6_FindAt(_31210_s, _31218_sub, _31713_i);;
			if ((_31913_j == -1LL)) {
				goto _iter_end_1b557ed59;
			};
			(_31613_n)++;
			_31713_i=static_cast<jule::I64>((_31913_j + _31218_sub.len()));
		}
	_iter_next_1b557ed59:;
	}
	_iter_end_1b557ed59:;;
	return _31613_n;;
}



inline jule::Str _22b9a1951_Replace(jule::Str _33212_s, jule::Str _33220_sub, jule::Str _33230_new, jule::I64 _33244_n) {
	if (((_33244_n == 0LL) || (_33220_sub == _33230_new))) {
		return _33212_s;;
	};
	jule::I64 _3379_m = _22b9a14bc_Count(_33212_s, _33220_sub);;
	if ((_3379_m == 0LL)) {
		return _33212_s;;
	};
	if (((_33244_n < 0LL) || (_3379_m < _33244_n))) {
		_33244_n=_3379_m;
	};
	jule::Str _34513_ss = jule::Str::alloc(0LL, (_33212_s.len() + (_33244_n * (_33230_new.len() - _33220_sub.len()))));;
	jule::I64 _34613_i = 0LL;;
	for (; (_33244_n > 0LL); (_33244_n)--) {
		{
			jule::I64 _34813_j = _22b99b5b6_FindAt(_33212_s, _33220_sub, _34613_i);;
			if ((_34813_j == -1LL)) {
				goto _iter_end_1b55836cb;
			};
			_34513_ss+=_33212_s.slice(_34613_i, _34813_j);
			_34513_ss+=_33230_new;
			_34613_i=static_cast<jule::I64>((_34813_j + _33220_sub.len()));
		}
	_iter_next_1b55836cb:;
	}
	_iter_end_1b55836cb:;;
	_34513_ss+=_33212_s.slice(_34613_i);
	return _34513_ss;;
}



inline void _22b99d9b4_trimLeft(jule::Slice<jule::U8>* _38818_s, jule::Slice<jule::U8>* _38830_cutset) {
	jule::I64 _38913_i = 0LL;;
	while ((_38913_i < (*(_38818_s)).len())) {
		{
			jule::I32 _39114_r = 0;;
			jule::I64 _39117_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_38818_s)).slice(_38913_i));
				_39114_r = __jule_assign_result.__jule_result_arg0;
				_39117_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22b99d4db_findRune(_38830_cutset, _39114_r) == -1LL)) {
				(*(_38818_s))=(*(_38818_s)).slice(_38913_i);
				return;;
			};
			_38913_i+=_39117_n;
		}
	_iter_next_1b5587a32:;
	}
	_iter_end_1b5587a32:;;
	(*(_38818_s))=nullptr;
}



inline jule::Str _22b9a2a0c_TrimLeft(jule::Str _40313_s, jule::Str _40321_cutset) {
	jule::Slice<jule::U8> _40413_bytes = _22a8b6c85_Stobs(&(_40313_s));;
	jule::Slice<jule::U8> _4059_bcutset = _22a8b6c85_Stobs(&(_40321_cutset));;
	_22b99d9b4_trimLeft(&(_40413_bytes), &(_4059_bcutset));
	return static_cast<jule::Str>(_40413_bytes);;
}



inline void _22b9a2cb5_trimRight(jule::Slice<jule::U8>* _41019_s, jule::Slice<jule::U8>* _41031_cutset) {
	jule::I64 _41113_i = (*(_41019_s)).len();;
	while ((_41113_i > 0LL)) {
		{
			jule::I32 _41314_r = 0;;
			jule::I64 _41317_n = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b963d42_DecodeLastRune((*(_41019_s)).slice(0LL, _41113_i));
				_41314_r = __jule_assign_result.__jule_result_arg0;
				_41317_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_22b99d4db_findRune(_41031_cutset, _41314_r) == -1LL)) {
				(*(_41019_s))=(*(_41019_s)).slice(0LL, _41113_i);
				return;;
			};
			_41113_i-=_41317_n;
		}
	_iter_next_1b5589c43:;
	}
	_iter_end_1b5589c43:;;
	(*(_41019_s))=nullptr;
}



inline jule::Str _22b9a3447_Trim(jule::Str _4349_s, jule::Str _43417_cutset) {
	jule::Slice<jule::U8> _43513_bytes = _22a8b6c85_Stobs(&(_4349_s));;
	jule::Slice<jule::U8> _4369_bcutset = _22a8b6c85_Stobs(&(_43417_cutset));;
	_22b99d9b4_trimLeft(&(_43513_bytes), &(_4369_bcutset));
	_22b9a2cb5_trimRight(&(_43513_bytes), &(_4369_bcutset));
	return static_cast<jule::Str>(_43513_bytes);;
}



inline jule::Str _22b9a3788_Join(jule::Slice<jule::Str> _4449_parts, jule::Str _44423_sep) {
	{
		auto _match_expr{ _4449_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1b558e8d5:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1b558eae4:;
			{
				return _4449_parts[0LL];;
			}
		}
		_match_end_1b558ea28:;
	};
	jule::Str _45113_s = _4449_parts[0LL];;
	{
		auto expr = _4449_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b559082b:;
		if (it != expr_end) {
			jule::Str *_45212_part = it;
			{
				_45113_s+=_44423_sep;
				_45113_s+=(*(_45212_part));
			}
			_iter_next_1b559082b:;
			++it;
			goto _iter_begin_1b559082b;
		}
		_iter_end_1b559082b:;
	};
	return _45113_s;;
}



inline jule::Str _22b9a4d2d_Clean(jule::Str _10814_path) {
	jule::Str _1099_originalPath = _10814_path;;
	jule::I64 _1109_volLen = _22b9a7924_volumeNameLen(_10814_path);;
	(_10814_path).mut_slice(_1109_volLen);;
	if (_10814_path.empty()) {
		if ((((_1109_volLen > 1LL) && _22b9a7391_IsPathSep(_1099_originalPath[0LL])) && _22b9a7391_IsPathSep(_1099_originalPath[1LL]))) {
			return _22b9a53b1_FromSlash(_1099_originalPath);;
		};
		return (_1099_originalPath + jule::Str(".", 1));;
	};
	jule::Bool _1199_rooted = _22b9a7391_IsPathSep(_10814_path[0LL]);;
	jule::I64 _1269_n = _10814_path.len();;
	_22b9a406e_lazyBuff _12713_out = _22b9a406e_lazyBuff{._field_path=_10814_path, ._field_volAndPath=_1099_originalPath, ._field_volLen=_1109_volLen};;
	jule::I64 _13214_r = 0;;
	jule::I64 _13221_dotdot = 0;;
	({
		jule::I64 ___jule_assign_arg = 0LL;
		jule::I64 _1___jule_assign_arg = 0LL;
		_13214_r = ___jule_assign_arg;
		_13221_dotdot = _1___jule_assign_arg;
	});
	if (_1199_rooted) {
		_22b9a4767_append(&_12713_out, 47LLU);
		({
			jule::I64 ___jule_assign_arg = 1LL;
			jule::I64 _1___jule_assign_arg = 1LL;
			_13214_r = ___jule_assign_arg;
			_13221_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_13214_r < _1269_n)) {
		{
			{
				
				if (_22b9a7391_IsPathSep(_10814_path[_13214_r])) {
					_case_begin_1b559e5e8:;
					{
						(_13214_r)++;
					}
				}
				else if (((_10814_path[_13214_r] == '.') && (((_13214_r + 1LL) == _1269_n) || _22b9a7391_IsPathSep(_10814_path[(_13214_r + 1LL)])))) {
					_case_begin_1b55a1a5c:;
					{
						(_13214_r)++;
					}
				}
				else if ((((_10814_path[_13214_r] == '.') && (_10814_path[(_13214_r + 1LL)] == '.')) && (((_13214_r + 2LL) == _1269_n) || _22b9a7391_IsPathSep(_10814_path[(_13214_r + 2LL)])))) {
					_case_begin_1b55a1ac3:;
					{
						_13214_r+=2LL;
						{
							
							if ((_12713_out._field_w > _13221_dotdot)) {
								_case_begin_1b55a3e05:;
								{
									(_12713_out._field_w)--;
									while (((_12713_out._field_w > _13221_dotdot) && (!(_22b9a7391_IsPathSep(static_cast<jule::U8>(_22b9a44e2_index(&_12713_out, _12713_out._field_w))))))) {
										{
											(_12713_out._field_w)--;
										}
									_iter_next_1b55a49d8:;
									}
									_iter_end_1b55a49d8:;;
								}
							}
							else if ((!(_1199_rooted))) {
								_case_begin_1b55a429b:;
								{
									if ((_12713_out._field_w > 0LL)) {
										_22b9a4767_append(&_12713_out, 47LLU);
									};
									_22b9a4767_append(&_12713_out, '.');
									_22b9a4767_append(&_12713_out, '.');
									_13221_dotdot=_12713_out._field_w;
								}
							}
							_match_end_1b55a4224:;
						};
					}
				}
				else {
					_case_begin_1b559cb35:;
					{
						if (((_1199_rooted && (_12713_out._field_w != 1LL)) || ((!(_1199_rooted)) && (_12713_out._field_w != 0LL)))) {
							_22b9a4767_append(&_12713_out, 47LLU);
						};
						;
						for (; ((_13214_r < _1269_n) && (!(_22b9a7391_IsPathSep(_10814_path[_13214_r])))); (_13214_r)++) {
							{
								_22b9a4767_append(&_12713_out, _10814_path[_13214_r]);
							}
						_iter_next_1b55a0907:;
						}
						_iter_end_1b55a0907:;;
					}
				}
				_match_end_1b559caad:;
			};
		}
	_iter_next_1b559cc9a:;
	}
	_iter_end_1b559cc9a:;;
	if ((_12713_out._field_w == 0LL)) {
		_22b9a4767_append(&_12713_out, '.');
	};
	return _22b9a53b1_FromSlash(_22b9a49cb_string(&_12713_out));;
}



inline jule::Str _22b9a53b1_FromSlash(jule::Str _21114_path) {
	{
		return _21114_path;;
	};
}



inline jule::Str _22b9a56d0_Join(jule::Slice<jule::Str> _2259_elem) {
	return _22b9a7eda_join(_2259_elem);;
}



inline jule::Str _22b9a5977_Ext(jule::Str _2308_path) {
	jule::I64 _23113_i = (_2308_path.len() - 1LL);;
	for (; ((_23113_i >= 0LL) && (!(_22b9a7391_IsPathSep(_2308_path[_23113_i])))); (_23113_i)--) {
		{
			if ((_2308_path[_23113_i] == '.')) {
				return _2308_path.slice(_23113_i);;
			};
		}
	_iter_next_1b55a8118:;
	}
	_iter_end_1b55a8118:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _22b9a5c1e_Abs(jule::Str _2458_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Str _24610_abs_path;;
	jule::Bool _24620_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22b9a7c43_abs(_2458_path);
		_24610_abs_path = __jule_assign_result.__jule_result_arg0;
		_24620_ok = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _24610_abs_path;
	__jule_func_result.__jule_result_arg1 = _24620_ok;
	return __jule_func_result;;
}



inline jule::Str _22b9a5eb6_Base(jule::Str _25413_path) {
	if (_25413_path.empty()) {
		return jule::Str(".", 1);;
	};
	while (((_25413_path.len() > 0LL) && _22b9a7391_IsPathSep(_25413_path[(_25413_path.len() - 1LL)]))) {
		{
			(_25413_path).mut_slice(0LL, (_25413_path.len() - 1LL));;
		}
	_iter_next_1b6481de2:;
	}
	_iter_end_1b6481de2:;;
	(_25413_path).mut_slice(_22b9a65d2_VolumeName(_25413_path).len());;
	jule::I64 _26513_i = (_25413_path.len() - 1LL);;
	while (((_26513_i >= 0LL) && (!(_22b9a7391_IsPathSep(_25413_path[_26513_i]))))) {
		{
			(_26513_i)--;
		}
	_iter_next_1b6483586:;
	}
	_iter_end_1b6483586:;;
	if ((_26513_i >= 0LL)) {
		(_25413_path).mut_slice((_26513_i + 1LL));;
	};
	if (_25413_path.empty()) {
		return jule::Str("/", 1);;
	};
	return _25413_path;;
}



inline jule::Str _22b9a633a_Dir(jule::Str _2858_path) {
	jule::Str _2869_vol = _22b9a65d2_VolumeName(_2858_path);;
	jule::I64 _28713_i = (_2858_path.len() - 1LL);;
	while (((_28713_i >= _2869_vol.len()) && (!(_22b9a7391_IsPathSep(_2858_path[_28713_i]))))) {
		{
			(_28713_i)--;
		}
	_iter_next_1b64855aa:;
	}
	_iter_end_1b64855aa:;;
	jule::Str _2919_dir = _22b9a4d2d_Clean(_2858_path.slice(_2869_vol.len(), (_28713_i + 1LL)));;
	if ((_2919_dir.equal(".", 1) && (_2869_vol.len() > 2LL))) {
		return _2869_vol;;
	};
	return (_2869_vol + _2919_dir);;
}



inline jule::Str _22b9a65d2_VolumeName(jule::Str _30315_path) {
	return _22b9a53b1_FromSlash(_30315_path.slice(0LL, _22b9a7924_volumeNameLen(_30315_path)));;
}



inline jule::Bool _22b9a7391_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _22b9a767c_IsAbs(jule::Str _5310_path) {
	return _22b99a95b_HasPrefix(_5310_path, jule::Str("/", 1));;
}



inline jule::I64 _22b9a7924_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _22b9a7c43_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_22b9a767c_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _22b9a4d2d_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _679_wd = ({
		auto except = _22a9695b8_WorkingDir();
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = jule::Str();
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} jule::Str();});
	});;
	__jule_func_result.__jule_result_arg0 = _22b9a7eda_join(jule::Slice<jule::Str>::make({_679_wd,_638_path}));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _22b9a7eda_join(jule::Slice<jule::Str> _739_elem) {
	{
		auto expr = &(_739_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b648d618:;
		if (it != expr_end) {
			jule::I64 _749_i = it - expr->begin();
			jule::Str *_7412_e = it;
			{
				if ((!((*(_7412_e)).empty()))) {
					return _22b9a4d2d_Clean(_22b9a3788_Join(_739_elem.slice(_749_i), jule::Str("/", 1)));;
				};
			}
			_iter_next_1b648d618:;
			++it;
			_749_i++;
			goto _iter_begin_1b648d618;
		}
		_iter_end_1b648d618:;
	};
	return jule::Str();;
}



inline jule::I64 _22a8a9591_getLastFsError(void) {
	jule::I64 _729_err = _2299ab3ca_GetLastErrno();;
	{
		auto &_match_expr{ _729_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1b649be1d:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b649b3a1:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else if (_match_expr == 62LL) {
			_case_begin_1b649b813:;
			{
				return static_cast<jule::I64>(2LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1b649b879:;
			{
				return static_cast<jule::I64>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b649b8e0:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1b649b956:;
			{
				return static_cast<jule::I64>(5LL);;
			}
		}
		else if (_match_expr == 84LL) {
			_case_begin_1b649c03e:;
			{
				return static_cast<jule::I64>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b649c0a5:;
			{
				return static_cast<jule::I64>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1b649c11b:;
			{
				return static_cast<jule::I64>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1b649c182:;
			{
				return static_cast<jule::I64>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1b649c209:;
			{
				return static_cast<jule::I64>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1b649c281:;
			{
				return static_cast<jule::I64>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b649c308:;
			{
				return static_cast<jule::I64>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1b649c380:;
			{
				return static_cast<jule::I64>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1b649c407:;
			{
				return static_cast<jule::I64>(14LL);;
			}
		}
		else if (_match_expr == 98LL) {
			_case_begin_1b649c47e:;
			{
				return static_cast<jule::I64>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1b649c506:;
			{
				return static_cast<jule::I64>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b649c57d:;
			{
				return static_cast<jule::I64>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1b649c605:;
			{
				return static_cast<jule::I64>(18LL);;
			}
		}
		else if (_match_expr == 35LL) {
			_case_begin_1b649c67c:;
			{
				return static_cast<jule::I64>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1b649c704:;
			{
				return static_cast<jule::I64>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1b649c77b:;
			{
				return static_cast<jule::I64>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1b649c803:;
			{
				return static_cast<jule::I64>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1b649c87a:;
			{
				return static_cast<jule::I64>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1b649c902:;
			{
				return static_cast<jule::I64>(24LL);;
			}
		}
		else if (_match_expr == 55LL) {
			_case_begin_1b649c979:;
			{
				return static_cast<jule::I64>(25LL);;
			}
		}
		else if (_match_expr == 94LL) {
			_case_begin_1b649ca01:;
			{
				return static_cast<jule::I64>(26LL);;
			}
		}
		else if (_match_expr == 66LL) {
			_case_begin_1b649ca78:;
			{
				return static_cast<jule::I64>(27LL);;
			}
		}
		else {
			_case_begin_1b649b66a:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		_match_end_1b649b615:;
	};
}



inline __jule_tuple_int__jule_tuple_bool _22bacb3d8_AtoiBp(jule::U8* _922_b, jule::I64 _936_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _1013_neg = ((*(_922_b)) == '-');;
	if (_1013_neg) {
		if ((_936_n == 1LL)) {
			return __jule_func_result;;
		};
		(_936_n)--;
		(_922_b)++;
	};
	for (; (_936_n > 0LL); (_936_n)--) {
		{
			if ((('0' <= (*(_922_b))) && ((*(_922_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I64>(((*(_922_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_922_b)++;
		}
	_iter_next_1d22b09d5:;
	}
	_iter_end_1d22b09d5:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_1013_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::I64>((-(__jule_func_result.__jule_result_arg0)));
	};
	return __jule_func_result;;
}



inline jule::Str _22bb1a108_Itoa(jule::I64 _69_x) {
	if ((_69_x < 0LL)) {
		return (jule::Str("-", 1) + _22bb1a3e4_Utoa(static_cast<jule::U64>(static_cast<jule::U64>((-(_69_x))))));;
	};
	return _22bb1a3e4_Utoa(static_cast<jule::U64>(static_cast<jule::U64>(_69_x)));;
}



inline jule::Str _22bb1a3e4_Utoa(jule::U64 _1413_x) {
	if ((_1413_x == 0LLU)) {
		return jule::Str("0", 1);;
	};
	jule::Str _1813_buf = jule::Str::alloc(20LL);;
	jule::I64 _1913_i = (_1813_buf.len() - 1LL);;
	while ((_1413_x >= 10LLU)) {
		{
			jule::U64 _2113_q = (_1413_x / 10LLU);;
			_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>((('0' + _1413_x) - (_2113_q * 10LLU))));
			(_1913_i)--;
			_1413_x=_2113_q;
		}
	_iter_next_1d22b7d1c:;
	}
	_iter_end_1d22b7d1c:;;
	_1813_buf[_1913_i]=static_cast<jule::U8>(static_cast<jule::U8>(('0' + _1413_x)));
	(_1813_buf).mut_slice(_1913_i);;
	return _1813_buf;;
}



inline jule::Slice<char*> _22bb1d8c0_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s) {
	jule::Slice<char*> _3713_cs = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL), nullptr);;
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e61581:;
		if (it != expr_end) {
			jule::I64 _389_i = it - expr->begin();
			{
				_3713_cs[_389_i]=((char*)((&((*(_3625_s))[_389_i][0LL]))));
			}
			_iter_next_1b5e61581:;
			++it;
			_389_i++;
			goto _iter_begin_1b5e61581;
		}
		_iter_end_1b5e61581:;
	};
	_3713_cs[(_3713_cs.len() - 1LL)]=nullptr;
	return _3713_cs;;
}



inline jule::I64 _22bb1dc11_execvp(jule::Str* _4512_file, jule::Slice<jule::Str>* _4524_argv) {
	jule::Slice<char*> _469_cargv = _22bb1d8c0_strSliceToCstrSlice(_4524_argv);;
	{
		return static_cast<jule::I64>(execvp(((char*)((&((*(_4512_file))[0LL])))), (char*const*)(&(_469_cargv[0LL]))));;
	};
}



inline jule::VoidExceptional _22bb1de20_setenv(jule::Slice<jule::Str>* _5212_envv) {
	;
	{
		auto expr = _5212_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e64166:;
		if (it != expr_end) {
			jule::Str *_5412_env = it;
			{
				jule::I64 _5513_i = _22b9999d2_FindByteStr(_5412_env, '=');;
				if ((_5513_i == -1LL)) {
					return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
				};
				{
					jule::Str _6017_key = (*(_5412_env)).slice(0LL, _5513_i);;
					if ((((*(_5412_env)).len() - _5513_i) == 1LL)) {
						jule::Str _6221_val = jule::Str("\x00", 1);;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6221_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					} else {
						jule::Str _6721_val = (*(_5412_env)).slice((_5513_i + 1LL));;
						if ((setenv(((char*)((&(_6017_key[0LL])))), ((char*)((&(_6721_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
						};
					};
				};
			}
			_iter_next_1b5e64166:;
			++it;
			goto _iter_begin_1b5e64166;
		}
		_iter_end_1b5e64166:;
	};
	return jule::VoidExceptional();
}



inline jule::I64 _22bb1eccd_processErrorFromCode(jule::I64 _1125_code) {
	{
		auto &_match_expr{ _1125_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1b5e6839b:;
			{
				return static_cast<jule::I64>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b5e644c9:;
			{
				return static_cast<jule::I64>(1LL);;
			}
		}
		else {
			_case_begin_1b5e65673:;
			{
				return static_cast<jule::I64>(4LL);;
			}
		}
		_match_end_1b5e6561d:;
	};
}



inline jule::I64 _22bb20020_getLastProcessError(void) {
	return _22bb1eccd_processErrorFromCode(static_cast<jule::I64>(_2299ab3ca_GetLastErrno()));;
}



inline void _22bb207c3_Exit(jule::I64 _129_code) {
	_22a8997d4_Exit(_129_code);
}



inline jule::Str _22bb209c1_Executable(void) {
	return jule::executable();;
}



inline jule::Bool _22ba2eb99_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _22ba2ee52_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_22b9aa075_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e8d6ac:;
		if (it != expr_end) {
			jule::Str *_3212_validExt = it;
			{
				if ((_3121_ext == (*(_3212_validExt)))) {
					return true;;
				};
			}
			_iter_next_1b5e8d6ac:;
			++it;
			goto _iter_begin_1b5e8d6ac;
		}
		_iter_end_1b5e8d6ac:;
	};
	return false;;
}



inline jule::Bool _22ba301e9_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_22ba2cd40_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e8e7e0:;
		if (it != expr_end) {
			jule::Str *_4512_e = it;
			{
				if ((_4118_ext == (*(_4512_e)))) {
					return true;;
				};
			}
			_iter_next_1b5e8e7e0:;
			++it;
			goto _iter_begin_1b5e8e7e0;
		}
		_iter_end_1b5e8e7e0:;
	};
	{
		auto expr = &(_22ba2d060_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e8ed62:;
		if (it != expr_end) {
			jule::Str *_5012_e = it;
			{
				if ((_4118_ext == (*(_5012_e)))) {
					return true;;
				};
			}
			_iter_next_1b5e8ed62:;
			++it;
			goto _iter_begin_1b5e8ed62;
		}
		_iter_end_1b5e8ed62:;
	};
	return false;;
}



inline jule::Str _22ba3cb0d_Logf(jule::Str _3159_fmt, jule::Slice<jule::Any> _31522_args) {
	return _22ba3d526_applyFmt(_3159_fmt, _31522_args);;
}



inline jule::Str _22ba3cde9_argToStr(jule::Any _31913_arg) {
	{
		auto &_match_expr{ _31913_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b5e90d30:;
			{
				return _31913_arg.cast<jule::Str>(&__jule_any_type5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b5e914c3:;
			{
				return jule::Str::from_byte(_31913_arg.cast<jule::U8>(&__jule_any_type130));;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b5e91539:;
			{
				return jule::Str::from_rune(_31913_arg.cast<jule::I32>(&__jule_any_type1));;
			}
		}
		else {
			_case_begin_1b5e910a5:;
			{
				return jule::Str("<fmt?>", 6);;
			}
		}
		_match_end_1b5e90db8:;
	};
}



inline jule::I64 _22ba3d191_findNextFmt(jule::Str _33216_fmt) {
	{
		auto expr = &(_33216_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e92293:;
		if (it != expr_end) {
			jule::I64 _3339_i = it - expr->begin();
			jule::U8 *_33312_b = it;
			{
				if (((*(_33312_b)) == '@')) {
					return _3339_i;;
				};
			}
			_iter_next_1b5e92293:;
			++it;
			_3339_i++;
			goto _iter_begin_1b5e92293;
		}
		_iter_end_1b5e92293:;
	};
	return -1LL;;
}



inline jule::Str _22ba3d526_applyFmt(jule::Str _34117_fmt, jule::Slice<jule::Any> _34127_args) {
	jule::Str _34213_s = jule::Str();;
	{
		auto expr = &(_34127_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5e93739:;
		if (it != expr_end) {
			jule::Any *_34312_arg = it;
			{
				jule::I64 _34413_i = _22ba3d191_findNextFmt(_34117_fmt);;
				if ((_34413_i == -1LL)) {
					goto _iter_end_1b5e93739;
				};
				_34213_s+=_34117_fmt.slice(0LL, _34413_i);
				_34213_s+=_22ba3cde9_argToStr((*(_34312_arg)));
				(_34117_fmt).mut_slice((_34413_i + 1LL));;
			}
			_iter_next_1b5e93739:;
			++it;
			goto _iter_begin_1b5e93739;
		}
		_iter_end_1b5e93739:;
	};
	_34213_s+=_34117_fmt;
	return _34213_s;;
}



inline jule::Bool _22ba3e59e_IsTopDirective(jule::Str _2819_directive) {
	return (_2819_directive.equal("pass", 4) || _2819_directive.equal("build", 5));;
}



inline jule::Bool _22ba409ce_IsWindows(jule::Str _3714_os) {
	return _3714_os.equal("windows", 7);;
}



inline jule::Bool _22ba40c87_IsDarwin(jule::Str _4013_os) {
	return _4013_os.equal("darwin", 6);;
}



inline jule::Bool _22ba4102e_IsLinux(jule::Str _4312_os) {
	return _4312_os.equal("linux", 5);;
}



inline jule::Bool _22ba4134d_IsI386(jule::Str _4611_arch) {
	return _4611_arch.equal("i386", 4);;
}



inline jule::Bool _22ba415e5_IsAmd64(jule::Str _4912_arch) {
	return _4912_arch.equal("amd64", 5);;
}



inline jule::Bool _22ba4188c_IsArm64(jule::Str _5212_arch) {
	return _5212_arch.equal("arm64", 5);;
}



inline jule::Bool _22ba41b34_IsUnix(jule::Str _5511_os) {
	return (_22ba40c87_IsDarwin(_5511_os) || _22ba4102e_IsLinux(_5511_os));;
}



inline jule::Bool _22ba41ea8_Is32Bit(jule::Str _5812_arch) {
	return _22ba4134d_IsI386(_5812_arch);;
}



inline jule::Bool _22ba42250_Is64Bit(jule::Str _6112_arch) {
	return (_22ba415e5_IsAmd64(_6112_arch) || _22ba4188c_IsArm64(_6112_arch));;
}



inline void _22bb21c58_init(void) {
	jule::Str _2513_path = _22bb209c1_Executable();;
	if (_2513_path.empty()) {
		jule::panic(jule::Str("std::jule::build: executable file cannot found", 46) + jule::Str("\nlocation: std/jule/build/env.jule:27:9"));;
	};
	{
		_22bb21285_PathWd=({
			auto except = _22a9695b8_WorkingDir();
			(except.ok()) ? (except.result) : ({{
				jule::panic(jule::Str("std::jule::build: working directory path cannot found", 53) + jule::Str("\nlocation: std/jule/build/env.jule:33:13"));;
				return;;
			} jule::Str();});
		});
		_22bb20ecc_PathExec=_22b9a633a_Dir(_2513_path);
		_22bb20cac_PathStdlib=_22b9a56d0_Join(jule::Slice<jule::Str>::make({_22bb20ecc_PathExec,jule::Str("..", 2),jule::Str("std", 3)}));
		_22bb21593_PathApi=_22b9a56d0_Join(jule::Slice<jule::Str>::make({_22bb20ecc_PathExec,jule::Str("..", 2),jule::Str("api", 3),jule::Str("jule.hpp", 8)}));
	};
}



inline jule::Bool _22be13027_IsUnaryOp(jule::Str _29514_kind) {
	{
		auto expr = &(_22bd6c0b3_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5ed2756:;
		if (it != expr_end) {
			jule::Str *_29612_op = it;
			{
				if ((_29514_kind == (*(_29612_op)))) {
					return true;;
				};
			}
			_iter_next_1b5ed2756:;
			++it;
			goto _iter_begin_1b5ed2756;
		}
		_iter_end_1b5ed2756:;
	};
	return false;;
}



inline jule::Bool _22be13313_IsBinOp(jule::Str _30512_kind) {
	{
		auto expr = &(_22bd6c2d3_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5ed345a:;
		if (it != expr_end) {
			jule::Str *_30612_op = it;
			{
				if ((_30512_kind == (*(_30612_op)))) {
					return true;;
				};
			}
			_iter_next_1b5ed345a:;
			++it;
			goto _iter_begin_1b5ed345a;
		}
		_iter_end_1b5ed345a:;
	};
	return false;;
}



inline jule::Bool _22be138c9_IsStr(jule::Str _32510_k) {
	return ((!(_32510_k.empty())) && ((_32510_k[0LL] == '\"') || _22be13b71_IsRawStr(_32510_k)));;
}



inline jule::Bool _22be13b71_IsRawStr(jule::Str _32813_k) {
	return ((!(_32813_k.empty())) && (_32813_k[0LL] == '`'));;
}



inline jule::Bool _22be13e18_IsRune(jule::Str _33211_k) {
	return ((!(_33211_k.empty())) && (_33211_k[0LL] == '\''));;
}



inline jule::Bool _22be14534_IsBool(jule::Str _33811_k) {
	return (_33811_k.equal("true", 4) || _33811_k.equal("false", 5));;
}



inline jule::Bool _22be147cb_IsFloat(jule::Str _34112_k) {
	if (_22b99a95b_HasPrefix(_34112_k, jule::Str("0x", 2))) {
		return _22b9a117b_ContainsAny(_34112_k, jule::Str(".pP", 3));;
	};
	return _22b9a117b_ContainsAny(_34112_k, jule::Str(".eE", 3));;
}



inline jule::Bool _22be14a73_IsNum(jule::Str _34910_k) {
	if (_34910_k.empty()) {
		return false;;
	};
	jule::U8 _3549_b = _34910_k[0LL];;
	return ((_3549_b == '.') || (('0' <= _3549_b) && (_3549_b <= '9')));;
}



inline jule::Bool _22be150b2_IsIgnoreIdent(jule::Str _36418_ident) {
	return _36418_ident.equal("_", 1);;
}



inline jule::Bool _22be15359_IsAnonIdent(jule::Str _36716_ident) {
	return _36716_ident.equal("<anonymous>", 11);;
}



inline jule::Bool _22be15898_IsSpace(jule::I32 _38012_r) {
	{
		auto expr = &(_22bd6bd93_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5eda95c:;
		if (it != expr_end) {
			jule::I32 *_38112_cr = it;
			{
				if ((_38012_r == (*(_38112_cr)))) {
					return true;;
				};
			}
			_iter_next_1b5eda95c:;
			++it;
			goto _iter_begin_1b5eda95c;
		}
		_iter_end_1b5eda95c:;
	};
	return false;;
}



inline jule::Bool _22be15ce9_IsLetter(jule::I32 _39013_r) {
	return _22b817c7e_IsLetter(_39013_r);;
}



inline jule::Bool _22be16338_IsDecimal(jule::U8 _41014_b) {
	return (('0' <= _41014_b) && (_41014_b <= '9'));;
}



inline jule::Bool _22be165d0_IsBinary(jule::U8 _41313_b) {
	return ((_41313_b == '0') || (_41313_b == '1'));;
}



inline jule::Bool _22be16877_IsOctal(jule::U8 _41612_b) {
	return (('0' <= _41612_b) && (_41612_b <= '7'));;
}



inline jule::Bool _22be16b1e_IsHex(jule::U8 _41910_b) {
	{
		
		if ((('0' <= _41910_b) && (_41910_b <= '9'))) {
			_case_begin_1b5eddcd4:;
			{
				return true;;
			}
		}
		else if ((('a' <= _41910_b) && (_41910_b <= 'f'))) {
			_case_begin_1b5eddd4a:;
			{
				return true;;
			}
		}
		else if ((('A' <= _41910_b) && (_41910_b <= 'F'))) {
			_case_begin_1b5edddc2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b5eddc6d:;
			{
				return false;;
			}
		}
		_match_end_1b5edd9d7:;
	};
}



inline jule::Bool _22be16db6_IsAssign(jule::U64 _43413_id) {
	return (((((((_43413_id == static_cast<jule::U64>(1LLU)) || (_43413_id == static_cast<jule::U64>(29LLU))) || (_43413_id == static_cast<jule::U64>(32LLU))) || (_43413_id == static_cast<jule::U64>(19LLU))) || (_43413_id == static_cast<jule::U64>(26LLU))) || (_43413_id == static_cast<jule::U64>(2LLU))) || (_43413_id == static_cast<jule::U64>(6LLU)));;
}



inline jule::Bool _22be1715d_IsPostfixOp(jule::Str _44516_kind) {
	{
		auto expr = &(_22be0c7a2_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5ee0379:;
		if (it != expr_end) {
			jule::Str *_44612_op = it;
			{
				if ((_44516_kind == (*(_44612_op)))) {
					return true;;
				};
			}
			_iter_next_1b5ee0379:;
			++it;
			goto _iter_begin_1b5ee0379;
		}
		_iter_end_1b5ee0379:;
	};
	return false;;
}



inline jule::Bool _22be17405_IsAssignOp(jule::Str _45515_kind) {
	if (_22be1715d_IsPostfixOp(_45515_kind)) {
		return true;;
	};
	{
		auto expr = &(_22be0ca9e_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5ee205c:;
		if (it != expr_end) {
			jule::Str *_45912_op = it;
			{
				if ((_45515_kind == (*(_45912_op)))) {
					return true;;
				};
			}
			_iter_next_1b5ee205c:;
			++it;
			goto _iter_begin_1b5ee205c;
		}
		_iter_end_1b5ee205c:;
	};
	return false;;
}



inline jule::Ptr<_22be17ba8_File> _22be18e62_NewFileSet(jule::Str _5715_path) {
	return jule::new_ptr<_22be17ba8_File>(_22be17ba8_File{._field_Path=_5715_path, });;
}



inline _22ba3c6bd_Log _22be1a705_makeErr(jule::I64 _9512_row, jule::I64 _9522_col, jule::Ptr<_22be17ba8_File>* _9533_f, jule::Str _9543_fmt, jule::Slice<jule::Any> _9556_args) {
	return _22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_9512_row, ._field_Column=_9522_col, ._field_Path=(*(_9533_f)).get()._field_Path, ._field_Text=_22ba3cb0d_Logf(_9543_fmt, _9556_args), };;
}



inline jule::Bool _22be1aa8a_bytesHasPrefix(jule::Slice<jule::U8>* _10520_bytes, jule::Str _10535_prefix) {
	if (((*(_10520_bytes)).len() < _10535_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_10535_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b5eebe35:;
		if (it != expr_end) {
			jule::I64 _1099_i = it - expr->begin();
			{
				if (((*(_10520_bytes))[_1099_i] != _10535_prefix[_1099_i])) {
					return false;;
				};
			}
			_iter_next_1b5eebe35:;
			++it;
			_1099_i++;
			goto _iter_begin_1b5eebe35;
		}
		_iter_end_1b5eebe35:;
	};
	return true;;
}



inline jule::Str _22be1adcb_floatFmtE(jule::Slice<jule::U8>* _11715_txt, jule::I64 _11732_i) {
	jule::Str __jule_func_result;
	(_11732_i)++;
	if ((_11732_i >= (*(_11715_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _12313_b = (*(_11715_txt))[_11732_i];;
	if ((_12313_b == '_')) {
		return __jule_func_result;;
	};
	if (((_12313_b == '+') || (_12313_b == '-'))) {
		(_11732_i)++;
		if ((_11732_i >= (*(_11715_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_11715_txt))[_11732_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I64 _1379_first = _11732_i;;
	for (; (_11732_i < (*(_11715_txt)).len()); (_11732_i)++) {
		{
			_12313_b=(*(_11715_txt))[_11732_i];
			if (((_12313_b != '_') && (!(_22be16338_IsDecimal(_12313_b))))) {
				goto _iter_end_1b5eeebd5;
			};
		}
	_iter_next_1b5eeebd5:;
	}
	_iter_end_1b5eeebd5:;;
	if ((_11732_i == _1379_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_11715_txt)).slice(0LL, _11732_i));
	return __jule_func_result;;
}



inline jule::Str _22be1b261_floatFmtP(jule::Slice<jule::U8>* _15115_txt, jule::I64 _15128_i) {
	return _22be1adcb_floatFmtE(_15115_txt, _15128_i);;
}



inline jule::Str _22be1b5a2_floatFmtDotnp(jule::Slice<jule::U8>* _15519_txt, jule::I64 _15536_i) {
	if (((*(_15519_txt))[_15536_i] != '.')) {
		return jule::Str();;
	};
	(_15536_i)++;
	_julec_label_loop:;
	for (; (_15536_i < (*(_15519_txt)).len()); (_15536_i)++) {
		{
			jule::U8 _16313_b = (*(_15519_txt))[_15536_i];;
			{
				
				if ((_16313_b == '_') || _22be16338_IsDecimal(_16313_b)) {
					_case_begin_1b6002677:;
					{
						goto _iter_next_1b60015cc;
					}
				}
				else if (_22be1cd56_isFloatFmtP(_16313_b, _15536_i)) {
					_case_begin_1b60026dd:;
					{
						return _22be1b261_floatFmtP(_15519_txt, _15536_i);;
					}
				}
				else {
					_case_begin_1b6002611:;
					{
						goto _iter_end_1b60015cc;
					}
				}
				_match_end_1b600259a:;
			};
		}
	_iter_next_1b60015cc:;
	}
	_iter_end_1b60015cc:;;
	return jule::Str();;
}



inline jule::Str _22be1b8e3_floatFmtDotfp(jule::Slice<jule::U8>* _17619_txt, jule::I64 _17636_i) {
	_17636_i+=2LL;
	return _22be1adcb_floatFmtE(_17619_txt, _17636_i);;
}



inline jule::Str _22be1bc34_floatFmtDotp(jule::Slice<jule::U8>* _18118_txt, jule::I64 _18135_i) {
	(_18135_i)++;
	return _22be1adcb_floatFmtE(_18118_txt, _18135_i);;
}



inline jule::Str _22be1c185_floatNum(jule::Slice<jule::U8>* _18614_txt, jule::I64 _18631_i) {
	jule::Str __jule_func_result;
	(_18631_i)++;
	if ((_18631_i >= (*(_18614_txt)).len())) {
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)));
		return __jule_func_result;;
	};
	if (((*(_18614_txt))[_18631_i] == '_')) {
		(_18631_i)--;
		__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
		return __jule_func_result;;
	};
	for (; (_18631_i < (*(_18614_txt)).len()); (_18631_i)++) {
		{
			jule::U8 _19613_b = (*(_18614_txt))[_18631_i];;
			if (((_18631_i > 1LL) && ((_19613_b == 'e') || (_19613_b == 'E')))) {
				__jule_func_result = _22be1adcb_floatFmtE(_18614_txt, _18631_i);
				return __jule_func_result;;
			};
			if (((_19613_b != '_') && (!(_22be16338_IsDecimal(_19613_b))))) {
				goto _iter_end_1b6005081;
			};
		}
	_iter_next_1b6005081:;
	}
	_iter_end_1b6005081:;;
	if ((_18631_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_18614_txt)).slice(0LL, _18631_i));
	return __jule_func_result;;
}



inline jule::Str _22be1c42c_commonNum(jule::Slice<jule::U8>* _21115_txt) {
	jule::Str __jule_func_result;
	jule::I64 _21213_i = 0LL;;
	_julec_label_loop:;
	for (; (_21213_i < (*(_21115_txt)).len()); (_21213_i)++) {
		{
			jule::U8 _21513_b = (*(_21115_txt))[_21213_i];;
			{
				
				if ((_21513_b == '.')) {
					_case_begin_1b600843b:;
					{
						__jule_func_result = _22be1c185_floatNum(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((_21513_b == '_')) {
					_case_begin_1b60084b3:;
					{
						goto _iter_next_1b60077e2;
					}
				}
				else if (_22be1ca15_isFloatFmtE(_21513_b, _21213_i)) {
					_case_begin_1b600853a:;
					{
						__jule_func_result = _22be1adcb_floatFmtE(_21115_txt, _21213_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_22be16338_IsDecimal(_21513_b)))) {
					_case_begin_1b60085b2:;
					{
						goto _iter_end_1b60077e2;
					}
				}
				_match_end_1b600835e:;
			};
		}
	_iter_next_1b60077e2:;
	}
	_iter_end_1b60077e2:;;
	if ((_21213_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_21115_txt)).slice(0LL, _21213_i));
	return __jule_func_result;;
}



inline jule::Str _22be1c6c4_binaryNum(jule::Slice<jule::U8>* _23415_txt) {
	jule::Str __jule_func_result;
	if ((!(_22be1aa8a_bytesHasPrefix(_23415_txt, jule::Str("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_23415_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _24313_i = 2LL;;
	for (; (_24313_i < (*(_23415_txt)).len()); (_24313_i)++) {
		{
			if ((((*(_23415_txt))[_24313_i] != '_') && (!(_22be165d0_IsBinary((*(_23415_txt))[_24313_i]))))) {
				goto _iter_end_1b600a086;
			};
		}
	_iter_next_1b600a086:;
	}
	_iter_end_1b600a086:;;
	if ((_24313_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_23415_txt)).slice(0LL, _24313_i));
	return __jule_func_result;;
}



inline jule::Bool _22be1ca15_isFloatFmtE(jule::U8 _25616_b, jule::I64 _25625_i) {
	return ((_25625_i > 0LL) && ((_25616_b == 'e') || (_25616_b == 'E')));;
}



inline jule::Bool _22be1cd56_isFloatFmtP(jule::U8 _26016_b, jule::I64 _26025_i) {
	return ((_26025_i > 0LL) && ((_26016_b == 'p') || (_26016_b == 'P')));;
}



inline jule::Bool _22be1d197_isFloatFmtDotnp(jule::Slice<jule::U8>* _26421_txt, jule::I64 _26438_i) {
	if (((*(_26421_txt))[_26438_i] != '.')) {
		return false;;
	};
	(_26438_i)++;
	_julec_label_loop:;
	for (; (_26438_i < (*(_26421_txt)).len()); (_26438_i)++) {
		{
			jule::U8 _27113_b = (*(_26421_txt))[_26438_i];;
			{
				
				if ((_27113_b == '_') || _22be16338_IsDecimal(_27113_b)) {
					_case_begin_1b600ece4:;
					{
						goto _iter_next_1b600db7d;
					}
				}
				else if (_22be1cd56_isFloatFmtP(_27113_b, _26438_i)) {
					_case_begin_1b600ed5a:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1b600ec7d:;
					{
						goto _iter_end_1b600db7d;
					}
				}
				_match_end_1b600ec17:;
			};
		}
	_iter_next_1b600db7d:;
	}
	_iter_end_1b600db7d:;;
	return false;;
}



inline jule::Bool _22be1d4d8_isFloatFmtDotp(jule::Slice<jule::U8>* _28520_txt, jule::I64 _28533_i) {
	{
		
		if (((*(_28520_txt)).len() < 3LL)) {
			_case_begin_1b601107b:;
			{
				goto _case_begin_1b6011103;
			}
		}
		else if (((*(_28520_txt))[_28533_i] != '.')) {
			_case_begin_1b6011103:;
			{
				goto _case_begin_1b601117a;
			}
		}
		else if ((((*(_28520_txt))[(_28533_i + 1LL)] != 'p') && ((*(_28520_txt))[(_28533_i + 1LL)] != 'P'))) {
			_case_begin_1b601117a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b6011015:;
			{
				return true;;
			}
		}
		_match_end_1b6010e49:;
	};
}



inline jule::Bool _22be1d829_isFloatFmtDotfp(jule::Slice<jule::U8>* _29821_txt, jule::I64 _29834_i) {
	{
		
		if (((*(_29821_txt)).len() < 4LL)) {
			_case_begin_1b6012cc5:;
			{
				goto _case_begin_1b6012d4c;
			}
		}
		else if (((*(_29821_txt))[_29834_i] != '.')) {
			_case_begin_1b6012d4c:;
			{
				goto _case_begin_1b6012dc4;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 1LL)] != 'f') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'F'))) {
			_case_begin_1b6012dc4:;
			{
				goto _case_begin_1b6012e4b;
			}
		}
		else if ((((*(_29821_txt))[(_29834_i + 2LL)] != 'p') && ((*(_29821_txt))[(_29834_i + 1LL)] != 'P'))) {
			_case_begin_1b6012e4b:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b601290c:;
			{
				return true;;
			}
		}
		_match_end_1b6012841:;
	};
}



inline jule::Str _22be1dc7a_octalNum(jule::Slice<jule::U8>* _31314_txt) {
	jule::Str __jule_func_result;
	if (((*(_31314_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31314_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I64 _32113_octalStart = 1LL;;
	jule::Bool _32313_o = false;;
	if (((*(_31314_txt))[1LL] == 'o')) {
		if (((*(_31314_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_32113_octalStart)++;
		_32313_o=true;
	};
	jule::I64 _33213_i = _32113_octalStart;;
	for (; (_33213_i < (*(_31314_txt)).len()); (_33213_i)++) {
		{
			jule::U8 _33413_b = (*(_31314_txt))[_33213_i];;
			if ((_33413_b == '.')) {
				if (_32313_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _22be1c185_floatNum(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (_22be1ca15_isFloatFmtE(_33413_b, _33213_i)) {
				__jule_func_result = _22be1adcb_floatFmtE(_31314_txt, _33213_i);
				return __jule_func_result;;
			};
			if (((_33413_b != '_') && (!(_22be16877_IsOctal(_33413_b))))) {
				goto _iter_end_1b60175c1;
			};
		}
	_iter_next_1b60175c1:;
	}
	_iter_end_1b60175c1:;;
	if ((_33213_i == _32113_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_31314_txt)).slice(0LL, _33213_i));
	return __jule_func_result;;
}



inline jule::Str _22be1e022_hexNum(jule::Slice<jule::U8>* _35512_txt) {
	jule::Str __jule_func_result;
	if (((*(_35512_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_35512_txt))[0LL] != '0') || (((*(_35512_txt))[1LL] != 'x') && ((*(_35512_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I64 _36413_i = 2LL;;
	_julec_label_loop:;
	for (; (_36413_i < (*(_35512_txt)).len()); (_36413_i)++) {
		{
			jule::U8 _36713_b = (*(_35512_txt))[_36413_i];;
			{
				
				if (_22be1d4d8_isFloatFmtDotp(_35512_txt, _36413_i)) {
					_case_begin_1b601bb14:;
					{
						__jule_func_result = _22be1bc34_floatFmtDotp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_22be1d829_isFloatFmtDotfp(_35512_txt, _36413_i)) {
					_case_begin_1b601bb8b:;
					{
						__jule_func_result = _22be1b8e3_floatFmtDotfp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_22be1cd56_isFloatFmtP(_36713_b, _36413_i)) {
					_case_begin_1b601bc13:;
					{
						__jule_func_result = _22be1b261_floatFmtP(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (_22be1d197_isFloatFmtDotnp(_35512_txt, _36413_i)) {
					_case_begin_1b601bc8a:;
					{
						__jule_func_result = _22be1b5a2_floatFmtDotnp(_35512_txt, _36413_i);
						return __jule_func_result;;
					}
				}
				else if (((_36713_b != '_') && (!(_22be16b1e_IsHex(_36713_b))))) {
					_case_begin_1b601bd12:;
					{
						goto _iter_end_1b601adee;
					}
				}
				_match_end_1b601ba26:;
			};
		}
	_iter_next_1b601adee:;
	}
	_iter_end_1b601adee:;;
	if ((_36413_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_35512_txt)).slice(0LL, _36413_i));
	return __jule_func_result;;
}



inline jule::Str _22be1e363_hexEscape(jule::Slice<jule::U8>* _38815_txt, jule::I64 _38828_n) {
	jule::Str __jule_func_result;
	if (((*(_38815_txt)).len() < _38828_n)) {
		return __jule_func_result;;
	};
	;
	jule::I64 _39413_i = 2LL;;
	for (; (_39413_i < _38828_n); (_39413_i)++) {
		{
			if ((!(_22be16b1e_IsHex((*(_38815_txt))[_39413_i])))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1b601e2ba:;
	}
	_iter_end_1b601e2ba:;;
	__jule_func_result=static_cast<jule::Str>((*(_38815_txt)).slice(0LL, _38828_n));
	return __jule_func_result;;
}



inline jule::Str _22be1e60a_bigUnicodePointEscape(jule::Slice<jule::U8>* _40627_txt) {
	return _22be1e363_hexEscape(_40627_txt, 10LL);;
}



inline jule::Str _22be1e8c4_littleUnicodePointEscape(jule::Slice<jule::U8>* _41130_txt) {
	return _22be1e363_hexEscape(_41130_txt, 6LL);;
}



inline jule::Str _22be1ea7d_hexByteEscape(jule::Slice<jule::U8>* _41619_txt) {
	return _22be1e363_hexEscape(_41619_txt, 4LL);;
}



inline jule::Str _22be1ed14_byteEscape(jule::Slice<jule::U8>* _42116_txt) {
	jule::Str __jule_func_result;
	if (((*(_42116_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_22be16877_IsOctal((*(_42116_txt))[1LL]))) || (!(_22be16877_IsOctal((*(_42116_txt))[2LL])))) || (!(_22be16877_IsOctal((*(_42116_txt))[3LL]))))) {
		return __jule_func_result;;
	};
	__jule_func_result = static_cast<jule::Str>((*(_42116_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_22ba3c6bd_Log> _22be2480d_Lex(jule::Ptr<_22be17ba8_File> _81012_f, jule::I64 _81022_mode) {
	if ((_81012_f == nullptr)) {
		return nullptr;;
	};
	_22be204eb_lex _81513_lex = _22be204eb_lex{._field_mode=_81022_mode, ._field_file=_81012_f, ._field_pos=0LL, ._field_row=-1LL, };;
	_22be2308c_newLine(&_81513_lex);
	_22be2108a_lex(&_81513_lex);
	if ((_81513_lex._field_errors.len() > 0LL)) {
		return _81513_lex._field_errors;;
	};
	_81012_f.get()._field_Tokens=_81513_lex._field_tokens;
	return nullptr;;
}



inline jule::I64 _1e7679a37_LeadingZeros64(jule::U64 _6119_x) {
	return static_cast<jule::I64>((64LL - _1e7681eb2_Len64(_6119_x)));;
}



inline jule::I64 _1e767a96c_TrailingZeros(jule::U64 _8318_x) {
	;
	return static_cast<jule::I64>(_1e767b60a_TrailingZeros64(static_cast<jule::U64>(static_cast<jule::U64>(_8318_x))));;
}



inline jule::I64 _1e767b363_TrailingZeros32(jule::U32 _10520_x) {
	if ((_10520_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e767a142__DE_BRUIJN32_TAB[static_cast<jule::I64>((((_10520_x & (-(_10520_x))) * 125613361LLU) >> 27LLU))]));;
}



inline jule::I64 _1e767b60a_TrailingZeros64(jule::U64 _11420_x) {
	if ((_11420_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I64>(static_cast<jule::I64>(_1e767a708__DE_BRUIJN64_TAB[static_cast<jule::I64>((((_11420_x & (-(_11420_x))) * 285870213051353865LLU) >> 58LLU))]));;
}



inline jule::I64 _1e7681c1a_Len32(jule::U32 _35214_x) {
	jule::I64 __jule_func_result = 0;
	if ((_35214_x >= 65536LLU)) {
		_35214_x>>=16LLU;
		__jule_func_result=16LL;
	};
	if ((_35214_x >= 256LLU)) {
		_35214_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_35214_x)])));
	return __jule_func_result;;
}



inline jule::I64 _1e7681eb2_Len64(jule::U64 _36614_x) {
	jule::I64 __jule_func_result = 0;
	if ((_36614_x >= 4294967296LLU)) {
		_36614_x>>=32LLU;
		__jule_func_result=32LL;
	};
	if ((_36614_x >= 65536LLU)) {
		_36614_x>>=16LLU;
		__jule_func_result+=16LL;
	};
	if ((_36614_x >= 256LLU)) {
		_36614_x>>=8LLU;
		__jule_func_result+=8LL;
	};
	__jule_func_result = static_cast<jule::I64>((__jule_func_result + static_cast<jule::I64>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::I64>(_36614_x)])));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1e7682b72_Add64(jule::U64 _41510_x, jule::U64 _41518_y, jule::U64 _41526_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>(((_41510_x + _41518_y) + _41526_carry));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((((_41510_x & _41518_y) | ((_41510_x | _41518_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1e7684305_Mul64(jule::U64 _49910_x, jule::U64 _49918_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _5019_x0 = (_49910_x & 4294967295LLU);;
	jule::U64 _5029_x1 = (_49910_x >> 32LLU);;
	jule::U64 _5039_y0 = (_49918_y & 4294967295LLU);;
	jule::U64 _5049_y1 = (_49918_y >> 32LLU);;
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);;
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LLU));;
	jule::U64 _50713_w1 = (_5069_t & 4294967295LLU);;
	jule::U64 _5089_w2 = (_5069_t >> 32LLU);;
	_50713_w1+=(_5019_x0 * _5049_y1);
	__jule_func_result.__jule_result_arg0=static_cast<jule::U64>((((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LLU)));
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>((_49910_x * _49918_y));
	return __jule_func_result;;
}



inline jule::U32 _211614d3d_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _211615129_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _2116153c1_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _2116156e0_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _211617bcb_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1b63e1813:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1e768bb7b_IsInf(_4714_f, 0LL) || _1e768b5c6_IsNaN(_4714_f)) {
			_case_begin_1b63e188a:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1b63e1703:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1e768be23_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5613_x = _2116153c1_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I64>(((_5613_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_5613_x=static_cast<jule::U64>((_5613_x & 9227875636482146303LLU));
	_5613_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2116156e0_F64FromBits(_5613_x));
	return __jule_func_result;;
}



inline jule::F64 _1e768b2da_NaN(void) {
	return static_cast<jule::F64>(_2116156e0_F64FromBits(9221120237041090561LLU));;
}



inline jule::Bool _1e768b5c6_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1e768b86d_Inf(jule::I64 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return static_cast<jule::F64>(_2116156e0_F64FromBits(9218868437227405312LLU));;
	};
	return static_cast<jule::F64>(_2116156e0_F64FromBits(18442240474082181120LLU));;
}



inline jule::Bool _1e768bb7b_IsInf(jule::F64 _7210_f, jule::I64 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1e768be23_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1e768e19a_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((_8214_x * 4503599627370496LLU));
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1e768d809_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1e768b5c6_IsNaN(_1118_x) || _1e768bb7b_IsInf(_1118_x, 1LL)) {
			_case_begin_1b642e224:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1b642e29b:;
			{
				return static_cast<jule::F64>(_1e768b2da_NaN());;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1b642e323:;
			{
				return static_cast<jule::F64>(_1e768b86d_Inf(-1LL));;
			}
		}
		_match_end_1b642e158:;
	};
	jule::F64 _13314_f1 = 0;;
	jule::I64 _13322_ki = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _211617bcb_Frexp(_1118_x);
		_13314_f1 = __jule_assign_result.__jule_result_arg0;
		_13322_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_13314_f1 < 0.7071067811865476)) {
		_13314_f1*=2LL;
		(_13322_ki)--;
	};
	jule::F64 _1389_f = (_13314_f1 - 1LL);;
	jule::F64 _1399_k = static_cast<jule::F64>(_13322_ki);;
	jule::F64 _1429_s = jule::div(_1389_f,(2LL + _1389_f));;
	jule::F64 _1439_s2 = (_1429_s * _1429_s);;
	jule::F64 _1449_s4 = (_1439_s2 * _1439_s2);;
	jule::F64 _1459_t1 = (_1439_s2 * (0.6666666666666735 + (_1449_s4 * (0.2857142874366239 + (_1449_s4 * (0.1818357216161805 + (_1449_s4 * 0.14798198605116586)))))));;
	jule::F64 _1469_t2 = (_1449_s4 * (0.3999999999940942 + (_1449_s4 * (0.22222198432149784 + (_1449_s4 * 0.15313837699209373)))));;
	jule::F64 _1479_R = (_1459_t1 + _1469_t2);;
	jule::F64 _1489_hfsq = ((0.5 * _1389_f) * _1389_f);;
	return static_cast<jule::F64>(((_1399_k * 0.6931471803691238) - ((_1489_hfsq - ((_1429_s * (_1489_hfsq + _1479_R)) + (_1399_k * 0.00000000019082149292705877))) - _1389_f)));;
}



inline jule::F64 _1e768e19a_Abs(jule::F64 _438_x) {
	return static_cast<jule::F64>(_2116156e0_F64FromBits(static_cast<jule::U64>((_2116153c1_F64Bits(_438_x) & 9223372036854775807LLU))));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1e7695adb_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _469_absF = _1e768e19a_Abs(_449_f);;
	jule::F64 _4713_i = 0LL;;
	if ((_469_absF > 4503599627370496LL)) {
		_4713_i=_449_f;
	} else {
		_4713_i=static_cast<jule::F64>((_469_absF + 4503599627370496LL));
		_4713_i-=4503599627370496LL;
		while ((_4713_i > _469_absF)) {
			{
				(_4713_i)--;
			}
		_iter_next_1b675ec6e:;
		}
		_iter_end_1b675ec6e:;;
		if ((_449_f < 0LL)) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		};
	};
	__jule_func_result.__jule_result_arg0 = _4713_i;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::F64>((_449_f - _4713_i));
	return __jule_func_result;;
}



inline jule::F64 _1e76963a0_Log2(jule::F64 _449_x) {
	jule::F64 _4510_frac = 0;;
	jule::I64 _4516_exp = 0;;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _211617bcb_Frexp(_449_x);
		_4510_frac = __jule_assign_result.__jule_result_arg0;
		_4516_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4510_frac == 0.5)) {
		return static_cast<jule::F64>(static_cast<jule::F64>((_4516_exp - 1LL)));;
	};
	return static_cast<jule::F64>(((_1e768d809_Log(_4510_frac) * 1.4426950408889634) + static_cast<jule::F64>(_4516_exp)));;
}



inline jule::Str _1e76c0594_FmtFloat(jule::F64 _7813_f, jule::U8 _7821_fmt, jule::I64 _7832_prec, jule::I64 _7843_bit_size) {
	return static_cast<jule::Str>(_1e76c0b16_genericFtoa(jule::Slice<jule::U8>::alloc(0LL, _1e76c3ba2_max(static_cast<jule::I64>((_7832_prec + 4LL)), 24LL), 0), _7813_f, _7821_fmt, _7832_prec, _7843_bit_size));;
}



inline jule::Slice<jule::U8> _1e76c0b16_genericFtoa(jule::Slice<jule::U8> _8220_dst, jule::F64 _8233_val, jule::U8 _8243_fmt, jule::I64 _8258_prec, jule::I64 _8269_bit_size) {
	jule::U64 _8313_bits = 0LLU;;
	jule::Ptr<_1e76be42d_floatInfo> _8413_flt = nullptr;;
	{
		auto &_match_expr{ _8269_bit_size };
		
		if (_match_expr == 32LL) {
			_case_begin_1b68a878b:;
			{
				_8313_bits=static_cast<jule::U64>(static_cast<jule::U64>(_211614d3d_F32Bits(static_cast<jule::F32>(static_cast<jule::F32>(_8233_val)))));
				_8413_flt=((jule::Ptr<_1e76be42d_floatInfo>)((&(_1e76be7e6_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1b68a8802:;
			{
				_8313_bits=static_cast<jule::U64>(_2116153c1_F64Bits(_8233_val));
				_8413_flt=((jule::Ptr<_1e76be42d_floatInfo>)((&(_1e76beb04_f64info))));
			}
		}
		else {
			_case_begin_1b68a81a3:;
			{
				jule::panic(jule::Str("std::conv: illegal bit_size", 27) + jule::Str("\nlocation: std/conv/ftoa.jule:93:9"));;
			}
		}
		_match_end_1b68a66bd:;
	};
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt.get()._field_expbits + _8413_flt.get()._field_mantbits)) != 0LLU);;
	jule::I64 _9713_exp = (static_cast<jule::I64>((_8313_bits >> _8413_flt.get()._field_mantbits)) & static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)));;
	jule::U64 _9813_mant = (_8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits) - 1LLU));;
	{
		auto &_match_expr{ _9713_exp };
		
		if (_match_expr == static_cast<jule::I64>(static_cast<jule::I64>(((1LL << _8413_flt.get()._field_expbits) - 1LL)))) {
			_case_begin_1b68aba9c:;
			{
				{
					
					if ((_9813_mant != 0LLU)) {
						_case_begin_1b68ada38:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'n','a','n'}));;
						}
					}
					else if (_969_neg) {
						_case_begin_1b68adcbe:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'-','i','n','f'}));;
						}
					}
					else {
						_case_begin_1b68acd12:;
						{
							return jule::append(_8220_dst,jule::Slice<jule::U8>::make({'+','i','n','f'}));;
						}
					}
					_match_end_1b68acc46:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1b68ac130:;
			{
				(_9713_exp)++;
			}
		}
		else {
			_case_begin_1b68a84d3:;
			{
				_9813_mant|=(static_cast<jule::U64>(1LLU) << _8413_flt.get()._field_mantbits);
			}
		}
		_match_end_1b68aba47:;
	};
	_9713_exp+=_8413_flt.get()._field_bias;
	if ((_8243_fmt == 'b')) {
		return _1e76c2d9e_fmtB(_8220_dst, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	if (((_8243_fmt == 'x') || (_8243_fmt == 'X'))) {
		return _1e76c3520_fmtX(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	;
	_1e76c0055_decimalSlice _13213_digs = _1e76c0055_decimalSlice{};;
	jule::Bool _13313_ok = false;;
	jule::Bool _1359_shortest = (_8258_prec < 0LL);;
	if (_1359_shortest) {
		_13213_digs._field_d=jule::Slice<jule::U8>::alloc(32LL, 32LL, 0);
		_1e76cd44d_ryuFtoaShortest(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), &((*(_8413_flt))));
		_13313_ok=true;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b68b21e0:;
				{
					_8258_prec=static_cast<jule::I64>(_1e76c3ba2_max(static_cast<jule::I64>((_13213_digs._field_nd - 1LL)), 0LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1b68b2256:;
				{
					_8258_prec=static_cast<jule::I64>(_1e76c3ba2_max(static_cast<jule::I64>((_13213_digs._field_nd - _13213_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b68b22bc:;
				{
					_8258_prec=_13213_digs._field_nd;
				}
			}
			_match_end_1b68b14a8:;
		};
	} else if ((_8243_fmt != 'f')) {
		jule::I64 _15217_digits = _8258_prec;;
		{
			auto &_match_expr{ _8243_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1b68b44ab:;
				{
					(_15217_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1b68b271d:;
				{
					if ((_8258_prec == 0LL)) {
						_8258_prec=1LL;
					};
					_15217_digits=_8258_prec;
				}
			}
			else {
				_case_begin_1b68b3e4a:;
				{
					_15217_digits=1LL;
				}
			}
			_match_end_1b68b3dd4:;
		};
		if (((_8269_bit_size == 32LL) && (_15217_digits <= 9LL))) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1e76cc2a4_ryuFtoaFixed32(&(_13213_digs), static_cast<jule::U32>(static_cast<jule::U32>(_9813_mant)), static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		} else if ((_15217_digits <= 18LL)) {
			_13213_digs._field_d=jule::Slice<jule::U8>::alloc(24LL, 24LL, 0);
			_1e76cc6e4_ryuFtoaFixed64(&(_13213_digs), _9813_mant, static_cast<jule::I64>((_9713_exp - static_cast<jule::I64>(_8413_flt.get()._field_mantbits))), _15217_digits);
			_13313_ok=true;
		};
	};
	if ((!(_13313_ok))) {
		return _1e76c1287_bigFtoa(_8220_dst, _8258_prec, _8243_fmt, _969_neg, _9813_mant, _9713_exp, &((*(_8413_flt))));;
	};
	return _1e76c18d6_fmtDigits(_8220_dst, _1359_shortest, _969_neg, _13213_digs, _8258_prec, _8243_fmt);;
}



inline jule::Slice<jule::U8> _1e76c1287_bigFtoa(jule::Slice<jule::U8> _18216_dst, jule::I64 _18233_prec, jule::U8 _18244_fmt, jule::Bool _18255_neg, jule::U64 _1835_mant, jule::I64 _18316_exp, _1e76be42d_floatInfo* _18327_flt) {
	_1e76d1e46_decimal _18413_d = _1e76d1e46_decimal{};;
	_1e76d2320_assign(&_18413_d, _1835_mant);
	_1e76d2595_shift(&_18413_d, static_cast<jule::I64>((_18316_exp - static_cast<jule::I64>((*(_18327_flt))._field_mantbits))));
	_1e76c0055_decimalSlice _18713_digs = _1e76c0055_decimalSlice{};;
	jule::Bool _1889_shortest = (_18233_prec < 0LL);;
	if (_1889_shortest) {
		_1e76c1cd2_roundShortest(&(_18413_d), _1835_mant, _18316_exp, _18327_flt);
		_18713_digs=_1e76c0055_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d22cb9e0:;
				{
					_18233_prec=static_cast<jule::I64>((_18713_digs._field_nd - 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d22cba56:;
				{
					_18233_prec=static_cast<jule::I64>(_1e76c3ba2_max(static_cast<jule::I64>((_18713_digs._field_nd - _18713_digs._field_dp)), 0LL));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d22cbacd:;
				{
					_18233_prec=_18713_digs._field_nd;
				}
			}
			_match_end_1d22cb88b:;
		};
	} else {
		{
			auto &_match_expr{ _18244_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1d22cd580:;
				{
					_1e76d2d15_round(&_18413_d, static_cast<jule::I64>((_18233_prec + 1LL)));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1d22cd618:;
				{
					_1e76d2d15_round(&_18413_d, static_cast<jule::I64>((_18413_d._field_dp + _18233_prec)));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1d22cd67e:;
				{
					if ((_18233_prec == 0LL)) {
						_18233_prec=1LL;
					};
					_1e76d2d15_round(&_18413_d, _18233_prec);
				}
			}
			_match_end_1d22cd4d6:;
		};
		_18713_digs=_1e76c0055_decimalSlice{._field_d=_18413_d._field_d.slice(0LL), ._field_nd=_18413_d._field_nd, ._field_dp=_18413_d._field_dp, };
	};
	return _1e76c18d6_fmtDigits(_18216_dst, _1889_shortest, _18255_neg, _18713_digs, _18233_prec, _18244_fmt);;
}



inline jule::Slice<jule::U8> _1e76c18d6_fmtDigits(jule::Slice<jule::U8> _21918_dst, jule::Bool _21931_shortest, jule::Bool _21947_neg, _1e76c0055_decimalSlice _2205_digs, jule::I64 _22029_prec, jule::U8 _22040_fmt) {
	{
		auto &_match_expr{ _22040_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1d22d1a8e:;
			{
				return _1e76c2310_fmtE(_21918_dst, _21947_neg, _2205_digs, _22029_prec, _22040_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1d22d1b05:;
			{
				return _1e76c2794_fmtF(_21918_dst, _21947_neg, _2205_digs, _22029_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1d22d1b6b:;
			{
				jule::I64 _22817_eprec = _22029_prec;;
				if (((_22817_eprec > _2205_digs._field_nd) && (_2205_digs._field_nd >= _2205_digs._field_dp))) {
					_22817_eprec=_2205_digs._field_nd;
				};
				if (_21931_shortest) {
					_22817_eprec=6LL;
				};
				jule::I64 _23813_exp = (_2205_digs._field_dp - 1LL);;
				if (((_23813_exp < -4LL) || (_23813_exp >= _22817_eprec))) {
					if ((_22029_prec > _2205_digs._field_nd)) {
						_22029_prec=_2205_digs._field_nd;
					};
					return _1e76c2310_fmtE(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>((_22029_prec - 1LL)), static_cast<jule::U8>(((_22040_fmt + 'e') - 'g')));;
				};
				if ((_22029_prec > _2205_digs._field_dp)) {
					_22029_prec=_2205_digs._field_nd;
				};
				return _1e76c2794_fmtF(_21918_dst, _21947_neg, _2205_digs, static_cast<jule::I64>(_1e76c3ba2_max(static_cast<jule::I64>((_22029_prec - _2205_digs._field_dp)), 0LL)));;
			}
		}
		_match_end_1d22d194b:;
	};
	return jule::append(_21918_dst,jule::Slice<jule::U8>::make({'%',_22040_fmt}));;
}



inline void _1e76c1cd2_roundShortest(_1e76d1e46_decimal* _25723_d, jule::U64 _25735_mant, jule::I64 _25746_exp, _1e76be42d_floatInfo* _25757_flt) {
	if ((_25735_mant == 0LLU)) {
		(*(_25723_d))._field_nd=0LL;
		return;;
	};
	jule::I64 _2789_minexp = ((*(_25757_flt))._field_bias + 1LL);;
	if (((_25746_exp > _2789_minexp) && ((332LL * ((*(_25723_d))._field_dp - (*(_25723_d))._field_nd)) >= (100LL * (_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)))))) {
		return;;
	};
	_1e76d1e46_decimal _28713_upper = _1e76d1e46_decimal{};;
	_1e76d2320_assign(&_28713_upper, static_cast<jule::U64>(((_25735_mant << 1LLU) + 1LLU)));
	_1e76d2595_shift(&_28713_upper, static_cast<jule::I64>(((_25746_exp - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::U64 _29713_mantlo = 0LLU;;
	jule::I64 _29813_explo = 0LL;;
	if (((_25735_mant > (1LLU << (*(_25757_flt))._field_mantbits)) || (_25746_exp == _2789_minexp))) {
		_29713_mantlo=static_cast<jule::U64>((_25735_mant - 1LLU));
		_29813_explo=_25746_exp;
	} else {
		_29713_mantlo=static_cast<jule::U64>(((_25735_mant << 1LLU) - 1LLU));
		_29813_explo=static_cast<jule::I64>((_25746_exp - 1LL));
	};
	_1e76d1e46_decimal _30613_lower = _1e76d1e46_decimal{};;
	_1e76d2320_assign(&_30613_lower, static_cast<jule::U64>(((_29713_mantlo << 1LLU) + 1LLU)));
	_1e76d2595_shift(&_30613_lower, static_cast<jule::I64>(((_29813_explo - static_cast<jule::I64>((*(_25757_flt))._field_mantbits)) - 1LL)));
	jule::Bool _3139_inclusive = ((_25735_mant & 1LL) == 0LLU);;
	jule::U8 _32613_upperdelta = 0LLU;;
	jule::I64 _33013_ui = 0LL;;
	for (; ; (_33013_ui)++) {
		{
			jule::I64 _33513_mi = ((_33013_ui - _28713_upper._field_dp) + (*(_25723_d))._field_dp);;
			if ((_33513_mi >= (*(_25723_d))._field_nd)) {
				goto _iter_end_1d22dd639;
			};
			jule::I64 _33913_li = ((_33013_ui - _28713_upper._field_dp) + _30613_lower._field_dp);;
			jule::U8 _34017_l = static_cast<jule::U8>(48LLU);;
			if (((_33913_li >= 0LL) && (_33913_li < _30613_lower._field_nd))) {
				_34017_l=_30613_lower._field_d[_33913_li];
			};
			jule::U8 _34417_m = static_cast<jule::U8>(48LLU);;
			if ((_33513_mi >= 0LL)) {
				_34417_m=(*(_25723_d))._field_d[_33513_mi];
			};
			jule::U8 _34817_u = static_cast<jule::U8>(48LLU);;
			if ((_33013_ui < _28713_upper._field_nd)) {
				_34817_u=_28713_upper._field_d[_33013_ui];
			};
			jule::Bool _35613_okdown = ((_34017_l != _34417_m) || (_3139_inclusive && ((_33913_li + 1LL) == _30613_lower._field_nd)));;
			{
				
				if (((_32613_upperdelta == 0LLU) && ((_34417_m + 1LLU) < _34817_u))) {
					_case_begin_1d22e31bb:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				else if (((_32613_upperdelta == 0LLU) && (_34417_m != _34817_u))) {
					_case_begin_1d22e3243:;
					{
						_32613_upperdelta=1LLU;
					}
				}
				else if (((_32613_upperdelta == 1LLU) && ((_34417_m != '9') || (_34817_u != '0')))) {
					_case_begin_1d22e32ba:;
					{
						_32613_upperdelta=2LLU;
					}
				}
				_match_end_1d22e3111:;
			};
			jule::Bool _37713_okup = ((_32613_upperdelta > 0LLU) && ((_3139_inclusive || (_32613_upperdelta > 1LLU)) || ((_33013_ui + 1LL) < _28713_upper._field_nd)));;
			{
				
				if ((_35613_okdown && _37713_okup)) {
					_case_begin_1d22e5b6e:;
					{
						_1e76d2d15_round(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_35613_okdown) {
					_case_begin_1d22e5bd5:;
					{
						_1e76d281a_roundDown(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				else if (_37713_okup) {
					_case_begin_1d22e5c4b:;
					{
						_1e76d2a90_roundUp(_25723_d, static_cast<jule::I64>((_33513_mi + 1LL)));
						return;;
					}
				}
				_match_end_1d22e24a6:;
			};
		}
	_iter_next_1d22dd639:;
	}
	_iter_end_1d22dd639:;;
}



inline jule::Slice<jule::U8> _1e76c2310_fmtE(jule::Slice<jule::U8> _39613_dst, jule::Bool _39626_neg, _1e76c0055_decimalSlice _39637_d, jule::I64 _39654_prec, jule::U8 _39665_fmt) {
	if (_39626_neg) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('-');;
	};
	jule::U8 _40313_ch = '0';;
	if ((_39637_d._field_nd != 0LL)) {
		_40313_ch=_39637_d._field_d[0LL];
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	if ((_39654_prec > 0LL)) {
		_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('.');;
		jule::I64 _41217_i = 1LL;;
		jule::I64 _41313_m = _1e76c3861_min(_39637_d._field_nd, static_cast<jule::I64>((_39654_prec + 1LL)));;
		if ((_41217_i < _41313_m)) {
			_39613_dst=jule::append(_39613_dst,_39637_d._field_d.slice(_41217_i, _41313_m));
			_41217_i=_41313_m;
		};
		for (; (_41217_i <= _39654_prec); (_41217_i)++) {
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push('0');;
			}
		_iter_next_1d22ea9ba:;
		}
		_iter_end_1d22ea9ba:;;
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_39665_fmt);;
	jule::I64 _42513_exp = (_39637_d._field_dp - 1LL);;
	if ((_39637_d._field_nd == 0LL)) {
		_42513_exp=0LL;
	};
	if ((_42513_exp < 0LL)) {
		_40313_ch='-';
		_42513_exp=static_cast<jule::I64>((-(_42513_exp)));
	} else {
		_40313_ch='+';
	};
	_39613_dst = jule::alloc_for_append(_39613_dst,1);_39613_dst.__push(_40313_ch);;
	{
		
		if ((_42513_exp < 10LL)) {
			_case_begin_1d22ec78b:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push('0');_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(_42513_exp) + '0')));;
			}
		}
		else if ((_42513_exp < 100LL)) {
			_case_begin_1d22ec5e3:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,2);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 10LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1d22ec3b2:;
			{
				_39613_dst = jule::alloc_for_append(_39613_dst,3);_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp / 100LL)) + '0')));_39613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_42513_exp / 10LL)) % 10LL) + '0')));_39613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_42513_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1d22eba43:;
	};
	return _39613_dst;;
}



inline jule::Slice<jule::U8> _1e76c2794_fmtF(jule::Slice<jule::U8> _45113_dst, jule::Bool _45126_neg, _1e76c0055_decimalSlice _45137_d, jule::I64 _45154_prec) {
	if (_45126_neg) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('-');;
	};
	if ((_45137_d._field_dp > 0LL)) {
		jule::I64 _45917_m = _1e76c3861_min(_45137_d._field_nd, _45137_d._field_dp);;
		_45113_dst=jule::append(_45113_dst,_45137_d._field_d.slice(0LL, _45917_m));
		for (; (_45917_m < _45137_d._field_dp); (_45917_m)++) {
			{
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
			}
		_iter_next_1d23013a5:;
		}
		_iter_end_1d23013a5:;;
	} else {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('0');;
	};
	if ((_45154_prec > 0LL)) {
		_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push('.');;
		jule::I64 _47017_i = 0LL;;
		for (; (_47017_i < _45154_prec); (_47017_i)++) {
			{
				jule::U8 _47221_ch = static_cast<jule::U8>(48LLU);;
				jule::I64 _47317_j = (_45137_d._field_dp + _47017_i);;
				if (((0LL <= _47317_j) && (_47317_j < _45137_d._field_nd))) {
					_47221_ch=_45137_d._field_d[_47317_j];
				};
				_45113_dst = jule::alloc_for_append(_45113_dst,1);_45113_dst.__push(_47221_ch);;
			}
		_iter_next_1d23023ea:;
		}
		_iter_end_1d23023ea:;;
	};
	return _45113_dst;;
}



inline jule::Slice<jule::U8> _1e76c2d9e_fmtB(jule::Slice<jule::U8> _48413_dst, jule::Bool _48426_neg, jule::U64 _48437_mant, jule::I64 _48452_exp, _1e76be42d_floatInfo* _48463_flt) {
	if (_48426_neg) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('-');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e76d6c4d_fmtBits(_48413_dst, _48437_mant, 10LL, false, true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('p');;
	_48452_exp-=static_cast<jule::I64>((*(_48463_flt))._field_mantbits);
	if ((_48452_exp >= 0LL)) {
		_48413_dst = jule::alloc_for_append(_48413_dst,1);_48413_dst.__push('+');;
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e76d6c4d_fmtBits(_48413_dst, static_cast<jule::U64>(static_cast<jule::U64>(_48452_exp)), 10LL, (_48452_exp < 0LL), true);
		_48413_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48413_dst;;
}



inline jule::Slice<jule::U8> _1e76c3520_fmtX(jule::Slice<jule::U8> _50613_dst, jule::I64 _50626_prec, jule::U8 _50637_fmt, jule::Bool _50648_neg, jule::U64 _5079_mant, jule::I64 _50724_exp, _1e76be42d_floatInfo* _50735_flt) {
	if ((_5079_mant == 0LLU)) {
		_50724_exp=0LL;
	};
	_5079_mant<<=(60LLU - (*(_50735_flt))._field_mantbits);
	while (((_5079_mant != 0LLU) && ((_5079_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5079_mant<<=1LLU;
			(_50724_exp)--;
		}
	_iter_next_1d2307d18:;
	}
	_iter_end_1d2307d18:;;
	if (((_50626_prec >= 0LL) && (_50626_prec < 15LL))) {
		jule::U64 _52113_shift = static_cast<jule::U64>((_50626_prec << 2LLU));;
		jule::U64 _52213_extra = ((_5079_mant << _52113_shift) & 1152921504606846975LLU);;
		_5079_mant>>=(60LLU - _52113_shift);
		if (((_52213_extra | (_5079_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5079_mant)++;
		};
		_5079_mant<<=(60LLU - _52113_shift);
		if (((_5079_mant & 2305843009213693952LLU) != 0LLU)) {
			_5079_mant>>=1LLU;
			(_50724_exp)++;
		};
	};
	jule::Str _53513_hex = jule::Str();;
	if ((_50637_fmt == 'X')) {
		_53513_hex=jule::Str("0123456789ABCDEF", 16);
	} else {
		_53513_hex=jule::Str("0123456789abcdef", 16);
	};
	if (_50648_neg) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('-');;
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push('0');_50613_dst.__push(_50637_fmt);_50613_dst.__push(static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_5079_mant >> 60LLU) & 1LLU)))));;
	_5079_mant<<=4LLU;
	if (((_50626_prec < 0LL) && (_5079_mant != 0LLU))) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		while ((_5079_mant != 0LLU)) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1d230d280:;
		}
		_iter_end_1d230d280:;;
	} else if ((_50626_prec > 0LL)) {
		_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push('.');;
		jule::I64 _55817_i = 0LL;;
		for (; (_55817_i < _50626_prec); (_55817_i)++) {
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_53513_hex[static_cast<jule::I64>(((_5079_mant >> 60LLU) & 15LLU))]);;
				_5079_mant<<=4LLU;
			}
		_iter_next_1d230e429:;
		}
		_iter_end_1d230e429:;;
	};
	jule::U8 _56613_ch = static_cast<jule::U8>(80LLU);;
	if ((_50637_fmt == _1e76c47b8_lower(_50637_fmt))) {
		_56613_ch='p';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	if ((_50724_exp < 0LL)) {
		_56613_ch='-';
		_50724_exp=static_cast<jule::I64>((-(_50724_exp)));
	} else {
		_56613_ch='+';
	};
	_50613_dst = jule::alloc_for_append(_50613_dst,1);_50613_dst.__push(_56613_ch);;
	{
		
		if ((_50724_exp < 100LL)) {
			_case_begin_1d2311bac:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,2);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else if ((_50724_exp < 1000LL)) {
			_case_begin_1d230ba53:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,3);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 100LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		else {
			_case_begin_1d2311816:;
			{
				_50613_dst = jule::alloc_for_append(_50613_dst,4);_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp / 1000LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>(((static_cast<jule::U8>((_50724_exp / 100LL)) % 10LL) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>(((_50724_exp / 10LL) % 10LL)) + '0')));_50613_dst.__push(static_cast<jule::U8>((static_cast<jule::U8>((_50724_exp % 10LL)) + '0')));;
			}
		}
		_match_end_1d23110b8:;
	};
	return _50613_dst;;
}



inline jule::I64 _1e76c3861_min(jule::I64 _5918_a, jule::I64 _59116_b) {
	if ((_5918_a < _59116_b)) {
		return _5918_a;;
	};
	return _59116_b;;
}



inline jule::I64 _1e76c3ba2_max(jule::I64 _5988_a, jule::I64 _59816_b) {
	if ((_5988_a > _59816_b)) {
		return _5988_a;;
	};
	return _59816_b;;
}



inline jule::U8 _1e76c47b8_lower(jule::U8 _4710_c) {
	return static_cast<jule::U8>((_4710_c | 32LL));;
}



inline __jule_tuple_u64__jule_tuple__21113c954_ConvError _1e76c4be7_parseUint(jule::Str _5118_s, jule::I64 _5130_base, jule::I64 _5145_bitSize) {
	__jule_tuple_u64__jule_tuple__21113c954_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (_5118_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5130_base) && (_5130_base <= 36LL))) {
			_case_begin_1d2317e05:;
		}
		else if ((_5130_base == 0LL)) {
			_case_begin_1d2317ce5:;
			{
				_5130_base=10LL;
				if ((_5118_s[0LL] == '0')) {
					{
						
						if (((_5118_s.len() >= 3LL) && (_1e76c47b8_lower(_5118_s[1LL]) == 'b'))) {
							_case_begin_1d23198eb:;
							{
								_5130_base=2LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e76c47b8_lower(_5118_s[1LL]) == 'o'))) {
							_case_begin_1d231970e:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else if (((_5118_s.len() >= 3LL) && (_1e76c47b8_lower(_5118_s[1LL]) == 'x'))) {
							_case_begin_1d2319786:;
							{
								_5130_base=16LL;
								(_5118_s).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1d2319357:;
							{
								_5130_base=8LL;
								(_5118_s).mut_slice(1LL);;
							}
						}
						_match_end_1d231928b:;
					};
				};
			}
		}
		else {
			_case_begin_1d23172bc:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1d2317630:;
	};
	if ((_5145_bitSize == 0LL)) {
		_5145_bitSize=64LL;
	} else if (((_5145_bitSize < 0LL) || (_5145_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _9013_cutoff = 0LLU;;
	{
		auto &_match_expr{ _5130_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1d231d58c:;
			{
				_9013_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1d231ce1b:;
			{
				_9013_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1d231d15d:;
			{
				_9013_cutoff=static_cast<jule::U64>((jule::div(jule::MAX_U64,static_cast<jule::U64>(_5130_base)) + 1LLU));
			}
		}
		_match_end_1d231d108:;
	};
	jule::U64 _10013_maxVal = 0LLU;;
	{
		auto &_match_expr{ _5145_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1d231e55a:;
			{
				_10013_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1d231e5c1:;
			{
				_10013_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1d231e505:;
	};
	jule::U64 _10813_n = 0LLU;;
	{
		auto expr = &(_5118_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1d2320418:;
		if (it != expr_end) {
			jule::U8 _10912_c = *it;
			{
				jule::U8 _11017_d = 0LLU;;
				{
					
					if ((('0' <= _10912_c) && (_10912_c <= '9'))) {
						_case_begin_1d231e857:;
						{
							_11017_d=static_cast<jule::U8>((_10912_c - '0'));
						}
					}
					else if ((('a' <= _1e76c47b8_lower(_10912_c)) && (_1e76c47b8_lower(_10912_c) <= 'z'))) {
						_case_begin_1d2321628:;
						{
							_11017_d=static_cast<jule::U8>(((_1e76c47b8_lower(_10912_c) - 'a') + 10LLU));
						}
					}
					else if ((_10912_c == '_')) {
						_case_begin_1d232124e:;
						{
							goto _iter_next_1d2320418;
						}
					}
					else {
						_case_begin_1d23211d8:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1d2321172:;
				};
				if ((_11017_d >= static_cast<jule::U8>(_5130_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(2LL);
					return __jule_func_result;;
				};
				if ((_10813_n >= _9013_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n*=static_cast<jule::U64>(_5130_base);
				jule::U64 _13213_n1 = (_10813_n + static_cast<jule::U64>(_11017_d));;
				if (((_13213_n1 < _10813_n) || (_13213_n1 > _10013_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _10013_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(1LL);
					return __jule_func_result;;
				};
				_10813_n=_13213_n1;
			}
			_iter_next_1d2320418:;
			++it;
			goto _iter_begin_1d2320418;
		}
		_iter_end_1d2320418:;
	};
	__jule_func_result.__jule_result_arg0 = _10813_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1e76c50d2_ParseUint(jule::Str _14618_s, jule::I64 _14630_base, jule::I64 _14645_bit_size) {
	jule::U64 _14710_un = 0;;
	jule::I64 _14714_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76c4be7_parseUint(_14618_s, _14630_base, _14645_bit_size);
		_14710_un = __jule_assign_result.__jule_result_arg0;
		_14714_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14714_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::U64>(jule::Any(_14714_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::U64>(jule::Any(), _14710_un);;
}



inline jule::Exceptional<jule::I64> _1e76c5544_ParseInt(jule::Str _17217_s, jule::I64 _17225_base, jule::I64 _17240_bitSize) {
	if (_17217_s.empty()) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	jule::Bool _17813_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_17813_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _18714_un = 0;;
	jule::I64 _18718_err = 0LL;;
	({
		__jule_tuple_u64__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76c4be7_parseUint(_17217_s, _17225_base, _17240_bitSize);
		_18714_un = __jule_assign_result.__jule_result_arg0;
		_18718_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18718_err != static_cast<jule::I64>(0LL)) && (_18718_err != static_cast<jule::I64>(1LL)))) {
		return jule::Exceptional<jule::I64>(jule::Any(_18718_err, &__jule_any_type0));
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=64LL;
	};
	jule::U64 _1969_cutoff = static_cast<jule::U64>((1LL << static_cast<jule::U64>((_17240_bitSize - 1LL))));;
	if (((!(_17813_neg)) && (_18714_un >= _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	if ((_17813_neg && (_18714_un > _1969_cutoff))) {
		return jule::Exceptional<jule::I64>(jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0));
	};
	jule::I64 _20313_n = static_cast<jule::I64>(_18714_un);;
	if (_17813_neg) {
		_20313_n=static_cast<jule::I64>((-(_20313_n)));
	};
	return jule::Exceptional<jule::I64>(jule::Any(), _20313_n);;
}



inline __jule_tuple_f64__jule_tuple_bool _1e76c615a_eiselLemire64(jule::U64 _4122_man, jule::I64 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2116156e0_F64FromBits(9223372036854775808LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _579_clz = _1e7679a37_LeadingZeros64(_4122_man);;
	_4122_man<<=static_cast<jule::U64>(_579_clz);
	;
	jule::U64 _6013_retExp2 = (static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_579_clz));;
	jule::U64 _6314_xHi = 0;;
	jule::U64 _6323_xLo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(_4122_man, _1e76c6ec4_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_6314_xHi = __jule_assign_result.__jule_result_arg0;
		_6323_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_6314_xHi & 511LLU) == 511LLU) && ((_6323_xLo + _4122_man) < _4122_man))) {
		jule::U64 _6714_yHi = 0;;
		jule::U64 _6719_yLo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(_4122_man, _1e76c6ec4_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_6714_yHi = __jule_assign_result.__jule_result_arg0;
			_6719_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _6818_mergedHi = 0;;
		jule::U64 _6828_mergedLo = 0;;
		({
			jule::U64 ___jule_assign_arg = _6314_xHi;
			jule::U64 _1___jule_assign_arg = (_6323_xLo + _6714_yHi);
			_6818_mergedHi = ___jule_assign_arg;
			_6828_mergedLo = _1___jule_assign_arg;
		});
		if ((_6828_mergedLo < _6323_xLo)) {
			(_6818_mergedHi)++;
		};
		if (((((_6818_mergedHi & 511LLU) == 511LLU) && ((_6828_mergedLo + 1LLU) == 0LLU)) && ((_6719_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _6818_mergedHi;
			jule::U64 _1___jule_assign_arg = _6828_mergedLo;
			_6314_xHi = ___jule_assign_arg;
			_6323_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _799_msb = (_6314_xHi >> 63LLU);;
	jule::U64 _8013_retMantissa = (_6314_xHi >> (_799_msb + 9LLU));;
	_6013_retExp2-=(1LLU ^ _799_msb);
	if ((((_6323_xLo == 0LLU) && ((_6314_xHi & 511LLU) == 0LLU)) && ((_8013_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_8013_retMantissa+=(_8013_retMantissa & 1LLU);
	_8013_retMantissa>>=1LLU;
	if (((_8013_retMantissa >> 53LLU) > 0LLU)) {
		_8013_retMantissa>>=1LLU;
		_6013_retExp2+=1LLU;
	};
	if (((_6013_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _10313_retBits = ((_6013_retExp2 << 52LLU) | (_8013_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_10313_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2116156e0_F64FromBits(_10313_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1e76c6556_eiselLemire32(jule::U64 _11022_man, jule::I64 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_211615129_F32FromBits(2147483648LLU));
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I64 _1329_clz = _1e7679a37_LeadingZeros64(_11022_man);;
	_11022_man<<=static_cast<jule::U64>(_1329_clz);
	;
	jule::U64 _13513_retExp2 = (static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1329_clz));;
	jule::U64 _13814_x_hi = 0;;
	jule::U64 _13824_x_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(_11022_man, _1e76c6ec4_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_13814_x_hi = __jule_assign_result.__jule_result_arg0;
		_13824_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_13814_x_hi & 274877906943LLU) == 274877906943LLU) && ((_13824_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _14214_y_hi = 0;;
		jule::U64 _14220_y_lo = 0;;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(_11022_man, _1e76c6ec4_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_14214_y_hi = __jule_assign_result.__jule_result_arg0;
			_14220_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _14318_merged_hi = 0;;
		jule::U64 _14329_merged_lo = 0;;
		({
			jule::U64 ___jule_assign_arg = _13814_x_hi;
			jule::U64 _1___jule_assign_arg = (_13824_x_lo + _14214_y_hi);
			_14318_merged_hi = ___jule_assign_arg;
			_14329_merged_lo = _1___jule_assign_arg;
		});
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		};
		if (((((_14318_merged_hi & 274877906943LLU) == 274877906943LLU) && ((_14329_merged_lo + 1LLU) == 0LLU)) && ((_14220_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _14318_merged_hi;
			jule::U64 _1___jule_assign_arg = _14329_merged_lo;
			_13814_x_hi = ___jule_assign_arg;
			_13824_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1549_msb = (_13814_x_hi >> 63LLU);;
	jule::U64 _15513_retMantissa = (_13814_x_hi >> (_1549_msb + 38LLU));;
	_13513_retExp2-=(1LLU ^ _1549_msb);
	if ((((_13824_x_lo == 0LLU) && ((_13814_x_hi & 274877906943LLU) == 0LLU)) && ((_15513_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_15513_retMantissa+=(_15513_retMantissa & 1LLU);
	_15513_retMantissa>>=1LLU;
	if (((_15513_retMantissa >> 24LLU) > 0LLU)) {
		_15513_retMantissa>>=1LLU;
		_13513_retExp2+=1LLU;
	};
	if (((_13513_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _17813_retBits = ((_13513_retExp2 << 23LLU) | (_15513_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_17813_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_211615129_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_17813_retBits))));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I64 _1e76c826c_commonPrefixLenIgnoreCase(jule::Str _4530_s, jule::Str _4538_prefix) {
	jule::I64 _4613_n = _4538_prefix.len();;
	if ((_4613_n > _4530_s.len())) {
		_4613_n=static_cast<jule::I64>(_4530_s.len());
	};
	jule::I64 _5013_i = 0LL;;
	for (; (_5013_i < _4613_n); (_5013_i)++) {
		{
			jule::U8 _5217_c = _4530_s[_5013_i];;
			if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
				_5217_c+=32LL;
			};
			if ((_5217_c != _4538_prefix[_5013_i])) {
				return _5013_i;;
			};
		}
	_iter_next_1d2344a69:;
	}
	_iter_end_1d2344a69:;;
	return _4613_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1e76c8569_special(jule::Str _6816_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if (_6816_s.empty()) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I64 _7213_sign = 1LL;;
	jule::I64 _7313_nsign = 0LL;;
	{
		auto &_match_expr{ _6816_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1d2348243:;
			{
				if ((_6816_s[0LL] == '-')) {
					_7213_sign=-1LL;
				};
				_7313_nsign=1LL;
				(_6816_s).mut_slice(1LL);;
				goto _case_begin_1d23482ba;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1d23482ba:;
			{
				jule::I64 _8317_caseN = _1e76c826c_commonPrefixLenIgnoreCase(_6816_s, jule::Str("infinity", 8));;
				if (((3LL < _8317_caseN) && (_8317_caseN < 8LL))) {
					_8317_caseN=3LL;
				};
				if (((_8317_caseN == 3LL) || (_8317_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e768b86d_Inf(_7213_sign));
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_7313_nsign + __jule_func_result.__jule_result_arg1));
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1d2348342:;
			{
				if ((_1e76c826c_commonPrefixLenIgnoreCase(_6816_s, jule::Str("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1e768b2da_NaN());
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1d2348177:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1e76c8811_readFloat(jule::Str _10314_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1d234cec3:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1d234d259:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1d234d18d:;
	};
	jule::U64 _11713_base = 10LLU;;
	jule::I64 _11813_maxMantDigits = 19LL;;
	jule::U8 _11913_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < _10314_s.len()) && (_10314_s[__jule_func_result.__jule_result_arg5] == '0')) && (_1e76c47b8_lower(_10314_s[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_11713_base=16LLU;
		_11813_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_11913_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _12713_sawdot = false;;
	jule::Bool _12813_sawdigits = false;;
	jule::I64 _12913_nd = 0LL;;
	jule::I64 _13013_ndMant = 0LL;;
	jule::I64 _13113_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < _10314_s.len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _13313_c = _10314_s[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_13313_c == '_')) {
					_case_begin_1d235324d:;
					{
						goto _iter_next_1d23527e1;
					}
				}
				else if ((_13313_c == '.')) {
					_case_begin_1d23532c5:;
					{
						if (_12713_sawdot) {
							goto _julec_label_loop_end;
						};
						_12713_sawdot=true;
						_13113_dp=_12913_nd;
						goto _iter_next_1d23527e1;
					}
				}
				else if ((('0' <= _13313_c) && (_13313_c <= '9'))) {
					_case_begin_1d235334c:;
					{
						_12813_sawdigits=true;
						if (((_13313_c == '0') && (_12913_nd == 0LL))) {
							(_13113_dp)--;
							goto _iter_next_1d23527e1;
						};
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_11713_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((_13313_c - '0'));
							(_13013_ndMant)++;
						} else if ((_13313_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1d23527e1;
					}
				}
				else if ((((_11713_base == 16LLU) && ('a' <= _1e76c47b8_lower(_13313_c))) && (_1e76c47b8_lower(_13313_c) <= 'f'))) {
					_case_begin_1d23533c4:;
					{
						_12813_sawdigits=true;
						(_12913_nd)++;
						if ((_13013_ndMant < _11813_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>(((_1e76c47b8_lower(_13313_c) - 'a') + 10LLU));
							(_13013_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1d23527e1;
					}
				}
				_match_end_1d2353171:;
			};
			goto _iter_end_1d23527e1;
		}
	_iter_next_1d23527e1:;
	}
	_iter_end_1d23527e1:;;
	_julec_label_loop_end:;
	if ((!(_12813_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_12713_sawdot))) {
		_13113_dp=_12913_nd;
	};
	if ((_11713_base == 16LLU)) {
		_13113_dp*=4LL;
		_13013_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && (_1e76c47b8_lower(_10314_s[__jule_func_result.__jule_result_arg5]) == _11913_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= _10314_s.len())) {
			return __jule_func_result;;
		};
		jule::I64 _19617_esign = 1LL;;
		if ((_10314_s[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if ((_10314_s[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_19617_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= _10314_s.len()) || (_10314_s[__jule_func_result.__jule_result_arg5] < '0')) || (_10314_s[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I64 _20617_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < _10314_s.len()) && ((('0' <= _10314_s[__jule_func_result.__jule_result_arg5]) && (_10314_s[__jule_func_result.__jule_result_arg5] <= '9')) || (_10314_s[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if ((_10314_s[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1d235aba1;
				};
				if ((_20617_e < 10000LL)) {
					_20617_e=static_cast<jule::I64>((((_20617_e * 10LL) + static_cast<jule::I64>(_10314_s[__jule_func_result.__jule_result_arg5])) - '0'));
				};
			}
		_iter_next_1d235aba1:;
		}
		_iter_end_1d235aba1:;;
		_13113_dp+=(_20617_e * _19617_esign);
	} else if ((_11713_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=static_cast<jule::I64>((_13113_dp - _13013_ndMant));
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1e76ca291_atof64exact(jule::U64 _48116_mantissa, jule::I64 _48135_exp, jule::Bool _48145_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_48116_mantissa >> _1e76beb04_f64info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(static_cast<jule::F64>(_48116_mantissa));
	if (_48145_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F64>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_48135_exp == 0LL)) {
			_case_begin_1d23644c3:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp > 0LL) && (_48135_exp <= 37LL))) {
			_case_begin_1d236454a:;
			{
				if ((_48135_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1e76c96ad_f64pow10[(_48135_exp - 22LL)];
					_48135_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>((__jule_func_result.__jule_result_arg0 * _1e76c96ad_f64pow10[_48135_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48135_exp < 0LL) && (_48135_exp >= -22LL))) {
			_case_begin_1d23645c2:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(jule::div(__jule_func_result.__jule_result_arg0,_1e76c96ad_f64pow10[(-(_48135_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d2363d85:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1e76ca67b_atof32exact(jule::U64 _51516_mantissa, jule::I64 _51535_exp, jule::Bool _51549_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_51516_mantissa >> _1e76be7e6_f32info._field_mantbits) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(static_cast<jule::F32>(_51516_mantissa));
	if (_51549_neg) {
		__jule_func_result.__jule_result_arg0=static_cast<jule::F32>((-(__jule_func_result.__jule_result_arg0)));
	};
	{
		
		if ((_51535_exp == 0LL)) {
			_case_begin_1d2368818:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp > 0LL) && (_51535_exp <= 17LL))) {
			_case_begin_1d2368890:;
			{
				if ((_51535_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1e76c99ee_f32pow10[(_51535_exp - 10LL)];
					_51535_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>((__jule_func_result.__jule_result_arg0 * _1e76c99ee_f32pow10[_51535_exp]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_51535_exp < 0LL) && (_51535_exp >= -10LL))) {
			_case_begin_1d2368917:;
			{
				__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(jule::div(__jule_func_result.__jule_result_arg0,_1e76c99ee_f32pow10[(-(_51535_exp))]));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1d23681ca:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__21113c954_ConvError _1e76cac53_atofHex(jule::Str _55112_s, _1e76be42d_floatInfo* _55121_flt, jule::U64 _55141_mantissa, jule::I64 _55160_exp, jule::Bool _55170_neg, jule::Bool _55181_trunc) {
	__jule_tuple_f64__jule_tuple__21113c954_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I64 _5529_maxExp = ((static_cast<jule::I64>((1LL << (*(_55121_flt))._field_expbits)) + (*(_55121_flt))._field_bias) - 2LL);;
	jule::I64 _5539_minExp = ((*(_55121_flt))._field_bias + 1LL);;
	_55160_exp+=static_cast<jule::I64>((*(_55121_flt))._field_mantbits);
	while (((_55141_mantissa != 0LLU) && ((_55141_mantissa >> ((*(_55121_flt))._field_mantbits + 2LLU)) == 0LLU))) {
		{
			_55141_mantissa<<=1LLU;
			(_55160_exp)--;
		}
	_iter_next_1d236ccc3:;
	}
	_iter_end_1d236ccc3:;;
	if (_55181_trunc) {
		_55141_mantissa|=1LLU;
	};
	while (((_55141_mantissa >> ((1LLU + (*(_55121_flt))._field_mantbits) + 2LLU)) != 0LLU)) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1d236e9b7:;
	}
	_iter_end_1d236e9b7:;;
	while (((_55141_mantissa > 1LLU) && (_55160_exp < (_5539_minExp - 2LL)))) {
		{
			_55141_mantissa=static_cast<jule::U64>(((_55141_mantissa >> 1LLU) | (_55141_mantissa & 1LLU)));
			(_55160_exp)++;
		}
	_iter_next_1d237019e:;
	}
	_iter_end_1d237019e:;;
	jule::U64 _58313_round = (_55141_mantissa & 3LLU);;
	_55141_mantissa>>=2LLU;
	_58313_round|=(_55141_mantissa & 1LLU);
	_55160_exp+=2LL;
	if ((_58313_round == 3LLU)) {
		(_55141_mantissa)++;
		if ((_55141_mantissa == (1LLU << (1LLU + (*(_55121_flt))._field_mantbits)))) {
			_55141_mantissa>>=1LLU;
			(_55160_exp)++;
		};
	};
	if (((_55141_mantissa >> (*(_55121_flt))._field_mantbits) == 0LLU)) {
		_55160_exp=(*(_55121_flt))._field_bias;
	};
	jule::I64 _59813_err = static_cast<jule::I64>(0LL);;
	if ((_55160_exp > _5529_maxExp)) {
		_55141_mantissa=static_cast<jule::U64>(static_cast<jule::U64>((1LL << (*(_55121_flt))._field_mantbits)));
		_55160_exp=static_cast<jule::I64>((_5529_maxExp + 1LL));
		_59813_err=static_cast<jule::I64>(1LL);
	};
	jule::U64 _60513_bits = (_55141_mantissa & ((1LLU << (*(_55121_flt))._field_mantbits) - 1LLU));;
	_60513_bits|=(static_cast<jule::U64>(((_55160_exp - (*(_55121_flt))._field_bias) & static_cast<jule::I64>(((1LL << (*(_55121_flt))._field_expbits) - 1LL)))) << (*(_55121_flt))._field_mantbits);
	if (_55170_neg) {
		_60513_bits|=((1LLU << (*(_55121_flt))._field_mantbits) << (*(_55121_flt))._field_expbits);
	};
	if (((*(_55121_flt)) == _1e76be7e6_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_211615129_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_60513_bits)))));
		__jule_func_result.__jule_result_arg1 = _59813_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_2116156e0_F64FromBits(_60513_bits));
	__jule_func_result.__jule_result_arg1 = _59813_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__21113c954_ConvError _1e76cb10a_atof32(jule::Str _61611_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__21113c954_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _61814_val = 0;;
		jule::I64 _61819__n = 0;;
		jule::Bool _61823_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76c8569_special(_61611_s);
			_61814_val = __jule_assign_result.__jule_result_arg0;
			_61819__n = __jule_assign_result.__jule_result_arg1;
			_61823_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_61823_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_61814_val));
			__jule_func_result.__jule_result_arg1 = _61819__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _62410_mantissa = 0;;
	jule::I64 _62420_exp = 0;;
	jule::Bool _62425_neg = false;;
	jule::Bool _62430_trunc = false;;
	jule::Bool _62437_hex = false;;
	jule::I64 _62442__n = 0;;
	jule::Bool _62450_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76c8811_readFloat(_61611_s);
		_62410_mantissa = __jule_assign_result.__jule_result_arg0;
		_62420_exp = __jule_assign_result.__jule_result_arg1;
		_62425_neg = __jule_assign_result.__jule_result_arg2;
		_62430_trunc = __jule_assign_result.__jule_result_arg3;
		_62437_hex = __jule_assign_result.__jule_result_arg4;
		_62442__n = __jule_assign_result.__jule_result_arg5;
		_62450_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62442__n;
	if ((!(_62450_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_62437_hex) {
		jule::F64 _63117_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76cac53_atofHex(_61611_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1e76be7e6_f32info), _62410_mantissa, _62420_exp, _62425_neg, _62430_trunc);
			_63117_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(static_cast<jule::F32>(_63117_ff));
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62430_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e76ca67b_atof32exact(_62410_mantissa, _62420_exp, _62425_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62450_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e76c6556_eiselLemire32(_62410_mantissa, _62420_exp, _62425_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62450_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62450_ok) {
			if ((!(_62430_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _65321_fUp = 0.0f;;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1e76c6556_eiselLemire32(static_cast<jule::U64>((_62410_mantissa + 1LLU)), _62420_exp, _62425_neg);
				_65321_fUp = __jule_assign_result.__jule_result_arg0;
				_62450_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62450_ok && (__jule_func_result.__jule_result_arg0 == _65321_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1e76d1e46_decimal _66213_d = _1e76d1e46_decimal{};;
	if ((!(_1e76c8eb5_set(&_66213_d, _61611_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _66610_b = 0;;
	jule::Bool _66613_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e76c92c3_floatBits(&_66213_d, &(_1e76be7e6_f32info));
		_66610_b = __jule_assign_result.__jule_result_arg0;
		_66613_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_211615129_F32FromBits(static_cast<jule::U32>(static_cast<jule::U32>(_66610_b))));
	if (_66613_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError _1e76cb3a2_atof64(jule::Str _67411_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _67614_val = 0;;
		jule::I64 _67619__n = 0;;
		jule::Bool _67623_ok = false;;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76c8569_special(_67411_s);
			_67614_val = __jule_assign_result.__jule_result_arg0;
			_67619__n = __jule_assign_result.__jule_result_arg1;
			_67623_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_67623_ok) {
			__jule_func_result.__jule_result_arg0 = _67614_val;
			__jule_func_result.__jule_result_arg1 = _67619__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _68210_mantissa = 0;;
	jule::I64 _68220_exp = 0;;
	jule::Bool _68225_neg = false;;
	jule::Bool _68230_trunc = false;;
	jule::Bool _68237_hex = false;;
	jule::I64 _68242__n = 0;;
	jule::Bool _68250_ok = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76c8811_readFloat(_67411_s);
		_68210_mantissa = __jule_assign_result.__jule_result_arg0;
		_68220_exp = __jule_assign_result.__jule_result_arg1;
		_68225_neg = __jule_assign_result.__jule_result_arg2;
		_68230_trunc = __jule_assign_result.__jule_result_arg3;
		_68237_hex = __jule_assign_result.__jule_result_arg4;
		_68242__n = __jule_assign_result.__jule_result_arg5;
		_68250_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68242__n;
	if ((!(_68250_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	if (_68237_hex) {
		({
			__jule_tuple_f64__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76cac53_atofHex(_67411_s.slice(0LL, __jule_func_result.__jule_result_arg1), &(_1e76beb04_f64info), _68210_mantissa, _68220_exp, _68225_neg, _68230_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68230_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e76ca291_atof64exact(_68210_mantissa, _68220_exp, _68225_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68250_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e76c615a_eiselLemire64(_68210_mantissa, _68220_exp, _68225_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68250_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68250_ok) {
			if ((!(_68230_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _71021_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1e76c615a_eiselLemire64(static_cast<jule::U64>((_68210_mantissa + 1LLU)), _68220_exp, _68225_neg);
				_71021_fUp = __jule_assign_result.__jule_result_arg0;
				_68250_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68250_ok && (__jule_func_result.__jule_result_arg0 == _71021_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1e76d1e46_decimal _71913_d = _1e76d1e46_decimal{};;
	if ((!(_1e76c8eb5_set(&_71913_d, _67411_s.slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I64>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _72310_b = 0;;
	jule::Bool _72313_ovf = false;;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1e76c92c3_floatBits(&_71913_d, &(_1e76beb04_f64info));
		_72310_b = __jule_assign_result.__jule_result_arg0;
		_72313_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_2116156e0_F64FromBits(_72310_b));
	if (_72313_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I64>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError _1e76cb6e3_parseFloatPrefix(jule::Str _73121_s, jule::I64 _73129_bit_size) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73129_bit_size == 32LL)) {
		jule::F32 _73314_f = 0;;
		jule::I64 _73317_n = 0;;
		jule::I64 _73320_err = 0LL;;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76cb10a_atof32(_73121_s);
			_73314_f = __jule_assign_result.__jule_result_arg0;
			_73317_n = __jule_assign_result.__jule_result_arg1;
			_73320_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(static_cast<jule::F64>(_73314_f));
		__jule_func_result.__jule_result_arg1 = _73317_n;
		__jule_func_result.__jule_result_arg2 = _73320_err;
		return __jule_func_result;;
	};
	jule::F64 _73710_f = 0;;
	jule::I64 _73713_n = 0;;
	jule::I64 _73716_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76cb3a2_atof64(_73121_s);
		_73710_f = __jule_assign_result.__jule_result_arg0;
		_73713_n = __jule_assign_result.__jule_result_arg1;
		_73716_err = __jule_assign_result.__jule_result_arg2;
	});
	__jule_func_result.__jule_result_arg0 = _73710_f;
	__jule_func_result.__jule_result_arg1 = _73713_n;
	__jule_func_result.__jule_result_arg2 = _73716_err;
	return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1e76cba34_ParseFloat(jule::Str _76515_s, jule::I64 _76523_bit_size) {
	jule::F64 _76610_f = 0;;
	jule::I64 _76613_n = 0;;
	jule::I64 _76616_err = 0LL;;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__21113c954_ConvError __jule_assign_result = _1e76cb6e3_parseFloatPrefix(_76515_s, _76523_bit_size);
		_76610_f = __jule_assign_result.__jule_result_arg0;
		_76613_n = __jule_assign_result.__jule_result_arg1;
		_76616_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_76613_n != _76515_s.len()) && ((_76616_err == static_cast<jule::I64>(0LL)) || (_76616_err != static_cast<jule::I64>(2LL))))) {
		return jule::Exceptional<jule::F64>(jule::Any(static_cast<jule::I64>(2LL), &__jule_any_type0));
	};
	if ((_76616_err != static_cast<jule::I64>(0LL))) {
		return jule::Exceptional<jule::F64>(jule::Any(_76616_err, &__jule_any_type0));
	};
	return jule::Exceptional<jule::F64>(jule::Any(), _76610_f);;
}



inline void _1e76cc2a4_ryuFtoaFixed32(_1e76c0055_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I64 _4956_exp, jule::I64 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with negative prec", 40) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:9"));;
	};
	if ((_4966_prec > 9LL)) {
		jule::panic(jule::Str("ryuFtoaFixed32 called with prec > 9", 35) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:9"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _6213_e2 = _4956_exp;;
	jule::I64 _639_b = _1e7681c1a_Len32(_4945_mant);;
	if ((_639_b < 25LL)) {
		_4945_mant<<=static_cast<jule::U64>((25LL - _639_b));
		_6213_e2+=(static_cast<jule::I64>(_639_b) - 25LL);
	};
	jule::I64 _749_q = (((-(_1e76cd6e5_mulByLog2Log10(static_cast<jule::I64>((_6213_e2 + 24LL))))) + _4966_prec) - 1LL);;
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));;
	jule::U32 _8114_di = 0;;
	jule::I64 _8118_dexp2 = 0;;
	jule::Bool _8129_d0 = false;;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76cedde_mult64bitPow10(_4945_mant, _6213_e2, _749_q);
		_8114_di = __jule_assign_result.__jule_result_arg0;
		_8118_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8129_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bitPow10", 48) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:9"));;
	};
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _1e76d061a_divisibleByPow5(static_cast<jule::U64>(static_cast<jule::U64>(_4945_mant)), static_cast<jule::I64>((-(_749_q)))))) {
		_7913_exact=true;
		_8129_d0=true;
	};
	jule::U64 _949_extra = static_cast<jule::U64>((-(_8118_dexp2)));;
	jule::U32 _959_extraMask = static_cast<jule::U32>(((1LL << _949_extra) - 1LL));;
	jule::U32 _9713_dfrac = 0LLU;;
	({
		jule::U32 ___jule_assign_arg = static_cast<jule::U32>((_8114_di >> _949_extra));
		jule::U32 _1___jule_assign_arg = static_cast<jule::U32>((_8114_di & _959_extraMask));
		_8114_di = ___jule_assign_arg;
		_9713_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _9913_roundUp = false;;
	if (_7913_exact) {
		_9913_roundUp=(((_9713_dfrac > (1LLU << (_949_extra - 1LLU))) || ((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LLU << (_949_extra - 1LLU))) && _8129_d0) && ((_8114_di & 1LLU) == 1LLU)));
	} else {
		_9913_roundUp=((_9713_dfrac >> (_949_extra - 1LLU)) == 1LLU);
	};
	if ((_9713_dfrac != 0LLU)) {
		_8129_d0=false;
	};
	_1e76cceca_formatDecimal(_4924_d, static_cast<jule::U64>(static_cast<jule::U64>(_8114_di)), (!(_8129_d0)), _9913_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_749_q;
}



inline void _1e76cc6e4_ryuFtoaFixed64(_1e76c0055_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I64 _12156_exp, jule::I64 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		jule::panic(jule::Str("ryuFtoaFixed64 called with prec > 18", 36) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:9"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I64 _13113_e2 = _12156_exp;;
	jule::I64 _1329_b = _1e7681eb2_Len64(_12145_mant);;
	if ((_1329_b < 55LL)) {
		_12145_mant=static_cast<jule::U64>((_12145_mant << static_cast<jule::U64>((55LL - _1329_b))));
		_13113_e2+=(static_cast<jule::I64>(_1329_b) - 55LL);
	};
	jule::I64 _1469_q = (((-(_1e76cd6e5_mulByLog2Log10(static_cast<jule::I64>((_13113_e2 + 54LL))))) + _12166_prec) - 1LL);;
	jule::Bool _15113_exact = ((_1469_q <= 55LL) && (_1469_q >= 0LL));;
	jule::U64 _15314_di = 0;;
	jule::I64 _15318_dexp2 = 0;;
	jule::Bool _15329_d0 = false;;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76d02c9_mult128bitPow10(_12145_mant, _13113_e2, _1469_q);
		_15314_di = __jule_assign_result.__jule_result_arg0;
		_15318_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15329_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15318_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:9"));;
	};
	if ((((_1469_q < 0LL) && (_1469_q >= -22LL)) && _1e76d061a_divisibleByPow5(_12145_mant, static_cast<jule::I64>((-(_1469_q)))))) {
		_15113_exact=true;
		_15329_d0=true;
	};
	jule::U64 _1669_extra = static_cast<jule::U64>((-(_15318_dexp2)));;
	jule::U64 _1679_extraMask = static_cast<jule::U64>(((1LL << _1669_extra) - 1LL));;
	jule::U64 _16913_dfrac = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_15314_di >> _1669_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_15314_di & _1679_extraMask));
		_15314_di = ___jule_assign_arg;
		_16913_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _17113_roundUp = false;;
	if (_15113_exact) {
		_17113_roundUp=(((_16913_dfrac > (1LLU << (_1669_extra - 1LLU))) || ((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && (!(_15329_d0)))) || (((_16913_dfrac == (1LLU << (_1669_extra - 1LLU))) && _15329_d0) && ((_15314_di & 1LLU) == 1LLU)));
	} else {
		_17113_roundUp=((_16913_dfrac >> (_1669_extra - 1LLU)) == 1LLU);
	};
	if ((_16913_dfrac != 0LLU)) {
		_15329_d0=false;
	};
	_1e76cceca_formatDecimal(_12124_d, _15314_di, (!(_15329_d0)), _17113_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1469_q;
}



inline void _1e76cceca_formatDecimal(_1e76c0055_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I64 _20088_prec) {
	jule::U64 _2019_max = _1e76cca24_u64pow10[_20088_prec];;
	jule::I64 _20213_trimmed = 0LL;;
	while ((_20044_m >= _2019_max)) {
		{
			jule::U64 _20414_a = 0;;
			jule::U64 _20417_b = 0;;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_20414_a = ___jule_assign_arg;
				_20417_b = _1___jule_assign_arg;
			});
			_20044_m=_20414_a;
			(_20213_trimmed)++;
			if ((_20417_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_20417_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_20417_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1d23a3c2c:;
	}
	_iter_end_1d23a3c2c:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2019_max)) {
		_20044_m/=10LLU;
		(_20213_trimmed)++;
	};
	jule::U64 _22913_n = static_cast<jule::U64>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>(_20088_prec));
	jule::U64 _23113_v = _20044_m;;
	while ((_23113_v >= 100LLU)) {
		{
			jule::U64 _23317_v1 = 0LLU;;
			jule::U64 _23417_v2 = 0LLU;;
			if (((_23113_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) / 100LLU)));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>((static_cast<jule::U32>(_23113_v) % 100LL)));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_23113_v / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_23113_v % 100LL));
					_23317_v1 = ___jule_assign_arg;
					_23417_v2 = _1___jule_assign_arg;
				});
			};
			_22913_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 1LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 1LLU))]);
			(*(_20023_d))._field_d[static_cast<jule::I64>((_22913_n + 0LLU))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23417_v2) + 0LLU))]);
			_23113_v=_23317_v1;
		}
	_iter_next_1d23a73c3:;
	}
	_iter_end_1d23a73c3:;;
	if ((_23113_v > 0LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _23113_v) + 1LLU))]);
	};
	if ((_23113_v >= 10LLU)) {
		(_22913_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I64>(_22913_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((2LL * _23113_v))]);
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_20213_trimmed)++;
		}
	_iter_next_1d23ac917:;
	}
	_iter_end_1d23ac917:;;
	(*(_20023_d))._field_dp=static_cast<jule::I64>(((*(_20023_d))._field_nd + _20213_trimmed));
}



inline void _1e76cd44d_ryuFtoaShortest(_1e76c0055_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I64 _26157_exp, _1e76be42d_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I64 ___jule_assign_arg = 0LL;
			jule::I64 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1e767b60a_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant>>=static_cast<jule::U64>((-(_26157_exp)));
		_1e76ce41b_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _27310_ml = 0;;
	jule::U64 _27314_mc = 0;;
	jule::U64 _27318_mu = 0;;
	jule::I64 _27326_e2 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1e76cdd77_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_27310_ml = __jule_assign_result.__jule_result_arg0;
		_27314_mc = __jule_assign_result.__jule_result_arg1;
		_27318_mu = __jule_assign_result.__jule_result_arg2;
		_27326_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27326_e2 == 0LL)) {
		_1e76ce41b_ryuDigits(_26125_d, _27310_ml, _27314_mc, _27318_mu, true, false);
		return;;
	};
	jule::I64 _2799_q = (_1e76cd6e5_mulByLog2Log10(static_cast<jule::I64>((-(_27326_e2)))) + 1LL);;
	jule::U64 _28313_dl = 0LLU;;
	jule::U64 _28413_dc = 0LLU;;
	jule::U64 _28513_du = 0LLU;;
	jule::Bool _28613_dl0 = false;;
	jule::Bool _28713_dc0 = false;;
	jule::Bool _28813_du0 = false;;
	if (((*(_26168_flt)) == _1e76be7e6_f32info)) {
		jule::U32 _29017_dl32 = 0LLU;;
		jule::U32 _29117_dc32 = 0LLU;;
		jule::U32 _29217_du32 = 0LLU;;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76cedde_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27310_ml)), _27326_e2, _2799_q);
			_29017_dl32 = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76cedde_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27314_mc)), _27326_e2, _2799_q);
			_29117_dc32 = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76cedde_mult64bitPow10(static_cast<jule::U32>(static_cast<jule::U32>(_27318_mu)), _27326_e2, _2799_q);
			_29217_du32 = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29017_dl32));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29117_dc32));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(static_cast<jule::U64>(_29217_du32));
			_28313_dl = ___jule_assign_arg;
			_28413_dc = _1___jule_assign_arg;
			_28513_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76d02c9_mult128bitPow10(_27310_ml, _27326_e2, _2799_q);
			_28313_dl = __jule_assign_result.__jule_result_arg0;
			_28613_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76d02c9_mult128bitPow10(_27314_mc, _27326_e2, _2799_q);
			_28413_dc = __jule_assign_result.__jule_result_arg0;
			_28713_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1e76d02c9_mult128bitPow10(_27318_mu, _27326_e2, _2799_q);
			_28513_du = __jule_assign_result.__jule_result_arg0;
			_27326_e2 = __jule_assign_result.__jule_result_arg1;
			_28813_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27326_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bitPow10", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:9"));;
	};
	if ((_2799_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_28613_dl0 = ___jule_assign_arg;
			_28713_dc0 = _1___jule_assign_arg;
			_28813_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2799_q < 0LL) && (_2799_q >= -24LL))) {
		if (_1e76d061a_divisibleByPow5(_27310_ml, static_cast<jule::I64>((-(_2799_q))))) {
			_28613_dl0=true;
		};
		if (_1e76d061a_divisibleByPow5(_27314_mc, static_cast<jule::I64>((-(_2799_q))))) {
			_28713_dc0=true;
		};
		if (_1e76d061a_divisibleByPow5(_27318_mu, static_cast<jule::I64>((-(_2799_q))))) {
			_28813_du0=true;
		};
	};
	jule::U64 _3259_extra = static_cast<jule::U64>((-(_27326_e2)));;
	jule::U64 _3269_extraMask = static_cast<jule::U64>(((1LL << _3259_extra) - 1LL));;
	jule::U64 _32813_fracl = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28313_dl >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28313_dl & _3269_extraMask));
		_28313_dl = ___jule_assign_arg;
		_32813_fracl = _1___jule_assign_arg;
	});
	jule::U64 _33013_fracc = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28413_dc >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28413_dc & _3269_extraMask));
		_28413_dc = ___jule_assign_arg;
		_33013_fracc = _1___jule_assign_arg;
	});
	jule::U64 _33213_fracu = 0LLU;;
	({
		jule::U64 ___jule_assign_arg = static_cast<jule::U64>((_28513_du >> _3259_extra));
		jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((_28513_du & _3269_extraMask));
		_28513_du = ___jule_assign_arg;
		_33213_fracu = _1___jule_assign_arg;
	});
	jule::Bool _33813_uok = ((!(_28813_du0)) || (_33213_fracu > 0LLU));;
	if ((_28813_du0 && (_33213_fracu == 0LLU))) {
		_33813_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_33813_uok))) {
		(_28513_du)--;
	};
	jule::Bool _34713_cup = false;;
	if (_28713_dc0) {
		_34713_cup=((_33013_fracc > (1LLU << (_3259_extra - 1LLU))) || ((_33013_fracc == (1LLU << (_3259_extra - 1LLU))) && ((_28413_dc & 1LLU) == 1LLU)));
	} else {
		_34713_cup=((_33013_fracc >> (_3259_extra - 1LLU)) == 1LLU);
	};
	jule::Bool _3619_lok = ((_28613_dl0 && (_32813_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3619_lok))) {
		(_28313_dl)++;
	};
	jule::Bool _3669_c0 = (_28713_dc0 && (_33013_fracc == 0LLU));;
	_1e76ce41b_ryuDigits(_26125_d, _28313_dl, _28413_dc, _28513_du, _3669_c0, _34713_cup);
	(*(_26125_d))._field_dp-=_2799_q;
}



inline jule::I64 _1e76cd6e5_mulByLog2Log10(jule::I64 _37719_x) {
	return static_cast<jule::I64>(((_37719_x * 78913LL) >> 18LL));;
}



inline jule::I64 _1e76cd98c_mulByLog10Log2(jule::I64 _38719_x) {
	return static_cast<jule::I64>(((_38719_x * 108853LL) >> 15LL));;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1e76cdd77_computeBounds(jule::U64 _39518_mant, jule::I64 _39529_exp, _1e76be42d_floatInfo* _3966_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != (1LLU << (*(_3966_flt))._field_mantbits)) || (_39529_exp == (((*(_3966_flt))._field_bias + 1LL) - static_cast<jule::I64>((*(_3966_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((2LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((2LL * _39518_mant) + 1LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 1LL));
	} else {
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) - 1LLU));
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((4LL * _39518_mant));
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(((4LL * _39518_mant) + 2LLU));
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=static_cast<jule::I64>((_39529_exp - 2LL));
	};
	return __jule_func_result;;
}



inline void _1e76ce41b_ryuDigits(_1e76c0055_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _41014_lhi = 0;;
	jule::U32 _41019_llo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e76d08b2_divmod1e9(_40936_lower);
		_41014_lhi = __jule_assign_result.__jule_result_arg0;
		_41019_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41110_chi = 0;;
	jule::U32 _41115_clo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e76d08b2_divmod1e9(_40948_central);
		_41110_chi = __jule_assign_result.__jule_result_arg0;
		_41115_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _41210_uhi = 0;;
	jule::U32 _41215_ulo = 0;;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1e76d08b2_divmod1e9(_40962_upper);
		_41210_uhi = __jule_assign_result.__jule_result_arg0;
		_41215_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_41210_uhi == 0LLU)) {
		_1e76cea04_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_41014_lhi < _41210_uhi)) {
		if ((_41019_llo != 0LLU)) {
			(_41014_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_41115_clo == 0LLU));
		_40992_cup=((_41115_clo > 500000000LL) || ((_41115_clo == 500000000LL) && _40992_cup));
		_1e76cea04_ryuDigits32(_40919_d, _41014_lhi, _41110_chi, _41210_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U64 _42817_n = static_cast<jule::U64>(9LLU);;
		jule::U32 _42917_v = _41110_chi;;
		while ((_42917_v > 0LLU)) {
			{
				jule::U32 _43118_v1 = 0;;
				jule::U32 _43122_v2 = 0;;
				({
					jule::U32 ___jule_assign_arg = (_42917_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_42917_v % 10LL);
					_43118_v1 = ___jule_assign_arg;
					_43122_v2 = _1___jule_assign_arg;
				});
				_42917_v=_43118_v1;
				(_42817_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I64>(_42817_n)]=static_cast<jule::U8>(static_cast<jule::U8>((_43122_v2 + '0')));
			}
		_iter_next_1d23ca5c2:;
		}
		_iter_end_1d23ca5c2:;;
		(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(static_cast<jule::I64>(_42817_n));
		(*(_40919_d))._field_nd=static_cast<jule::I64>(static_cast<jule::I64>((9LL - _42817_n)));
		_1e76cea04_ryuDigits32(_40919_d, _41019_llo, _41115_clo, _41215_ulo, _40978_c0, _40992_cup, static_cast<jule::I64>(((*(_40919_d))._field_nd + 8LL)));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1d23caa9a:;
	}
	_iter_end_1d23caa9a:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			(*(_40919_d))._field_d=(*(_40919_d))._field_d.slice(1LL);
		}
	_iter_next_1d23ca32a:;
	}
	_iter_end_1d23ca32a:;;
}



inline void _1e76cea04_ryuDigits32(_1e76c0055_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4559_upper, jule::Bool _45525_c0, jule::Bool _45539_cup, jule::I64 _45554_endindex) {
	if ((_4559_upper == 0LLU)) {
		(*(_45421_d))._field_dp=static_cast<jule::I64>((_45554_endindex + 1LL));
		return;;
	};
	jule::I64 _46013_trimmed = 0LL;;
	jule::I64 _46313_cNextDigit = 0LL;;
	while ((_4559_upper > 0LLU)) {
		{
			jule::U32 _47013_l = ((_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _47118_c = 0;;
			jule::U32 _47125_cdigit = 0;;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_47118_c = ___jule_assign_arg;
				_47125_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _47213_u = (_4559_upper / 10LLU);;
			if ((_47013_l > _47213_u)) {
				goto _iter_end_1d23d0880;
			};
			if (((_47013_l == (_47118_c + 1LLU)) && (_47118_c < _47213_u))) {
				(_47118_c)++;
				_47125_cdigit=0LLU;
				_45539_cup=false;
			};
			(_46013_trimmed)++;
			_45525_c0=(_45525_c0 && (_46313_cNextDigit == 0LL));
			_46313_cNextDigit=static_cast<jule::I64>(static_cast<jule::I64>(_47125_cdigit));
			({
				jule::U32 ___jule_assign_arg = _47013_l;
				jule::U32 _1___jule_assign_arg = _47118_c;
				jule::U32 _2___jule_assign_arg = _47213_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4559_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1d23d0880:;
	}
	_iter_end_1d23d0880:;;
	if ((_46013_trimmed > 0LL)) {
		_45539_cup=(((_46313_cNextDigit > 5LL) || ((_46313_cNextDigit == 5LL) && (!(_45525_c0)))) || (((_46313_cNextDigit == 5LL) && _45525_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4559_upper) && _45539_cup)) {
		(_45458_central)++;
	};
	_45554_endindex-=_46013_trimmed;
	jule::U32 _50913_v = _45458_central;;
	jule::I64 _51013_n = _45554_endindex;;
	while ((_51013_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _51214_v1 = 0;;
			jule::U32 _51218_v2 = 0;;
			({
				jule::U32 ___jule_assign_arg = (_50913_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_50913_v % 100LL);
				_51214_v1 = ___jule_assign_arg;
				_51218_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 1LLU))]);
			(*(_45421_d))._field_d[(_51013_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(((2LL * _51218_v2) + 0LLU))]);
			_51013_n-=2LL;
			_50913_v=_51214_v1;
		}
	_iter_next_1d23d6b1c:;
	}
	_iter_end_1d23d6b1c:;;
	if ((_51013_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_51013_n]=static_cast<jule::U8>(static_cast<jule::U8>((_50913_v + '0')));
	};
	(*(_45421_d))._field_nd=static_cast<jule::I64>((_45554_endindex + 1LL));
	(*(_45421_d))._field_dp=static_cast<jule::I64>(((*(_45421_d))._field_nd + _46013_trimmed));
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1e76cedde_mult64bitPow10(jule::U32 _53419_m, jule::I64 _53431_e2, jule::I64 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>((_53419_m << 6LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_53431_e2 - 6LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		jule::panic(jule::Str("mult64bitPow10: power of 10 is out of range", 43) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:9"));;
	};
	jule::U64 _54313_pow = _1e76c6ec4_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_54313_pow+=1LLU;
	};
	jule::U64 _54810_hi = 0;;
	jule::U64 _54814_lo = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(static_cast<jule::U64>(static_cast<jule::U64>(_53419_m)), _54313_pow);
		_54810_hi = __jule_assign_result.__jule_result_arg0;
		_54814_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1e76cd98c_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>(((_54810_hi << 7LLU) | (_54814_lo >> 57LLU))));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((_54814_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1e76d02c9_mult128bitPow10(jule::U64 _56220_m, jule::I64 _56232_e2, jule::I64 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>((_56220_m << 8LLU));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I64>((_56232_e2 - 8LL));
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		jule::panic(jule::Str("mult128bitPow10: power of 10 is out of range", 44) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:9"));;
	};
	jule::Array<jule::U64,2> _57113_pow = _1e76c6ec4_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_57113_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1e76cd98c_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _57910_l1 = 0;;
	jule::U64 _57914_l0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(_56220_m, _57113_pow[0LL]);
		_57910_l1 = __jule_assign_result.__jule_result_arg0;
		_57914_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58014_h1 = 0;;
	jule::U64 _58018_h0 = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7684305_Mul64(_56220_m, _57113_pow[1LL]);
		_58014_h1 = __jule_assign_result.__jule_result_arg0;
		_58018_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _58110_mid = 0;;
	jule::U64 _58115_carry = 0;;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1e7682b72_Add64(_57910_l1, _58018_h0, 0LLU);
		_58110_mid = __jule_assign_result.__jule_result_arg0;
		_58115_carry = __jule_assign_result.__jule_result_arg1;
	});
	_58014_h1+=_58115_carry;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_58014_h1 << 9LLU) | (_58110_mid >> 55LLU)));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((_58110_mid << 9LLU) == 0LLU) && (_57914_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1e76d061a_divisibleByPow5(jule::U64 _58624_m, jule::I64 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I64 _59013_i = 0LL;;
	for (; (_59013_i < _58632_k); (_59013_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m/=5LLU;
		}
	_iter_next_1b6a18269:;
	}
	_iter_end_1b6a18269:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1e76d08b2_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x / 1000000000LL)));
		__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>(static_cast<jule::U32>((_60214_x % 1000000000LL)));
		return __jule_func_result;;
	};
}



inline void _1e76d362e_trim(_1e76d1e46_decimal* _45314_a) {
	while ((((*(_45314_a))._field_nd > 0LL) && ((*(_45314_a))._field_d[((*(_45314_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_45314_a))._field_nd)--;
		}
	_iter_next_1b6a1b778:;
	}
	_iter_end_1b6a1b778:;;
	if (((*(_45314_a))._field_nd == 0LL)) {
		(*(_45314_a))._field_dp=0LL;
	};
}



inline void _1e76d38d7_rightShift(_1e76d1e46_decimal* _46320_a, jule::U64 _46332_k) {
	jule::I64 _46413_r = 0LL;;
	jule::I64 _46513_w = 0LL;;
	jule::U64 _46813_n = 0LLU;;
	for (; ((_46813_n >> _46332_k) == 0LLU); (_46413_r)++) {
		{
			if ((_46413_r >= (*(_46320_a))._field_nd)) {
				if ((_46813_n == 0LLU)) {
					(*(_46320_a))._field_nd=0LL;
					return;;
				};
				while (((_46813_n >> _46332_k) == 0LLU)) {
					{
						_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
						(_46413_r)++;
					}
				_iter_next_1b6a1eeda:;
				}
				_iter_end_1b6a1eeda:;;
				goto _iter_end_1b6a1d4b1;
			};
			jule::U64 _48213_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _48213_c) - '0'));
		}
	_iter_next_1b6a1d4b1:;
	}
	_iter_end_1b6a1d4b1:;;
	(*(_46320_a))._field_dp-=(_46413_r - 1LL);
	jule::U64 _4879_mask = static_cast<jule::U64>((static_cast<jule::U64>((1LL << _46332_k)) - 1LLU));;
	for (; (_46413_r < (*(_46320_a))._field_nd); (_46413_r)++) {
		{
			jule::U64 _49113_c = static_cast<jule::U64>((*(_46320_a))._field_d[_46413_r]);;
			jule::U64 _49213_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_49213_dig + '0')));
			(_46513_w)++;
			_46813_n=static_cast<jule::U64>((((_46813_n * 10LLU) + _49113_c) - '0'));
		}
	_iter_next_1b6a21d22:;
	}
	_iter_end_1b6a21d22:;;
	while ((_46813_n > 0LLU)) {
		{
			jule::U64 _50113_dig = (_46813_n >> _46332_k);;
			_46813_n&=_4879_mask;
			if ((_46513_w < 800LL)) {
				(*(_46320_a))._field_d[_46513_w]=static_cast<jule::U8>(static_cast<jule::U8>((_50113_dig + '0')));
				(_46513_w)++;
			} else if ((_50113_dig > 0LLU)) {
				(*(_46320_a))._field_trunc=true;
			};
			_46813_n=static_cast<jule::U64>((_46813_n * 10LLU));
		}
	_iter_next_1b6a2373b:;
	}
	_iter_end_1b6a2373b:;;
	(*(_46320_a))._field_nd=_46513_w;
	_1e76d362e_trim(_46320_a);
}



inline jule::Bool _1e76d3d49_prefixIsLessThan(jule::Array<jule::U8,800> _51721_b, jule::I64 _51735_end, jule::Str _51745_s) {
	jule::I64 _51813_i = 0LL;;
	for (; (_51813_i < _51745_s.len()); (_51813_i)++) {
		{
			if ((_51813_i >= _51735_end)) {
				return true;;
			};
			if ((_51721_b[_51813_i] != _51745_s[_51813_i])) {
				return (_51721_b[_51813_i] < _51745_s[_51813_i]);;
			};
		}
	_iter_next_1b6a2619a:;
	}
	_iter_end_1b6a2619a:;;
	return false;;
}



inline void _1e76d40be_leftShift(_1e76d1e46_decimal* _53119_a, jule::U64 _53131_k) {
	jule::I64 _53213_delta = _1e76d18a2_leftCheats[static_cast<jule::I64>(_53131_k)]._field_delta;;
	if (_1e76d3d49_prefixIsLessThan((*(_53119_a))._field_d, (*(_53119_a))._field_nd, _1e76d18a2_leftCheats[static_cast<jule::I64>(_53131_k)]._field_cutoff)) {
		(_53213_delta)--;
	};
	jule::I64 _53713_r = (*(_53119_a))._field_nd;;
	jule::I64 _53813_w = ((*(_53119_a))._field_nd + _53213_delta);;
	jule::U64 _54113_n = 0LLU;;
	(_53713_r)--;
	for (; (_53713_r >= 0LL); (_53713_r)--) {
		{
			_54113_n+=((static_cast<jule::U64>((*(_53119_a))._field_d[_53713_r]) - '0') << _53131_k);
			jule::U64 _54513_quo = (_54113_n / 10LLU);;
			jule::U64 _54613_rem = (_54113_n - (10LLU * _54513_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_54613_rem + '0')));
			} else if ((_54613_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_54513_quo;
		}
	_iter_next_1b6a28b92:;
	}
	_iter_end_1b6a28b92:;;
	while ((_54113_n > 0LLU)) {
		{
			jule::U64 _55813_quo = (_54113_n / 10LLU);;
			jule::U64 _55913_rem = (_54113_n - (10LLU * _55813_quo));;
			(_53813_w)--;
			if ((_53813_w < 800LL)) {
				(*(_53119_a))._field_d[_53813_w]=static_cast<jule::U8>(static_cast<jule::U8>((_55913_rem + '0')));
			} else if ((_55913_rem != 0LLU)) {
				(*(_53119_a))._field_trunc=true;
			};
			_54113_n=_55813_quo;
		}
	_iter_next_1b6a29445:;
	}
	_iter_end_1b6a29445:;;
	(*(_53119_a))._field_nd+=_53213_delta;
	if (((*(_53119_a))._field_nd >= 800LL)) {
		(*(_53119_a))._field_nd=800LL;
	};
	(*(_53119_a))._field_dp+=_53213_delta;
	_1e76d362e_trim(_53119_a);
}



inline jule::Bool _1e76d4410_shouldRoundUp(_1e76d1e46_decimal* _57819_a, jule::I64 _57831_nd) {
	if (((_57831_nd < 0LL) || (_57831_nd >= (*(_57819_a))._field_nd))) {
		return false;;
	};
	if ((((*(_57819_a))._field_d[_57831_nd] == '5') && ((_57831_nd + 1LL) == (*(_57819_a))._field_nd))) {
		if ((*(_57819_a))._field_trunc) {
			return true;;
		};
		return ((_57831_nd > 0LL) && ((((*(_57819_a))._field_d[(_57831_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_57819_a))._field_d[_57831_nd] >= '5');;
}



inline jule::Str _1e76d5a2c_FmtUint(jule::U64 _6012_i, jule::I64 _6020_base) {
	if (((true && (_6012_i < 100LLU)) && (_6020_base == 10LL))) {
		return _1e76d6478_small(static_cast<jule::I64>(static_cast<jule::I64>(_6012_i)));;
	};
	jule::Str _6413_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e76d6c4d_fmtBits(nullptr, _6012_i, _6020_base, false, false);
		_6413_s = __jule_assign_result.__jule_result_arg1;
	});
	return _6413_s;;
}



inline jule::Str _1e76d5db2_FmtInt(jule::I64 _7111_i, jule::I64 _7119_base) {
	if ((((true && (0LL <= _7111_i)) && (_7111_i < 100LL)) && (_7119_base == 10LL))) {
		return _1e76d6478_small(static_cast<jule::I64>(static_cast<jule::I64>(_7111_i)));;
	};
	jule::Str _7513_s;;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1e76d6c4d_fmtBits(nullptr, static_cast<jule::U64>(static_cast<jule::U64>(_7111_i)), _7119_base, (_7111_i < 0LL), false);
		_7513_s = __jule_assign_result.__jule_result_arg1;
	});
	return _7513_s;;
}



inline jule::Str _1e76d6159_Itoa(jule::I64 _809_i) {
	return _1e76d5db2_FmtInt(static_cast<jule::I64>(static_cast<jule::I64>(_809_i)), 10LL);;
}



inline jule::Str _1e76d6478_small(jule::I64 _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(_8510_i, (_8510_i + 1LL));;
	};
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice((_8510_i << 1LLU), ((_8510_i << 1LLU) + 2LL));;
}



inline jule::Bool _1e76d6720_isPowerOfTwo(jule::I64 _9217_x) {
	return ((_9217_x & (_9217_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1e76d6c4d_fmtBits(jule::Slice<jule::U8> _10116_dst, jule::U64 _10133_u, jule::I64 _10141_base, jule::Bool _10152_neg, jule::Bool _10163_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10141_base < 2LL) || (_10141_base > 36LL))) {
		jule::panic(jule::Str("std::conv: illegal base", 23) + jule::Str("\nlocation: std/conv/itoa.jule:103:9"));;
	};
	jule::Slice<jule::U8> _10713_a = jule::Slice<jule::U8>::alloc(65LL, 65LL, 0);;
	jule::I64 _10813_i = _10713_a.len();;
	if (_10152_neg) {
		_10133_u=static_cast<jule::U64>((-(_10133_u)));
	};
	if ((_10141_base == 10LL)) {
		;
		jule::U64 _14917_us = static_cast<jule::U64>(_10133_u);;
		while ((_14917_us >= 100LLU)) {
			{
				jule::U64 _15117_is = ((_14917_us % 100LL) << 1LLU);;
				_14917_us/=100LLU;
				_10813_i-=2LL;
				_10713_a[(_10813_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 1LLU))]);
				_10713_a[(_10813_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15117_is + 0LLU))]);
			}
		_iter_next_1b6a634d4:;
		}
		_iter_end_1b6a634d4:;;
		jule::U64 _15913_is = (_14917_us << 1LLU);;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>((_15913_is + 1LLU))]);
		if ((_14917_us >= 10LLU)) {
			(_10813_i)--;
			_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::I64>(_15913_is)]);
		};
	} else if (_1e76d6720_isPowerOfTwo(_10141_base)) {
		jule::U64 _17413_shift = (static_cast<jule::U64>(_1e767a96c_TrailingZeros(static_cast<jule::U64>(static_cast<jule::U64>(_10141_base)))) & 7LLU);;
		jule::U64 _17513_b = static_cast<jule::U64>(_10141_base);;
		jule::U64 _17613_m = (static_cast<jule::U64>(_10141_base) - 1LLU);;
		while ((_10133_u >= _17513_b)) {
			{
				(_10813_i)--;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>((static_cast<jule::U64>(_10133_u) & _17613_m))]);
				_10133_u>>=_17413_shift;
			}
		_iter_next_1b6a6ac5b:;
		}
		_iter_end_1b6a6ac5b:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	} else {
		jule::U64 _18713_b = static_cast<jule::U64>(_10141_base);;
		while ((_10133_u >= _18713_b)) {
			{
				(_10813_i)--;
				jule::U64 _19317_q = jule::div(_10133_u,_18713_b);;
				_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>((_10133_u - (_19317_q * _18713_b))))]);
				_10133_u=_19317_q;
			}
		_iter_next_1b6a6d4de:;
		}
		_iter_end_1b6a6d4de:;;
		(_10813_i)--;
		_10713_a[_10813_i]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::I64>(static_cast<jule::U64>(_10133_u))]);
	};
	if (_10152_neg) {
		(_10813_i)--;
		_10713_a[_10813_i]='-';
	};
	if (_10163_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10116_dst,_10713_a.slice(_10813_i));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::Str>(_10713_a.slice(_10813_i));
	return __jule_func_result;;
}



inline jule::Str _1e76d815b_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b6a839bb:;
			{
				return _1e76d76aa_SysInt;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b6a83a32:;
			{
				return _1e76d7974_SysUint;;
			}
		}
		else {
			_case_begin_1b6a8535d:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1b6a82b52:;
	};
}



inline jule::I64 _1e76d8403_BitsizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == jule::Str("i8", 2) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b6a8688c:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3) || _match_expr == jule::Str("u16", 3)) {
			_case_begin_1b6a86903:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3) || _match_expr == jule::Str("u32", 3) || _match_expr == jule::Str("f32", 3)) {
			_case_begin_1b6a8642a:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3) || _match_expr == jule::Str("u64", 3) || _match_expr == jule::Str("f64", 3)) {
			_case_begin_1b6a86491:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4) || _match_expr == jule::Str("int", 3) || _match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b6a86507:;
			{
				return _1e76d73e1_BitSize;;
			}
		}
		else {
			_case_begin_1b6a85e52:;
			{
				return -1LL;;
			}
		}
		_match_end_1b6a86381:;
	};
}



inline jule::Str _1e76d8722_IntFromBits(jule::I64 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b6a87d88:;
			{
				return jule::Str("i8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b6a8876d:;
			{
				return jule::Str("i16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b6a887d4:;
			{
				return jule::Str("i32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b6a8884a:;
			{
				return jule::Str("i64", 3);;
			}
		}
		else {
			_case_begin_1b6a8830b:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b6a8667d:;
	};
}



inline jule::Str _1e76d89b9_UintFromBits(jule::I64 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1b6a89263:;
			{
				return jule::Str("u8", 2);;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1b6a8995b:;
			{
				return jule::Str("u16", 3);;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1b6a899c2:;
			{
				return jule::Str("u32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b6a89a38:;
			{
				return jule::Str("u64", 3);;
			}
		}
		else {
			_case_begin_1b6a88d67:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b6a88d12:;
	};
}



inline jule::Str _1e76d8c61_FloatFromBits(jule::I64 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1b6a8a451:;
			{
				return jule::Str("f32", 3);;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1b6a8ab49:;
			{
				return jule::Str("f64", 3);;
			}
		}
		else {
			_case_begin_1b6a8a055:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b6a8a000:;
	};
}



inline jule::Bool _1e76d9811_CheckBitFloat(jule::Str _15118_val, jule::I64 _15128_bit) {
	({
		auto except = _1e76cba34_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I64 _1e76d9aa8_BitsizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1b6a90a83:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b6a8ddd3:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b6a8ee5b:;
	};
}



inline jule::I64 _1e76d9d50_BitsizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1b6a91798:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1b6a91644:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1b6a916bb:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b6a90c2b:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b6a9116b:;
	};
}



inline jule::I64 _1e76da0e7_BitsizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1b6a93228:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1b6a930d5:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1b6a9314b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1b6a923e2:;
			{
				return 64LLU;;
			}
		}
		_match_end_1b6a92c0b:;
	};
}



inline void _1e76da25c_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _22bb21b26_Arch };
			
			if (_match_expr == jule::Str("arm64", 5) || _match_expr == jule::Str("amd64", 5)) {
				_case_begin_1b6a93ea4:;
				{
					_1e76d73e1_BitSize=64LLU;
					_1e76d76aa_SysInt=jule::Str("i64", 3);
					_1e76d7974_SysUint=jule::Str("u64", 3);
				}
			}
			else if (_match_expr == jule::Str("i386", 4)) {
				_case_begin_1b6a9401a:;
				{
					_1e76d73e1_BitSize=32LLU;
					_1e76d76aa_SysInt=jule::Str("i32", 3);
					_1e76d7974_SysUint=jule::Str("u32", 3);
				}
			}
			_match_end_1b6a93a31:;
		};
	};
}



inline void _1e76da3c2_init(void) {
	_1e76da25c_UpdateTarget();
}



inline jule::I64 _1e76de20b_MinI(jule::Str _6113_k) {
	_6113_k=_1e76d815b_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b6a9348c:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b6a961e8:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b6a9625e:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b6a962c5:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1b6a93536:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6a928dc:;
	};
}



inline jule::I64 _1e76de4e7_MaxI(jule::Str _7913_k) {
	_7913_k=_1e76d815b_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b6a9646d:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b6a9778d:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b6a97804:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b6a9786a:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1b6a974c4:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6a971d8:;
	};
}



inline jule::U64 _1e76de78e_MaxU(jule::Str _9713_k) {
	_9713_k=_1e76d815b_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b6a979e1:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b6a98d00:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b6a98d66:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b6a98dcc:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1b6a98a36:;
			{
				return 0LLU;;
			}
		}
		_match_end_1b6a9874a:;
	};
}



inline jule::F64 _1e76de99d_Min(jule::Str _11512_k) {
	_11512_k=_1e76d815b_RealKindOf(_11512_k);
	jule::I64 _1179_i = _1e76de20b_MinI(_11512_k);;
	if ((_1179_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1179_i));;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b6a9b2b9:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b6a9ad46:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1b6a9a7c4:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6a9ae12:;
	};
}



inline jule::F64 _1e76dec45_Max(jule::Str _13312_k) {
	_13312_k=_1e76d815b_RealKindOf(_13312_k);
	jule::I64 _1359_i = _1e76de4e7_MaxI(_13312_k);;
	if ((_1359_i != 0LL)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1359_i));;
	};
	jule::U64 _1399_u = _1e76de78e_MaxU(_13312_k);;
	if ((_1399_u != 0LLU)) {
		return static_cast<jule::F64>(static_cast<jule::F64>(_1399_u));;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b6a9d5a7:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b6a9d134:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1b6a9cab2:;
			{
				return 0LL;;
			}
		}
		_match_end_1b6a9d200:;
	};
}



inline jule::Bool _1e76e0196_IsI8Compatible(jule::Str _623_k) {
	return _623_k.equal("i8", 2);;
}



inline jule::Bool _1e76e0482_IsI16Compatible(jule::Str _1124_k) {
	return (_1124_k.equal("i8", 2) || _1124_k.equal("i16", 3));;
}



inline jule::Bool _1e76e0729_IsI32Compatible(jule::Str _1724_k) {
	return (((_1724_k.equal("i8", 2) || _1724_k.equal("i16", 3)) || _1724_k.equal("i32", 3)) || _1724_k.equal("u8", 2));;
}



inline jule::Bool _1e76e0a48_IsI64Compatible(jule::Str _2524_k) {
	return (((_2524_k.equal("i8", 2) || _2524_k.equal("i16", 3)) || _2524_k.equal("i32", 3)) || _2524_k.equal("i64", 3));;
}



inline jule::Bool _1e76e0ce0_IsU8Compatible(jule::Str _3323_k) {
	return _3323_k.equal("u8", 2);;
}



inline jule::Bool _1e76e1087_IsU16Compatible(jule::Str _3824_k) {
	return (_3824_k.equal("u8", 2) || _3824_k.equal("u16", 3));;
}



inline jule::Bool _1e76e132e_IsU32Compatible(jule::Str _4324_k) {
	return ((_4324_k.equal("u8", 2) || _4324_k.equal("u16", 3)) || _4324_k.equal("u32", 3));;
}



inline jule::Bool _1e76e16a3_IsU64Compatible(jule::Str _5024_k) {
	return (((_5024_k.equal("u8", 2) || _5024_k.equal("u16", 3)) || _5024_k.equal("u32", 3)) || _5024_k.equal("u64", 3));;
}



inline jule::Bool _1e76e194a_IsF32Compatible(jule::Str _5824_k) {
	return _5824_k.equal("f32", 3);;
}



inline jule::Bool _1e76e1be2_IsF64Compatible(jule::Str _6324_k) {
	return _6324_k.equal("f64", 3);;
}



inline jule::Bool _1e76e2033_TypesAreCompatible(jule::Str _7027_k1, jule::Str _7036_k2) {
	{
		auto &_match_expr{ _7027_k1 };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b6aa416d:;
			{
				return true;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b6aa34d0:;
			{
				return _7036_k2.equal("int", 3);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b6aa3ba6:;
			{
				return _7036_k2.equal("uintptr", 7);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b6aa3c1c:;
			{
				return _7036_k2.equal("uint", 4);;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b6aa3c83:;
			{
				return _1e76e0196_IsI8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b6aa3ce9:;
			{
				return _1e76e0482_IsI16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b6aa41d4:;
			{
				return _1e76e0729_IsI32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b6aa424a:;
			{
				return _1e76e0a48_IsI64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u8", 2)) {
			_case_begin_1b6aa42b1:;
			{
				return _1e76e0ce0_IsU8Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b6aa4327:;
			{
				return _1e76e1087_IsU16Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b6aa439e:;
			{
				return _1e76e132e_IsU32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b6aa4426:;
			{
				return _1e76e16a3_IsU64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b6aa449d:;
			{
				return _1e76e194a_IsF32Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b6aa4525:;
			{
				return _1e76e1be2_IsF64Compatible(_7036_k2);;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b6aa459c:;
			{
				return _7036_k2.equal("bool", 4);;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b6aa4624:;
			{
				return _7036_k2.equal("str", 3);;
			}
		}
		else {
			_case_begin_1b6aa3a41:;
			{
				return false;;
			}
		}
		_match_end_1b6a9d981:;
	};
}



inline jule::Bool _1e76e22ca_IsI16Greater(jule::Str _11021_k) {
	return _11021_k.equal("i8", 2);;
}



inline jule::Bool _1e76e2572_IsI32Greater(jule::Str _11521_k) {
	return (_11521_k.equal("i8", 2) || _11521_k.equal("i16", 3));;
}



inline jule::Bool _1e76e2819_IsI64Greater(jule::Str _12021_k) {
	return ((_12021_k.equal("i8", 2) || _12021_k.equal("i16", 3)) || _12021_k.equal("i32", 3));;
}



inline jule::Bool _1e76e2ab1_IsU16Greater(jule::Str _12721_k) {
	return _12721_k.equal("u8", 2);;
}



inline jule::Bool _1e76e3012_IsU32Greater(jule::Str _13221_k) {
	return (_13221_k.equal("u8", 2) || _13221_k.equal("u16", 3));;
}



inline jule::Bool _1e76e32a9_IsU64Greater(jule::Str _13821_k) {
	return ((_13821_k.equal("u8", 2) || _13821_k.equal("u16", 3)) || _13821_k.equal("u32", 3));;
}



inline jule::Bool _1e76e3551_IsF32Greater(jule::Str _14517_k) {
	return (!_14517_k.equal("f64", 3));;
}



inline jule::Bool _1e76e37e8_IsF64Greater(jule::Str _15017_k) {
	return true;;
}



inline jule::Bool _1e76e3b39_IsGreater(jule::Str _15518_k1, jule::Str _15527_k2) {
	{
		auto &_match_expr{ _15518_k1 };
		
		if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b6aabcd0:;
			{
				return _1e76e4b6d_IsSigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b6aa5ceb:;
			{
				return _1e76e4e59_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b6aabbc0:;
			{
				return _1e76e4e59_IsUnsigInt(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b6aab7c4:;
			{
				return _1e76e22ca_IsI16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i32", 3)) {
			_case_begin_1b6aab83a:;
			{
				return _1e76e2572_IsI32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b6aab8a1:;
			{
				return _1e76e2819_IsI64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b6aab928:;
			{
				return _1e76e2ab1_IsU16Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b6aabd46:;
			{
				return _1e76e3012_IsU32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b6aabdbd:;
			{
				return _1e76e32a9_IsU64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b6aabe45:;
			{
				return _1e76e3551_IsF32Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b6aabebc:;
			{
				return _1e76e37e8_IsF64Greater(_15527_k2);;
			}
		}
		else if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b6aac044:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b6aab6a3:;
			{
				return false;;
			}
		}
		_match_end_1b6aab472:;
	};
}



inline jule::Bool _1e76e4b6d_IsSigInt(jule::Str _2717_k) {
	return ((((_2717_k.equal("i8", 2) || _2717_k.equal("i16", 3)) || _2717_k.equal("i32", 3)) || _2717_k.equal("i64", 3)) || _2717_k.equal("int", 3));;
}



inline jule::Bool _1e76e4e59_IsUnsigInt(jule::Str _3619_k) {
	return (((((_3619_k.equal("u8", 2) || _3619_k.equal("u16", 3)) || _3619_k.equal("u32", 3)) || _3619_k.equal("u64", 3)) || _3619_k.equal("uint", 4)) || _3619_k.equal("uintptr", 7));;
}



inline jule::Bool _1e76e5201_IsInt(jule::Str _4610_k) {
	return (_1e76e4b6d_IsSigInt(_4610_k) || _1e76e4e59_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1e76e5520_IsFloat(jule::Str _5112_k) {
	return (_5112_k.equal("f32", 3) || _5112_k.equal("f64", 3));;
}



inline jule::Bool _1e76e57b7_IsNum(jule::Str _5610_k) {
	return (_1e76e5201_IsInt(_5610_k) || _1e76e5520_IsFloat(_5610_k));;
}



inline jule::Bool _1e76e5a5e_IsSigNum(jule::Str _6113_k) {
	return (_1e76e4b6d_IsSigInt(_6113_k) || _1e76e5520_IsFloat(_6113_k));;
}



inline void _1e76ee4e6_lshiftUnsig(_1e76e5cc3_Const* _59021_c, _1e76e5cc3_Const* _59032_x) {
	jule::U64 _5919_l = _1e76e8545_AsU64(_59021_c);;
	jule::U64 _5929_r = _1e76e8545_AsU64(_59032_x);;
	_1e76e8ca4_SetU64(_59021_c, static_cast<jule::U64>((_5919_l << _5929_r)));
}



inline void _1e76ee7e3_rshiftUnsig(_1e76e5cc3_Const* _59621_c, _1e76e5cc3_Const* _59632_x) {
	jule::U64 _5979_l = _1e76e8545_AsU64(_59621_c);;
	jule::U64 _5989_r = _1e76e8545_AsU64(_59632_x);;
	_1e76e8ca4_SetU64(_59621_c, static_cast<jule::U64>((_5979_l >> _5989_r)));
}



inline jule::Bool _1d03c833b_IsAscii(jule::I32 _1012_r) {
	;
	return (_1012_r <= 127LL);;
}



inline jule::I32 _1d03e0001_ToRune(jule::Slice<jule::U8> _1811_bytes) {
	if ((_1811_bytes.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2313_r = 0LL;;
	if (((_1811_bytes[0LL] == '\\') && (_1811_bytes.len() > 1LL))) {
		jule::I64 _2517_i = 0LL;;
		_2313_r=static_cast<jule::I32>(_1d03e0b6c_runeFromEsqSeq(_1811_bytes, &(_2517_i)));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune(_1811_bytes);
			_2313_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _2313_r;;
}



inline jule::Str _1d03e0298_ToRawStr(jule::Slice<jule::U8> _3713_bytes) {
	return static_cast<jule::Str>(_3713_bytes);;
}



inline jule::Str _1d03e05b7_ToStr(jule::Slice<jule::U8> _4210_bytes) {
	if ((_4210_bytes.len() == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _4713_s = jule::Slice<jule::U8>::alloc(0LL, _4210_bytes.len(), 0);;
	jule::I64 _4813_i = 0LL;;
	while ((_4813_i < _4210_bytes.len())) {
		{
			jule::U8 _5013_b = _4210_bytes[_4813_i];;
			if ((_5013_b == '\\')) {
				_4713_s=jule::append(_4713_s,_1d03e0ead_strEsqSeq(_4210_bytes, &(_4813_i)));
			} else {
				jule::I32 _5418_r = 0;;
				jule::I64 _5421_size = 0;;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune(_4210_bytes.slice(_4813_i));
					_5418_r = __jule_assign_result.__jule_result_arg0;
					_5421_size = __jule_assign_result.__jule_result_arg1;
				});
				_4813_i+=_5421_size;
				_4713_s=_22b964ae0_AppendRune(_4713_s, _5418_r);
			};
		}
	_iter_next_1b6b63914:;
	}
	_iter_end_1b6b63914:;;
	return static_cast<jule::Str>(_4713_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1d03e085e_tryBtoaCommonEsq(jule::Slice<jule::U8> _6221_bytes) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_6221_bytes.len() < 2LL) || (_6221_bytes[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _6221_bytes[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1b6b6c9c8:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b6b6ca3e:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b6b6caa5:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1b6b6cb1b:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1b6b6cb93:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1b6b6cc1a:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1b6b6cc92:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1b6b6cd19:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1b6b6cd91:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1b6b6ce18:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1b6b6c81e:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1d03e0b6c_runeFromEsqSeq(jule::Slice<jule::U8> _9219_bytes, jule::I64* _9239_i) {
	jule::U8 _9310_b = 0;;
	jule::Bool _9313_ok = false;;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1d03e085e_tryBtoaCommonEsq(_9219_bytes.slice((*(_9239_i))));
		_9310_b = __jule_assign_result.__jule_result_arg0;
		_9313_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_9239_i)))++;
	if (_9313_ok) {
		((*(_9239_i)))++;
		return static_cast<jule::I32>(static_cast<jule::I32>(_9310_b));;
	};
	{
		auto &_match_expr{ _9219_bytes[(*(_9239_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1b6b72390:;
			{
				;
				jule::I32 _10313_r = static_cast<jule::I32>(({
					auto except = _1e76c50d2_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 5LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:103:22"));
					(except.result);
				}));;
				(*(_9239_i))+=5LL;
				return _10313_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1b6b72b21:;
			{
				;
				jule::I32 _10813_r = static_cast<jule::I32>(({
					auto except = _1e76c50d2_ParseUint(static_cast<jule::Str>(_9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 9LL))), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:108:22"));
					(except.result);
				}));;
				(*(_9239_i))+=9LL;
				return _10813_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1b6b72516:;
			{
				;
				jule::Slice<jule::U8> _11313_seq = _9219_bytes.slice(((*(_9239_i)) + 1LL), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e76c50d2_ParseUint(static_cast<jule::Str>(_11313_seq), 16LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:115:18"));
					(except.result);
				})));;
			}
		}
		else {
			_case_begin_1b6b712d4:;
			{
				;
				jule::Slice<jule::U8> _11813_seq = _9219_bytes.slice((*(_9239_i)), ((*(_9239_i)) + 3LL));;
				(*(_9239_i))+=3LL;
				return static_cast<jule::I32>(static_cast<jule::I32>(({
					auto except = _1e76c50d2_ParseUint(static_cast<jule::Str>(_11813_seq.slice(1LL)), 8LL, 64LL);
					if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:120:18"));
					(except.result);
				})));;
			}
		}
		_match_end_1b6b7126d:;
	};
}



inline jule::Slice<jule::U8> _1d03e0ead_strEsqSeq(jule::Slice<jule::U8> _12414_bytes, jule::I64* _12434_i) {
	jule::I32 _1259_r = _1d03e0b6c_runeFromEsqSeq(_12414_bytes, _12434_i);;
	if ((_1259_r <= 255LL)) {
		return jule::Slice<jule::U8>::make({static_cast<jule::U8>(static_cast<jule::U8>(_1259_r))});;
	};
	return static_cast<jule::Slice<jule::U8>>(jule::Str::from_rune(_1259_r));;
}



inline jule::I64 _1d064cb87_findFormatPrefix(jule::Slice<jule::U8>* _1022_bytes, jule::I64* _1038_start) {
	jule::I64 _1113_i = (*(_1038_start));;
	while ((_1113_i < (*(_1022_bytes)).len())) {
		{
			jule::I32 _1314_r = 0;;
			jule::I64 _1317_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_1022_bytes)).slice(_1113_i));
				_1314_r = __jule_assign_result.__jule_result_arg0;
				_1317_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1314_r == '{')) {
				return _1113_i;;
			};
			_1113_i+=_1317_size;
		}
	_iter_next_1b6ba31c3:;
	}
	_iter_end_1b6ba31c3:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1d064d01c_getFormatRange(jule::I64* _2724_i, jule::Slice<jule::U8>* _2737_bytes) {
	jule::I64 _289_start = (*(_2724_i));;
	jule::I64 _2913_braces = 0LL;;
	while (((*(_2724_i)) < (*(_2737_bytes)).len())) {
		{
			jule::I32 _3114_r = 0;;
			jule::I64 _3117_size = 0;;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b96377b_DecodeRune((*(_2737_bytes)).slice((*(_2724_i))));
				_3114_r = __jule_assign_result.__jule_result_arg0;
				_3117_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2724_i))+=_3117_size;
			{
				auto &_match_expr{ _3114_r };
				
				if (_match_expr == '{') {
					_case_begin_1b6ba5a88:;
					{
						(_2913_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1b6ba5aee:;
					{
						(_2913_braces)--;
						if ((_2913_braces == 0LL)) {
							return (*(_2737_bytes)).slice(_289_start, (*(_2724_i)));;
						};
					}
				}
				_match_end_1b6ba577a:;
			};
		}
	_iter_next_1b6ba4d62:;
	}
	_iter_end_1b6ba4d62:;;
	return nullptr;;
}



inline void _1d064d2c5_FmtByDefault(jule::Str* _4722_buf, jule::Any* _4733_arg) {
	if (((*(_4733_arg)) == nullptr)) {
		((*(_4722_buf))).append("<nil>", 5);
		return;;
	};
	{
		auto &_match_expr{ (*(_4733_arg)) };
		
		if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1b6ba72e8:;
			{
				(*(_4722_buf))+=_1e76c0594_FmtFloat(static_cast<jule::F64>(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F32>(&__jule_any_type131))), 'g', -1LL, 32LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1b6ba74b3:;
			{
				(*(_4722_buf))+=_1e76c0594_FmtFloat(static_cast<jule::F64>((*(_4733_arg)).cast<jule::F64>(&__jule_any_type6)), 'g', -1LL, 64LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1b6ba76d3:;
			{
				(*(_4722_buf))+=_1e76d5db2_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I8>(&__jule_any_type132)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1b6ba5d63:;
			{
				(*(_4722_buf))+=_1e76d5db2_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I16>(&__jule_any_type133)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1b6ba7095:;
			{
				(*(_4722_buf))+=_1e76d5db2_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1b6ba710b:;
			{
				(*(_4722_buf))+=_1e76d5db2_FmtInt(static_cast<jule::I64>((*(_4733_arg)).cast<jule::I64>(&__jule_any_type2)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1b6ba7183:;
			{
				(*(_4722_buf))+=_1e76d5a2c_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U8>(&__jule_any_type130)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type134) {
			_case_begin_1b6ba720a:;
			{
				(*(_4722_buf))+=_1e76d5a2c_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U16>(&__jule_any_type134)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1b6ba775a:;
			{
				(*(_4722_buf))+=_1e76d5a2c_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U32>(&__jule_any_type135)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1b6ba77d2:;
			{
				(*(_4722_buf))+=_1e76d5a2c_FmtUint(static_cast<jule::U64>((*(_4733_arg)).cast<jule::U64>(&__jule_any_type3)), 10LL);
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1b6ba7859:;
			{
				(*(_4722_buf))+=(*(_4733_arg)).cast<jule::Str>(&__jule_any_type5);
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1b6ba78d1:;
			{
				if ((*(_4733_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					((*(_4722_buf))).append("true", 4);
				} else {
					((*(_4722_buf))).append("false", 5);
				};
			}
		}
		else {
			_case_begin_1b6ba68e1:;
			{
				(*(_4722_buf))+=jule::to_str((*(_4733_arg)));
			}
		}
		_match_end_1b6ba702e:;
	};
}



inline void _1d064d69e_applyFmtByDefault(jule::Str* _8627_buf, jule::I64* _8642_j, jule::Slice<jule::Any> _8650_args) {
	jule::Any _879_arg = _8650_args[(*(_8642_j))];;
	((*(_8642_j)))++;
	_1d064d2c5_FmtByDefault(_8627_buf, &(_879_arg));
}



inline void _1d064da9a_applyFmt(jule::Slice<jule::U8>* _9418_fmt, jule::Str* _9436_buf, jule::I64* _9451_j, jule::Slice<jule::Any> _9459_args) {
	if (((*(_9418_fmt)).len() == 2LL)) {
		_1d064d69e_applyFmtByDefault(_9436_buf, _9451_j, _9459_args);
		return;;
	};
	if (((((((*(_9418_fmt)).len() == 4LL) && ((*(_9418_fmt))[0LL] == '{')) && ((*(_9418_fmt))[1LL] == '{')) && ((*(_9418_fmt))[2LL] == '}')) && ((*(_9418_fmt))[3LL] == '}'))) {
		((*(_9436_buf))).append("{}", 2);
		return;;
	};
	_22a8b7439_PushToStrBuffer(_9436_buf, (*(_9418_fmt)));
}



inline jule::Str _1d064dda8_Format(jule::Str* _11312_fmt, jule::Slice<jule::Any> _11322_args) {
	if ((_11322_args.len() == 0LL)) {
		return (*(_11312_fmt));;
	};
	jule::Slice<jule::U8> _11713_fmtBytes = _22a8b6c85_Stobs(_11312_fmt);;
	jule::Str _11813_buf = jule::Str::alloc(0LL, (*(_11312_fmt)).len());;
	jule::I64 _11913_j = 0LL;;
	jule::I64 _12013_last = 0LL;;
	jule::I64 _12113_i = _1d064cb87_findFormatPrefix(&(_11713_fmtBytes), &(_12013_last));;
	for (; (_12113_i != -1LL); _12113_i=static_cast<jule::I64>(_1d064cb87_findFormatPrefix(&(_11713_fmtBytes), &(_12113_i)))) {
		{
			_22a8b7439_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last, _12113_i));
			jule::Slice<jule::U8> _12417_format = _1d064d01c_getFormatRange(&(_12113_i), &(_11713_fmtBytes));;
			if ((_12417_format == nullptr)) {
				goto _iter_next_1b6bb2996;
			};
			_1d064da9a_applyFmt(&(_12417_format), &(_11813_buf), &(_11913_j), _11322_args);
			if ((_11913_j >= _11322_args.len())) {
				_22a8b7439_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12113_i));
				_12013_last=static_cast<jule::I64>(_11713_fmtBytes.len());
				goto _iter_end_1b6bb2996;
			};
			_12013_last=_12113_i;
		}
	_iter_next_1b6bb2996:;
	}
	_iter_end_1b6bb2996:;;
	if ((_12013_last < _11713_fmtBytes.len())) {
		_22a8b7439_PushToStrBuffer(&(_11813_buf), _11713_fmtBytes.slice(_12013_last));
	};
	return _11813_buf;;
}



inline jule::Str _1d0650cab_Format(jule::Str _3011_fmt, jule::Slice<jule::Any> _3021_args) {
	return _1d064dda8_Format(&(_3011_fmt), _3021_args);;
}



inline jule::Bool _1d0629081_parameterUsesGenerics(jule::Ptr<_1d06260a0_ParamIns>* _38131_p, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>* _38146_generics) {
	if (_1d06230ad_IsSelf((*(_38131_p)).get()._field_Decl.ptr())) {
		return false;;
	};
	return _1d21eb206_kindUsesGenerics(&((*(_38131_p)).get()._field_Kind), _38146_generics);;
}



inline jule::Ptr<_1d21d8be9_TypeSymbol> _1d062b55b_buildType(jule::Ptr<_1d05de563_TypeDecl> _9418_t) {
	if ((_9418_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Decl=_9418_t, });;
}



inline jule::Ptr<_1d0409d1d_Value> _1d062b847_buildExpr(jule::Ptr<_1d05e36dd_Expr> _10318_expr) {
	if ((_10318_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Expr=_10318_expr, });;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d062bade_buildTypeAlias(jule::Ptr<_1d06054d0_TypeAliasDecl> _11223_decl) {
	return jule::new_ptr<_1d21d10ed_TypeAlias>(_1d21d10ed_TypeAlias{._field_Scope=_11223_decl.get()._field_Scope, ._field_Public=_11223_decl.get()._field_Public, ._field_Binded=_11223_decl.get()._field_Binded, ._field_Token=_11223_decl.get()._field_Token, ._field_Ident=_11223_decl.get()._field_Ident, ._field_Kind=_1d062b55b_buildType(_11223_decl.get()._field_Kind), });;
}



inline jule::Ptr<_1d060b2e9_Field> _1d2143538_buildField(jule::Ptr<_1d06089ab_FieldDecl> _12319_decl) {
	return jule::new_ptr<_1d060b2e9_Field>(_1d060b2e9_Field{._field_Token=_12319_decl.get()._field_Token, ._field_Public=_12319_decl.get()._field_Public, ._field_Mutable=_12319_decl.get()._field_Mutable, ._field_Ident=_12319_decl.get()._field_Ident, ._field_Kind=_1d062b55b_buildType(_12319_decl.get()._field_Kind), ._field_Default=_12319_decl.get()._field_Default});;
}



inline jule::Slice<jule::Ptr<_1d060b2e9_Field>> _1d21437d0_buildFields(jule::Slice<jule::Ptr<_1d06089ab_FieldDecl>>* _13421_decls) {
	jule::Slice<jule::Ptr<_1d060b2e9_Field>> _13513_fields = jule::Slice<jule::Ptr<_1d060b2e9_Field>>::alloc(0LL, (*(_13421_decls)).len());;
	{
		auto expr = _13421_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5463e:;
		if (it != expr_end) {
			jule::Ptr<_1d06089ab_FieldDecl> _13617_decl = *it;
			{
				_13513_fields = jule::alloc_for_append(_13513_fields,1);_13513_fields.__push(_1d2143538_buildField(_13617_decl));;
			}
			_iter_next_1b6e5463e:;
			++it;
			goto _iter_begin_1b6e5463e;
		}
		_iter_end_1b6e5463e:;
	};
	return _13513_fields;;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d2143a77_buildStruct(jule::Ptr<_1d0609308_StructDecl> _14220_decl) {
	return jule::new_ptr<_1d060ddbd_Struct>(_1d060ddbd_Struct{._field_Token=_14220_decl.get()._field_Token, ._field_Ident=_14220_decl.get()._field_Ident, ._field_Fields=_1d21437d0_buildFields(&(_14220_decl.get()._field_Fields)), ._field_Public=_14220_decl.get()._field_Public, ._field_Binded=_14220_decl.get()._field_Binded, ._field_Directives=_14220_decl.get()._field_Directives, ._field_Generics=_14220_decl.get()._field_Generics, });;
}



inline jule::Ptr<_1d0622981_Param> _1d2143d1e_buildParam(jule::Ptr<_1d05ee870_ParamDecl> _15419_decl) {
	return jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Token=_15419_decl.get()._field_Token, ._field_Mutable=_15419_decl.get()._field_Mutable, ._field_Variadic=_15419_decl.get()._field_Variadic, ._field_Reference=_15419_decl.get()._field_Reference, ._field_Kind=_1d062b55b_buildType(_15419_decl.get()._field_Kind), ._field_Ident=_15419_decl.get()._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1d0622981_Param>> _1d21441d7_buildParams(jule::Slice<jule::Ptr<_1d05ee870_ParamDecl>>* _16521_decls) {
	jule::Slice<jule::Ptr<_1d0622981_Param>> _16613_params = jule::Slice<jule::Ptr<_1d0622981_Param>>::alloc(0LL, (*(_16521_decls)).len());;
	{
		auto expr = _16521_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e57532:;
		if (it != expr_end) {
			jule::Ptr<_1d05ee870_ParamDecl> _16717_decl = *it;
			{
				_16613_params = jule::alloc_for_append(_16613_params,1);_16613_params.__push(_1d2143d1e_buildParam(_16717_decl));;
			}
			_iter_next_1b6e57532:;
			++it;
			goto _iter_begin_1b6e57532;
		}
		_iter_end_1b6e57532:;
	};
	return _16613_params;;
}



inline jule::Ptr<_1d0622277_RetType> _1d214447e_buildRetType(jule::Ptr<_1d05e22d0_RetTypeDecl> _17321_decl) {
	if (((_17321_decl.get()._field_Idents == nullptr) && (_17321_decl.get()._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1d0622277_RetType>(_1d0622277_RetType{._field_Kind=_1d062b55b_buildType(_17321_decl.get()._field_Kind), ._field_Idents=_17321_decl.get()._field_Idents});;
}



inline jule::Ptr<_1d06242bd_Fn> _1d2144726_buildFn(jule::Ptr<_1d0600b90_FnDecl> _18316_decl) {
	return jule::new_ptr<_1d06242bd_Fn>(_1d06242bd_Fn{._field_Token=_18316_decl.get()._field_Token, ._field_Global=_18316_decl.get()._field_Global, ._field_Unsafety=_18316_decl.get()._field_Unsafety, ._field_Public=_18316_decl.get()._field_Public, ._field_Binded=_18316_decl.get()._field_Binded, ._field_Statically=_18316_decl.get()._field_Statically, ._field_Exceptional=_18316_decl.get()._field_Exceptional, ._field_Ident=_18316_decl.get()._field_Ident, ._field_Directives=_18316_decl.get()._field_Directives, ._field_Scope=_18316_decl.get()._field_Scope, ._field_Generics=_18316_decl.get()._field_Generics, ._field_Result=_1d214447e_buildRetType(_18316_decl.get()._field_Result), ._field_Params=_1d21441d7_buildParams(&(_18316_decl.get()._field_Params)), });;
}



inline jule::Slice<jule::Ptr<_1d06242bd_Fn>> _1d21449bd_buildMethods(jule::Slice<jule::Ptr<_1d0600b90_FnDecl>>* _20122_decls) {
	jule::Slice<jule::Ptr<_1d06242bd_Fn>> _20213_methods = jule::Slice<jule::Ptr<_1d06242bd_Fn>>::alloc(0LL, (*(_20122_decls)).len());;
	{
		auto expr = _20122_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5ac0b:;
		if (it != expr_end) {
			jule::Ptr<_1d0600b90_FnDecl> _20317_decl = *it;
			{
				_20213_methods = jule::alloc_for_append(_20213_methods,1);_20213_methods.__push(_1d2144726_buildFn(_20317_decl));;
			}
			_iter_next_1b6e5ac0b:;
			++it;
			goto _iter_begin_1b6e5ac0b;
		}
		_iter_end_1b6e5ac0b:;
	};
	return _20213_methods;;
}



inline jule::Slice<jule::Ptr<_1d21d8be9_TypeSymbol>> _1d2144c65_buildTraitInherits(jule::Slice<jule::Ptr<_1d05de563_TypeDecl>>* _20928_inherits) {
	jule::Slice<jule::Ptr<_1d21d8be9_TypeSymbol>> _21013_symbols = jule::Slice<jule::Ptr<_1d21d8be9_TypeSymbol>>::alloc(0LL, (*(_20928_inherits)).len());;
	{
		auto expr = _20928_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5b536:;
		if (it != expr_end) {
			jule::Ptr<_1d05de563_TypeDecl> _21117_it = *it;
			{
				_21013_symbols = jule::alloc_for_append(_21013_symbols,1);_21013_symbols.__push(_1d062b55b_buildType(_21117_it));;
			}
			_iter_next_1b6e5b536:;
			++it;
			goto _iter_begin_1b6e5b536;
		}
		_iter_end_1b6e5b536:;
	};
	return _21013_symbols;;
}



inline jule::Ptr<_1d21494c8_Trait> _1d214500c_buildTrait(jule::Ptr<_1d06099ce_TraitDecl> _21719_decl) {
	return jule::new_ptr<_1d21494c8_Trait>(_1d21494c8_Trait{._field_Token=_21719_decl.get()._field_Token, ._field_Ident=_21719_decl.get()._field_Ident, ._field_Public=_21719_decl.get()._field_Public, ._field_Inherits=_1d2144c65_buildTraitInherits(&(_21719_decl.get()._field_Inherits)), ._field_Methods=_1d21449bd_buildMethods(&(_21719_decl.get()._field_Methods)), });;
}



inline jule::Ptr<_1d214b266_EnumItem> _1d21452a4_buildEnumItem(jule::Ptr<_1d0606d3e_EnumItemDecl> _22722_decl) {
	return jule::new_ptr<_1d214b266_EnumItem>(_1d214b266_EnumItem{._field_Token=_22722_decl.get()._field_Token, ._field_Ident=_22722_decl.get()._field_Ident, ._field_Value=_1d062b847_buildExpr(_22722_decl.get()._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1d214b266_EnumItem>> _1d214554b_buildEnumItems(jule::Slice<jule::Ptr<_1d0606d3e_EnumItemDecl>>* _23524_decls) {
	jule::Slice<jule::Ptr<_1d214b266_EnumItem>> _23613_items = jule::Slice<jule::Ptr<_1d214b266_EnumItem>>::alloc(0LL, (*(_23524_decls)).len());;
	{
		auto expr = _23524_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e5e182:;
		if (it != expr_end) {
			jule::Ptr<_1d0606d3e_EnumItemDecl> _23717_decl = *it;
			{
				_23613_items = jule::alloc_for_append(_23613_items,1);_23613_items.__push(_1d21452a4_buildEnumItem(_23717_decl));;
			}
			_iter_next_1b6e5e182:;
			++it;
			goto _iter_begin_1b6e5e182;
		}
		_iter_end_1b6e5e182:;
	};
	return _23613_items;;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d2145a24_buildEnum(jule::Ptr<_1d0607867_EnumDecl> _24318_decl) {
	return jule::new_ptr<_1d214bc5b_Enum>(_1d214bc5b_Enum{._field_Token=_24318_decl.get()._field_Token, ._field_Public=_24318_decl.get()._field_Public, ._field_Ident=_24318_decl.get()._field_Ident, ._field_Kind=_1d062b55b_buildType(_24318_decl.get()._field_Kind), ._field_Items=_1d214554b_buildEnumItems(&(_24318_decl.get()._field_Items))});;
}



inline jule::Ptr<_1d214cc90_TypeEnumItem> _1d2145cbb_buildTypeEnumItem(jule::Ptr<_1d060813c_TypeEnumItemDecl> _25326_decl) {
	return jule::new_ptr<_1d214cc90_TypeEnumItem>(_1d214cc90_TypeEnumItem{._field_Token=_25326_decl.get()._field_Token, ._field_Ident=_25326_decl.get()._field_Ident, ._field_Kind=_1d062b55b_buildType(_25326_decl.get()._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>> _1d2146063_buildTypeEnumItems(jule::Slice<jule::Ptr<_1d060813c_TypeEnumItemDecl>>* _26128_decls) {
	jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>> _26213_items = jule::Slice<jule::Ptr<_1d214cc90_TypeEnumItem>>::alloc(0LL, (*(_26128_decls)).len());;
	{
		auto expr = _26128_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e61a03:;
		if (it != expr_end) {
			jule::Ptr<_1d060813c_TypeEnumItemDecl> _26317_decl = *it;
			{
				_26213_items = jule::alloc_for_append(_26213_items,1);_26213_items.__push(_1d2145cbb_buildTypeEnumItem(_26317_decl));;
			}
			_iter_next_1b6e61a03:;
			++it;
			goto _iter_begin_1b6e61a03;
		}
		_iter_end_1b6e61a03:;
	};
	return _26213_items;;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d214630a_buildTypeEnum(jule::Ptr<_1d0608747_TypeEnumDecl> _26922_decl) {
	return jule::new_ptr<_1d214d356_TypeEnum>(_1d214d356_TypeEnum{._field_Token=_26922_decl.get()._field_Token, ._field_Public=_26922_decl.get()._field_Public, ._field_Ident=_26922_decl.get()._field_Ident, ._field_Items=_1d2146063_buildTypeEnumItems(&(_26922_decl.get()._field_Items))});;
}



inline jule::Ptr<_1d21bb65a_Var> _1d21465a2_buildVar(jule::Ptr<_1d0601b6e_VarDecl> _27817_decl) {
	return jule::new_ptr<_1d21bb65a_Var>(_1d21bb65a_Var{._field_Token=_27817_decl.get()._field_Token, ._field_Ident=_27817_decl.get()._field_Ident, ._field_Binded=_27817_decl.get()._field_Binded, ._field_Constant=_27817_decl.get()._field_Constant, ._field_Mutable=_27817_decl.get()._field_Mutable, ._field_Public=_27817_decl.get()._field_Public, ._field_Statically=_27817_decl.get()._field_Statically, ._field_Reference=_27817_decl.get()._field_Reference, ._field_Kind=_1d062b55b_buildType(_27817_decl.get()._field_Kind), ._field_Value=_1d062b847_buildExpr(_27817_decl.get()._field_Expr), ._field_Refers=static__1d062a12b_new(), ._field_Directives=_27817_decl.get()._field_Directives, });;
}



inline jule::Slice<jule::Ptr<_1d21bb65a_Var>> _1d2146849_buildVars(jule::Slice<jule::Ptr<_1d0601b6e_VarDecl>> _29518_decls) {
	jule::Slice<jule::Ptr<_1d21bb65a_Var>> _29613_vars = jule::Slice<jule::Ptr<_1d21bb65a_Var>>::alloc(0LL, _29518_decls.len());;
	{
		auto expr = &(_29518_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b6e64a8e:;
		if (it != expr_end) {
			jule::Ptr<_1d0601b6e_VarDecl> _29717_decl = *it;
			{
				_29613_vars = jule::alloc_for_append(_29613_vars,1);_29613_vars.__push(_1d21465a2_buildVar(_29717_decl));;
			}
			_iter_next_1b6e64a8e:;
			++it;
			goto _iter_begin_1b6e64a8e;
		}
		_iter_end_1b6e64a8e:;
	};
	return _29613_vars;;
}



inline jule::Ptr<_1d216e5a8_Impl> _1d2146ae1_buildImpl(jule::Ptr<_1d060a0d9_Impl> _30318_decl) {
	return jule::new_ptr<_1d216e5a8_Impl>(_1d216e5a8_Impl{._field_Base=_30318_decl.get()._field_Base, ._field_Dest=_30318_decl.get()._field_Dest, ._field_Methods=_1d21449bd_buildMethods(&(_30318_decl.get()._field_Methods)), ._field_Statics=_1d2146849_buildVars(_30318_decl.get()._field_Statics)});;
}



inline jule::Ptr<_1d0408c95_Data> _1d216a351_buildAsComptimeMethodData(jule::Ptr<_1d0626e6e_FnIns>* _139635_f) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_139635_f)), 1)}), });;
}



inline jule::Ptr<_1d219307c_ImportInfo> _1d216a53d_findComptimePackage(jule::Ptr<_1d219b34e_Sema>* _140429_s) {
	return _1d219b7c2_SelectPackage((*(_140429_s)).ptr(), jule::Fn<jule::Bool(jule::Ptr<_1d219307c_ImportInfo>)>([=](jule::Ptr<_1d219307c_ImportInfo> _140528_pkg) mutable -> jule::Bool {
		return _140528_pkg.get()._field_LinkPath.equal("std::comptime", 13);;
	}));;
}



inline jule::Ptr<_1d0408c95_Data> _1d216a8a1_buildComptimeTypeInfoData(jule::Ptr<_1d219b34e_Sema>* _141035_s, jule::Ptr<_1d21d1d46_TypeKind>* _141050_t) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_1d219acbb_pushComptimeTypeInfo((*(_141035_s)).get()._field_meta.ptr(), _141050_t), 15)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d216abd1_buildComptimeValue(jule::Ptr<_1d0408c95_Data>* _141828_d) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2164c52_comptimeValue>(_1d2164c52_comptimeValue{._field_data=(*(_141828_d))}), 16)}), });;
}



inline jule::Bool _1d216d9d6_matchConstraint(jule::Str* _14221_c, jule::Ptr<_1d21d1d46_TypeKind>* _14234_g) {
	{
		auto &_match_expr{ (*(_14221_c)) };
		
		if (_match_expr == jule::Str("signed", 6)) {
			_case_begin_1b70c34e4:;
			{
				jule::Ptr<_1d21d9568_Prim> _14513_prim = _1d21d4563_Prim((*(_14234_g)).ptr());;
				if ((_14513_prim == nullptr)) {
					return false;;
				};
				return _1e76e5a5e_IsSigNum(_14513_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("unsigned", 8)) {
			_case_begin_1b70c9264:;
			{
				jule::Ptr<_1d21d9568_Prim> _15113_prim = _1d21d4563_Prim((*(_14234_g)).ptr());;
				if ((_15113_prim == nullptr)) {
					return false;;
				};
				return _1e76e4e59_IsUnsigInt(_15113_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("float", 5)) {
			_case_begin_1b70c92ca:;
			{
				jule::Ptr<_1d21d9568_Prim> _15713_prim = _1d21d4563_Prim((*(_14234_g)).ptr());;
				if ((_15713_prim == nullptr)) {
					return false;;
				};
				return _1e76e5520_IsFloat(_15713_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("numeric", 7)) {
			_case_begin_1b70c821e:;
			{
				jule::Ptr<_1d21d9568_Prim> _16313_prim = _1d21d4563_Prim((*(_14234_g)).ptr());;
				if ((_16313_prim == nullptr)) {
					return false;;
				};
				return _1e76e57b7_IsNum(_16313_prim.get()._field_Kind);;
			}
		}
		else if (_match_expr == jule::Str("mutable", 7)) {
			_case_begin_1b70c8285:;
			{
				return _1d21d35d9_Mutable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("immutable", 9)) {
			_case_begin_1b70c82eb:;
			{
				return (!(_1d21d35d9_Mutable((*(_14234_g)).ptr())));;
			}
		}
		else if (_match_expr == jule::Str("comparable", 10)) {
			_case_begin_1b70c8362:;
			{
				return _1d21d3375_Comparable((*(_14234_g)).ptr());;
			}
		}
		else if (_match_expr == jule::Str("ordered", 7)) {
			_case_begin_1b70c942e:;
			{
				return _1d21d384d_Ordered((*(_14234_g)).ptr());;
			}
		}
		else {
			_case_begin_1b70c9066:;
			{
				return false;;
			}
		}
		_match_end_1b70c8906:;
	};
}



inline jule::Bool _1d216dcc2_isBuiltinConstraint(jule::Str* _18125_ident) {
	{
		auto expr = &(_1d216be46_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b70cdd29:;
		if (it != expr_end) {
			jule::Str *_18212_bc = it;
			{
				if (((*(_18125_ident)) == (*(_18212_bc)))) {
					return true;;
				};
			}
			_iter_next_1b70cdd29:;
			++it;
			goto _iter_begin_1b70cdd29;
		}
		_iter_end_1b70cdd29:;
	};
	return false;;
}



inline jule::Ptr<_1d217b241_scopeChecker> _1d2171643_newScopeCheckerBase(jule::Ptr<_1d219b34e_Sema>* _5829_s, jule::Ptr<_1d0626e6e_FnIns> _5843_owner) {
	return jule::new_ptr<_1d217b241_scopeChecker>(_1d217b241_scopeChecker{._field_s=(*(_5829_s)), ._field_owner=_5843_owner, ._field_table=jule::new_ptr<_1d040428a_SymbolTable>(), });;
}



inline jule::Ptr<_1d217b241_scopeChecker> _1d21719c8_newScopeChecker(jule::Ptr<_1d219b34e_Sema>* _6625_s, jule::Ptr<_1d0626e6e_FnIns> _6639_owner) {
	jule::Ptr<_1d217b241_scopeChecker> _6713_base = _1d2171643_newScopeCheckerBase(_6625_s, _6639_owner);;
	_6713_base.get()._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1d2179ea9_scopeLabel>>>(nullptr);
	_6713_base.get()._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1d217a42c_scopeGoto>>>(nullptr);
	return _6713_base;;
}



inline jule::Ptr<_1d2179ea9_scopeLabel> _1d2171d19_findLabelParent(jule::Str _7620_ident, jule::Ptr<_1d217b241_scopeChecker> _7636_scope) {
	jule::Ptr<_1d2179ea9_scopeLabel> _7713_label = _1d217e8e8_findLabelScope(_7636_scope, _7620_ident);;
	while ((_7713_label == nullptr)) {
		{
			if (((_7636_scope.get()._field_parent == nullptr) || (_7636_scope.get()._field_owner != nullptr))) {
				return nullptr;;
			};
			_7636_scope=_7636_scope.get()._field_parent;
			_7713_label=_1d217e8e8_findLabelScope(_7636_scope, _7620_ident);
		}
	_iter_next_1b70e315c:;
	}
	_iter_end_1b70e315c:;;
	return _7713_label;;
}



inline jule::Bool _1d217219e_modelIsGotoScope(jule::Any _9021_Model, jule::Ptr<_1d2174613_Scope>* _9034_sc) {
	{
		auto &_match_expr{ _9021_Model };
		
		if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1b70e4a76:;
			{
				jule::Ptr<_1d0617eb5_FnCallExprModel> _9313_fcem = _9021_Model.cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35);;
				if ((_9313_fcem.get()._field_Except == (*(_9034_sc)))) {
					return true;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b70e4aed:;
			{
				jule::Ptr<_1d0408c95_Data> _9813_d = _9021_Model.cast_ptr<_1d0408c95_Data>(&__jule_any_type24);;
				return _1d217219e_modelIsGotoScope(_9813_d.get()._field_Model, _9034_sc);;
			}
		}
		_match_end_1b70e402b:;
	};
	return false;;
}



inline jule::Bool _1d21724e0_stmtIsGotoScope(jule::Any* _10421_stmt, jule::Ptr<_1d2174613_Scope>* _10434_sc) {
	{
		auto &_match_expr{ (*(_10421_stmt)) };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1b70e6c65:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1d2174613_Scope>(&__jule_any_type22) == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1b70e6ccb:;
			{
				return ((*(_10421_stmt)).cast_ptr<_1d217545a_InfIter>(&__jule_any_type37).get()._field_Scope == (*(_10434_sc)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1b70e6d42:;
			{
				jule::Ptr<_1d21762b3_RangeIter> _11113_it = (*(_10421_stmt)).cast_ptr<_1d21762b3_RangeIter>(&__jule_any_type41);;
				return ((_11113_it.get()._field_Scope == (*(_10434_sc))) || _1d217219e_modelIsGotoScope(_11113_it.get()._field_Expr.get()._field_Model, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1b70e4ee9:;
			{
				jule::Ptr<_1d21758cd_WhileIter> _11413_it = (*(_10421_stmt)).cast_ptr<_1d21758cd_WhileIter>(&__jule_any_type39);;
				return (((_11413_it.get()._field_Scope == (*(_10434_sc))) || _1d217219e_modelIsGotoScope(_11413_it.get()._field_Expr, _10434_sc)) || _1d217219e_modelIsGotoScope(_11413_it.get()._field_Next, _10434_sc));;
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1b70e5060:;
			{
				jule::Ptr<_1d217842a_Match> _11913_m = (*(_10421_stmt)).cast_ptr<_1d217842a_Match>(&__jule_any_type48);;
				{
					auto expr = &(_11913_m.get()._field_Cases);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b70ea263:;
					if (it != expr_end) {
						jule::Ptr<_1d2178e75_Case> *_12016_c = it;
						{
							if (((*(_12016_c)).get()._field_Scope == (*(_10434_sc)))) {
								return true;;
							};
							{
								auto expr = &((*(_12016_c)).get()._field_Exprs);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b70eae78:;
								if (it != expr_end) {
									jule::Ptr<_1d0408c95_Data> *_12420_expr = it;
									{
										if (_1d217219e_modelIsGotoScope((*(_12420_expr)).get()._field_Model, _10434_sc)) {
											return true;;
										};
									}
									_iter_next_1b70eae78:;
									++it;
									goto _iter_begin_1b70eae78;
								}
								_iter_end_1b70eae78:;
							};
						}
						_iter_next_1b70ea263:;
						++it;
						goto _iter_begin_1b70ea263;
					}
					_iter_end_1b70ea263:;
				};
				return ((_11913_m.get()._field_Default != nullptr) && (_11913_m.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1b70e50c6:;
			{
				jule::Ptr<_1d217516e_Conditional> _13213_c = (*(_10421_stmt)).cast_ptr<_1d217516e_Conditional>(&__jule_any_type36);;
				{
					auto expr = &(_13213_c.get()._field_Elifs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b70ec4da:;
					if (it != expr_end) {
						jule::Ptr<_1d2174a0e_If> *_13316_elif = it;
						{
							if ((((*(_13316_elif)).get()._field_Scope == (*(_10434_sc))) || _1d217219e_modelIsGotoScope((*(_13316_elif)).get()._field_Expr, _10434_sc))) {
								return true;;
							};
						}
						_iter_next_1b70ec4da:;
						++it;
						goto _iter_begin_1b70ec4da;
					}
					_iter_end_1b70ec4da:;
				};
				return ((_13213_c.get()._field_Default != nullptr) && (_13213_c.get()._field_Default.get()._field_Scope == (*(_10434_sc))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b70e513c:;
			{
				jule::Ptr<_1d0408c95_Data> _14013_d = (*(_10421_stmt)).cast_ptr<_1d0408c95_Data>(&__jule_any_type24);;
				return _1d217219e_modelIsGotoScope(_14013_d.get()._field_Model, _10434_sc);;
			}
		}
		else {
			_case_begin_1b70e4e83:;
			{
				return false;;
			}
		}
		_match_end_1b70e4e2d:;
	};
}



inline jule::I64 _1d2172831_countMatchType(jule::Ptr<_1d217842a_Match>* _14720_m, jule::Ptr<_1d21d1d46_TypeKind>* _14732_t) {
	jule::I64 _14813_n = 0LL;;
	jule::Str _1499_kind = _1d21d2242_Str((*(_14732_t)).ptr());;
	_julec_label_loop:;
	{
		auto expr = &((*(_14720_m)).get()._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b71001be:;
		if (it != expr_end) {
			jule::Ptr<_1d2178e75_Case> *_15112_c = it;
			{
				if (((*(_15112_c)) == nullptr)) {
					goto _iter_next_1b71001be;
				};
				{
					auto expr = &((*(_15112_c)).get()._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7100e5b:;
					if (it != expr_end) {
						jule::Ptr<_1d0408c95_Data> *_15616_expr = it;
						{
							if (((*(_15616_expr)) == nullptr)) {
								goto _iter_end_1b71001be;
							};
							if ((_1499_kind == _1d21d2242_Str((*(_15616_expr)).get()._field_Model.cast_ptr<_1d21d1d46_TypeKind>(&__jule_any_type89).ptr()))) {
								(_14813_n)++;
							};
						}
						_iter_next_1b7100e5b:;
						++it;
						goto _iter_begin_1b7100e5b;
					}
					_iter_end_1b7100e5b:;
				};
			}
			_iter_next_1b71001be:;
			++it;
			goto _iter_begin_1b71001be;
		}
		_iter_end_1b71001be:;
	};
	return _14813_n;;
}



inline jule::Slice<jule::Ptr<_1d0408c95_Data>> _1d2172ac8_getDatasFromTupleData(jule::Ptr<_1d0408c95_Data>* _17131_d) {
	if ((_1d21d6202_Tup((*(_17131_d)).get()._field_Kind.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*(_17131_d)).get()._field_Model };
			
			if (_match_expr.type == &__jule_any_type87) {
				_case_begin_1b71049dc:;
				{
					return (*(_17131_d)).get()._field_Model.cast_ptr<_1d061bbde_TupleExprModel>(&__jule_any_type87).get()._field_Datas;;
				}
			}
			else {
				_case_begin_1b7102677:;
				{
					jule::Ptr<_1d21de2d7_Tuple> _17721_t = _1d21d6202_Tup((*(_17131_d)).get()._field_Kind.ptr());;
					jule::Slice<jule::Ptr<_1d0408c95_Data>> _17821_r = jule::Slice<jule::Ptr<_1d0408c95_Data>>::alloc(0LL, _17721_t.get()._field_Types.len());;
					{
						auto expr = &(_17721_t.get()._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1b7103986:;
						if (it != expr_end) {
							jule::Ptr<_1d21d1d46_TypeKind> _17925_kind = *it;
							{
								_17821_r = jule::alloc_for_append(_17821_r,1);_17821_r.__push(jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_17925_kind, ._field_Mutable=true, }));;
							}
							_iter_next_1b7103986:;
							++it;
							goto _iter_begin_1b7103986;
						}
						_iter_end_1b7103986:;
					};
					return _17821_r;;
				}
			}
			_match_end_1b7102501:;
		};
	} else {
		return jule::Slice<jule::Ptr<_1d0408c95_Data>>::make({(*(_17131_d))});;
	};
}



inline jule::Bool _1d2173414_checkMut(jule::Ptr<_1d219b34e_Sema>* _20618_s, jule::Ptr<_1d0408c95_Data>* _20629_left, jule::Ptr<_1d0408c95_Data> _20646_right, jule::Ptr<_22be1281d_Token> _20660_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*(_20629_left)).get()._field_Mutable))) {
			_case_begin_1b71074b2:;
			{
				_1d219dc25_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("cannot assign to immutable storage", 34), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_20646_right != nullptr) && (!(_20646_right.get()._field_Mutable))) && _1d21d35d9_Mutable(_20646_right.get()._field_Kind.ptr()))) {
			_case_begin_1b7107528:;
			{
				if (((!_20660_op.get()._field_Kind.equal("=", 1)) && (_1d21d59b5_Struct(_20646_right.get()._field_Kind.ptr()) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1d219dc25_pushErr((*(_20618_s)).ptr(), _20660_op, jule::Str("immutable data cannot assign to mutable storage because of @ type which is mutable", 82), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_20646_right.get()._field_Kind.ptr()), &__jule_any_type5)}));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b710744b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b7106b43:;
	};
}



inline jule::Bool _1d2173898_checkAssign(jule::Ptr<_1d219b34e_Sema>* _22521_s, jule::Ptr<_1d0408c95_Data>* _22536_left, jule::Ptr<_1d0408c95_Data> _22553_right, jule::Ptr<_22be1281d_Token> _22567_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1d0626e6e_FnIns> _2269_f = _1d21d5751_Fn((*(_22536_left)).get()._field_Kind.ptr());;
	if ((((_2269_f != nullptr) && (_2269_f.get()._field_Decl != nullptr)) && _2269_f.get()._field_Decl.get()._field_Global)) {
		_1d219dc25_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("type is not support assignment", 30), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1d0409658_IsConst((*(_22536_left)).ptr())) {
			_case_begin_1b710b94a:;
			{
				_1d219dc25_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("constants is can't assign", 25), jule::Slice<jule::Any>());
				_1d219e044_pushSuggestion((*(_22521_s)).ptr(), jule::Str("remove constant qualifer if you need to assign", 46), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*(_22536_left)).get()._field_Lvalue))) {
			_case_begin_1b710b9b1:;
			{
				_1d219dc25_pushErr((*(_22521_s)).ptr(), _22567_op, jule::Str("invalid expression: expected lvalue for assignment", 50), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1d2173414_checkMut(_22521_s, _22536_left, _22553_right, _22567_op)))) {
			_case_begin_1b710ba27:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1b710b8d4:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1b710a55e:;
	};
}



inline jule::Bool _1d2173b40_isValidAstStForNextSt(jule::Any* _24731_n) {
	{
		auto &_match_expr{ (*(_24731_n)) };
		
		if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1b710d81a:;
			{
				return (!((*(_24731_n)).cast_ptr<_1d05ecb9d_AssignSt>(&__jule_any_type59).get()._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1b71075d3:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b710bcad:;
			{
				return false;;
			}
		}
		_match_end_1b710d5a6:;
	};
}



inline jule::Bool _1d2173dd7_isValidStForNextSt(jule::Any* _25824_st) {
	{
		auto &_match_expr{ (*(_25824_st)) };
		
		if (_match_expr.type == &__jule_any_type44 || _match_expr.type == &__jule_any_type45 || _match_expr.type == &__jule_any_type47) {
			_case_begin_1b710d683:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b710e8e8:;
			{
				{
					auto &_match_expr{ (*(_25824_st)).cast_ptr<_1d0408c95_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1b7110432:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b71107b7:;
						{
							return false;;
						}
					}
					_match_end_1b7110520:;
				};
			}
		}
		else {
			_case_begin_1b710e3ed:;
			{
				return false;;
			}
		}
		_match_end_1b710de69:;
	};
}



inline jule::Bool _1d217417e_stmtIsDef(jule::Any* _27615_st) {
	{
		auto &_match_expr{ (*(_27615_st)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b7111455:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1b710ec06:;
			{
				return false;;
			}
		}
		_match_end_1b7110883:;
	};
}



inline jule::Ptr<_1d21bb65a_Var> _1d2190794_findVarInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _4626_files, jule::Str _4649_ident, jule::Bool _4661_binded) {
	{
		auto expr = _4626_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b725acdb:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _4717_f = *it;
			{
				jule::Ptr<_1d21bb65a_Var> _4817_v = _1d0404b4d_FindVar(_4717_f.ptr(), _4649_ident, _4661_binded);;
				if ((_4817_v != nullptr)) {
					return _4817_v;;
				};
			}
			_iter_next_1b725acdb:;
			++it;
			goto _iter_begin_1b725acdb;
		}
		_iter_end_1b725acdb:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d2190bc3_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _5832_files, jule::Str _5855_ident, jule::Bool _5867_binded) {
	{
		auto expr = _5832_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b725c23d:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _5917_f = *it;
			{
				jule::Ptr<_1d21d10ed_TypeAlias> _6017_ta = _1d0405005_FindTypeAlias(_5917_f.ptr(), _5855_ident, _5867_binded);;
				if ((_6017_ta != nullptr)) {
					return _6017_ta;;
				};
			}
			_iter_next_1b725c23d:;
			++it;
			goto _iter_begin_1b725c23d;
		}
		_iter_end_1b725c23d:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d21910ad_findStructInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _7029_files, jule::Str _7052_ident, jule::Bool _7064_binded) {
	{
		auto expr = _7029_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b725d6d4:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _7117_f = *it;
			{
				jule::Ptr<_1d060ddbd_Struct> _7217_s = _1d04053ac_FindStruct(_7117_f.ptr(), _7052_ident, _7064_binded);;
				if ((_7217_s != nullptr)) {
					return _7217_s;;
				};
			}
			_iter_next_1b725d6d4:;
			++it;
			goto _iter_begin_1b725d6d4;
		}
		_iter_end_1b725d6d4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d06242bd_Fn> _1d2191520_findFnInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _8225_files, jule::Str _8248_ident, jule::Bool _8260_binded) {
	{
		auto expr = _8225_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b725eb7a:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _8317_file = *it;
			{
				jule::Ptr<_1d06242bd_Fn> _8417_f = _1d0405764_FindFn(_8317_file.ptr(), _8248_ident, _8260_binded);;
				if ((_8417_f != nullptr)) {
					return _8417_f;;
				};
			}
			_iter_next_1b725eb7a:;
			++it;
			goto _iter_begin_1b725eb7a;
		}
		_iter_end_1b725eb7a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d21494c8_Trait> _1d219182d_findTraitInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _9428_files, jule::Str _9451_ident) {
	{
		auto expr = _9428_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7260e12:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _9517_f = *it;
			{
				jule::Ptr<_1d21494c8_Trait> _9617_t = _1d0405a72_FindTrait(_9517_f.ptr(), _9451_ident);;
				if ((_9617_t != nullptr)) {
					return _9617_t;;
				};
			}
			_iter_next_1b7260e12:;
			++it;
			goto _iter_begin_1b7260e12;
		}
		_iter_end_1b7260e12:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d214bc5b_Enum> _1d2191b6e_findEnumInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _10627_files, jule::Str _10650_ident) {
	{
		auto expr = _10627_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7262177:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _10717_f = *it;
			{
				jule::Ptr<_1d214bc5b_Enum> _10817_e = _1d0405d80_FindEnum(_10717_f.ptr(), _10650_ident);;
				if ((_10817_e != nullptr)) {
					return _10817_e;;
				};
			}
			_iter_next_1b7262177:;
			++it;
			goto _iter_begin_1b7262177;
		}
		_iter_end_1b7262177:;
	};
	return nullptr;;
}



inline jule::Ptr<_1d214d356_TypeEnum> _1d2191eb0_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _11831_files, jule::Str _11854_ident) {
	{
		auto expr = _11831_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7263431:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _11917_f = *it;
			{
				jule::Ptr<_1d214d356_TypeEnum> _12017_e = _1d040618d_FindTypeEnum(_11917_f.ptr(), _11854_ident);;
				if ((_12017_e != nullptr)) {
					return _12017_e;;
				};
			}
			_iter_next_1b7263431:;
			++it;
			goto _iter_begin_1b7263431;
		}
		_iter_end_1b7263431:;
	};
	return nullptr;;
}



inline jule::Any _1d21924aa_defByIdentPackage(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _12927_files, jule::Str* _12951_ident, jule::Bool _12963_binded) {
	{
		auto expr = _12927_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b726493d:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _13017_file = *it;
			{
				jule::Any _13117_def = _1d0407018_defByIdent(_13017_file.ptr(), (*(_12951_ident)), _12963_binded);;
				if ((_13117_def != nullptr)) {
					return _13117_def;;
				};
			}
			_iter_next_1b726493d:;
			++it;
			goto _iter_begin_1b726493d;
		}
		_iter_end_1b726493d:;
	};
	return nullptr;;
}



inline jule::Bool _1d2197e72_isStdPackage(jule::Str _35517_f, jule::Str _35525_p) {
	return _22b99a95b_HasPrefix(_35517_f, _22b9a56d0_Join(jule::Slice<jule::Str>::make({_22bb20cac_PathStdlib,_35525_p})));;
}



inline jule::Bool _1d2198bcb_isValidModelForRef(jule::Any* _1228_m) {
	{
		auto &_match_expr{ (*(_1228_m)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b72747b6:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b7274e7b:;
			{
				jule::Ptr<_1d061a836_StructSubIdentExprModel> _1717_model = (*(_1228_m)).cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71);;
				return _1d2198bcb_isValidModelForRef(&(_1717_model.get()._field_Expr.get()._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1b7274ee2:;
			{
				jule::Ptr<_1d061a050_TraitSubIdentExprModel> _2017_model = (*(_1228_m)).cast_ptr<_1d061a050_TraitSubIdentExprModel>(&__jule_any_type70);;
				return _1d2198bcb_isValidModelForRef(&(_2017_model.get()._field_Expr));;
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1b7275058:;
			{
				jule::Ptr<_1d0616502_UnaryExprModel> _2317_unary = (*(_1228_m)).cast_ptr<_1d0616502_UnaryExprModel>(&__jule_any_type74);;
				if ((!_2317_unary.get()._field_Op.get()._field_Kind.equal("*", 1))) {
					return false;;
				};
				if ((_1d21d4a3b_Ptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1d21d47c7_Sptr(_2317_unary.get()._field_Expr.get()._field_Kind.ptr()) == nullptr)) {
					return false;;
				};
				return _1d2198bcb_isValidModelForRef(&(_2317_unary.get()._field_Expr.get()._field_Model));;
			}
		}
		else {
			_case_begin_1b7274552:;
			{
				return false;;
			}
		}
		_match_end_1b72744ec:;
	};
}



inline _22ba3c6bd_Log _1d2199171_compilerErr(jule::Ptr<_22be1281d_Token>* _4117_token, jule::Bool _4132_line, jule::Str _4144_fmt, jule::Slice<jule::Any> _4157_args) {
	_22ba3c6bd_Log _4213_log = _22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_4117_token)).get()._field_Row, ._field_Column=(*(_4117_token)).get()._field_Column, ._field_Path=(*(_4117_token)).get()._field_File.get()._field_Path, ._field_Text=_22ba3cb0d_Logf(_4144_fmt, _4157_args), };;
	if (_4132_line) {
		_4213_log._field_Line=_22be18b10_GetRow((*(_4117_token)).get()._field_File.ptr(), (*(_4117_token)).get()._field_Row);
	};
	return _4213_log;;
}



inline jule::Bool _1d21994b2_impIsLookupable(jule::Ptr<_1d219307c_ImportInfo>* _5521_i, jule::Str _5537_ident) {
	if ((*(_5521_i)).get()._field_Binded) {
		return false;;
	};
	if ((!((*(_5521_i)).get()._field_ImportAll))) {
		if (((*(_5521_i)).get()._field_Selected.len() > 0LL)) {
			return _1d2195634_existIdent((*(_5521_i)).ptr(), _5537_ident);;
		};
	};
	return (*(_5521_i)).get()._field_ImportAll;;
}



inline void _1d21997ae_appendRetVars(jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _6723_dest, jule::Ptr<_1d0626e6e_FnIns>* _6742_f) {
	if ((_1d0624730_IsVoid((*(_6742_f)).get()._field_Decl.ptr()) || ((*(_6742_f)).get()._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1d21d1d46_TypeKind>> _7213_types = _1d0628091_Types((*(_6742_f)).ptr());;
	{
		auto expr = &((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b727cdb8:;
		if (it != expr_end) {
			jule::I64 _7310_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _7317_ident = *it;
			{
				if ((_22be150b2_IsIgnoreIdent(_7317_ident.get()._field_Kind) || _22be15359_IsAnonIdent(_7317_ident.get()._field_Kind))) {
					goto _iter_next_1b727cdb8;
				};
				(*(_6723_dest)) = jule::alloc_for_append((*(_6723_dest)),1);(*(_6723_dest)).__push(jule::new_ptr<_1d21bb65a_Var>(_1d21bb65a_Var{._field_Scope=(*(_6742_f)).get()._field_Scope, ._field_Token=_7317_ident, ._field_Ident=_7317_ident.get()._field_Kind, ._field_Mutable=true, ._field_Used=true, ._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_7213_types[_7310_i]}), ._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()}), ._field_RetOrder=_7310_i, }));;
			}
			_iter_next_1b727cdb8:;
			++it;
			_7310_i++;
			goto _iter_begin_1b727cdb8;
		}
		_iter_end_1b727cdb8:;
	};
	if ((((*(_6742_f)).get()._field_Decl.get()._field_Result.get()._field_Idents.len() == 1LL) && ((*(_6723_dest)).len() == 1LL))) {
		(*(_6723_dest))[((*(_6723_dest)).len() - 1LL)].get()._field_RetOrder=-1LL;
	};
}



inline void _1d2199a67_appendParamVars(jule::Slice<jule::Ptr<_1d21bb65a_Var>>* _9725_dest, jule::Ptr<_1d0626e6e_FnIns>* _9744_f) {
	if (((*(_9744_f)).get()._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_9744_f)).get()._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b728154d:;
		if (it != expr_end) {
			jule::Ptr<_1d06260a0_ParamIns> _10217_p = *it;
			{
				if ((_22be150b2_IsIgnoreIdent(_10217_p.get()._field_Decl.get()._field_Ident) || _22be15359_IsAnonIdent(_10217_p.get()._field_Decl.get()._field_Ident))) {
					goto _iter_next_1b728154d;
				};
				jule::Ptr<_1d21bb65a_Var> _10717_v = jule::new_ptr<_1d21bb65a_Var>(_1d21bb65a_Var{._field_Scope=(*(_9744_f)).get()._field_Scope, ._field_Token=_10217_p.get()._field_Decl.get()._field_Token, ._field_Ident=_10217_p.get()._field_Decl.get()._field_Ident, ._field_Mutable=_10217_p.get()._field_Decl.get()._field_Mutable, ._field_Used=true, ._field_Reference=_10217_p.get()._field_Decl.get()._field_Reference, ._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(), ._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()}), });;
				{
					
					if (_1d06230ad_IsSelf(_10217_p.get()._field_Decl.ptr())) {
						_case_begin_1b7283e35:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_9744_f)).get()._field_Owner, 0)});
							_10717_v.get()._field_Reference=(!(_1d0623322_IsRef(_10217_p.get()._field_Decl.ptr())));
							if (_1d0623322_IsRef(_10217_p.get()._field_Decl.ptr())) {
								_10717_v.get()._field_Ident=_10717_v.get()._field_Ident.slice(1LL);
								_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dccec_Sptr>(_1d21dccec_Sptr{._field_Elem=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_BindIdent=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10717_v.get()._field_Kind.get()._field_Kind.get()._field_Kind})}), 21);
							};
						}
					}
					else if (_10217_p.get()._field_Decl.get()._field_Variadic) {
						_case_begin_1b7283b6b:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Variadic=false, ._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dd759_Slc>(_1d21dd759_Slc{._field_Elem=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_BindIdent=_10217_p.get()._field_Kind.get()._field_BindIdent, ._field_Kind=_10217_p.get()._field_Kind.get()._field_Kind})}), 22)});
						}
					}
					else {
						_case_begin_1b7281c8a:;
						{
							_10717_v.get()._field_Kind.get()._field_Kind=_10217_p.get()._field_Kind;
						}
					}
					_match_end_1b7283a4a:;
				};
				(*(_9725_dest)) = jule::alloc_for_append((*(_9725_dest)),1);(*(_9725_dest)).__push(_10717_v);;
			}
			_iter_next_1b728154d:;
			++it;
			goto _iter_begin_1b728154d;
		}
		_iter_end_1b728154d:;
	};
}



inline void _1d2199d42_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1d21d10ed_TypeAlias>>* _15734_dest, jule::Ptr<_1d0626e6e_FnIns>* _15759_f) {
	jule::I64 _15813_size = (*(_15759_f)).get()._field_Generics.len();;
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		_15813_size+=(*(_15759_f)).get()._field_Decl.get()._field_Owner.get()._field_Generics.len();
	};
	if ((_15813_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*(_15759_f)).get()._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7288e90:;
		if (it != expr_end) {
			jule::I64 _16710_i = it - expr->begin();
			jule::Ptr<_1d21d05b4_InsGeneric> _16717_g = *it;
			{
				jule::Ptr<_1d05eb509_GenericDecl> _16817_decl = (*(_15759_f)).get()._field_Decl.get()._field_Generics[_16710_i];;
				(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1d21d10ed_TypeAlias>(_1d21d10ed_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_16817_decl.get()._field_Token, ._field_Ident=_16817_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_16717_g.get()._field_Kind}), }));;
			}
			_iter_next_1b7288e90:;
			++it;
			_16710_i++;
			goto _iter_begin_1b7288e90;
		}
		_iter_end_1b7288e90:;
	};
	if (((*(_15759_f)).get()._field_Decl.get()._field_Owner != nullptr)) {
		jule::Ptr<_1d0611bd4_StructIns> _18017_owner = (*(_15759_f)).get()._field_Owner;;
		{
			auto expr = &(_18017_owner.get()._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1b728a502:;
			if (it != expr_end) {
				jule::I64 _18114_i = it - expr->begin();
				jule::Ptr<_1d21d05b4_InsGeneric> _18121_g = *it;
				{
					jule::Ptr<_1d05eb509_GenericDecl> _18221_decl = _18017_owner.get()._field_Decl.get()._field_Generics[_18114_i];;
					(*(_15734_dest)) = jule::alloc_for_append((*(_15734_dest)),1);(*(_15734_dest)).__push(jule::new_ptr<_1d21d10ed_TypeAlias>(_1d21d10ed_TypeAlias{._field_Scope=(*(_15759_f)).get()._field_Decl.get()._field_Scope, ._field_Used=true, ._field_Generic=true, ._field_Token=_18221_decl.get()._field_Token, ._field_Ident=_18221_decl.get()._field_Ident, ._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=_18121_g.get()._field_Kind}), }));;
				}
				_iter_next_1b728a502:;
				++it;
				_18114_i++;
				goto _iter_begin_1b728a502;
			}
			_iter_end_1b728a502:;
		};
	};
}



inline jule::Ptr<_1d040428a_SymbolTable> _1d219a194_findFile(jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>* _19518_files, jule::Ptr<_22be17ba8_File>* _19542_handler) {
	{
		auto expr = _19518_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b728c427:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _19617_fl = *it;
			{
				if ((_19617_fl.get()._field_File == (*(_19542_handler)))) {
					return _19617_fl;;
				};
			}
			_iter_next_1b728c427:;
			++it;
			goto _iter_begin_1b728c427;
		}
		_iter_end_1b728c427:;
	};
	return nullptr;;
}



inline void _1d219a606_pushSuggestion(_22ba3c6bd_Log* _20430_log, jule::Str _20441_fmt, jule::Slice<jule::Any> _20454_args) {
	_20430_log->_field_Suggestion=_22ba3cb0d_Logf(_20441_fmt, _20454_args);
}



inline void _1d21b9b42_pushImplemented(jule::Ptr<_1d21494c8_Trait> _283424_t, jule::Ptr<_1d060ddbd_Struct>* _283440_d) {
	_julec_label_push:;
	{
		
		if ((_283424_t.get()._field_Implemented.len() > 0LL)) {
			_case_begin_1b729000c:;
			{
				{
					auto expr = &(_283424_t.get()._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b729099c:;
					if (it != expr_end) {
						jule::Ptr<_1d060ddbd_Struct> _283816_s = *it;
						{
							if ((_283816_s == (*(_283440_d)))) {
								goto _match_end_1b728e9e0;
							};
						}
						_iter_next_1b729099c:;
						++it;
						goto _iter_begin_1b729099c;
					}
					_iter_end_1b729099c:;
				};
				goto _case_begin_1b728ea56;
			}
		}
		else {
			_case_begin_1b728ea56:;
			{
				_283424_t.get()._field_Implemented = jule::alloc_for_append(_283424_t.get()._field_Implemented,1);_283424_t.get()._field_Implemented.__push((*(_283440_d)));;
			}
		}
		_match_end_1b728e9e0:;
	};
	{
		auto expr = &(_283424_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7291272:;
		if (it != expr_end) {
			jule::Ptr<_1d21d8be9_TypeSymbol> _284717_i = *it;
			{
				_1d21b9b42_pushImplemented(_1d21d5c29_Trait(_284717_i.get()._field_Kind.ptr()), _283440_d);
			}
			_iter_next_1b7291272:;
			++it;
			goto _iter_begin_1b7291272;
		}
		_iter_end_1b7291272:;
	};
}



inline void _1d21b9dea_pushImplements(jule::Ptr<_1d060ddbd_Struct>* _285224_s, jule::Ptr<_1d21494c8_Trait> _285240_t) {
	_julec_label_push:;
	{
		
		if (((*(_285224_s)).get()._field_Implements.len() > 0LL)) {
			_case_begin_1b7292729:;
			{
				{
					auto expr = &((*(_285224_s)).get()._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b72931b9:;
					if (it != expr_end) {
						jule::Ptr<_1d21494c8_Trait> _285616_b = *it;
						{
							if ((_285616_b == _285240_t)) {
								goto _match_end_1b729220c;
							};
						}
						_iter_next_1b72931b9:;
						++it;
						goto _iter_begin_1b72931b9;
					}
					_iter_end_1b72931b9:;
				};
				goto _case_begin_1b7292273;
			}
		}
		else {
			_case_begin_1b7292273:;
			{
				(*(_285224_s)).get()._field_Implements = jule::alloc_for_append((*(_285224_s)).get()._field_Implements,1);(*(_285224_s)).get()._field_Implements.__push(_285240_t);;
			}
		}
		_match_end_1b729220c:;
	};
	{
		auto expr = &(_285240_t.get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b729398e:;
		if (it != expr_end) {
			jule::Ptr<_1d21d8be9_TypeSymbol> _286517_i = *it;
			{
				_1d21b9dea_pushImplements(_285224_s, _1d21d5c29_Trait(_286517_i.get()._field_Kind.ptr()));
			}
			_iter_next_1b729398e:;
			++it;
			goto _iter_begin_1b729398e;
		}
		_iter_end_1b729398e:;
	};
}



inline jule::Bool _1d03e1684_traitHasReferenceReceiver(jule::Ptr<_1d21494c8_Trait>* _2631_t) {
	{
		auto expr = &((*(_2631_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b74a6e49:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> *_2712_f = it;
			{
				if ((*(_2712_f)).get()._field_Statically) {
					goto _iter_next_1b74a6e49;
				};
				jule::Ptr<_1d0622981_Param> _3313_p = (*(_2712_f)).get()._field_Params[0LL];;
				if ((_1d0623322_IsRef(_3313_p.ptr()) && _1d06230ad_IsSelf(_3313_p.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b74a6e49:;
			++it;
			goto _iter_begin_1b74a6e49;
		}
		_iter_end_1b74a6e49:;
	};
	return false;;
}



inline jule::Bool _1d03e19c5_floatAssignable(jule::Str _4120_kind, jule::Ptr<_1d0408c95_Data>* _4132_d) {
	jule::Str _429_value = _1e76c0594_FmtFloat(static_cast<jule::F64>(_1e76e87a9_AsF64((*(_4132_d)).get()._field_Constant.ptr())), 'g', -1LL, 64LL);;
	return _1e76d9811_CheckBitFloat(_429_value, static_cast<jule::I64>(_1e76d8403_BitsizeOf(_4120_kind)));;
}



inline jule::Bool _1d03e1d16_sigAssignable(jule::Str _4618_kind, jule::Ptr<_1d0408c95_Data>* _4630_d) {
	jule::F64 _479_min = _1e76de99d_Min(_4618_kind);;
	jule::F64 _489_max = _1e76dec45_Max(_4618_kind);;
	{
		
		if (_1e76ea415_IsF64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b74b2c13:;
			{
				jule::F64 _5113_x = _1e76e806c_ReadF64((*(_4630_d)).get()._field_Constant.ptr());;
				jule::F64 _5214_i = 0;;
				jule::F64 _5217_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1e7695adb_Modf(_5113_x);
					_5214_i = __jule_assign_result.__jule_result_arg0;
					_5217_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_5217_frac != 0LL)) {
					return false;;
				};
				return ((_5214_i >= _479_min) && (_5214_i <= _489_max));;
			}
		}
		else if (_1e76e9bc8_IsU64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b74b32eb:;
			{
				jule::F64 _5813_x = _1e76e87a9_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				if ((_5813_x <= _489_max)) {
					return true;;
				};
			}
		}
		else if (_1e76e9964_IsI64((*(_4630_d)).get()._field_Constant.ptr())) {
			_case_begin_1b74b3373:;
			{
				jule::F64 _6313_x = _1e76e87a9_AsF64((*(_4630_d)).get()._field_Constant.ptr());;
				return ((_479_min <= _6313_x) && (_6313_x <= _489_max));;
			}
		}
		_match_end_1b74b31ca:;
	};
	return false;;
}



inline jule::Bool _1d03e219b_unsigAssignable(jule::Str _6920_kind, jule::Ptr<_1d0408c95_Data>* _6932_d) {
	jule::F64 _709_max = _1e76dec45_Max(_6920_kind);;
	if (((*(_6932_d)).get()._field_IsRune && _6920_kind.equal("u8", 2))) {
		return _1d03c833b_IsAscii(static_cast<jule::I32>(static_cast<jule::I32>(_1e76e75bb_ReadI64((*(_6932_d)).get()._field_Constant.ptr()))));;
	};
	{
		
		if (_1e76ea415_IsF64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b74b75ec:;
			{
				jule::F64 _7713_x = _1e76e806c_ReadF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_7713_x < 0LL)) {
					return false;;
				};
				jule::F64 _8114_i = 0;;
				jule::F64 _8117_frac = 0;;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1e7695adb_Modf(_7713_x);
					_8114_i = __jule_assign_result.__jule_result_arg0;
					_8117_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_8117_frac != 0LL)) {
					return false;;
				};
				return (_8114_i <= _709_max);;
			}
		}
		else if (_1e76e9bc8_IsU64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b74b7c5c:;
			{
				jule::F64 _8713_x = _1e76e87a9_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				if ((_8713_x <= _709_max)) {
					return true;;
				};
			}
		}
		else if (_1e76e9964_IsI64((*(_6932_d)).get()._field_Constant.ptr())) {
			_case_begin_1b74b7cc3:;
			{
				jule::F64 _9213_x = _1e76e87a9_AsF64((*(_6932_d)).get()._field_Constant.ptr());;
				return ((0LL <= _9213_x) && (_9213_x <= _709_max));;
			}
		}
		_match_end_1b74b7696:;
	};
	return false;;
}



inline jule::Bool _1d03e24dc_intAssignable(jule::Str _9818_kind, jule::Ptr<_1d0408c95_Data>* _9830_d) {
	{
		
		if (_1e76e4b6d_IsSigInt(_9818_kind)) {
			_case_begin_1b74bbac9:;
			{
				return _1d03e1d16_sigAssignable(_9818_kind, _9830_d);;
			}
		}
		else if (_1e76e4e59_IsUnsigInt(_9818_kind)) {
			_case_begin_1b74bbb40:;
			{
				return _1d03e219b_unsigAssignable(_9818_kind, _9830_d);;
			}
		}
		else {
			_case_begin_1b74b83cd:;
			{
				return false;;
			}
		}
		_match_end_1b74bb810:;
	};
}



inline jule::Ptr<_1d21d1d46_TypeKind> _1d0403388_lenKind(void) {
	return _1d0642231_primInt;;
}



inline jule::Ptr<_1d05aba4c_Directive> _1d21cad95_findDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _422223_directives, jule::Str _422254_d) {
	{
		auto expr = _422223_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75beade:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _422317_dr = *it;
			{
				if ((_422317_dr.get()._field_Tag.get()._field_Kind == _422254_d)) {
					return _422317_dr;;
				};
			}
			_iter_next_1b75beade:;
			++it;
			goto _iter_begin_1b75beade;
		}
		_iter_end_1b75beade:;
	};
	return nullptr;;
}



inline jule::Any _1d21cb22a_findBuiltinsImport(jule::Str _423123_ident, jule::Ptr<_1d219307c_ImportInfo> _423135_imp) {
	return _1d06456b8_findPackageBuiltinDef(_423135_imp.get()._field_LinkPath, _423123_ident);;
}



inline void _1d21cb439_fitBitsize(jule::Ptr<_1d0408c95_Data>* _423820_d) {
	jule::Ptr<_1d21d9568_Prim> _423913_prim = _1d21d4563_Prim((*(_423820_d)).get()._field_Kind.ptr());;
	jule::I64 _42409_z = _1e76d8403_BitsizeOf(_1d21d98cb_Str(_423913_prim.ptr()));;
	if ((_42409_z == 64LLU)) {
		return;;
	};
	jule::I64 _424513_k = 0LL;;
	{
		
		if (_1e76e9964_IsI64((*(_423820_d)).get()._field_Constant.ptr())) {
			_case_begin_1b75c254d:;
			{
				_424513_k=static_cast<jule::I64>(_1e76d9d50_BitsizeOfInt(static_cast<jule::I64>(_1e76e75bb_ReadI64((*(_423820_d)).get()._field_Constant.ptr()))));
				if ((_424513_k > _42409_z)) {
					(*(_423820_d)).get()._field_Constant.get()._field_Kind=_1e76d8722_IntFromBits(_424513_k);
					(*(_423820_d)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias((*(_423820_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1e76e9bc8_IsU64((*(_423820_d)).get()._field_Constant.ptr())) {
			_case_begin_1b75c25c5:;
			{
				_424513_k=static_cast<jule::I64>(_1e76da0e7_BitsizeOfUint(static_cast<jule::U64>(_1e76e7830_ReadU64((*(_423820_d)).get()._field_Constant.ptr()))));
				if ((_424513_k > _42409_z)) {
					(*(_423820_d)).get()._field_Constant.get()._field_Kind=_1e76d89b9_UintFromBits(_424513_k);
					(*(_423820_d)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias((*(_423820_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		else if (_1e76ea415_IsF64((*(_423820_d)).get()._field_Constant.ptr())) {
			_case_begin_1b75c264c:;
			{
				_424513_k=static_cast<jule::I64>(_1e76d9aa8_BitsizeOfFloat(static_cast<jule::F64>(_1e76e806c_ReadF64((*(_423820_d)).get()._field_Constant.ptr()))));
				if ((_424513_k > _42409_z)) {
					(*(_423820_d)).get()._field_Constant.get()._field_Kind=_1e76d8c61_FloatFromBits(_424513_k);
					(*(_423820_d)).get()._field_Kind=_1d064451e_findBuiltinTypeAlias((*(_423820_d)).get()._field_Constant.get()._field_Kind).get()._field_Kind.get()._field_Kind;
				};
			}
		}
		_match_end_1b75c2482:;
	};
}



inline void _1d21cb69d_makeStructLitAlloc(jule::Ptr<_1d0408c95_Data>* _426828_d, jule::Ptr<_1d0616ca5_StructLitExprModel>* _426843_lit) {
	(*(_426828_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dccec_Sptr>(_1d21dccec_Sptr{._field_Elem=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_426843_lit)).get()._field_Strct, 0)})}), 21)});
	(*(_426828_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d06170b3_AllocStructLitExprModel>(_1d06170b3_AllocStructLitExprModel{._field_Lit=(*(_426843_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1d21bb65a_Var> _1d21cb9de_buildErrorVar(jule::Ptr<_1d2174613_Scope>* _427923_s, jule::Ptr<_1d05e7604_FnCallExpr>* _427939_fc) {
	return jule::new_ptr<_1d21bb65a_Var>(_1d21bb65a_Var{._field_Scope=(*(_427923_s)), ._field_Token=(*(_427939_fc)).get()._field_Token, ._field_Ident=jule::Str("error", 5), ._field_Mutable=true, ._field_Used=true, ._field_Reference=false, ._field_Kind=_1d064451e_findBuiltinTypeAlias(jule::Str("any", 3)).get()._field_Kind, ._field_Value=jule::new_ptr<_1d0409d1d_Value>(_1d0409d1d_Value{._field_Data=jule::new_ptr<_1d0408c95_Data>()}), });;
}



inline jule::Any _1d21cbd30_findBuiltinsSema(jule::Str _429421_ident, jule::Ptr<_1d219b34e_Sema> _429437_s) {
	{
		auto expr = &(_429437_s.get()._field_file.get()._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b75c8334:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _429517_imp = *it;
			{
				if ((_429517_imp.get()._field_ImportAll || _1d2195634_existIdent(_429517_imp.ptr(), _429421_ident))) {
					jule::Any _429721_def = _1d21cb22a_findBuiltinsImport(_429421_ident, _429517_imp);;
					if ((_429721_def != nullptr)) {
						return _429721_def;;
					};
				};
			}
			_iter_next_1b75c8334:;
			++it;
			goto _iter_begin_1b75c8334;
		}
		_iter_end_1b75c8334:;
	};
	jule::Str _430513_ppath = _22be18329_Dir(_429437_s.get()._field_file.get()._field_File.ptr());;
	if (_22b99a95b_HasPrefix(_430513_ppath, _22bb20cac_PathStdlib)) {
		(_430513_ppath).mut_slice(_22bb20cac_PathStdlib.len());;
		_430513_ppath=(jule::Str("std", 3) + _22b9a1951_Replace(_430513_ppath, jule::Str("/", 1), jule::Str("::", 2), -1LL));
		return _1d06456b8_findPackageBuiltinDef(_430513_ppath, _429421_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1d21cc0c7_isOkForShifting(jule::Ptr<_1d0408c95_Data>* _431925_d) {
	if (_1d0409658_IsConst((*(_431925_d)).ptr())) {
		{
			
			if (_1e76e9964_IsI64((*(_431925_d)).get()._field_Constant.ptr())) {
				_case_begin_1b75cc1b2:;
				{
					return (_1e76e75bb_ReadI64((*(_431925_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else if (_1e76e9bc8_IsU64((*(_431925_d)).get()._field_Constant.ptr())) {
				_case_begin_1b75cc239:;
				{
					return true;;
				}
			}
			else if (_1e76ea415_IsF64((*(_431925_d)).get()._field_Constant.ptr())) {
				_case_begin_1b75cc2b1:;
				{
					return (_1e76e806c_ReadF64((*(_431925_d)).get()._field_Constant.ptr()) >= 0LL);;
				}
			}
			else {
				_case_begin_1b75cc14b:;
				{
					return false;;
				}
			}
			_match_end_1b75cc080:;
		};
	};
	jule::Ptr<_1d21d9568_Prim> _43329_prim = _1d21d4563_Prim((*(_431925_d)).get()._field_Kind.ptr());;
	return ((_43329_prim != nullptr) && _1e76e5201_IsInt(_1d21d98cb_Str(_43329_prim.ptr())));;
}



inline jule::Bool _1d21cc47e_isInstancedStruct(jule::Ptr<_1d0611bd4_StructIns> _433622_s) {
	return (_433622_s.get()._field_Decl.get()._field_Generics.len() == _433622_s.get()._field_Generics.len());;
}



inline jule::Bool _1d21cc7e2_isPtrArithmeticCompatible(jule::Ptr<_1d0408c95_Data>* _434035_l, jule::Ptr<_1d0408c95_Data>* _434050_r) {
	jule::Ptr<_1d21e1361_Ptr> _43419_ptr = _1d21d4a3b_Ptr((*(_434050_r)).get()._field_Kind.ptr());;
	if ((_43419_ptr != nullptr)) {
		return _1d21d2550_Equal(_1d21d4a3b_Ptr((*(_434035_l)).get()._field_Kind.ptr()).get()._field_Elem, _43419_ptr.get()._field_Elem);;
	};
	if (_1d0409658_IsConst((*(_434050_r)).ptr())) {
		return _1d03e24dc_intAssignable(jule::Str("int", 3), _434050_r);;
	};
	_1d03e2993_typeCompatibilityChecker _434813_tcc = _1d03e2993_typeCompatibilityChecker{._field_dest=_1d0642231_primInt, ._field_src=(*(_434050_r)).get()._field_Kind, };;
	return _1d03e407c_check(&_434813_tcc);;
}



inline void _1d21cca34_applyCastKindModel(jule::Ptr<_1d0408c95_Data>* _435528_d, jule::Ptr<_1d21d1d46_TypeKind>* _435543_t) {
	(*(_435528_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d0617613_CastingExprModel>(_1d0617613_CastingExprModel{._field_Expr=(*(_435528_d)).get()._field_Model, ._field_Kind=(*(_435543_t)), ._field_ExprKind=(*(_435528_d)).get()._field_Kind}), &__jule_any_type98);
}



inline void _1d21cccdc_applyCastKind(jule::Ptr<_1d0408c95_Data>* _436323_d, jule::Ptr<_1d21d1d46_TypeKind>* _436338_t) {
	_1d21cca34_applyCastKindModel(_436323_d, _436338_t);
	(*(_436323_d)).get()._field_Kind=(*(_436338_t));
}



inline jule::Ptr<_1d0408c95_Data> _1d21cceda_buildVoidData(void) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0640eee_primVoid, });;
}



inline jule::Str _1d21cd2a4_checkDataForIntegerIndexing(jule::Ptr<_1d0408c95_Data>* _437437_d) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_437437_d)) == nullptr)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	{
		
		if ((_1d21d4563_Prim((*(_437437_d)).get()._field_Kind.ptr()) == nullptr)) {
			_case_begin_1b75d3e66:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if ((!(_1e76e5201_IsInt(_1d21d98cb_Str(_1d21d4563_Prim((*(_437437_d)).get()._field_Kind.ptr()).ptr()))))) {
			_case_begin_1b75d3ecc:;
			{
				__jule_func_result = jule::Str("type @ is invalid for indexing", 30);
				return __jule_func_result;;
			}
		}
		else if (_1d0409658_IsConst((*(_437437_d)).ptr())) {
			_case_begin_1b75d4043:;
			{
				if ((_1e76e87a9_AsF64((*(_437437_d)).get()._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = jule::Str("overflow the limit of data-type", 31);
					return __jule_func_result;;
				};
			}
		}
		else if ((_1d21d4563_Prim((*(_437437_d)).get()._field_Kind.ptr()) == nullptr) || _1d0409658_IsConst((*(_437437_d)).ptr()) || (_1e76d815b_RealKindOf(_1d21d98cb_Str(_1d21d4563_Prim((*(_437437_d)).get()._field_Kind.ptr()).ptr())) != _1e76d815b_RealKindOf(jule::Str("int", 3)))) {
			_case_begin_1b75d40ba:;
			{
				_1d21cccdc_applyCastKind(_437437_d, &(_1d0642231_primInt));
			}
		}
		_match_end_1b75d3a7b:;
	};
	__jule_func_result = jule::Str();
	return __jule_func_result;;
}



inline void _1d21cd56d_applyCastModelByEnum(jule::Ptr<_1d0408c95_Data>* _439930_d, jule::Ptr<_1d214bc5b_Enum> _439944_e) {
	if ((_439944_e == nullptr)) {
		return;;
	};
	jule::Ptr<_1d21d9568_Prim> _44039_p = _1d21d4563_Prim(_439944_e.get()._field_Kind.get()._field_Kind.ptr());;
	if (_1d21dc79c_IsStr(_44039_p.ptr())) {
		return;;
	};
	_1d21cca34_applyCastKindModel(_439930_d, &(_439944_e.get()._field_Kind.get()._field_Kind));
}



inline void _1d21cd826_castConstByType(jule::Str* _441021_t, jule::Ptr<_1d0408c95_Data>* _441034_d) {
	{
		
		if (_1e76e4b6d_IsSigInt((*(_441021_t)))) {
			_case_begin_1b75d85ec:;
			{
				{
					auto _match_expr{ _1e76d8403_BitsizeOf(_1e76d815b_RealKindOf((*(_441021_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b75d9246:;
						{
							_1e76e8a2e_SetI64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(_1e76e82d1_AsI64((*(_441034_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b75d92bd:;
						{
							_1e76e8a2e_SetI64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I32>(_1e76e82d1_AsI64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b75d9334:;
						{
							_1e76e8a2e_SetI64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I16>(_1e76e82d1_AsI64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b75d939a:;
						{
							_1e76e8a2e_SetI64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I64>(static_cast<jule::I8>(_1e76e82d1_AsI64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b75d8883:;
				};
			}
		}
		else if (_1e76e4e59_IsUnsigInt((*(_441021_t)))) {
			_case_begin_1b75d8674:;
			{
				{
					auto _match_expr{ _1e76d8403_BitsizeOf(_1e76d815b_RealKindOf((*(_441021_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b75dc0a1:;
						{
							_1e76e8ca4_SetU64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(_1e76e8545_AsU64((*(_441034_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b75dc139:;
						{
							_1e76e8ca4_SetU64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U32>(_1e76e8545_AsU64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1b75dc1a0:;
						{
							_1e76e8ca4_SetU64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U16>(_1e76e8545_AsU64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1b75dc216:;
						{
							_1e76e8ca4_SetU64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U64>(static_cast<jule::U8>(_1e76e8545_AsU64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b75d8a70:;
				};
			}
		}
		else if (_1e76e5520_IsFloat((*(_441021_t)))) {
			_case_begin_1b75d86eb:;
			{
				{
					auto _match_expr{ _1e76d8403_BitsizeOf(_1e76d815b_RealKindOf((*(_441021_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1b75dedd9:;
						{
							_1e76e9524_SetF64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(_1e76e87a9_AsF64((*(_441034_d)).get()._field_Constant.ptr())));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1b75dee94:;
						{
							_1e76e9524_SetF64((*(_441034_d)).get()._field_Constant.ptr(), static_cast<jule::F64>(static_cast<jule::F64>(static_cast<jule::F32>(_1e76e87a9_AsF64((*(_441034_d)).get()._field_Constant.ptr())))));
						}
					}
					_match_end_1b75d8b91:;
				};
			}
		}
		_match_end_1b75d84cb:;
	};
}



inline void _1d21cdd32_updateModelToGenericIns(jule::Any* _444433_m, jule::Ptr<_1d0626e6e_FnIns>* _444452_f) {
	{
		auto &_match_expr{ (*(_444433_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1b75e01e7:;
			{
				(*(_444433_m))=jule::Any((*(_444452_f)), &__jule_any_type7);
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b75e025d:;
			{
				(*(_444433_m)).cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Method=(*(_444452_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1b75e02c4:;
			{
				(*(_444433_m)).cast_ptr<_1d061abcc_StructStaticIdentExprModel>(&__jule_any_type101).get()._field_Method=(*(_444452_f));
			}
		}
		_match_end_1b75de3e4:;
	};
}



inline jule::Bool _1d21ce074_pushSubIdentFromExpr(jule::Any _445529_expr, jule::Ptr<_1d05dee15_SubIdentTypeDecl>* _445550_t) {
	{
		auto &_match_expr{ _445529_expr };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1b75e1a12:;
			{
				jule::Ptr<_1d05e52d3_IdentExpr> _445817_e = _445529_expr.cast_ptr<_1d05e52d3_IdentExpr>(&__jule_any_type85);;
				(*(_445550_t)).get()._field_Idents = jule::alloc_for_append((*(_445550_t)).get()._field_Idents,1);(*(_445550_t)).get()._field_Idents.__push(jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_445817_e.get()._field_Token, ._field_Ident=_445817_e.get()._field_Ident, }));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1b75e3030:;
			{
				jule::Ptr<_1d05e6a76_SubIdentExpr> _446417_e = _445529_expr.cast_ptr<_1d05e6a76_SubIdentExpr>(&__jule_any_type91);;
				if ((!(_1d21ce074_pushSubIdentFromExpr(_446417_e.get()._field_Expr.get()._field_Kind, _445550_t)))) {
					return false;;
				};
				(*(_445550_t)).get()._field_Idents = jule::alloc_for_append((*(_445550_t)).get()._field_Idents,1);(*(_445550_t)).get()._field_Idents.__push(jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_446417_e.get()._field_Ident, ._field_Ident=_446417_e.get()._field_Ident.get()._field_Kind, }));;
			}
		}
		else {
			_case_begin_1b75e2a02:;
			{
				return false;;
			}
		}
		_match_end_1b75e299c:;
	};
	return true;;
}



inline jule::Str _1d21ce31b_constoa(jule::Ptr<_1e76e5cc3_Const>* _447813_c) {
	{
		
		if (_1e76e9964_IsI64((*(_447813_c)).ptr())) {
			_case_begin_1b75e5de0:;
			{
				return _1e76d5db2_FmtInt(static_cast<jule::I64>(_1e76e75bb_ReadI64((*(_447813_c)).ptr())), 10LL);;
			}
		}
		else if (_1e76e9bc8_IsU64((*(_447813_c)).ptr())) {
			_case_begin_1b75e5274:;
			{
				return _1e76d5a2c_FmtUint(static_cast<jule::U64>(_1e76e7830_ReadU64((*(_447813_c)).ptr())), 10LL);;
			}
		}
		else {
			_case_begin_1b75e4b69:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b75e5d68:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d21ce65c_evalEnumStatic(jule::Ptr<_1d214bc5b_Enum>* _448924_enm, jule::Ptr<_1d214b266_EnumItem>* _448941_item) {
	jule::Ptr<_1d0408c95_Data> _449013_d = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>((*(_448924_enm)), 3)}), });;
	if (((*(_448941_item)) != nullptr)) {
		_449013_d.get()._field_Constant=jule::new_ptr<_1e76e5cc3_Const>((*((*(_448941_item)).get()._field_Value.get()._field_Data.get()._field_Constant)));
		_449013_d.get()._field_Model=jule::Any(_449013_d.get()._field_Constant, &__jule_any_type19);
		_1d21cd56d_applyCastModelByEnum(&(_449013_d), (*(_448924_enm)));
	};
	return _449013_d;;
}



inline jule::Bool _1d21eb206_kindUsesGenerics(jule::Ptr<_1d21d1d46_TypeKind>* _173326_k, jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>* _173341_generics) {
	{
		auto expr = _173341_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b790a336:;
		if (it != expr_end) {
			jule::Ptr<_1d05eb509_GenericDecl> *_173412_g = it;
			{
				if (static__1d21ead0a_exist(&((*(_173412_g)).get()._field_Ident), _173326_k)) {
					return true;;
				};
			}
			_iter_next_1b790a336:;
			++it;
			goto _iter_begin_1b790a336;
		}
		_iter_end_1b790a336:;
	};
	return false;;
}



inline jule::Bool _1d21eb58b_hasDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _174322_directives, jule::Str _174353_tag) {
	{
		auto expr = _174322_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b790a853:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _174417_dr = *it;
			{
				if ((_174417_dr.get()._field_Tag.get()._field_Kind == _174353_tag)) {
					return true;;
				};
			}
			_iter_next_1b790a853:;
			++it;
			goto _iter_begin_1b790a853;
		}
		_iter_end_1b790a853:;
	};
	return false;;
}



inline jule::Bool _1d21eb833_canGetPtr(jule::Ptr<_1d0408c95_Data>* _175219_d) {
	if (((!((*(_175219_d)).get()._field_Lvalue)) || _1d0409658_IsConst((*(_175219_d)).ptr()))) {
		return false;;
	};
	{
		
		if (((_1d21d5751_Fn((*(_175219_d)).get()._field_Kind.ptr()) != nullptr) || (_1d21d4ca0_Enum((*(_175219_d)).get()._field_Kind.ptr()) != nullptr))) {
			_case_begin_1b790c68a:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b790c624:;
			{
				return true;;
			}
		}
		_match_end_1b790b5e0:;
	};
}



inline jule::Bool _1d21ebb52_isValidForSptrType(jule::Ptr<_1d21d1d46_TypeKind>* _176528_t) {
	jule::Ptr<_1d0611bd4_StructIns> _176613_s = _1d21d59b5_Struct((*(_176528_t)).ptr());;
	if ((((_176613_s != nullptr) && (_176613_s.get()._field_Decl != nullptr)) && _176613_s.get()._field_Decl.get()._field_Binded)) {
		return false;;
	};
	return true;;
}



inline jule::Bool _1d21ebde9_isValidForRef(jule::Ptr<_1d21d1d46_TypeKind>* _177423_t) {
	return (_1d21d5751_Fn((*(_177423_t)).ptr()) == nullptr);;
}



inline jule::Bool _1d21ec1b3_isBuiltinStrConvertable(jule::Ptr<_1d21d1d46_TypeKind>* _177733_t) {
	return ((((!(_1d21d3111_Void((*(_177733_t)).ptr()))) && (_1d21d5751_Fn((*(_177733_t)).ptr()) == nullptr)) && (_1d21d6202_Tup((*(_177733_t)).ptr()) == nullptr)) && (!(_1d21d6466_comptime((*(_177733_t)).ptr()))));;
}



inline jule::Str _1d21ec438_buildLinkPathByTokens(jule::Slice<jule::Ptr<_22be1281d_Token>>* _178127_tokens) {
	jule::Str _178213_s = (*(_178127_tokens))[0LL].get()._field_Kind;;
	{
		auto expr = (*(_178127_tokens)).slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1b7911738:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_178312_token = it;
			{
				(_178213_s).append("::", 2);
				_178213_s+=(*(_178312_token)).get()._field_Kind;
			}
			_iter_next_1b7911738:;
			++it;
			goto _iter_begin_1b7911738;
		}
		_iter_end_1b7911738:;
	};
	return _178213_s;;
}



inline jule::Ptr<_1d21d9568_Prim> _1d21ec7e0_buildPrimType(jule::Str _179018_kind) {
	return jule::new_ptr<_1d21d9568_Prim>(_1d21d9568_Prim{._field_Kind=_179018_kind});;
}



inline jule::Ptr<_1d060ddbd_Struct> _1d21eca87_getStructFromKind(jule::Ptr<_1d21d1d46_TypeKind> _179626_k) {
	{
		
		if ((_179626_k == nullptr)) {
			_case_begin_1b7912805:;
			{
				return nullptr;;
			}
		}
		else if ((_1d21d59b5_Struct(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b791286b:;
			{
				return _1d21d59b5_Struct(_179626_k.ptr()).get()._field_Decl;;
			}
		}
		else if ((_1d21d47c7_Sptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b79128d2:;
			{
				return _1d21eca87_getStructFromKind(_1d21d47c7_Sptr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1d21d54dc_Slc(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b7912948:;
			{
				return _1d21eca87_getStructFromKind(_1d21d54dc_Slc(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1d21d5278_Arr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b7912bbd:;
			{
				return _1d21eca87_getStructFromKind(_1d21d5278_Arr(_179626_k.ptr()).get()._field_Elem);;
			}
		}
		else if ((_1d21d4a3b_Ptr(_179626_k.ptr()) != nullptr)) {
			_case_begin_1b7912c34:;
			{
				return nullptr;;
			}
		}
		else {
			_case_begin_1b7911e53:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7911d87:;
	};
}



inline void _1d21ecd40_applyImplicitCast(jule::Ptr<_1d21d1d46_TypeKind>* _181827_dest, jule::Ptr<_1d0408c95_Data>* _181849_d) {
	if (_1d21d2d9c_IsNil((*(_181849_d)).get()._field_Kind.ptr())) {
		return;;
	};
	jule::Ptr<_1d21d9568_Prim> _18229_destPrim = _1d21d4563_Prim((*(_181827_dest)).ptr());;
	jule::Ptr<_1d21d9568_Prim> _18239_prim = _1d21d4563_Prim((*(_181849_d)).get()._field_Kind.ptr());;
	if ((_18229_destPrim != nullptr)) {
		if (_1d21dca11_IsAny(_18229_destPrim.ptr())) {
			if (((_18239_prim == nullptr) || (!(_1d21dca11_IsAny(_18239_prim.ptr()))))) {
				_1d21cccdc_applyCastKind(_181849_d, _181827_dest);
			};
			return;;
		};
		if (((((((!(_1d21d2b38_Binded((*(_181849_d)).get()._field_Kind.ptr()))) && (!((*(_181849_d)).get()._field_Kind.get()._field_Variadic))) && (!((*(_181849_d)).get()._field_Lvalue))) && (!(_1d0409658_IsConst((*(_181849_d)).ptr())))) && (_18239_prim != nullptr)) && _1e76e57b7_IsNum(_18239_prim.get()._field_Kind))) {
			_1d21cccdc_applyCastKind(_181849_d, _181827_dest);
		};
		return;;
	};
	jule::Ptr<_1d21494c8_Trait> _18429_dt = _1d21d5c29_Trait((*(_181827_dest)).ptr());;
	if ((_18429_dt != nullptr)) {
		jule::Ptr<_1d21494c8_Trait> _184413_bt = _1d21d5c29_Trait((*(_181849_d)).get()._field_Kind.ptr());;
		if (((_184413_bt == nullptr) || (_184413_bt != _18429_dt))) {
			_1d21cca34_applyCastKindModel(_181849_d, _181827_dest);
			return;;
		};
	};
	if (((_1d21d5014_TypeEnum((*(_181827_dest)).ptr()) != nullptr) && (_1d21d5014_TypeEnum((*(_181849_d)).get()._field_Kind.ptr()) == nullptr))) {
		_1d21cca34_applyCastKindModel(_181849_d, _181827_dest);
		return;;
	};
}



inline jule::Bool _1d21ed0d7_validTypeForXof(jule::Ptr<_1d21d1d46_TypeKind>* _185725_t) {
	return ((!(_1d21d3111_Void((*(_185725_t)).ptr()))) && (_1d21d5751_Fn((*(_185725_t)).ptr()) == nullptr));;
}



inline __jule_tuple_x_1d040428a_SymbolTable__jule_tuple_s_22ba3c6bd_Log _1d2200d87_buildSymbols(jule::Ptr<_1d05aa7a4_Ast>* _1622_ast, jule::Trait<_1d21903cb_Importer>* _1638_importer, jule::Ptr<_1d2147141_symbolBuilder> _1662_owner) {
	__jule_tuple_x_1d040428a_SymbolTable__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	jule::Ptr<_1d2147141_symbolBuilder> _1713_sb = jule::new_ptr<_1d2147141_symbolBuilder>(_1d2147141_symbolBuilder{._field_owner=_1662_owner, ._field_importer=(*(_1638_importer)), ._field_ast=(*(_1622_ast)), });;
	_1d214894a_build(_1713_sb);
	if ((_1713_sb.get()._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = _1713_sb.get()._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _1713_sb.get()._field_errors;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log _1d22012b6_analyzePackage(jule::Slice<jule::Ptr<_1d05aa7a4_Ast>>* _3024_files, jule::Trait<_1d21903cb_Importer>* _3044_importer, jule::I64* _3065_flags) {
	__jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1d040428a_SymbolTable>> _3213_tables = jule::Slice<jule::Ptr<_1d040428a_SymbolTable>>::alloc(0LL, (*(_3024_files)).len());;
	{
		auto expr = _3024_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7a13e01:;
		if (it != expr_end) {
			jule::Ptr<_1d05aa7a4_Ast> _3317_f = *it;
			{
				jule::Ptr<_1d040428a_SymbolTable> _3418_table;;
				jule::Slice<_22ba3c6bd_Log> _3429_errors;;
				({
					__jule_tuple_x_1d040428a_SymbolTable__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d2200d87_buildSymbols(&(_3317_f), _3044_importer, nullptr);
					_3418_table = __jule_assign_result.__jule_result_arg0;
					_3429_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_3429_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _3429_errors;
					return __jule_func_result;;
				};
				_3213_tables = jule::alloc_for_append(_3213_tables,1);_3213_tables.__push(_3418_table);;
			}
			_iter_next_1b7a13e01:;
			++it;
			goto _iter_begin_1b7a13e01;
		}
		_iter_end_1b7a13e01:;
	};
	jule::Ptr<_1d219b34e_Sema> _4113_sema = jule::new_ptr<_1d219b34e_Sema>(_1d219b34e_Sema{._field_flags=(*(_3065_flags)), ._field_meta=jule::new_ptr<_1d219a837_commonSemaMeta>()});;
	_1d21b804c_check(_4113_sema, &(_3213_tables));
	if ((_4113_sema.get()._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _4113_sema.get()._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1d2195bb7_Package> _5013_pkg = jule::new_ptr<_1d2195bb7_Package>(_1d2195bb7_Package{._field_Files=_4113_sema.get()._field_files});;
	__jule_func_result.__jule_result_arg0 = _5013_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log _1d22016a1_AnalyzePackage(jule::Slice<jule::Ptr<_1d05aa7a4_Ast>> _7423_files, jule::Trait<_1d21903cb_Importer> _7442_importer, jule::I64 _7462_flags) {
	__jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	if ((_7423_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1d2195bb7_Package> _7814_package;;
	jule::Slice<_22ba3c6bd_Log> _7827_logs;;
	({
		__jule_tuple_x_1d2195bb7_Package__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d22012b6_analyzePackage(&(_7423_files), &(_7442_importer), &(_7462_flags));
		_7814_package = __jule_assign_result.__jule_result_arg0;
		_7827_logs = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0 = _7814_package;
	__jule_func_result.__jule_result_arg1 = _7827_logs;
	return __jule_func_result;;
}



inline jule::Ptr<_1d0626e6e_FnIns> _1d0640916_findBuiltinFn(jule::Str _2318_ident) {
	{
		auto &_match_expr{ _2318_ident };
		
		if (_match_expr == jule::Str("out", 3)) {
			_case_begin_1b7a1a0e4:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _2620_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0646ad7_builtinCallerOut), });;
				return _2620_f;;
			}
		}
		else if (_match_expr == jule::Str("outln", 5)) {
			_case_begin_1b7a1d05e:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _2920_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0646ec2_builtinCallerOutln), });;
				return _2920_f;;
			}
		}
		else if (_match_expr == jule::Str("new", 3)) {
			_case_begin_1b7a1d14c:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _3220_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d06475dd_builtinCallerNew), });;
				return _3220_f;;
			}
		}
		else if (_match_expr == jule::Str("panic", 5)) {
			_case_begin_1b7a1d1b3:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _3520_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d23e14ea_builtinCallerPanic), });;
				return _3520_f;;
			}
		}
		else if (_match_expr == jule::Str("make", 4)) {
			_case_begin_1b7a1cb96:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _3820_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d23e18d5_builtinCallerMake), });;
				return _3820_f;;
			}
		}
		else if (_match_expr == jule::Str("append", 6)) {
			_case_begin_1b7a1cc0c:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _4120_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d23e1cc0_builtinCallerAppend), });;
				return _4120_f;;
			}
		}
		else if (_match_expr == jule::Str("copy", 4)) {
			_case_begin_1b7a1cc84:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _4420_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d23e2ac3_builtinCallerCopy), });;
				return _4420_f;;
			}
		}
		else if (_match_expr == jule::Str("len", 3)) {
			_case_begin_1b7a1cd0b:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _4720_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d23e3cc2_builtinCallerLen), });;
				return _4720_f;;
			}
		}
		else if (_match_expr == jule::Str("cap", 3)) {
			_case_begin_1b7a1d23a:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _5020_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d23e483e_builtinCallerCap), });;
				return _5020_f;;
			}
		}
		else if (_match_expr == jule::Str("delete", 6)) {
			_case_begin_1b7a1d2b2:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _5320_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0650e65_builtinCallerDelete), });;
				return _5320_f;;
			}
		}
		else if (_match_expr == jule::Str("clone", 5)) {
			_case_begin_1b7a1d339:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _5620_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d06512b7_builtinCallerClone), });;
				return _5620_f;;
			}
		}
		else if (_match_expr == jule::Str("assert", 6)) {
			_case_begin_1b7a1d3b1:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _5920_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d06516a2_builtinCallerAssert), });;
				return _5920_f;;
			}
		}
		else {
			_case_begin_1b7a1ca42:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a1c954:;
	};
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d0640c02_primTypeAlias(jule::Ptr<_1d21d1d46_TypeKind>* _6623_k) {
	return jule::new_ptr<_1d21d10ed_TypeAlias>(_1d21d10ed_TypeAlias{._field_Public=true, ._field_Kind=jule::new_ptr<_1d21d8be9_TypeSymbol>(_1d21d8be9_TypeSymbol{._field_Kind=(*(_6623_k))}), });;
}



inline jule::Ptr<_1d21d10ed_TypeAlias> _1d064451e_findBuiltinTypeAlias(jule::Str _9325_ident) {
	{
		auto &_match_expr{ _9325_ident };
		
		if (_match_expr == jule::Str("any", 3)) {
			_case_begin_1b7a242a7:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _9620_t = _1d0640c02_primTypeAlias(&(_1d064130c_primAny));;
				return _9620_t;;
			}
		}
		else if (_match_expr == jule::Str("str", 3)) {
			_case_begin_1b7a2562c:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _9920_t = _1d0640c02_primTypeAlias(&(_1d06415c6_primStr));;
				return _9920_t;;
			}
		}
		else if (_match_expr == jule::Str("bool", 4)) {
			_case_begin_1b7a25693:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _10220_t = _1d0640c02_primTypeAlias(&(_1d06418d4_primBool));;
				return _10220_t;;
			}
		}
		else if (_match_expr == jule::Str("uintptr", 7)) {
			_case_begin_1b7a251cb:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _10520_t = _1d0640c02_primTypeAlias(&(_1d0641b9d_primUintptr));;
				return _10520_t;;
			}
		}
		else if (_match_expr == jule::Str("uint", 4)) {
			_case_begin_1b7a25242:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _10820_t = _1d0640c02_primTypeAlias(&(_1d0641e67_primUint));;
				return _10820_t;;
			}
		}
		else if (_match_expr == jule::Str("int", 3)) {
			_case_begin_1b7a252a8:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _11120_t = _1d0640c02_primTypeAlias(&(_1d0642231_primInt));;
				return _11120_t;;
			}
		}
		else if (_match_expr == jule::Str("i8", 2)) {
			_case_begin_1b7a2531e:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _11420_t = _1d0640c02_primTypeAlias(&(_1d064260a_primI8));;
				return _11420_t;;
			}
		}
		else if (_match_expr == jule::Str("i16", 3)) {
			_case_begin_1b7a25709:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _11720_t = _1d0640c02_primTypeAlias(&(_1d06428c4_primI16));;
				return _11720_t;;
			}
		}
		else if (_match_expr == jule::Str("i64", 3)) {
			_case_begin_1b7a25770:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _12020_t = _1d0640c02_primTypeAlias(&(_1d0642e57_primI64));;
				return _12020_t;;
			}
		}
		else if (_match_expr == jule::Str("u16", 3)) {
			_case_begin_1b7a257d6:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _12320_t = _1d0640c02_primTypeAlias(&(_1d06434da_primU16));;
				return _12320_t;;
			}
		}
		else if (_match_expr == jule::Str("u32", 3)) {
			_case_begin_1b7a2585d:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _12620_t = _1d0640c02_primTypeAlias(&(_1d06437a4_primU32));;
				return _12620_t;;
			}
		}
		else if (_match_expr == jule::Str("u64", 3)) {
			_case_begin_1b7a258d5:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _12920_t = _1d0640c02_primTypeAlias(&(_1d0643a6d_primU64));;
				return _12920_t;;
			}
		}
		else if (_match_expr == jule::Str("f32", 3)) {
			_case_begin_1b7a2595c:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _13220_t = _1d0640c02_primTypeAlias(&(_1d0643ee1_primF32));;
				return _13220_t;;
			}
		}
		else if (_match_expr == jule::Str("f64", 3)) {
			_case_begin_1b7a259d4:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _13520_t = _1d0640c02_primTypeAlias(&(_1d06442aa_primF64));;
				return _13520_t;;
			}
		}
		else if (_match_expr == jule::Str("byte", 4) || _match_expr == jule::Str("u8", 2)) {
			_case_begin_1b7a25a5b:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _13820_t = _1d0640c02_primTypeAlias(&(_1d0643221_primU8));;
				return _13820_t;;
			}
		}
		else if (_match_expr == jule::Str("rune", 4) || _match_expr == jule::Str("i32", 3)) {
			_case_begin_1b7a25ad3:;
			{
				static jule::Ptr<_1d21d10ed_TypeAlias> _14120_t = _1d0640c02_primTypeAlias(&(_1d0642b8d_primI32));;
				return _14120_t;;
			}
		}
		else {
			_case_begin_1b7a24a5a:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a24a05:;
	};
}



inline jule::Any _1d064472d_findBuiltinDef(jule::Str _14819_ident) {
	jule::Ptr<_1d0626e6e_FnIns> _14913_f = _1d0640916_findBuiltinFn(_14819_ident);;
	if ((_14913_f != nullptr)) {
		return jule::Any(_14913_f, &__jule_any_type7);;
	};
	jule::Ptr<_1d21d10ed_TypeAlias> _15313_ta = _1d064451e_findBuiltinTypeAlias(_14819_ident);;
	if ((_15313_ta != nullptr)) {
		return jule::Any(_15313_ta, &__jule_any_type67);;
	};
	return nullptr;;
}



inline jule::Any _1d06449c5_findBuiltinDefStdDebug(jule::Str _16027_ident) {
	{
		auto &_match_expr{ _16027_ident };
		
		if (_match_expr == jule::Str("Out", 3)) {
			_case_begin_1b7a2ed0c:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _16320_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0654d6a_builtinCallerStdDebugOut), });;
				return jule::Any(_16320_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Outln", 5)) {
			_case_begin_1b7a2ed73:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _16620_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0655255_builtinCallerStdDebugOutln), });;
				return jule::Any(_16620_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b7a2e47c:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a2e38e:;
	};
}



inline jule::Any _1d0644c6c_findBuiltinDefStdMem(jule::Str _17325_ident) {
	{
		auto &_match_expr{ _17325_ident };
		
		if (_match_expr == jule::Str("SizeOf", 6)) {
			_case_begin_1b7a3154a:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _17620_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0653792_builtinCallerStdMemSizeOf), });;
				return jule::Any(_17620_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("AlignOf", 7)) {
			_case_begin_1b7a315b1:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _17920_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0653bb0_builtinCallerStdMemAlignOf), });;
				return jule::Any(_17920_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Free", 4)) {
			_case_begin_1b7a3136e:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _18220_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d06540cd_builtinCallerStdMemFree), });;
				return jule::Any(_18220_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b7a3114e:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a2ee3e:;
	};
}



inline jule::Any _1d0645036_findBuiltinDefStdComptime(jule::Str _18930_ident) {
	{
		auto &_match_expr{ _18930_ident };
		
		if (_match_expr == jule::Str("TypeOf", 6)) {
			_case_begin_1b7a33629:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _19220_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0651aae_builtinCallerStdComptimeTypeOf), });;
				return jule::Any(_19220_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("ValueOf", 7)) {
			_case_begin_1b7a3344d:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _19520_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0651e99_builtinCallerStdComptimeValueOf), });;
				return jule::Any(_19520_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Range", 5)) {
			_case_begin_1b7a334b4:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _19820_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d065265e_builtinCallerStdComptimeRange), });;
				return jule::Any(_19820_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Line", 4)) {
			_case_begin_1b7a3352a:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _20120_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0652a7c_builtinCallerStdComptimeLine), });;
				return jule::Any(_20120_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("File", 4)) {
			_case_begin_1b7a2e823:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _20420_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0652e9a_builtinCallerStdComptimeFile), });;
				return jule::Any(_20420_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Files", 5)) {
			_case_begin_1b7a2e889:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _20720_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0653374_builtinCallerStdComptimeFiles), });;
				return jule::Any(_20720_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b7a3322d:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a3167c:;
	};
}



inline jule::Any _1d06453dd_findBuiltinDefStdJuleIntegrated(jule::Str _21436_ident) {
	{
		auto &_match_expr{ _21436_ident };
		
		if (_match_expr == jule::Str("ToStr", 5)) {
			_case_begin_1b7a372cb:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _21720_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d065450c_builtinCallerStdJuleIntegratedToStr), });;
				return jule::Any(_21720_f, &__jule_any_type7);;
			}
		}
		else if (_match_expr == jule::Str("Emit", 4)) {
			_case_begin_1b7a37342:;
			{
				static jule::Ptr<_1d0626e6e_FnIns> _22020_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_Decl=jule::new_ptr<_1d06242bd_Fn>(_1d06242bd_Fn{._field_Generics=jule::Slice<jule::Ptr<_1d05eb509_GenericDecl>>::alloc(1LL, 1LL), }), ._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d065492a_builtinCallerStdJuleIntegratedEmit), });;
				return jule::Any(_22020_f, &__jule_any_type7);;
			}
		}
		else {
			_case_begin_1b7a36c37:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a36de1:;
	};
}



inline jule::Any _1d06456b8_findPackageBuiltinDef(jule::Str _23226_link_path, jule::Str _23242_ident) {
	{
		auto &_match_expr{ _23226_link_path };
		
		if (_match_expr == jule::Str("std::comptime", 13)) {
			_case_begin_1b7a3de1a:;
			{
				return _1d0645036_findBuiltinDefStdComptime(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::debug", 10)) {
			_case_begin_1b7a3de81:;
			{
				return _1d06449c5_findBuiltinDefStdDebug(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::mem", 8)) {
			_case_begin_1b7a3dc3e:;
			{
				return _1d0644c6c_findBuiltinDefStdMem(_23242_ident);;
			}
		}
		else if (_match_expr == jule::Str("std::jule::integrated", 21)) {
			_case_begin_1b7a3dca5:;
			{
				return _1d06453dd_findBuiltinDefStdJuleIntegrated(_23242_ident);;
			}
		}
		else {
			_case_begin_1b7a33706:;
			{
				return nullptr;;
			}
		}
		_match_end_1b7a3c28c:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0645ac5_builtinCallerCommonPlain(jule::Ptr<_1d040a813_Eval>* _24734_e, jule::Ptr<_1d05e7604_FnCallExpr>* _24749_fc, jule::Ptr<_1d0408c95_Data>* _24771_d) {
	jule::Ptr<_1d0626e6e_FnIns> _24813_f = _1d21d5751_Fn((*(_24771_d)).get()._field_Kind.ptr());;
	_1d03ea968_fnCallArgChecker _25013_fcac = _1d03ea968_fnCallArgChecker{._field_e=(*(_24734_e)), ._field_args=(*(_24749_fc)).get()._field_Args, ._field_errorToken=(*(_24749_fc)).get()._field_Token, ._field_f=_24813_f, ._field_dynamicAnnotation=false, };;
	if ((!(_1d03ecd33_check(&_25013_fcac)))) {
		return nullptr;;
	};
	jule::Ptr<_1d0617eb5_FnCallExprModel> _26113_model = jule::new_ptr<_1d0617eb5_FnCallExprModel>(_1d0617eb5_FnCallExprModel{._field_Token=(*(_24749_fc)).get()._field_Token, ._field_Func=_24813_f, ._field_Expr=(*(_24771_d)).get()._field_Model, ._field_Args=_25013_fcac._field_argModels, });;
	if ((_24813_f.get()._field_Result == nullptr)) {
		(*(_24771_d))=_1d21cceda_buildVoidData();
	} else {
		(*(_24771_d))=jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_24813_f.get()._field_Result, });
	};
	(*(_24771_d)).get()._field_Model=jule::Any(_26113_model, &__jule_any_type35);
	return (*(_24771_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0645ec1_builtinCallerCommon(jule::Ptr<_1d040a813_Eval>* _28029_e, jule::Ptr<_1d05e7604_FnCallExpr>* _28044_fc, jule::Ptr<_1d0408c95_Data>* _28066_d) {
	return _1d0645ac5_builtinCallerCommonPlain(_28029_e, _28044_fc, _28066_d);;
}



inline jule::Ptr<_1d0408c95_Data> _1d06463ab_builtinCallerCommonMut(jule::Ptr<_1d040a813_Eval>* _28432_e, jule::Ptr<_1d05e7604_FnCallExpr>* _28447_fc, jule::Ptr<_1d0408c95_Data>* _28469_d) {
	if ((!((*(_28469_d)).get()._field_Mutable))) {
		_1d040ad1e_pushErr((*(_28432_e)).ptr(), (*(_28447_fc)).get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	return _1d0645ec1_builtinCallerCommon(_28432_e, _28447_fc, _28469_d);;
}



inline jule::Ptr<_1d0408c95_Data> _1d06466ec_builtinCallerError(jule::Ptr<_1d040a813_Eval>* _29128_e, jule::Ptr<_1d05e7604_FnCallExpr>* _29143_fc) {
	if (((*(_29143_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("err", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_29143_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("error", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _29913_expr = _1d01dac53_evalExpr((*(_29128_e)), (*(_29143_fc)).get()._field_Args[0LL]);;
	if ((_29913_expr == nullptr)) {
		return nullptr;;
	};
	if (_1d0409180_IsNil(_29913_expr.ptr())) {
		_1d040ad1e_pushErr((*(_29128_e)).ptr(), (*(_29143_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("you cannot call error function with nil", 39), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0408c95_Data> _30813_d = _1d21cceda_buildVoidData();;
	_30813_d.get()._field_Model=jule::Any(jule::new_ptr<_1d062042e_BuiltinErrorCallExprModel>(_1d062042e_BuiltinErrorCallExprModel{._field_Err=_29913_expr}), &__jule_any_type23);
	return _30813_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0646ad7_builtinCallerOut(jule::Ptr<_1d040a813_Eval>* _31326_e, jule::Ptr<_1d05e7604_FnCallExpr>* _31341_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_31341_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("v", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_31341_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("out", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _32213_expr = _1d01dac53_evalExpr((*(_31326_e)), (*(_31341_fc)).get()._field_Args[0LL]);;
	if ((_32213_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d21ec1b3_isBuiltinStrConvertable(&(_32213_expr.get()._field_Kind))))) {
		_1d040ad1e_pushErr((*(_31326_e)).ptr(), (*(_31341_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _33213_d = _1d21cceda_buildVoidData();;
	_33213_d.get()._field_Model=jule::Any(jule::new_ptr<_1d061c0b8_BuiltinOutCallExprModel>(_1d061c0b8_BuiltinOutCallExprModel{._field_Expr=_32213_expr.get()._field_Model, }), &__jule_any_type28);
	return _33213_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0646ec2_builtinCallerOutln(jule::Ptr<_1d040a813_Eval>* _33728_e, jule::Ptr<_1d05e7604_FnCallExpr>* _33743_fc, jule::Ptr<_1d0408c95_Data>* _33765_d) {
	(*(_33765_d))=_1d0646ad7_builtinCallerOut(_33728_e, _33743_fc, _33765_d);
	if (((*(_33765_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_33765_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061c4a3_BuiltinOutlnCallExprModel>(_1d061c4a3_BuiltinOutlnCallExprModel{._field_Expr=(*(_33765_d)).get()._field_Model.cast_ptr<_1d061c0b8_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Expr, }), &__jule_any_type29);
	return (*(_33765_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d06475dd_builtinCallerNew(jule::Ptr<_1d040a813_Eval>* _34926_e, jule::Ptr<_1d05e7604_FnCallExpr>* _34941_fc, jule::Ptr<_1d0408c95_Data>* _34963_d) {
	if (((*(_34941_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_34941_fc)).get()._field_Args.len() > 2LL)) {
		_1d040ad1e_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("new", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _35813_t = _1d0426598_evalExprKind((*(_34926_e)), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_35813_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_35813_t.get()._field_Decl))) {
		_1d040ad1e_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((!(_1d21ebb52_isValidForSptrType(&(_35813_t.get()._field_Kind))))) {
		jule::Ptr<_1d0611bd4_StructIns> _36917_s = _1d21d59b5_Struct(_35813_t.get()._field_Kind.ptr());;
		if ((((_36917_s != nullptr) && (_36917_s.get()._field_Decl != nullptr)) && _36917_s.get()._field_Decl.get()._field_Binded)) {
			_1d040ad1e_pushErr((*(_34926_e)).ptr(), (*(_34941_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("binded structures cannot supports reference counting", 52), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	(*(_34963_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21dccec_Sptr>(_1d21dccec_Sptr{._field_Elem=_35813_t.get()._field_Kind}), 21)});
	if (((*(_34941_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1d21d1d46_TypeKind> _38317_old = (*(_34926_e)).get()._field_prefix;;
		(*(_34926_e)).get()._field_prefix=_35813_t.get()._field_Kind;
		jule::Ptr<_1d0408c95_Data> _38617_init = _1d01dac53_evalExpr((*(_34926_e)), (*(_34941_fc)).get()._field_Args[1LL]);;
		(*(_34926_e)).get()._field_prefix=_38317_old;
		if ((_38617_init != nullptr)) {
			jule::Ptr<_22be1281d_Token> _39121_token = (*(_34941_fc)).get()._field_Args[1LL].get()._field_Token;;
			;
			_1d21a8dc8_checkValidityForInitExpr((*(_34926_e)).get()._field_s, (!((*(_34926_e)).get()._field_immutable)), false, &(_35813_t.get()._field_Kind), &(_38617_init), &(_39121_token));
			_1d21a5eb3_checkAssignType((*(_34926_e)).get()._field_s, false, &(_35813_t.get()._field_Kind), &(_38617_init), _39121_token);
			(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061cbac_BuiltinNewCallExprModel>(_1d061cbac_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, ._field_Init=_38617_init.get()._field_Model}), &__jule_any_type116);
		};
	} else {
		(*(_34963_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061cbac_BuiltinNewCallExprModel>(_1d061cbac_BuiltinNewCallExprModel{._field_Kind=_35813_t.get()._field_Kind, }), &__jule_any_type116);
	};
	return (*(_34963_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e14ea_builtinCallerPanic(jule::Ptr<_1d040a813_Eval>* _41128_e, jule::Ptr<_1d05e7604_FnCallExpr>* _41143_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_41143_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("message", 7), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_41143_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("panic", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _42013_expr = _1d01dac53_evalExpr((*(_41128_e)), (*(_41143_fc)).get()._field_Args[0LL]);;
	if ((_42013_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1d21d4563_Prim(_42013_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1d21dc79c_IsStr(_1d21d4563_Prim(_42013_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1d040ad1e_pushErr((*(_41128_e)).ptr(), (*(_41143_fc)).get()._field_Token, jule::Str("panic function only accepts strings", 35), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0408c95_Data> _42913_d = _1d21cceda_buildVoidData();;
	_42913_d.get()._field_Model=jule::Any(jule::new_ptr<_1d061d097_BuiltinPanicCallExprModel>(_1d061d097_BuiltinPanicCallExprModel{._field_Token=(*(_41143_fc)).get()._field_Token, ._field_Expr=_42013_expr.get()._field_Model}), &__jule_any_type30);
	return _42913_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e18d5_builtinCallerMake(jule::Ptr<_1d040a813_Eval>* _43727_e, jule::Ptr<_1d05e7604_FnCallExpr>* _43742_fc, jule::Ptr<_1d0408c95_Data>* _43764_d) {
	if (((*(_43742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_43742_fc)).get()._field_Args.len() == 1LL)) {
			_1d040ad1e_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("size", 4), &__jule_any_type5)}));
			return nullptr;;
		};
		_1d040ad1e_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type, size", 10), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _44713_t = _1d0426598_evalExprKind((*(_43727_e)), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_44713_t == nullptr)) {
		return nullptr;;
	};
	if ((!(_44713_t.get()._field_Decl))) {
		_1d040ad1e_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_43742_fc)).get()._field_Args.len() > 3LL)) {
		_1d040ad1e_pushErr((*(_43727_e)).ptr(), (*(_43742_fc)).get()._field_Args[3LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("make", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	(*(_43764_d)).get()._field_Kind=_44713_t.get()._field_Kind;
	jule::Ptr<_1d0408c95_Data> _46313_lenExpr = _1d01dac53_evalExpr(_1d21a56aa_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[1LL]);;
	if ((_46313_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1d0414410_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_46313_lenExpr), (*(_43742_fc)).get()._field_Args[1LL].get()._field_Token);
	jule::Ptr<_1d061da04_BuiltinMakeCallExprModel> _47013_model = jule::new_ptr<_1d061da04_BuiltinMakeCallExprModel>(_1d061da04_BuiltinMakeCallExprModel{._field_Kind=_44713_t.get()._field_Kind, ._field_Len=_46313_lenExpr.get()._field_Model, });;
	(*(_43764_d)).get()._field_Model=jule::Any(_47013_model, &__jule_any_type117);
	if (((*(_43742_fc)).get()._field_Args.len() == 3LL)) {
		jule::Ptr<_1d0408c95_Data> _47617_capExpr = _1d01dac53_evalExpr(_1d21a56aa_evalp((*(_43727_e)).get()._field_s, (*(_43727_e)).get()._field_lookup, _44713_t.get()._field_Kind), (*(_43742_fc)).get()._field_Args[2LL]);;
		if ((_47617_capExpr == nullptr)) {
			return (*(_43764_d));;
		};
		_1d0414410_checkIntegerIndexingByData((*(_43727_e)).ptr(), &(_47617_capExpr), (*(_43742_fc)).get()._field_Args[2LL].get()._field_Token);
		_47013_model.get()._field_Cap=_47617_capExpr.get()._field_Model;
	};
	return (*(_43764_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e1cc0_builtinCallerAppend(jule::Ptr<_1d040a813_Eval>* _48629_e, jule::Ptr<_1d05e7604_FnCallExpr>* _48644_fc, jule::Ptr<_1d0408c95_Data>* _48666_d) {
	if (((*(_48644_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_48644_fc)).get()._field_Args.len() == 1LL)) {
			_1d040ad1e_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1d040ad1e_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _49613_t = _1d01dac53_evalExpr((*(_48629_e)), (*(_48644_fc)).get()._field_Args[0LL]);;
	if ((_49613_t == nullptr)) {
		return nullptr;;
	};
	if ((_1d21d54dc_Slc(_49613_t.get()._field_Kind.ptr()) == nullptr)) {
		_1d040ad1e_pushErr((*(_48629_e)).ptr(), (*(_48644_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _50613_f = jule::new_ptr<_1d0626e6e_FnIns>(_1d0626e6e_FnIns{._field_Params=jule::Slice<jule::Ptr<_1d06260a0_ParamIns>>::make({jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Mutable=true, }), ._field_Kind=_49613_t.get()._field_Kind}),jule::new_ptr<_1d06260a0_ParamIns>(_1d06260a0_ParamIns{._field_Decl=jule::new_ptr<_1d0622981_Param>(_1d0622981_Param{._field_Mutable=true, ._field_Variadic=true, }), ._field_Kind=_1d21d54dc_Slc(_49613_t.get()._field_Kind.ptr()).get()._field_Elem})}), ._field_Result=_49613_t.get()._field_Kind, ._field_caller=jule::Fn<jule::Ptr<_1d0408c95_Data>(jule::Ptr<_1d040a813_Eval>*,jule::Ptr<_1d05e7604_FnCallExpr>*,jule::Ptr<_1d0408c95_Data>*)>(_1d0645ac5_builtinCallerCommonPlain), });;
	(*(_48666_d)).get()._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(_50613_f, 1)});
	(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061b381_CommonIdentExprModel>(_1d061b381_CommonIdentExprModel{._field_Ident=jule::Str("append", 6)}), &__jule_any_type72);
	(*(_48666_d))=_1d0645ac5_builtinCallerCommonPlain(_48629_e, _48644_fc, _48666_d);
	if (((*(_48666_d)) != nullptr)) {
		jule::Ptr<_1d0617eb5_FnCallExprModel> _53417_model = (*(_48666_d)).get()._field_Model.cast_ptr<_1d0617eb5_FnCallExprModel>(&__jule_any_type35);;
		(*(_48666_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061ddde_BuiltinAppendCallExprModel>(_1d061ddde_BuiltinAppendCallExprModel{._field_Dest=_53417_model.get()._field_Args[0LL], ._field_Elements=_53417_model.get()._field_Args[1LL]}), &__jule_any_type26);
	};
	return (*(_48666_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e2254_callerCopySlice(jule::Ptr<_1d0408c95_Data>* _54325_dest, jule::Ptr<_1d040a813_Eval>* _54343_e, jule::Ptr<_1d05e7604_FnCallExpr>* _54358_fc, jule::Ptr<_1d0408c95_Data>* _54380_d) {
	if ((!((*(_54325_dest)).get()._field_Mutable))) {
		_1d040ad1e_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0408c95_Data> _54813_src = _1d01dac53_evalExpr((*(_54343_e)), (*(_54358_fc)).get()._field_Args[1LL]);;
	if ((_54813_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d21dd759_Slc> _55213_slc = _1d21d54dc_Slc(_54813_src.get()._field_Kind.ptr());;
	if ((_55213_slc != nullptr)) {
		if (((!(_54813_src.get()._field_Mutable)) && _1d21d35d9_Mutable(_55213_slc.get()._field_Elem.ptr()))) {
			_1d040ad1e_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
		};
		if ((!(_1d21d2550_Equal((*(_54325_dest)).get()._field_Kind, _54813_src.get()._field_Kind)))) {
			_1d040ad1e_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	} else {
		jule::Ptr<_1d21d9568_Prim> _56213_destPrim = _1d21d4563_Prim(_1d21d54dc_Slc((*(_54325_dest)).get()._field_Kind.ptr()).get()._field_Elem.ptr());;
		jule::Ptr<_1d21d9568_Prim> _56313_prim = _1d21d4563_Prim(_54813_src.get()._field_Kind.ptr());;
		if (((((_56213_destPrim == nullptr) || (_56313_prim == nullptr)) || (!(_1d21dc79c_IsStr(_56313_prim.ptr())))) || (!(_1d21dad72_IsU8(_56213_destPrim.ptr()))))) {
			_1d040ad1e_pushErr((*(_54343_e)).ptr(), (*(_54358_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_54325_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_54813_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
		};
	};
	(*(_54380_d)).get()._field_Kind=_1d0403388_lenKind();
	(*(_54380_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d0620044_BuiltinCopyCallExprModel>(_1d0620044_BuiltinCopyCallExprModel{._field_Dest=(*(_54325_dest)), ._field_Src=_54813_src}), &__jule_any_type32);
	return (*(_54380_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e26d8_callerCopyStr(jule::Ptr<_1d0408c95_Data>* _57723_dest, jule::Ptr<_1d040a813_Eval>* _57741_e, jule::Ptr<_1d05e7604_FnCallExpr>* _57756_fc, jule::Ptr<_1d0408c95_Data>* _57778_d) {
	if ((!((*(_57723_dest)).get()._field_Mutable))) {
		_1d040ad1e_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0408c95_Data> _58213_src = _1d01dac53_evalExpr((*(_57741_e)), (*(_57756_fc)).get()._field_Args[1LL]);;
	if ((_58213_src == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1d21d4563_Prim(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a77ea9:;
			{
				if (_1d21dc79c_IsStr(_1d21d4563_Prim(_58213_src.get()._field_Kind.ptr()).ptr())) {
					goto _julec_label_end;
				};
			}
		}
		else if ((_1d21d54dc_Slc(_58213_src.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a78020:;
			{
				jule::Ptr<_1d21dd759_Slc> _59217_slc = _1d21d54dc_Slc(_58213_src.get()._field_Kind.ptr());;
				if (((_1d21d4563_Prim(_59217_slc.get()._field_Elem.ptr()) != nullptr) && _1d21dad72_IsU8(_1d21d4563_Prim(_59217_slc.get()._field_Elem.ptr()).ptr()))) {
					goto _julec_label_end;
				};
			}
		}
		_match_end_1b7a78240:;
	};
	_1d040ad1e_pushErr((*(_57741_e)).ptr(), (*(_57756_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str((*(_57723_dest)).get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(_1d21d2242_Str(_58213_src.get()._field_Kind.ptr()), &__jule_any_type5)}));
	_julec_label_end:;
	(*(_57778_d)).get()._field_Kind=_1d0403388_lenKind();
	(*(_57778_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d0620044_BuiltinCopyCallExprModel>(_1d0620044_BuiltinCopyCallExprModel{._field_Dest=(*(_57723_dest)), ._field_Src=_58213_src}), &__jule_any_type32);
	return (*(_57778_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e2ac3_builtinCallerCopy(jule::Ptr<_1d040a813_Eval>* _60727_e, jule::Ptr<_1d05e7604_FnCallExpr>* _60742_fc, jule::Ptr<_1d0408c95_Data>* _60764_d) {
	if (((*(_60742_fc)).get()._field_Args.len() < 2LL)) {
		if (((*(_60742_fc)).get()._field_Args.len() == 1LL)) {
			_1d040ad1e_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src", 3), &__jule_any_type5)}));
			return nullptr;;
		};
		_1d040ad1e_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("src, values", 11), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_60742_fc)).get()._field_Args.len() > 2LL)) {
		_1d040ad1e_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("copy", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _62013_dest = _1d01dac53_evalExpr((*(_60727_e)), (*(_60742_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_62013_dest == nullptr)) {
			_case_begin_1b7a81699:;
			{
				return nullptr;;
			}
		}
		else if ((_1d21d54dc_Slc(_62013_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a82139:;
			{
				return _1d23e2254_callerCopySlice(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else if (((_1d21d4563_Prim(_62013_dest.get()._field_Kind.ptr()) != nullptr) && _1d21dc79c_IsStr(_1d21d4563_Prim(_62013_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b7a821a0:;
			{
				return _1d23e26d8_callerCopyStr(&(_62013_dest), _60727_e, _60742_fc, _60764_d);;
			}
		}
		else {
			_case_begin_1b7a81358:;
			{
				_1d040ad1e_pushErr((*(_60727_e)).ptr(), (*(_60742_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid type", 12), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7a7ed90:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d23e2e14_callerLenSlice(jule::Ptr<_1d0408c95_Data>* _63424_expr, jule::Ptr<_1d0408c95_Data>* _63442_d) {
	(*(_63442_d)).get()._field_Kind=_1d0403388_lenKind();
	(*(_63442_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061e20d_BuiltinLenCallExprModel>(_1d061e20d_BuiltinLenCallExprModel{._field_Expr=(*(_63424_expr))}), &__jule_any_type118);
	return (*(_63442_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e3255_callerLenMap(jule::Ptr<_1d0408c95_Data>* _64222_expr, jule::Ptr<_1d0408c95_Data>* _64240_d) {
	(*(_64240_d)).get()._field_Kind=_1d0403388_lenKind();
	(*(_64240_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061e20d_BuiltinLenCallExprModel>(_1d061e20d_BuiltinLenCallExprModel{._field_Expr=(*(_64222_expr))}), &__jule_any_type118);
	return (*(_64240_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e3596_callerLenArr(jule::Ptr<_1d0408c95_Data>* _65022_expr, jule::Ptr<_1d0408c95_Data>* _65040_d) {
	(*(_65040_d)).get()._field_Kind=_1d0403388_lenKind();
	(*(_65040_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d5278_Arr((*(_65022_expr)).get()._field_Kind.ptr()).get()._field_N)));
	(*(_65040_d)).get()._field_Model=jule::Any((*(_65040_d)).get()._field_Constant, &__jule_any_type19);
	return (*(_65040_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e38d7_callerLenStr(jule::Ptr<_1d0408c95_Data>* _65722_expr, jule::Ptr<_1d0408c95_Data>* _65740_d) {
	(*(_65740_d)).get()._field_Kind=_1d0403388_lenKind();
	if (_1d0409658_IsConst((*(_65722_expr)).ptr())) {
		(*(_65740_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e76e7d08_ReadStr((*(_65722_expr)).get()._field_Constant.ptr()).len())));
		(*(_65740_d)).get()._field_Model=jule::Any((*(_65740_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_65740_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061e20d_BuiltinLenCallExprModel>(_1d061e20d_BuiltinLenCallExprModel{._field_Expr=(*(_65722_expr))}), &__jule_any_type118);
	};
	return (*(_65740_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e3cc2_builtinCallerLen(jule::Ptr<_1d040a813_Eval>* _67026_e, jule::Ptr<_1d05e7604_FnCallExpr>* _67041_fc, jule::Ptr<_1d0408c95_Data>* _67063_d) {
	if (((*(_67041_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_67026_e)).ptr(), (*(_67041_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_67041_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_67026_e)).ptr(), (*(_67041_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("len", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _67813_dest = _1d01da3c3_evalExpr1((*(_67026_e)), (*(_67041_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_67813_dest == nullptr)) {
			_case_begin_1b7a8a917:;
			{
				return nullptr;;
			}
		}
		else if ((_1d21d54dc_Slc(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8b3a7:;
			{
				return _1d23e2e14_callerLenSlice(&(_67813_dest), _67063_d);;
			}
		}
		else if ((_1d21d5278_Arr(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8b41d:;
			{
				return _1d23e3596_callerLenArr(&(_67813_dest), _67063_d);;
			}
		}
		else if ((_1d21d5e8d_Map(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8b242:;
			{
				return _1d23e3255_callerLenMap(&(_67813_dest), _67063_d);;
			}
		}
		else if (((_1d21d4563_Prim(_67813_dest.get()._field_Kind.ptr()) != nullptr) && _1d21dc79c_IsStr(_1d21d4563_Prim(_67813_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b7a8b2a8:;
			{
				return _1d23e38d7_callerLenStr(&(_67813_dest), _67063_d);;
			}
		}
		else if ((_1d21d66ca_comptimeStructFields(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8a63c:;
			{
				(*(_67063_d)).get()._field_Kind=_1d0403388_lenKind();
				(*(_67063_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d66ca_comptimeStructFields(_67813_dest.get()._field_Kind.ptr()).get()._field_fields.len())));
				(*(_67063_d)).get()._field_Model=jule::Any((*(_67063_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_67063_d));;
			}
		}
		else if ((_1d21d6ba3_comptimeEnumFields(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8a6a3:;
			{
				(*(_67063_d)).get()._field_Kind=_1d0403388_lenKind();
				(*(_67063_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d6ba3_comptimeEnumFields(_67813_dest.get()._field_Kind.ptr()).get()._field_fields.len())));
				(*(_67063_d)).get()._field_Model=jule::Any((*(_67063_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_67063_d));;
			}
		}
		else if ((_1d21d78b8_comptimeTypeInfos(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8a719:;
			{
				(*(_67063_d)).get()._field_Kind=_1d0403388_lenKind();
				(*(_67063_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d78b8_comptimeTypeInfos(_67813_dest.get()._field_Kind.ptr()).get()._field_types.len())));
				(*(_67063_d)).get()._field_Model=jule::Any((*(_67063_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_67063_d));;
			}
		}
		else if ((_1d21d717b_comptimeParams(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8a780:;
			{
				(*(_67063_d)).get()._field_Kind=_1d0403388_lenKind();
				(*(_67063_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d717b_comptimeParams(_67813_dest.get()._field_Kind.ptr()).get()._field_params.len())));
				(*(_67063_d)).get()._field_Model=jule::Any((*(_67063_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_67063_d));;
			}
		}
		else if ((_1d21d7d91_comptimeStatics(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8b484:;
			{
				(*(_67063_d)).get()._field_Kind=_1d0403388_lenKind();
				(*(_67063_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d7d91_comptimeStatics(_67813_dest.get()._field_Kind.ptr()).get()._field_fields.len())));
				(*(_67063_d)).get()._field_Model=jule::Any((*(_67063_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_67063_d));;
			}
		}
		else if ((_1d21d8842_comptimeFiles(_67813_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a8b4ea:;
			{
				(*(_67063_d)).get()._field_Kind=_1d0403388_lenKind();
				(*(_67063_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1d21d8842_comptimeFiles(_67813_dest.get()._field_Kind.ptr()).get()._field_files.len())));
				(*(_67063_d)).get()._field_Model=jule::Any((*(_67063_d)).get()._field_Constant, &__jule_any_type19);
				return (*(_67063_d));;
			}
		}
		else {
			_case_begin_1b7a8a5c6:;
			{
				_1d040ad1e_pushErr((*(_67026_e)).ptr(), (*(_67041_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7a8856e:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d23e4113_callerCapSlice(jule::Ptr<_1d0408c95_Data>* _72624_expr, jule::Ptr<_1d0408c95_Data>* _72642_d) {
	(*(_72642_d)).get()._field_Kind=_1d0403388_lenKind();
	(*(_72642_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061e52c_BuiltinCapCallExprModel>(_1d061e52c_BuiltinCapCallExprModel{._field_Expr=(*(_72624_expr))}), &__jule_any_type119);
	return (*(_72642_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e4454_callerCapStr(jule::Ptr<_1d0408c95_Data>* _73422_expr, jule::Ptr<_1d0408c95_Data>* _73440_d) {
	(*(_73440_d)).get()._field_Kind=_1d0403388_lenKind();
	if (_1d0409658_IsConst((*(_73422_expr)).ptr())) {
		(*(_73440_d)).get()._field_Constant=static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>(_1e76e7d08_ReadStr((*(_73422_expr)).get()._field_Constant.ptr()).cap())));
		(*(_73440_d)).get()._field_Model=jule::Any((*(_73440_d)).get()._field_Constant, &__jule_any_type19);
	} else {
		(*(_73440_d)).get()._field_Model=jule::Any(jule::new_ptr<_1d061e52c_BuiltinCapCallExprModel>(_1d061e52c_BuiltinCapCallExprModel{._field_Expr=(*(_73422_expr))}), &__jule_any_type119);
	};
	return (*(_73440_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d23e483e_builtinCallerCap(jule::Ptr<_1d040a813_Eval>* _74726_e, jule::Ptr<_1d05e7604_FnCallExpr>* _74741_fc, jule::Ptr<_1d0408c95_Data>* _74763_d) {
	if (((*(_74741_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_74726_e)).ptr(), (*(_74741_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("obj", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_74741_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_74726_e)).ptr(), (*(_74741_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("cap", 3), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _75513_dest = _1d01dac53_evalExpr((*(_74726_e)), (*(_74741_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_75513_dest == nullptr)) {
			_case_begin_1b7a9bce1:;
			{
				return nullptr;;
			}
		}
		else if (_75513_dest.get()._field_Decl) {
			_case_begin_1b7a9c781:;
			{
				_1d040ad1e_pushErr((*(_74726_e)).ptr(), (*(_74741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d21d54dc_Slc(_75513_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7a9c7e7:;
			{
				return _1d23e4113_callerCapSlice(&(_75513_dest), _74763_d);;
			}
		}
		else if (((_1d21d4563_Prim(_75513_dest.get()._field_Kind.ptr()) != nullptr) && _1d21dc79c_IsStr(_1d21d4563_Prim(_75513_dest.get()._field_Kind.ptr()).ptr()))) {
			_case_begin_1b7a9c61b:;
			{
				return _1d23e4454_callerCapStr(&(_75513_dest), _74763_d);;
			}
		}
		else {
			_case_begin_1b7a9b9a0:;
			{
				_1d040ad1e_pushErr((*(_74726_e)).ptr(), (*(_74741_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7a99948:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d23e4cc3_callerDeleteMap(jule::Ptr<_1d040a813_Eval>* _77225_e, jule::Ptr<_1d05e7604_FnCallExpr>* _77240_fc, jule::Ptr<_1d0408c95_Data>* _77262_expr, jule::Ptr<_1d0408c95_Data>* _77280_d) {
	if ((!((*(_77262_expr)).get()._field_Mutable))) {
		_1d040ad1e_pushErr((*(_77225_e)).ptr(), (*(_77240_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mutable operation cannot used with immutable data", 49), jule::Slice<jule::Any>());
	};
	(*(_77280_d))=_1d21cceda_buildVoidData();
	jule::Ptr<_1d061ebd1_BuiltinDeleteCallExprModel> _77713_model = jule::new_ptr<_1d061ebd1_BuiltinDeleteCallExprModel>(_1d061ebd1_BuiltinDeleteCallExprModel{._field_Dest=(*(_77262_expr)), });;
	if (((*(_77240_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1d0408c95_Data> _78117_key = _1d01dac53_evalExpr((*(_77225_e)), (*(_77240_fc)).get()._field_Args[1LL]);;
		{
			
			if ((_78117_key == nullptr)) {
				_case_begin_1b7aa3622:;
				{
					return nullptr;;
				}
			}
			else if (_78117_key.get()._field_Decl) {
				_case_begin_1b7aa2027:;
				{
					_1d040ad1e_pushErr((*(_77225_e)).ptr(), (*(_77240_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1b7aa1eb1:;
				{
					;
					jule::Ptr<_1d21d1d46_TypeKind> _79021_keyType = _1d21d5e8d_Map((*(_77262_expr)).get()._field_Kind.ptr()).get()._field_Key;;
					if ((!(_1d21a5eb3_checkAssignType((*(_77225_e)).get()._field_s, false, &(_79021_keyType), &(_78117_key), (*(_77240_fc)).get()._field_Args[1LL].get()._field_Token)))) {
						return nullptr;;
					};
				}
			}
			_match_end_1b7aa1e4a:;
		};
		_77713_model.get()._field_Key=_78117_key;
	};
	(*(_77280_d)).get()._field_Model=jule::Any(_77713_model, &__jule_any_type33);
	return (*(_77280_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0650e65_builtinCallerDelete(jule::Ptr<_1d040a813_Eval>* _80129_e, jule::Ptr<_1d05e7604_FnCallExpr>* _80144_fc, jule::Ptr<_1d0408c95_Data>* _80166_d) {
	if (((*(_80144_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_80129_e)).ptr(), (*(_80144_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("map", 3), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_80144_fc)).get()._field_Args.len() > 2LL)) {
		_1d040ad1e_pushErr((*(_80129_e)).ptr(), (*(_80144_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("delete", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _80913_dest = _1d01dac53_evalExpr((*(_80129_e)), (*(_80144_fc)).get()._field_Args[0LL]);;
	{
		
		if ((_80913_dest == nullptr)) {
			_case_begin_1b7aa7736:;
			{
				return nullptr;;
			}
		}
		else if (_80913_dest.get()._field_Decl) {
			_case_begin_1b7aa81c6:;
			{
				_1d040ad1e_pushErr((*(_80129_e)).ptr(), (*(_80144_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1d21d5e8d_Map(_80913_dest.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7aa823c:;
			{
				return _1d23e4cc3_callerDeleteMap(_80129_e, _80144_fc, &(_80913_dest), _80166_d);;
			}
		}
		else {
			_case_begin_1b7aa73e5:;
			{
				_1d040ad1e_pushErr((*(_80129_e)).ptr(), (*(_80144_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1b7aa538d:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d06512b7_builtinCallerClone(jule::Ptr<_1d040a813_Eval>* _82428_e, jule::Ptr<_1d05e7604_FnCallExpr>* _82443_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_82443_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_82428_e)).ptr(), (*(_82443_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_82443_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_82428_e)).ptr(), (*(_82443_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("clone", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _83313_d = _1d01dac53_evalExpr((*(_82428_e)), (*(_82443_fc)).get()._field_Args[0LL]);;
	if ((_83313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d21d408a_SupportsCloning(_83313_d.get()._field_Kind.ptr())))) {
		{
			
			if ((_1d21d54dc_Slc(_83313_d.get()._field_Kind.ptr()) != nullptr) || (_1d21d5e8d_Map(_83313_d.get()._field_Kind.ptr()) != nullptr) || (_1d21d5278_Arr(_83313_d.get()._field_Kind.ptr()) != nullptr) || (_1d21d47c7_Sptr(_83313_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b7aaca5a:;
				{
					{
						_1d040ad1e_pushErr((*(_82428_e)).ptr(), (*(_82443_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ has internally types which is not supports cloning", 57), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_83313_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
					};
				}
			}
			else if ((_1d21d59b5_Struct(_83313_d.get()._field_Kind.ptr()) != nullptr)) {
				_case_begin_1b7aac3b7:;
				{
					{
						_1d040ad1e_pushErr((*(_82428_e)).ptr(), (*(_82443_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not derives @", 23), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_83313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			else {
				_case_begin_1b7aac351:;
				{
					{
						_1d040ad1e_pushErr((*(_82428_e)).ptr(), (*(_82443_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is not support cloning", 29), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_83313_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Clone", 5), &__jule_any_type5)}));
					};
				}
			}
			_match_end_1b7aac2a7:;
		};
	};
	_83313_d.get()._field_Mutable=true;
	_83313_d.get()._field_Model=jule::Any(jule::new_ptr<_1d061c7c2_BuiltinCloneCallExprModel>(_1d061c7c2_BuiltinCloneCallExprModel{._field_Expr=_83313_d.get()._field_Model}), &__jule_any_type27);
	return _83313_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d06516a2_builtinCallerAssert(jule::Ptr<_1d040a813_Eval>* _86629_e, jule::Ptr<_1d05e7604_FnCallExpr>* _86644_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_86644_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_86629_e)).ptr(), (*(_86644_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_86644_fc)).get()._field_Args.len() > 2LL)) {
		_1d040ad1e_pushErr((*(_86629_e)).ptr(), (*(_86644_fc)).get()._field_Args[2LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("assert", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _87513_expr = _1d01dac53_evalExpr((*(_86629_e)), (*(_86644_fc)).get()._field_Args[0LL]);;
	if ((_87513_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1d21d4563_Prim(_87513_expr.get()._field_Kind.ptr()) == nullptr) || (!(_1d21dc538_IsBool(_1d21d4563_Prim(_87513_expr.get()._field_Kind.ptr()).ptr()))))) {
		_1d040ad1e_pushErr((*(_86629_e)).ptr(), (*(_86644_fc)).get()._field_Token, jule::Str("assertion requires boolean expression", 37), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d061d54d_BuiltinAssertCallExprModel> _88413_model = jule::new_ptr<_1d061d54d_BuiltinAssertCallExprModel>(_1d061d54d_BuiltinAssertCallExprModel{._field_Token=(*(_86644_fc)).get()._field_Token, ._field_Expr=_87513_expr.get()._field_Model, ._field_Log=jule::Str("assertion failed", 16)});;
	if (((*(_86644_fc)).get()._field_Args.len() == 2LL)) {
		jule::Ptr<_1d0408c95_Data> _89217_log = _1d01dac53_evalExpr((*(_86629_e)), (*(_86644_fc)).get()._field_Args[1LL]);;
		if ((_89217_log == nullptr)) {
			return nullptr;;
		};
		if ((((!(_1d0409658_IsConst(_89217_log.ptr()))) || (_1d21d4563_Prim(_89217_log.get()._field_Kind.ptr()) == nullptr)) || (!(_1d21dc79c_IsStr(_1d21d4563_Prim(_89217_log.get()._field_Kind.ptr()).ptr()))))) {
			_1d040ad1e_pushErr((*(_86629_e)).ptr(), (*(_86644_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("const str", 9), &__jule_any_type5),jule::Any(_1d21d2242_Str(_89217_log.get()._field_Kind.ptr()), &__jule_any_type5)}));
			return nullptr;;
		};
		_88413_model.get()._field_Log=_1e76e7d08_ReadStr(_89217_log.get()._field_Constant.ptr());
	};
	jule::Ptr<_1d0408c95_Data> _90513_d = _1d21cceda_buildVoidData();;
	_90513_d.get()._field_Model=jule::Any(_88413_model, &__jule_any_type31);
	return _90513_d;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0651aae_builtinCallerStdComptimeTypeOf(jule::Ptr<_1d040a813_Eval>* _91040_e, jule::Ptr<_1d05e7604_FnCallExpr>* _91055_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_91055_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_91040_e)).ptr(), (*(_91055_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_91055_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_91040_e)).ptr(), (*(_91055_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("TypeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _91913_d = _1d0426598_evalExprKind((*(_91040_e)), (*(_91055_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_91913_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d0626e6e_FnIns> _9239_f = _1d21d5751_Fn(_91913_d.get()._field_Kind.ptr());;
	if ((_9239_f != nullptr)) {
		if (_1d0628305_IsBuiltin(_9239_f.ptr())) {
			_1d040ad1e_pushErr((*(_91040_e)).ptr(), (*(_91055_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(jule::Str("<built-in fn>", 13), &__jule_any_type5)}));
			return nullptr;;
		};
		if ((_9239_f.get()._field_Generics.len() != _9239_f.get()._field_Decl.get()._field_Generics.len())) {
			_1d040ad1e_pushErr((*(_91040_e)).ptr(), (*(_91055_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1d0611bd4_StructIns> _9349_s = _1d21d59b5_Struct(_91913_d.get()._field_Kind.ptr());;
	if (((_9349_s != nullptr) && (_9349_s.get()._field_Generics.len() != _9349_s.get()._field_Decl.get()._field_Generics.len()))) {
		_1d040ad1e_pushErr((*(_91040_e)).ptr(), (*(_91055_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type has generics and used without instantiate", 46), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1d21d6466_comptime(_91913_d.get()._field_Kind.ptr())) {
		_1d040ad1e_pushErr((*(_91040_e)).ptr(), (*(_91055_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("comptime::TypeOf is not supports type @", 39), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_91913_d.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	return _1d216a8a1_buildComptimeTypeInfoData(&((*(_91040_e)).get()._field_s), &(_91913_d.get()._field_Kind));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0651e99_builtinCallerStdComptimeValueOf(jule::Ptr<_1d040a813_Eval>* _94641_e, jule::Ptr<_1d05e7604_FnCallExpr>* _94656_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_94656_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_94641_e)).ptr(), (*(_94656_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_94656_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_94641_e)).ptr(), (*(_94656_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ValueOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _95413_d = _1d01dac53_evalExpr((*(_94641_e)), (*(_94656_fc)).get()._field_Args[0LL]);;
	if ((_95413_d == nullptr)) {
		return nullptr;;
	};
	return _1d216abd1_buildComptimeValue(&(_95413_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind> _96118_kind) {
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d21504ac_comptimeRange>(_1d21504ac_comptimeRange{._field_kind=_96118_kind}), 5)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d065265e_builtinCallerStdComptimeRange(jule::Ptr<_1d040a813_Eval>* _97139_e, jule::Ptr<_1d05e7604_FnCallExpr>* _97154_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_97154_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_97154_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _98013_d = _1d0426598_evalExprKind((*(_97139_e)), (*(_97154_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_98013_d == nullptr)) {
		return nullptr;;
	};
	{
		
		if ((_1d21d66ca_comptimeStructFields(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7ac9428:;
			{
				return _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>(_1d21d66ca_comptimeStructFields(_98013_d.get()._field_Kind.ptr()), 0));;
			}
		}
		else if ((_1d21d6ba3_comptimeEnumFields(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7ac948e:;
			{
				return _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>(_1d21d6ba3_comptimeEnumFields(_98013_d.get()._field_Kind.ptr()), 2));;
			}
		}
		else if ((_1d21d78b8_comptimeTypeInfos(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7ac92a2:;
			{
				return _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>(_1d21d78b8_comptimeTypeInfos(_98013_d.get()._field_Kind.ptr()), 4));;
			}
		}
		else if ((_1d21d717b_comptimeParams(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7ac9318:;
			{
				return _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>(_1d21d717b_comptimeParams(_98013_d.get()._field_Kind.ptr()), 3));;
			}
		}
		else if ((_1d21d7d91_comptimeStatics(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7ac83a0:;
			{
				return _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>(_1d21d7d91_comptimeStatics(_98013_d.get()._field_Kind.ptr()), 1));;
			}
		}
		else if ((_1d21d8842_comptimeFiles(_98013_d.get()._field_Kind.ptr()) != nullptr)) {
			_case_begin_1b7ac8416:;
			{
				return _1d0652252_rangeData(jule::Trait<_1d21502d1_comptimeRangeKind>(_1d21d8842_comptimeFiles(_98013_d.get()._field_Kind.ptr()), 5));;
			}
		}
		else {
			_case_begin_1b7ac8603:;
			{
				_1d040ad1e_pushErr((*(_97139_e)).ptr(), (*(_97154_fc)).get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_98013_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("Range", 5), &__jule_any_type5)}));
				return nullptr;;
			}
		}
		_match_end_1b7ac8207:;
	};
}



inline jule::Ptr<_1d0408c95_Data> _1d0652a7c_builtinCallerStdComptimeLine(jule::Ptr<_1d040a813_Eval>* _100338_e, jule::Ptr<_1d05e7604_FnCallExpr>* _100353_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_100353_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_100338_e)).ptr(), (*(_100353_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Line", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1e76e5cc3_Const> _100713_constant = static__1e76e6246_NewI64(static_cast<jule::I64>(static_cast<jule::I64>((*(_100353_fc)).get()._field_Token.get()._field_Row)));;
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0642231_primInt, ._field_Model=jule::Any(_100713_constant, &__jule_any_type19), ._field_Constant=_100713_constant});;
}



inline jule::Ptr<_1d0408c95_Data> _1d0652e9a_builtinCallerStdComptimeFile(jule::Ptr<_1d040a813_Eval>* _101538_e, jule::Ptr<_1d05e7604_FnCallExpr>* _101553_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_101553_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_101538_e)).ptr(), (*(_101553_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("File", 4), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d2168816_comptimeFile>(_1d2168816_comptimeFile{._field_file=(*(_101538_e)).get()._field_s.get()._field_file}), 18)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d0653374_builtinCallerStdComptimeFiles(jule::Ptr<_1d040a813_Eval>* _102839_e, jule::Ptr<_1d05e7604_FnCallExpr>* _102854_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_102854_fc)).get()._field_Args.len() > 0LL)) {
		_1d040ad1e_pushErr((*(_102839_e)).ptr(), (*(_102854_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Files", 5), &__jule_any_type5)}));
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=jule::new_ptr<_1d21d1d46_TypeKind>(_1d21d1d46_TypeKind{._field_Kind=jule::Trait<_1d21d18d4_Kind>(jule::new_ptr<_1d216734d_comptimeFiles>(_1d216734d_comptimeFiles{._field_files=(*(_102839_e)).get()._field_s.get()._field_files}), 17)}), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d0653792_builtinCallerStdMemSizeOf(jule::Ptr<_1d040a813_Eval>* _104135_e, jule::Ptr<_1d05e7604_FnCallExpr>* _104150_fc, jule::Ptr<_1d0408c95_Data>* ) {
	jule::Ptr<_1d0408c95_Data> _104213_result = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0641e67_primUint, });;
	if (((*(_104150_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _104213_result;;
	};
	if (((*(_104150_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _105413_d = _1d0426598_evalExprKind((*(_104135_e)), (*(_104150_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_105413_d == nullptr)) {
		return _104213_result;;
	};
	if ((!(_1d21ed0d7_validTypeForXof(&(_105413_d.get()._field_Kind))))) {
		_1d040ad1e_pushErr((*(_104135_e)).ptr(), (*(_104150_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_105413_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("SizeOf", 6), &__jule_any_type5)}));
	};
	_104213_result.get()._field_Model=jule::Any(jule::new_ptr<_1d062072b_SizeofExprModel>(_1d062072b_SizeofExprModel{._field_Expr=_105413_d.get()._field_Model}), &__jule_any_type120);
	return _104213_result;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0653bb0_builtinCallerStdMemAlignOf(jule::Ptr<_1d040a813_Eval>* _106636_e, jule::Ptr<_1d05e7604_FnCallExpr>* _106651_fc, jule::Ptr<_1d0408c95_Data>* ) {
	jule::Ptr<_1d0408c95_Data> _106713_result = jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d0641e67_primUint, });;
	if (((*(_106651_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("type|expr", 9), &__jule_any_type5)}));
		return _106713_result;;
	};
	if (((*(_106651_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _107913_d = _1d0426598_evalExprKind((*(_106636_e)), (*(_106651_fc)).get()._field_Args[0LL].get()._field_Kind);;
	if ((_107913_d == nullptr)) {
		return _106713_result;;
	};
	if ((!(_1d21ed0d7_validTypeForXof(&(_107913_d.get()._field_Kind))))) {
		_1d040ad1e_pushErr((*(_106636_e)).ptr(), (*(_106651_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("type @ is invalid for function @", 32), jule::Slice<jule::Any>::make({jule::Any(_1d21d2242_Str(_107913_d.get()._field_Kind.ptr()), &__jule_any_type5),jule::Any(jule::Str("AlignOf", 7), &__jule_any_type5)}));
	};
	_106713_result.get()._field_Model=jule::Any(jule::new_ptr<_1d0620a17_AlignofExprModel>(_1d0620a17_AlignofExprModel{._field_Expr=_107913_d.get()._field_Model}), &__jule_any_type121);
	return _106713_result;;
}



inline jule::Ptr<_1d0408c95_Data> _1d06540cd_builtinCallerStdMemFree(jule::Ptr<_1d040a813_Eval>* _109133_e, jule::Ptr<_1d05e7604_FnCallExpr>* _109148_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_109148_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("h", 1), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_109148_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("Free", 4), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _110013_d = _1d01dac53_evalExpr((*(_109133_e)), (*(_109148_fc)).get()._field_Args[0LL]);;
	if ((_110013_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d21d3d26_PerformsRC(_110013_d.get()._field_Kind.ptr())))) {
		_1d040ad1e_pushErr((*(_109133_e)).ptr(), (*(_109148_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1d0408c95_Data> _110913_result = _1d21cceda_buildVoidData();;
	_110913_result.get()._field_Model=jule::Any(jule::new_ptr<_1d06217b5_FreeExprModel>(_1d06217b5_FreeExprModel{._field_Expr=_110013_d.get()._field_Model}), &__jule_any_type34);
	return _110913_result;;
}



inline jule::Ptr<_1d0408c95_Data> _1d065450c_builtinCallerStdJuleIntegratedToStr(jule::Ptr<_1d040a813_Eval>* _111445_e, jule::Ptr<_1d05e7604_FnCallExpr>* _111460_fc, jule::Ptr<_1d0408c95_Data>* ) {
	if (((*(_111460_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("expr", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((*(_111460_fc)).get()._field_Args.len() > 1LL)) {
		_1d040ad1e_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Args[1LL].get()._field_Token, jule::Str("argument overflow: passed more argument than expected to call @", 63), jule::Slice<jule::Any>::make({jule::Any(jule::Str("ToStr", 5), &__jule_any_type5)}));
	};
	jule::Ptr<_1d0408c95_Data> _112313_d = _1d01dac53_evalExpr((*(_111445_e)), (*(_111460_fc)).get()._field_Args[0LL]);;
	if ((_112313_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1d21ec1b3_isBuiltinStrConvertable(&(_112313_d.get()._field_Kind))))) {
		_1d040ad1e_pushErr((*(_111445_e)).ptr(), (*(_111460_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("invalid expression", 18), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1d0408c95_Data>(_1d0408c95_Data{._field_Kind=_1d06415c6_primStr, ._field_Model=jule::Any(jule::new_ptr<_1d0621111_IntegratedToStrExprModel>(_1d0621111_IntegratedToStrExprModel{._field_Expr=_112313_d.get()._field_Model}), &__jule_any_type122), });;
}



inline jule::Ptr<_1d0408c95_Data> _1d065492a_builtinCallerStdJuleIntegratedEmit(jule::Ptr<_1d040a813_Eval>* _114144_e, jule::Ptr<_1d05e7604_FnCallExpr>* _114159_fc, jule::Ptr<_1d0408c95_Data>* _114181_d) {
	if ((!(_1d040b759_isUnsafe((*(_114144_e)).ptr())))) {
		_1d040ad1e_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Token, jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54), jule::Slice<jule::Any>());
	};
	if (((*(_114159_fc)).get()._field_Args.len() < 1LL)) {
		_1d040ad1e_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Token, jule::Str("missing expression for @", 24), jule::Slice<jule::Any>::make({jule::Any(jule::Str("code", 4), &__jule_any_type5)}));
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _115113_argd = _1d01dac53_evalExpr((*(_114144_e)), (*(_114159_fc)).get()._field_Args[0LL]);;
	if ((_115113_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1d21d4563_Prim(_115113_argd.get()._field_Kind.ptr()) == nullptr) || (!(_1d21dc79c_IsStr(_1d21d4563_Prim(_115113_argd.get()._field_Kind.ptr()).ptr()))))) {
		_1d040ad1e_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("mismatched types: @ and @", 25), jule::Slice<jule::Any>::make({jule::Any(jule::Str("str", 3), &__jule_any_type5),jule::Any(_1d21d2242_Str(_115113_argd.get()._field_Kind.ptr()), &__jule_any_type5)}));
		return nullptr;;
	};
	if (((!(_1d0409658_IsConst(_115113_argd.ptr()))) || (!(_1e76ea1a1_IsStr(_115113_argd.get()._field_Constant.ptr()))))) {
		_1d040ad1e_pushErr((*(_114144_e)).ptr(), (*(_114159_fc)).get()._field_Args[0LL].get()._field_Token, jule::Str("expressions is not constant expression", 38), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1d0408c95_Data> _116613_r = _1d21cceda_buildVoidData();;
	jule::Ptr<_1d0626e6e_FnIns> _116813_f = _1d21d5751_Fn((*(_114181_d)).get()._field_Kind.ptr());;
	if ((_116813_f.get()._field_Generics.len() > 0LL)) {
		_116613_r.get()._field_Kind=_116813_f.get()._field_Generics[0LL].get()._field_Kind;
	};
	jule::Ptr<_1d06214c9_BackendEmitExprModel> _117313_model = jule::new_ptr<_1d06214c9_BackendEmitExprModel>(_1d06214c9_BackendEmitExprModel{._field_Code=_1e76e7d08_ReadStr(_115113_argd.get()._field_Constant.ptr()), });;
	if (((*(_114159_fc)).get()._field_Args.len() > 1LL)) {
		_117313_model.get()._field_Exprs=jule::Slice<jule::Any>::alloc(0LL, ((*(_114159_fc)).get()._field_Args.len() - 1LL), jule::Any(nullptr));
		{
			auto expr = (*(_114159_fc)).get()._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1b7aec46d:;
			if (it != expr_end) {
				jule::Ptr<_1d05e36dd_Expr> _117921_arg = *it;
				{
					_115113_argd=_1d04268a6_eval1((*(_114144_e)), _117921_arg);
					if ((_115113_argd == nullptr)) {
						return nullptr;;
					};
					_117313_model.get()._field_Exprs = jule::alloc_for_append(_117313_model.get()._field_Exprs,1);_117313_model.get()._field_Exprs.__push(_115113_argd.get()._field_Model);;
				}
				_iter_next_1b7aec46d:;
				++it;
				goto _iter_begin_1b7aec46d;
			}
			_iter_end_1b7aec46d:;
		};
	};
	_116613_r.get()._field_Model=jule::Any(_117313_model, &__jule_any_type25);
	return _116613_r;;
}



inline jule::Ptr<_1d0408c95_Data> _1d0654d6a_builtinCallerStdDebugOut(jule::Ptr<_1d040a813_Eval>* _119234_e, jule::Ptr<_1d05e7604_FnCallExpr>* _119249_fc, jule::Ptr<_1d0408c95_Data>* _119271_d) {
	(*(_119271_d))=_1d0646ad7_builtinCallerOut(_119234_e, _119249_fc, _119271_d);
	if (((*(_119271_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_119271_d)).get()._field_Model.cast_ptr<_1d061c0b8_BuiltinOutCallExprModel>(&__jule_any_type28).get()._field_Debug=true;
	return (*(_119271_d));;
}



inline jule::Ptr<_1d0408c95_Data> _1d0655255_builtinCallerStdDebugOutln(jule::Ptr<_1d040a813_Eval>* _120136_e, jule::Ptr<_1d05e7604_FnCallExpr>* _120151_fc, jule::Ptr<_1d0408c95_Data>* _120173_d) {
	(*(_120173_d))=_1d0646ec2_builtinCallerOutln(_120136_e, _120151_fc, _120173_d);
	if (((*(_120173_d)) == nullptr)) {
		return nullptr;;
	};
	(*(_120173_d)).get()._field_Model.cast_ptr<_1d061c4a3_BuiltinOutlnCallExprModel>(&__jule_any_type29).get()._field_Debug=true;
	return (*(_120173_d));;
}



inline jule::Bool _1d0200350_FindModuleFile(jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>* _1220_dirents) {
	{
		auto expr = _1220_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7b02275:;
		if (it != expr_end) {
			jule::Ptr<_22a8aadbc_DirEntry> *_1312_d = it;
			{
				if (((!(_22a8bae98_IsDir((*(_1312_d)).get()._field_Stat.ptr()))) && (*(_1312_d)).get()._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1b7b02275:;
			++it;
			goto _iter_begin_1b7b02275;
		}
		_iter_end_1b7b02275:;
	};
	return false;;
}



inline jule::Str _1d02005a3_FindModuleFileDeep(jule::Str _2427_path) {
	for (;;) {
		{
			jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>> _2617_dirents = ({
				auto except = static__22b9a8480_Read(_2427_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1b7b02484;
				} jule::Slice<jule::Ptr<_22a8aadbc_DirEntry>>(nullptr);});
			});;
			jule::Bool _3013_exist = _1d0200350_FindModuleFile(&(_2617_dirents));;
			if (_3013_exist) {
				return _2427_path;;
			};
			jule::I64 _3513_n = _2427_path.len();;
			_2427_path=_22b9a633a_Dir(_2427_path);
			if ((_2427_path.len() == _3513_n)) {
				goto _iter_end_1b7b02484;
			};
		}
	_iter_next_1b7b02484:;
	}
	_iter_end_1b7b02484:;;
	return jule::Str();;
}



inline jule::Slice<_22ba3c6bd_Log> _1d020084a_CheckModuleFile(jule::Str _4620_path) {
	jule::Slice<jule::U8> _479_bytes = ({
		auto except = static__22a8b8e41_Read(_22b9a56d0_Join(jule::Slice<jule::Str>::make({_4620_path,jule::Str("jule.mod", 8)})));
		(except.ok()) ? (except.result) : ({{
			return jule::Slice<_22ba3c6bd_Log>::make({_22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file could not checked because of a problem", 50), }});;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _539_s = _22b9a3447_Trim(static_cast<jule::Str>(_479_bytes), jule::Str(" \n\r\t\v", 5));;
	if ((_539_s.len() != 0LL)) {
		return jule::Slice<_22ba3c6bd_Log>::make({_22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(0LL), ._field_Text=jule::Str("module file has syntax error(s)", 31), }});;
	};
	return nullptr;;
}



inline jule::Ptr<_1d2592eb5_FileInfo> _1d2595abc_ParseFile(jule::Ptr<_22be17ba8_File> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1d2592eb5_FileInfo> _2713_finf = jule::new_ptr<_1d2592eb5_FileInfo>();;
	({
		__jule_tuple_x_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = _1d25db030_parseFileset(_2318_f);
		_2713_finf.get()._field_Ast = __jule_assign_result.__jule_result_arg0;
		_2713_finf.get()._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_2713_finf.get()._field_Errors.len() > 0LL)) {
		_2713_finf.get()._field_Ast=nullptr;
	};
	return _2713_finf;;
}



inline __jule_tuple_x_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log _1d25db030_parseFileset(jule::Ptr<_22be17ba8_File> _5521_f) {
	__jule_tuple_x_1d05aa7a4_Ast__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	jule::Ptr<_1d2609a98_parser> _5613_p = jule::new_ptr<_1d2609a98_parser>();;
	_1d261947b_parse(_5613_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = _5613_p.get()._field_ast;
	__jule_func_result.__jule_result_arg1 = _5613_p.get()._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1d05ee199_ScopeTree> _1d25db959_newScope(void) {
	return jule::new_ptr<_1d05ee199_ScopeTree>();;
}



inline __jule_tuple_bool__jule_tuple_bool _1d25dbc45_isSt(jule::Ptr<_22be1281d_Token> _499_current, jule::Ptr<_22be1281d_Token> _4926_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=((_499_current.get()._field_Id == static_cast<jule::U64>(4LLU)) || (_4926_prev.get()._field_Row < _499_current.get()._field_Row));
	__jule_func_result.__jule_result_arg1=(_499_current.get()._field_Id == static_cast<jule::U64>(4LLU));
	return __jule_func_result;;
}



inline jule::Bool _1d25dc086_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_22be1281d_Token>>* _5526_tokens, jule::I64* _5545_i) {
	if ((((*(_5545_i)) > 1LL) && ((*(_5526_tokens))[((*(_5545_i)) - 2LL)].get()._field_Id == static_cast<jule::U64>(21LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_22be1281d_Token> _6113_prev = (*(_5526_tokens))[((*(_5545_i)) - 1LL)];;
		return ((_6113_prev.get()._field_Id == static_cast<jule::U64>(19LLU)) || (((_6113_prev.get()._field_Id == static_cast<jule::U64>(6LLU)) && _22be13313_IsBinOp(_6113_prev.get()._field_Kind)) && (_6113_prev.get()._field_Row < (*(_5526_tokens))[(*(_5545_i))].get()._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1d25dc41b_nextStPos(jule::Slice<jule::Ptr<_22be1281d_Token>>* _7015_tokens, jule::I64 _7033_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _7113_braceN = 0LL;;
	jule::I64 _7213_i = _7033_start;;
	for (; (_7213_i < (*(_7015_tokens)).len()); (_7213_i)++) {
		{
			jule::Bool _7417_ok = false;;
			jule::Bool _7517_terminated = false;;
			jule::Ptr<_22be1281d_Token> _7613_tok = (*(_7015_tokens))[_7213_i];;
			{
				auto &_match_expr{ _7613_tok.get()._field_Id };
				
				if (_match_expr == static_cast<jule::U64>(2LLU)) {
					_case_begin_1b7b7edd5:;
					{
						{
							auto &_match_expr{ _7613_tok.get()._field_Kind };
							
							if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
								_case_begin_1b7b81a63:;
								{
									if (((_7113_braceN == 0LL) && (_7213_i > _7033_start))) {
										if ((!(_1d25dc086_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))))) {
											({
												__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d25dbc45_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
												_7417_ok = __jule_assign_result.__jule_result_arg0;
												_7517_terminated = __jule_assign_result.__jule_result_arg1;
											});
											if (_7417_ok) {
												goto _julec_label_return;
											};
										};
									};
									(_7113_braceN)++;
								}
							}
							else {
								_case_begin_1b7b806bb:;
								{
									(_7113_braceN)--;
									if (((_7113_braceN == 0LL) && ((_7213_i + 1LL) < (*(_7015_tokens)).len()))) {
										({
											__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d25dbc45_isSt((*(_7015_tokens))[(_7213_i + 1LL)], _7613_tok);
											_7417_ok = __jule_assign_result.__jule_result_arg0;
											_7517_terminated = __jule_assign_result.__jule_result_arg1;
										});
										if (_7417_ok) {
											(_7213_i)++;
											goto _julec_label_return;
										};
									};
								}
							}
							_match_end_1b7b80501:;
						};
						goto _iter_next_1b7b7d796;
					}
				}
				_match_end_1b7b7ed6e:;
			};
			if ((_7113_braceN != 0LL)) {
				goto _iter_next_1b7b7d796;
			};
			if ((_7213_i > _7033_start)) {
				if (_1d25dc086_prevIsIncompleteExpr(_7015_tokens, &(_7213_i))) {
					goto _iter_next_1b7b7d796;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d25dbc45_isSt(_7613_tok, (*(_7015_tokens))[(_7213_i - 1LL)]);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d25dbc45_isSt(_7613_tok, _7613_tok);
					_7417_ok = __jule_assign_result.__jule_result_arg0;
					_7517_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_7417_ok))) {
				goto _iter_next_1b7b7d796;
			};
			_julec_label_return:;
			if (_7517_terminated) {
				(_7213_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _7213_i;
			__jule_func_result.__jule_result_arg1 = _7517_terminated;
			return __jule_func_result;;
		}
	_iter_next_1b7b7d796:;
	}
	_iter_end_1b7b7d796:;;
	__jule_func_result.__jule_result_arg0 = _7213_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_22be1281d_Token__jule_tuple_bool _1d25dc75c_skipSt(jule::I64* _13216_i, jule::Slice<jule::Ptr<_22be1281d_Token>> _13228_tokens) {
	__jule_tuple_sx_22be1281d_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I64 _1339_start = (*(_13216_i));;
	jule::Bool _13413_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1d25dc41b_nextStPos(&(_13228_tokens), _1339_start);
		(*(_13216_i)) = __jule_assign_result.__jule_result_arg0;
		_13413_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_22be1281d_Token>> _13613_stTokens = _13228_tokens.slice(_1339_start, (*(_13216_i)));;
	if (_13413_terminated) {
		if ((_13613_stTokens.len() == 1LL)) {
			({
				__jule_tuple_sx_22be1281d_Token__jule_tuple_bool __jule_assign_result = _1d25dc75c_skipSt(_13216_i, _13228_tokens);
				_13613_stTokens = __jule_assign_result.__jule_result_arg0;
				_13413_terminated = __jule_assign_result.__jule_result_arg1;
			});
			__jule_func_result.__jule_result_arg0 = _13613_stTokens;
			__jule_func_result.__jule_result_arg1 = _13413_terminated;
			return __jule_func_result;;
		};
		_13613_stTokens=_13613_stTokens.slice(0LL, (_13613_stTokens.len() - 1LL));
	};
	__jule_func_result.__jule_result_arg0 = _13613_stTokens;
	__jule_func_result.__jule_result_arg1 = _13413_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1d25dca59_stmt>> _1d25dce00_splitStmts(jule::Slice<jule::Ptr<_22be1281d_Token>>* _15420_tokens) {
	jule::Slice<jule::Ptr<_1d25dca59_stmt>> _15513_stmts = jule::Slice<jule::Ptr<_1d25dca59_stmt>>::alloc(0LL, 20LL);;
	jule::I64 _15613_pos = 0LL;;
	while ((_15613_pos < (*(_15420_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_22be1281d_Token>> _15818_stmt;;
			jule::Bool _15824_terminated = false;;
			({
				__jule_tuple_sx_22be1281d_Token__jule_tuple_bool __jule_assign_result = _1d25dc75c_skipSt(&(_15613_pos), (*(_15420_tokens)));
				_15818_stmt = __jule_assign_result.__jule_result_arg0;
				_15824_terminated = __jule_assign_result.__jule_result_arg1;
			});
			_15513_stmts = jule::alloc_for_append(_15513_stmts,1);_15513_stmts.__push(jule::new_ptr<_1d25dca59_stmt>(_1d25dca59_stmt{._field_tokens=_15818_stmt, ._field_terminated=_15824_terminated}));;
		}
	_iter_next_1b7b896e7:;
	}
	_iter_end_1b7b896e7:;;
	return _15513_stmts;;
}



inline jule::Bool _1d26045dc_isTypeOp(jule::Str* _89014_kind) {
	return (((*(_89014_kind)).equal("&", 1) || (*(_89014_kind)).equal("&&", 2)) || (*(_89014_kind)).equal("*", 1));;
}



inline jule::Bool _1d26048c8_isTypeRange(jule::Slice<jule::Ptr<_22be1281d_Token>>* _89721_tokens) {
	jule::Bool _89813_op = false;;
	{
		auto expr = _89721_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c3baa7:;
		if (it != expr_end) {
			jule::I64 _8999_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _89912_token = *it;
			{
				if ((_89912_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					if (_89912_token.get()._field_Kind.equal("[", 1)) {
						if (_89813_op) {
							return true;;
						};
						jule::I64 _90525_rangeN = 0LL;;
						jule::Slice<jule::Ptr<_22be1281d_Token>> _90625_lTokens = (*(_89721_tokens)).slice(_8999_i);;
						{
							auto expr = &(_90625_lTokens);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1b7c3cd50:;
							if (it != expr_end) {
								jule::Ptr<_22be1281d_Token> _90724_lToken = *it;
								{
									{
										auto &_match_expr{ _90724_lToken.get()._field_Id };
										
										if (_match_expr == static_cast<jule::U64>(2LLU)) {
											_case_begin_1b7c3e439:;
											{
												{
													auto &_match_expr{ _90724_lToken.get()._field_Kind };
													
													if (_match_expr == jule::Str("[", 1)) {
														_case_begin_1b7c3ec75:;
														{
															(_90525_rangeN)++;
															goto _iter_next_1b7c3cd50;
														}
													}
													else if (_match_expr == jule::Str("]", 1)) {
														_case_begin_1b7c3ecec:;
														{
															(_90525_rangeN)--;
															goto _iter_next_1b7c3cd50;
														}
													}
													_match_end_1b7c3eaaa:;
												};
											}
										}
										_match_end_1b7c3e1e7:;
									};
									if ((_90525_rangeN == 0LL)) {
										return _1d26045dc_isTypeOp(&(_90724_lToken.get()._field_Kind));;
									};
								}
								_iter_next_1b7c3cd50:;
								++it;
								goto _iter_begin_1b7c3cd50;
							}
							_iter_end_1b7c3cd50:;
						};
						return true;;
					};
				};
				if ((!(_1d26045dc_isTypeOp(&(_89912_token.get()._field_Kind))))) {
					return false;;
				};
				_89813_op=true;
			}
			_iter_next_1b7c3baa7:;
			++it;
			_8999_i++;
			goto _iter_begin_1b7c3baa7;
		}
		_iter_end_1b7c3baa7:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_22be1281d_Token>> _1d2604b70_getBlockExpr(jule::Slice<jule::Ptr<_22be1281d_Token>>* _93522_tokens) {
	jule::I64 _93613_braceN = 0LL;;
	jule::I64 _93713_skipToNextBraceClose = 0LL;;
	{
		auto expr = _93522_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c4131a:;
		if (it != expr_end) {
			jule::I64 _9389_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _93812_tok = *it;
			{
				{
					auto &_match_expr{ _93812_tok.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(15LLU) || _match_expr == static_cast<jule::U64>(16LLU) || _match_expr == static_cast<jule::U64>(33LLU)) {
						_case_begin_1b7c4200d:;
						{
							(_93713_skipToNextBraceClose)++;
						}
					}
					else if (_match_expr == static_cast<jule::U64>(2LLU)) {
						_case_begin_1b7c42085:;
						{
							{
								auto &_match_expr{ _93812_tok.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b7c42d22:;
									{
										if (((_93613_braceN > 0LL) || (_93713_skipToNextBraceClose > 0LL))) {
											if ((_93713_skipToNextBraceClose > 0LL)) {
												(_93713_skipToNextBraceClose)--;
											};
											(_93613_braceN)++;
											goto _match_end_1b7c42e54;
										};
										return (*(_93522_tokens)).slice(0LL, _9389_i);;
									}
								}
								else if (_match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b7c43493:;
									{
										(_93613_braceN)++;
									}
								}
								else {
									_case_begin_1b7c42eba:;
									{
										(_93613_braceN)--;
									}
								}
								_match_end_1b7c42e54:;
							};
						}
					}
					_match_end_1b7c41e64:;
				};
			}
			_iter_next_1b7c4131a:;
			++it;
			_9389_i++;
			goto _iter_begin_1b7c4131a;
		}
		_iter_end_1b7c4131a:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token _1d2605005_splitDelim(jule::Slice<jule::Ptr<_22be1281d_Token>>* _96620_tokens, jule::U64 _96638_delim) {
	__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_func_result;
	jule::I64 _96713_rangeN = 0LL;;
	{
		auto expr = _96620_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c419be:;
		if (it != expr_end) {
			jule::I64 _9689_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _96812_token = *it;
			{
				{
					auto &_match_expr{ _96812_token.get()._field_Id };
					
					if (_match_expr == static_cast<jule::U64>(2LLU)) {
						_case_begin_1b7c453a7:;
						{
							{
								auto &_match_expr{ _96812_token.get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
									_case_begin_1b7c46188:;
									{
										(_96713_rangeN)++;
										goto _iter_next_1b7c419be;
									}
								}
								else {
									_case_begin_1b7c45c9d:;
									{
										(_96713_rangeN)--;
									}
								}
								_match_end_1b7c45ad3:;
							};
						}
					}
					else if (_match_expr == _96638_delim) {
						_case_begin_1b7c4542e:;
						{
							if ((_96713_rangeN == 0LL)) {
								jule::Slice<jule::Ptr<_22be1281d_Token>> _98225_l = (*(_96620_tokens)).slice(0LL, _9689_i);;
								jule::Slice<jule::Ptr<_22be1281d_Token>> _98325_r = (*(_96620_tokens)).slice((_9689_i + 1LL));;
								__jule_func_result.__jule_result_arg0 = _98225_l;
								__jule_func_result.__jule_result_arg1 = _98325_r;
								return __jule_func_result;;
							};
						}
					}
					_match_end_1b7c45187:;
				};
			}
			_iter_next_1b7c419be:;
			++it;
			_9689_i++;
			goto _iter_begin_1b7c419be;
		}
		_iter_end_1b7c419be:;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I64 _1d260529c_findLowestPrecOp(jule::Slice<jule::Ptr<_22be1281d_Token>>* _99322_tokens) {
	jule::U8 _99813_prec = 255LLU;;
	jule::I64 _99913_precPos = -1LL;;
	jule::I64 _100113_braceN = 0LL;;
	jule::Bool _100213_skipToNextBraceOpen = false;;
	{
		auto expr = _99322_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7c487a6:;
		if (it != expr_end) {
			jule::I64 _10039_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> *_100312_token = it;
			{
				{
					
					if (((*(_100312_token)).get()._field_Id == static_cast<jule::U64>(2LLU))) {
						_case_begin_1b7c49367:;
						{
							{
								auto &_match_expr{ (*(_100312_token)).get()._field_Kind };
								
								if (_match_expr == jule::Str("{", 1)) {
									_case_begin_1b7c49e17:;
									{
										_100213_skipToNextBraceOpen=false;
										goto _case_begin_1b7c4a632;
									}
								}
								else if (_match_expr == jule::Str("(", 1) || _match_expr == jule::Str("[", 1)) {
									_case_begin_1b7c4a632:;
									{
										(_100113_braceN)++;
									}
								}
								else {
									_case_begin_1b7c4a19d:;
									{
										(_100113_braceN)--;
									}
								}
								_match_end_1b7c49ed3:;
							};
							goto _iter_next_1b7c487a6;
						}
					}
					else if (_100213_skipToNextBraceOpen) {
						_case_begin_1b7c493de:;
						{
							goto _iter_next_1b7c487a6;
						}
					}
					else if (((*(_100312_token)).get()._field_Id == static_cast<jule::U64>(15LLU))) {
						_case_begin_1b7c49466:;
						{
							_100213_skipToNextBraceOpen=true;
							goto _iter_next_1b7c487a6;
						}
					}
					else if ((_10039_i == 0LL)) {
						_case_begin_1b7c494dd:;
						{
							goto _iter_next_1b7c487a6;
						}
					}
					else if (((*(_100312_token)).get()._field_Id != static_cast<jule::U64>(6LLU))) {
						_case_begin_1b7c49565:;
						{
							goto _iter_next_1b7c487a6;
						}
					}
					else if ((_100113_braceN > 0LL)) {
						_case_begin_1b7c495dc:;
						{
							goto _iter_next_1b7c487a6;
						}
					}
					_match_end_1b7c49213:;
				};
				jule::Ptr<_22be1281d_Token> _103013_left = (*(_99322_tokens))[(_10039_i - 1LL)];;
				if (((_103013_left.get()._field_Id == static_cast<jule::U64>(6LLU)) || (_103013_left.get()._field_Id == static_cast<jule::U64>(10LLU)))) {
					goto _iter_next_1b7c487a6;
				};
				if ((((_10039_i > 1LL) && (_103013_left.get()._field_Id == static_cast<jule::U64>(2LLU))) && _103013_left.get()._field_Kind.equal("]", 1))) {
					jule::Ptr<_22be1281d_Token> _103817_lleft = (*(_99322_tokens))[(_10039_i - 2LL)];;
					if (((_103817_lleft.get()._field_Id == static_cast<jule::U64>(2LLU)) && _103817_lleft.get()._field_Kind.equal("[", 1))) {
						if (((*(_100312_token)).get()._field_Kind.equal("&", 1) || (*(_100312_token)).get()._field_Kind.equal("*", 1))) {
							goto _iter_next_1b7c487a6;
						};
					};
				};
				jule::U8 _104713_p = _22be12bc5_Prec((*(_100312_token)).ptr());;
				if (((_104713_p != 0LLU) && (_104713_p <= _99813_prec))) {
					_99813_prec=_104713_p;
					_99913_precPos=_10039_i;
				};
			}
			_iter_next_1b7c487a6:;
			++it;
			_10039_i++;
			goto _iter_begin_1b7c487a6;
		}
		_iter_end_1b7c487a6:;
	};
	return _99913_precPos;;
}



inline jule::Ptr<_1d05e52d3_IdentExpr> _1d2605544_buildIdentExpr(jule::Ptr<_22be1281d_Token>* _105624_token) {
	return jule::new_ptr<_1d05e52d3_IdentExpr>(_1d05e52d3_IdentExpr{._field_Token=(*(_105624_token)), ._field_Ident=(*(_105624_token)).get()._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_22be1281d_Token__jule_tuple_int _1d26057db_getRangeExprTokens(jule::Slice<jule::Ptr<_22be1281d_Token>>* _106428_tokens) {
	__jule_tuple_sx_22be1281d_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I64 _106513_rangeN = 0LL;;
	jule::I64 _106613_i = ((*(_106428_tokens)).len() - 1LL);;
	for (; (_106613_i >= 0LL); (_106613_i)--) {
		{
			jule::Ptr<_22be1281d_Token> _106813_tok = (*(_106428_tokens))[_106613_i];;
			if ((_106813_tok.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _106813_tok.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b7c52caa:;
						{
							(_106513_rangeN)++;
						}
					}
					else {
						_case_begin_1b7c528ae:;
						{
							(_106513_rangeN)--;
						}
					}
					_match_end_1b7c526a0:;
				};
			};
			if ((_106513_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_106428_tokens)).slice(0LL, _106613_i);
				__jule_func_result.__jule_result_arg1 = _106513_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1b7c515d3:;
	}
	_iter_end_1b7c515d3:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _106513_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1d2606545_checkAssignTokens(jule::Slice<jule::Ptr<_22be1281d_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_22be16db6_IsAssign((*(_1623_tokens))[0LL].get()._field_Id))))) {
		return false;;
	};
	jule::I64 _2013_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7cd715d:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_2112_t = it;
			{
				if (((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ (*(_2112_t)).get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7cd83d4:;
							{
								(_2013_braceN)++;
							}
						}
						else {
							_case_begin_1b7cd7ed8:;
							{
								(_2013_braceN)--;
							}
						}
						_match_end_1b7cd7cc9:;
					};
				};
				if ((_2013_braceN < 0LL)) {
					return false;;
				} else if ((_2013_braceN > 0LL)) {
					goto _iter_next_1b7cd715d;
				} else if ((((*(_2112_t)).get()._field_Id == static_cast<jule::U64>(6LLU)) && _22be17405_IsAssignOp((*(_2112_t)).get()._field_Kind))) {
					return true;;
				};
			}
			_iter_next_1b7cd715d:;
			++it;
			goto _iter_begin_1b7cd715d;
		}
		_iter_end_1b7cd715d:;
	};
	return false;;
}



inline _22ba3c6bd_Log _1d2607766_makeErr(jule::I64 _5212_row, jule::I64 _5222_col, jule::Ptr<_22be17ba8_File>* _5233_f, jule::Str _5243_fmt, jule::Slice<jule::Any> _5256_args) {
	return _22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=_5212_row, ._field_Column=_5222_col, ._field_Path=(*(_5233_f)).get()._field_Path, ._field_Text=_22ba3cb0d_Logf(_5243_fmt, _5256_args), };;
}



inline jule::Slice<jule::Ptr<_22be1281d_Token>> _1d2607c3e_range(jule::I64* _7115_i, jule::Str _7123_open, jule::Str _7140_close, jule::Slice<jule::Ptr<_22be1281d_Token>>* _7163_tokens) {
	if (((*(_7115_i)) >= (*(_7163_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_22be1281d_Token> _759_tok = (*(_7163_tokens))[(*(_7115_i))];;
	if (((_759_tok.get()._field_Id != static_cast<jule::U64>(2LLU)) || (_759_tok.get()._field_Kind != _7123_open))) {
		return nullptr;;
	};
	((*(_7115_i)))++;
	jule::I64 _8013_rangeN = 1LL;;
	jule::I64 _819_start = (*(_7115_i));;
	for (; ((_8013_rangeN != 0LL) && ((*(_7115_i)) < (*(_7163_tokens)).len())); ((*(_7115_i)))++) {
		{
			jule::Ptr<_22be1281d_Token> _8313_token = (*(_7163_tokens))[(*(_7115_i))];;
			if ((_8313_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _8313_token.get()._field_Kind };
					
					if (_match_expr == _7123_open) {
						_case_begin_1b7cdd87e:;
						{
							(_8013_rangeN)++;
						}
					}
					else if (_match_expr == _7140_close) {
						_case_begin_1b7cdd906:;
						{
							(_8013_rangeN)--;
						}
					}
					_match_end_1b7cdd65e:;
				};
			};
		}
	_iter_next_1b7cdc88e:;
	}
	_iter_end_1b7cdc88e:;;
	return (*(_7163_tokens)).slice(_819_start, ((*(_7115_i)) - 1LL));;
}



inline __jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token _1d2607ed6_rangeLast(jule::Slice<jule::Ptr<_22be1281d_Token>>* _10319_tokens) {
	__jule_tuple_sx_22be1281d_Token__jule_tuple_sx_22be1281d_Token __jule_func_result;
	if (((*(_10319_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	} else if (((*(_10319_tokens))[((*(_10319_tokens)).len() - 1LL)].get()._field_Id != static_cast<jule::U64>(2LLU))) {
		__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I64 _10913_braceN = 0LL;;
	jule::I64 _11013_i = ((*(_10319_tokens)).len() - 1LL);;
	for (; (_11013_i >= 0LL); (_11013_i)--) {
		{
			jule::Ptr<_22be1281d_Token> _11213_token = (*(_10319_tokens))[_11013_i];;
			if ((_11213_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
				{
					auto &_match_expr{ _11213_token.get()._field_Kind };
					
					if (_match_expr == jule::Str("}", 1) || _match_expr == jule::Str("]", 1) || _match_expr == jule::Str(")", 1)) {
						_case_begin_1b7ce26eb:;
						{
							(_10913_braceN)++;
							goto _iter_next_1b7cde6c6;
						}
					}
					else {
						_case_begin_1b7ce2300:;
						{
							(_10913_braceN)--;
						}
					}
					_match_end_1b7ce20e1:;
				};
			};
			if ((_10913_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_10319_tokens)).slice(0LL, _11013_i);
				__jule_func_result.__jule_result_arg1 = (*(_10319_tokens)).slice(_11013_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1b7cde6c6:;
	}
	_iter_end_1b7cde6c6:;;
	__jule_func_result.__jule_result_arg0 = (*(_10319_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log _1d26083c1_partsKind(jule::Slice<jule::Ptr<_22be1281d_Token>>* _13219_tokens, jule::Str _13237_kind, jule::Bool _13254_expr_must) {
	__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	if (((*(_13219_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _13713_parts = nullptr;;
	jule::Slice<_22ba3c6bd_Log> _13813_errors = nullptr;;
	jule::I64 _14013_rangeN = 0LL;;
	jule::I64 _14113_last = 0LL;;
	{
		auto expr = _13219_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ce5215:;
		if (it != expr_end) {
			jule::I64 _1429_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _14212_token = *it;
			{
				if ((_14212_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _14212_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7ce67aa:;
							{
								(_14013_rangeN)++;
								goto _iter_next_1b7ce5215;
							}
						}
						else {
							_case_begin_1b7ce63ae:;
							{
								(_14013_rangeN)--;
							}
						}
						_match_end_1b7ce61a0:;
					};
				};
				if ((_14013_rangeN > 0LL)) {
					goto _iter_next_1b7ce5215;
				};
				if ((_14212_token.get()._field_Kind == _13237_kind)) {
					if ((_13254_expr_must && ((_1429_i - _14113_last) <= 0LL))) {
						_22ba3c6bd_Log _16121_err = _1d2607766_makeErr(_14212_token.get()._field_Row, _14212_token.get()._field_Column, &(_14212_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_13813_errors = jule::alloc_for_append(_13813_errors,1);_13813_errors.__push(_16121_err);;
					};
					_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last, _1429_i));;
					_14113_last=static_cast<jule::I64>((_1429_i + 1LL));
				};
			}
			_iter_next_1b7ce5215:;
			++it;
			_1429_i++;
			goto _iter_begin_1b7ce5215;
		}
		_iter_end_1b7ce5215:;
	};
	if ((_14113_last < (*(_13219_tokens)).len())) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push((*(_13219_tokens)).slice(_14113_last));;
	} else if ((!(_13254_expr_must))) {
		_13713_parts = jule::alloc_for_append(_13713_parts,1);_13713_parts.__push(jule::Slice<jule::Ptr<_22be1281d_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _13713_parts;
	__jule_func_result.__jule_result_arg1 = _13813_errors;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log _1d26087ab_parts(jule::Slice<jule::Ptr<_22be1281d_Token>>* _18415_tokens, jule::U64 _18433_id, jule::Bool _18446_expr_must) {
	__jule_tuple_ssx_22be1281d_Token__jule_tuple_s_22ba3c6bd_Log __jule_func_result;
	if (((*(_18415_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_22be1281d_Token>>> _18913_parts = nullptr;;
	jule::Slice<_22ba3c6bd_Log> _19013_errors = nullptr;;
	jule::I64 _19213_rangeN = 0LL;;
	jule::I64 _19313_last = 0LL;;
	{
		auto expr = _18415_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ceb480:;
		if (it != expr_end) {
			jule::I64 _1949_i = it - expr->begin();
			jule::Ptr<_22be1281d_Token> _19412_token = *it;
			{
				if ((_19412_token.get()._field_Id == static_cast<jule::U64>(2LLU))) {
					{
						auto &_match_expr{ _19412_token.get()._field_Kind };
						
						if (_match_expr == jule::Str("{", 1) || _match_expr == jule::Str("[", 1) || _match_expr == jule::Str("(", 1)) {
							_case_begin_1b7ceca25:;
							{
								(_19213_rangeN)++;
								goto _iter_next_1b7ceb480;
							}
						}
						else {
							_case_begin_1b7cec629:;
							{
								(_19213_rangeN)--;
							}
						}
						_match_end_1b7cec41a:;
					};
				};
				if ((_19213_rangeN > 0LL)) {
					goto _iter_next_1b7ceb480;
				};
				if ((_19412_token.get()._field_Id == _18433_id)) {
					if ((_18446_expr_must && ((_1949_i - _19313_last) <= 0LL))) {
						_22ba3c6bd_Log _21321_err = _1d2607766_makeErr(_19412_token.get()._field_Row, _19412_token.get()._field_Column, &(_19412_token.get()._field_File), jule::Str("expression missing", 18), jule::Slice<jule::Any>());;
						_19013_errors = jule::alloc_for_append(_19013_errors,1);_19013_errors.__push(_21321_err);;
					};
					_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last, _1949_i));;
					_19313_last=static_cast<jule::I64>((_1949_i + 1LL));
				};
			}
			_iter_next_1b7ceb480:;
			++it;
			_1949_i++;
			goto _iter_begin_1b7ceb480;
		}
		_iter_end_1b7ceb480:;
	};
	if ((_19313_last < (*(_18415_tokens)).len())) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push((*(_18415_tokens)).slice(_19313_last));;
	} else if ((!(_18446_expr_must))) {
		_18913_parts = jule::alloc_for_append(_18913_parts,1);_18913_parts.__push(jule::Slice<jule::Ptr<_22be1281d_Token>>());;
	};
	__jule_func_result.__jule_result_arg0 = _18913_parts;
	__jule_func_result.__jule_result_arg1 = _19013_errors;
	return __jule_func_result;;
}



inline jule::Str _1d2608a53_getCloseKindOfBrace(jule::Str _23024_left) {
	{
		auto &_match_expr{ _23024_left };
		
		if (_match_expr == jule::Str(")", 1)) {
			_case_begin_1b7d04d7e:;
			{
				return jule::Str("(", 1);;
			}
		}
		else if (_match_expr == jule::Str("}", 1)) {
			_case_begin_1b7d059c8:;
			{
				return jule::Str("{", 1);;
			}
		}
		else if (_match_expr == jule::Str("]", 1)) {
			_case_begin_1b7d05a3e:;
			{
				return jule::Str("[", 1);;
			}
		}
		else {
			_case_begin_1b7ced592:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b7ced460:;
	};
}



inline _22ba3c6bd_Log _1d2608e3d_compilerErr(jule::Ptr<_22be1281d_Token>* _24317_token, jule::Str* _24333_fmt, jule::Slice<jule::Any> _24346_args) {
	return _22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Row=(*(_24317_token)).get()._field_Row, ._field_Column=(*(_24317_token)).get()._field_Column, ._field_Path=(*(_24317_token)).get()._field_File.get()._field_Path, ._field_Text=_22ba3cb0d_Logf((*(_24333_fmt)), _24346_args), ._field_Line=_22be18b10_GetRow((*(_24317_token)).get()._field_File.ptr(), (*(_24317_token)).get()._field_Row), };;
}



inline void _1d260936c_pushSuggestion(_22ba3c6bd_Log* _25430_log, jule::Str _25441_fmt, jule::Slice<jule::Any> _25454_args) {
	_25430_log->_field_Suggestion=_22ba3cb0d_Logf(_25441_fmt, _25454_args);
}



inline jule::Str _1d2609614_tokstoa(jule::Slice<jule::Ptr<_22be1281d_Token>>* _25813_tokens) {
	jule::I64 _25913_n = 0LL;;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d08767:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_26012_token = it;
			{
				_25913_n+=(*(_26012_token)).get()._field_Kind.len();
			}
			_iter_next_1b7d08767:;
			++it;
			goto _iter_begin_1b7d08767;
		}
		_iter_end_1b7d08767:;
	};
	jule::Str _26313_s = jule::Str::alloc(0LL, _25913_n);;
	{
		auto expr = _25813_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7d08c51:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_26412_token = it;
			{
				_26313_s+=(*(_26412_token)).get()._field_Kind;
			}
			_iter_next_1b7d08c51:;
			++it;
			goto _iter_begin_1b7d08c51;
		}
		_iter_end_1b7d08c51:;
	};
	return _26313_s;;
}



inline jule::Bool _1d2619756_isPub(jule::Str* _203711_ident) {
	jule::I32 _203810_r = 0;;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _22b963a9a_DecodeRuneStr((*(_203711_ident)));
		_203810_r = __jule_assign_result.__jule_result_arg0;
	});
	return _22b8815cd_IsUpper(_203810_r);;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261a0e7_buildVoidType(void) {
	return jule::new_ptr<_1d05de563_TypeDecl>();;
}



inline jule::Ptr<_1d05de563_TypeDecl> _1d261a339_buildPrimType(jule::Ptr<_22be1281d_Token> _2322_t) {
	return jule::new_ptr<_1d05de563_TypeDecl>(_1d05de563_TypeDecl{._field_Token=_2322_t, ._field_Kind=jule::Any(jule::new_ptr<_1d05deb29_IdentTypeDecl>(_1d05deb29_IdentTypeDecl{._field_Token=_2322_t, ._field_Ident=_2322_t.get()._field_Kind, }), &__jule_any_type20)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1d20035b3_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == jule::Str("windows", 7)) {
			_case_begin_1b7e87451:;
			{
				__jule_func_result.__jule_result_arg0=_22ba409ce_IsWindows(_22bb2185c_Os);
			}
		}
		else if (_match_expr == jule::Str("darwin", 6)) {
			_case_begin_1b7e86d46:;
			{
				__jule_func_result.__jule_result_arg0=_22ba40c87_IsDarwin(_22bb2185c_Os);
			}
		}
		else if (_match_expr == jule::Str("linux", 5)) {
			_case_begin_1b7e86dac:;
			{
				__jule_func_result.__jule_result_arg0=_22ba4102e_IsLinux(_22bb2185c_Os);
			}
		}
		else if (_match_expr == jule::Str("unix", 4)) {
			_case_begin_1b7e86e23:;
			{
				__jule_func_result.__jule_result_arg0=_22ba41b34_IsUnix(_22bb2185c_Os);
			}
		}
		else {
			_case_begin_1b7e8674c:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b7e86a5a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1d200385a_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == jule::Str("i386", 4)) {
			_case_begin_1b7e89068:;
			{
				__jule_func_result.__jule_result_arg0=_22ba4134d_IsI386(_22bb21b26_Arch);
			}
		}
		else if (_match_expr == jule::Str("amd64", 5)) {
			_case_begin_1b7e890ce:;
			{
				__jule_func_result.__jule_result_arg0=_22ba415e5_IsAmd64(_22bb21b26_Arch);
			}
		}
		else if (_match_expr == jule::Str("arm64", 5)) {
			_case_begin_1b7e89145:;
			{
				__jule_func_result.__jule_result_arg0=_22ba4188c_IsArm64(_22bb21b26_Arch);
			}
		}
		else if (_match_expr == jule::Str("x64", 3)) {
			_case_begin_1b7e891ab:;
			{
				__jule_func_result.__jule_result_arg0=_22ba42250_Is64Bit(_22bb21b26_Arch);
			}
		}
		else if (_match_expr == jule::Str("x32", 3)) {
			_case_begin_1b7e89222:;
			{
				__jule_func_result.__jule_result_arg0=_22ba41ea8_Is32Bit(_22bb21b26_Arch);
			}
		}
		else {
			_case_begin_1b7e88980:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1b7e88c8d:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1d2003b02_isPassFileAnnotation(jule::Str _5029_p) {
	_5029_p=_22b9a5eb6_Base(_5029_p);
	jule::I64 _529_n = _5029_p.len();;
	(_5029_p).mut_slice(0LL, (_529_n - _22b9a5977_Ext(_5029_p).len()));;
	jule::Str _5813_a1 = jule::Str();;
	jule::Str _6113_a2 = jule::Str();;
	jule::I64 _6413_i = _22b99dd27_FindLastByte(_5029_p, '_');;
	if ((_6413_i == -1LL)) {
		jule::Bool _6718_ok = false;;
		jule::Bool _6726_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d20035b3_checkOs(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_6726_exist) {
			return _6718_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d200385a_checkArch(_5029_p);
			_6718_ok = __jule_assign_result.__jule_result_arg0;
			_6726_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_6726_exist)) || _6718_ok);;
	};
	if (((_6413_i + 1LL) >= _529_n)) {
		return true;;
	};
	_5813_a1=_5029_p.slice((_6413_i + 1LL));
	(_5029_p).mut_slice(0LL, _6413_i);;
	_6413_i=static_cast<jule::I64>(_22b99dd27_FindLastByte(_5029_p, '_'));
	if ((_6413_i != -1LL)) {
		_6113_a2=_5029_p.slice((_6413_i + 1LL));
	};
	if (_6113_a2.empty()) {
		jule::Bool _8818_ok = false;;
		jule::Bool _8826_exist = false;;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d20035b3_checkOs(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_8826_exist) {
			return _8818_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d200385a_checkArch(_5813_a1);
			_8818_ok = __jule_assign_result.__jule_result_arg0;
			_8826_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_8826_exist)) || _8818_ok);;
	};
	jule::Bool _9614_ok = false;;
	jule::Bool _9622_exist = false;;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d200385a_checkArch(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_9622_exist) {
		if ((!(_9614_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d20035b3_checkOs(_6113_a2);
			_9614_ok = __jule_assign_result.__jule_result_arg0;
			_9622_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9622_exist)) || _9614_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1d20035b3_checkOs(_5813_a1);
		_9614_ok = __jule_assign_result.__jule_result_arg0;
		_9622_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_9622_exist)) || _9614_ok);;
}



inline void _1d2004d89_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(_22bb2185c_Os);;
	if (_22ba41b34_IsUnix(_22bb2185c_Os)) {
		(*(_3619_vars)) = jule::alloc_for_append((*(_3619_vars)),1);(*(_3619_vars)).__push(jule::Str("unix", 4));;
	};
}



inline void _1d20050dc_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(_22bb21b26_Arch);;
	if (_22ba42250_Is64Bit(_22bb21b26_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x64", 3));;
	};
	if (_22ba41ea8_Is32Bit(_22bb21b26_Arch)) {
		(*(_4421_vars)) = jule::alloc_for_append((*(_4421_vars)),1);(*(_4421_vars)).__push(jule::Str("x32", 3));;
	};
}



inline void _1d2005395_initVars(jule::Slice<jule::Str>* _5518_vars, _1d2004a7b_CompileInfo* _5532_info) {
	_1d2004d89_setOsVars(_5518_vars);
	_1d20050dc_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("production", 10));;
	};
	if ((*(_5532_info))._field_Test) {
		(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("test", 4));;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b7e94ccc:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("clang", 5));;
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b7e94b45:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("gcc", 3));;
			}
		}
		_match_end_1b7e94c66:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b7e95607:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp14", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b7e9566d:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp17", 5));;
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b7e956d4:;
			{
				(*(_5518_vars)) = jule::alloc_for_append((*(_5518_vars)),1);(*(_5518_vars)).__push(jule::Str("cpp20", 5));;
			}
		}
		_match_end_1b7e94370:;
	};
}



inline jule::Slice<jule::U8> _1d261dea8_readBuff(jule::Str _3013_path) {
	return ({
		auto except = static__22a8b8e41_Read(_3013_path);
		(except.ok()) ? (except.result) : ({{
			jule::outln(jule::Str("error: file cannot read", 23));
			;
			_22bb207c3_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _22ba3c6bd_Log _1d261e23e_flatCompilerErr(jule::Str _4120_text) {
	return _22ba3c6bd_Log{._field_Kind=static_cast<jule::I64>(1LL), ._field_Text=_4120_text, };;
}



inline void _1d2623650_pushPasses(jule::Ptr<_1d2195bb7_Package>* _11120_p, jule::Slice<jule::Str>* _11144_passes) {
	{
		auto expr = &((*(_11120_p)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b7ec4427:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _11217_f = *it;
			{
				_julec_label_push:;
				{
					auto expr = &(_11217_f.get()._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b7ec4d95:;
					if (it != expr_end) {
						_1d062b209_Pass _11416_pass = *it;
						{
							if (_11416_pass._field_Text.empty()) {
								goto _iter_next_1b7ec4d95;
							};
							{
								auto expr = _11144_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1b7ec57ad:;
								if (it != expr_end) {
									jule::Str _11820_cpass = *it;
									{
										if ((_11820_cpass == _11416_pass._field_Text)) {
											goto _iter_next_1b7ec4d95;
										};
									}
									_iter_next_1b7ec57ad:;
									++it;
									goto _iter_begin_1b7ec57ad;
								}
								_iter_end_1b7ec57ad:;
							};
							(*(_11144_passes)) = jule::alloc_for_append((*(_11144_passes)),1);(*(_11144_passes)).__push(_11416_pass._field_Text);;
						}
						_iter_next_1b7ec4d95:;
						++it;
						goto _iter_begin_1b7ec4d95;
					}
					_iter_end_1b7ec4d95:;
				};
			}
			_iter_next_1b7ec4427:;
			++it;
			goto _iter_begin_1b7ec4427;
		}
		_iter_end_1b7ec4427:;
	};
}



inline jule::Slice<jule::Str> _1d26239d5_getAllUniquePasses(jule::Ptr<_1d2195bb7_Package>* _12828_pkg, jule::Slice<jule::Ptr<_1d219307c_ImportInfo>> _12853_uses) {
	jule::Slice<jule::Str> _12913_passes = nullptr;;
	_1d2623650_pushPasses(_12828_pkg, &(_12913_passes));
	{
		auto expr = &(_12853_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b668d560:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> _13217_u = *it;
			{
				if ((!(_13217_u.get()._field_Binded))) {
					_1d2623650_pushPasses(&(_13217_u.get()._field_Package), &(_12913_passes));
				};
			}
			_iter_next_1b668d560:;
			++it;
			goto _iter_begin_1b668d560;
		}
		_iter_end_1b668d560:;
	};
	return _12913_passes;;
}



inline _1d2004a7b_CompileInfo _1d2623bd3_buildCompileInfo(void) {
	_1d2004a7b_CompileInfo _14213_info = _1d2004a7b_CompileInfo{._field_Prod=_229913002_Production, ._field_Test=_229912595_Test, };;
	{
		auto &_match_expr{ _229910818_Compiler };
		
		if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b668e770:;
			{
				_14213_info._field_Compiler=jule::Str("clang", 5);
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b668e7d6:;
			{
				_14213_info._field_Compiler=jule::Str("gcc", 3);
			}
		}
		_match_end_1b668dc69:;
	};
	{
		auto &_match_expr{ _229911cae_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b668d3d9:;
			{
				_14213_info._field_CppStd=jule::Str("cpp14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b668eb7c:;
			{
				_14213_info._field_CppStd=jule::Str("cpp17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b668ebe3:;
			{
				_14213_info._field_CppStd=jule::Str("cpp20", 5);
			}
		}
		_match_end_1b6690089:;
	};
	return _14213_info;;
}



inline void _1d0793eed_EliminateDefines(jule::Ptr<_1d2621e34_IR>* _28526_ir) {
	jule::Ptr<_1d075ea35_ObjectDeadCode> _28613_ocd = static__1d07918ad_new(_28526_ir);;
	_1d0793c34_elimanate(_28613_ocd);
}



inline jule::Ptr<_1d05aba4c_Directive> _1d0794383_findDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _29123_directives, jule::Str _29154_tag) {
	{
		auto expr = _29123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b66c8633:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _29217_dr = *it;
			{
				if ((_29217_dr.get()._field_Tag.get()._field_Kind == _29154_tag)) {
					return _29217_dr;;
				};
			}
			_iter_next_1b66c8633:;
			++it;
			goto _iter_begin_1b66c8633;
		}
		_iter_end_1b66c8633:;
	};
	return nullptr;;
}



inline jule::Bool _1d07946c4_hasDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _30118_directives, jule::Str _30149_tag) {
	return (_1d0794383_findDirective(_30118_directives, _30149_tag) != nullptr);;
}



inline void _1d0798321_eliminateDeadCodeOfScope(jule::Ptr<_1d2174613_Scope> _24133_s) {
	jule::Slice<jule::Ptr<_1d2176d52_Label>> _2429_labels = jule::Slice<jule::Ptr<_1d2176d52_Label>>::alloc(0LL, 16LLU);;
	jule::Slice<jule::Ptr<_1d217713d_GotoSt>> _2439_gotos = jule::Slice<jule::Ptr<_1d217713d_GotoSt>>::alloc(0LL, 16LLU);;
	jule::Ptr<_1d079541c_scopeDeadCode> _24413_sdc = jule::new_ptr<_1d079541c_scopeDeadCode>(_1d079541c_scopeDeadCode{._field_s=_24133_s, ._field_stmts=(&(_24133_s.get()._field_Stmts)), ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1d2176d52_Label>>>)((&(_2429_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1d217713d_GotoSt>>>)((&(_2439_gotos)))), });;
	{
		_1d0798035_optimizeStmts(_24413_sdc);
	};
}



inline void _1d07985a7_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1d06242bd_Fn>>* _25433_funcs) {
	{
		auto expr = _25433_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67168a2:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _25517_func = *it;
			{
				{
					auto expr = &(_25517_func.get()._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1b6716e57:;
					if (it != expr_end) {
						jule::Ptr<_1d0626e6e_FnIns> _25621_ins = *it;
						{
							_1d0798321_eliminateDeadCodeOfScope(_25621_ins.get()._field_Scope);
						}
						_iter_next_1b6716e57:;
						++it;
						goto _iter_begin_1b6716e57;
					}
					_iter_end_1b6716e57:;
				};
			}
			_iter_next_1b67168a2:;
			++it;
			goto _iter_begin_1b67168a2;
		}
		_iter_end_1b67168a2:;
	};
}



inline void _1d07987e9_eliminateFunctionsScopePackage(jule::Ptr<_1d2195bb7_Package>* _26240_pkg) {
	{
		auto expr = &((*(_26240_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b67173db:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _26317_f = *it;
			{
				_1d07985a7_eliminateScopeFunctions(&(_26317_f.get()._field_Funcs));
			}
			_iter_next_1b67173db:;
			++it;
			goto _iter_begin_1b67173db;
		}
		_iter_end_1b67173db:;
	};
}



inline void _1d0798a91_eliminateScopePackage(jule::Ptr<_1d2195bb7_Package>* _26831_pkg) {
	_1d07987e9_eliminateFunctionsScopePackage(_26831_pkg);
}



inline void _1d0798ca0_EliminateScopes(jule::Ptr<_1d2621e34_IR>* _27325_ir) {
	jule::I64 _27413_i = ((*(_27325_ir)).get()._field_Used.len() - 1LL);;
	for (; (_27413_i >= 0LL); (_27413_i)--) {
		{
			jule::Ptr<_1d219307c_ImportInfo> _27617_u = (*(_27325_ir)).get()._field_Used[_27413_i];;
			if ((!(_27617_u.get()._field_Binded))) {
				_1d0798a91_eliminateScopePackage(&(_27617_u.get()._field_Package));
			};
		}
	_iter_next_1b671884e:;
	}
	_iter_end_1b671884e:;;
	_1d0798a91_eliminateScopePackage(&((*(_27325_ir)).get()._field_Main));
}



inline jule::Bool _1d065bdb6_isStdPackage(jule::Str _43817_f, jule::Str _43825_p) {
	return _22b99a95b_HasPrefix(_43817_f, _22b9a56d0_Join(jule::Slice<jule::Str>::make({_22bb20cac_PathStdlib,_43825_p})));;
}



inline jule::Bool _1d065c1c4_isConstantValidConditionalCase(jule::Ptr<_1d2174a0e_If>* _44236_i) {
	{
		auto &_match_expr{ (*(_44236_i)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b810d561:;
			{
				jule::Ptr<_1e76e5cc3_Const> _44513_c = (*(_44236_i)).get()._field_Expr.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
				return (_1e76e9e3c_IsBool(_44513_c.ptr()) && _1e76e7a94_ReadBool(_44513_c.ptr()));;
			}
		}
		_match_end_1b810d3eb:;
	};
	return false;;
}



inline jule::Bool _1d065c47c_isUnreachableExpr(jule::Any* _45123_expr) {
	{
		auto &_match_expr{ (*(_45123_expr)) };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b810de79:;
			{
				jule::Ptr<_1e76e5cc3_Const> _45413_c = (*(_45123_expr)).cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19);;
				return (_1e76e9e3c_IsBool(_45413_c.ptr()) && (!(_1e76e7a94_ReadBool(_45413_c.ptr()))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1b810e001:;
			{
				jule::Ptr<_1d061614a_BinopExprModel> _45713_m = (*(_45123_expr)).cast_ptr<_1d061614a_BinopExprModel>(&__jule_any_type114);;
				if (_45713_m.get()._field_Op.get()._field_Kind.equal("&&", 2)) {
					return (_1d065c47c_isUnreachableExpr(&(_45713_m.get()._field_Left.get()._field_Model)) || _1d065c47c_isUnreachableExpr(&(_45713_m.get()._field_Right.get()._field_Model)));;
				};
			}
		}
		_match_end_1b810d62c:;
	};
	return false;;
}



inline jule::Bool _1d065c7bd_isConstantValidMatchCase(jule::Ptr<_1d2178e75_Case>* _46630_case) {
	{
		auto expr = &((*(_46630_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b81102aa:;
		if (it != expr_end) {
			jule::Ptr<_1d0408c95_Data> *_46712_expr = it;
			{
				if (((_1d0409658_IsConst((*(_46712_expr)).ptr()) && _1e76e9e3c_IsBool((*(_46712_expr)).get()._field_Constant.ptr())) && _1e76e7a94_ReadBool((*(_46712_expr)).get()._field_Constant.ptr()))) {
					return true;;
				};
			}
			_iter_next_1b81102aa:;
			++it;
			goto _iter_begin_1b81102aa;
		}
		_iter_end_1b81102aa:;
	};
	return false;;
}



inline jule::Bool _1d065ca65_isUnreachableConditionalCase(jule::Ptr<_1d2174a0e_If>* _47534_i) {
	return _1d065c47c_isUnreachableExpr(&((*(_47534_i)).get()._field_Expr));;
}



inline jule::Bool _1d065cd1d_isUnreachableMatchCase(jule::Ptr<_1d2178e75_Case>* _47928_case) {
	{
		auto expr = &((*(_47928_case)).get()._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8113b60:;
		if (it != expr_end) {
			jule::Ptr<_1d0408c95_Data> *_48012_expr = it;
			{
				if ((!(_1d065c47c_isUnreachableExpr(&((*(_48012_expr)).get()._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1b8113b60:;
			++it;
			goto _iter_begin_1b8113b60;
		}
		_iter_end_1b8113b60:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1d1ed2a48_checkForBitShiftOpt(jule::Ptr<_1d0615b83_OperandExprModel>* _46625_l, jule::Ptr<_1d0615b83_OperandExprModel>* _46648_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1e76e5201_IsInt(_1d21d2242_Str((*(_46625_l)).get()._field_Kind.ptr())))) || (!(_1e76e5201_IsInt(_1d21d2242_Str((*(_46648_r)).get()._field_Kind.ptr())))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*(_46648_r)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1b814ce30:;
			{
				goto _match_end_1b814d859;
			}
		}
		else {
			_case_begin_1b814d99c:;
			{
				__jule_func_result.__jule_result_arg0 = false;
				__jule_func_result.__jule_result_arg1 = 0LLU;
				return __jule_func_result;;
			}
		}
		_match_end_1b814d859:;
	};
	__jule_func_result.__jule_result_arg1=static_cast<jule::U64>(_1e76e8545_AsU64((*(_46648_r)).get()._field_Model.cast_ptr<_1e76e5cc3_Const>(&__jule_any_type19).ptr()));
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _4809_j = _1e76963a0_Log2(static_cast<jule::F64>(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1)));;
	jule::U64 _4819_z = static_cast<jule::U64>(_4809_j);;
	if ((static_cast<jule::F64>(_4819_z) != _4809_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _4819_z;
	return __jule_func_result;;
}



inline void _1d221540c_PushOptLevel(jule::I64 _3417_level) {
	_1d2203bae_Copy=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d22039b1_Deadcode=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d220ea22_Append=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d22142a7_Math=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d221450a_Access=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d22147c4_Inline=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d2214a8d_Ptr=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d2214e67_Cond=(_3417_level >= static_cast<jule::I64>(1LL));
	_1d2215231_Str=(_3417_level >= static_cast<jule::I64>(1LL));
}



inline void _1d07a2d0e_detectEnabled(void) {
	_1d07a0cda_exprEnabled=(((_1d2214a8d_Ptr || _1d22142a7_Math) || _1d221450a_Access) || _1d2214e67_Cond);
	_1d07a100a_scopeEnabled=(((_1d2214e67_Cond || _1d220ea22_Append) || _1d2203bae_Copy) || _1d2215231_Str);
}



inline void _1e29a420c_Throw(jule::Str _910_msg) {
	jule::outln(_910_msg);
	_22bb207c3_Exit(1LL);
}



inline jule::U64 _1b5a6d941_unix(void) {
	return static_cast<jule::U64>(static_cast<jule::U64>(time(nullptr)));;
}



inline jule::U64 _1b5a6dc4e_unixYearToSeconds(jule::U64 _20122_y, jule::Bool* _20140_leap) {
	if (((_20122_y - 2LLU) <= 136LLU)) {
		jule::U64 _20317_leaps = ((_20122_y - 68LLU) >> 2LLU);;
		(*(_20140_leap))=(((_20122_y - 68LLU) & 3LLU) == 0LLU);
		if ((*(_20140_leap))) {
			(_20317_leaps)--;
		};
		return static_cast<jule::U64>(((31536000LLU * (_20122_y - 70LLU)) + (86400LLU * _20317_leaps)));;
	};
	jule::U64 _21113_leaps = 0LLU;;
	jule::U64 _21213_centuries = 0LLU;;
	jule::U64 _21313_cycles = ((_20122_y - 100LLU) / 400LLU);;
	jule::U64 _21413_rem = ((_20122_y - 100LLU) % 400LL);;
	if ((_21413_rem < 0LLU)) {
		(_21313_cycles)--;
		_21413_rem+=400LLU;
	};
	if ((_21413_rem == 0LLU)) {
		(*(_20140_leap))=true;
		_21213_centuries=0LLU;
		_21113_leaps=0LLU;
	} else {
		if ((_21413_rem >= 200LLU)) {
			if ((_21413_rem >= 300LLU)) {
				_21213_centuries=3LLU;
				_21413_rem-=300LLU;
			} else {
				_21213_centuries=2LLU;
				_21413_rem-=200LLU;
			};
		} else {
			if ((_21413_rem >= 100LLU)) {
				_21213_centuries=1LLU;
				_21413_rem-=100LLU;
			} else {
				_21213_centuries=0LLU;
			};
		};
		if ((_21413_rem == 0LLU)) {
			(*(_20140_leap))=false;
			_21113_leaps=0LLU;
		} else {
			_21113_leaps=static_cast<jule::U64>((_21413_rem >> 2LLU));
			_21413_rem%=4LL;
			(*(_20140_leap))=(_21413_rem == 0LLU);
		};
	};
	_21113_leaps+=((97LLU * _21313_cycles) + (24LLU * _21213_centuries));
	if ((*(_20140_leap))) {
		(_21113_leaps)++;
	};
	return static_cast<jule::U64>((((((_20122_y - 100LLU) * 31536000LLU) + (_21113_leaps * 86400LLU)) + 946684800LLU) + 86400LLU));;
}



inline jule::U64 _1b5a6e0d4_unixMonthToSeconds(jule::U64 _25823_m, jule::Bool _25836_leap) {
	jule::U64 _26013_t = 0LLU;;
	{
		auto &_match_expr{ _25823_m };
		
		if (_match_expr == 1LL) {
			_case_begin_1b81c985d:;
			{
				_26013_t=2678400LLU;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1b81c98c4:;
			{
				_26013_t=5097600LLU;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1b81c993a:;
			{
				_26013_t=7776000LLU;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1b81c99a1:;
			{
				_26013_t=10368000LLU;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1b81c9a28:;
			{
				_26013_t=13046400LLU;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1b81c9aa0:;
			{
				_26013_t=15638400LLU;
			}
		}
		else if (_match_expr == 7LL) {
			_case_begin_1b81c9b27:;
			{
				_26013_t=18316800LLU;
			}
		}
		else if (_match_expr == 8LL) {
			_case_begin_1b81c9b9e:;
			{
				_26013_t=20995200LLU;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1b81c9c26:;
			{
				_26013_t=23587200LLU;
			}
		}
		else if (_match_expr == 10LL) {
			_case_begin_1b81c9c9d:;
			{
				_26013_t=26265600LLU;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1b81c9d25:;
			{
				_26013_t=28857600LLU;
			}
		}
		_match_end_1b81c9709:;
	};
	if ((_25836_leap && (_25823_m >= 2LLU))) {
		_26013_t+=86400LLU;
	};
	return _26013_t;;
}



inline jule::Bool _1b5700abd_isCopyOptimizable(jule::Ptr<_1d0408c95_Data>* _81223_expr) {
	if ((!((*(_81223_expr)).get()._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_81223_expr)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1b6958bc1:;
			{
				return false;;
			}
		}
		_match_end_1b6958b6b:;
	};
	return true;;
}



inline jule::Bool _1b5700e53_isIterCopyOptimizable(jule::Ptr<_1d0408c95_Data>* _82327_expr, jule::Ptr<_1d21bb65a_Var>* _82341_v) {
	if (((!((*(_82327_expr)).get()._field_Lvalue)) && (!(_1d21d35d9_Mutable((*(_82327_expr)).get()._field_Kind.ptr()))))) {
		return true;;
	};
	return ((!((*(_82341_v)).get()._field_Mutable)) && (!((*(_82327_expr)).get()._field_Mutable)));;
}



inline jule::Str _1b571069e_decomposeCommonEsq(jule::U8 _148823_b) {
	{
		auto &_match_expr{ _148823_b };
		
		if (_match_expr == '\\') {
			_case_begin_1b6a06037:;
			{
				return jule::Str("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1b69eeeba:;
			{
				return jule::Str("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1b6a05e05:;
			{
				return jule::Str("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1b6a059e8:;
			{
				return jule::Str("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1b6a05a5e:;
			{
				return jule::Str("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1b6a05ac5:;
			{
				return jule::Str("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1b6a05b3b:;
			{
				return jule::Str("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1b6a0609d:;
			{
				return jule::Str("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1b6a06114:;
			{
				return jule::Str("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1b6a0617a:;
			{
				return jule::Str("\\v", 2);;
			}
		}
		else {
			_case_begin_1b6a058e9:;
			{
				return jule::Str();;
			}
		}
		_match_end_1b6a057b7:;
	};
}



inline jule::Str _1b571098a_sbtoa(jule::U8 _151510_b) {
	if ((_151510_b == 0LLU)) {
		return jule::Str("\\x00", 4);;
	};
	if ((_151510_b < 128LLU)) {
		jule::Str _152013_seq = _1b571069e_decomposeCommonEsq(_151510_b);;
		if ((!(_152013_seq.empty()))) {
			return _152013_seq;;
		};
		if (((32LL <= _151510_b) && (_151510_b <= 126LLU))) {
			return jule::Str::from_byte(_151510_b);;
		};
	};
	jule::Str _15289_seq = _1e76d5a2c_FmtUint(static_cast<jule::U64>(static_cast<jule::U64>(_151510_b)), 8LL);;
	if ((_15289_seq.len() == 2LL)) {
		return (jule::Str("\\0", 2) + _15289_seq);;
	};
	return (jule::Str("\\", 1) + _15289_seq);;
}



inline jule::Str _1b5710c32_cstrBytes(jule::Slice<jule::U8> _153514_bytes) {
	jule::Str _153613_lit = jule::Str::alloc(0LL, _153514_bytes.len());;
	{
		auto expr = &(_153514_bytes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8226ba7:;
		if (it != expr_end) {
			jule::U8 *_153712_b = it;
			{
				_153613_lit+=_1b571098a_sbtoa((*(_153712_b)));
			}
			_iter_next_1b8226ba7:;
			++it;
			goto _iter_begin_1b8226ba7;
		}
		_iter_end_1b8226ba7:;
	};
	return _153613_lit;;
}



inline jule::Str _1b5711051_cstrLit(jule::Slice<jule::U8> _154312_bytes) {
	return ((jule::Str("\"", 1) + _1b5710c32_cstrBytes(_154312_bytes)) + jule::Str("\"", 1));;
}



inline jule::Str _1b571135e_ftoa(jule::F64 _15479_f, jule::I64 _154717_bitsize) {
	if ((_154717_bitsize != 32LL)) {
		if ((_15479_f == static_cast<jule::F64>(static_cast<jule::I64>(_15479_f)))) {
			return _1b5711606_itoa(static_cast<jule::I64>(static_cast<jule::I64>(_15479_f)));;
		};
		if ((_15479_f == static_cast<jule::F64>(static_cast<jule::U64>(_15479_f)))) {
			return _1b571189d_utoa(static_cast<jule::U64>(static_cast<jule::U64>(_15479_f)));;
		};
	};
	jule::Str _155613_m = _1e76c0594_FmtFloat(_15479_f, 'f', -1LL, _154717_bitsize);;
	if ((!(_22b9a06a8_Contains(_155613_m, jule::Str(".", 1))))) {
		(_155613_m).append(".0", 2);
	};
	return _155613_m;;
}



inline jule::Str _1b5711606_itoa(jule::I64 _15639_x) {
	{
		
		if ((_15639_x == jule::MAX_I64)) {
			_case_begin_1b822a12d:;
			{
				return jule::Str("jule::MAX_I64", 13);;
			}
		}
		else if ((_15639_x == jule::MIN_I64)) {
			_case_begin_1b822a20a:;
			{
				return jule::Str("jule::MIN_I64", 13);;
			}
		}
		_match_end_1b822a01d:;
	};
	jule::Str _15719_fmt = _1e76d5db2_FmtInt(_15639_x, 10LL);;
	if (_22ba42250_Is64Bit(jule::Str("amd64", 5))) {
		return (_15719_fmt + jule::Str("LL", 2));;
	};
	return (_15719_fmt + jule::Str("L", 1));;
}



inline jule::Str _1b571189d_utoa(jule::U64 _15789_x) {
	{
		
		if ((_15789_x == jule::MAX_U64)) {
			_case_begin_1b822ba03:;
			{
				return jule::Str("jule::MAX_U64", 13);;
			}
		}
		_match_end_1b822b3c6:;
	};
	jule::Str _15849_fmt = _1e76d5a2c_FmtUint(_15789_x, 10LL);;
	if (_22ba42250_Is64Bit(jule::Str("amd64", 5))) {
		return (_15849_fmt + jule::Str("LLU", 3));;
	};
	return (_15849_fmt + jule::Str("LU", 2));;
}



inline jule::Bool _1b5711c55_isForwarded(jule::Ptr<_1d2174613_Scope>* _159117_s) {
	jule::Any _15929_last = (*(_159117_s)).get()._field_Stmts[((*(_159117_s)).get()._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _15929_last };
		
		if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1b822c817:;
			{
				{
					auto &_match_expr{ _15929_last.cast_ptr<_1d0408c95_Data>(&__jule_any_type24).get()._field_Model };
					
					if (_match_expr.type == &__jule_any_type23) {
						_case_begin_1b822da5a:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1b822e484:;
						{
							return false;;
						}
					}
					_match_end_1b822e1cb:;
				};
			}
		}
		else {
			_case_begin_1b822d807:;
			{
				return true;;
			}
		}
		_match_end_1b822d72a:;
	};
}



inline jule::Bool _1b571201e_isBuiltinCallHasDebuginf(jule::Ptr<_1d0617eb5_FnCallExprModel>* _160630_m) {
	if ((!(_1d0628305_IsBuiltin((*(_160630_m)).get()._field_Func.ptr())))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_160630_m)).get()._field_Expr };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1b822e693:;
			{
				jule::Ptr<_1d061b8e2_CommonSubIdentExprModel> _161213_csie = (*(_160630_m)).get()._field_Expr.cast_ptr<_1d061b8e2_CommonSubIdentExprModel>(&__jule_any_type73);;
				return _161213_csie.get()._field_Ident.equal("swap", 4);;
			}
		}
		else {
			_case_begin_1b822ed58:;
			{
				return false;;
			}
		}
		_match_end_1b8230144:;
	};
}



inline jule::Bool _1b5712250_isExprComesFromBind(jule::Ptr<_1d0408c95_Data>* _161925_d) {
	{
		auto &_match_expr{ (*(_161925_d)).get()._field_Model };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1b8230ba0:;
			{
				return (*(_161925_d)).get()._field_Model.cast_ptr<_1d21bb65a_Var>(&__jule_any_type8).get()._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1b823170b:;
			{
				return (*(_161925_d)).get()._field_Model.cast_ptr<_1d061a836_StructSubIdentExprModel>(&__jule_any_type71).get()._field_Owner.get()._field_Decl.get()._field_Binded;;
			}
		}
		else {
			_case_begin_1b82303db:;
			{
				return false;;
			}
		}
		_match_end_1b8230386:;
	};
}



inline jule::Bool _1b57124e7_isAny(jule::Ptr<_1d21d1d46_TypeKind>* _163115_t) {
	if ((_1d21d5014_TypeEnum((*(_163115_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1d21d9568_Prim> _16359_prim = _1d21d4563_Prim((*(_163115_t)).ptr());;
	return ((_16359_prim != nullptr) && _1d21dca11_IsAny(_16359_prim.ptr()));;
}



inline void _1b5a81e71_iterFiles(jule::Ptr<_1d2195bb7_Package>* _136819_pkg, jule::Fn<void(jule::Ptr<_1d040428a_SymbolTable>*)> _136834_f) {
	{
		auto expr = &((*(_136819_pkg)).get()._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b839719b:;
		if (it != expr_end) {
			jule::Ptr<_1d040428a_SymbolTable> _136917_file = *it;
			{
				_136834_f(&(_136917_file));
			}
			_iter_next_1b839719b:;
			++it;
			goto _iter_begin_1b839719b;
		}
		_iter_end_1b839719b:;
	};
}



inline jule::Str _1b5a8225c_concatAllParts(jule::Slice<jule::Ptr<_22be1281d_Token>> _137519_parts) {
	jule::I64 _137613_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b839828a:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_137712_part = it;
			{
				_137613_n+=(*(_137712_part)).get()._field_Kind.len();
			}
			_iter_next_1b839828a:;
			++it;
			goto _iter_begin_1b839828a;
		}
		_iter_end_1b839828a:;
	};
	if ((_137613_n == 0LL)) {
		return jule::Str();;
	};
	jule::Str _138313_s = jule::Str::alloc(0LL, _137613_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8397b3b:;
		if (it != expr_end) {
			jule::Ptr<_22be1281d_Token> *_138412_p = it;
			{
				_138313_s+=(*(_138412_p)).get()._field_Kind;
			}
			_iter_next_1b8397b3b:;
			++it;
			goto _iter_begin_1b8397b3b;
		}
		_iter_end_1b8397b3b:;
	};
	return _138313_s;;
}



inline jule::Bool _1b5a8259d_containsTraitMethod(jule::Ptr<_1d21494c8_Trait>* _139129_t, jule::Str* _139141_ident) {
	{
		auto expr = &((*(_139129_t)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8399bd7:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _139212_m = *it;
			{
				if ((_139212_m.get()._field_Ident == (*(_139141_ident)))) {
					return true;;
				};
			}
			_iter_next_1b8399bd7:;
			++it;
			goto _iter_begin_1b8399bd7;
		}
		_iter_end_1b8399bd7:;
	};
	return false;;
}



inline void _1b5a8289a_pushMethodsFromInherit(jule::Ptr<_1d21494c8_Trait>* _140332_dest, jule::Ptr<_1d21494c8_Trait>* _140351_src) {
	_1b5a82b75_pushMethodsFromInherits(_140332_dest, _140351_src);
	{
		auto expr = &((*(_140351_src)).get()._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b839ad92:;
		if (it != expr_end) {
			jule::Ptr<_1d06242bd_Fn> _140517_m = *it;
			{
				if ((!(_1b5a8259d_containsTraitMethod(_140332_dest, &(_140517_m.get()._field_Ident))))) {
					(*(_140332_dest)).get()._field_Methods = jule::alloc_for_append((*(_140332_dest)).get()._field_Methods,1);(*(_140332_dest)).get()._field_Methods.__push(_140517_m);;
				};
			}
			_iter_next_1b839ad92:;
			++it;
			goto _iter_begin_1b839ad92;
		}
		_iter_end_1b839ad92:;
	};
}



inline void _1b5a82b75_pushMethodsFromInherits(jule::Ptr<_1d21494c8_Trait>* _141433_dest, jule::Ptr<_1d21494c8_Trait>* _141452_src) {
	{
		auto expr = &((*(_141452_src)).get()._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b839b1b1:;
		if (it != expr_end) {
			jule::Ptr<_1d21d8be9_TypeSymbol> _141517_inh = *it;
			{
				jule::Ptr<_1d21494c8_Trait> _141617_t2 = _1d21d5c29_Trait(_141517_inh.get()._field_Kind.ptr());;
				_1b5a8289a_pushMethodsFromInherit(_141433_dest, &(_141617_t2));
			}
			_iter_next_1b839b1b1:;
			++it;
			goto _iter_begin_1b839b1b1;
		}
		_iter_end_1b839b1b1:;
	};
}



inline jule::Ptr<_1d05aba4c_Directive> _1b5a90d92_findDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _46623_directives, jule::Str _46654_tag) {
	{
		auto expr = _46623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8484ba1:;
		if (it != expr_end) {
			jule::Ptr<_1d05aba4c_Directive> _46717_dr = *it;
			{
				if ((_46717_dr.get()._field_Tag.get()._field_Kind == _46654_tag)) {
					return _46717_dr;;
				};
			}
			_iter_next_1b8484ba1:;
			++it;
			goto _iter_begin_1b8484ba1;
		}
		_iter_end_1b8484ba1:;
	};
	return nullptr;;
}



inline jule::Bool _1b5a91227_hasDirective(jule::Slice<jule::Ptr<_1d05aba4c_Directive>>* _47618_directives, jule::Str _47649_tag) {
	return (_1b5a90d92_findDirective(_47618_directives, _47649_tag) != nullptr);;
}



inline jule::Bool _1b5a914be_shouldInitialized(jule::Ptr<_1d21d1d46_TypeKind>* _48327_t) {
	jule::Ptr<_1d21d9568_Prim> _4849_prim = _1d21d4563_Prim((*(_48327_t)).ptr());;
	if ((_4849_prim != nullptr)) {
		return ((!(_1d21dca11_IsAny(_4849_prim.ptr()))) && (!(_1d21dc79c_IsStr(_4849_prim.ptr()))));;
	};
	{
		
		if ((_1d21d47c7_Sptr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b84878b8:;
			{
				return false;;
			}
		}
		else if ((_1d21d5e8d_Map((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b84874ab:;
			{
				return false;;
			}
		}
		else if ((_1d21d54dc_Slc((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b8487533:;
			{
				return false;;
			}
		}
		else if ((_1d21d5c29_Trait((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b8487643:;
			{
				return false;;
			}
		}
		else if ((_1d21d5751_Fn((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b84876a9:;
			{
				return false;;
			}
		}
		else if ((_1d21d5278_Arr((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b8487720:;
			{
				jule::Ptr<_1d21e0904_Arr> _50017_arr = _1d21d5278_Arr((*(_48327_t)).ptr());;
				return _1b5a914be_shouldInitialized(&(_50017_arr.get()._field_Elem));;
			}
		}
		else if ((_1d21d59b5_Struct((*(_48327_t)).ptr()) != nullptr)) {
			_case_begin_1b8487786:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1b8485201:;
			{
				return true;;
			}
		}
		_match_end_1b8486c5d:;
	};
}



inline void _22bb24b4b_printErrorMessage(jule::Str _3022_msg) {
	jule::outln(_3022_msg);
}



inline void _22bb24d9e_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_22bb24b4b_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I64 _4113_max = _22bb24970_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_22bb24970_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b85230c4:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_4212_k = it;
			{
				jule::I64 _4313_n = (*(_4212_k))[0LL].len();;
				if ((_4313_n > _4113_max)) {
					_4113_max=_4313_n;
				};
			}
			_iter_next_1b85230c4:;
			++it;
			goto _iter_begin_1b85230c4;
		}
		_iter_end_1b85230c4:;
	};
	jule::Str _4913_s = jule::Str();;
	;
	{
		auto expr = &(_22bb24970_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b8524702:;
		if (it != expr_end) {
			jule::I64 _519_i = it - expr->begin();
			jule::Array<jule::Str,2> *_5112_part = it;
			{
				_4913_s+=(*(_5112_part))[0LL];
				_4913_s+=_22b99a1db_Repeat(jule::Str(" ", 1), static_cast<jule::I64>(((_4113_max - (*(_5112_part))[0LL].len()) + 5LL)));
				_4913_s+=(*(_5112_part))[1LL];
				if (((_519_i + 1LL) < 5LL)) {
					(_4913_s).append("\n", 1);
				};
			}
			_iter_next_1b8524702:;
			++it;
			_519_i++;
			goto _iter_begin_1b8524702;
		}
		_iter_end_1b8524702:;
	};
	jule::outln(_4913_s);
}



inline void _22bb250ad_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_22bb24b4b_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("jule0.0.15 @master", 18));
}



inline void _22bb2529a_toolDistos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	jule::out(jule::Str("windows", 7));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("linux", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("darwin", 6));
	jule::outln(jule::Str());
}



inline void _22bb25410_toolDistarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	jule::out(jule::Str("amd64", 5));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("i386", 4));
	jule::out(jule::Str(" ", 1));
	jule::out(jule::Str("arm64", 5));
	jule::outln(jule::Str());
}



inline void _22bb2561e_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_22bb24b4b_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1059_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1059_cmd };
		
		if (_match_expr == jule::Str("distos", 6)) {
			_case_begin_1b852a1a8:;
			{
				_22bb2529a_toolDistos();
			}
		}
		else if (_match_expr == jule::Str("distarch", 8)) {
			_case_begin_1b8529e33:;
			{
				_22bb25410_toolDistarch();
			}
		}
		else {
			_case_begin_1b8529581:;
			{
				_22bb24b4b_printErrorMessage((jule::Str("undefined command: ", 19) + _1059_cmd));
			}
		}
		_match_end_1b85299b0:;
	};
}



inline void _22bb2582d_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_22bb24b4b_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::outln(jule::Str("julec version: jule0.0.15 @master", 33));
	jule::outln(jule::Str("architecture: amd64", 19));
	jule::outln(jule::Str("operating system: darwin", 24));
	jule::outln((jule::Str("default compiler: ", 18) + _229910818_Compiler));
	jule::outln((jule::Str("default C++ standard: ", 22) + _229911cae_CppStd));
}



inline void _22bb25b19_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::outln(jule::Str("command is not given, try julec mod init", 40));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_22bb24b4b_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str("init", 4)) {
			_case_begin_1b852d398:;
			{
				({
					auto except = static__22a8b9293_Write(jule::Str("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_22bb24b4b_printErrorMessage(jule::Str("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1b852cd15:;
			{
				_22bb24b4b_printErrorMessage((jule::Str("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1b852cead:;
	};
}



inline jule::Bool _22bb25db1_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str("help", 4)) {
			_case_begin_1b852d442:;
			{
				_22bb24d9e_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("version", 7)) {
			_case_begin_1b852e8d8:;
			{
				_22bb250ad_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("tool", 4)) {
			_case_begin_1b852e94e:;
			{
				_22bb2561e_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("julenv", 6)) {
			_case_begin_1b852e1ac:;
			{
				_22bb2582d_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str("mod", 3)) {
			_case_begin_1b852e223:;
			{
				_22bb25b19_mod(_15320_args);
			}
		}
		else {
			_case_begin_1b852e146:;
			{
				return false;;
			}
		}
		_match_end_1b852db18:;
	};
	return true;;
}



inline void _22bb26026_showInfo(void) {
	jule::outln(jule::Str("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307));
}



void entry_point(void) {
	jule::Slice<jule::Str> _18913_args = _22a969145_Args();;
	if ((_18913_args.len() < 2LL)) {
		_22bb26026_showInfo();
		return;;
	};
	if (_22bb25db1_processCommand(&(_18913_args))) {
		return;;
	};
	_1b5a99197_compileCommand(&(_18913_args));
}



inline void _1b5a961e9_init(void) {
	_229910818_Compiler=jule::Str("clang", 5);
}



inline jule::Ptr<_22a8b8490_File> _1b5a964a2_openOutput(jule::Str* _4316_path) {
	jule::Str _449_dir = _22b9a633a_Dir((*(_4316_path)));;
	({
		auto except = static__22a8ab8a1_Of(_449_dir);
		if (!except.ok()) {
			({
				auto except = static__22b9a868e_Create(_449_dir);
				if (!except.ok()) {
					_1e29a420c_Throw(jule::Str("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__22a8b8b99_Create((*(_4316_path)));
		(except.ok()) ? (except.result) : ({
			_1e29a420c_Throw(jule::Str("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1b5a96617_clearObjects(void) {
	({
		auto except = static__22a8aa10d_Remove(_1b5a97728_getCompilePath());
		if (!except.ok()) {
			jule::outln(jule::Str("a problem occurs when object cleaning", 37));
			return;;
		}
	});
	static__22b9a889d_Remove(_1b5a95a01_OutDir);
}



inline void _1b5a96914_compileIr(jule::Str _7214_compiler, jule::Str _7229_compilerCmd) {
	jule::Ptr<_22bac9925_Cmd> _7313_cmd = static__22bac9d76_New(_7214_compiler);;
	_7313_cmd.get()._field_Args=_22b9a0367_Split(_7229_compilerCmd, jule::Str(" ", 1), -1LL);
	({
		auto except = _22baca052_Spawn(_7313_cmd.ptr());
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I64>(1LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b8535191:;
					{
						static__1e29a1a78_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I64>(0LL), &__jule_any_type0) == _match_expr) {
					_case_begin_1b8535405:;
					{
						static__1e29a1a78_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1b85352c3:;
					{
						static__1e29a1a78_Print(jule::Str("\033[31m", 5), jule::Str("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1b8535229:;
			};
			_1e29a420c_Throw(jule::Str());
		}
	});
	jule::I64 _869_status = ({
		auto except = _22baca492_Wait(_7313_cmd.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:86:18"));
		(except.result);
	});;
	if ((_869_status != 0LL)) {
		jule::Str _8813_errorMessage = ((jule::Str("\n>>> your backend compiler (", 28) + _229910818_Compiler) + jule::Str(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149));;
		static__1e29a1a78_Print(jule::Str("\033[31m", 5), _8813_errorMessage);
		_1e29a420c_Throw(jule::Str());
	};
	_1b5a96617_clearObjects();
}



inline jule::Bool _1b5a96bab_isCppSourceFile(jule::Str _9920_path) {
	jule::I64 _1009_offset = _22b99dd27_FindLastByte(_9920_path, '.');;
	if ((_1009_offset == -1LL)) {
		return false;;
	};
	return _22ba301e9_IsValidCppExt(_9920_path.slice(_1009_offset));;
}



inline void _1b5a96dba_pushCompCmdClang(jule::Str* _10726_cmd) {
	((*(_10726_cmd))).append("-Wno-everything ", 16);
	((*(_10726_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _229911cae_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b8533c72:;
			{
				((*(_10726_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b8538ded:;
			{
				((*(_10726_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b8538e64:;
			{
				((*(_10726_cmd))).append("c++20", 5);
			}
		}
		_match_end_1b8538bcd:;
	};
	((*(_10726_cmd))).append(" ", 1);
	if (_229913002_Production) {
		((*(_10726_cmd))).append("-O3 ", 4);
		((*(_10726_cmd))).append("-flto ", 6);
		((*(_10726_cmd))).append("-DNDEBUG ", 9);
		((*(_10726_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_10726_cmd))).append("-O0 ", 4);
	};
}



inline void _1b5a970c9_pushCompCmdGcc(jule::Str* _13324_cmd) {
	((*(_13324_cmd))).append("-w ", 3);
	((*(_13324_cmd))).append("--std=", 6);
	{
		auto &_match_expr{ _229911cae_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5)) {
			_case_begin_1b853a97c:;
			{
				((*(_13324_cmd))).append("c++14", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp17", 5)) {
			_case_begin_1b853ac9b:;
			{
				((*(_13324_cmd))).append("c++17", 5);
			}
		}
		else if (_match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b853ad12:;
			{
				((*(_13324_cmd))).append("c++20", 5);
			}
		}
		_match_end_1b853aa8c:;
	};
	((*(_13324_cmd))).append(" ", 1);
	if (_229913002_Production) {
		((*(_13324_cmd))).append("-O3 ", 4);
		((*(_13324_cmd))).append("-DNDEBUG ", 9);
		((*(_13324_cmd))).append("-fomit-frame-pointer ", 21);
	} else {
		((*(_13324_cmd))).append("-O0 ", 4);
	};
}



inline __jule_tuple_str__jule_tuple_str _1b5a9752a_genCompileCmd(jule::Str _15918_sourcePath, jule::Ptr<_1d2621e34_IR>* _15936_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_16010_compiler = &(_229911a8e_CompilerPath);;
	jule::Str _16113_cmd = jule::Str::alloc(0LL, 64LLU);;
	{
		auto &_match_expr{ _229910818_Compiler };
		
		if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b853ce57:;
			{
				_1b5a970c9_pushCompCmdGcc(&(_16113_cmd));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b853cebd:;
			{
				_1b5a96dba_pushCompCmdClang(&(_16113_cmd));
			}
		}
		_match_end_1b853d2dc:;
	};
	{
		auto expr = &((*(_15936_ir)).get()._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b853dc5a:;
		if (it != expr_end) {
			jule::Ptr<_1d219307c_ImportInfo> *_17112_u = it;
			{
				if (((*(_17112_u)).get()._field_Binded && _1b5a96bab_isCppSourceFile((*(_17112_u)).get()._field_Path))) {
					_16113_cmd+=(*(_17112_u)).get()._field_Path;
					(_16113_cmd).append(" ", 1);
				};
			}
			_iter_next_1b853dc5a:;
			++it;
			goto _iter_begin_1b853dc5a;
		}
		_iter_end_1b853dc5a:;
	};
	if ((!(_1b5a96040_Out.empty()))) {
		(_16113_cmd).append("-o ", 3);
		_16113_cmd+=_1b5a96040_Out;
		(_16113_cmd).append(" ", 1);
	};
	_16113_cmd+=_15918_sourcePath;
	{
		auto expr = &((*(_15936_ir)).get()._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1b853e1de:;
		if (it != expr_end) {
			jule::Str *_18612_pass = it;
			{
				(_16113_cmd).append(" ", 1);
				_16113_cmd+=(*(_18612_pass));
			}
			_iter_next_1b853e1de:;
			++it;
			goto _iter_begin_1b853e1de;
		}
		_iter_end_1b853e1de:;
	};
	if (_22bb2185c_Os.equal("windows", 7)) {
		(_16113_cmd).append(" -lshell32", 10);
	};
	__jule_func_result.__jule_result_arg0 = (*(_16010_compiler));
	__jule_func_result.__jule_result_arg1 = _16113_cmd;
	return __jule_func_result;;
}



inline jule::Str _1b5a97728_getCompilePath(void) {
	return _22b9a56d0_Join(jule::Slice<jule::Str>::make({_1b5a95a01_OutDir,_1b5a95c76_OutName}));;
}



inline void _1b5a9796a_applyTargetIndependentOptimizations(jule::Ptr<_1d2621e34_IR>* _20545_ir) {
	jule::Ptr<_1d07a11e7_Optimizer> _20613_opt = static__1d07a169d_New(_20545_ir);;
	_1d07a2ade_Optimize(_20613_opt.ptr());
}



inline void _1b5a97ad0_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _229910818_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1b854216a:;
			{
				_1e29a420c_Throw(jule::Str("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str("clang", 5)) {
			_case_begin_1b8541d4b:;
			{
				if (_229911a8e_CompilerPath.empty()) {
					_229911a8e_CompilerPath=jule::Str("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str("gcc", 3)) {
			_case_begin_1b8541db2:;
			{
				if (_229911a8e_CompilerPath.empty()) {
					_229911a8e_CompilerPath=jule::Str("g++", 3);
				};
			}
		}
		else {
			_case_begin_1b8541cd5:;
			{
				_1e29a420c_Throw((jule::Str("invalid option value for --compiler: ", 37) + _229910818_Compiler));
			}
		}
		_match_end_1b8541b2b:;
	};
}



inline void _1b5a97c9a_checkTargetArch(jule::Str _22720_arch) {
	if ((((!_22720_arch.equal("amd64", 5)) && (!_22720_arch.equal("arm64", 5))) && (!_22720_arch.equal("i386", 4)))) {
		_1e29a420c_Throw((jule::Str("--target: unsupported/undefined architecture: ", 46) + _22720_arch));
	};
}



inline void _1b5a97ea9_checkTargetOs(jule::Str _23518_os) {
	if ((((!_23518_os.equal("windows", 7)) && (!_23518_os.equal("linux", 5))) && (!_23518_os.equal("darwin", 6)))) {
		_1e29a420c_Throw((jule::Str("--target: unsupported/undefined operating system: ", 50) + _23518_os));
	};
}



inline void _1b5a981b8_checkTargetFlag(jule::Str* _24321_target) {
	if ((*(_24321_target)).empty()) {
		_1e29a420c_Throw(jule::Str("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2489_parts = _22b9a0367_Split((*(_24321_target)), jule::Str("-", 1), -1LL);;
	if ((_2489_parts.len() != 2LL)) {
		_1e29a420c_Throw((jule::Str("--target: undefined platform target format: ", 44) + (*(_24321_target))));
	};
	jule::Str _25310_os;;
	jule::Str _25314_arch;;
	({
		jule::Str ___jule_assign_arg = _2489_parts[0LL];
		jule::Str _1___jule_assign_arg = _2489_parts[1LL];
		_25310_os = ___jule_assign_arg;
		_25314_arch = _1___jule_assign_arg;
	});
	if ((!_25310_os.equal("native", 6))) {
		_1b5a97ea9_checkTargetOs(_25310_os);
		_22bb2185c_Os=_25310_os;
	};
	if ((!_25314_arch.equal("native", 6))) {
		_1b5a97c9a_checkTargetArch(_25314_arch);
		_22bb21b26_Arch=_25314_arch;
	};
	_1e76da25c_UpdateTarget();
}



inline void _1b5a983c7_checkOptFlag(jule::Str* _26618_opt) {
	if ((*(_26618_opt)).empty()) {
		_1e29a420c_Throw(jule::Str("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_26618_opt)) };
		
		if (_match_expr == jule::Str("L0", 2)) {
			_case_begin_1b85482b4:;
		}
		else if (_match_expr == jule::Str("L1", 2)) {
			_case_begin_1b8548759:;
			{
				_1d221540c_PushOptLevel(static_cast<jule::I64>(1LL));
			}
		}
		else {
			_case_begin_1b854811b:;
			{
				_1e29a420c_Throw((jule::Str("--opt: invalid optimization level: ", 35) + (*(_26618_opt))));
			}
		}
		_match_end_1b85483a2:;
	};
}



inline void _1b5a9874b_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _229911cae_CppStd };
		
		if (_match_expr == jule::Str("cpp14", 5) || _match_expr == jule::Str("cpp17", 5) || _match_expr == jule::Str("cpp20", 5)) {
			_case_begin_1b85487c0:;
			{
				goto _match_end_1b8549480;
			}
		}
		else {
			_case_begin_1b8548e52:;
			{
				_1e29a420c_Throw((jule::Str("--cppstd: invalid cpp standard: ", 32) + _229911cae_CppStd));
			}
		}
		_match_end_1b8549480:;
	};
}



inline jule::Slice<jule::Str> _1b5a989d2_checkFlags(jule::Slice<jule::Str>* _29116_args) {
	jule::Str _29213_opt = jule::Str("L0", 2);;
	jule::Str _29313_target = jule::Str("native-native", 13);;
	jule::Ptr<_1d2a66642_FlagSet> _29513_fs = static__1d2a6692d_New();;
	_1b854b1b8_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29213_opt)))), jule::Str("opt", 3), 0LL, jule::Str("Optimization level", 18));
	_1b854b1b8_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_29313_target)))), jule::Str("target", 6), 0LL, jule::Str("Target system", 13));
	_1b854b1b8_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_1b5a96040_Out)))), jule::Str("out", 3), 'o', jule::Str("Output identifier", 17));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_229912056_Shadowing)))), jule::Str("shadowing", 9), 0LL, jule::Str("Allow shadowing", 15));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_2299122cb_Transpilation)))), jule::Str("transpile", 9), 't', jule::Str("Transpile code", 14));
	_1b854b1b8_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_229910818_Compiler)))), jule::Str("compiler", 8), 0LL, jule::Str("Backend compiler", 16));
	_1b854b1b8_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_229911a8e_CompilerPath)))), jule::Str("compiler-path", 13), 0LL, jule::Str("Path of backend compiler", 24));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_229913002_Production)))), jule::Str("production", 10), 'p', jule::Str("Compile for production", 22));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_22991285e_RC)))), jule::Str("disable-rc", 10), 0LL, jule::Str("Disable reference counting", 26));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_229912c38_Safety)))), jule::Str("disable-safety", 14), 0LL, jule::Str("Disable safety", 14));
	_1b854b1b8_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_229911cae_CppStd)))), jule::Str("cppstd", 6), 0LL, jule::Str("C++ standard", 12));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d2203bae_Copy)))), jule::Str("opt-copy", 8), 0LL, jule::Str("Copy optimization", 17));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d22039b1_Deadcode)))), jule::Str("opt-deadcode", 12), 0LL, jule::Str("Deadcode optimization", 21));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d220ea22_Append)))), jule::Str("opt-append", 10), 0LL, jule::Str("Append optimization", 19));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d22142a7_Math)))), jule::Str("opt-math", 8), 0LL, jule::Str("Math optimization", 17));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d221450a_Access)))), jule::Str("opt-access", 10), 0LL, jule::Str("Access optimization", 19));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d22147c4_Inline)))), jule::Str("opt-inline", 10), 0LL, jule::Str("Inline optimization", 19));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d2214a8d_Ptr)))), jule::Str("opt-ptr", 7), 0LL, jule::Str("Pointer optimizations", 21));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d2214e67_Cond)))), jule::Str("opt-cond", 8), 0LL, jule::Str("Conditional optimizations", 25));
	_1b855406c_AddVar(_29513_fs.ptr(), ((jule::Ptr<jule::Bool>)((&(_1d2215231_Str)))), jule::Str("opt-str", 7), 0LL, jule::Str("String optimizations", 20));
	jule::Slice<jule::Str> _31813_content = ({
		auto except = _1b5a922a0_Parse(_29513_fs.ptr(), (*(_29116_args)));
		(except.ok()) ? (except.result) : ({
			_1e29a420c_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1b5a97ad0_checkCompilerFlag();
	_1b5a9874b_checkCppStdFlag();
	_1b5a981b8_checkTargetFlag(&(_29313_target));
	_1b5a983c7_checkOptFlag(&(_29213_opt));
	return _31813_content;;
}



inline void _1b5a98be1_setupSemaFlags(jule::I64* _33124_flags) {
	if (_229912056_Shadowing) {
		(*(_33124_flags))|=static_cast<jule::I64>(1LL);
	};
}



inline jule::Ptr<_1d2621e34_IR> _1b5a98e88_buildIr(jule::Slice<jule::Str>* _33713_args) {
	jule::Slice<jule::Str> _3389_content = _1b5a989d2_checkFlags(_33713_args);;
	jule::I64 _34013_semaFlags = static_cast<jule::I64>(0LL);;
	_1b5a98be1_setupSemaFlags(&(_34013_semaFlags));
	if ((_3389_content.len() == 0LL)) {
		_1e29a420c_Throw(_22ba3cb0d_Logf(jule::Str("missing compile path", 20), jule::Slice<jule::Any>()));
	} else if ((_3389_content.len() > 1LL)) {
		_1e29a420c_Throw((jule::Str("undefined content: ", 19) + _3389_content[1LL]));
	};
	jule::Str _34814_path;;
	jule::Bool _34820_ok = false;;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _22b9a5c1e_Abs(_3389_content[0LL]);
		_34814_path = __jule_assign_result.__jule_result_arg0;
		_34820_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34820_ok))) {
		_1e29a420c_Throw(jule::Str("compile path could not processed because of a problem", 53));
	};
	jule::Ptr<_22a8baa8b_Status> _3549_inf = ({
		auto except = static__22a8ab8a1_Of(_22bb20cac_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1e29a420c_Throw(_22ba3cb0d_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
			return nullptr;;
		} jule::Ptr<_22a8baa8b_Status>(nullptr);});
	});;
	if ((!(_22a8bae98_IsDir(_3549_inf.ptr())))) {
		_1e29a420c_Throw(_22ba3cb0d_Logf(jule::Str("standard library directory not found", 36), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1d2621e34_IR> _36214_ir;;
	jule::Slice<_22ba3c6bd_Log> _36218_logs;;
	({
		__jule_tuple_x_1d2621e34_IR__jule_tuple_s_22ba3c6bd_Log __jule_assign_result = static__1d26223b8_Build(_34814_path, _34013_semaFlags);
		_36214_ir = __jule_assign_result.__jule_result_arg0;
		_36218_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_36214_ir == nullptr) && (_36218_logs == nullptr))) {
		_1e29a420c_Throw(_22ba3cb0d_Logf(jule::Str("there is no Jule source code in package: @", 42), jule::Slice<jule::Any>::make({jule::Any(_34814_path, &__jule_any_type5)})));
	};
	if ((_36218_logs != nullptr)) {
		static__1e29a37d3_PrintLogs(&(_36218_logs));
		_1e29a420c_Throw(jule::Str());
	};
	return _36214_ir;;
}



inline void _1b5a99197_compileCommand(jule::Slice<jule::Str>* _37724_args) {
	(*(_37724_args))=(*(_37724_args)).slice(1LL);
	if ((*(_37724_args))[0LL].equal("test", 4)) {
		_229912595_Test=true;
		(*(_37724_args))=(*(_37724_args)).slice(1LL);
	};
	jule::Ptr<_1d2621e34_IR> _38313_ir = _1b5a98e88_buildIr(_37724_args);;
	;
	if ((!(_229912595_Test))) {
		jule::Ptr<_1d06242bd_Fn> _38817_main = _1d219714c_FindFn(_38313_ir.get()._field_Main.ptr(), jule::Str("main", 4), false);;
		if ((_38817_main == nullptr)) {
			_1e29a420c_Throw(_22ba3cb0d_Logf(jule::Str("missing entry point: entry point (main) function is not defined", 63), jule::Slice<jule::Any>()));
		};
	};
	_1b5a9796a_applyTargetIndependentOptimizations(&(_38313_ir));
	_1d26232dc_Order(_38313_ir.ptr());
	jule::Str _39910_compiler;;
	jule::Str _39920_compilerCmd;;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1b5a9752a_genCompileCmd(_1b5a97728_getCompilePath(), &(_38313_ir));
		_39910_compiler = __jule_assign_result.__jule_result_arg0;
		_39920_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1b5a75a36_ObjectCoder> _40113_oc = static__1b5a75e54_New(&(_38313_ir), _1b5a74194_SerializationInfo{._field_Compiler=_39910_compiler, ._field_CompilerCommand=_39920_compilerCmd});;
	if (_229912595_Test) {
		jule::Ptr<_1b57144c7_TestCoder> _40617_tc = static__1b571494a_New(&(_40113_oc));;
		_1b59d208b_Serialize(_40617_tc);
	} else {
		_1b5a81b0d_Serialize(_40113_oc);
	};
	jule::Str _4129_path = _1b5a97728_getCompilePath();;
	jule::Ptr<_22a8b8490_File> _41313_file = _1b5a964a2_openOutput(&(_4129_path));;
	({
		auto except = _22a8b9dba_WriteStr(_41313_file.ptr(), &(_40113_oc.get()._field_Obj));
		if (!except.ok()) {
			_1e29a420c_Throw(jule::Str("object code could not write", 27));
		}
	});
	({
		auto except = _22a8ba096_Close(_41313_file.ptr());
		if (!except.ok()) jule::panic(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:417:5"));
	});
	if ((!(_2299122cb_Transpilation))) {
		_1b5a96914_compileIr(_39910_compiler, _39920_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_22bb21c58_init();
	_1e76da3c2_init();
	_1b5a961e9_init();

}

int main(int argc, char *argv[], char *envp[]) {
    jule::setup_argv(argc, argv);
    jule::setup_envp(envp);

    __jule_call_initializers();
    entry_point();

    return EXIT_SUCCESS;
}