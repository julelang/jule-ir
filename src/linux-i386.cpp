// Auto generated by JuleC.
// JuleC version: jule0.1.1 @master
// Date: 18/10/2024 (DD/MM/YYYY) UTC
//
// Recomended Compile Command;
// clang++ -Wno-everything --std=c++17 -O3 -flto -DNDEBUG -fomit-frame-pointer dist/ir.cpp

#define __JULE_ENABLE__PRODUCTION
#include <arpa/inet.h>
#include <netinet/in.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <dirent.h>
#include <fcntl.h>
#include <unistd.h>
#include <cstdio>
#include <sys/stat.h>
#include <pthread.h>
#include <signal.h>
#include <sys/wait.h>
#include <chrono>
#include <time.h>


#include "api/jule.hpp"                                   

#include "std/jule/integrated/integrated.hpp"                                   

struct _1a952ce34_acceptRange;
struct _1a968904b_LittleEndian;
struct _1a96a39a0_u128;
struct _1c694982d_group;
struct _1c6a88010_group;
struct _1c694752e__Map;
struct _1c6a85d98__Map;
struct _1c6953c66_mapIterator;
struct _1c11211d6_mapIterator;
struct _1a95669ea_Builder;
struct _1abb28c47_foldPair;
struct _1abb29242_CaseRange;
struct _1abb296e8_Range16;
struct _1abb29c26_Range32;
struct _1abb2a199_RangeTable;
struct _1abb389b0_lazyBuff;
struct _1a9c30b64_File;
struct _1a9cc1d04_cmdAttrs;
struct _1a9cc3e6b_Stat;
struct _1a9575ca1_Log;
struct _1ac579004_floatInfo;
struct _1ac579b4d_decimalSlice;
struct _1ac591a33_leftCheat;
struct _1ac59254a_decimal;
struct _1abb6a96a_AnsiEscape;
struct _1ac597a6c_Logger;
struct _1bc247014_Token;
struct _1bc24cab9_Fileset;
struct _1bc24edda_kindPair;
struct _1bc255d7a_lex;
struct _1bc25aa50_AST;
struct _1bc25b90d_Node;
struct _1bc25bd2b_Directive;
struct _1bc25c90e_TypeDecl;
struct _1bc25d019_IdentTypeDecl;
struct _1bc25d2d3_SubIdentTypeDecl;
struct _1bc25d6ac_NamespaceTypeDecl;
struct _1bc25d9a9_SptrTypeDecl;
struct _1bc25dd3e_SlcTypeDecl;
struct _1bc25e13b_TupleTypeDecl;
struct _1bc25e438_PtrTypeDecl;
struct _1bc25ebca_ArrTypeDecl;
struct _1bc260428_MapTypeDecl;
struct _1bc260802_RetTypeDecl;
struct _1bc261c43_Expr;
struct _1bc26200c_RangeExpr;
struct _1bc262617_UseExpr;
struct _1bc262837_TupleExpr;
struct _1bc262bcd_LitExpr;
struct _1bc2630a7_UnsafeExpr;
struct _1bc26355d_IdentExpr;
struct _1bc263d00_UnaryExpr;
struct _1bc2641c9_VariadicExpr;
struct _1bc2645a3_CastExpr;
struct _1bc26497c_NamespaceExpr;
struct _1bc264d56_SubIdentExpr;
struct _1bc26530c_BinaryExpr;
struct _1bc26596c_FnCallExpr;
struct _1bc266462_FieldExprPair;
struct _1bc266c8c_StructLit;
struct _1bc267243_BraceLit;
struct _1bc267a6d_KeyValPair;
struct _1bc268299_SliceExpr;
struct _1bc268c06_IndexingExpr;
struct _1bc269366_SlicingExpr;
struct _1bc269663_Constraint;
struct _1bc269b19_GenericDecl;
struct _1bc269ee3_LabelSt;
struct _1bc26a3bc_GotoSt;
struct _1bc26a6b9_FallSt;
struct _1bc26ad29_AssignLeft;
struct _1bc26b3ac_AssignSt;
struct _1bc26c39c_Stmt;
struct _1bc26ca0c_ScopeTree;
struct _1bc26d249_ParamDecl;
struct _1bc26e69b_FnDecl;
struct _1bc270856_VarDecl;
struct _1bc270c30_RetSt;
struct _1bc2714a0_Iter;
struct _1bc271cca_WhileKind;
struct _1bc2726d2_RangeKind;
struct _1bc272aab_BreakSt;
struct _1bc272e85_ContSt;
struct _1bc27343b_If;
struct _1bc273815_Else;
struct _1bc273cbb_Conditional;
struct _1bc274508_TypeAliasDecl;
struct _1bc2749ae_Case;
struct _1bc2752c8_MatchCase;
struct _1bc27585b_UseDecl;
struct _1bc275d12_EnumItemDecl;
struct _1bc2768c3_EnumDecl;
struct _1bc2771ed_TypeEnumItemDecl;
struct _1bc27785d_TypeEnumDecl;
struct _1bc277b27_FieldDecl;
struct _1bc27851d_StructDecl;
struct _1bc278c5a_TraitDecl;
struct _1bc2793ba_Impl;
struct _1bac25065_Const;
struct _1bc27a377_Field;
struct _1bc27c357_Operators;
struct _1bc27d26a_Struct;
struct _1bc280525_FieldIns;
struct _1bc2810c5_StructIns;
struct _1bc2e1795_OperandExprModel;
struct _1bc2e1c90_BinaryExprModel;
struct _1bc2e2169_UnaryExprModel;
struct _1bc2e2697_StructArgExprModel;
struct _1bc2e2a3d_StructLitExprModel;
struct _1bc2e2d3a_AllocStructLitExprModel;
struct _1bc2e33bd_CastingExprModel;
struct _1bc2e3c70_FnCallExprModel;
struct _1bc2e4149_SliceExprModel;
struct _1bc2e4600_IndexingExprModel;
struct _1bc2e4aa6_AnonFnExprModel;
struct _1bc2e4e80_KeyValPairExprModel;
struct _1bc2e5359_MapExprModel;
struct _1bc2e58dc_SlicingExprModel;
struct _1bc2e5e70_TraitSubIdentExprModel;
struct _1bc2e6811_StructSubIdentExprModel;
struct _1bc2e6ba7_StructStaticIdentExprModel;
struct _1bc2e7081_ArrayExprModel;
struct _1bc2e737d_TupleExprModel;
struct _1bc2e767a_BuiltinPrintCallExprModel;
struct _1bc2e7977_BuiltinPrintlnCallExprModel;
struct _1bc2e7d51_BuiltinNewCallExprModel;
struct _1bc2e822a_BuiltinPanicCallExprModel;
struct _1bc2e86d1_BuiltinMakeCallExprModel;
struct _1bc2e8aaa_BuiltinAppendCallExprModel;
struct _1bc2e8da7_BuiltinLenCallExprModel;
struct _1bc2e91a4_BuiltinCapCallExprModel;
struct _1bc2e957d_BuiltinDeleteCallExprModel;
struct _1bc2e9957_BuiltinCopyCallExprModel;
struct _1bc2e9d31_BuiltinErrorCallExprModel;
struct _1bc2ea12d_SizeofExprModel;
struct _1bc2ea7d2_AlignofExprModel;
struct _1bc2ea9be_RuneExprModel;
struct _1bc2ead43_BackendEmitExprModel;
struct _1bc2eb140_FreeExprModel;
struct _1bc2ebeba_RetType;
struct _1bc2ec581_Param;
struct _1bc2ee055_Fn;
struct _1bc300ead_ParamIns;
struct _1bc302113_FnIns;
struct _1bc305358_SymTab;
struct _1bc309769_Trait;
struct _1bc30b3b4_EnumItem;
struct _1bc30be20_Enum;
struct _1bc30d053_TypeEnumItem;
struct _1bc30d62a_TypeEnum;
struct _1bc37e437_comptimeRange;
struct _1bc37ee93_comptimeStructField;
struct _1bc381736_comptimeStructFields;
struct _1bc3831b6_comptimeStatic;
struct _1bc38496a_comptimeStatics;
struct _1bc3863d9_comptimeEnumField;
struct _1bc3876e8_comptimeEnumFields;
struct _1bc389200_comptimeParam;
struct _1bc38b059_comptimeParams;
struct _1bc38c8b8_comptimeTypeInfos;
struct _1bc38e337_comptimeTypeInfo;
struct _1bc39543c_comptimeValue;
struct _1bc398198_comptimeFiles;
struct _1bc399b17_comptimeFile;
struct _1bc39b740_comptimeDecls;
struct _1bc39da2d_comptimeDecl;
struct _1bc3a5419_constraintChecker;
struct _1bc3a7718_Impl;
struct _1bc3abd27_Scope;
struct _1bc3ac245_If;
struct _1bc3ac542_Else;
struct _1bc3ac960_Conditional;
struct _1bc3acc5c_InfIter;
struct _1bc3ad213_WhileIter;
struct _1bc3adb5e_RangeIter;
struct _1bc3adee4_ContSt;
struct _1bc3ae3bd_BreakSt;
struct _1bc3ae874_Label;
struct _1bc3aeed4_GotoSt;
struct _1bc3b03ad_Postfix;
struct _1bc3b0864_Assign;
struct _1bc3b0d1a_MultiAssign;
struct _1bc3b1557_Match;
struct _1bc3b2080_Case;
struct _1bc3b2778_FallSt;
struct _1bc3b2b1e_RetSt;
struct _1bc3b30c5_scopeLabel;
struct _1bc3b349e_result;
struct _1bc3b448e_scopeChecker;
struct _1bc3c831b_directiveChecker;
struct _1bc3cab26_ReferenceStack;
struct _1bc3cc177_Pass;
struct _1bc3d1b2c_symBuilder;
struct _1bc3dcb9e_ImportInfo;
struct _1bc3e0421_Package;
struct _1bc4093c4_commonSemaMeta;
struct _1bc409eeb_sema;
struct _1bc42a22a_missingRetChecker;
struct _1bc42dc12_Var;
struct _1bc42ea8c_FuncPattern;
struct _1bc46e88a_typeCompatibilityChecker;
struct _1bc471716_assignTypeChecker;
struct _1bc4730db_dynamicTypeAnnotation;
struct _1bc477e48_fnCallArgChecker;
struct _1bc47ad80_structLitChecker;
struct _1bc47cb62_rangeChecker;
struct _1bc4804a0_retTypeChecker;
struct _1bc48354c_Data;
struct _1bc4846c4_Value;
struct _1bc484a9d_target;
struct _1bc48551b_eval;
struct _1bc4a478d_unaryEval;
struct _1bc4a6729_binaryEval;
struct _1bc4b4b11_InsGeneric;
struct _1bc4b5705_TypeAlias;
struct _1bc4b64e7_Type;
struct _1bc4bdc08_TypeSym;
struct _1bc4be610_Prim;
struct _1bc4c313b_Sptr;
struct _1bc4c3b0e_Slc;
struct _1bc4c4703_Tuple;
struct _1bc4c52a3_Map;
struct _1bc4c5e30_Arr;
struct _1bc4c6903_Ptr;
struct _1bc4c7904_referencer;
struct _1bc4c88e4_typeChecker;
struct _1bc4d19a7_identTypeLookup;
struct _1bcd36e55_FileInfo;
struct _1bcd86bdb_stmt;
struct _1bcd8757c_scopeParser;
struct _1bcd94ea2_exprBuilder;
struct _1bcda2597_assignInfo;
struct _1bcda5787_parser;
struct _1bcdb6941_typeBuilder;
struct _1bc5e4c52_CompileInfo;
struct _1bc5e6490_directiveEval;
struct _1bcdbaa44_Importer;
struct _1bc547c82_anyData;
struct _1bcdc1b5a_ExprInspector;
struct _1bcdc90c4_MetaStrBuilder;
struct _1bcdc9c95_MetaRuntime;
struct _1bcdca768_MetaMathCmplx;
struct _1bcdcad73_Meta;
struct _1bcdcc34c_OrderedDefines;
struct _1bdc1ab29_liveTable;
struct _1bdc1ae37_ObjectDeadCode;
struct _1bdc2005c_scopeDeadCode;
struct _1bdc245e4_exprDeadCode;
struct _1bdad9bc4_ExceptionalForwardingExprModel;
struct _1bdad9e38_FnCallIgnoreExceptionalExprModel;
struct _1bdada235_StrConcatExprModel;
struct _1bdada653_SwapExprModel;
struct _1bdadaa2c_EmptyCompareExprModel;
struct _1bdadad29_RefExprModel;
struct _1bdadb2d0_StrCompExprModel;
struct _1bdadb8eb_MutSlicingExprModel;
struct _1bdadbbe8_UnsafeBinaryExprModel;
struct _1bdadbee5_UnsafeIndexingExprModel;
struct _1bdadc3be_PushToSliceExprModel;
struct _1bdadc798_AppendToSliceExprModel;
struct _1bdadcb72_StrRuneIter;
struct _1bdadce6e_UnsafeDerefExprModel;
struct _1bdadd26b_UnsafeCastingExprModel;
struct _1bdade008_nilVar;
struct _1bdade349_nils;
struct _1bdae1e40_scopeOptimizer;
struct _1bdae8e9c_exprOptimizer;
struct _1bdb0039e_dynamicVar;
struct _1bdb006e0_dynamic;
struct _1bdb02eea_dataCheckpoint;
struct _1bdb035c2_data;
struct _1bdb0553b_boundaryVar;
struct _1bdb0587c_boundary;
struct _1bdc25716_Optimizer;
struct _1bdedd0c7_AbsTime;
struct _1bdedd79d_Time;
struct _1bdc2983b_scopeCoder;
struct _1bdc35dca_exprCoder;
struct _1bdc48717_TestCoder;
struct _1bdc4b363_identCoder;
struct _1bdee83ce_SerializationInfo;
struct _1bdee87ec_traitCast;
struct _1bdee8bc6_anonHash;
struct _1bdee90e4_traitHash;
struct _1bdee93e1_metadata;
struct _1bdeeab84_ObjectCoder;
struct _1be009eb2_customType;
struct _1be00aad9_typeCoder;
struct _1be0136c4_resultCoder;
struct _1c6bd2368_Flag;
struct _1c6bd5beb_Flag;
struct _1c6bd9408_Flag;
struct _1c6bdcb59_Flag;
struct _1c6be1366_Flag;
struct _1be0a7724_FlagSet;
struct _1be0aa1d8_argParser;
struct _1a9c2b05a_Dir;
struct _1a9c2bb82_Cmd;
struct _1bcdbd492_IR;
struct _1a952ce34_acceptRange {
	jule::U8 _field_lo;
	jule::U8 _field_hi;
};
inline jule::Bool _1a952ce34_acceptRange_eq(_1a952ce34_acceptRange *_self_, _1a952ce34_acceptRange _other_);


struct _1a968904b_LittleEndian {
};
inline jule::Bool _1a968904b_LittleEndian_eq(_1a968904b_LittleEndian *_self_, _1a968904b_LittleEndian _other_);


struct _1a96a39a0_u128 {
	jule::U64 _field_hi;
	jule::U64 _field_lo;
};
inline jule::Bool _1a96a39a0_u128_eq(_1a96a39a0_u128 *_self_, _1a96a39a0_u128 _other_);


struct _1c694982d_group {
	jule::Array<jule::Str,8> _field_keys;
	jule::Array<jule::Bool,8> _field_values;
};
inline jule::Bool _1c694982d_group_eq(_1c694982d_group *_self_, _1c694982d_group _other_);

struct _1c6a88010_group {
	jule::Array<jule::Ptr<_1bc302113_FnIns>,8> _field_keys;
	jule::Array<jule::Slice<jule::Uintptr>,8> _field_values;
};
struct _1c694752e__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c694982d_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};struct _1c6a85d98__Map {
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c6a88010_group> _field_groups;
	jule::I32 _field_resident;
	jule::I32 _field_dead;
	jule::I32 _field_limit;
};
struct _1c6953c66_mapIterator {
	jule::Ptr<_1c694752e__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c694982d_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};struct _1c11211d6_mapIterator {
	jule::Ptr<_1c6a85d98__Map> _field_m;
	jule::Slice<jule::Array<jule::I8,8>> _field_ctrl;
	jule::Slice<_1c6a88010_group> _field_groups;
	jule::I32 _field_n;
	jule::I32 _field_g;
	jule::I32 _field_s;
};
struct _1a95669ea_Builder {
	jule::Slice<jule::U8> _field_buf;
};
struct _1abb28c47_foldPair {
	jule::U16 _field_from;
	jule::U16 _field_to;
};
inline jule::Bool _1abb28c47_foldPair_eq(_1abb28c47_foldPair *_self_, _1abb28c47_foldPair _other_);


struct _1abb29242_CaseRange {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::Array<jule::I32,3> _field_Delta;
};
inline jule::Bool _1abb29242_CaseRange_eq(_1abb29242_CaseRange *_self_, _1abb29242_CaseRange _other_);


struct _1abb296e8_Range16 {
	jule::U16 _field_Lo;
	jule::U16 _field_Hi;
	jule::U16 _field_Stride;
};
inline jule::Bool _1abb296e8_Range16_eq(_1abb296e8_Range16 *_self_, _1abb296e8_Range16 _other_);


struct _1abb29c26_Range32 {
	jule::U32 _field_Lo;
	jule::U32 _field_Hi;
	jule::U32 _field_Stride;
};
inline jule::Bool _1abb29c26_Range32_eq(_1abb29c26_Range32 *_self_, _1abb29c26_Range32 _other_);


struct _1abb2a199_RangeTable {
	jule::Slice<_1abb296e8_Range16> _field_R16;
	jule::Slice<_1abb29c26_Range32> _field_R32;
	jule::I32 _field_LatinOffset;
};
struct _1abb389b0_lazyBuff {
	jule::Str _field_path;
	jule::Slice<jule::U8> _field_buff;
	jule::I32 _field_w;
	jule::Str _field_volAndPath;
	jule::I32 _field_volLen;
};
struct _1a9c30b64_File {
	jule::Uintptr _field_handle;
};
inline jule::Bool _1a9c30b64_File_eq(_1a9c30b64_File *_self_, _1a9c30b64_File _other_);


struct _1a9cc1d04_cmdAttrs {
	jule::I32 _field_pid;
};
inline jule::Bool _1a9cc1d04_cmdAttrs_eq(_1a9cc1d04_cmdAttrs *_self_, _1a9cc1d04_cmdAttrs _other_);


struct _1a9cc3e6b_Stat {
	jule::I32 _field_mode;
	jule::U32 _field_size;
};
inline jule::Bool _1a9cc3e6b_Stat_eq(_1a9cc3e6b_Stat *_self_, _1a9cc3e6b_Stat _other_);


struct _1a9575ca1_Log {
	jule::I32 _field_Kind;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Path;
	jule::Str _field_Text;
	jule::Str _field_Line;
	jule::Str _field_Suggestion;
};
inline jule::Bool _1a9575ca1_Log_eq(_1a9575ca1_Log *_self_, _1a9575ca1_Log _other_);


struct _1ac579004_floatInfo {
	jule::U32 _field_mantbits;
	jule::U32 _field_expbits;
	jule::I32 _field_bias;
};
inline jule::Bool _1ac579004_floatInfo_eq(_1ac579004_floatInfo *_self_, _1ac579004_floatInfo _other_);


struct _1ac579b4d_decimalSlice {
	jule::Slice<jule::U8> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
};
struct _1ac591a33_leftCheat {
	jule::I32 _field_delta;
	jule::Str _field_cutoff;
};
inline jule::Bool _1ac591a33_leftCheat_eq(_1ac591a33_leftCheat *_self_, _1ac591a33_leftCheat _other_);


struct _1ac59254a_decimal {
	jule::Array<jule::U8,800> _field_d;
	jule::I32 _field_nd;
	jule::I32 _field_dp;
	jule::Bool _field_neg;
	jule::Bool _field_trunc;
};
inline jule::Bool _1ac59254a_decimal_eq(_1ac59254a_decimal *_self_, _1ac59254a_decimal _other_);


struct _1abb6a96a_AnsiEscape {
};
inline jule::Bool _1abb6a96a_AnsiEscape_eq(_1abb6a96a_AnsiEscape *_self_, _1abb6a96a_AnsiEscape _other_);


struct _1ac597a6c_Logger {
};
inline jule::Bool _1ac597a6c_Logger_eq(_1ac597a6c_Logger *_self_, _1ac597a6c_Logger _other_);


struct _1bc247014_Token {
	jule::Ptr<_1bc24cab9_Fileset> _field_File;
	jule::I32 _field_Row;
	jule::I32 _field_Column;
	jule::Str _field_Kind;
	jule::U32 _field_Id;
};
inline jule::Bool _1bc247014_Token_eq(_1bc247014_Token *_self_, _1bc247014_Token _other_);


struct _1bc24cab9_Fileset {
	jule::Slice<jule::U8> _field_data;
	jule::Str _field_Path;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_Tokens;
};
struct _1bc24edda_kindPair {
	jule::Str _field_kind;
	jule::U32 _field_id;
};
inline jule::Bool _1bc24edda_kindPair_eq(_1bc24edda_kindPair *_self_, _1bc24edda_kindPair _other_);


struct _1bc255d7a_lex {
	jule::I32 _field_mode;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_tokens;
	jule::Ptr<_1bc24cab9_Fileset> _field_file;
	jule::I32 _field_pos;
	jule::I32 _field_column;
	jule::I32 _field_row;
	jule::Slice<_1a9575ca1_Log> _field_errors;
};
struct _1bc25aa50_AST {
	jule::Ptr<_1bc24cab9_Fileset> _field_File;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_TopDirectives;
	jule::Slice<jule::Ptr<_1bc27585b_UseDecl>> _field_UseDecls;
	jule::Slice<_1bc25b90d_Node> _field_Nodes;
};
struct _1bc25b90d_Node {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Data;
};
inline jule::Bool _1bc25b90d_Node_eq(_1bc25b90d_Node *_self_, _1bc25b90d_Node _other_);


struct _1bc25bd2b_Directive {
	jule::Ptr<_1bc247014_Token> _field_Tag;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_Args;
};
struct _1bc25c90e_TypeDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Kind;
};
inline jule::Bool _1bc25c90e_TypeDecl_eq(_1bc25c90e_TypeDecl *_self_, _1bc25c90e_TypeDecl _other_);


struct _1bc25d019_IdentTypeDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _field_Generics;
};
struct _1bc25d2d3_SubIdentTypeDecl {
	jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>> _field_Idents;
};
struct _1bc25d6ac_NamespaceTypeDecl {
	jule::Ptr<_1bc247014_Token> _field_Namespace;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
};
inline jule::Bool _1bc25d6ac_NamespaceTypeDecl_eq(_1bc25d6ac_NamespaceTypeDecl *_self_, _1bc25d6ac_NamespaceTypeDecl _other_);


struct _1bc25d9a9_SptrTypeDecl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Elem;
};
inline jule::Bool _1bc25d9a9_SptrTypeDecl_eq(_1bc25d9a9_SptrTypeDecl *_self_, _1bc25d9a9_SptrTypeDecl _other_);


struct _1bc25dd3e_SlcTypeDecl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Elem;
};
inline jule::Bool _1bc25dd3e_SlcTypeDecl_eq(_1bc25dd3e_SlcTypeDecl *_self_, _1bc25dd3e_SlcTypeDecl _other_);


struct _1bc25e13b_TupleTypeDecl {
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _field_Types;
};
struct _1bc25e438_PtrTypeDecl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Elem;
};
inline jule::Bool _1bc25e438_PtrTypeDecl_eq(_1bc25e438_PtrTypeDecl *_self_, _1bc25e438_PtrTypeDecl _other_);


struct _1bc25ebca_ArrTypeDecl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Elem;
	jule::Ptr<_1bc261c43_Expr> _field_Size;
};
inline jule::Bool _1bc25ebca_ArrTypeDecl_eq(_1bc25ebca_ArrTypeDecl *_self_, _1bc25ebca_ArrTypeDecl _other_);


struct _1bc260428_MapTypeDecl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Key;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Val;
};
inline jule::Bool _1bc260428_MapTypeDecl_eq(_1bc260428_MapTypeDecl *_self_, _1bc260428_MapTypeDecl _other_);


struct _1bc260802_RetTypeDecl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_Idents;
};
struct _1bc261c43_Expr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Any _field_Kind;
};
inline jule::Bool _1bc261c43_Expr_eq(_1bc261c43_Expr *_self_, _1bc261c43_Expr _other_);


struct _1bc26200c_RangeExpr {
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc26200c_RangeExpr_eq(_1bc26200c_RangeExpr *_self_, _1bc26200c_RangeExpr _other_);


struct _1bc262617_UseExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc262617_UseExpr_eq(_1bc262617_UseExpr *_self_, _1bc262617_UseExpr _other_);


struct _1bc262837_TupleExpr {
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_Expr;
};
struct _1bc262bcd_LitExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Value;
};
inline jule::Bool _1bc262bcd_LitExpr_eq(_1bc262bcd_LitExpr *_self_, _1bc262bcd_LitExpr _other_);


struct _1bc2630a7_UnsafeExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc2630a7_UnsafeExpr_eq(_1bc2630a7_UnsafeExpr *_self_, _1bc2630a7_UnsafeExpr _other_);


struct _1bc26355d_IdentExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
};
inline jule::Bool _1bc26355d_IdentExpr_eq(_1bc26355d_IdentExpr *_self_, _1bc26355d_IdentExpr _other_);


struct _1bc263d00_UnaryExpr {
	jule::Ptr<_1bc247014_Token> _field_Op;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc263d00_UnaryExpr_eq(_1bc263d00_UnaryExpr *_self_, _1bc263d00_UnaryExpr _other_);


struct _1bc2641c9_VariadicExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc2641c9_VariadicExpr_eq(_1bc2641c9_VariadicExpr *_self_, _1bc2641c9_VariadicExpr _other_);


struct _1bc2645a3_CastExpr {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc2645a3_CastExpr_eq(_1bc2645a3_CastExpr *_self_, _1bc2645a3_CastExpr _other_);


struct _1bc26497c_NamespaceExpr {
	jule::Ptr<_1bc247014_Token> _field_Namespace;
	jule::Ptr<_1bc247014_Token> _field_Ident;
};
inline jule::Bool _1bc26497c_NamespaceExpr_eq(_1bc26497c_NamespaceExpr *_self_, _1bc26497c_NamespaceExpr _other_);


struct _1bc264d56_SubIdentExpr {
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Ptr<_1bc247014_Token> _field_Ident;
};
inline jule::Bool _1bc264d56_SubIdentExpr_eq(_1bc264d56_SubIdentExpr *_self_, _1bc264d56_SubIdentExpr _other_);


struct _1bc26530c_BinaryExpr {
	jule::Ptr<_1bc261c43_Expr> _field_Left;
	jule::Ptr<_1bc261c43_Expr> _field_Right;
	jule::Ptr<_1bc247014_Token> _field_Op;
};
inline jule::Bool _1bc26530c_BinaryExpr_eq(_1bc26530c_BinaryExpr *_self_, _1bc26530c_BinaryExpr _other_);


struct _1bc26596c_FnCallExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_Args;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Exception;
	jule::Bool _field_IsCo;
};
struct _1bc266462_FieldExprPair {
	jule::Ptr<_1bc247014_Token> _field_Field;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc266462_FieldExprPair_eq(_1bc266462_FieldExprPair *_self_, _1bc266462_FieldExprPair _other_);


struct _1bc266c8c_StructLit {
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_Exprs;
};
struct _1bc267243_BraceLit {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_Exprs;
};
struct _1bc267a6d_KeyValPair {
	jule::Ptr<_1bc261c43_Expr> _field_Key;
	jule::Ptr<_1bc261c43_Expr> _field_Val;
	jule::Ptr<_1bc247014_Token> _field_Colon;
};
inline jule::Bool _1bc267a6d_KeyValPair_eq(_1bc267a6d_KeyValPair *_self_, _1bc267a6d_KeyValPair _other_);


struct _1bc268299_SliceExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_Exprs;
};
struct _1bc268c06_IndexingExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Ptr<_1bc261c43_Expr> _field_Index;
};
inline jule::Bool _1bc268c06_IndexingExpr_eq(_1bc268c06_IndexingExpr *_self_, _1bc268c06_IndexingExpr _other_);


struct _1bc269366_SlicingExpr {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Ptr<_1bc261c43_Expr> _field_Start;
	jule::Ptr<_1bc261c43_Expr> _field_To;
};
inline jule::Bool _1bc269366_SlicingExpr_eq(_1bc269366_SlicingExpr *_self_, _1bc269366_SlicingExpr _other_);


struct _1bc269663_Constraint {
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _field_Mask;
};
struct _1bc269b19_GenericDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc269663_Constraint> _field_Constraint;
};
inline jule::Bool _1bc269b19_GenericDecl_eq(_1bc269b19_GenericDecl *_self_, _1bc269b19_GenericDecl _other_);


struct _1bc269ee3_LabelSt {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
};
inline jule::Bool _1bc269ee3_LabelSt_eq(_1bc269ee3_LabelSt *_self_, _1bc269ee3_LabelSt _other_);


struct _1bc26a3bc_GotoSt {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_Label;
};
inline jule::Bool _1bc26a3bc_GotoSt_eq(_1bc26a3bc_GotoSt *_self_, _1bc26a3bc_GotoSt _other_);


struct _1bc26a6b9_FallSt {
	jule::Ptr<_1bc247014_Token> _field_Token;
};
inline jule::Bool _1bc26a6b9_FallSt_eq(_1bc26a6b9_FallSt *_self_, _1bc26a6b9_FallSt _other_);


struct _1bc26ad29_AssignLeft {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Str _field_Ident;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc26ad29_AssignLeft_eq(_1bc26ad29_AssignLeft *_self_, _1bc26ad29_AssignLeft _other_);


struct _1bc26b3ac_AssignSt {
	jule::Bool _field_Declarative;
	jule::Ptr<_1bc247014_Token> _field_Setter;
	jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>> _field_Left;
	jule::Ptr<_1bc261c43_Expr> _field_Right;
};
struct _1bc26c39c_Stmt {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Any _field_Data;
};
inline jule::Bool _1bc26c39c_Stmt_eq(_1bc26c39c_Stmt *_self_, _1bc26c39c_Stmt _other_);


struct _1bc26ca0c_ScopeTree {
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<_1bc26c39c_Stmt> _field_Stmts;
	jule::Ptr<_1bc247014_Token> _field_End;
};
struct _1bc26d249_ParamDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Str _field_Ident;
};
inline jule::Bool _1bc26d249_ParamDecl_eq(_1bc26d249_ParamDecl *_self_, _1bc26d249_ParamDecl _other_);


struct _1bc26e69b_FnDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_Directives;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _field_Generics;
	jule::Ptr<_1bc260802_RetTypeDecl> _field_Result;
	jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>> _field_Params;
};
struct _1bc270856_VarDecl {
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_Setter;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Bool _field_Constant;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_Directives;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
struct _1bc270c30_RetSt {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc270c30_RetSt_eq(_1bc270c30_RetSt *_self_, _1bc270c30_RetSt _other_);


struct _1bc2714a0_Iter {
	jule::Bool _field_Comptime;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Kind;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
};
inline jule::Bool _1bc2714a0_Iter_eq(_1bc2714a0_Iter *_self_, _1bc2714a0_Iter _other_);


struct _1bc271cca_WhileKind {
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Any _field_Next;
	jule::Ptr<_1bc247014_Token> _field_NextToken;
};
inline jule::Bool _1bc271cca_WhileKind_eq(_1bc271cca_WhileKind *_self_, _1bc271cca_WhileKind _other_);


struct _1bc2726d2_RangeKind {
	jule::Ptr<_1bc247014_Token> _field_InToken;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Ptr<_1bc270856_VarDecl> _field_KeyA;
	jule::Ptr<_1bc270856_VarDecl> _field_KeyB;
};
inline jule::Bool _1bc2726d2_RangeKind_eq(_1bc2726d2_RangeKind *_self_, _1bc2726d2_RangeKind _other_);


struct _1bc272aab_BreakSt {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_Label;
};
inline jule::Bool _1bc272aab_BreakSt_eq(_1bc272aab_BreakSt *_self_, _1bc272aab_BreakSt _other_);


struct _1bc272e85_ContSt {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_Label;
};
inline jule::Bool _1bc272e85_ContSt_eq(_1bc272e85_ContSt *_self_, _1bc272e85_ContSt _other_);


struct _1bc27343b_If {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
};
inline jule::Bool _1bc27343b_If_eq(_1bc27343b_If *_self_, _1bc27343b_If _other_);


struct _1bc273815_Else {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
};
inline jule::Bool _1bc273815_Else_eq(_1bc273815_Else *_self_, _1bc273815_Else _other_);


struct _1bc273cbb_Conditional {
	jule::Ptr<_1bc27343b_If> _field_Head;
	jule::Slice<jule::Ptr<_1bc27343b_If>> _field_Tail;
	jule::Ptr<_1bc273815_Else> _field_Default;
};
struct _1bc274508_TypeAliasDecl {
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
};
inline jule::Bool _1bc274508_TypeAliasDecl_eq(_1bc274508_TypeAliasDecl *_self_, _1bc274508_TypeAliasDecl _other_);


struct _1bc2749ae_Case {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_Exprs;
};
struct _1bc2752c8_MatchCase {
	jule::Bool _field_Comptime;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Bool _field_TypeMatch;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Slice<jule::Ptr<_1bc2749ae_Case>> _field_Cases;
	jule::Ptr<_1bc273815_Else> _field_Default;
};
struct _1bc27585b_UseDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_Path;
	jule::Ptr<_1bc247014_Token> _field_Alias;
	jule::Bool _field_Binded;
};
inline jule::Bool _1bc27585b_UseDecl_eq(_1bc27585b_UseDecl *_self_, _1bc27585b_UseDecl _other_);


struct _1bc275d12_EnumItemDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
};
inline jule::Bool _1bc275d12_EnumItemDecl_eq(_1bc275d12_EnumItemDecl *_self_, _1bc275d12_EnumItemDecl _other_);


struct _1bc2768c3_EnumDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>> _field_Items;
	jule::Ptr<_1bc247014_Token> _field_End;
};
struct _1bc2771ed_TypeEnumItemDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
};
inline jule::Bool _1bc2771ed_TypeEnumItemDecl_eq(_1bc2771ed_TypeEnumItemDecl *_self_, _1bc2771ed_TypeEnumItemDecl _other_);


struct _1bc27785d_TypeEnumDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>> _field_Items;
	jule::Ptr<_1bc247014_Token> _field_End;
};
struct _1bc277b27_FieldDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Kind;
	jule::Ptr<_1bc261c43_Expr> _field_Default;
};
inline jule::Bool _1bc277b27_FieldDecl_eq(_1bc277b27_FieldDecl *_self_, _1bc277b27_FieldDecl _other_);


struct _1bc27851d_StructDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>> _field_Fields;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _field_Generics;
};
struct _1bc278c5a_TraitDecl {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _field_Inherits;
	jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>> _field_Methods;
};
struct _1bc2793ba_Impl {
	jule::Ptr<_1bc247014_Token> _field_End;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Base;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _field_Statics;
};
inline jule::Bool _1bc2dae76_Eq(_1bac25065_Const* _self_, _1bac25065_Const _25814_x);
inline jule::Bool _1bc2db2b7_Lt(_1bac25065_Const* _self_, _1bac25065_Const _28514_x);
inline jule::Bool _1bc2db608_LtEq(_1bac25065_Const* _self_, _1bac25065_Const _30816_x);
inline jule::Bool _1bc2db949_Gt(_1bac25065_Const* _self_, _1bac25065_Const _33114_x);
inline jule::Bool _1bc2dbc8a_GtEq(_1bac25065_Const* _self_, _1bac25065_Const _35416_x);
struct _1bac25065_Const {
	jule::Str _field_Kind;
	jule::Any _field_data;
};
struct _1bc27a377_Field {
	jule::Ptr<_1bc27d26a_Struct> _field_Owner;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Bool _field_Mutable;
	jule::Str _field_Ident;
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
	jule::Ptr<_1bc261c43_Expr> _field_Default;
};
inline jule::Bool _1bc27a377_Field_eq(_1bc27a377_Field *_self_, _1bc27a377_Field _other_);


struct _1bc27c357_Operators {
	jule::Ptr<_1bc302113_FnIns> _field_Eq;
	jule::Ptr<_1bc302113_FnIns> _field_Gt;
	jule::Ptr<_1bc302113_FnIns> _field_GtEq;
	jule::Ptr<_1bc302113_FnIns> _field_Lt;
	jule::Ptr<_1bc302113_FnIns> _field_LtEq;
	jule::Ptr<_1bc302113_FnIns> _field_Shl;
	jule::Ptr<_1bc302113_FnIns> _field_Shr;
	jule::Ptr<_1bc302113_FnIns> _field_Add;
	jule::Ptr<_1bc302113_FnIns> _field_Sub;
	jule::Ptr<_1bc302113_FnIns> _field_Div;
	jule::Ptr<_1bc302113_FnIns> _field_Mul;
	jule::Ptr<_1bc302113_FnIns> _field_Mod;
	jule::Ptr<_1bc302113_FnIns> _field_BitAnd;
	jule::Ptr<_1bc302113_FnIns> _field_BitOr;
	jule::Ptr<_1bc302113_FnIns> _field_BitXor;
	jule::Ptr<_1bc302113_FnIns> _field_Neg;
	jule::Ptr<_1bc302113_FnIns> _field_Pos;
	jule::Ptr<_1bc302113_FnIns> _field_BitNot;
	jule::Ptr<_1bc302113_FnIns> _field_AddAssign;
	jule::Ptr<_1bc302113_FnIns> _field_SubAssign;
	jule::Ptr<_1bc302113_FnIns> _field_DivAssign;
	jule::Ptr<_1bc302113_FnIns> _field_MulAssign;
	jule::Ptr<_1bc302113_FnIns> _field_ModAssign;
	jule::Ptr<_1bc302113_FnIns> _field_ShlAssign;
	jule::Ptr<_1bc302113_FnIns> _field_ShrAssign;
	jule::Ptr<_1bc302113_FnIns> _field_BitOrAssign;
	jule::Ptr<_1bc302113_FnIns> _field_BitAndAssign;
	jule::Ptr<_1bc302113_FnIns> _field_BitXorAssign;
};
inline jule::Bool _1bc27c357_Operators_eq(_1bc27c357_Operators *_self_, _1bc27c357_Operators _other_);


struct _1bc27d26a_Struct {
	jule::Ptr<_1bc409eeb_sema> _field_sema;
	jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _field_Depends;
	jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _field_Uses;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc27a377_Field>> _field_Fields;
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Statics;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_Directives;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _field_Generics;
	jule::Slice<jule::Ptr<_1bc309769_Trait>> _field_Implements;
	jule::Slice<jule::Ptr<_1bc2810c5_StructIns>> _field_Instances;
};
struct _1bc280525_FieldIns {
	jule::Ptr<_1bc2810c5_StructIns> _field_Owner;
	jule::Ptr<_1bc27a377_Field> _field_Decl;
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Ptr<_1bc48354c_Data> _field_Default;
};
inline jule::Bool _1bc280525_FieldIns_eq(_1bc280525_FieldIns *_self_, _1bc280525_FieldIns _other_);


struct _1bc2810c5_StructIns {
	jule::Bool _field_Checked;
	jule::Ptr<_1bc27d26a_Struct> _field_Decl;
	jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1bc280525_FieldIns>> _field_Fields;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Statics;
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _field_Methods;
	jule::Bool _field_Mutable;
	jule::Bool _field_Comparable;
	jule::Ptr<_1bc3cab26_ReferenceStack> _field_Refers;
	_1bc27c357_Operators _field_Operators;
};
struct _1bc2e1795_OperandExprModel {
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Any _field_Model;
};
inline jule::Bool _1bc2e1795_OperandExprModel_eq(_1bc2e1795_OperandExprModel *_self_, _1bc2e1795_OperandExprModel _other_);


struct _1bc2e1c90_BinaryExprModel {
	jule::Ptr<_1bc2e1795_OperandExprModel> _field_Left;
	jule::Ptr<_1bc2e1795_OperandExprModel> _field_Right;
	jule::Ptr<_1bc247014_Token> _field_Op;
};
inline jule::Bool _1bc2e1c90_BinaryExprModel_eq(_1bc2e1c90_BinaryExprModel *_self_, _1bc2e1c90_BinaryExprModel _other_);


struct _1bc2e2169_UnaryExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Ptr<_1bc247014_Token> _field_Op;
};
inline jule::Bool _1bc2e2169_UnaryExprModel_eq(_1bc2e2169_UnaryExprModel *_self_, _1bc2e2169_UnaryExprModel _other_);


struct _1bc2e2697_StructArgExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc280525_FieldIns> _field_Field;
	jule::Ptr<_1bc48354c_Data> _field_Expr;
};
inline jule::Bool _1bc2e2697_StructArgExprModel_eq(_1bc2e2697_StructArgExprModel *_self_, _1bc2e2697_StructArgExprModel _other_);


struct _1bc2e2a3d_StructLitExprModel {
	jule::Ptr<_1bc2810c5_StructIns> _field_Strct;
	jule::Slice<jule::Ptr<_1bc2e2697_StructArgExprModel>> _field_Args;
};
struct _1bc2e2d3a_AllocStructLitExprModel {
	jule::Ptr<_1bc2e2a3d_StructLitExprModel> _field_Lit;
};
inline jule::Bool _1bc2e2d3a_AllocStructLitExprModel_eq(_1bc2e2d3a_AllocStructLitExprModel *_self_, _1bc2e2d3a_AllocStructLitExprModel _other_);


struct _1bc2e33bd_CastingExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Ptr<_1bc4b64e7_Type> _field_ExprType;
};
inline jule::Bool _1bc2e33bd_CastingExprModel_eq(_1bc2e33bd_CastingExprModel *_self_, _1bc2e33bd_CastingExprModel _other_);


struct _1bc2e3c70_FnCallExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc302113_FnIns> _field_Func;
	jule::Bool _field_IsCo;
	jule::Any _field_Expr;
	jule::Slice<jule::Any> _field_Args;
	jule::Ptr<_1bc3abd27_Scope> _field_Except;
	jule::Bool _field_Assigned;
};
struct _1bc2e4149_SliceExprModel {
	jule::Ptr<_1bc4b64e7_Type> _field_ElemType;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1bc2e4600_IndexingExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Ptr<_1bc48354c_Data> _field_Index;
};
inline jule::Bool _1bc2e4600_IndexingExprModel_eq(_1bc2e4600_IndexingExprModel *_self_, _1bc2e4600_IndexingExprModel _other_);


struct _1bc2e4aa6_AnonFnExprModel {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Captured;
	jule::Ptr<_1bc302113_FnIns> _field_Func;
	jule::Bool _field_Global;
};
struct _1bc2e4e80_KeyValPairExprModel {
	jule::Any _field_Key;
	jule::Any _field_Val;
};
inline jule::Bool _1bc2e4e80_KeyValPairExprModel_eq(_1bc2e4e80_KeyValPairExprModel *_self_, _1bc2e4e80_KeyValPairExprModel _other_);


struct _1bc2e5359_MapExprModel {
	jule::Ptr<_1bc4c52a3_Map> _field_Kind;
	jule::Slice<jule::Ptr<_1bc2e4e80_KeyValPairExprModel>> _field_Entries;
};
struct _1bc2e58dc_SlicingExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1bc2e58dc_SlicingExprModel_eq(_1bc2e58dc_SlicingExprModel *_self_, _1bc2e58dc_SlicingExprModel _other_);


struct _1bc2e5e70_TraitSubIdentExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Ptr<_1bc2ee055_Fn> _field_Method;
	jule::Ptr<_1bc309769_Trait> _field_Trt;
};
inline jule::Bool _1bc2e5e70_TraitSubIdentExprModel_eq(_1bc2e5e70_TraitSubIdentExprModel *_self_, _1bc2e5e70_TraitSubIdentExprModel _other_);


struct _1bc2e6811_StructSubIdentExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Ptr<_1bc302113_FnIns> _field_Method;
	jule::Ptr<_1bc280525_FieldIns> _field_Field;
	jule::Ptr<_1bc2810c5_StructIns> _field_Owner;
};
inline jule::Bool _1bc2e6811_StructSubIdentExprModel_eq(_1bc2e6811_StructSubIdentExprModel *_self_, _1bc2e6811_StructSubIdentExprModel _other_);


struct _1bc2e6ba7_StructStaticIdentExprModel {
	jule::Ptr<_1bc2810c5_StructIns> _field_Structure;
	jule::Any _field_Expr;
	jule::Ptr<_1bc302113_FnIns> _field_Method;
};
inline jule::Bool _1bc2e6ba7_StructStaticIdentExprModel_eq(_1bc2e6ba7_StructStaticIdentExprModel *_self_, _1bc2e6ba7_StructStaticIdentExprModel _other_);


struct _1bc2e7081_ArrayExprModel {
	jule::Ptr<_1bc4c5e30_Arr> _field_Kind;
	jule::Slice<jule::Any> _field_Elems;
};
struct _1bc2e737d_TupleExprModel {
	jule::Slice<jule::Ptr<_1bc48354c_Data>> _field_Datas;
};
struct _1bc2e767a_BuiltinPrintCallExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Expr;
};
inline jule::Bool _1bc2e767a_BuiltinPrintCallExprModel_eq(_1bc2e767a_BuiltinPrintCallExprModel *_self_, _1bc2e767a_BuiltinPrintCallExprModel _other_);


struct _1bc2e7977_BuiltinPrintlnCallExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Expr;
};
inline jule::Bool _1bc2e7977_BuiltinPrintlnCallExprModel_eq(_1bc2e7977_BuiltinPrintlnCallExprModel *_self_, _1bc2e7977_BuiltinPrintlnCallExprModel _other_);


struct _1bc2e7d51_BuiltinNewCallExprModel {
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Any _field_Init;
};
inline jule::Bool _1bc2e7d51_BuiltinNewCallExprModel_eq(_1bc2e7d51_BuiltinNewCallExprModel *_self_, _1bc2e7d51_BuiltinNewCallExprModel _other_);


struct _1bc2e822a_BuiltinPanicCallExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Expr;
};
inline jule::Bool _1bc2e822a_BuiltinPanicCallExprModel_eq(_1bc2e822a_BuiltinPanicCallExprModel *_self_, _1bc2e822a_BuiltinPanicCallExprModel _other_);


struct _1bc2e86d1_BuiltinMakeCallExprModel {
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Any _field_Len;
	jule::Any _field_Cap;
};
inline jule::Bool _1bc2e86d1_BuiltinMakeCallExprModel_eq(_1bc2e86d1_BuiltinMakeCallExprModel *_self_, _1bc2e86d1_BuiltinMakeCallExprModel _other_);


struct _1bc2e8aaa_BuiltinAppendCallExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Elements;
};
inline jule::Bool _1bc2e8aaa_BuiltinAppendCallExprModel_eq(_1bc2e8aaa_BuiltinAppendCallExprModel *_self_, _1bc2e8aaa_BuiltinAppendCallExprModel _other_);


struct _1bc2e8da7_BuiltinLenCallExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Expr;
};
inline jule::Bool _1bc2e8da7_BuiltinLenCallExprModel_eq(_1bc2e8da7_BuiltinLenCallExprModel *_self_, _1bc2e8da7_BuiltinLenCallExprModel _other_);


struct _1bc2e91a4_BuiltinCapCallExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Expr;
};
inline jule::Bool _1bc2e91a4_BuiltinCapCallExprModel_eq(_1bc2e91a4_BuiltinCapCallExprModel *_self_, _1bc2e91a4_BuiltinCapCallExprModel _other_);


struct _1bc2e957d_BuiltinDeleteCallExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Dest;
	jule::Ptr<_1bc48354c_Data> _field_Key;
};
inline jule::Bool _1bc2e957d_BuiltinDeleteCallExprModel_eq(_1bc2e957d_BuiltinDeleteCallExprModel *_self_, _1bc2e957d_BuiltinDeleteCallExprModel _other_);


struct _1bc2e9957_BuiltinCopyCallExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Dest;
	jule::Ptr<_1bc48354c_Data> _field_Src;
};
inline jule::Bool _1bc2e9957_BuiltinCopyCallExprModel_eq(_1bc2e9957_BuiltinCopyCallExprModel *_self_, _1bc2e9957_BuiltinCopyCallExprModel _other_);


struct _1bc2e9d31_BuiltinErrorCallExprModel {
	jule::Ptr<_1bc302113_FnIns> _field_Func;
	jule::Ptr<_1bc48354c_Data> _field_Err;
};
inline jule::Bool _1bc2e9d31_BuiltinErrorCallExprModel_eq(_1bc2e9d31_BuiltinErrorCallExprModel *_self_, _1bc2e9d31_BuiltinErrorCallExprModel _other_);


struct _1bc2ea12d_SizeofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1bc2ea12d_SizeofExprModel_eq(_1bc2ea12d_SizeofExprModel *_self_, _1bc2ea12d_SizeofExprModel _other_);


struct _1bc2ea7d2_AlignofExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1bc2ea7d2_AlignofExprModel_eq(_1bc2ea7d2_AlignofExprModel *_self_, _1bc2ea7d2_AlignofExprModel _other_);


struct _1bc2ea9be_RuneExprModel {
	jule::I32 _field_Code;
};
inline jule::Bool _1bc2ea9be_RuneExprModel_eq(_1bc2ea9be_RuneExprModel *_self_, _1bc2ea9be_RuneExprModel _other_);


struct _1bc2ead43_BackendEmitExprModel {
	jule::Str _field_Code;
	jule::Slice<jule::Any> _field_Exprs;
};
struct _1bc2eb140_FreeExprModel {
	jule::Any _field_Expr;
};
inline jule::Bool _1bc2eb140_FreeExprModel_eq(_1bc2eb140_FreeExprModel *_self_, _1bc2eb140_FreeExprModel _other_);


struct _1bc2ebeba_RetType {
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_Idents;
};
struct _1bc2ec581_Param {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Mutable;
	jule::Bool _field_Variadic;
	jule::Bool _field_Reference;
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
	jule::Str _field_Ident;
};
inline jule::Bool _1bc2ec581_Param_eq(_1bc2ec581_Param *_self_, _1bc2ec581_Param _other_);


struct _1bc2ee055_Fn {
	jule::Ptr<_1bc409eeb_sema> _field_sema;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Global;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Statically;
	jule::Bool _field_Exceptional;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_Directives;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _field_Generics;
	jule::Ptr<_1bc2ebeba_RetType> _field_Result;
	jule::Slice<jule::Ptr<_1bc2ec581_Param>> _field_Params;
	jule::Ptr<_1bc27d26a_Struct> _field_Owner;
	jule::Slice<jule::Ptr<_1bc302113_FnIns>> _field_Instances;
};
struct _1bc300ead_ParamIns {
	jule::Ptr<_1bc2ec581_Param> _field_Decl;
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
};
inline jule::Bool _1bc300ead_ParamIns_eq(_1bc300ead_ParamIns *_self_, _1bc300ead_ParamIns _other_);


struct _1bc302113_FnIns {
	jule::Ptr<_1bc2810c5_StructIns> _field_Owner;
	jule::Ptr<_1bc2ee055_Fn> _field_Decl;
	jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>> _field_Generics;
	jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _field_Params;
	jule::Ptr<_1bc4b64e7_Type> _field_Result;
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::Ptr<_1bc3cab26_ReferenceStack> _field_Refers;
	jule::Bool _field_Anon;
	jule::Bool _field_AsAnon;
	jule::Bool _field_CalledCo;
	jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*> _field_caller;
	jule::Bool _field_reloaded;
};
struct _1bc305358_SymTab {
	jule::Ptr<_1bc24cab9_Fileset> _field_File;
	jule::Slice<_1bc3cc177_Pass> _field_Passes;
	jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _field_Imports;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Vars;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _field_TypeAliases;
	jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _field_Funcs;
	jule::Slice<jule::Ptr<_1bc309769_Trait>> _field_Traits;
	jule::Slice<jule::Ptr<_1bc30be20_Enum>> _field_Enums;
	jule::Slice<jule::Ptr<_1bc30d62a_TypeEnum>> _field_TypeEnums;
	jule::Slice<jule::Ptr<_1bc3a7718_Impl>> _field_Impls;
};
struct _1bc309769_Trait {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Public;
	jule::Slice<jule::Ptr<_1bc4bdc08_TypeSym>> _field_Inherits;
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _field_Implemented;
};
struct _1bc30b3b4_EnumItem {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc4846c4_Value> _field_Value;
};
inline jule::Bool _1bc30b3b4_EnumItem_eq(_1bc30b3b4_EnumItem *_self_, _1bc30b3b4_EnumItem _other_);


struct _1bc30be20_Enum {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
	jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _field_Items;
};
struct _1bc30d053_TypeEnumItem {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
};
inline jule::Bool _1bc30d053_TypeEnumItem_eq(_1bc30d053_TypeEnumItem *_self_, _1bc30d053_TypeEnumItem _other_);


struct _1bc30d62a_TypeEnum {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Bool _field_Public;
	jule::Str _field_Ident;
	jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> _field_Items;
};
struct _1bc37e437_comptimeRange {
	jule::Trait _field_kind;
};
inline jule::Bool _1bc37e437_comptimeRange_eq(_1bc37e437_comptimeRange *_self_, _1bc37e437_comptimeRange _other_);


struct _1bc37ee93_comptimeStructField {
	jule::Ptr<_1bc280525_FieldIns> _field_field;
};
inline jule::Bool _1bc37ee93_comptimeStructField_eq(_1bc37ee93_comptimeStructField *_self_, _1bc37ee93_comptimeStructField _other_);


struct _1bc381736_comptimeStructFields {
	jule::Slice<jule::Ptr<_1bc280525_FieldIns>> _field_fields;
};
struct _1bc3831b6_comptimeStatic {
	jule::Ptr<_1bc42dc12_Var> _field_field;
};
inline jule::Bool _1bc3831b6_comptimeStatic_eq(_1bc3831b6_comptimeStatic *_self_, _1bc3831b6_comptimeStatic _other_);


struct _1bc38496a_comptimeStatics {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_fields;
};
struct _1bc3863d9_comptimeEnumField {
	jule::Ptr<_1bc30b3b4_EnumItem> _field_field;
};
inline jule::Bool _1bc3863d9_comptimeEnumField_eq(_1bc3863d9_comptimeEnumField *_self_, _1bc3863d9_comptimeEnumField _other_);


struct _1bc3876e8_comptimeEnumFields {
	jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _field_fields;
};
struct _1bc389200_comptimeParam {
	jule::Ptr<_1bc300ead_ParamIns> _field_param;
};
inline jule::Bool _1bc389200_comptimeParam_eq(_1bc389200_comptimeParam *_self_, _1bc389200_comptimeParam _other_);


struct _1bc38b059_comptimeParams {
	jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _field_params;
};
struct _1bc38c8b8_comptimeTypeInfos {
	jule::Slice<jule::Ptr<_1bc38e337_comptimeTypeInfo>> _field_types;
};
struct _1bc38e337_comptimeTypeInfo {
	jule::Ptr<_1bc4b64e7_Type> _field_base;
};
inline jule::Bool _1bc38e337_comptimeTypeInfo_eq(_1bc38e337_comptimeTypeInfo *_self_, _1bc38e337_comptimeTypeInfo _other_);


struct _1bc39543c_comptimeValue {
	jule::Ptr<_1bc48354c_Data> _field_data;
};
inline jule::Bool _1bc39543c_comptimeValue_eq(_1bc39543c_comptimeValue *_self_, _1bc39543c_comptimeValue _other_);


struct _1bc398198_comptimeFiles {
	jule::Slice<jule::Ptr<_1bc305358_SymTab>> _field_files;
};
struct _1bc399b17_comptimeFile {
	jule::Ptr<_1bc305358_SymTab> _field_file;
};
inline jule::Bool _1bc399b17_comptimeFile_eq(_1bc399b17_comptimeFile *_self_, _1bc399b17_comptimeFile _other_);


struct _1bc39b740_comptimeDecls {
	jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>> _field_decls;
};
struct _1bc39da2d_comptimeDecl {
	jule::Any _field_decl;
};
inline jule::Bool _1bc39da2d_comptimeDecl_eq(_1bc39da2d_comptimeDecl *_self_, _1bc39da2d_comptimeDecl _other_);


struct _1bc3a5419_constraintChecker {
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _field_genericsD;
	jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>> _field_generics;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _field_genericsA;
	jule::Ptr<_1bc302113_FnIns> _field_fi;
	jule::Ptr<_1bc2810c5_StructIns> _field_si;
	jule::Ptr<_1bc247014_Token> _field_et;
	jule::Bool _field_uniq;
};
struct _1bc3a7718_Impl {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Base;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Dest;
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _field_Methods;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Statics;
};
struct _1bc3abd27_Scope {
	jule::Ptr<_1bc3abd27_Scope> _field_Parent;
	jule::Bool _field_Unsafety;
	jule::Bool _field_Deferred;
	jule::Slice<jule::Any> _field_Stmts;
	jule::I32 _field_ChildIndex;
	jule::I32 _field_StmtIndex;
};
struct _1bc3ac245_If {
	jule::Any _field_Expr;
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
};
inline jule::Bool _1bc3ac245_If_eq(_1bc3ac245_If *_self_, _1bc3ac245_If _other_);


struct _1bc3ac542_Else {
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
};
inline jule::Bool _1bc3ac542_Else_eq(_1bc3ac542_Else *_self_, _1bc3ac542_Else _other_);


struct _1bc3ac960_Conditional {
	jule::Slice<jule::Ptr<_1bc3ac245_If>> _field_Elifs;
	jule::Ptr<_1bc3ac542_Else> _field_Default;
};
struct _1bc3acc5c_InfIter {
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
};
inline jule::Bool _1bc3acc5c_InfIter_eq(_1bc3acc5c_InfIter *_self_, _1bc3acc5c_InfIter _other_);


struct _1bc3ad213_WhileIter {
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::Any _field_Expr;
	jule::Any _field_Next;
};
inline jule::Bool _1bc3ad213_WhileIter_eq(_1bc3ad213_WhileIter *_self_, _1bc3ad213_WhileIter _other_);


struct _1bc3adb5e_RangeIter {
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Ptr<_1bc42dc12_Var> _field_KeyA;
	jule::Ptr<_1bc42dc12_Var> _field_KeyB;
};
inline jule::Bool _1bc3adb5e_RangeIter_eq(_1bc3adb5e_RangeIter *_self_, _1bc3adb5e_RangeIter _other_);


struct _1bc3adee4_ContSt {
	jule::Uintptr _field_It;
};
inline jule::Bool _1bc3adee4_ContSt_eq(_1bc3adee4_ContSt *_self_, _1bc3adee4_ContSt _other_);


struct _1bc3ae3bd_BreakSt {
	jule::Uintptr _field_It;
	jule::Uintptr _field_Mtch;
};
inline jule::Bool _1bc3ae3bd_BreakSt_eq(_1bc3ae3bd_BreakSt *_self_, _1bc3ae3bd_BreakSt _other_);


struct _1bc3ae874_Label {
	jule::Str _field_Ident;
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1bc3ae874_Label_eq(_1bc3ae874_Label *_self_, _1bc3ae874_Label _other_);


struct _1bc3aeed4_GotoSt {
	jule::Str _field_Ident;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Ptr<_1bc3ae874_Label> _field_Label;
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::I32 _field_Index;
};
inline jule::Bool _1bc3aeed4_GotoSt_eq(_1bc3aeed4_GotoSt *_self_, _1bc3aeed4_GotoSt _other_);


struct _1bc3b03ad_Postfix {
	jule::Any _field_Expr;
	jule::Str _field_Op;
};
inline jule::Bool _1bc3b03ad_Postfix_eq(_1bc3b03ad_Postfix *_self_, _1bc3b03ad_Postfix _other_);


struct _1bc3b0864_Assign {
	jule::Ptr<_1bc2e1795_OperandExprModel> _field_Left;
	jule::Ptr<_1bc2e1795_OperandExprModel> _field_Right;
	jule::Ptr<_1bc247014_Token> _field_Op;
};
inline jule::Bool _1bc3b0864_Assign_eq(_1bc3b0864_Assign *_self_, _1bc3b0864_Assign _other_);


struct _1bc3b0d1a_MultiAssign {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Decls;
	jule::Slice<jule::Ptr<_1bc48354c_Data>> _field_Left;
	jule::Any _field_Right;
};
struct _1bc3b1557_Match {
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Bool _field_TypeMatch;
	jule::Bool _field_Comptime;
	jule::Slice<jule::Ptr<_1bc3b2080_Case>> _field_Cases;
	jule::Ptr<_1bc3b2080_Case> _field_Default;
};
struct _1bc3b2080_Case {
	jule::Ptr<_1bc3b1557_Match> _field_Owner;
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::Slice<jule::Ptr<_1bc48354c_Data>> _field_Exprs;
	jule::Ptr<_1bc3b2080_Case> _field_Next;
};
struct _1bc3b2778_FallSt {
	jule::Uintptr _field_DestCase;
};
inline jule::Bool _1bc3b2778_FallSt_eq(_1bc3b2778_FallSt *_self_, _1bc3b2778_FallSt _other_);


struct _1bc3b2b1e_RetSt {
	jule::Ptr<_1bc302113_FnIns> _field_Func;
	jule::Any _field_Expr;
};
inline jule::Bool _1bc3b2b1e_RetSt_eq(_1bc3b2b1e_RetSt *_self_, _1bc3b2b1e_RetSt _other_);


struct _1bc3b30c5_scopeLabel {
	jule::Ptr<_1bc247014_Token> _field_token;
	jule::Ptr<_1bc3ae874_Label> _field_node;
	jule::Bool _field_used;
};
inline jule::Bool _1bc3b30c5_scopeLabel_eq(_1bc3b30c5_scopeLabel *_self_, _1bc3b30c5_scopeLabel _other_);


struct _1bc3b349e_result {
	jule::Ptr<_1bc302113_FnIns> _field_func;
	jule::Bool _field_mutable;
};
inline jule::Bool _1bc3b349e_result_eq(_1bc3b349e_result *_self_, _1bc3b349e_result _other_);


struct _1bc3b448e_scopeChecker {
	jule::Ptr<_1bc247014_Token> _field_calledFrom;
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Ptr<_1bc302113_FnIns> _field_owner;
	jule::Ptr<_1bc3b448e_scopeChecker> _field_parent;
	jule::I32 _field_childIndex;
	jule::Ptr<_1bc305358_SymTab> _field_table;
	jule::Ptr<_1bc3abd27_Scope> _field_scope;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_tree;
	jule::Ptr<_1bc3b349e_result> _field_result;
	jule::Uintptr _field_it;
	jule::Uintptr _field_cse;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc42dc12_Var>>> _field_captured;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc3b30c5_scopeLabel>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>> _field_gotos;
	jule::I32 _field_i;
};
inline jule::Bool _1bc3b448e_scopeChecker_eq(_1bc3b448e_scopeChecker *_self_, _1bc3b448e_scopeChecker _other_);


struct _1bc3c831b_directiveChecker {
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>> _field_d;
	jule::Any _field_o;
};
inline jule::Bool _1bc3c831b_directiveChecker_eq(_1bc3c831b_directiveChecker *_self_, _1bc3c831b_directiveChecker _other_);


struct _1bc3cab26_ReferenceStack {
	jule::Slice<jule::Any> _field_buffer;
};
struct _1bc3cc177_Pass {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Text;
};
inline jule::Bool _1bc3cc177_Pass_eq(_1bc3cc177_Pass *_self_, _1bc3cc177_Pass _other_);


struct _1bc3d1b2c_symBuilder {
	jule::Ptr<_1bc3d1b2c_symBuilder> _field_owner;
	jule::Trait _field_importer;
	jule::Slice<_1a9575ca1_Log> _field_errors;
	jule::Ptr<_1bc25aa50_AST> _field_ast;
	jule::Ptr<_1bc305358_SymTab> _field_table;
};
struct _1bc3dcb9e_ImportInfo {
	jule::Ptr<_1bc27585b_UseDecl> _field_Decl;
	jule::Str _field_Path;
	jule::Str _field_LinkPath;
	jule::Str _field_Alias;
	jule::Bool _field_Duplicate;
	jule::Bool _field_Binded;
	jule::Bool _field_Std;
	jule::Ptr<_1bc3e0421_Package> _field_Package;
	jule::I32 _field_ModId;
};
inline jule::Bool _1bc3dcb9e_ImportInfo_eq(_1bc3dcb9e_ImportInfo *_self_, _1bc3dcb9e_ImportInfo _other_);


struct _1bc3e0421_Package {
	jule::Slice<jule::Ptr<_1bc305358_SymTab>> _field_Files;
};
struct _1bc4093c4_commonSemaMeta {
	jule::Slice<jule::Ptr<_1bc38e337_comptimeTypeInfo>> _field_comptimeTypeInfos;
	jule::Ptr<_1bc3dcb9e_ImportInfo> _field_runtime;
};
struct _1bc409eeb_sema {
	jule::Slice<_1a9575ca1_Log> _field_errors;
	jule::Slice<jule::Ptr<_1bc305358_SymTab>> _field_files;
	jule::Ptr<_1bc305358_SymTab> _field_file;
	jule::I32 _field_flags;
	jule::Ptr<_1bc4093c4_commonSemaMeta> _field_meta;
};
struct _1bc42a22a_missingRetChecker {
	jule::Slice<jule::Uintptr> _field_breaked;
	jule::Bool _field_falled;
};
struct _1bc42dc12_Var {
	jule::Ptr<_1bc3abd27_Scope> _field_Scope;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Bool _field_Binded;
	jule::Bool _field_Constant;
	jule::Bool _field_Mutable;
	jule::Bool _field_Public;
	jule::Bool _field_Used;
	jule::Bool _field_Statically;
	jule::Bool _field_Reference;
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
	jule::Ptr<_1bc4846c4_Value> _field_Value;
	jule::Ptr<_1bc3cab26_ReferenceStack> _field_Refers;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_Directives;
	jule::I32 _field_RetOrder;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Depends;
};
struct _1bc42ea8c_FuncPattern {
};
struct _1bc46e88a_typeCompatibilityChecker {
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Ptr<_1bc4b64e7_Type> _field_dest;
	jule::Ptr<_1bc4b64e7_Type> _field_src;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
};
inline jule::Bool _1bc46e88a_typeCompatibilityChecker_eq(_1bc46e88a_typeCompatibilityChecker *_self_, _1bc46e88a_typeCompatibilityChecker _other_);


struct _1bc471716_assignTypeChecker {
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Ptr<_1bc4b64e7_Type> _field_dest;
	jule::Ptr<_1bc48354c_Data> _field_d;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
	jule::Ptr<_1bc3cab26_ReferenceStack> _field_refers;
};
inline jule::Bool _1bc471716_assignTypeChecker_eq(_1bc471716_assignTypeChecker *_self_, _1bc471716_assignTypeChecker _other_);


struct _1bc4730db_dynamicTypeAnnotation {
	jule::Ptr<_1bc48551b_eval> _field_e;
	jule::Ptr<_1bc302113_FnIns> _field_f;
	jule::Ptr<_1bc300ead_ParamIns> _field_p;
	jule::Ptr<_1bc48354c_Data> _field_a;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
	jule::Ptr<_1bc4b64e7_Type>* _field_k;
	jule::Ptr<_1bc25c90e_TypeDecl> _field_c;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_ignored;
};
struct _1bc477e48_fnCallArgChecker {
	jule::Ptr<_1bc48551b_eval> _field_e;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_args;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
	jule::Ptr<_1bc302113_FnIns> _field_f;
	jule::Bool _field_dynamicAnnotation;
	jule::Slice<jule::Any> _field_argModels;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_ignored;
};
struct _1bc47ad80_structLitChecker {
	jule::Ptr<_1bc48551b_eval> _field_e;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
	jule::Ptr<_1bc2810c5_StructIns> _field_s;
	jule::Slice<jule::Ptr<_1bc2e2697_StructArgExprModel>> _field_args;
};
struct _1bc47cb62_rangeChecker {
	jule::Ptr<_1bc3b448e_scopeChecker> _field_sc;
	jule::Ptr<_1bc2726d2_RangeKind> _field_rang;
	jule::Ptr<_1bc3adb5e_RangeIter> _field_Kind;
	jule::Ptr<_1bc48354c_Data> _field_d;
};
inline jule::Bool _1bc47cb62_rangeChecker_eq(_1bc47cb62_rangeChecker *_self_, _1bc47cb62_rangeChecker _other_);


struct _1bc4804a0_retTypeChecker {
	jule::Ptr<_1bc3b448e_scopeChecker> _field_sc;
	jule::Ptr<_1bc302113_FnIns> _field_f;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_types;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _field_exprs;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
	jule::Any _field_model;
	jule::Bool _field_mutable;
};
struct _1bc48354c_Data {
	jule::Bool _field_untyped;
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Bool _field_Mutable;
	jule::Bool _field_Reference;
	jule::Bool _field_Lvalue;
	jule::Bool _field_IsRune;
	jule::Any _field_Model;
	jule::Bool _field_Decl;
	jule::Ptr<_1bac25065_Const> _field_Constant;
};
inline jule::Bool _1bc48354c_Data_eq(_1bc48354c_Data *_self_, _1bc48354c_Data _other_);


struct _1bc4846c4_Value {
	jule::Ptr<_1bc261c43_Expr> _field_Expr;
	jule::Ptr<_1bc48354c_Data> _field_Data;
};
inline jule::Bool _1bc4846c4_Value_eq(_1bc4846c4_Value *_self_, _1bc4846c4_Value _other_);


struct _1bc484a9d_target {
	jule::Bool _field_ignored;
	jule::Bool _field_mutable;
};
inline jule::Bool _1bc484a9d_target_eq(_1bc484a9d_target *_self_, _1bc484a9d_target _other_);


struct _1bc48551b_eval {
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Trait _field_lookup;
	jule::Ptr<_1bc4b64e7_Type> _field_prefix;
	jule::Bool _field_unsafety;
	jule::Bool _field_disBuiltin;
	jule::Ptr<_1bc42dc12_Var> _field_owner;
	jule::Ptr<_1bc280525_FieldIns> _field_field;
	_1bc484a9d_target _field_target;
};
inline jule::Bool _1bc48551b_eval_eq(_1bc48551b_eval *_self_, _1bc48551b_eval _other_);


struct _1bc4a478d_unaryEval {
	jule::Ptr<_1bc48551b_eval> _field_e;
	jule::Ptr<_1bc48354c_Data> _field_d;
	jule::Ptr<_1bc263d00_UnaryExpr> _field_u;
};
inline jule::Bool _1bc4a478d_unaryEval_eq(_1bc4a478d_unaryEval *_self_, _1bc4a478d_unaryEval _other_);


struct _1bc4a6729_binaryEval {
	jule::Ptr<_1bc48551b_eval> _field_e;
	jule::Ptr<_1bc48354c_Data> _field_l;
	jule::Ptr<_1bc48354c_Data> _field_r;
	jule::Ptr<_1bc247014_Token> _field_op;
};
inline jule::Bool _1bc4a6729_binaryEval_eq(_1bc4a6729_binaryEval *_self_, _1bc4a6729_binaryEval _other_);


struct _1bc4b4b11_InsGeneric {
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_Constraint;
};
struct _1bc4b5705_TypeAlias {
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_Scope;
	jule::Bool _field_Public;
	jule::Bool _field_Binded;
	jule::Bool _field_Used;
	jule::Bool _field_Generic;
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Str _field_Ident;
	jule::Ptr<_1bc4bdc08_TypeSym> _field_TypeSym;
	jule::Slice<jule::Any> _field_Refers;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _field_Generics;
};
struct _1bc4b64e7_Type {
	jule::Str _field_BindIdent;
	jule::Bool _field_Generic;
	jule::Bool _field_Variadic;
	jule::Trait _field_Kind;
};
inline jule::Bool _1bc4b64e7_Type_eq(_1bc4b64e7_Type *_self_, _1bc4b64e7_Type _other_);


struct _1bc4bdc08_TypeSym {
	jule::Ptr<_1bc25c90e_TypeDecl> _field_Decl;
	jule::Ptr<_1bc4b64e7_Type> _field_Type;
};
inline jule::Bool _1bc4bdc08_TypeSym_eq(_1bc4bdc08_TypeSym *_self_, _1bc4bdc08_TypeSym _other_);


struct _1bc4be610_Prim {
	jule::Str _field_Kind;
};
inline jule::Bool _1bc4be610_Prim_eq(_1bc4be610_Prim *_self_, _1bc4be610_Prim _other_);


struct _1bc4c313b_Sptr {
	jule::Ptr<_1bc4b64e7_Type> _field_Elem;
};
inline jule::Bool _1bc4c313b_Sptr_eq(_1bc4c313b_Sptr *_self_, _1bc4c313b_Sptr _other_);


struct _1bc4c3b0e_Slc {
	jule::Ptr<_1bc4b64e7_Type> _field_Elem;
};
inline jule::Bool _1bc4c3b0e_Slc_eq(_1bc4c3b0e_Slc *_self_, _1bc4c3b0e_Slc _other_);


struct _1bc4c4703_Tuple {
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_Types;
};
struct _1bc4c52a3_Map {
	jule::Ptr<_1bc4b64e7_Type> _field_Key;
	jule::Ptr<_1bc4b64e7_Type> _field_Val;
};
inline jule::Bool _1bc4c52a3_Map_eq(_1bc4c52a3_Map *_self_, _1bc4c52a3_Map _other_);


struct _1bc4c5e30_Arr {
	jule::Bool _field_Auto;
	jule::I32 _field_N;
	jule::Ptr<_1bc4b64e7_Type> _field_Elem;
};
inline jule::Bool _1bc4c5e30_Arr_eq(_1bc4c5e30_Arr *_self_, _1bc4c5e30_Arr _other_);


struct _1bc4c6903_Ptr {
	jule::Ptr<_1bc4b64e7_Type> _field_Elem;
};
inline jule::Bool _1bc4c6903_Ptr_eq(_1bc4c6903_Ptr *_self_, _1bc4c6903_Ptr _other_);


struct _1bc4c7904_referencer {
	jule::Str _field_ident;
	jule::Any _field_owner;
	jule::Slice<jule::Any>* _field_refs;
};
inline jule::Bool _1bc4c7904_referencer_eq(_1bc4c7904_referencer *_self_, _1bc4c7904_referencer _other_);


struct _1bc4c88e4_typeChecker {
	jule::Ptr<_1bc409eeb_sema> _field_s;
	jule::Trait _field_rootLookup;
	jule::Trait _field_lookup;
	jule::Ptr<_1bc4c7904_referencer> _field_referencer;
	jule::Ptr<_1bc3cab26_ReferenceStack> _field_refers;
	jule::Ptr<_1bc247014_Token> _field_errorToken;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _field_ignoreGenerics;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>>* _field_ignoredGenerics;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _field_useGenerics;
	jule::Bool _field_cycleRisk;
	jule::Bool _field_disBuiltin;
	jule::Bool _field_selection;
	jule::Ptr<_1bc4b5705_TypeAlias> _field_ownerAlias;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _field_bannedGenerics;
	jule::Bool _field_inscatch;
};
struct _1bc4d19a7_identTypeLookup {
};
inline jule::Bool _1bc4d19a7_identTypeLookup_eq(_1bc4d19a7_identTypeLookup *_self_, _1bc4d19a7_identTypeLookup _other_);


struct _1bcd36e55_FileInfo {
	jule::Ptr<_1bc25aa50_AST> _field_Ast;
	jule::Slice<_1a9575ca1_Log> _field_Errors;
};
struct _1bcd86bdb_stmt {
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_tokens;
	jule::Bool _field_terminated;
};
struct _1bcd8757c_scopeParser {
	jule::Ptr<_1bcda5787_parser> _field_p;
	jule::Ptr<_1bc26ca0c_ScopeTree> _field_s;
	jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _field_stmts;
	jule::I32 _field_pos;
};
struct _1bcd94ea2_exprBuilder {
	jule::Ptr<_1bcda5787_parser> _field_p;
};
inline jule::Bool _1bcd94ea2_exprBuilder_eq(_1bcd94ea2_exprBuilder *_self_, _1bcd94ea2_exprBuilder _other_);


struct _1bcda2597_assignInfo {
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_l;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_r;
	jule::Ptr<_1bc247014_Token> _field_setter;
	jule::Bool _field_ok;
};
struct _1bcda5787_parser {
	jule::Ptr<_1bc25aa50_AST> _field_ast;
	jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> _field_directives;
	jule::Slice<_1a9575ca1_Log> _field_errors;
	jule::Ptr<_1bcd94ea2_exprBuilder> _field_ep;
};
struct _1bcdb6941_typeBuilder {
	jule::Ptr<_1bcda5787_parser> _field_p;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _field_tokens;
	jule::I32* _field_i;
	jule::Bool _field_err;
};
struct _1bc5e4c52_CompileInfo {
	jule::Bool _field_Prod;
	jule::Bool _field_Test;
	jule::Str _field_Compiler;
	jule::Str _field_CppStd;
};
inline jule::Bool _1bc5e4c52_CompileInfo_eq(_1bc5e4c52_CompileInfo *_self_, _1bc5e4c52_CompileInfo _other_);


struct _1bc5e6490_directiveEval {
	jule::Slice<_1a9575ca1_Log> _field_logs;
	jule::Ptr<_1bc25bd2b_Directive> _field_d;
	jule::Slice<jule::Str> _field_vars;
};
struct _1bcdbaa44_Importer {
	jule::Slice<jule::Str> _field_mods;
	jule::Str _field_mod;
	jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _field_pkgs;
	jule::Slice<jule::Str> _field_vars;
};
struct _1bc547c82_anyData {
	jule::Ptr<jule::U32> _field_dataPtr;
	void* _field_typePtr;
};
inline jule::Bool _1bc547c82_anyData_eq(_1bc547c82_anyData *_self_, _1bc547c82_anyData _other_);


struct _1bcdc1b5a_ExprInspector {
	jule::Bool _field_SkipChild;
	jule::Fn<void,jule::Any*> _field_handler;
};
struct _1bcdc90c4_MetaStrBuilder {
	jule::Ptr<_1bc302113_FnIns> _field_Write;
	jule::Ptr<_1bc302113_FnIns> _field_WriteByte;
	jule::Ptr<_1bc302113_FnIns> _field_WriteRune;
	jule::Ptr<_1bc302113_FnIns> _field_WriteStr;
};
inline jule::Bool _1bcdc90c4_MetaStrBuilder_eq(_1bcdc90c4_MetaStrBuilder *_self_, _1bcdc90c4_MetaStrBuilder _other_);


struct _1bcdc9c95_MetaRuntime {
	jule::Ptr<_1bc2ee055_Fn> _field_ToStr;
	jule::Ptr<_1bc2ee055_Fn> _field_ArrayCmp;
	jule::Ptr<_1bc302113_FnIns> _field_RCAdd;
	jule::Ptr<_1bc302113_FnIns> _field_RCLoad;
	jule::Ptr<_1bc302113_FnIns> _field_RCDrop;
	jule::Ptr<_1bc302113_FnIns> _field_RCAddAtomic;
	jule::Ptr<_1bc302113_FnIns> _field_RCLoadAtomic;
	jule::Ptr<_1bc302113_FnIns> _field_RCDropAtomic;
	jule::Ptr<_1bc302113_FnIns> _field_RuneCount;
	jule::Ptr<_1bc27d26a_Struct> _field_Map;
	jule::Ptr<_1bc27d26a_Struct> _field_MapIterator;
};
inline jule::Bool _1bcdc9c95_MetaRuntime_eq(_1bcdc9c95_MetaRuntime *_self_, _1bcdc9c95_MetaRuntime _other_);


struct _1bcdca768_MetaMathCmplx {
	jule::Ptr<_1bc2810c5_StructIns> _field_Cmplx;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxAdd;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxSub;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxMul;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxDiv;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxAddZ;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxSubZ;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxMulZ;
	jule::Ptr<_1bc302113_FnIns> _field_CmplxDivZ;
};
inline jule::Bool _1bcdca768_MetaMathCmplx_eq(_1bcdca768_MetaMathCmplx *_self_, _1bcdca768_MetaMathCmplx _other_);


struct _1bcdcad73_Meta {
	jule::Ptr<_1bcdc9c95_MetaRuntime> _field_Runtime;
	jule::Ptr<_1bcdc90c4_MetaStrBuilder> _field_StrBuilder;
	jule::Ptr<_1bcdca768_MetaMathCmplx> _field_MathCmplx;
	jule::Ptr<_1bc2ee055_Fn> _field_EntryPoint;
};
inline jule::Bool _1bcdcad73_Meta_eq(_1bcdcad73_Meta *_self_, _1bcdcad73_Meta _other_);


struct _1bcdcc34c_OrderedDefines {
	jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _field_Structs;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_Globals;
};
struct _1bdc1ab29_liveTable {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _field_vars;
	jule::Slice<jule::Ptr<_1bc302113_FnIns>> _field_fns;
	jule::Slice<jule::Ptr<_1bc2810c5_StructIns>> _field_structs;
	jule::Slice<jule::Ptr<_1bc309769_Trait>> _field_traits;
};
struct _1bdc1ae37_ObjectDeadCode {
	_1bdc1ab29_liveTable _field_live;
	jule::Ptr<_1bcdbd492_IR> _field_ir;
};
struct _1bdc2005c_scopeDeadCode {
	jule::Ptr<_1bdc2005c_scopeDeadCode> _field_parent;
	jule::Ptr<_1bc3abd27_Scope> _field_s;
	jule::I32 _field_i;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc3ae874_Label>>> _field_labels;
	jule::Ptr<jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>> _field_gotos;
	jule::Bool _field_except;
};
inline jule::Bool _1bdc2005c_scopeDeadCode_eq(_1bdc2005c_scopeDeadCode *_self_, _1bdc2005c_scopeDeadCode _other_);


struct _1bdc245e4_exprDeadCode {
	jule::Ptr<_1bdc2005c_scopeDeadCode> _field_s;
};
inline jule::Bool _1bdc245e4_exprDeadCode_eq(_1bdc245e4_exprDeadCode *_self_, _1bdc245e4_exprDeadCode _other_);


struct _1bdad9bc4_ExceptionalForwardingExprModel {
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _field_Expr;
};
inline jule::Bool _1bdad9bc4_ExceptionalForwardingExprModel_eq(_1bdad9bc4_ExceptionalForwardingExprModel *_self_, _1bdad9bc4_ExceptionalForwardingExprModel _other_);


struct _1bdad9e38_FnCallIgnoreExceptionalExprModel {
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _field_Base;
};
inline jule::Bool _1bdad9e38_FnCallIgnoreExceptionalExprModel_eq(_1bdad9e38_FnCallIgnoreExceptionalExprModel *_self_, _1bdad9e38_FnCallIgnoreExceptionalExprModel _other_);


struct _1bdada235_StrConcatExprModel {
	jule::Slice<jule::Any> _field_Parts;
};
struct _1bdada653_SwapExprModel {
	jule::Ptr<_1bc48354c_Data> _field_Left;
	jule::Ptr<_1bc48354c_Data> _field_Right;
};
inline jule::Bool _1bdada653_SwapExprModel_eq(_1bdada653_SwapExprModel *_self_, _1bdada653_SwapExprModel _other_);


struct _1bdadaa2c_EmptyCompareExprModel {
	jule::Any _field_Expr;
	jule::Bool _field_Neg;
};
inline jule::Bool _1bdadaa2c_EmptyCompareExprModel_eq(_1bdadaa2c_EmptyCompareExprModel *_self_, _1bdadaa2c_EmptyCompareExprModel _other_);


struct _1bdadad29_RefExprModel {
	jule::Ptr<_1bc42dc12_Var> _field_Var;
};
inline jule::Bool _1bdadad29_RefExprModel_eq(_1bdadad29_RefExprModel *_self_, _1bdadad29_RefExprModel _other_);


struct _1bdadb2d0_StrCompExprModel {
	jule::Any _field_Left;
	jule::Ptr<_1bac25065_Const> _field_Right;
	jule::Bool _field_NotEq;
};
inline jule::Bool _1bdadb2d0_StrCompExprModel_eq(_1bdadb2d0_StrCompExprModel *_self_, _1bdadb2d0_StrCompExprModel _other_);


struct _1bdadb8eb_MutSlicingExprModel {
	jule::Ptr<_1bc247014_Token> _field_Token;
	jule::Any _field_Expr;
	jule::Any _field_Left;
	jule::Any _field_Right;
};
inline jule::Bool _1bdadb8eb_MutSlicingExprModel_eq(_1bdadb8eb_MutSlicingExprModel *_self_, _1bdadb8eb_MutSlicingExprModel _other_);


struct _1bdadbbe8_UnsafeBinaryExprModel {
	jule::Ptr<_1bc2e1c90_BinaryExprModel> _field_Node;
};
inline jule::Bool _1bdadbbe8_UnsafeBinaryExprModel_eq(_1bdadbbe8_UnsafeBinaryExprModel *_self_, _1bdadbbe8_UnsafeBinaryExprModel _other_);


struct _1bdadbee5_UnsafeIndexingExprModel {
	jule::Ptr<_1bc2e4600_IndexingExprModel> _field_Node;
};
inline jule::Bool _1bdadbee5_UnsafeIndexingExprModel_eq(_1bdadbee5_UnsafeIndexingExprModel *_self_, _1bdadbee5_UnsafeIndexingExprModel _other_);


struct _1bdadc3be_PushToSliceExprModel {
	jule::Any _field_Dest;
	jule::Ptr<_1bc2e4149_SliceExprModel> _field_Elems;
};
inline jule::Bool _1bdadc3be_PushToSliceExprModel_eq(_1bdadc3be_PushToSliceExprModel *_self_, _1bdadc3be_PushToSliceExprModel _other_);


struct _1bdadc798_AppendToSliceExprModel {
	jule::Any _field_Dest;
	jule::Any _field_Slice;
};
inline jule::Bool _1bdadc798_AppendToSliceExprModel_eq(_1bdadc798_AppendToSliceExprModel *_self_, _1bdadc798_AppendToSliceExprModel _other_);


struct _1bdadcb72_StrRuneIter {
	jule::Ptr<_1bc48354c_Data> _field_Expr;
	jule::Ptr<_1bc3adb5e_RangeIter> _field_Base;
};
inline jule::Bool _1bdadcb72_StrRuneIter_eq(_1bdadcb72_StrRuneIter *_self_, _1bdadcb72_StrRuneIter _other_);


struct _1bdadce6e_UnsafeDerefExprModel {
	jule::Ptr<_1bc2e2169_UnaryExprModel> _field_Base;
};
inline jule::Bool _1bdadce6e_UnsafeDerefExprModel_eq(_1bdadce6e_UnsafeDerefExprModel *_self_, _1bdadce6e_UnsafeDerefExprModel _other_);


struct _1bdadd26b_UnsafeCastingExprModel {
	jule::Ptr<_1bc2e33bd_CastingExprModel> _field_Base;
};
inline jule::Bool _1bdadd26b_UnsafeCastingExprModel_eq(_1bdadd26b_UnsafeCastingExprModel *_self_, _1bdadd26b_UnsafeCastingExprModel _other_);


struct _1bdade008_nilVar {
	jule::Uintptr _field_var;
	jule::Bool _field_safe;
};
inline jule::Bool _1bdade008_nilVar_eq(_1bdade008_nilVar *_self_, _1bdade008_nilVar _other_);


struct _1bdade349_nils {
	jule::Slice<_1bdade008_nilVar> _field_vars;
};
struct _1bdae1e40_scopeOptimizer {
	jule::Ptr<_1bdae1e40_scopeOptimizer> _field_parent;
	jule::I32 _field_i;
	jule::Ptr<_1bc3abd27_Scope> _field_scope;
	jule::Ptr<_1bdb035c2_data> _field_data;
};
inline jule::Bool _1bdae1e40_scopeOptimizer_eq(_1bdae1e40_scopeOptimizer *_self_, _1bdae1e40_scopeOptimizer _other_);


struct _1bdae8e9c_exprOptimizer {
	jule::Ptr<jule::Any> _field_model;
	jule::Ptr<_1bdb035c2_data> _field_data;
	jule::Ptr<_1bcdc1b5a_ExprInspector> _field_inspector;
	jule::Ptr<_1bdae1e40_scopeOptimizer> _field_scopeOpt;
};
inline jule::Bool _1bdae8e9c_exprOptimizer_eq(_1bdae8e9c_exprOptimizer *_self_, _1bdae8e9c_exprOptimizer _other_);


struct _1bdb0039e_dynamicVar {
	jule::Uintptr _field_var;
	jule::Ptr<_1bc4b64e7_Type> _field_kind;
};
inline jule::Bool _1bdb0039e_dynamicVar_eq(_1bdb0039e_dynamicVar *_self_, _1bdb0039e_dynamicVar _other_);


struct _1bdb006e0_dynamic {
	jule::Slice<_1bdb0039e_dynamicVar> _field_vars;
};
struct _1bdb02eea_dataCheckpoint {
	jule::Ptr<_1bdb0587c_boundary> _field_boundary;
	jule::Ptr<_1bdade349_nils> _field_nils;
	jule::Ptr<_1bdb006e0_dynamic> _field_dynamic;
};
inline jule::Bool _1bdb02eea_dataCheckpoint_eq(_1bdb02eea_dataCheckpoint *_self_, _1bdb02eea_dataCheckpoint _other_);


struct _1bdb035c2_data {
	jule::Ptr<_1bdb0587c_boundary> _field_boundary;
	jule::Ptr<_1bdade349_nils> _field_nils;
	jule::Ptr<_1bdb006e0_dynamic> _field_dynamic;
	jule::I32 _field_flags;
};
inline jule::Bool _1bdb035c2_data_eq(_1bdb035c2_data *_self_, _1bdb035c2_data _other_);


struct _1bdb0553b_boundaryVar {
	jule::Uintptr _field_var;
	jule::Slice<jule::Any> _field_maxSize;
};
struct _1bdb0587c_boundary {
	jule::Slice<_1bdb0553b_boundaryVar> _field_vars;
};
struct _1bdc25716_Optimizer {
	jule::Ptr<_1bcdbd492_IR> _field_ir;
};
inline jule::Bool _1bdc25716_Optimizer_eq(_1bdc25716_Optimizer *_self_, _1bdc25716_Optimizer _other_);


struct _1bdedd0c7_AbsTime {
	jule::U64 _field_Day;
	jule::U64 _field_WeekDay;
	jule::U64 _field_YearDay;
	jule::U64 _field_Month;
	jule::U64 _field_Year;
	jule::U64 _field_Second;
	jule::U64 _field_Minute;
	jule::U64 _field_Hour;
};
inline jule::Bool _1bdedd0c7_AbsTime_eq(_1bdedd0c7_AbsTime *_self_, _1bdedd0c7_AbsTime _other_);


struct _1bdedd79d_Time {
	jule::U64 _field_sec;
};
inline jule::Bool _1bdedd79d_Time_eq(_1bdedd79d_Time *_self_, _1bdedd79d_Time _other_);


struct _1bdc2983b_scopeCoder {
	jule::Ptr<_1bdeeab84_ObjectCoder> _field_oc;
};
inline jule::Bool _1bdc2983b_scopeCoder_eq(_1bdc2983b_scopeCoder *_self_, _1bdc2983b_scopeCoder _other_);


struct _1bdc35dca_exprCoder {
	jule::Ptr<_1bdeeab84_ObjectCoder> _field_oc;
	jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1bc42dc12_Var>>> _field_varPrefixes;
};
struct _1bdc48717_TestCoder {
	jule::Ptr<_1bc2810c5_StructIns> _field_t;
	jule::Ptr<_1bc2ee055_Fn> _field_tmReset;
	jule::Ptr<_1bc2ee055_Fn> _field_tmFailed;
	jule::Ptr<_1bc2ee055_Fn> _field_tmSkipped;
	jule::Ptr<_1bdeeab84_ObjectCoder> _field_oc;
};
inline jule::Bool _1bdc48717_TestCoder_eq(_1bdc48717_TestCoder *_self_, _1bdc48717_TestCoder _other_);


struct _1bdc4b363_identCoder {
};
inline jule::Bool _1bdc4b363_identCoder_eq(_1bdc4b363_identCoder *_self_, _1bdc4b363_identCoder _other_);


struct _1bdee83ce_SerializationInfo {
	jule::Str _field_Compiler;
	jule::Str _field_CompilerCommand;
};
inline jule::Bool _1bdee83ce_SerializationInfo_eq(_1bdee83ce_SerializationInfo *_self_, _1bdee83ce_SerializationInfo _other_);


struct _1bdee87ec_traitCast {
	jule::Ptr<_1bc309769_Trait> _field_t1;
	jule::Ptr<_1bc309769_Trait> _field_t2;
};
inline jule::Bool _1bdee87ec_traitCast_eq(_1bdee87ec_traitCast *_self_, _1bdee87ec_traitCast _other_);


struct _1bdee8bc6_anonHash {
	jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _field_expr;
	jule::Str _field_ident;
};
inline jule::Bool _1bdee8bc6_anonHash_eq(_1bdee8bc6_anonHash *_self_, _1bdee8bc6_anonHash _other_);


struct _1bdee90e4_traitHash {
	jule::Ptr<_1bc309769_Trait> _field_traitDecl;
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _field_methods;
};
struct _1bdee93e1_metadata {
	jule::Bool _field_concurrent;
};
inline jule::Bool _1bdee93e1_metadata_eq(_1bdee93e1_metadata *_self_, _1bdee93e1_metadata _other_);


struct _1bdeeab84_ObjectCoder {
	_1a95669ea_Builder _field_Buf;
	_1a95669ea_Builder _field_resultDecls;
	_1a95669ea_Builder _field_anyObj;
	_1a95669ea_Builder _field_anonObj;
	_1a95669ea_Builder _field_deallocObj;
	_1a95669ea_Builder _field_coSpawnObj;
	jule::Ptr<_1bcdbd492_IR> _field_ir;
	_1bdee83ce_SerializationInfo _field_info;
	jule::Slice<jule::Ptr<_1bdee8bc6_anonHash>> _field_anons;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_deallocated;
	jule::Slice<jule::U8> _field_indentBuffer;
	jule::Ptr<_1c694752e__Map> _field_resultMap;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _field_anyTypeMap;
	jule::Slice<_1bdee87ec_traitCast> _field_traitCastMap;
	jule::Slice<jule::Ptr<_1bc302113_FnIns>> _field_coSpawnMap;
	jule::Slice<jule::Ptr<_1bdee90e4_traitHash>> _field_traitMap;
	jule::Ptr<_1c6a85d98__Map> _field_traitMetMap;
	jule::Ptr<_1bdc35dca_exprCoder> _field_ec;
	jule::Ptr<_1bdc2983b_scopeCoder> _field_sc;
	jule::Ptr<_1be00aad9_typeCoder> _field_tc;
	jule::I32 _field_headPos;
	jule::I32 _field_declPos;
	jule::I32 _field_wrapPos;
	_1bdee93e1_metadata _field_meta;
};
struct _1be009eb2_customType {
	jule::Str _field_kind;
};
inline jule::Bool _1be009eb2_customType_eq(_1be009eb2_customType *_self_, _1be009eb2_customType _other_);


struct _1be00aad9_typeCoder {
	jule::Ptr<_1bdeeab84_ObjectCoder> _field_oc;
	jule::Ptr<_1be0136c4_resultCoder> _field_rc;
};
inline jule::Bool _1be00aad9_typeCoder_eq(_1be00aad9_typeCoder *_self_, _1be00aad9_typeCoder _other_);


struct _1be0136c4_resultCoder {
	jule::Ptr<_1be00aad9_typeCoder> _field_tc;
};
inline jule::Bool _1be0136c4_resultCoder_eq(_1be0136c4_resultCoder *_self_, _1be0136c4_resultCoder _other_);


struct _1c6bd2368_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::I64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::I64> _field_data;
};
inline jule::Bool _1c6bd2368_Flag_eq(_1c6bd2368_Flag *_self_, _1c6bd2368_Flag _other_);

struct _1c6bd5beb_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::U64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::U64> _field_data;
};
inline jule::Bool _1c6bd5beb_Flag_eq(_1c6bd5beb_Flag *_self_, _1c6bd5beb_Flag _other_);

struct _1c6bd9408_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::F64 _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::F64> _field_data;
};
inline jule::Bool _1c6bd9408_Flag_eq(_1c6bd9408_Flag *_self_, _1c6bd9408_Flag _other_);

struct _1c6bdcb59_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Bool _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Bool> _field_data;
};
inline jule::Bool _1c6bdcb59_Flag_eq(_1c6bdcb59_Flag *_self_, _1c6bdcb59_Flag _other_);

struct _1c6be1366_Flag {
	jule::Str _field_name;
	jule::I32 _field_short;
	jule::Str _field_default;
	jule::Str _field_what;
	jule::Ptr<jule::Str> _field_data;
};
inline jule::Bool _1c6be1366_Flag_eq(_1c6be1366_Flag *_self_, _1c6be1366_Flag _other_);


struct _1be0a7724_FlagSet {
	jule::Slice<jule::Trait> _field_flags;
};
struct _1be0aa1d8_argParser {
	_1be0a7724_FlagSet _field_set;
	jule::Slice<jule::Str> _field_args;
	jule::Slice<jule::Str> _field_content;
	jule::I32 _field_i;
};
struct _1a9c2b05a_Dir {
	jule::Str _field_Name;
	_1a9cc3e6b_Stat _field_Stat;
};
inline jule::Bool _1a9c2b05a_Dir_eq(_1a9c2b05a_Dir *_self_, _1a9c2b05a_Dir _other_);


struct _1a9c2bb82_Cmd {
	_1a9cc1d04_cmdAttrs _field_attrs;
	jule::Str _field_path;
	jule::Slice<jule::Str> _field_Args;
	jule::Slice<jule::Str> _field_Env;
};
struct _1bcdbd492_IR {
	jule::Str _field_Root;
	jule::Slice<jule::Str> _field_Passes;
	jule::Ptr<_1bc3e0421_Package> _field_Main;
	jule::Ptr<_1bc3dcb9e_ImportInfo> _field_Runtime;
	jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _field_Used;
	_1bcdcc34c_OrderedDefines _field_Ordered;
};
struct __jule_tuple_pstr__jule_tuple_pbool {
	jule::Str* __jule_result_arg0;
	jule::Bool* __jule_result_arg1;
};
struct __jule_tuple_px_1bc302113_FnIns__jule_tuple_psuintptr {
	jule::Ptr<_1bc302113_FnIns>* __jule_result_arg0;
	jule::Slice<jule::Uintptr>* __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_str {
	jule::Bool __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_bool {
	jule::Bool __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc48354c_Data__jule_tuple_x_1bc48354c_Data {
	jule::Ptr<_1bc48354c_Data> __jule_result_arg0;
	jule::Ptr<_1bc48354c_Data> __jule_result_arg1;
};
struct __jule_tuple_x_1bc48354c_Data__jule_tuple_bool {
	jule::Ptr<_1bc48354c_Data> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc261c43_Expr__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc2749ae_Case__jule_tuple_bool {
	jule::Ptr<_1bc2749ae_Case> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc2749ae_Case__jule_tuple_x_1bc273815_Else {
	jule::Slice<jule::Ptr<_1bc2749ae_Case>> __jule_result_arg0;
	jule::Ptr<_1bc273815_Else> __jule_result_arg1;
};
struct __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool {
	jule::Any __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc26b3ac_AssignSt__jule_tuple_bool {
	jule::Ptr<_1bc26b3ac_AssignSt> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool {
	jule::Ptr<_1bc25c90e_TypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool {
	jule::Ptr<_1bc260802_RetTypeDecl> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log {
	jule::Slice<jule::Ptr<_1bc25aa50_AST>> __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_s_1a9575ca1_Log {
	jule::Bool __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1bc302113_FnIns__jule_tuple_bool {
	jule::Ptr<_1bc302113_FnIns> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_i64__jule_tuple_bool {
	jule::I64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bcdbd492_IR__jule_tuple_s_1a9575ca1_Log {
	jule::Ptr<_1bcdbd492_IR> __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_i32__jule_tuple_int {
	jule::I32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_u64 {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple_i8 {
	jule::U64 __jule_result_arg0;
	jule::I8 __jule_result_arg1;
};
struct __jule_tuple_int__jule_tuple_bool {
	jule::I32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_bool {
	jule::Str __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_f64 {
	jule::F64 __jule_result_arg0;
	jule::F64 __jule_result_arg1;
};
struct __jule_tuple_u64__jule_tuple__1ab8d26e3_ConvError {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_bool {
	jule::F32 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple_bool {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
	jule::Bool __jule_result_arg3;
	jule::Bool __jule_result_arg4;
	jule::I32 __jule_result_arg5;
	jule::Bool __jule_result_arg6;
};
struct __jule_tuple_f64__jule_tuple__1ab8d26e3_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_f32__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError {
	jule::F32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError {
	jule::F64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::I32 __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int {
	jule::U64 __jule_result_arg0;
	jule::U64 __jule_result_arg1;
	jule::U64 __jule_result_arg2;
	jule::I32 __jule_result_arg3;
};
struct __jule_tuple_u32__jule_tuple_int__jule_tuple_bool {
	jule::U32 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u64__jule_tuple_int__jule_tuple_bool {
	jule::U64 __jule_result_arg0;
	jule::I32 __jule_result_arg1;
	jule::Bool __jule_result_arg2;
};
struct __jule_tuple_u32__jule_tuple_u32 {
	jule::U32 __jule_result_arg0;
	jule::U32 __jule_result_arg1;
};
struct __jule_tuple_su8__jule_tuple_str {
	jule::Slice<jule::U8> __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
struct __jule_tuple_u8__jule_tuple_bool {
	jule::U8 __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_x_1bc305358_SymTab__jule_tuple_s_1a9575ca1_Log {
	jule::Ptr<_1bc305358_SymTab> __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log {
	jule::Ptr<_1bc3e0421_Package> __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_x_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log {
	jule::Ptr<_1bc25aa50_AST> __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_sx_1bc247014_Token__jule_tuple_bool {
	jule::Slice<jule::Ptr<_1bc247014_Token>> __jule_result_arg0;
	jule::Bool __jule_result_arg1;
};
struct __jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token {
	jule::Slice<jule::Ptr<_1bc247014_Token>> __jule_result_arg0;
	jule::Slice<jule::Ptr<_1bc247014_Token>> __jule_result_arg1;
};
struct __jule_tuple_sx_1bc247014_Token__jule_tuple_int {
	jule::Slice<jule::Ptr<_1bc247014_Token>> __jule_result_arg0;
	jule::I32 __jule_result_arg1;
};
struct __jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> __jule_result_arg0;
	jule::Slice<_1a9575ca1_Log> __jule_result_arg1;
};
struct __jule_tuple_bool__jule_tuple_u64 {
	jule::Bool __jule_result_arg0;
	jule::U64 __jule_result_arg1;
};
struct __jule_tuple_str__jule_tuple_str {
	jule::Str __jule_result_arg0;
	jule::Str __jule_result_arg1;
};
inline jule::U32 static__1a969e8d0_DecodeU32(jule::Slice<jule::U8> _4522_b);
inline jule::U64 static__1a96a0309_DecodeU64(jule::Slice<jule::U8> _7522_b);
inline jule::Ptr<_1c694752e__Map> static__1c6947ae5_make(void);
inline void _1c6947c49_initData(_1c694752e__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1c6947d9d_hash(_1c694752e__Map* _self_, jule::Str _14616_k);
inline void _1c6948002_rehash(_1c694752e__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1c6948156_nextSize(_1c694752e__Map* _self_);
inline void _1c69482aa_lookup(jule::Ptr<_1c694752e__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok);
inline jule::Bool _1c694840e_get(jule::Ptr<_1c694752e__Map> _self_, jule::Str _23024_k);
inline jule::Bool* _1c6948563_set(_1c694752e__Map* _self_, jule::Str _24123_k);
inline jule::Bool _1c69486b7_del(jule::Ptr<_1c694752e__Map> _self_, jule::Str _27624_k);
inline void _1c694881b_clear(jule::Ptr<_1c694752e__Map> _self_);
inline jule::I32 _1c6948970_len(jule::Ptr<_1c694752e__Map> _self_);
inline jule::I32 _1c6948ac4_cap(_1c694752e__Map* _self_);
inline _1c6953c66_mapIterator _1c6948c28_iterator(jule::Ptr<_1c694752e__Map> _self_);
inline jule::Ptr<_1c6a85d98__Map> static__1c6a863b5_make(void);
inline void _1c6a86519_initData(_1c6a85d98__Map* _self_, jule::I32 _13524_cap);
inline jule::U64 _1c6a8666d_hash(_1c6a85d98__Map* _self_, jule::Ptr<_1bc302113_FnIns> _14616_k);
inline void _1c6a867c2_rehash(_1c6a85d98__Map* _self_, jule::I32 _15122_n);
inline jule::I32 _1c6a86926_nextSize(_1c6a85d98__Map* _self_);
inline void _1c6a86a7a_lookup(jule::Ptr<_1c6a85d98__Map> _self_, jule::Ptr<_1bc302113_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok);
inline jule::Slice<jule::Uintptr> _1c6a86bce_get(jule::Ptr<_1c6a85d98__Map> _self_, jule::Ptr<_1bc302113_FnIns> _23024_k);
inline jule::Slice<jule::Uintptr>* _1c6a86d33_set(_1c6a85d98__Map* _self_, jule::Ptr<_1bc302113_FnIns> _24123_k);
inline jule::Bool _1c6a86e87_del(jule::Ptr<_1c6a85d98__Map> _self_, jule::Ptr<_1bc302113_FnIns> _27624_k);
inline void _1c6a870db_clear(jule::Ptr<_1c6a85d98__Map> _self_);
inline jule::I32 _1c6a87240_len(jule::Ptr<_1c6a85d98__Map> _self_);
inline jule::I32 _1c6a87394_cap(_1c6a85d98__Map* _self_);
inline _1c11211d6_mapIterator _1c6a874e8_iterator(jule::Ptr<_1c6a85d98__Map> _self_);
inline void _1c69542e9_init(_1c6953c66_mapIterator* _self_);
inline __jule_tuple_pstr__jule_tuple_pbool _1c695444d_next(_1c6953c66_mapIterator* _self_);
inline void _1c1121769_init(_1c11211d6_mapIterator* _self_);
inline __jule_tuple_px_1bc302113_FnIns__jule_tuple_psuintptr _1c11218bd_next(_1c11211d6_mapIterator* _self_);
inline _1a95669ea_Builder static__1a9567369_New(jule::I32 _2316_cap);
inline jule::Exceptional<jule::I32> _1a95676aa_Write(_1a95669ea_Builder* _self_, jule::Slice<jule::U8> _3421_b);
inline jule::Exceptional<jule::I32> _1a95679eb_WriteStr(_1a95669ea_Builder* _self_, jule::Str _4124_s);
inline jule::VoidExceptional _1a9567ca4_WriteByte(_1a95669ea_Builder* _self_, jule::U8 _4825_b);
inline jule::Exceptional<jule::I32> _1a95680e5_WriteRune(_1a95669ea_Builder* _self_, jule::I32 _5525_r);
inline jule::Str _1a956837b_Str(_1a95669ea_Builder* _self_);
inline void _1a9568579_Clear(_1a95669ea_Builder* _self_);
inline jule::I32 _1a9568810_Len(_1a95669ea_Builder* _self_);
inline jule::Slice<jule::U8> _1a9568d2c_Buf(_1a95669ea_Builder* _self_);
inline void _1a95690d5_SetBuf(_1a95669ea_Builder* _self_, jule::Slice<jule::U8> _9533_buf);
inline jule::U8 _1abb38e77_index(_1abb389b0_lazyBuff* _self_, jule::I32 _5521_i);
inline void _1abb39230_append(_1abb389b0_lazyBuff* _self_, jule::U8 _6222_c);
inline jule::Str _1abb394b6_string(_1abb389b0_lazyBuff* _self_);
inline jule::Exceptional<jule::Ptr<_1a9c30b64_File>> static__1a9c29eb0_Open(jule::Str _1517_path, jule::I32 _1528_flag, jule::I32 _1541_mode);
inline jule::VoidExceptional static__1a9c2a1e1_Remove(jule::Str _2519_path);
inline jule::Exceptional<jule::I32> _1a9c2a675_Write(_1a9c30b64_File* _self_, jule::Slice<jule::U8> _3821_buf);
inline jule::Exceptional<jule::I32> _1a9c2a9b6_Read(_1a9c30b64_File* _self_, jule::Slice<jule::U8> _5724_buf);
inline jule::Ptr<_1a9c30b64_File> static__1a9c31648_New(jule::Uintptr _6723_handle);
inline jule::Exceptional<jule::Ptr<_1a9c30b64_File>> static__1a9c31912_Create(jule::Str _7819_path);
inline jule::Exceptional<jule::Slice<jule::U8>> static__1a9c31bcb_Read(jule::Str _8517_path);
inline jule::VoidExceptional static__1a9c32072_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm);
inline jule::VoidExceptional _1a9c3287a_Close(_1a9c30b64_File* _self_);
inline jule::Exceptional<_1a9cc3e6b_Stat> static__1a9c2d0a1_Of(jule::Str _1015_path);
inline jule::Bool _1a9cc4378_IsDir(_1a9cc3e6b_Stat* _self_);
inline jule::Bool _1a9cc460e_IsReg(_1a9cc3e6b_Stat* _self_);
inline jule::U32 _1a9cc4895_Size(_1a9cc3e6b_Stat* _self_);
inline jule::Bool _1ac5841a7_set(_1ac59254a_decimal* _self_, jule::Slice<jule::U8> _23819_s);
inline __jule_tuple_u64__jule_tuple_bool _1ac5844e8_floatBits(_1ac59254a_decimal* _self_, _1ac579004_floatInfo* _33226_flt);
inline void _1ac592935_assign(_1ac59254a_decimal* _self_, jule::U64 _15126_v);
inline void _1ac592bdd_shift(_1ac59254a_decimal* _self_, jule::I32 _17625_k);
inline void _1ac592e96_roundDown(_1ac59254a_decimal* _self_, jule::I32 _19625_nd);
inline void _1ac59324e_roundUp(_1ac59254a_decimal* _self_, jule::I32 _20523_nd);
inline void _1ac593507_round(_1ac59254a_decimal* _self_, jule::I32 _23221_nd);
inline jule::U64 _1ac59378d_roundedInteger(_1ac59254a_decimal* _self_);
inline void static__1abb492c8_Reset(void);
inline void static__1abb6ab57_Print(jule::Str _1918_escape, jule::Str _1931_text);
inline void static__1ac597d7a_LogFlat(_1a9575ca1_Log* _1421_l);
inline void static__1ac5980ab_LogError(_1a9575ca1_Log* _1922_l);
inline void static__1ac5982dc_Log(_1a9575ca1_Log* _6417_l);
inline void static__1ac59851d_PrintLogs(jule::Slice<_1a9575ca1_Log>* _7423_logs);
inline jule::U8 _1bc2473bb_Prec(_1bc247014_Token* _self_);
inline jule::Ptr<_1bc24cab9_Fileset> static__1bc24ce4e_New(jule::Str _2016_path);
inline void _1bc24d4b0_FillMut(_1bc24cab9_Fileset* _self_, jule::Slice<jule::U8> _3634_data);
inline jule::Str _1bc24d746_Dir(_1bc24cab9_Fileset* _self_);
inline jule::Str _1bc24d9cc_Name(_1bc24cab9_Fileset* _self_);
inline jule::Str _1bc24e0a4_GetRow(_1bc24cab9_Fileset* _self_, jule::I32 _5718_row);
inline void _1bc256441_pushErr(_1bc255d7a_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args);
inline void _1bc2569a2_lex(_1bc255d7a_lex* _self_);
inline jule::Str _1bc256ce3_id(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _47219_ln);
inline jule::Slice<jule::U8> _1bc257079_resume(_1bc255d7a_lex* _self_);
inline void _1bc257332_lexLineComment(_1bc255d7a_lex* _self_, jule::Ptr<_1bc247014_Token>* _52235_token);
inline void _1bc2575da_lexRangeComment(_1bc255d7a_lex* _self_, jule::Ptr<_1bc247014_Token>* _53736_token);
inline jule::Str _1bc25792b_num(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _56520_txt);
inline jule::Str _1bc257c6c_escapeSeq(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _58726_txt);
inline jule::Str _1bc258168_getRune(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw);
inline jule::Str _1bc2584a9_lexRune(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _62624_txt);
inline jule::Str _1bc258740_lexStr(_1bc255d7a_lex* _self_);
inline void _1bc258bc4_newLine(_1bc255d7a_lex* _self_);
inline jule::Bool _1bc259235_isOp(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1bc247014_Token>* _70858_t);
inline jule::Bool _1bc259631_lexBasicOps(_1bc255d7a_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1bc247014_Token>* _71845_tok);
inline jule::Bool _1bc259a2c_lexId(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1bc247014_Token>* _72740_t);
inline jule::Bool _1bc259e28_lexNum(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1bc247014_Token>* _73741_t);
inline jule::Ptr<_1bc247014_Token> _1bc25a1ae_token(_1bc255d7a_lex* _self_);
inline jule::Bool _1bc25e7ce_IsUnsafe(_1bc25e438_PtrTypeDecl* _self_);
inline jule::Bool _1bc260071_AutoSized(_1bc25ebca_ArrTypeDecl* _self_);
inline jule::Bool _1bc265d24_Unhandled(_1bc26596c_FnCallExpr* _self_);
inline jule::Bool _1bc2660aa_Ignored(_1bc26596c_FnCallExpr* _self_);
inline jule::Bool _1bc26d601_IsSelf(_1bc26d249_ParamDecl* _self_);
inline jule::Bool _1bc26ea42_IsAnon(_1bc26e69b_FnDecl* _self_);
inline jule::Bool _1bc271846_IsInf(_1bc2714a0_Iter* _self_);
inline jule::Bool _1bc272171_IsWhileNext(_1bc271cca_WhileKind* _self_);
inline jule::Ptr<_1bac25065_Const> static__1bac25494_NewI64(jule::I64 _1419_x);
inline jule::Ptr<_1bac25065_Const> static__1bac2575d_NewU64(jule::U64 _1719_x);
inline jule::Ptr<_1bac25065_Const> static__1bac25a27_NewBool(jule::Bool _2020_x);
inline jule::Ptr<_1bac25065_Const> static__1bac25ce1_NewStr(jule::Str _2319_x);
inline jule::Ptr<_1bac25065_Const> static__1bac260aa_NewF64(jule::F64 _2619_x);
inline jule::Ptr<_1bac25065_Const> static__1bac262b9_NewNil(void);
inline jule::I64 _1bac26929_ReadI64(_1bac25065_Const* _self_);
inline jule::U64 _1bac26bb0_ReadU64(_1bac25065_Const* _self_);
inline jule::Bool _1bac26e46_ReadBool(_1bac25065_Const* _self_);
inline jule::Str _1bac271cc_ReadStr(_1bac25065_Const* _self_);
inline jule::F64 _1bac27463_ReadF64(_1bac25065_Const* _self_);
inline jule::I64 _1bac276e9_AsI64(_1bac25065_Const* _self_);
inline jule::U64 _1bac27980_AsU64(_1bac25065_Const* _self_);
inline jule::F64 _1bac27c16_AsF64(_1bac25065_Const* _self_);
inline void _1bac27ebe_SetI64(_1bac25065_Const* _self_, jule::I64 _13622_x);
inline void _1bac28277_SetU64(_1bac25065_Const* _self_, jule::U64 _13922_x);
inline void _1bac28530_SetBool(_1bac25065_Const* _self_, jule::Bool _14223_x);
inline void _1bac287d8_SetStr(_1bac25065_Const* _self_, jule::Str _14522_x);
inline void _1bac28a91_SetF64(_1bac25065_Const* _self_, jule::F64 _14822_x);
inline jule::Bool _1bac29025_IsI64(_1bac25065_Const* _self_);
inline jule::Bool _1bac292ab_IsU64(_1bac25065_Const* _self_);
inline jule::Bool _1bac29542_IsBool(_1bac25065_Const* _self_);
inline jule::Bool _1bac297c8_IsStr(_1bac25065_Const* _self_);
inline jule::Bool _1bac29a5e_IsF64(_1bac25065_Const* _self_);
inline jule::Bool _1bac29ce5_IsNil(_1bac25065_Const* _self_);
inline jule::Bool _1bac2a477_And(_1bac25065_Const* _self_, _1bac25065_Const _23615_x);
inline jule::Bool _1bac2a7b8_Or(_1bac25065_Const* _self_, _1bac25065_Const _24714_x);
inline jule::Bool _1bc2dc0cb_Add(_1bac25065_Const* _self_, _1bac25065_Const _37519_x);
inline jule::Bool _1bc2dc41c_Sub(_1bac25065_Const* _self_, _1bac25065_Const _40419_x);
inline jule::Bool _1bc2dc75d_Mul(_1bac25065_Const* _self_, _1bac25065_Const _42819_x);
inline jule::Bool _1bc2dca9e_Div(_1bac25065_Const* _self_, _1bac25065_Const _45619_x);
inline jule::Bool _1bc2dcde0_Mod(_1bac25065_Const* _self_, _1bac25065_Const _48519_x);
inline jule::Bool _1bc2dd231_BitwiseAnd(_1bac25065_Const* _self_, _1bac25065_Const _50726_x);
inline jule::Bool _1bc2dd572_BitwiseOr(_1bac25065_Const* _self_, _1bac25065_Const _52125_x);
inline jule::Bool _1bc2dd8b3_Xor(_1bac25065_Const* _self_, _1bac25065_Const _53519_x);
inline jule::Bool _1bc2ddc04_Lshift(_1bac25065_Const* _self_, _1bac25065_Const _54922_x);
inline jule::Bool _1bc2de045_Rshift(_1bac25065_Const* _self_, _1bac25065_Const _56922_x);
inline jule::Ptr<_1bc280525_FieldIns> _1bc27a72e_instance(jule::Ptr<_1bc27a377_Field> _self_);
inline jule::Ptr<_1bc2810c5_StructIns> _1bc27d710_instance(jule::Ptr<_1bc27d26a_Struct> _self_);
inline jule::Ptr<_1bc2810c5_StructIns> _1bc27da1d_appendInstance(_1bc27d26a_Struct* _self_, jule::Ptr<_1bc2810c5_StructIns>* _13535_ins);
inline jule::Ptr<_1bc2ee055_Fn> _1bc27de19_FindMethod(_1bc27d26a_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically);
inline jule::Ptr<_1bc42dc12_Var> _1bc27e25a_FindStatic(_1bc27d26a_Struct* _self_, jule::Str _16426_ident);
inline jule::Ptr<_1bc27a377_Field> _1bc27e59b_FindField(_1bc27d26a_Struct* _self_, jule::Str _17525_ident);
inline jule::Bool _1bc27e8dc_IsImplements(_1bc27d26a_Struct* _self_, jule::Ptr<_1bc309769_Trait> _18524_t);
inline jule::Bool _1bc27ec2d_IsUses(_1bc27d26a_Struct* _self_, jule::Ptr<_1bc27d26a_Struct> _19518_s);
inline jule::Str _1bc28147c_Str(_1bc2810c5_StructIns* _self_);
inline jule::Bool _1bc2817bd_Equal(jule::Ptr<_1bc2810c5_StructIns> _self_, jule::Ptr<_1bc4b64e7_Type> _25718_other);
inline jule::Bool _1bc281c74_Same(_1bc2810c5_StructIns* _self_, jule::Ptr<_1bc2810c5_StructIns> _28516_s);
inline jule::Ptr<_1bc2ee055_Fn> _1bc282170_FindMethod(_1bc2810c5_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically);
inline jule::Ptr<_1bc280525_FieldIns> _1bc2824b1_FindField(_1bc2810c5_StructIns* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1bc42dc12_Var> _1bc282802_FindStatic(_1bc2810c5_StructIns* _self_, jule::Str _32226_ident);
inline jule::Ptr<_1bc300ead_ParamIns> _1bc2ec949_instance(jule::Ptr<_1bc2ec581_Param> _self_);
inline jule::Bool _1bc2ecbd0_IsSelf(_1bc2ec581_Param* _self_);
inline jule::Bool _1bc2ece66_IsRef(_1bc2ec581_Param* _self_);
inline jule::Bool _1bc2ee50b_IsVoid(_1bc2ee055_Fn* _self_);
inline jule::Bool _1bc2ee792_IsMethod(_1bc2ee055_Fn* _self_);
inline jule::Bool _1bc2eea28_IsEntryPoint(_1bc2ee055_Fn* _self_);
inline jule::Bool _1bc2eecae_IsInit(_1bc2ee055_Fn* _self_);
inline jule::Bool _1bc300045_IsAnon(_1bc2ee055_Fn* _self_);
inline jule::Bool _1bc3002cb_AnyVar(_1bc2ee055_Fn* _self_);
inline jule::Ptr<_1bc302113_FnIns> _1bc300562_instanceForce(jule::Ptr<_1bc2ee055_Fn> _self_);
inline jule::Ptr<_1bc302113_FnIns> _1bc3007e8_instance(jule::Ptr<_1bc2ee055_Fn> _self_);
inline jule::Ptr<_1bc302113_FnIns> _1bc300b06_appendInstance(_1bc2ee055_Fn* _self_, jule::Ptr<_1bc302113_FnIns>* _13835_ins);
inline jule::Str _1bc301354_Str(_1bc300ead_ParamIns* _self_);
inline jule::Str _1bc302487_Str(_1bc302113_FnIns* _self_);
inline jule::Bool _1bc3027c8_Equal(jule::Ptr<_1bc302113_FnIns> _self_, jule::Ptr<_1bc4b64e7_Type> _22918_other);
inline jule::Bool _1bc302c6d_EqualFn(jule::Ptr<_1bc302113_FnIns> _self_, jule::Ptr<_1bc302113_FnIns>* _24021_f);
inline jule::Bool _1bc3030ae_equalTrait(jule::Ptr<_1bc302113_FnIns> _self_, jule::Ptr<_1bc302113_FnIns>* _29924_other);
inline jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _1bc303345_Types(_1bc302113_FnIns* _self_);
inline jule::Bool _1bc3035cb_IsBuiltin(_1bc302113_FnIns* _self_);
inline jule::Bool _1bc303862_IsAnon(_1bc302113_FnIns* _self_);
inline jule::Bool _1bc303ba3_Same(_1bc302113_FnIns* _self_, jule::Ptr<_1bc302113_FnIns> _34216_f);
inline jule::Str _1bc303ee4_GetKindStr(_1bc302113_FnIns* _self_, jule::Bool _35922_ident);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc305875_SelectPackage(_1bc305358_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _2729_selector);
inline jule::Ptr<_1bc42dc12_Var> _1bc305c71_FindVar(_1bc305358_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc30616c_FindTypeAlias(_1bc305358_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded);
inline jule::Ptr<_1bc27d26a_Struct> _1bc306568_FindStruct(_1bc305358_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded);
inline jule::Ptr<_1bc2ee055_Fn> _1bc306964_FindFn(_1bc305358_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded);
inline jule::Ptr<_1bc309769_Trait> _1bc306ca5_FindTrait(_1bc305358_SymTab* _self_, jule::Str _7525_ident);
inline jule::Ptr<_1bc30be20_Enum> _1bc3070e6_FindEnum(_1bc305358_SymTab* _self_, jule::Str _8624_ident);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc307437_FindTypeEnum(_1bc305358_SymTab* _self_, jule::Str _9728_ident);
inline jule::I32 _1bc3078ee_findVar1(_1bc305358_SymTab* _self_, jule::Ptr<_1bc42dc12_Var>* _10825_v);
inline jule::Ptr<_1bc42dc12_Var> _1bc307da5_findVar(_1bc305358_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc30835b_findTypeAlias(_1bc305358_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse);
inline jule::Any _1bc308757_defByIdent(_1bc305358_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded);
inline jule::Bool _1bc308c0d_isDuplicatedIdent(_1bc305358_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded);
inline jule::Str _1bc309b65_Str(_1bc309769_Trait* _self_);
inline jule::Bool _1bc309ea6_Equal(jule::Ptr<_1bc309769_Trait> _self_, jule::Ptr<_1bc4b64e7_Type> _2518_other);
inline jule::Ptr<_1bc2ee055_Fn> _1bc30a44b_FindMethod(_1bc309769_Trait* _self_, jule::Str _3426_ident);
inline jule::Ptr<_1bc2ee055_Fn> _1bc30aacd_findMethodInherit(_1bc309769_Trait* _self_, jule::Str* _5534_ident);
inline jule::Bool _1bc30b78d_AutoExpr(_1bc30b3b4_EnumItem* _self_);
inline jule::Str _1bc30c2c7_Str(_1bc30be20_Enum* _self_);
inline jule::Bool _1bc30c618_Equal(jule::Ptr<_1bc30be20_Enum> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other);
inline jule::Ptr<_1bc30b3b4_EnumItem> _1bc30ca47_FindItem(_1bc30be20_Enum* _self_, jule::Str _4724_ident);
inline jule::Str _1bc30d99e_Str(_1bc30d62a_TypeEnum* _self_);
inline jule::Bool _1bc30dce0_Equal(jule::Ptr<_1bc30d62a_TypeEnum> _self_, jule::Ptr<_1bc4b64e7_Type> _8018_other);
inline jule::Ptr<_1bc30d053_TypeEnumItem> _1bc30e21e_FindItem(_1bc30d62a_TypeEnum* _self_, jule::Str _8924_ident);
inline jule::Str _1bc37e833_Str(_1bc37e437_comptimeRange* _self_);
inline jule::Bool _1bc37eb74_Equal(jule::Ptr<_1bc37e437_comptimeRange> _self_, jule::Ptr<_1bc4b64e7_Type> _2718_other);
inline jule::Str _1bc38034a_Str(_1bc37ee93_comptimeStructField* _self_);
inline jule::Bool _1bc38068b_Equal(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Ptr<_1bc4b64e7_Type> _3718_other);
inline jule::Ptr<_1bc48354c_Data> _1bc380b97__Decl(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Ptr<_1bc48551b_eval>* _4127_e, jule::Ptr<_1bc26596c_FnCallExpr>* _4142_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc381093__Type(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Ptr<_1bc48551b_eval>* _5327_e, jule::Ptr<_1bc26596c_FnCallExpr>* _5342_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3813d4_subIdent(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Str* _6126_ident);
inline jule::Str _1bc381aee_Str(_1bc381736_comptimeStructFields* _self_);
inline jule::Bool _1bc381e40_Equal(jule::Ptr<_1bc381736_comptimeStructFields> _self_, jule::Ptr<_1bc4b64e7_Type> _9018_other);
inline void _1bc3823c4_ready(_1bc381736_comptimeStructFields* _self_, jule::Ptr<_1bc42dc12_Var>* _9426_keyA, jule::Ptr<_1bc42dc12_Var>* _9443_keyB);
inline void _1bc382737_index(_1bc381736_comptimeStructFields* _self_, jule::Ptr<_1bc48354c_Data>* _11526_d, jule::I32 _11536_i);
inline void _1bc382b55_step(_1bc381736_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1bc42dc12_Var>* _12633_keyA, jule::Ptr<_1bc42dc12_Var>* _12650_keyB);
inline jule::I32 _1bc382ddb_len(_1bc381736_comptimeStructFields* _self_);
inline jule::Str _1bc38356d_Str(_1bc3831b6_comptimeStatic* _self_);
inline jule::Bool _1bc3838ae_Equal(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Ptr<_1bc4b64e7_Type> _15018_other);
inline jule::Ptr<_1bc48354c_Data> _1bc383dba__Decl(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Ptr<_1bc48551b_eval>* _15427_e, jule::Ptr<_1bc26596c_FnCallExpr>* _15442_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3842b6__Type(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Ptr<_1bc48551b_eval>* _16627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _16642_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc384607_subIdent(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Str* _17426_ident);
inline jule::Str _1bc384d22_Str(_1bc38496a_comptimeStatics* _self_);
inline jule::Bool _1bc385163_Equal(jule::Ptr<_1bc38496a_comptimeStatics> _self_, jule::Ptr<_1bc4b64e7_Type> _20318_other);
inline void _1bc3855e7_ready(_1bc38496a_comptimeStatics* _self_, jule::Ptr<_1bc42dc12_Var>* _20726_keyA, jule::Ptr<_1bc42dc12_Var>* _20743_keyB);
inline void _1bc38595a_index(_1bc38496a_comptimeStatics* _self_, jule::Ptr<_1bc48354c_Data>* _22826_d, jule::I32 _22836_i);
inline void _1bc385d78_step(_1bc38496a_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1bc42dc12_Var>* _23933_keyA, jule::Ptr<_1bc42dc12_Var>* _23950_keyB);
inline jule::I32 _1bc38610e_len(_1bc38496a_comptimeStatics* _self_);
inline jule::Str _1bc386791_Str(_1bc3863d9_comptimeEnumField* _self_);
inline jule::Bool _1bc386ad2_Equal(jule::Ptr<_1bc3863d9_comptimeEnumField> _self_, jule::Ptr<_1bc4b64e7_Type> _26318_other);
inline jule::Ptr<_1bc48354c_Data> _1bc3870cc__Decl(jule::Ptr<_1bc3863d9_comptimeEnumField> _self_, jule::Ptr<_1bc48551b_eval>* _26727_e, jule::Ptr<_1bc26596c_FnCallExpr>* _26742_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc38741d_subIdent(jule::Ptr<_1bc3863d9_comptimeEnumField> _self_, jule::Str* _27926_ident);
inline jule::Str _1bc387bb0_Str(_1bc3876e8_comptimeEnumFields* _self_);
inline jule::Bool _1bc388001_Equal(jule::Ptr<_1bc3876e8_comptimeEnumFields> _self_, jule::Ptr<_1bc4b64e7_Type> _30118_other);
inline void _1bc38840d_ready(_1bc3876e8_comptimeEnumFields* _self_, jule::Ptr<_1bc42dc12_Var>* _30526_keyA, jule::Ptr<_1bc42dc12_Var>* _30543_keyB);
inline void _1bc388771_index(_1bc3876e8_comptimeEnumFields* _self_, jule::Ptr<_1bc48354c_Data>* _32626_d, jule::I32 _32636_i);
inline void _1bc388b8e_step(_1bc3876e8_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1bc42dc12_Var>* _33733_keyA, jule::Ptr<_1bc42dc12_Var>* _33750_keyB);
inline jule::I32 _1bc388e25_len(_1bc3876e8_comptimeEnumFields* _self_);
inline jule::Str _1bc3895a7_Str(_1bc389200_comptimeParam* _self_);
inline jule::Bool _1bc3898e8_Equal(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc4b64e7_Type> _36118_other);
inline jule::Ptr<_1bc48354c_Data> _1bc389e15__Decl(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc48551b_eval>* _36527_e, jule::Ptr<_1bc26596c_FnCallExpr>* _36542_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc38a311__Type(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc48551b_eval>* _37727_e, jule::Ptr<_1bc26596c_FnCallExpr>* _37742_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc38a70c__Recv(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc48551b_eval>* _38527_e, jule::Ptr<_1bc26596c_FnCallExpr>* _38542_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc38aa4d_subIdent(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Str* _39826_ident);
inline jule::Str _1bc38b301_Str(_1bc38b059_comptimeParams* _self_);
inline jule::Bool _1bc38b642_Equal(jule::Ptr<_1bc38b059_comptimeParams> _self_, jule::Ptr<_1bc4b64e7_Type> _43418_other);
inline void _1bc38bac6_ready(_1bc38b059_comptimeParams* _self_, jule::Ptr<_1bc42dc12_Var>* _43826_keyA, jule::Ptr<_1bc42dc12_Var>* _43843_keyB);
inline void _1bc38be39_index(_1bc38b059_comptimeParams* _self_, jule::Ptr<_1bc48354c_Data>* _45926_d, jule::I32 _45936_i);
inline void _1bc38c357_step(_1bc38b059_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1bc42dc12_Var>* _47033_keyA, jule::Ptr<_1bc42dc12_Var>* _47050_keyB);
inline jule::I32 _1bc38c5dd_len(_1bc38b059_comptimeParams* _self_);
inline jule::Str _1bc38cc70_Str(_1bc38c8b8_comptimeTypeInfos* _self_);
inline jule::Bool _1bc38d0b1_Equal(jule::Ptr<_1bc38c8b8_comptimeTypeInfos> _self_, jule::Ptr<_1bc4b64e7_Type> _49418_other);
inline void _1bc38d545_ready(_1bc38c8b8_comptimeTypeInfos* _self_, jule::Ptr<_1bc42dc12_Var>* _49826_keyA, jule::Ptr<_1bc42dc12_Var>* _49843_keyB);
inline void _1bc38d8a8_index(_1bc38c8b8_comptimeTypeInfos* _self_, jule::Ptr<_1bc48354c_Data>* _51926_d, jule::I32 _51936_i);
inline void _1bc38dcc6_step(_1bc38c8b8_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1bc42dc12_Var>* _52833_keyA, jule::Ptr<_1bc42dc12_Var>* _52850_keyB);
inline jule::I32 _1bc38e05c_len(_1bc38c8b8_comptimeTypeInfos* _self_);
inline jule::Str _1bc38e6de_Str(_1bc38e337_comptimeTypeInfo* _self_);
inline jule::Bool _1bc38ea30_Equal(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc4b64e7_Type> _55218_other);
inline jule::Ptr<_1bc48354c_Data> _1bc39016d__Decl(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _55627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _55642_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc390569__Str(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _59322_e, jule::Ptr<_1bc26596c_FnCallExpr>* _59337_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc390965__Kind(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _60627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _60642_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc390d61__Bits(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _68627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _68642_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39125c__Elem(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _71027_e, jule::Ptr<_1bc26596c_FnCallExpr>* _71042_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc391658__Size(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _74327_e, jule::Ptr<_1bc26596c_FnCallExpr>* _74342_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc391a54__Key(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _76226_e, jule::Ptr<_1bc26596c_FnCallExpr>* _76241_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc391e50__Value(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _77528_e, jule::Ptr<_1bc26596c_FnCallExpr>* _77543_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39234b__Fields(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _78829_e, jule::Ptr<_1bc26596c_FnCallExpr>* _78844_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc392747__Statics(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _81730_e, jule::Ptr<_1bc26596c_FnCallExpr>* _81745_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc392b43__Binded(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _83629_e, jule::Ptr<_1bc26596c_FnCallExpr>* _83644_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39303e__Ordered(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _84926_e, jule::Ptr<_1bc26596c_FnCallExpr>* _84941_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39343a__Comparable(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _86229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _86244_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc393836__Mutable(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _87526_e, jule::Ptr<_1bc26596c_FnCallExpr>* _87541_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc393c32__Types(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _88828_e, jule::Ptr<_1bc26596c_FnCallExpr>* _88843_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39412d__CanNil(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _91129_e, jule::Ptr<_1bc26596c_FnCallExpr>* _91144_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc394529__GC(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _92425_e, jule::Ptr<_1bc26596c_FnCallExpr>* _92440_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc394925__Result(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _93729_e, jule::Ptr<_1bc26596c_FnCallExpr>* _93744_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc394d21__Params(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _95329_e, jule::Ptr<_1bc26596c_FnCallExpr>* _95344_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc395162_subIdent(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Str* _97026_ident);
inline jule::Str _1bc3957e4_Str(_1bc39543c_comptimeValue* _self_);
inline jule::Bool _1bc395b35_Equal(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc4b64e7_Type> _111818_other);
inline jule::Ptr<_1bc48354c_Data> _1bc396196__Unwrap(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _112229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _112244_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc396592__Type(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _113027_e, jule::Ptr<_1bc26596c_FnCallExpr>* _113042_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39698d__Lvalue(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _113829_e, jule::Ptr<_1bc26596c_FnCallExpr>* _113844_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc396d89__Mutable(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _115130_e, jule::Ptr<_1bc26596c_FnCallExpr>* _115145_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc397285__Const(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _116428_e, jule::Ptr<_1bc26596c_FnCallExpr>* _116443_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc397681__Field(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _117728_e, jule::Ptr<_1bc26596c_FnCallExpr>* _117743_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc397a7c__Method(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _121229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _121244_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc397dbd_subIdent(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Str* _125826_ident);
inline jule::Str _1bc398550_Str(_1bc398198_comptimeFiles* _self_);
inline jule::Bool _1bc398891_Equal(jule::Ptr<_1bc398198_comptimeFiles> _self_, jule::Ptr<_1bc4b64e7_Type> _132218_other);
inline void _1bc398d25_ready(_1bc398198_comptimeFiles* _self_, jule::Ptr<_1bc42dc12_Var>* _132626_keyA, jule::Ptr<_1bc42dc12_Var>* _132643_keyB);
inline void _1bc399188_index(_1bc398198_comptimeFiles* _self_, jule::Ptr<_1bc48354c_Data>* _134726_d, jule::I32 _134736_i);
inline void _1bc3995a6_step(_1bc398198_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_1bc42dc12_Var>* _135833_keyA, jule::Ptr<_1bc42dc12_Var>* _135850_keyB);
inline jule::I32 _1bc39983c_len(_1bc398198_comptimeFiles* _self_);
inline jule::Str _1bc399ebe_Str(_1bc399b17_comptimeFile* _self_);
inline jule::Bool _1bc39a310_Equal(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc4b64e7_Type> _138218_other);
inline jule::Ptr<_1bc48354c_Data> _1bc39a82c__Path(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc48551b_eval>* _138627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _138642_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39ac28__Name(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc48551b_eval>* _139927_e, jule::Ptr<_1bc26596c_FnCallExpr>* _139942_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39b124__Dir(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc48551b_eval>* _141226_e, jule::Ptr<_1bc26596c_FnCallExpr>* _141241_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39b465_subIdent(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Str* _142526_ident);
inline jule::Str _1bc39bd28_Str(_1bc39b740_comptimeDecls* _self_);
inline jule::Bool _1bc39c169_Equal(jule::Ptr<_1bc39b740_comptimeDecls> _self_, jule::Ptr<_1bc4b64e7_Type> _146118_other);
inline void _1bc39c4dd_ready(_1bc39b740_comptimeDecls* _self_, jule::Ptr<_1bc42dc12_Var>* _146526_keyA, jule::Ptr<_1bc42dc12_Var>* _146543_keyB);
inline void _1bc39c851_index(_1bc39b740_comptimeDecls* _self_, jule::Ptr<_1bc48354c_Data>* _148626_d, jule::I32 _148636_i);
inline void _1bc39cc6e_step(_1bc39b740_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_1bc42dc12_Var>* _149533_keyA, jule::Ptr<_1bc42dc12_Var>* _149550_keyB);
inline jule::I32 _1bc39d005_len(_1bc39b740_comptimeDecls* _self_);
inline jule::Str _1bc39ddd5_Str(_1bc39da2d_comptimeDecl* _self_);
inline jule::Bool _1bc39e226_Equal(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc4b64e7_Type> _153418_other);
inline jule::Str _1bc39e677_declAsStr(_1bc39da2d_comptimeDecl* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc39ea73__Name(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _156527_e, jule::Ptr<_1bc26596c_FnCallExpr>* _156542_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc39ee6e__Public(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _160329_e, jule::Ptr<_1bc26596c_FnCallExpr>* _160344_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a036a__Binded(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _164129_e, jule::Ptr<_1bc26596c_FnCallExpr>* _164144_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a0766__Exceptional(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _167534_e, jule::Ptr<_1bc26596c_FnCallExpr>* _167549_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a0b62__Mutable(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _169630_e, jule::Ptr<_1bc26596c_FnCallExpr>* _169645_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a105d__Variadic(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _172931_e, jule::Ptr<_1bc26596c_FnCallExpr>* _172946_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a1459__Reference(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _176032_e, jule::Ptr<_1bc26596c_FnCallExpr>* _176047_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a1855__Params(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _179229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _179244_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a1c51__Fields(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _182729_e, jule::Ptr<_1bc26596c_FnCallExpr>* _182744_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a214c__Statics(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _186830_e, jule::Ptr<_1bc26596c_FnCallExpr>* _186845_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a2548__Methods(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _190430_e, jule::Ptr<_1bc26596c_FnCallExpr>* _190445_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc3a2889_subIdent(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Str* _194526_ident);
inline jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*> _1bc3a5848_readyFn(jule::Ptr<_1bc3a5419_constraintChecker> _self_);
inline jule::Bool _1bc3a5ace_readyFi(jule::Ptr<_1bc3a5419_constraintChecker> _self_);
inline jule::Bool _1bc3a5d65_readySi(jule::Ptr<_1bc3a5419_constraintChecker> _self_);
inline jule::Bool _1bc3a60eb_ready(jule::Ptr<_1bc3a5419_constraintChecker> _self_);
inline jule::Bool _1bc3a6382_check(jule::Ptr<_1bc3a5419_constraintChecker> _self_);
inline jule::Bool _1bc3a7b14_IsTraitImpl(_1bc3a7718_Impl* _self_);
inline jule::Bool _1bc3a7d9a_IsStructImpl(_1bc3a7718_Impl* _self_);
inline jule::Bool _1bc3ad5a9_IsWhileNext(_1bc3ad213_WhileIter* _self_);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3b4967_SelectPackage(_1bc3b448e_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _35429_selector);
inline jule::Ptr<_1bc42dc12_Var> _1bc3b4d63_FindVar(_1bc3b448e_scopeChecker* _self_, jule::Str _36523_ident, jule::Bool _36535_binded);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3b525e_FindTypeAlias(_1bc3b448e_scopeChecker* _self_, jule::Str _38229_ident, jule::Bool _38241_binded);
inline jule::Ptr<_1bc27d26a_Struct> _1bc3b565a_FindStruct(_1bc3b448e_scopeChecker* _self_, jule::Str _40726_ident, jule::Bool _40738_binded);
inline jule::Ptr<_1bc2ee055_Fn> _1bc3b5a56_FindFn(_1bc3b448e_scopeChecker* _self_, jule::Str _41622_ident, jule::Bool _41634_binded);
inline jule::Ptr<_1bc309769_Trait> _1bc3b5d97_FindTrait(_1bc3b448e_scopeChecker* _self_, jule::Str _42525_ident);
inline jule::Ptr<_1bc30be20_Enum> _1bc3b61d8_FindEnum(_1bc3b448e_scopeChecker* _self_, jule::Str _43424_ident);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3b6529_FindTypeEnum(_1bc3b448e_scopeChecker* _self_, jule::Str _44328_ident);
inline jule::Bool _1bc3b687b_isUnsafe(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline jule::Bool _1bc3b6b12_isRoot(_1bc3b448e_scopeChecker* _self_);
inline void _1bc3b6d10_stop(_1bc3b448e_scopeChecker* _self_);
inline jule::Bool _1bc3b7096_stopped(_1bc3b448e_scopeChecker* _self_);
inline jule::Bool _1bc3b732c_isDeferred(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline void _1bc3b75d5_pushCaptured(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc42dc12_Var>* _50534_v);
inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3b786b_getRoot(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3b7b02_getHardRoot(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline jule::Ptr<_1bc3cab26_ReferenceStack> _1bc3b7d88_getOwnerRefers(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline jule::Ptr<_1bc42dc12_Var> _1bc3b81c9_findVar(_1bc3b448e_scopeChecker* _self_, jule::Str _55223_ident);
inline jule::Ptr<_1bc3ae874_Label> _1bc3b851a_findLabel(_1bc3b448e_scopeChecker* _self_, jule::Str* _57326_ident);
inline jule::Ptr<_1bc3b30c5_scopeLabel> _1bc3b885b_findLabelScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Str* _58932_ident);
inline jule::Ptr<_1bc3b30c5_scopeLabel> _1bc3b8b9c_findLabelAll(_1bc3b448e_scopeChecker* _self_, jule::Str* _60029_ident);
inline jule::Bool _1bc3b9098_isDuplicatedIdent(_1bc3b448e_scopeChecker* _self_, jule::Uintptr _61233_itself, jule::Str* _61251_ident);
inline void _1bc3b9351_checkVarDecl(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc270856_VarDecl> _63233_decl);
inline void _1bc3b9609_checkTypeAlias(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _66336_ta);
inline void _1bc3b98b2_checkTypeAliasDecl(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc274508_TypeAliasDecl> _67939_decl);
inline jule::Ptr<_1bc3abd27_Scope> _1bc3b9b48_getChild(_1bc3b448e_scopeChecker* _self_);
inline void _1bc3ba066_checkChildSsc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _69035_tree, jule::Ptr<_1bc3abd27_Scope>* _69063_s, jule::Ptr<_1bc3b448e_scopeChecker>* _69079_ssc);
inline jule::Ptr<_1bc3abd27_Scope> _1bc3ba462_checkChildSc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _69734_tree, jule::Ptr<_1bc3b448e_scopeChecker>* _69762_ssc);
inline jule::Ptr<_1bc3abd27_Scope> _1bc3ba7a3_checkChild(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _70332_tree);
inline void _1bc3baa5b_checkAnonScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree> _70835_tree);
inline void _1bc3badbe_processErrorCall(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel>* _71338_m, jule::Ptr<_1bc247014_Token> _71369_err);
inline void _1bc3bb177_checkExpr(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc261c43_Expr> _72630_expr);
inline jule::Ptr<_1bc3ac245_If> _1bc3bb4b8_checkIf(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc27343b_If> _75628_i);
inline jule::Ptr<_1bc3ac542_Else> _1bc3bb809_checkElse(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc273815_Else> _77630_e);
inline void _1bc3bbab2_checkConditional(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc273cbb_Conditional> _78237_conditional);
inline void _1bc3bc08a_checkIterScopeSsc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _79834_it, jule::Ptr<_1bc26ca0c_ScopeTree> _79851_tree, jule::Ptr<_1bc3abd27_Scope>* _79879_s, jule::Ptr<_1bc3b448e_scopeChecker> _79894_ssc);
inline jule::Ptr<_1bc3abd27_Scope> _1bc3bc541_checkIterScopeSc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _80333_it, jule::Ptr<_1bc26ca0c_ScopeTree> _80350_tree, jule::Ptr<_1bc3b448e_scopeChecker> _80377_ssc);
inline jule::Ptr<_1bc3abd27_Scope> _1bc3bc93c_checkIterScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _80931_it, jule::Ptr<_1bc26ca0c_ScopeTree>* _80949_tree);
inline void _1bc3bcbe5_checkInfIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _81434_it);
inline void _1bc3bce9d_checkWhileIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _82036_it);
inline void _1bc3bd3bb_checkComptimeRangeIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _87044_it, jule::Ptr<_1bc3adb5e_RangeIter>* _87065_kind, jule::Ptr<_1bc48354c_Data>* _87088_d);
inline void _1bc3bd674_checkRangeIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _92736_it);
inline void _1bc3bd92c_checkIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter> _99430_it);
inline jule::Bool _1bc3bdc6d_checkValidContLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _101836_it);
inline jule::Bool _1bc3be0ae_checkValidBreakLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _103437_ptr);
inline jule::Ptr<_1bc3adee4_ContSt> _1bc3be400_checkContValidScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272e85_ContSt> _105736_c);
inline void _1bc3be6a8_checkCont(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272e85_ContSt> _108126_c);
inline void _1bc3be961_checkLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc269ee3_LabelSt> _112831_l);
inline void _1bc3bec19_pushGoto(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26a3bc_GotoSt> _114729_gt);
inline void _1bc3beec2_checkPostfix(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt> _115833_a);
inline jule::Bool _1bc3c0313_isNewAssignIdent(_1bc3b448e_scopeChecker* _self_, jule::Str _119432_ident);
inline void _1bc3c05bb_removeInteriorMutRisk(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc48354c_Data>* _120743_d);
inline jule::Bool _1bc3c0a72_checkStructureAssignOp(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2810c5_StructIns>* _122144_s, jule::Ptr<_1bc26b3ac_AssignSt>* _122164_a, jule::Ptr<_1bc48354c_Data>* _122188_r);
inline void _1bc3c0d2a_checkSingleAssign(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt>* _126039_a);
inline void _1bc3c1468_processEndPartOfMultiAssign(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _134549_st, jule::Ptr<_1bc26b3ac_AssignSt>* _134572_a, jule::Ptr<_1bc26ad29_AssignLeft>* _13468_lexpr, jule::Ptr<_1bc48354c_Data>* _134638_l, jule::Ptr<_1bc48354c_Data>* _134653_r, jule::Bool _134663_strict);
inline void _1bc3c1721_checkMultiAssign(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt>* _142138_a);
inline void _1bc3c19c9_checkAssignSt(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt> _149234_a);
inline jule::Ptr<_1bc3abd27_Scope> _1bc3c1dc5_checkCaseScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b2080_Case>* _150332_c, jule::Ptr<_1bc26ca0c_ScopeTree>* _150347_tree);
inline jule::Ptr<_1bc3b2080_Case> _1bc3c2436_checkCase(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b1557_Match> _150930_m, jule::I32 _150941_i, jule::Ptr<_1bc2749ae_Case> _150953_c, jule::Ptr<_1bc48354c_Data> _150972_expr);
inline void _1bc3c2854_checkCases(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase>* _158632_m, jule::Ptr<_1bc3b1557_Match> _158656_rm, jule::Ptr<_1bc48354c_Data> _158672_expr);
inline jule::Ptr<_1bc3b2080_Case> _1bc3c2c50_checkDefault(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b1557_Match> _160733_m, jule::Ptr<_1bc273815_Else> _160748_d);
inline void _1bc3c30b3_checkComptimePanic(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc247014_Token> _161539_callToken, jule::Ptr<_1bc3abd27_Scope>* _161566_s);
inline void _1bc3c3426_processConstMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b1557_Match>* _164739_tm, jule::Ptr<_1bc2752c8_MatchCase>* _164756_m);
inline void _1bc3c36ce_checkTypeMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase>* _167636_m);
inline void _1bc3c3987_checkCommonMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase>* _171938_m);
inline void _1bc3c3c40_checkMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase> _177031_m);
inline void _1bc3c3ee8_checkFall(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26a6b9_FallSt> _177826_f);
inline jule::Ptr<_1bc3ae3bd_BreakSt> _1bc3c4339_checkBreakWithLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272aab_BreakSt> _180136_b);
inline jule::Ptr<_1bc3ae3bd_BreakSt> _1bc3c467a_checkPlainBreak(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272aab_BreakSt> _185932_b);
inline void _1bc3c4933_checkBreak(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272aab_BreakSt> _188127_b);
inline void _1bc3c4bdb_checkRet(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc270c30_RetSt> _189229_r);
inline void _1bc3c4e94_checkUseExpr(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc262617_UseExpr> _191829_ue);
inline void _1bc3c524c_checkNode(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Any* _193431_node);
inline void _1bc3c544a_checkResult(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline void _1bc3c5648_checkTree(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline void _1bc3c59ab_checkGoto(_1bc3b448e_scopeChecker* _self_, jule::Ptr<_1bc3aeed4_GotoSt>* _203730_gt, jule::Ptr<_1bc3b30c5_scopeLabel>* _203748_label);
inline void _1bc3c5ba9_checkGotos(_1bc3b448e_scopeChecker* _self_);
inline void _1bc3c5da7_checkLabels(_1bc3b448e_scopeChecker* _self_);
inline void _1bc3c60a5_checkVars(_1bc3b448e_scopeChecker* _self_);
inline void _1bc3c62a3_checkAliases(_1bc3b448e_scopeChecker* _self_);
inline void _1bc3c6616_check(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _213227_tree, jule::Ptr<_1bc3abd27_Scope>* _213255_s);
inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3c689c_newChildChecker(jule::Ptr<_1bc3b448e_scopeChecker> _self_);
inline void _1bc3c876c_checkCdef(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _1626_d);
inline void _1bc3c8a25_checkTypedef(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _3229_d);
inline void _1bc3c8ccd_checkNamespace(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _4835_d);
inline void _1bc3c9086_checkDeprecated(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _10036_d);
inline void _1bc3c933e_checkTest(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _14126_d);
inline void _1bc3c95e7_checkExport(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _16232_d);
inline void _1bc3c98a0_checkDirective(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _20035_d);
inline void _1bc3c9a9d_check(_1bc3c831b_directiveChecker* _self_);
inline jule::Ptr<_1bc3cab26_ReferenceStack> static__1bc3cae89_new(void);
inline jule::I32 _1bc3cb385_Len(_1bc3cab26_ReferenceStack* _self_);
inline jule::Any _1bc3cb6c6_At(_1bc3cab26_ReferenceStack* _self_, jule::I32 _4318_i);
inline void _1bc3cb97e_Push(_1bc3cab26_ReferenceStack* _self_, jule::Any _4824_ref);
inline jule::Bool _1c14db11c_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc2810c5_StructIns> _5320_t);
inline jule::Bool _1c14e7348_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc302113_FnIns> _5320_t);
inline jule::Bool _1c398a355_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc42dc12_Var> _5320_t);
inline jule::Bool _1c5e16812_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc309769_Trait> _5320_t);
inline void _1bc3d2633_pushErr(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc247014_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args);
inline void _1bc3d2db4_pushSuggestion(_1bc3d1b2c_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args);
inline jule::Bool _1bc3d32b0_checkCppUseDeclPath(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc27585b_UseDecl>* _32036_decl, jule::Str* _32058_path);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d35bd_buildCppHeaderImport(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc27585b_UseDecl>* _34041_decl);
inline jule::Str _1bc3d39b9_checkAbsPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_1bc27585b_UseDecl>* _37053_decl);
inline jule::Str _1bc3d3db5_checkStdAbsPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_1bc27585b_UseDecl>* _39956_decl);
inline __jule_tuple_bool__jule_tuple_str _1bc3d4206_checkImpPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc27585b_UseDecl>* _42234_decl);
inline void _1bc3d44ae_assignAlias(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _45233_imp);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d4800_buildImport(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc27585b_UseDecl>* _45933_decl);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d4b41_findUseDecl(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _48628_pkg);
inline jule::Bool _1bc3d4e82_checkDuplicateUseDecl(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _49442_pkg);
inline jule::Str _1bc3d52c3_getAsLinkPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Str _50434_path);
inline void _1bc3d56e1_pushCycleError(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3d1b2c_symBuilder>* _52532_sb, jule::Str _52549_path, _1a95669ea_Builder* _52565_message);
inline void _1bc3d5b0e_pushCrossCycleError(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3d1b2c_symBuilder>* _53837_target, jule::Ptr<_1bc3dcb9e_ImportInfo>* _53859_imp, jule::Ptr<_1bc247014_Token>* _53878_errorToken);
inline jule::Bool _1bc3d600a_checkImportCycles(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo> _56134_imp, jule::Ptr<_1bc27585b_UseDecl>* _56153_decl);
inline void _1bc3d6428_checkPackageAccessibility(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc27585b_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path);
inline jule::Bool _1bc3d6824_importPackage(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _62235_imp, jule::Ptr<_1bc27585b_UseDecl>* _62258_decl);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d6b65_importUseDecl(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc27585b_UseDecl>* _66835_decl);
inline void _1bc3d6d63_importUseDecls(jule::Ptr<_1bc3d1b2c_symBuilder> _self_);
inline void _1bc3d711b_appendNode(_1bc3d1b2c_symBuilder* _self_, _1bc25b90d_Node* _69731_node);
inline void _1bc3d7319_appendNodes(_1bc3d1b2c_symBuilder* _self_);
inline void _1bc3d75c2_pushDirectivePass(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc25bd2b_Directive>* _73338_d);
inline void _1bc3d77c0_appendTopDirectives(_1bc3d1b2c_symBuilder* _self_);
inline void _1bc3d79bd_build(jule::Ptr<_1bc3d1b2c_symBuilder> _self_);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3dd1bb_SelectPackage(_1bc3dcb9e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> );
inline jule::Ptr<_1bc42dc12_Var> _1bc3dd5b7_FindVar(_1bc3dcb9e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool );
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3dd9b3_FindTypeAlias(_1bc3dcb9e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool );
inline jule::Ptr<_1bc27d26a_Struct> _1bc3dddae_FindStruct(_1bc3dcb9e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool );
inline jule::Ptr<_1bc2ee055_Fn> _1bc3de2aa_FindFn(_1bc3dcb9e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool );
inline jule::Ptr<_1bc309769_Trait> _1bc3de5eb_FindTrait(_1bc3dcb9e_ImportInfo* _self_, jule::Str _23625_ident);
inline jule::Ptr<_1bc30be20_Enum> _1bc3de93c_FindEnum(_1bc3dcb9e_ImportInfo* _self_, jule::Str _24724_ident);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3dec7d_FindTypeEnum(_1bc3dcb9e_ImportInfo* _self_, jule::Str _25828_ident);
inline jule::Bool _1bc3e0146_isLookupable(_1bc3dcb9e_ImportInfo* _self_);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3e08e9_SelectPackage(_1bc3e0421_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> );
inline jule::Ptr<_1bc42dc12_Var> _1bc3e0ce5_FindVar(_1bc3e0421_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3e11e1_FindTypeAlias(_1bc3e0421_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded);
inline jule::Ptr<_1bc27d26a_Struct> _1bc3e15dc_FindStruct(_1bc3e0421_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded);
inline jule::Ptr<_1bc2ee055_Fn> _1bc3e19d8_FindFn(_1bc3e0421_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded);
inline jule::Ptr<_1bc309769_Trait> _1bc3e1d29_FindTrait(_1bc3e0421_Package* _self_, jule::Str _31125_ident);
inline jule::Ptr<_1bc30be20_Enum> _1bc3e216a_FindEnum(_1bc3e0421_Package* _self_, jule::Str _31724_ident);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3e24ab_FindTypeEnum(_1bc3e0421_Package* _self_, jule::Str _32328_ident);
inline jule::Ptr<_1bc38e337_comptimeTypeInfo> _1bc409869_pushComptimeTypeInfo(_1bc4093c4_commonSemaMeta* _self_, jule::Ptr<_1bc4b64e7_Type>* _21341_t);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc40a4c4_SelectPackage(_1bc409eeb_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _24229_selector);
inline jule::Ptr<_1bc42dc12_Var> _1bc40a8c0_FindVar(_1bc409eeb_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc40acbb_FindTypeAlias(_1bc409eeb_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded);
inline jule::Ptr<_1bc27d26a_Struct> _1bc40b1b7_FindStruct(_1bc409eeb_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded);
inline jule::Ptr<_1bc2ee055_Fn> _1bc40b5b3_FindFn(_1bc409eeb_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded);
inline jule::Ptr<_1bc309769_Trait> _1bc40b904_FindTrait(_1bc409eeb_sema* _self_, jule::Str _31225_ident);
inline jule::Ptr<_1bc30be20_Enum> _1bc40bc45_FindEnum(_1bc409eeb_sema* _self_, jule::Str _32724_ident);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc40c086_FindTypeEnum(_1bc409eeb_sema* _self_, jule::Str _34228_ident);
inline jule::Bool _1bc40c493_isFlag(_1bc409eeb_sema* _self_, jule::I32 _35418_flags);
inline jule::Ptr<_1bc305358_SymTab> _1bc40c729_getCurrentFile(_1bc409eeb_sema* _self_);
inline void _1bc40c9d2_setCurrentFile(_1bc409eeb_sema* _self_, jule::Ptr<_1bc305358_SymTab> _35734_f);
inline void _1bc40ce00_pushErr(_1bc409eeb_sema* _self_, jule::Ptr<_1bc247014_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args);
inline void _1bc40d263_pushSuggestion(_1bc409eeb_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args);
inline jule::Bool _1bc40d65e_isAccessibleDefine(_1bc409eeb_sema* _self_, jule::Bool _37030_public, jule::Ptr<_1bc247014_Token> _37044_token);
inline jule::Bool _1bc40db15_isDuplicatedIdent(_1bc409eeb_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded);
inline void _1bc40de78_checkDirectives(jule::Ptr<_1bc409eeb_sema> _self_, jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _40237_d, jule::Any _40263_o);
inline jule::Bool _1bc40e42e_checkGenericQuantity(_1bc409eeb_sema* _self_, jule::I32 _41136_required, jule::I32 _41151_given, jule::Ptr<_1bc247014_Token> _41163_token);
inline jule::Bool _1bc410463_isUseAliasDuplication(_1bc409eeb_sema* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _46938_imp);
inline jule::Bool _1bc4107a4_checkAutoAlias(_1bc409eeb_sema* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _48135_imp);
inline jule::Bool _1bc410ae5_checkImport(_1bc409eeb_sema* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _49932_imp);
inline void _1bc410ce3_checkImports(_1bc409eeb_sema* _self_);
inline void _1bc410ee1_implFileImpls(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc4111de_implImpls(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc4113dc_checkEnums(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc4115da_checkFileInherits(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc4117d8_checkInherits(jule::Ptr<_1bc409eeb_sema> _self_);
inline _1bc4c88e4_typeChecker _1bc411c8e_typeChecker(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _59247_generics, jule::Ptr<_1bc4c7904_referencer> _5937_referencer);
inline jule::Ptr<_1bc4b64e7_Type> _1bc412300_buildTypeWithRefers(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _6207_generics, jule::Ptr<_1bc4c7904_referencer> _62035_referencer);
inline jule::Bool _1bc412861_checkTypeSymWithRefers(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4bdc08_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _6277_generics, jule::Ptr<_1bc4c7904_referencer> _62735_referencer);
inline jule::Ptr<_1bc3a5419_constraintChecker> _1bc412ae7_constraintChecker(jule::Ptr<_1bc409eeb_sema> _self_);
inline jule::Bool _1bc412ee3_checkTypeSym(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4bdc08_TypeSym>* _64134_t, jule::Trait _64151_l);
inline jule::Ptr<_1bc4b64e7_Type> _1bc413499_checkTypeSymRefers(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_1bc3cab26_ReferenceStack> _64678_refers);
inline jule::Ptr<_1bc4b64e7_Type> _1bc413950_buildTypeWithGenerics(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _6597_generics, jule::Ptr<_1bc3cab26_ReferenceStack> _65935_refers);
inline jule::Ptr<_1bc4b64e7_Type> _1bc4140d2_selectType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _67632_t);
inline jule::Ptr<_1bc48551b_eval> _1bc414588_evalpd(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _68827_l, jule::Ptr<_1bc4b64e7_Type> _68842_p, jule::Ptr<_1bc42dc12_Var> _68856_owner);
inline jule::Ptr<_1bc48551b_eval> _1bc414984_evalp(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _70326_l, jule::Ptr<_1bc4b64e7_Type> _70341_p);
inline jule::Ptr<_1bc48551b_eval> _1bc414cc5_eval(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _70825_l);
inline jule::Bool _1bc4153e1_checkAssignType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_1bc4b64e7_Type>* _71254_dest, jule::Ptr<_1bc48354c_Data>* _7138_d, jule::Ptr<_1bc247014_Token> _71322_errorToken, jule::Ptr<_1bc3cab26_ReferenceStack> _71353_refers);
inline jule::Bool _1bc415897__checkTypeCompatibility(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b64e7_Type>* _75545_dest, jule::Ptr<_1bc4b64e7_Type>* _75563_src, jule::Ptr<_1bc247014_Token> _7567_errorToken);
inline jule::Bool _1bc415d4d_checkTypeCompatibility(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b64e7_Type>* _77344_dest, jule::Ptr<_1bc4b64e7_Type>* _7748_src, jule::Ptr<_1bc247014_Token>* _77425_errorToken);
inline void _1bc41626b_pushCompatiblityError(_1bc409eeb_sema* _self_, jule::Ptr<_1bc4b64e7_Type>* _78242_dest, jule::Ptr<_1bc48354c_Data>* _78260_src, jule::Ptr<_1bc247014_Token>* _7838_errorToken);
inline jule::Bool _1bc416722_checkTypeCompatibility1(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b64e7_Type>* _80045_dest, jule::Ptr<_1bc48354c_Data>* _80063_src, jule::Ptr<_1bc247014_Token>* _8018_errorToken);
inline jule::Ptr<_1bc4b64e7_Type> _1bc416bc8_buildNonGenericType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_1bc4b64e7_Type>>* _81644_ignored);
inline jule::Bool _1bc4170c4_buildFnNonGenericTypes(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns> _82743_f, jule::Slice<jule::Ptr<_1bc4b64e7_Type>>* _82759_ignored);
inline jule::Ptr<_1bc302113_FnIns> _1bc417415_getTraitCheckFnKind(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _85041_f);
inline jule::Bool _1bc4178bb_checkConstraintsFn(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _87940_f, jule::Ptr<_1bc247014_Token>* _87956_et, jule::Ptr<_1bc302113_FnIns> _87979_exist);
inline jule::Bool _1bc417d72_checkConstraintsStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _89344_s, jule::Ptr<_1bc247014_Token>* _89364_et, jule::Ptr<_1bc2810c5_StructIns> _89387_exist);
inline jule::Bool _1bc41826d_basicFnEnvironment(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*> _91051_algo);
inline jule::Bool _1bc418669_fnEnvironment(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*> _93046_algo);
inline void _1bc418922_checkFnParamKind(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc300ead_ParamIns>* _94238_p);
inline jule::Bool _1bc418c63_reloadFnInsTypes(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns> _94637_f);
inline jule::Bool _1bc419219_checkRefValidityForInitExpr(jule::Ptr<_1bc409eeb_sema> _self_, jule::Bool _98644_leftMut, jule::Ptr<_1bc48354c_Data>* _98664_d, jule::Ptr<_1bc247014_Token>* _98679_errorToken);
inline jule::Bool _1bc41955a_isMutRiskyStruct(_1bc409eeb_sema* _self_, jule::Ptr<_1bc2810c5_StructIns>* _100329_s);
inline jule::Bool _1bc419b76_checkValidityForInitExpr(jule::Ptr<_1bc409eeb_sema> _self_, jule::Bool _103041_leftMut, jule::Bool _103056_leftRef, jule::Ptr<_1bc4b64e7_Type>* _10314_leftKind, jule::Ptr<_1bc48354c_Data>* _103126_d, jule::Ptr<_1bc247014_Token>* _103141_errorToken);
inline jule::Bool _1bc41a072_checkTypeAliasDeclKind(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _105844_ta, jule::Trait _105864_l);
inline void _1bc41a3d5_checkTypeAliasDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _108140_ta, jule::Trait _108160_l);
inline void _1bc41a68d_checkTypeAliasDeclDup(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _108943_ta);
inline jule::Bool _1bc41a924_checkTypeAliasDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1c324105c_checkEnumItemsDup(_1bc409eeb_sema* _self_, jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _111336_items);
inline void _1c324e1d0_checkEnumItemsDup(_1bc409eeb_sema* _self_, jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> _111336_items);
inline void _1bc41ae85_checkEnumItemsStr(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30be20_Enum>* _113339_e);
inline void _1c04576a5_checkEnumItemInt(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc48551b_eval>* _116043_eval, jule::Ptr<_1bc30be20_Enum>* _116061_e, jule::Ptr<_1bc4be610_Prim>* _116072_prim, jule::Ptr<_1bc30b3b4_EnumItem>* _116090_item, jule::U64* _1160112_n);
inline void _1c322e974_checkEnumItemInt(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc48551b_eval>* _116043_eval, jule::Ptr<_1bc30be20_Enum>* _116061_e, jule::Ptr<_1bc4be610_Prim>* _116072_prim, jule::Ptr<_1bc30b3b4_EnumItem>* _116090_item, jule::I64* _1160112_n);
inline void _1c3574aaa_checkEnumItemsInt1(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4be610_Prim>* _119641_prim, jule::Ptr<_1bc30be20_Enum>* _119659_e);
inline void _1c0465240_checkEnumItemsInt1(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4be610_Prim>* _119641_prim, jule::Ptr<_1bc30be20_Enum>* _119659_e);
inline void _1bc41bb34_checkEnumItemsInt(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30be20_Enum>* _123139_e);
inline void _1bc41bddc_checkEnumDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30be20_Enum>* _124135_e);
inline void _1bc41c195_checkTypeEnumDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30d62a_TypeEnum>* _128239_e);
inline jule::Bool _1bc41c42b_checkEnumDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline jule::Bool _1bc41c6b2_checkTypeEnumDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline jule::Bool _1bc41ca03_checkDeclGenerics(_1bc409eeb_sema* _self_, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _134534_generics);
inline jule::Bool _1bc41cd44_checkFnDeclParamsDup(_1bc409eeb_sema* _self_, jule::Ptr<_1bc2ee055_Fn>* _137237_f);
inline jule::Bool _1bc41d185_checkFnDeclResultDup(_1bc409eeb_sema* _self_, jule::Ptr<_1bc2ee055_Fn>* _140937_f);
inline jule::Bool _1bc41d4c6_checkFnVariadicParam(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _145442_f);
inline void _1bc41d77e_checkFnDeclPrototype(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _146742_f);
inline jule::Bool _1bc41dc35_catchTraitInheritCycle(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait> _148939_t1, jule::Ptr<_1bc309769_Trait> _148955_t2, _1a95669ea_Builder* _148972_message);
inline jule::Bool _1bc41e076__checkTraitDeclInherits(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _150845_t);
inline void _1bc41e32e_checkTraitDeclInherits(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _154944_t);
inline void _1bc41e5d7_checkTraitDeclMethod(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _157442_f);
inline void _1bc41e890_checkTraitDeclMethods(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _158843_t);
inline void _1bc41eb48_checkTraitDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _162436_t);
inline jule::Bool _1bc41edce_checkTraitDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline jule::Bool _1bc4202ca_checkTraitImplMethods(_1bc409eeb_sema* _self_, jule::Ptr<_1bc309769_Trait>* _164842_base, jule::Ptr<_1bc3a7718_Impl>* _164857_ipl);
inline jule::Bool _1bc4206c6_implToStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _165934_dest, jule::Ptr<_1bc3a7718_Impl>* _165954_ipl);
inline void _1bc42097e_implTrait(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc3a7718_Impl>* _170131_decl);
inline void _1bc420c37_implStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc3a7718_Impl>* _174432_decl);
inline void _1bc420ee0_implImpl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc3a7718_Impl>* _176830_decl);
inline void _1bc421353_checkVarDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _177934_decl, jule::Trait _177950_l);
inline void _1bc42160b_checkGlobalVarDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _182540_decl);
inline jule::Bool _1bc421892_checkGlobalDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline jule::Bool _1bc421c8d_checkStructTraitImpl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _185342_strct, jule::Ptr<_1bc309769_Trait>* _185363_trt);
inline jule::Bool _1bc4220ce_checkStructImpls(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _187938_s);
inline jule::Bool _1bc422420_checkStructFields(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _188739_st);
inline void _1bc4226c8_checkStructDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _190437_s);
inline jule::Bool _1bc42295e_checkStructDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc422c17_checkAnonFuncDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _193439_f);
inline void _1bc422ec0_checkFuncDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _193935_f);
inline jule::Bool _1bc423311_checkFuncDeclsBy(jule::Ptr<_1bc409eeb_sema> _self_, jule::Slice<jule::Ptr<_1bc2ee055_Fn>>* _196138_funcs);
inline jule::Bool _1bc423597_checkFuncDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc4239b5_pushCycleError(_1bc409eeb_sema* _self_, jule::Str* _197727_st1, jule::Str* _197738_st2, _1a95669ea_Builder* _197753_message);
inline void _1bc424169_checkPackageDecls(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc4244cc_checkDataForTypeInference(_1bc409eeb_sema* _self_, jule::Ptr<_1bc48354c_Data>* _203742_d, jule::Ptr<_1bc247014_Token>* _203753_errToken);
inline void _1bc424785_checkVarValue(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _204935_v);
inline void _1bc424ae8_evalVarValue(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _209834_decl, jule::Trait _209850_l);
inline void _1bc424e5b_checkVar(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _211530_decl, jule::Trait _211546_l);
inline void _1bc425159_checkGlobals(jule::Ptr<_1bc409eeb_sema> _self_);
inline jule::Ptr<_1bc302113_FnIns> _1bc425555_readyToCheckFn(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _213836_s, jule::Ptr<_1bc2ee055_Fn>* _213856_f);
inline __jule_tuple_bool__jule_tuple_bool _1bc425951_checkGenericFn(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _215436_f, jule::Ptr<_1bc247014_Token>* _215452_et);
inline void _1bc425cb4_checkTypeMethod(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _217737_s, jule::Ptr<_1bc2ee055_Fn>* _217757_f);
inline jule::Ptr<_1bc302113_FnIns> _1bc42626a_checkStructInsOp(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _219038_s, jule::Ptr<_1bc2ee055_Fn>* _219058_f, jule::Fn<jule::Bool,jule::Ptr<_1bc2ee055_Fn>> _219066_p);
inline jule::Bool _1bc426666_checkStructEnv(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _220036_s, jule::Ptr<_1bc247014_Token> _220055_errorToken);
inline jule::Bool _1bc426a62_precheckStructIns(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _229839_s, jule::Ptr<_1bc247014_Token> _229858_errorToken);
inline void _1bc426d1a_checkStructIns(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _233536_s);
inline void _1bc4270c3_checkTypeStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _234137_s);
inline void _1bc4272c1_checkStructTypes(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc427579_checkStructInsOperators(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns> _236544_s);
inline void _1bc427832_precheckStructType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _242940_s);
inline void _1bc427a30_precheckStructTypes(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc427cd8_checkRets(_1bc409eeb_sema* _self_, jule::Ptr<_1bc302113_FnIns>* _245830_f);
inline void _1bc42814b_checkFnInsSc(_1bc409eeb_sema* _self_, jule::Ptr<_1bc302113_FnIns>* _246933_f, jule::Ptr<_1bc3b448e_scopeChecker>* _246949_sc);
inline void _1bc4284ae_checkFnInsCaller(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _248238_f, jule::Ptr<_1bc247014_Token> _248253_caller);
inline void _1bc428767_checkFnIns(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _250432_f);
inline void _1bc428a20_checkFunc(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _250831_f);
inline void _1bc428cc8_checkTestFn(_1bc409eeb_sema* _self_, jule::Ptr<_1bc302113_FnIns>* _252332_f);
inline void _1bc429081_precheckFunc(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _255634_f);
inline void _1bc42927e_precheckFuncs(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc42947c_checkFuncs(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc42967a_checkPackageTypes(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc429878_setFileSemaFields(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc429a76_setSemaFields(jule::Ptr<_1bc409eeb_sema> _self_);
inline void _1bc429d2e_check(jule::Ptr<_1bc409eeb_sema> _self_, jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _263427_files);
inline _1bc42a22a_missingRetChecker static__1bc42a626_new(void);
inline jule::Bool _1bc42a934_checkConditional(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3ac960_Conditional> _268232_c);
inline jule::Bool _1bc42ac75_checkMatch(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3b1557_Match> _269426_m);
inline jule::Bool _1bc42b171_checkInfIter(_1bc42a22a_missingRetChecker* _self_, jule::Uintptr _272024_it, jule::Ptr<_1bc3abd27_Scope>* _272042_s);
inline jule::Bool _1bc42b4b2_checkScope(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3abd27_Scope> _273826_s);
inline jule::Bool _1bc42b803_check(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3abd27_Scope> _279321_s);
inline jule::Bool _1bc42e11e_IsInitialized(_1bc42dc12_Var* _self_);
inline jule::Bool _1bc42e3a5_IsTypeInferred(_1bc42dc12_Var* _self_);
inline jule::Bool _1bc42e63b_untypedConstant(_1bc42dc12_Var* _self_);
inline jule::Bool static__1bc4301ca_Str(jule::Ptr<_1bc2ee055_Fn> _1016_f);
inline jule::Bool static__1bc43054e_logical(jule::Ptr<_1bc2ee055_Fn>* _3221_f, jule::Str _3229_ident);
inline jule::Bool static__1bc430818_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _5815_f);
inline jule::Bool static__1bc430ad2_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _6315_f);
inline jule::Bool static__1bc430d9b_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _6817_f);
inline jule::Bool static__1bc431165_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _7315_f);
inline jule::Bool static__1bc43142e_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _7817_f);
inline jule::Bool static__1bc4317a3_result(jule::Ptr<_1bc2ee055_Fn>* _8220_f, jule::Str _8228_ident);
inline jule::Bool static__1bc431a6c_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _10416_f);
inline jule::Bool static__1bc431d36_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _10916_f);
inline jule::Bool static__1bc432100_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _11416_f);
inline jule::Bool static__1bc4323b9_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _11916_f);
inline jule::Bool static__1bc432683_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _12416_f);
inline jule::Bool static__1bc43294c_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _12916_f);
inline jule::Bool static__1bc432c16_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _13416_f);
inline jule::Bool static__1bc432ed0_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _13919_f);
inline jule::Bool static__1bc433299_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _14418_f);
inline jule::Bool static__1bc433563_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _14919_f);
inline jule::Bool static__1bc4338d7_unary(jule::Ptr<_1bc2ee055_Fn>* _15319_f, jule::Str _15327_ident);
inline jule::Bool static__1bc433ba1_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _17316_f);
inline jule::Bool static__1bc433e6a_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _17816_f);
inline jule::Bool static__1bc434234_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _18319_f);
inline jule::Bool static__1bc4345a8_assign(jule::Ptr<_1bc2ee055_Fn>* _18720_f, jule::Str _18728_ident);
inline jule::Bool static__1bc434872_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _20722_f);
inline jule::Bool static__1bc434b3b_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _21222_f);
inline jule::Bool static__1bc434e05_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _21722_f);
inline jule::Bool static__1bc4351be_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _22222_f);
inline jule::Bool static__1bc435488_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _22722_f);
inline jule::Bool static__1bc435752_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _23222_f);
inline jule::Bool static__1bc435a1b_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _23722_f);
inline jule::Bool static__1bc435cd5_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _24224_f);
inline jule::Bool static__1bc43609e_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _24725_f);
inline jule::Bool static__1bc436368_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _25225_f);
inline void _1bc46edb8_pushErr(_1bc46e88a_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args);
inline jule::Bool _1bc47014e_checkTrait(_1bc46e88a_typeCompatibilityChecker* _self_);
inline jule::Bool _1bc4703d5_checkPtr(_1bc46e88a_typeCompatibilityChecker* _self_);
inline jule::Bool _1bc47066b_checkPrim(_1bc46e88a_typeCompatibilityChecker* _self_);
inline jule::Bool _1bc470a67_typeEnum(_1bc46e88a_typeCompatibilityChecker* _self_, jule::Ptr<_1bc30d62a_TypeEnum>* _18725_e, jule::Ptr<_1bc4b64e7_Type>* _18744_t2);
inline jule::Bool _1bc470ced_checkTypeEnum(_1bc46e88a_typeCompatibilityChecker* _self_);
inline jule::Bool _1bc471084_check(_1bc46e88a_typeCompatibilityChecker* _self_);
inline void _1bc471bcd_pushErr(_1bc471716_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args);
inline jule::Bool _1bc471e64_checkValidity(_1bc471716_assignTypeChecker* _self_);
inline jule::Bool _1bc4721ea_checkConst(_1bc471716_assignTypeChecker* _self_);
inline jule::Bool _1bc472481_checkCompatibility(_1bc471716_assignTypeChecker* _self_);
inline jule::Bool _1bc472717_check(_1bc471716_assignTypeChecker* _self_);
inline jule::Bool _1c04aa2da_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k);
inline jule::Bool _1c35ae573_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k);
inline jule::Bool _1c04aeb5d_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k);
inline jule::Bool _1c32c6279_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k);
inline jule::Bool _1bc473a15_annotateConstraintMap(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _36642_k);
inline jule::Bool _1bc473d56_annotateConstraintTup(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _38142_k);
inline jule::Bool _1bc474197_annotateConstraintFn(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _39841_k);
inline jule::Bool _1bc4744d8_annotateConstraintIdent(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _41944_k);
inline jule::Bool _1bc474829_annotateConstraint(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _44839_k);
inline void _1bc474b8c_pushGeneric(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _47332_k, jule::I32 _47342_i);
inline jule::Bool _1bc474ecd_annotatePrim(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _48840_k);
inline jule::Bool _1bc47531e_annotateArr(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _49239_k);
inline jule::Bool _1bc475660_annotateSlc(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _50239_k);
inline jule::Bool _1bc475a5b_checkMapKey(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _51238_k, jule::Ptr<_1bc4b64e7_Type>* _51254_ck);
inline jule::Bool _1bc475d9c_annotateMap(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _52039_k);
inline jule::Bool _1bc4761dd_annotateFn(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _53038_k);
inline jule::Bool _1bc47652e_annotatePtr(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _55939_k);
inline jule::Bool _1bc476870_annotateSptr(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _56940_k);
inline jule::Bool _1bc476bb1_annotateStruct(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _57942_k);
inline jule::Bool _1bc477002_annotateAny(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _60139_k);
inline jule::Bool _1bc477343_annotateKind(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _62240_k);
inline jule::Bool _1bc4775c9_annotate(_1bc4730db_dynamicTypeAnnotation* _self_);
inline void _1bc4784dc_pushErrToken(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc247014_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args);
inline void _1bc478850_pushErr(_1bc477e48_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args);
inline jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _1bc478ad6_getParams(_1bc477e48_fnCallArgChecker* _self_);
inline jule::Bool _1bc478e27_checkCounts(_1bc477e48_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>* _68428_params);
inline jule::Bool _1bc4793cd_checkArg(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc300ead_ParamIns>* _71629_p, jule::Ptr<_1bc48354c_Data>* _71648_arg, jule::Ptr<_1bc247014_Token>* _71665_errorToken);
inline jule::Bool _1bc4797c9_push(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc300ead_ParamIns>* _74525_p, jule::Ptr<_1bc261c43_Expr> _74543_arg);
inline jule::Bool _1bc479bc5_pushVariadic(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc300ead_ParamIns>* _76933_p, jule::I32 _76951_i);
inline jule::Bool _1bc47a016_checkArgs(_1bc477e48_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>* _85030_params);
inline jule::Bool _1bc47a29c_checkDynamicTypeAnnotation(_1bc477e48_fnCallArgChecker* _self_);
inline jule::Bool _1bc47a533_check(_1bc477e48_fnCallArgChecker* _self_);
inline void _1bc47b413_pushErr(_1bc47ad80_structLitChecker* _self_, jule::Ptr<_1bc247014_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args);
inline void _1bc47b776_pushSuggestion(_1bc47ad80_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args);
inline void _1bc47bb94_pushMatch(_1bc47ad80_structLitChecker* _self_, jule::Ptr<_1bc280525_FieldIns>* _93930_f, jule::Ptr<_1bc48354c_Data>* _93949_d, jule::Ptr<_1bc247014_Token>* _93964_errorToken);
inline void _1bc47c007_checkPair(_1bc47ad80_structLitChecker* _self_, jule::Ptr<_1bc266462_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _95862_exprs);
inline jule::Bool _1bc47c348_readyExprs(_1bc47ad80_structLitChecker* _self_, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _99731_exprs);
inline void _1bc47c601_check(_1bc47ad80_structLitChecker* _self_, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _102126_exprs);
inline jule::Ptr<_1bc42dc12_Var> _1bc47d17e_buildVar(_1bc47cb62_rangeChecker* _self_, jule::Ptr<_1bc270856_VarDecl>* _109725_decl);
inline void _1bc47d37c_setSizeKey(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47d79a_checkRangeExprValidity(_1bc47cb62_rangeChecker* _self_, jule::Ptr<_1bc48354c_Data>* _111643_d, jule::Ptr<_1bc42dc12_Var>* _111654_key, jule::Ptr<_1bc4b64e7_Type>* _111670_k);
inline void _1bc47d998_checkSlice(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47db96_checkArray(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47dd94_checkMapKeyA(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47e092_checkMapKeyB(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47e290_checkMap(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47e48d_checkStr(_1bc47cb62_rangeChecker* _self_);
inline void _1bc47e68b_checkComptime(_1bc47cb62_rangeChecker* _self_);
inline jule::Bool _1bc47e922_checkComptimeRange(_1bc47cb62_rangeChecker* _self_);
inline jule::Bool _1bc47eba8_check(_1bc47cb62_rangeChecker* _self_);
inline void _1bc480912_prepareTypes(_1bc4804a0_retTypeChecker* _self_);
inline void _1bc480bba_prepareExprs(_1bc4804a0_retTypeChecker* _self_, jule::Ptr<_1bc261c43_Expr>* _127633_e);
inline void _1bc480db8_checkExprs(_1bc4804a0_retTypeChecker* _self_);
inline jule::Bool _1bc48114e_tryFuncMultiRetForward(_1bc4804a0_retTypeChecker* _self_);
inline jule::Bool _1bc481490_check(_1bc4804a0_retTypeChecker* _self_, jule::Ptr<_1bc261c43_Expr>* _137926_e);
inline jule::Bool _1bc48396a_IsNil(_1bc48354c_Data* _self_);
inline jule::Bool _1bc483c01_IsVoid(_1bc48354c_Data* _self_);
inline jule::Bool _1bc483e87_IsConst(_1bc48354c_Data* _self_);
inline jule::Bool _1bc4842c8_GoodOperand(_1bc48354c_Data* _self_, jule::Ptr<_1bc48354c_Data>* _6228_other);
inline void _1bc4859e4_pushErr(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args);
inline void _1bc485d57_pushSuggestion(_1bc48551b_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args);
inline void _1bc486055_allowBuiltin(_1bc48551b_eval* _self_);
inline void _1bc486253_disallowBuiltin(_1bc48551b_eval* _self_);
inline jule::Bool _1bc4864d9_isUnsafe(_1bc48551b_eval* _self_);
inline jule::Bool _1bc486770_isGlobal(_1bc48551b_eval* _self_);
inline jule::Bool _1bc486ab1_applyNumericPrefix(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _12939_d);
inline jule::Ptr<_1bc48354c_Data> _1bc486e02_litStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _16419_l);
inline jule::Ptr<_1bc48354c_Data> _1bc487243_litRune(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _18120_l);
inline jule::Ptr<_1bc48354c_Data> _1bc487584_litFloat(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _20021_l);
inline jule::Ptr<_1bc48354c_Data> _1bc4878c5_litInt(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _21223_l);
inline jule::Ptr<_1bc48354c_Data> _1bc487c16_litNum(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _26723_l);
inline jule::Ptr<_1bc48354c_Data> _1bc488057_evalLit(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr> _27623_lit);
inline jule::Any _1bc488398_findBuiltins(_1bc48551b_eval* _self_, jule::Str* _28929_ident);
inline jule::Any _1bc488794_getDef(_1bc48551b_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded);
inline jule::Ptr<_1bc3cab26_ReferenceStack> _1bc488a2a_getOwnerRefers(_1bc48551b_eval* _self_);
inline void _1c14d8c96_pushReference(_1bc48551b_eval* _self_, jule::Ptr<_1bc2810c5_StructIns>* _37437_ref);
inline void _1c14e4c91_pushReference(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns>* _37437_ref);
inline void _1c1505cc4_pushReference(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _37437_ref);
inline jule::Ptr<_1bc48354c_Data> _1bc489124__evalEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30be20_Enum> _38125_enm);
inline jule::Ptr<_1bc48354c_Data> _1bc489520_evalEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30be20_Enum> _39028_enm, jule::Ptr<_1bc247014_Token> _39040_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc489861__evalTypeEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30d62a_TypeEnum> _39929_enm);
inline jule::Ptr<_1bc48354c_Data> _1bc489c5c_evalTypeEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30d62a_TypeEnum> _40832_enm, jule::Ptr<_1bc247014_Token> _40848_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc48a09d__evalStruct(_1bc48551b_eval* _self_, jule::Ptr<_1bc2810c5_StructIns> _41727_s);
inline jule::Ptr<_1bc48354c_Data> _1bc48a499_evalStruct(_1bc48551b_eval* _self_, jule::Ptr<_1bc27d26a_Struct> _43130_s, jule::Ptr<_1bc247014_Token> _43146_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc48a7da_evalFnIns(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns> _46125_f);
inline void _1bc48ab4d_checkDeprecated(_1bc48551b_eval* _self_, jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _47036_directives, jule::Ptr<_1bc247014_Token> _47067_tok);
inline jule::Ptr<_1bc48354c_Data> _1bc48b049_evalFn(_1bc48551b_eval* _self_, jule::Ptr<_1bc2ee055_Fn> _48626_f, jule::Ptr<_1bc247014_Token> _48634_errorToken);
inline void _1bc48b467_pushIllegalCycleError(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _51138_v1, jule::Ptr<_1bc42dc12_Var>* _51149_v2, _1a95669ea_Builder* _51164_message);
inline jule::Bool _1bc48b863_checkCrossCycle(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _52132_v, _1a95669ea_Builder* _52146_message);
inline jule::Bool _1bc48bc5e_checkIllegalCycles(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _53839_v, jule::Ptr<_1bc247014_Token> _53848_declToken);
inline jule::Ptr<_1bc48354c_Data> _1bc48c15a_evalVar(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var> _56627_v, jule::Ptr<_1bc247014_Token> _56636_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc48c556_evalTypeAlias(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b5705_TypeAlias> _66633_ta, jule::Ptr<_1bc247014_Token> _66649_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc48c952_evalDef(_1bc48551b_eval* _self_, jule::Any* _70528_def, jule::Ptr<_1bc247014_Token> _70542_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc48cc93_evalIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc26355d_IdentExpr> _72929_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc48d0d4_evalUnary(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc263d00_UnaryExpr> _73430_u);
inline jule::Ptr<_1bc48354c_Data> _1bc48d425_evalVariadic(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2641c9_VariadicExpr> _73933_v);
inline jule::Ptr<_1bc48354c_Data> _1bc48d766_evalUnsafe(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2630a7_UnsafeExpr> _76131_u);
inline jule::Ptr<_1bc48354c_Data> _1bc48daa7_evalArr(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268299_SliceExpr> _76928_s);
inline jule::Ptr<_1bc48354c_Data> _1bc48e05d_evalExpSlc(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268299_SliceExpr> _84631_s, jule::Ptr<_1bc4b64e7_Type> _84655_t, jule::Any _84669_first);
inline jule::Ptr<_1bc48354c_Data> _1bc48e39e_evalSliceExpr(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268299_SliceExpr> _88434_s);
inline jule::Bool _1bc48e79a_checkIntegerIndexingByData(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _92047_d, jule::Ptr<_1bc247014_Token> _92061_token);
inline void _1bc48ebb8_indexingPtr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _93332_d, jule::Ptr<_1bc48354c_Data>* _93347_index, jule::Ptr<_1bc268c06_IndexingExpr>* _93366_i);
inline void _1bc4900d6_indexingArr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _94932_d, jule::Ptr<_1bc48354c_Data>* _94947_index, jule::Ptr<_1bc268c06_IndexingExpr>* _94966_i);
inline void _1bc490504_indexingSlc(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _95932_d, jule::Ptr<_1bc48354c_Data>* _95947_index, jule::Ptr<_1bc268c06_IndexingExpr>* _95966_i);
inline void _1bc490922_indexingMap(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _98232_d, jule::Ptr<_1bc48354c_Data>* _98247_index, jule::Ptr<_1bc268c06_IndexingExpr>* _98266_i);
inline void _1bc490d40_indexingStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _99932_d, jule::Ptr<_1bc48354c_Data>* _99947_index, jule::Ptr<_1bc268c06_IndexingExpr>* _99966_i);
inline void _1bc49125d_comptimeRange(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _102734_d, jule::Ptr<_1bc48354c_Data>* _102749_index, jule::Ptr<_1bc268c06_IndexingExpr>* _102768_i);
inline void _1bc49167b_toIndexing(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _105231_d, jule::Ptr<_1bc48354c_Data>* _105246_index, jule::Ptr<_1bc268c06_IndexingExpr>* _105265_i);
inline jule::Bool _1bc491b32_pushGenericsFromExprSubIdent(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc264d56_SubIdentExpr>* _108050_sexpr, jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>* _10818_generics, jule::Ptr<_1bc261c43_Expr>* _108141_expr);
inline jule::Bool _1bc49202d_pushGenericsFromData(jule::Ptr<_1bc48551b_eval> _self_, jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>* _109142_generics, jule::Ptr<_1bc261c43_Expr>* _109175_expr);
inline void _1bc492391_evalIdentDeclFromIndexing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc48354c_Data>* _116147_d, jule::Ptr<_1bc268c06_IndexingExpr>* _116162_i);
inline __jule_tuple_bool__jule_tuple_bool _1bc492847_checkGenericFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc302113_FnIns>* _120436_f, jule::Ptr<_1bc247014_Token>* _120452_et, jule::Any* _120476_model);
inline void _1bc492baa_evalFnGenericFromIndexing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc48354c_Data>* _122047_d, jule::Ptr<_1bc268c06_IndexingExpr>* _122062_i);
inline jule::Ptr<_1bc48354c_Data> _1bc492eeb_evalIndexing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268c06_IndexingExpr> _126033_i);
inline __jule_tuple_x_1bc48354c_Data__jule_tuple_x_1bc48354c_Data _1bc49333c_evalSlicingExprs(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc269366_SlicingExpr>* _132038_s);
inline void _1bc4935e5_slicingArr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _135627_d);
inline void _1bc493a13_slicingStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _137127_d, jule::Ptr<_1bc48354c_Data>* _137138_l, jule::Ptr<_1bc48354c_Data>* _137149_r);
inline void _1bc493edb_checkSlicing(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _140933_d, jule::Ptr<_1bc48354c_Data>* _140944_l, jule::Ptr<_1bc48354c_Data>* _140955_r, jule::Ptr<_1bc269366_SlicingExpr>* _140966_s);
inline jule::Ptr<_1bc48354c_Data> _1bc49432c_evalSlicing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc269366_SlicingExpr> _142832_s);
inline void _1bc49474a_castPtr(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _146527_t, jule::Ptr<_1bc48354c_Data> _146541_d, jule::Ptr<_1bc247014_Token> _146551_errorToken);
inline void _1bc494b68_castStruct(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _148730_t, jule::Ptr<_1bc48354c_Data> _148744_d, jule::Ptr<_1bc247014_Token> _148754_errorToken);
inline void _1bc495086_castRef(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _150427_t, jule::Ptr<_1bc48354c_Data> _150441_d, jule::Ptr<_1bc247014_Token> _150451_errorToken);
inline void _1bc4954a4_castSlc(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _152727_t, jule::Ptr<_1bc48354c_Data> _152741_d, jule::Ptr<_1bc247014_Token> _152751_errorToken);
inline void _1bc495817_castStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _158227_d, jule::Ptr<_1bc247014_Token> _158237_errorToken);
inline void _1bc495c35_castInt(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _162927_t, jule::Ptr<_1bc48354c_Data> _162941_d, jule::Ptr<_1bc247014_Token> _162951_errorToken);
inline void _1bc496153_castNum(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _167527_t, jule::Ptr<_1bc48354c_Data> _167541_d, jule::Ptr<_1bc247014_Token> _167551_errorToken);
inline void _1bc496571_castPrim(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _170628_t, jule::Ptr<_1bc48354c_Data> _170642_d, jule::Ptr<_1bc247014_Token> _170652_errorToken);
inline void _1bc4968d4_castConstant(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type>* _172233_t, jule::Ptr<_1bc48354c_Data>* _172248_d);
inline void _1bc496d02_castTypeEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type>* _173133_t, jule::Ptr<_1bc48354c_Data>* _173148_d, jule::Ptr<_1bc247014_Token>* _173163_errorToken);
inline void _1bc497220_castTypeEnumT(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type>* _174134_t, jule::Ptr<_1bc48354c_Data>* _174149_d, jule::Ptr<_1bc247014_Token>* _174164_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc4976c6_evalCastByTypeNData(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _175139_t, jule::Ptr<_1bc48354c_Data> _175153_d, jule::Ptr<_1bc247014_Token> _175167_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc497b7c_evalCastT(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc4b64e7_Type>* _183631_t, jule::Ptr<_1bc261c43_Expr>* _183646_e, jule::Ptr<_1bc247014_Token>* _183666_et);
inline jule::Ptr<_1bc48354c_Data> _1bc497ebd_evalCast(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2645a3_CastExpr> _185329_c);
inline jule::Ptr<_1bc48354c_Data> _1bc49830e_evalNamespace(_1bc48551b_eval* _self_, jule::Ptr<_1bc26497c_NamespaceExpr> _186233_s);
inline jule::Ptr<_1bc48354c_Data> _1bc4987b5_evalStructLitExplicit(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2810c5_StructIns> _188142_s, jule::Slice<jule::Ptr<_1bc261c43_Expr>> _18827_exprs, jule::Ptr<_1bc247014_Token> _188232_errorToken);
inline jule::Ptr<_1bc48354c_Data> _1bc498b06_evalStructLit(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc266c8c_StructLit> _191934_lit);
inline _1bc4c88e4_typeChecker _1bc498d8c_typeChecker(_1bc48551b_eval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4991cd_evalType(_1bc48551b_eval* _self_, jule::Ptr<_1bc25c90e_TypeDecl> _195128_t);
inline void _1bc499541_callTypeFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr>* _196432_fc, jule::Ptr<_1bc48354c_Data>* _196459_d);
inline void _1bc4998a4_callBuiltinFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr>* _199035_fc, jule::Ptr<_1bc48354c_Data>* _199062_d);
inline void _1bc499c17_checkFnOfConcurrentCall(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns>* _200240_f, jule::Ptr<_1bc247014_Token> _200251_errorToken);
inline void _1bc49a135_processExceptionalHandler(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns>* _202146_f, jule::Ptr<_1bc26596c_FnCallExpr>* _202162_fc, jule::Ptr<_1bc48354c_Data>* _202189_d);
inline void _1bc49a498_callFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr>* _204828_fc, jule::Ptr<_1bc48354c_Data>* _204855_d);
inline jule::Ptr<_1bc48354c_Data> _1bc49a7d9_evalFnCall(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr> _219731_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc49abd5_evalEnumStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc30be20_Enum> _223034_enm, jule::Ptr<_1bc247014_Token> _223050_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49b0d1_evalTypeEnumStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc30d62a_TypeEnum> _223838_enm, jule::Ptr<_1bc247014_Token> _223854_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49b4cc_evalStructStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc2810c5_StructIns> _226136_s, jule::Ptr<_1bc247014_Token> _226151_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49b983_evalTraitSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _229637_d, jule::Ptr<_1bc309769_Trait> _229651_trt, jule::Ptr<_1bc247014_Token> _229668_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49bee4_evalStructSubIdentField(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _231844_d, jule::Ptr<_1bc2810c5_StructIns>* _231859_s, jule::Ptr<_1bc247014_Token>* _231879_tok, jule::Ptr<_1bc280525_FieldIns>* _2318104_f);
inline jule::Ptr<_1bc48354c_Data> _1bc49c610_evalStructSubIdentMethod(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _234345_d, jule::Ptr<_1bc2810c5_StructIns>* _234360_s, jule::Ptr<_1bc247014_Token>* _234380_tok, jule::Ptr<_1bc2ee055_Fn>* _2343105_m, jule::Bool _2343113_ref);
inline jule::Ptr<_1bc48354c_Data> _1bc49cb71_evalStructSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _236438_d, jule::Ptr<_1bc2810c5_StructIns> _236452_s, jule::Ptr<_1bc264d56_SubIdentExpr> _236471_si, jule::Bool _236495_ref);
inline jule::Ptr<_1bc48354c_Data> _1bc49ceb2_evalIntTypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _238833_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49d303_evalUintTypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _241534_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49d644_evalI8TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _243332_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49d985_evalI16TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _246233_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49dcc6_evalI32TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _249133_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49e117_evalI64TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _252033_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49e458_evalU8TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _254932_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49e799_evalU16TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _256833_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49eada_evalU32TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _258733_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc49ee2b_evalU64TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _260633_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc4a026c_evalF32TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _262533_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc4a05ad_evalF64TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _266433_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc4a09a9_evalPrimStatic(_1bc48551b_eval* _self_, jule::Str _270330_kind, jule::Ptr<_1bc247014_Token> _270341_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc4a0da5_evalTypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _273534_d, jule::Ptr<_1bc264d56_SubIdentExpr> _273548_si);
inline jule::Ptr<_1bc48354c_Data> _1c0d34a65_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc38e337_comptimeTypeInfo>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39a489c_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc37ee93_comptimeStructField>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39a9165_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc3863d9_comptimeEnumField>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39ad972_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc389200_comptimeParam>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39b346b_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc3831b6_comptimeStatic>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39b7be0_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc39543c_comptimeValue>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39bc464_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc399b17_comptimeFile>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline jule::Ptr<_1bc48354c_Data> _1c39c1c71_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc39da2d_comptimeDecl>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si);
inline __jule_tuple_x_1bc48354c_Data__jule_tuple_bool _1bc4a1757_tryComptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _275943_d, jule::Ptr<_1bc264d56_SubIdentExpr> _275957_si);
inline jule::Ptr<_1bc48354c_Data> _1bc4a1b53_evalObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _279035_d, jule::Ptr<_1bc264d56_SubIdentExpr> _279049_si);
inline jule::Ptr<_1bc48354c_Data> _1bc4a1e94_evalSubIdent(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc264d56_SubIdentExpr> _283233_si);
inline jule::Ptr<_1bc48354c_Data> _1bc4a22d5_evalTuple(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc262837_TupleExpr> _284630_tup);
inline jule::Ptr<_1bc48354c_Data> _1bc4a26d1_evalMap(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc4c52a3_Map> _287528_m, jule::Ptr<_1bc267243_BraceLit> _287541_lit);
inline jule::Ptr<_1bc48354c_Data> _1bc4a2a22_evalBraceLit(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc267243_BraceLit> _292333_lit);
inline jule::Ptr<_1bc48354c_Data> _1bc4a2d63_evalAnonFunc(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26e69b_FnDecl> _293833_decl);
inline jule::Ptr<_1bc48354c_Data> _1bc4a31a4_evalBinary(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26530c_BinaryExpr> _297631_op);
inline jule::Ptr<_1bc48354c_Data> _1bc4a34e5_evalExprKind(jule::Ptr<_1bc48551b_eval> _self_, jule::Any _299133_kind);
inline jule::Ptr<_1bc48354c_Data> _1bc4a3836_eval1(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _303926_expr);
inline jule::Ptr<_1bc48354c_Data> _1bc4a3b77_eval(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _308425_expr);
inline jule::Ptr<_1bc48354c_Data> _1bc4a3eb8_evalExpr1(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _309930_expr);
inline jule::Ptr<_1bc48354c_Data> _1bc4a4309_evalExpr(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _311529_expr);
inline _1bc4a478d_unaryEval static__1bc4a4c11_new(jule::Ptr<_1bc48551b_eval> _313620_e);
inline void _1bc4a4e0e_minus(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a510c_plus(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a530a_caret(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a5508_excl(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a5706_star(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a5904_amper(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a5b02_typeDecl(_1bc4a478d_unaryEval* _self_);
inline void _1bc4a5d00_evalData(_1bc4a478d_unaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a6141_eval(_1bc4a478d_unaryEval* _self_, jule::Ptr<_1bc263d00_UnaryExpr> _342324_u);
inline _1bc4a6729_binaryEval static__1bc4a6d12_newPlain(jule::Ptr<_1bc48551b_eval> _347125_e);
inline _1bc4a6729_binaryEval static__1bc4a7186_new(jule::Ptr<_1bc48551b_eval> _347720_e, jule::Ptr<_1bc247014_Token> _347734_op);
inline jule::Bool _1bc4a741c_checkTypeCompatibility(_1bc4a6729_binaryEval* _self_);
inline jule::Bool _1bc4a76a3_checkStructCommonOperatorCompatibility(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a7939_evalComptimeTypeInfo(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a7bc0_evalNil(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a7e56_evalEnum(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a81dc_evalTypeEnum(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a8473_evalSptr(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a8709_evalPtr(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a8990_evalArr(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a8c26_evalStruct(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a8eac_evalTrait(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a9243_evalAny(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a94c9_evalBool(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4a9760_evalStr(_1bc4a6729_binaryEval* _self_);
inline void _1bc4a995d_setTypeToGreater(_1bc4a6729_binaryEval* _self_);
inline void _1bc4a9c16_checkModData(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _387633_d);
inline void _1bc4a9e14_mod(_1bc4a6729_binaryEval* _self_);
inline jule::Bool _1bc4aa310_numbersAreCompatibile(_1bc4a6729_binaryEval* _self_, jule::Str* _389834_lk, jule::Str* _389844_rk);
inline jule::Ptr<_1bc48354c_Data> _1bc4aa596_shift(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4aa82c_evalFloat(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4aaab3_evalInt(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4aad49_evalPrim(_1bc4a6729_binaryEval* _self_);
inline jule::Bool _1bc4ab0d0_checkSpecialCases(_1bc4a6729_binaryEval* _self_);
inline jule::Ptr<_1bc48354c_Data> _1bc4ab366_evalOp(_1bc4a6729_binaryEval* _self_);
inline void _1bc4ab61e_evalConst(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _418830_d);
inline void _1bc4ab8c7_checkData(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _426630_d);
inline void _1bc4abac5_checkDatas(_1bc4a6729_binaryEval* _self_);
inline void _1bc4abd7d_setModel(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _427829_d);
inline void _1bc4ac136_postEval(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _430729_d);
inline jule::Ptr<_1bc48354c_Data> _1bc4ac532_solveExplicit(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _431234_l, jule::Ptr<_1bc48354c_Data>* _431249_r);
inline jule::Ptr<_1bc48354c_Data> _1bc4ac873_eval(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc26530c_BinaryExpr>* _433225_op);
inline jule::Str _1bc4b68e3_Str(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b6c34_Equal(jule::Ptr<_1bc4b64e7_Type> _self_, jule::Ptr<_1bc4b64e7_Type> _7218_other);
inline jule::Bool _1bc4b7394_Binded(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b762a_IsNil(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b78b1_Void(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b7b47_Comparable(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b7dcd_Mutable(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b8164_Ordered(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b83ea_NilCompatible(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b8681_GC(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4b8917_Variadicable(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4be610_Prim> _1bc4b8b9d_Prim(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4c313b_Sptr> _1bc4b8e34_Sptr(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4c6903_Ptr> _1bc4b91ba_Ptr(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc30be20_Enum> _1bc4b9451_Enum(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc4b96d7_TypeEnum(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4c5e30_Arr> _1bc4b996d_Arr(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4c3b0e_Slc> _1bc4b9c04_Slc(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc302113_FnIns> _1bc4b9e8a_Fn(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc2810c5_StructIns> _1bc4ba221_Struct(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc309769_Trait> _1bc4ba4a7_Trait(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4c52a3_Map> _1bc4ba73d_Map(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc4c4703_Tuple> _1bc4ba9c4_Tup(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4bac5a_comptime(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc381736_comptimeStructFields> _1bc4baee1_comptimeStructFields(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc37ee93_comptimeStructField> _1bc4bb277_comptimeStructField(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc3876e8_comptimeEnumFields> _1bc4bb50d_comptimeEnumFields(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc3863d9_comptimeEnumField> _1bc4bb794_comptimeEnumField(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc38b059_comptimeParams> _1bc4bba2a_comptimeParams(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc389200_comptimeParam> _1bc4bbcb1_comptimeParam(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc37e437_comptimeRange> _1bc4bc047_comptimeRange(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc38c8b8_comptimeTypeInfos> _1bc4bc2cd_comptimeTypeInfos(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc38e337_comptimeTypeInfo> _1bc4bc564_comptimeTypeInfo(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc38496a_comptimeStatics> _1bc4bc7ea_comptimeStatics(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc3831b6_comptimeStatic> _1bc4bca81_comptimeStatic(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc39543c_comptimeValue> _1bc4bcd17_comptimeValue(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc39da2d_comptimeDecl> _1bc4bd09d_comptimeDecl(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc39b740_comptimeDecls> _1bc4bd334_comptimeDecls(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc399b17_comptimeFile> _1bc4bd5ba_comptimeFile(_1bc4b64e7_Type* _self_);
inline jule::Ptr<_1bc398198_comptimeFiles> _1bc4bd851_comptimeFiles(_1bc4b64e7_Type* _self_);
inline jule::Bool _1bc4be0b0_checked(_1bc4bdc08_TypeSym* _self_);
inline jule::Str _1bc4be984_Str(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4becc5_Equal(jule::Ptr<_1bc4be610_Prim> _self_, jule::Ptr<_1bc4b64e7_Type> _51418_other);
inline jule::Bool _1bc4c026a_IsConstraint(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c0501_IsI8(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c0787_IsI16(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c0a1d_IsI32(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c0ca4_IsI64(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c103a_IsU8(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c12c1_IsU16(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c1557_IsU32(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c17dd_IsU64(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c1a74_IsF32(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c1d0a_IsF64(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c2091_IsInt(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c2327_IsUint(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c25ad_IsUintptr(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c2844_IsBool(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c2aca_IsStr(_1bc4be610_Prim* _self_);
inline jule::Bool _1bc4c2d61_IsAny(_1bc4be610_Prim* _self_);
inline jule::Str _1bc4c34e3_Str(_1bc4c313b_Sptr* _self_);
inline jule::Bool _1bc4c3834_Equal(jule::Ptr<_1bc4c313b_Sptr> _self_, jule::Ptr<_1bc4b64e7_Type> _59118_other);
inline jule::Str _1bc4c40c6_Str(_1bc4c3b0e_Slc* _self_);
inline jule::Bool _1bc4c4417_Equal(jule::Ptr<_1bc4c3b0e_Slc> _self_, jule::Ptr<_1bc4b64e7_Type> _61018_other);
inline jule::Str _1bc4c4aaa_Str(_1bc4c4703_Tuple* _self_);
inline jule::Bool _1bc4c4deb_Equal(jule::Ptr<_1bc4c4703_Tuple> _self_, jule::Ptr<_1bc4b64e7_Type> _63918_other);
inline jule::Str _1bc4c565a_Str(_1bc4c52a3_Map* _self_);
inline jule::Bool _1bc4c599b_Equal(jule::Ptr<_1bc4c52a3_Map> _self_, jule::Ptr<_1bc4b64e7_Type> _67618_other);
inline jule::Str _1bc4c62d7_Str(_1bc4c5e30_Arr* _self_);
inline jule::Bool _1bc4c6628_Equal(jule::Ptr<_1bc4c5e30_Arr> _self_, jule::Ptr<_1bc4b64e7_Type> _70418_other);
inline jule::Str _1bc4c6caa_Str(_1bc4c6903_Ptr* _self_);
inline jule::Bool _1bc4c70eb_Equal(jule::Ptr<_1bc4c6903_Ptr> _self_, jule::Ptr<_1bc4b64e7_Type> _72818_other);
inline jule::Bool _1bc4c7470_IsUnsafe(_1bc4c6903_Ptr* _self_);
inline void _1bc4c9175_pushErr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc247014_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args);
inline void _1bc4c9373_allowBuiltin(_1bc4c88e4_typeChecker* _self_);
inline void _1bc4c9571_disallowBuiltin(_1bc4c88e4_typeChecker* _self_);
inline void _1c355cc80_pushReference(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc2810c5_StructIns>* _83237_t);
inline void _1c3560777_pushReference(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc309769_Trait>* _83237_t);
inline void _1bc4c9ad2_pushReferenceByKind(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc4b64e7_Type>* _84240_k);
inline void _1bc4ca000_pushCycleError(_1bc4c88e4_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1a95669ea_Builder* _85353_message);
inline jule::Bool _1bc4ca3eb_checkCrossCycle(_1bc4c88e4_typeChecker* _self_, jule::Any _87527_decl, _1a95669ea_Builder* _87543_message);
inline jule::Bool _1bc4ca7e7_checkIllegalCycles(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl);
inline jule::Trait _1bc4cabe3_fromTypeAlias(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _95930_decl, jule::Ptr<_1bc4b5705_TypeAlias>* _95962_ta);
inline jule::Ptr<_1bc30be20_Enum> _1bc4cb0de_fromEnum(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _103625_decl, jule::Ptr<_1bc30be20_Enum>* _103657_e);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc4cb4da_fromTypeEnum(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _104829_decl, jule::Ptr<_1bc30d62a_TypeEnum>* _104861_e);
inline jule::Ptr<_1bc309769_Trait> _1bc4cb8d6_fromTrait(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _106026_decl, jule::Ptr<_1bc309769_Trait>* _106058_t);
inline jule::Bool _1bc4cbcd2_checkStructIns(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc2810c5_StructIns>* _107335_ins, jule::Ptr<_1bc247014_Token>* _107357_errorToken);
inline void _1bc4cc08a_appendUsedStructReference(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc27d26a_Struct>* _109446_s);
inline jule::Ptr<_1bc2810c5_StructIns> _1bc4cc486_buildStructInstance(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _110740_decl, jule::Ptr<_1bc27d26a_Struct>* _110772_s);
inline jule::Ptr<_1bc2810c5_StructIns> _1bc4cc882_fromStructIns(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc2810c5_StructIns>* _115534_ins, jule::Ptr<_1bc247014_Token> _115555_token);
inline jule::Ptr<_1bc2810c5_StructIns> _1bc4ccc7d_fromStruct(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _117331_decl, jule::Ptr<_1bc27d26a_Struct>* _117363_s);
inline jule::Trait _1bc4cd0be_getDef(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _121727_decl);
inline jule::Trait _1bc4cd410_buildIdent(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl> _127830_decl);
inline jule::Trait _1bc4cd751_buildSubIdent(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> _128233_decl);
inline jule::Ptr<_1bc4c313b_Sptr> _1bc4cda92_buildSptrFromType(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc4b64e7_Type>* _131638_elem);
inline jule::Ptr<_1bc4c313b_Sptr> _1bc4cddd3_buildSptr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d9a9_SptrTypeDecl> _133029_decl);
inline jule::Ptr<_1bc4c6903_Ptr> _1bc4ce224_buildPtrFromType(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc4b64e7_Type>* _133937_elem);
inline jule::Ptr<_1bc4c6903_Ptr> _1bc4ce565_buildPtr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25e438_PtrTypeDecl> _135428_decl);
inline jule::Ptr<_1bc4c3b0e_Slc> _1bc4ce8a6_buildSlc(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25dd3e_SlcTypeDecl> _137128_decl);
inline jule::Ptr<_1bc4c5e30_Arr> _1bc4cebe7_buildArr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25ebca_ArrTypeDecl> _139228_decl);
inline jule::Ptr<_1bc4c52a3_Map> _1bc4d0038_buildMap(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc260428_MapTypeDecl> _144128_decl);
inline jule::Ptr<_1bc4c4703_Tuple> _1bc4d0379_buildTuple(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25e13b_TupleTypeDecl> _147330_decl);
inline jule::Bool _1bc4d06ba_checkFuncTypes(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc302113_FnIns>* _148635_f);
inline jule::Ptr<_1bc302113_FnIns> _1bc4d0a0b_buildFunc(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc26e69b_FnDecl> _150429_decl);
inline jule::Trait _1bc4d0d4c_buildNamespace(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d6ac_NamespaceTypeDecl> _153434_ns);
inline jule::Ptr<_1bc4b64e7_Type> _1bc4d118d_build(_1bc4c88e4_typeChecker* _self_, jule::Any* _155026_declKind);
inline jule::Ptr<_1bc4b64e7_Type> _1bc4d14ce_checkDecl(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _163830_decl);
inline jule::Bool static__1bc4d1e2a_prim(jule::Str* _166518_ident, jule::Ptr<_1bc4be610_Prim> _166530_t);
inline jule::Bool static__1bc4d229e_exist(jule::Str* _166919_ident, jule::Ptr<_1bc4b64e7_Type>* _166936_k);
inline void _1bcd87c31_stop(_1bcd8757c_scopeParser* _self_);
inline jule::Bool _1bcd87eb7_stopped(_1bcd8757c_scopeParser* _self_);
inline jule::Bool _1bcd8824d_finished(_1bcd8757c_scopeParser* _self_);
inline jule::Bool _1bcd884d4_isLastSt(_1bcd8757c_scopeParser* _self_);
inline void _1bcd88847_pushErr(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc247014_Token> _15423_token, jule::Str _15445_fmt);
inline void _1bcd88baa_pushSuggestion(_1bcd8757c_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args);
inline void _1bcd88e63_insertAsNext(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _16333_tokens);
inline jule::Ptr<_1bcd86bdb_stmt> _1bcd891e9_next(_1bcd8757c_scopeParser* _self_);
inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd895e5_buildScope(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _17331_tokens, jule::Ptr<_1bc247014_Token> _17360_end);
inline jule::Ptr<_1bc270856_VarDecl> _1bcd89936_buildVarSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _18431_tokens);
inline jule::Ptr<_1bc270c30_RetSt> _1bcd89c77_buildRetSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _19230_tokens);
inline jule::Ptr<_1bc2714a0_Iter> _1bcd8a0b8_buildWhileNextIter(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _20339_s);
inline jule::Ptr<_1bc271cca_WhileKind> _1bcd8a409_buildWhileIterKind(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _24839_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcd8a74a_getRangeKindKeysTokens(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _25443_toks);
inline jule::Ptr<_1bc270856_VarDecl> _1bcd8aa8b_buildRangeKindKey(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _26038_tokens);
inline jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _1bcd8adcc_buildRangeKindKeys(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _28639_parts);
inline void _1bcd8b240_setupRangeKindKeysPlain(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc2726d2_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1bc247014_Token>>* _29471_tokens);
inline void _1bcd8b5a3_setupRangeKindKeysExplicit(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc2726d2_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1bc247014_Token>>* _30974_tokens);
inline void _1bcd8b916_setupRangeKindKeys(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc2726d2_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1bc247014_Token>>* _31866_tokens);
inline jule::Ptr<_1bc2726d2_RangeKind> _1bcd8bdbc_buildRangeIterKind(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1bc247014_Token>>* _3278_exprTokens, jule::Ptr<_1bc247014_Token>* _32742_inToken);
inline jule::Any _1bcd8c2b8_buildCommonIterKind(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _34240_tokens, jule::Ptr<_1bc247014_Token>* _34266_errTok);
inline jule::Ptr<_1bc2714a0_Iter> _1bcd8c609_buildCommonIter(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _36935_tokens);
inline jule::Ptr<_1bc2714a0_Iter> _1bcd8c94a_buildIterSt(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _39932_st);
inline jule::Ptr<_1bc272aab_BreakSt> _1bcd8cc8b_buildBreakSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _40633_tokens);
inline jule::Ptr<_1bc272e85_ContSt> _1bcd8d0cc_buildContSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _42432_tokens);
inline jule::Ptr<_1bc27343b_If> _1bcd8d41d_buildIf(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _44228_tokens);
inline jule::Ptr<_1bc273815_Else> _1bcd8d75e_buildElse(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _47530_tokens);
inline jule::Ptr<_1bc273cbb_Conditional> _1bcd8daa0_buildIfElseChain(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _49936_tokens);
inline jule::Ptr<_1bc261c43_Expr> _1bcd8dde1_buildCoCallSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _52233_tokens);
inline jule::Ptr<_1bc26a3bc_GotoSt> _1bcd8e232_buildGotoSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _53832_tokens);
inline jule::Ptr<_1bc26a6b9_FallSt> _1bcd8e573_buildFallSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _55832_tokens);
inline jule::Ptr<_1bc274508_TypeAliasDecl> _1bcd8e8b4_buildTypeAliasSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _56837_tokens);
inline void _1bcd8ed8c_pushCaseExpr(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _57432_tokens, jule::Ptr<_1bc247014_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _57525_exprs);
inline __jule_tuple_sx_1bc261c43_Expr__jule_tuple_bool _1bcd90343_buildCaseExprs(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _59735_tokens, jule::Ptr<_1bc247014_Token>* _59765_colon, jule::Bool _59787_typeMatch);
inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd90684_buildCaseScope(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _63935_tokens);
inline __jule_tuple_x_1bc2749ae_Case__jule_tuple_bool _1bcd90a80_buildCase(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _66630_tokens, jule::Bool _66655_typeMatch);
inline __jule_tuple_sx_1bc2749ae_Case__jule_tuple_x_1bc273815_Else _1bcd90e7b_buildCases(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _68530_tokens, jule::Bool _68555_typeMatch);
inline jule::Ptr<_1bc2752c8_MatchCase> _1bcd912bc_buildMatchCase(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _71934_tokens);
inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd9160d_buildScopeSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _75232_tokens);
inline jule::Ptr<_1bc269ee3_LabelSt> _1bcd9194e_buildLabelSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _79533_tokens);
inline __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool _1bcd91c90_buildIdSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _81030_tokens);
inline jule::Ptr<_1bcda2597_assignInfo> _1bcd920d1_buildAssignInfo(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _82436_tokens);
inline jule::Ptr<_1bc26ad29_AssignLeft> _1bcd92422_buildAssignL(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _86933_tokens);
inline jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>> _1bcd92763_buildAssignLs(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _88034_parts);
inline __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool _1bcd92aa4_buildPlainAssign(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _88937_tokens);
inline jule::Bool _1bcd92ea0_buildDeclAssign1(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _94337_lefts, jule::Ptr<_1bc26b3ac_AssignSt>* _94366_assign);
inline __jule_tuple_x_1bc26b3ac_AssignSt__jule_tuple_bool _1bcd932e1_buildDeclAssign(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _99135_tokens);
inline __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool _1bcd93632_buildAssignSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _102534_tokens);
inline jule::Ptr<_1bc262617_UseExpr> _1bcd93973_buildUseExpr(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _103833_tokens);
inline jule::Any _1bcd93cb4_buildConstSt(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _105133_st);
inline jule::Any _1bcd94105_buildSt(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _107628_st);
inline void _1bcd94468_build(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _114026_tokens, jule::Ptr<_1bc26ca0c_ScopeTree>* _114056_s);
inline void _1bcd956ab_pushErr(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args);
inline void _1bcd95a1e_pushSuggestion(_1bcd94ea2_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args);
inline jule::Ptr<_1bc262837_TupleExpr> _1bcd95d60_buildTuple(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _2331_parts);
inline jule::Ptr<_1bc262bcd_LitExpr> _1bcd961a1_buildLit(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token> _3324_token);
inline jule::Any _1bcd96833_buildSingle(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token> _4431_token);
inline jule::Ptr<_1bc26355d_IdentExpr> _1bcd96b74_buildBindIdent(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _6135_tokens);
inline jule::Ptr<_1bc263d00_UnaryExpr> _1bcd96eb5_buildUnary(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _8030_tokens);
inline jule::Ptr<_1bc264d56_SubIdentExpr> _1bcd97306_buildObjSubIdent(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _10136_tokens);
inline jule::Ptr<_1bc26497c_NamespaceExpr> _1bcd97647_buildNamespace(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _11635_tokens);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcd97988_buildType(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _15030_tokens);
inline jule::Any _1bcd97cc9_buildSubIdent(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _16434_tokens);
inline jule::Ptr<_1bc2641c9_VariadicExpr> _1bcd9811a_buildVariadic(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _18633_tokens);
inline jule::Ptr<_1bc26200c_RangeExpr> _1bcd9845b_buildBetweenParentheses(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _19543_tokens);
inline jule::Ptr<_1bc2645a3_CastExpr> _1bcd9879c_tryBuildCast(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _20733_tokens);
inline void _1bcd98bba_pushArg(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1bc247014_Token>> _28152_tokens, jule::Ptr<_1bc247014_Token> _28177_errToken);
inline jule::Slice<jule::Ptr<_1bc261c43_Expr>> _1bcd9900b_buildArgs(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _29029_tokens);
inline jule::Ptr<_1bc26596c_FnCallExpr> _1bcd99803_buildFnCall(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token>* _35632_token, jule::Slice<jule::Ptr<_1bc247014_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1bc247014_Token>>* _35687_args);
inline jule::Any _1bcd99b44_buildParenthesesRange(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _36442_tokens);
inline jule::Ptr<_1bc2630a7_UnsafeExpr> _1bcd99e85_buildUnsafeExpr(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _38635_tokens);
inline jule::Ptr<_1bc26e69b_FnDecl> _1bcd9a2c6_buildAnonFn(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _40132_tokens);
inline jule::Any _1bcd9a617_buildUnsafe(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _41032_tokens);
inline void _1bcd9aa35_pushRangeLitPart(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _42036_part, jule::Ptr<_1bc247014_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _42135_parts);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcd9ad76_getBraceRangeLitExprParts(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _43145_tokens);
inline jule::Ptr<_1bc266462_FieldExprPair> _1bcd9b1b7_buildFieldExprPair(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _47338_tokens);
inline jule::Ptr<_1bc261c43_Expr> _1bcd9b508_buildStructLitExpr(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _48639_tokens);
inline jule::Slice<jule::Ptr<_1bc261c43_Expr>> _1bcd9b849_buildStructLitExprs(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _50140_tokens);
inline jule::Ptr<_1bc266c8c_StructLit> _1bcd9bb8a_buildTypedStructLiteral(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _51443_tokens);
inline jule::Ptr<_1bc261c43_Expr> _1bcd9becb_buildBraceLitPart(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _53838_tokens);
inline jule::Ptr<_1bc267243_BraceLit> _1bcd9c31c_buildBraceLit(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _55534_tokens);
inline jule::Any _1bcd9c65d_buildBraceRange(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _57436_tokens);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcd9c99e_getEnumerableParts(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _62638_tokens);
inline jule::Ptr<_1bc268299_SliceExpr> _1bcd9cce0_buildSlice(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _63330_tokens);
inline jule::Ptr<_1bc268c06_IndexingExpr> _1bcd9d296_buildIndexing(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1bc247014_Token>> _6567_tokens, jule::Ptr<_1bc247014_Token> _65636_errorToken);
inline jule::Ptr<_1bc269366_SlicingExpr> _1bcd9d8b2_buildSlicing(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1bc247014_Token>>* _67967_start, jule::Slice<jule::Ptr<_1bc247014_Token>>* _6808_to, jule::Ptr<_1bc247014_Token>* _68034_errorToken, jule::Ptr<_1bc247014_Token> _68065_end);
inline jule::Any _1bcd9dc03_buildBracketRange(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _69537_tokens);
inline jule::Any _1bcd9e044_buildExclRight(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _72035_tokens);
inline jule::Any _1bcd9e385_buildData(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _73830_tokens);
inline jule::Any _1bcd9e781_buildBinary(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _80732_tokens, jule::I32 _80757_i);
inline jule::Any _1bcd9eac2_build(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _83226_tokens);
inline jule::Any _1bcd9ee13_buildKind(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _84330_tokens);
inline jule::Ptr<_1bc261c43_Expr> _1bcda0254_buildFromTokens(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _85435_tokens);
inline void _1bcda5ab7_stop(_1bcda5787_parser* _self_);
inline jule::Bool _1bcda5d4d_stopped(_1bcda5787_parser* _self_);
inline void _1bcda626b_pushErr(_1bcda5787_parser* _self_, jule::Ptr<_1bc247014_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args);
inline void _1bcda65ce_pushSuggestion(_1bcda5787_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args);
inline jule::Ptr<_1bc261c43_Expr> _1bcda6920_buildExpr(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _17831_tokens);
inline jule::Ptr<_1bc25bd2b_Directive> _1bcda6c61_buildDirective(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _18234_tokens);
inline void _1bcda7019_pushDirective(_1bcda5787_parser* _self_, jule::Ptr<_1bc25bd2b_Directive> _19733_d);
inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcda7415_buildScope(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _21032_tokens, jule::Ptr<_1bc247014_Token> _21061_end);
inline __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool _1bcda78bb__buildType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err);
inline __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool _1bcda7d72_buildType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err);
inline jule::Ptr<_1bc274508_TypeAliasDecl> _1bcda81b3_buildTypeAliasDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _24240_tokens);
inline void _1bcda8526_buildVarTypeAndExpr(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc270856_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1bc247014_Token>>* _28264_tokens);
inline void _1bcda8889_buildVarCommon(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc270856_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1bc247014_Token>> _31558_tokens);
inline void _1bcda8bec_buildVarBegin(_1bcda5787_parser* _self_, jule::Ptr<_1bc270856_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1bc247014_Token>>* _33157_tokens);
inline jule::Ptr<_1bc270856_VarDecl> _1bcda903d_buildVar(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _35929_tokens);
inline jule::Ptr<_1bc269b19_GenericDecl> _1bcda937e_buildGeneric(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _37834_tokens);
inline jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _1bcda977a_buildGenerics(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _41535_tokens, jule::Ptr<_1bc247014_Token>* _41561_errorToken);
inline jule::Ptr<_1bc26d249_ParamDecl> _1bcda9abb_buildSelfParam(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _43534_tokens);
inline void _1bcda9ed9_paramTypeBegin(_1bcda5787_parser* _self_, jule::Ptr<_1bc26d249_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_1bc247014_Token>>* _47573_tokens);
inline void _1bcdaa34c_buildParamType(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc26d249_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1bc247014_Token>>* _49065_tokens);
inline void _1bcdaa6b0_buildParamBody(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc26d249_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1bc247014_Token>> _50364_tokens);
inline jule::Ptr<_1bc26d249_ParamDecl> _1bcdaaa01_buildParam(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _52331_tokens);
inline void _1bcdaaca9_checkParams(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>>* _56632_params);
inline jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>> _1bcdab1a5_buildParams(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _58633_tokens, jule::Bool _58658_method);
inline __jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool _1bcdab5a1_buildMultiRetType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _61639_tokens, jule::I32* _61669_i);
inline __jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool _1bcdab99c_buildRetType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _68734_tokens, jule::I32* _68764_i);
inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdabe53_buildFnPrototype(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method);
inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdac409_buildFn(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype);
inline void _1bcdac76c_buildBindUseDecl(_1bcda5787_parser* _self_, jule::Ptr<_1bc27585b_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1bc247014_Token>>* _83763_tokens);
inline void _1bcdacad0_parseUseDecl(_1bcda5787_parser* _self_, jule::Ptr<_1bc27585b_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1bc247014_Token>> _85058_tokens);
inline jule::Ptr<_1bc27585b_UseDecl> _1bcdacecb_buildUseDecl(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _88032_tokens, jule::Bool _88057_binded);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdad3c7_buildTypeEnumItemKind(jule::Ptr<_1bcda5787_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_1bc247014_Token>>* _89456_tokens);
inline jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>> _1bcdad718_buildTypeEnumItems(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _93140_tokens);
inline jule::Ptr<_1bc27785d_TypeEnumDecl> _1bcdada59_buildTypeEnumDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _95539_tokens);
inline jule::Ptr<_1bc261c43_Expr> _1bcdade55_buildEnumItemExpr(jule::Ptr<_1bcda5787_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_1bc247014_Token>>* _98252_tokens);
inline jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>> _1bcdae296_buildEnumItems(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _101436_tokens);
inline jule::Ptr<_1bc2768c3_EnumDecl> _1bcdae5d7_buildEnumDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _105135_tokens);
inline jule::Any _1bcdae928_buildNodeEnumDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _109639_tokens);
inline jule::Ptr<_1bc277b27_FieldDecl> _1bcdaec69_buildField(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _110531_tokens);
inline jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>> _1bcdb00aa_buildStructDeclFields(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _115442_tokens);
inline jule::Ptr<_1bc27851d_StructDecl> _1bcdb03eb_buildStructDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _116537_tokens);
inline void _1bcdb06a4_checkMethodReceiver(_1bcda5787_parser* _self_, jule::Ptr<_1bc26e69b_FnDecl>* _121336_f);
inline void _1bcdb0a17_buildTraitBody(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc278c5a_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1bc247014_Token>> _123260_tokens);
inline jule::Ptr<_1bc278c5a_TraitDecl> _1bcdb0d58_buildTraitDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _126436_tokens);
inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdb1199_buildBindFn(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _129432_tokens);
inline jule::Ptr<_1bc270856_VarDecl> _1bcdb14da_buildBindVar(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _130433_tokens);
inline jule::Ptr<_1bc27851d_StructDecl> _1bcdb182b_buildBindStruct(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _131736_tokens);
inline jule::Ptr<_1bc274508_TypeAliasDecl> _1bcdb1b6c_buildBindTypeAlias(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _133139_tokens);
inline jule::Ptr<_1bc27585b_UseDecl> _1bcdb1ead_buildBindUse(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _134133_tokens);
inline jule::Any _1bcdb22ee_buildBind(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _135231_tokens);
inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdb2640_getMethod(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _137631_tokens);
inline void _1bcdb29a3_parseImplBody(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc2793ba_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1bc247014_Token>>* _140557_tokens);
inline jule::Ptr<_1bc2793ba_Impl> _1bcdb2ce4_buildImpl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _143830_tokens);
inline jule::Any _1bcdb3135_buildNodeData(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _150935_tokens);
inline void _1bcdb33dd_applyFnMeta(_1bcda5787_parser* _self_, jule::Ptr<_1bc26e69b_FnDecl>* _154232_f);
inline void _1bcdb3696_applyMeta(_1bcda5787_parser* _self_, _1bc25b90d_Node* _154730_node);
inline void _1bcdb394e_pushUseDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc27585b_UseDecl>* _157233_decl);
inline jule::Bool _1bcdb3c90_pushMetaNodes(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _158035_tokens);
inline _1bc25b90d_Node _1bcdb40d1_parseNode(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _160031_st);
inline void _1bcdb4389_appendNode(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _162432_st);
inline void _1bcdb4862_removeRange(_1bcda5787_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_1bc247014_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges);
inline void _1bcdb4c80_pushWrongOrderCloseErr(_1bcda5787_parser* _self_, jule::Ptr<_1bc247014_Token>* _164639_t, jule::Slice<jule::Ptr<_1bc247014_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges);
inline void _1bcdb5258_pushRangeClose(_1bcda5787_parser* _self_, jule::Ptr<_1bc247014_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_1bc247014_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges);
inline void _1bcdb5511_checkRanges(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _167528_tokens);
inline void _1bcdb57b9_parse(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc24cab9_Fileset>* _170627_f);
inline void _1bcdb7018_pushErr(_1bcdb6941_typeBuilder* _self_, jule::Ptr<_1bc247014_Token> _3123_token, jule::Str _3145_fmt);
inline void _1bcdb737b_pushSuggestion(_1bcdb6941_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb7612_buildNamespace(_1bcdb6941_typeBuilder* _self_);
inline jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _1bcdb7898_buildGenerics(_1bcdb6941_typeBuilder* _self_);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcdb7b2e_identGenerics(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb7db5_buildIdent(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb814b_buildCppLink(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb83d2_buildFn(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb8668_buildPtr(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb88ee_buildSptr(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb8b85_buildSlc(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb8e1b_buildArr(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb91a2_buildMap(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb9438_buildEnumerable(_1bcdb6941_typeBuilder* _self_);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb96be_step(_1bcdb6941_typeBuilder* _self_);
inline __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool _1bcdb9955_build(_1bcdb6941_typeBuilder* _self_);
inline void _1bc5e6a23_pushErr(_1bc5e6490_directiveEval* _self_, jule::Ptr<_1bc247014_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args);
inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bc5e6e1e_splitOperans(_1bc5e6490_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1bc247014_Token>>* _3348_tokens);
inline jule::Bool _1bc5e7260_evalDirectiveIdent(_1bc5e6490_directiveEval* _self_, jule::Str _6430_ident);
inline jule::Bool _1bc5e75a1_evalDirectivePart(_1bc5e6490_directiveEval* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _7037_part);
inline jule::Bool _1bc5e7837_eval(_1bc5e6490_directiveEval* _self_);
inline jule::Bool _1bc5e3cc8_isPassFileAnnotation(_1bcdbaa44_Importer* _self_, jule::Str _5136_p);
inline jule::Ptr<_1bcdbaa44_Importer> static__1bcdbae73_New(_1bc5e4c52_CompileInfo _4516_info);
inline jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _1bcdbb209_AllPackages(_1bcdbaa44_Importer* _self_);
inline void _1bcdbb649_SetModPath(_1bcdbaa44_Importer* _self_, jule::Str _6226_path);
inline jule::Str _1bcdbb8d0_GetModPath(_1bcdbaa44_Importer* _self_);
inline jule::Str _1bcdbbc21_ModById(_1bcdbaa44_Importer* _self_, jule::I32 _7019_id);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bcdbc062_GetImport(_1bcdbaa44_Importer* _self_, jule::Str _7425_path);
inline __jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log _1bcdbc45d_ImportPackage(_1bcdbaa44_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod);
inline void _1bcdbc716_Imported(_1bcdbaa44_Importer* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo> _14128_imp);
inline __jule_tuple_bool__jule_tuple_s_1a9575ca1_Log _1bcdbcb45_isPassBuildDirectives(_1bcdbaa44_Importer* _self_, jule::Ptr<_1bc25aa50_AST>* _16842_file);
inline jule::Ptr<_1bcdc1b5a_ExprInspector> static__1bcdc1e8a_New(void);
inline void _1bcdc2243_args(_1bcdc1b5a_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args);
inline void _1bcdc24eb_inspect(_1bcdc1b5a_ExprInspector* _self_, jule::Any* _2828_m);
inline void _1bcdc285e_Inspect(_1bcdc1b5a_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f);
inline jule::Ptr<_1bcdcad73_Meta> static__1bcdcb24c_Collect(jule::Ptr<_1bcdbd492_IR> _7124_ir);
inline jule::Ptr<_1bcdc9c95_MetaRuntime> static__1bcdcb516_CollectRuntime(jule::Ptr<_1bcdbd492_IR>* _8032_ir);
inline jule::Ptr<_1bcdc90c4_MetaStrBuilder> static__1bcdcb7d0_CollectStrBuilder(jule::Ptr<_1bcdbd492_IR>* _10635_ir);
inline jule::Ptr<_1bcdca768_MetaMathCmplx> static__1bcdcba99_CollectMathCmplx(jule::Ptr<_1bcdbd492_IR>* _12334_ir);
inline jule::Ptr<_1bdc1ae37_ObjectDeadCode> static__1bdc1b421_new(jule::Ptr<_1bcdbd492_IR>* _2621_ir);
inline jule::Bool _1c68c713a_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc2810c5_StructIns>* _3227_t);
inline jule::Bool _1c68cdd89_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc302113_FnIns>* _3227_t);
inline jule::Bool _1c111a9b6_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc309769_Trait>* _3227_t);
inline jule::Bool _1c621a5b6_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc42dc12_Var>* _3227_t);
inline void _1c68c7ab9_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc2810c5_StructIns> _5232_t);
inline void _1c68d0077_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc302113_FnIns> _5232_t);
inline void _1c621258b_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc309769_Trait> _5232_t);
inline void _1c621dab4_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc42dc12_Var> _5232_t);
inline void _1bdc1bcc3_pushStructAsLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc2810c5_StructIns>* _6538_s);
inline void _1bdc1c07b_setReferencesAsLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3cab26_ReferenceStack>* _12141_rs);
inline void _1bdc1c334_inits(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3e0421_Package>* _17127_pkg);
inline void _1bdc1c5dc_collectLivePackage(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3e0421_Package>* _18540_pkg);
inline void _1bdc1c7da_collectLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_);
inline void _1bdc1ca93_removeDeadGlobals(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _26139_vars);
inline void _1bdc1cd4b_removeDeadFns(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc2ee055_Fn>>* _27335_funcs);
inline void _1bdc1d104_removeDeadStructs(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc27d26a_Struct>>* _29439_structs);
inline void _1bdc1d3ac_removeDeadTraits(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc309769_Trait>>* _31638_traits);
inline void _1bdc1d665_removeDeadsFile(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc305358_SymTab>* _33737_file);
inline void _1bdc1d91d_removeDeadsPackage(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3e0421_Package>* _34440_pkg);
inline void _1bdc1db1b_removeDeads(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_);
inline void _1bdc1dd19_elimanate(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_);
inline void _1bdc20579_optimizeChild(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3abd27_Scope>* _1935_s);
inline void _1bdc20832_optimizeBodyChildExceptional(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3abd27_Scope>* _2950_s);
inline void _1bdc20ada_optimizeBodyChild(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3abd27_Scope>* _3939_s);
inline void _1bdc20d93_optimizeExprModel(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Any* _4839_model);
inline void _1bdc21091_eliminateFollowed(_1bdc2005c_scopeDeadCode* _self_);
inline void _1bdc21349_pushGoto(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3aeed4_GotoSt> _6929_gt);
inline void _1bdc21602_pushLabel(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3ae874_Label> _7930_l);
inline void _1bdc218aa_optimizeRangeIter(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3adb5e_RangeIter> _9238_it);
inline void _1bdc21b63_optimizeWhileIter(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3ad213_WhileIter> _9738_it);
inline void _1bdc21e1b_optimizeInfIter(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3acc5c_InfIter> _10536_it);
inline void _1bdc221c4_optimizeConditional(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3ac960_Conditional> _10940_c);
inline void _1bdc2247c_optimizeMatch(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3b1557_Match> _12734_m);
inline void _1bdc22735_optimizeAssign(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3b0864_Assign> _14535_assign);
inline void _1bdc229dd_optimizeMultiAssign(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign> _15040_assign);
inline void _1bdc22c96_optimizeStmt(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Any _15933_st);
inline void _1bdc22e94_optimizeStmts(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_);
inline _1bdc245e4_exprDeadCode static__1bdc24a12_new(jule::Ptr<_1bdc2005c_scopeDeadCode>* _1421_s);
inline void _1bdc24cba_optimize(_1bdc245e4_exprDeadCode* _self_, jule::Any* _2025_model);
inline void _1bdade7de_pushVar(_1bdade349_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe);
inline jule::Bool _1bdadeb30_removeVar(_1bdade349_nils* _self_, jule::Uintptr _4825_var);
inline jule::Bool _1bdadee71_isSafe(_1bdade349_nils* _self_, jule::Uintptr _6322_var);
inline jule::Ptr<_1bdae1e40_scopeOptimizer> static__1bdae2506_new(jule::Ptr<_1bc3abd27_Scope> _2320_scope);
inline void _1bdae27ae_setCurrentStmt(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Any _3535_stmt);
inline void _1bdae29ac_removeCurrent(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_);
inline jule::Bool _1bdae2c43_isLastStmt(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_);
inline jule::Bool _1bdae2ec9_isIter(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_);
inline void _1bdae3282_optimizeData(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc48354c_Data> _6733_d);
inline void _1bdae353a_optimizeVar(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc42dc12_Var> _10032_v);
inline void _1bdae37e3_optimizeConditional(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3ac960_Conditional> _12140_c);
inline void _1bdae3c11_buildDefaultConstantTrueCase(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b2080_Case> _20449_case, jule::I32* _20473_i, jule::Ptr<_1bc3b1557_Match>* _20486_m);
inline void _1bdae3eb9_optimizeMatch(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b1557_Match> _23034_m);
inline void _1bdae4272_optimizeRangeIter(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3adb5e_RangeIter> _32238_it);
inline void _1bdae452a_optimizeWhileIter(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3ad213_WhileIter> _37938_it);
inline jule::Bool _1bdae486b_substr(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _38527_a);
inline jule::Bool _1bdae4bac_strAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _40530_a);
inline jule::Bool _1bdae4eed_sliceAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _41632_a);
inline void _1bdae52a6_optimizePostfix(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b03ad_Postfix> _42436_postfix);
inline jule::Bool _1bdae55e7_cmplxAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign>* _43133_assign);
inline void _1bdae58a0_optimizeAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _47335_assign);
inline __jule_tuple_bool__jule_tuple_bool _1bdae5be1_tryOptimizeSwap(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _60637_assign);
inline void _1bdae5e99_optimizeMultiAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign> _64540_assign);
inline void _1bdae6252_optimizeRet(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b2b1e_RetSt> _71832_r);
inline void _1bdae650a_optimizeStmt(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Any _74233_stmt);
inline void _1bdae67b3_optimizeChild(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3abd27_Scope> _77234_child);
inline void _1bdae6a6b_optimizeChildHard(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3abd27_Scope> _80838_child);
inline void _1bdae6c69_optimize(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_);
inline void static__1bdae9486_optimize(jule::Any* _2326_model);
inline void static__1bdae982c_optimizeData(jule::Any* _2730_model, jule::Ptr<_1bdb035c2_data>* _2759_d, jule::Ptr<_1bdae1e40_scopeOptimizer> _2773_s);
inline jule::Bool _1bdae9b6d_selfCmpCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _4028_m);
inline jule::Bool _1bdae9eae_boolCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _6925_m);
inline jule::Bool _1bdaea300_arrayCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _12225_m);
inline jule::Bool _1bdaea641_strCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _13424_m);
inline jule::Bool _1bdaea982_strConcat(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _19226_m);
inline jule::Bool _1bdaeae38_tryNeutralElement1(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _25035_m, jule::Ptr<_1bac25065_Const> _25066_c, jule::Ptr<_1bc2e1795_OperandExprModel>* _25092_nc);
inline jule::Bool _1bdaeb279_tryNeutralElement(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _30034_m);
inline void _1bdaeb532_checkBinaryForBoundary(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _31539_m);
inline void _1bdaeb7da_checkBinaryForNil(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _36734_m);
inline void _1bdaeba93_shift(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _40121_m);
inline void _1bdaebd4b_binary(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _41822_m);
inline void _1bdaec104_unary(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e2169_UnaryExprModel> _55721_m);
inline void _1bdaec3ac_structureLit(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e2a3d_StructLitExprModel> _60028_m);
inline void _1bdaec665_casting(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e33bd_CastingExprModel> _61623_m);
inline void _1bdaec9c8_args(_1bdae8e9c_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _63020_params, jule::Slice<jule::Any>* _63052_args);
inline void _1bdaecd3b_scope(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc3abd27_Scope>* _65522_s, jule::Bool _65539_child);
inline void _1bdaed0e4_optimizeStrBuilderCall(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _67139_m);
inline void _1bdaed39c_lenCall(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _68623_m);
inline void _1bdaed655_funcCall(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel> _72924_m);
inline void _1bdaed90d_indexing(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e4600_IndexingExprModel> _74324_m);
inline void _1bdaedbb6_anonFunc(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _76724_m);
inline void _1bdaeddb4_do(_1bdae8e9c_exprOptimizer* _self_);
inline void _1bdb00b85_pushVar(jule::Ptr<_1bdb006e0_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1bc4b64e7_Type> _2442_kind);
inline jule::Bool _1bdb00ec6_removeVar(_1bdb006e0_dynamic* _self_, jule::Uintptr _4925_var);
inline jule::Bool _1bdb013c2_isFits(_1bdb006e0_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_1bc4b64e7_Type> _6436_kind);
inline void _1bdb03da8_removeDeads(_1bdb035c2_data* _self_, jule::Ptr<_1bdb035c2_data>* _5228_other);
inline _1bdb02eea_dataCheckpoint _1bdb0413e_getCheckpoint(_1bdb035c2_data* _self_);
inline _1bdb02eea_dataCheckpoint _1bdb043c5_getMutCheckpoint(_1bdb035c2_data* _self_);
inline void _1bdb0467d_loadCheckpoint(_1bdb035c2_data* _self_, _1bdb02eea_dataCheckpoint _9534_c);
inline void _1bdb05d22_pushVar(_1bdb0587c_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize);
inline jule::Bool _1bdb06163_removeVar(_1bdb0587c_boundary* _self_, jule::Uintptr _5825_var);
inline jule::Bool _1bdb0655e_fitsMaxSize(_1bdb0587c_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr);
inline jule::Ptr<_1bdc25716_Optimizer> static__1bdc25bcd_New(jule::Ptr<_1bcdbd492_IR>* _2121_ir);
inline void _1bdc25e86_optimizeExpr(_1bdc25716_Optimizer* _self_, jule::Any* _2733_model);
inline void _1bdc2623e_optimizeGlobal(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc42dc12_Var>* _3135_v);
inline void _1bdc264e7_optimizeFunction(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc2ee055_Fn>* _3737_func);
inline void _1bdc267a0_optimizeStruct(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc27d26a_Struct>* _4735_s);
inline void _1bdc26a58_optimizeGlobals(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _6336_p);
inline void _1bdc26d11_optimizeFunctions(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _7138_p);
inline void _1bdc270b9_optimizeStructs(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _7936_p);
inline void _1bdc27372_optimizePackage(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _8736_p);
inline void _1bdc27570_Optimize(_1bdc25716_Optimizer* _self_);
inline _1bdedd79d_Time static__1bdeddb88_Unix(jule::U64 _9117_sec);
inline _1bdedd79d_Time static__1bdeddd97_Now(void);
inline _1bdedd0c7_AbsTime _1bdee0580_Abs(_1bdedd79d_Time* _self_);
inline jule::Ptr<_1bdc2983b_scopeCoder> static__1bdc2a034_new(jule::Ptr<_1bdeeab84_ObjectCoder>* _3721_oc);
inline void _1c6992029_iterHead(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin);
inline void _1bdc2a70a_rangeIndexIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter>* _9336_it);
inline void _1bdc2a9b3_rangeHashmapIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter>* _16038_it);
inline void _1bdc2ac6b_strRuneIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdadcb72_StrRuneIter> _24132_it);
inline void _1bdc2b024_ifCase(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ac245_If> _35327_i);
inline void _1bdc2b2cc_conditional(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ac960_Conditional> _36232_c);
inline void _1bdc2b585_infIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3acc5c_InfIter> _38228_it);
inline void _1bdc2b83d_whileIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ad213_WhileIter> _39930_it);
inline void _1bdc2bae6_rangeIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter> _43830_it);
inline void _1bdc2bd9e_cont(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adee4_ContSt> _45121_c);
inline void _1bdc2c157_label(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ae874_Label> _45622_l);
inline void _1bdc2c410_gotoSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3aeed4_GotoSt> _46123_gt);
inline void _1bdc2c6b8_postfix(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b03ad_Postfix> _46628_p);
inline void _1bdc2c971_assignLeft(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Any* _47332_model);
inline void _1bdc2cc29_shl(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _50424_a);
inline void _1bdc2ced2_shr(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _51024_a);
inline void _1bdc2d28a_divByZeroAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _51636_a);
inline void _1bdc2d763_operatorOverloadingAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _52247_s, jule::Ptr<_1bc2e1795_OperandExprModel>* _52273_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _5238_r, jule::U32 _52336_op);
inline void _1bdc2da1b_assign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _53727_a);
inline void _1bdc2dcc4_mapLookupAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _57037_a);
inline void _1bdc2e07c_multiAssignTup(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _60236_a);
inline void _1bdc2e335_multiAssignFn(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _67235_a);
inline void _1bdc2e5dd_multiAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign> _73132_a);
inline jule::Fn<void> _1bdc2e92e_matchExpr(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b1557_Match> _75730_m);
inline void _1bdc2ec92_case(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b1557_Match> _76725_m, jule::Ptr<_1bc3b2080_Case> _76746_c);
inline void _1bdc3004a_matchSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b1557_Match> _83728_m);
inline void _1bdc30303_fallSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b2778_FallSt> _89223_f);
inline void _1bdc305ab_breakSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ae3bd_BreakSt> _89724_b);
inline void _1bdc30864_setResult(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b2b1e_RetSt> _90630_r);
inline void _1bdc30b1c_retSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b2b1e_RetSt> _93426_r);
inline void _1bdc30dc5_var(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc42dc12_Var> _97024_v);
inline void _1bdc3117d_mutSlicing(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdadb8eb_MutSlicingExprModel> _97631_m);
inline void _1bdc31436_swap(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdada653_SwapExprModel> _99325_m);
inline void _1bdc316de_exceptionalForwarding(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdad9bc4_ExceptionalForwardingExprModel> _100142_m);
inline void _1bdc31997_st(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Any _100723_st);
inline void _1bdc31c50_scopeStmts(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3abd27_Scope>* _106332_s);
inline void _1bdc32008_scope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3abd27_Scope> _107226_s);
inline void _1bdc322b1_commonFuncScope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _108737_f);
inline void _1bdc32624_anonFuncScope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _112734_m, jule::Str _112761_ident);
inline void _1bdc328cc_funcScope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc302113_FnIns> _115930_f);
inline jule::Ptr<_1bdc35dca_exprCoder> static__1bdc362c6_new(jule::Ptr<_1bdeeab84_ObjectCoder>* _4921_oc);
inline void _1bdc3657e_string(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const>* _5524_c);
inline void _1bdc36837_boolean(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Bool _7024_b);
inline void _1bdc36a35_nilLit(jule::Ptr<_1bdc35dca_exprCoder> _self_);
inline jule::Bool _1bdc36d76_ftoaSpecialCases(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::F64* _8234_x);
inline void _1bdc3712e_float32(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const>* _9625_c);
inline void _1bdc373d7_float64(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const>* _11525_c);
inline void _1bdc37690_constant(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const> _13329_c);
inline void _1bdc37aad_operatorOverloadingUnary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _15746_s, jule::U32 _15767_op, jule::Any _15786_e);
inline void _1bdc37ecb_divByZeroBinary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc247014_Token>* _16933_op, jule::Ptr<_1bc2e1795_OperandExprModel>* _16957_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _16990_r);
inline void _1bdc386c4__unsafeBinary(jule::Ptr<_1bdc35dca_exprCoder> _self_, _1a95669ea_Builder* _20835_buf, jule::Str* _20859_l, jule::Str* _20868_r, jule::Ptr<_1bc4b64e7_Type>* _2098_lk, jule::Ptr<_1bc4b64e7_Type>* _20930_rk, jule::U32 _20947_op, jule::Str _20962_kind);
inline void _1bdc3897c_unsafeBinary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _27833_m);
inline void _1bdc38ce0_shl(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1795_OperandExprModel>* _29025_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _29058_r);
inline void _1bdc39153_shr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1795_OperandExprModel>* _31825_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _31858_r);
inline void _1bdc3940b_binary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _34627_m);
inline void _1bdc396b4_var(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc42dc12_Var> _37024_m);
inline void _1bdc3996c_structureIns(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2810c5_StructIns> _38633_m);
inline void _1bdc39c25_unary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e2169_UnaryExprModel> _39026_m);
inline void _1bdc39ecd_structureLit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e2a3d_StructLitExprModel> _42133_m);
inline void _1bdc3a286_allocStructure(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e2d3a_AllocStructLitExprModel> _46435_m);
inline void _1bdc3a53e_possibleRefExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _47232_expr);
inline void _1bdc3a95c_castTraitFromTrait(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e33bd_CastingExprModel>* _48640_m, jule::Ptr<_1bc309769_Trait> _48672_t1, jule::Ptr<_1bc309769_Trait> _48694_t2);
inline void _1bdc3ac15_casting(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e33bd_CastingExprModel> _49928_m);
inline void _1bdc3aebd_args(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _64626_m);
inline void _1bdc3b276_modelForCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _67733_expr);
inline void _1bdc3b52e_pushCallInf(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _69229_m);
inline jule::Bool _1bdc3b870_isWrapped(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _71531_m);
inline jule::Bool _1bdc3bbb1_writeReceiver(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _73934_m);
inline void _1bdc3be69_pureFuncCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _75234_m);
inline void _1bdc3c222_coFuncCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _84232_m);
inline void _1bdc3c585_writeUseExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _92034_f, jule::Ptr<_1bc48354c_Data> _92055_d);
inline void _1bdc3c8e8_funcCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional);
inline void _1bdc3cba1_slice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e4149_SliceExprModel> _102426_m);
inline void _1bdc3ce59_indexing(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e4600_IndexingExprModel> _105329_m);
inline void _1bdc3d212_unsafeIndexing(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadbee5_UnsafeIndexingExprModel> _110435_m);
inline void _1bdc3d4ba_anonFunc(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _112129_m);
inline void _1bdc3d773_mapExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e5359_MapExprModel> _115228_m);
inline void _1bdc3da2b_slicing(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e58dc_SlicingExprModel> _118728_m);
inline void _1bdc3dcd4_traitSub(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e5e70_TraitSubIdentExprModel> _120329_m);
inline void _1bdc3e08c_structureSub(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _121933_m);
inline void _1bdc3e345_array(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e7081_ArrayExprModel> _122826_m);
inline void _1bdc3e5ed_funcInsCommon(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc302113_FnIns> _127834_m);
inline void _1bdc3e8a6_funcIns(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc302113_FnIns> _128528_m);
inline void _1bdc3eb5e_tuple(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e737d_TupleExprModel> _129626_m);
inline void _1bdc3ee17_newCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e7d51_BuiltinNewCallExprModel> _130728_m);
inline void _1bdc401c0_printCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e767a_BuiltinPrintCallExprModel> _131930_m);
inline void _1bdc40478_printlnCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e7977_BuiltinPrintlnCallExprModel> _132832_m);
inline void _1bdc40731_panicCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> _133730_m);
inline void _1bdc409d9_errorCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _134530_m);
inline void _1bdc40c92_copyCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e9957_BuiltinCopyCallExprModel> _137729_m);
inline void _1bdc4104a_lenCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _138528_m);
inline void _1bdc41303_capCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e91a4_BuiltinCapCallExprModel> _140128_m);
inline void _1bdc415ab_deleteCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> _140631_m);
inline void _1bdc41864_makeCallSlice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel>* _143035_m);
inline void _1bdc41b1c_makeCallStr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel>* _145433_m);
inline void _1bdc41dc5_makeCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> _146529_m);
inline void _1bdc4217d_pushToSlice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadc3be_PushToSliceExprModel> _147332_m);
inline void _1bdc42436_appendToSlice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadc798_AppendToSliceExprModel> _153334_m);
inline void _1bdc426de_appendCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> _154131_m);
inline void _1bdc42997_sizeof(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ea12d_SizeofExprModel> _154927_m);
inline void _1bdc42c50_alignof(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ea7d2_AlignofExprModel> _155528_m);
inline void _1bdc43008_runeLit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ea9be_RuneExprModel> _156124_m);
inline void _1bdc432b1_structureStatic(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e6ba7_StructStaticIdentExprModel> _157536_m);
inline void _1bdc43569_backendEmit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ead43_BackendEmitExprModel> _157932_m);
inline void _1bdc43822_free(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2eb140_FreeExprModel> _159525_m);
inline void _1bdc43aca_strComp(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadb2d0_StrCompExprModel> _160428_m);
inline void _1bdc43d83_emptyCompare(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadaa2c_EmptyCompareExprModel> _162033_m);
inline void _1bdc4413b_unsafeDeref(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadce6e_UnsafeDerefExprModel> _162932_m);
inline void _1bdc443e4_unsafeCasting(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadd26b_UnsafeCastingExprModel> _164034_m);
inline void _1bdc4469c_strConcat(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdada235_StrConcatExprModel> _165730_m);
inline void _1bdc44955_model(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _167926_m);
inline jule::Bool _1bdc44c96_handleFieldByDefault(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc280525_FieldIns>* _178342_f);
inline void _1bdc4504e_initStructLit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _180435_s);
inline void _1bdc45307_fillCollectionByDefault(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4b64e7_Type>* _182645_elem);
inline void _1bdc455b0_initCollection(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4b64e7_Type>* _184136_elem);
inline void _1bdc45868_initArray(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4c5e30_Arr>* _185531_arr);
inline void _1bdc45b21_initExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4b64e7_Type> _186929_t);
inline jule::Ptr<_1bdc48717_TestCoder> static__1bdc48bbd_New(jule::Ptr<_1bdeeab84_ObjectCoder>* _2021_oc);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bdc48e54_findTestingPackage(jule::Ptr<_1bdc48717_TestCoder> _self_);
inline void _1bdc4920c_appendTest(jule::Ptr<_1bdc48717_TestCoder> _self_, jule::Ptr<_1bc302113_FnIns> _3531_f);
inline void _1bdc494b5_appendPackageTests(jule::Ptr<_1bdc48717_TestCoder> _self_, jule::Ptr<_1bc3e0421_Package>* _5040_p);
inline jule::Bool _1bdc4974b_readyTestingPackage(jule::Ptr<_1bdc48717_TestCoder> _self_);
inline void _1bdc49949_callTmReset(jule::Ptr<_1bdc48717_TestCoder> _self_);
inline void _1bdc49b47_callTmFailed(jule::Ptr<_1bdc48717_TestCoder> _self_);
inline void _1bdc49d45_callTmSkipped(jule::Ptr<_1bdc48717_TestCoder> _self_);
inline void _1bdc4a043_Serialize(jule::Ptr<_1bdc48717_TestCoder> _self_);
inline void static__1bdc4b8a2_writeIdentTo(_1a95669ea_Builder* _2630_buf, jule::Str* _2654_ident);
inline void static__1bdc4bc48_toOut(_1a95669ea_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr);
inline void static__1bdc4c199_toLocal(_1a95669ea_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident);
inline void static__1bdc4c485_func(_1a95669ea_Builder* _7722_buf, jule::Ptr<_1bc2ee055_Fn>* _7750_f);
inline void static__1bdc4c771_funcIns(_1a95669ea_Builder* _9525_buf, jule::Ptr<_1bc302113_FnIns>* _9553_f);
inline void static__1bdc4ca5c_traitDecl(_1a95669ea_Builder* _11027_buf, jule::Ptr<_1bc309769_Trait> _11050_t);
inline void static__1bdc4cd48_param(_1a95669ea_Builder* _11423_buf, jule::Ptr<_1bc2ec581_Param>* _11447_p);
inline void static__1bdc4d134_structure(_1a95669ea_Builder* _12927_buf, jule::Ptr<_1bc27d26a_Struct>* _12951_s);
inline void static__1bdc4d420_structureIns(_1a95669ea_Builder* _14030_buf, jule::Ptr<_1bc2810c5_StructIns>* _14054_s);
inline void static__1bdc4d70b_field(_1a95669ea_Builder* _14823_buf, jule::Ptr<_1bc27a377_Field>* _14847_f);
inline void static__1bdc4d9e7_var(_1a95669ea_Builder* _15821_buf, jule::Ptr<_1bc42dc12_Var> _15848_v);
inline void static__1bdc4dcd3_iterBegin(_1a95669ea_Builder* _18527_buf, jule::Uintptr _18550_it);
inline void static__1bdc4e0be_iterEnd(_1a95669ea_Builder* _19025_buf, jule::Uintptr _19048_it);
inline void static__1bdc4e3aa_iterNext(_1a95669ea_Builder* _19526_buf, jule::Uintptr _19549_it);
inline void static__1bdc4e696_label(_1a95669ea_Builder* _20023_buf, jule::Uintptr _20046_u);
inline void static__1bdc4e982_matchEnd(_1a95669ea_Builder* _20526_buf, jule::Uintptr _20549_m);
inline void static__1bdc4ec6d_caseBegin(_1a95669ea_Builder* _21027_buf, jule::Uintptr _21050_c);
inline jule::Ptr<_1bdeeab84_ObjectCoder> static__1bdeeb0e6_New(jule::Ptr<_1bcdbd492_IR>* _12021_ir, _1bdee83ce_SerializationInfo _12035_info);
inline void _1bdeeb39e_write(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Str _13322_s);
inline void _1bdeeb657_writeBytes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b);
inline void _1bdeeb855_addIndent(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1bdeeba53_doneIndent(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1bdeebc51_indent(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline jule::I32 _1bdeec092_findAnyType(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc4b64e7_Type>* _15633_t);
inline jule::I32 _1bdeec3d3_pushCoSpawn(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns> _16532_f);
inline jule::I32 _1bdeec724_pushDealloc(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc4b64e7_Type> _26832_t);
inline jule::Str _1bdeeca65_pushAnonFn(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _28432_m);
inline jule::I32 _1bdeecda6_pushAnyType(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc4b64e7_Type> _32632_t);
inline void _1bdeed15e_pushResultIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _42635_f);
inline void _1bdeed417_pushResult(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _44732_f);
inline void _1bdeed77a_pushAndWriteMaskMapper(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc309769_Trait> _46043_t1, jule::Ptr<_1bc309769_Trait> _46065_t2);
inline void _1bdeeda33_locInfo(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc247014_Token>* _51125_t);
inline void _1bdeedc31_head(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1bdeeded9_links(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Bool _57822_std);
inline void _1bdeee292_prepareStructure(_1bdeeab84_ObjectCoder* _self_, jule::Ptr<_1bc27d26a_Struct>* _60137_s);
inline void _1bdeee490_prepareStructures(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1bdeee748_structurePlainDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc27d26a_Struct>* _63240_s);
inline void _1bdeee946_structurePlainDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1bdeeebee_fieldDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc280525_FieldIns>* _64831_f);
inline void _1be00011c_structureOperatorEq(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_1bc2810c5_StructIns>* _65553_s, jule::Bool _65574_decl);
inline void _1be000480_structureOperators(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _72340_s, jule::Bool _72361_decl);
inline void _1be000738_structureInsDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _73238_s);
inline void _1be0009e1_structureDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc27d26a_Struct>* _75835_s);
inline void _1be000bde_structureDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be000ddc_structureMethodDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be0013b5_funcHead(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _79230_buf, jule::Ptr<_1bc302113_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident);
inline void _1be001728_funcDeclIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _81133_f, jule::Bool _81150_ptr);
inline void _1be001a8b_funcDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _81930_f, jule::Bool _81944_ptr);
inline void _1be001d44_funcDeclTrait(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _82535_f);
inline void _1be002042_funcDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be0022ea_traitDataTypeMethods(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bdee90e4_traitHash>* _84742_hash);
inline void _1be0024e8_traitDataTypes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be00285b_paramIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _87530_buf, jule::Ptr<_1bc300ead_ParamIns>* _87558_p);
inline void _1be002bbe_paramsIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _88131_buf, jule::Ptr<_1bc302113_FnIns>* _88159_f);
inline void _1be003032_varInitExpr(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc42dc12_Var>* _90233_v, jule::Fn<void> _90248_init);
inline void _1be0032da_var(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc42dc12_Var> _92024_v);
inline void _1be00364d_anonFuncInsDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _95137_m, jule::Str _95164_ident);
inline void _1be0039b1_anonFuncIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _95733_m, jule::Str _95760_ident);
inline void _1be003d24_funcIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns> _96728_f, jule::Str _96745_ident);
inline void _1be0040cc_func(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _97726_f);
inline void _1be004440_funcTrait(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _98327_s, jule::Ptr<_1bc302113_FnIns>* _98353_f);
inline __jule_tuple_x_1bc302113_FnIns__jule_tuple_bool _1be004781_findTraitMetMap(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _99837_m);
inline void _1be004ae4_traitWrapper(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc309769_Trait>* _101034_t, jule::Ptr<_1bc2ee055_Fn>* _101056_m);
inline void _1be004ce2_traitWrappers(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be005155_traitDataMethods(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bdee90e4_traitHash>* _107438_hash, jule::Ptr<_1bc2810c5_StructIns> _107456_s);
inline void _1be005573_traitData(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bdee90e4_traitHash>* _109231_hash, jule::I32 _109249_i, jule::Ptr<_1bc2810c5_StructIns>* _109262_s);
inline void _1be005771_traitDatas(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be00596e_globalDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be005b6c_decls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be005e25_structureMethods(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _115238_s);
inline void _1be0061cd_structureIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _115934_s);
inline void _1be006486_structure(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc27d26a_Struct>* _116531_s);
inline void _1be006684_structures(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be006882_funcs(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be006b3a_pushInit(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc3e0421_Package>* _120430_pkg);
inline void _1be006d38_anonHashes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be007036_initGlobals(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be007234_initCaller(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be007432_end(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be0076da_buildTraitHash(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc309769_Trait>* _127636_t);
inline void _1be0078d8_buildTraitHashes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be007c4b_insertBuf(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _130631_buf, jule::I32 _130654_pos);
inline void _1be007e49_implementRC(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be008147_serializeHead(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline void _1be008345_Serialize(jule::Ptr<_1bdeeab84_ObjectCoder> _self_);
inline jule::Str _1be00a39c_Str(_1be009eb2_customType* _self_);
inline jule::Bool _1be00a6dd_Equal(jule::Ptr<_1be009eb2_customType> _self_, jule::Ptr<_1bc4b64e7_Type> _2518_k);
inline jule::Ptr<_1be00aad9_typeCoder> static__1be00b139_new(jule::Ptr<_1bdeeab84_ObjectCoder>* _5021_oc);
inline void _1be00b49c_toType(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _5727_buf, jule::Str _5754_id);
inline void _1be00b810_prim(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _7125_buf, jule::Ptr<_1bc4be610_Prim> _7148_p);
inline void _1be00bb73_tuple(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _7626_buf, jule::Ptr<_1bc4c4703_Tuple> _7653_t);
inline void _1be00bed6_asSptr(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem);
inline void _1be00c349_sptr(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _9525_buf, jule::Ptr<_1bc4c313b_Sptr> _9552_sptr);
inline void _1be00c6ac_ptr(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _10224_buf, jule::Ptr<_1bc4c6903_Ptr> _10251_p);
inline void _1be00ca20_enumDecl(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _11329_buf, jule::Ptr<_1bc30be20_Enum> _11356_e);
inline void _1be00cd83_typeEnumDecl(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _11833_buf, jule::Ptr<_1bc30d62a_TypeEnum> _11860_e);
inline void _1be00d1e6_asSlice(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _12228_buf, jule::Ptr<_1bc4b64e7_Type> _12255_elem);
inline void _1be00d559_slice(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _12926_buf, jule::Ptr<_1bc4c3b0e_Slc> _12953_s);
inline void _1be00d8bc_mapType(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _13428_buf, jule::Ptr<_1bc4c52a3_Map> _13455_m);
inline void _1be00e093_structureIns(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _14733_buf, jule::Ptr<_1bc2810c5_StructIns> _14760_s);
inline void _1be00e406_array(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _17126_buf, jule::Ptr<_1bc4c5e30_Arr> _17153_a);
inline void _1be00eacc_paramIns(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _19429_buf, jule::Ptr<_1bc300ead_ParamIns>* _19457_p);
inline void _1be0102a3_funcInsResult(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _22634_s, jule::Ptr<_1bc302113_FnIns>* _22660_f);
inline void _1be010616_anonFunc(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _24429_buf, jule::Ptr<_1bc302113_FnIns> _24456_f);
inline void _1be010979_func(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _26525_buf, jule::Ptr<_1bc302113_FnIns> _26552_f);
inline void _1be010cdc_kind(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _27225_buf, jule::Ptr<_1bc4b64e7_Type> _27252_k);
inline jule::Ptr<_1be0136c4_resultCoder> static__1be013bd0_new(jule::Ptr<_1be00aad9_typeCoder>* _34021_tc);
inline void _1be014043_ptr(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _34424_s, jule::Ptr<_1bc4c6903_Ptr> _34449_p);
inline void _1be0143a6_sptr(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _34925_s, jule::Ptr<_1bc4c313b_Sptr> _34950_p);
inline void _1be014719_mapType(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _35428_s, jule::Ptr<_1bc4c52a3_Map> _35453_p);
inline void _1be014a7c_slice(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _36026_s, jule::Ptr<_1bc4c3b0e_Slc> _36051_slc);
inline void _1be014de0_arr(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _36524_s, jule::Ptr<_1bc4c5e30_Arr> _36549_arr);
inline void _1be015253_func(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _37125_s, jule::Ptr<_1bc302113_FnIns> _37150_f);
inline void _1be0155b6_tup(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _38424_s, jule::Ptr<_1bc4c4703_Tuple> _38449_tup);
inline void _1be015929_codeMut(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _39128_s, jule::Ptr<_1bc4b64e7_Type>* _39154_t);
inline void _1be015c8c_codeMut1(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _43829_s, jule::Ptr<_1bc4b64e7_Type>* _43855_t);
inline jule::Slice<jule::U8> _1be01609a_code(_1be0136c4_resultCoder* _self_, jule::Ptr<_1bc4b64e7_Type>* _44725_t);
inline jule::Str _1c6bd2654_Name(_1c6bd2368_Flag* _self_);
inline jule::Str _1c6bd2797_What(_1c6bd2368_Flag* _self_);
inline void _1c6bd28da_Reset(_1c6bd2368_Flag* _self_);
inline jule::I32 _1c6bd2a2d_Short(_1c6bd2368_Flag* _self_);
inline jule::Str _1c6bd5877_Name(_1c6bd5beb_Flag* _self_);
inline jule::Str _1c6bd5ed7_What(_1c6bd5beb_Flag* _self_);
inline void _1c6bd612a_Reset(_1c6bd5beb_Flag* _self_);
inline jule::I32 _1c6bd626d_Short(_1c6bd5beb_Flag* _self_);
inline jule::Str _1c6bd9084_Name(_1c6bd9408_Flag* _self_);
inline jule::Str _1c6bd96e4_What(_1c6bd9408_Flag* _self_);
inline void _1c6bd9837_Reset(_1c6bd9408_Flag* _self_);
inline jule::I32 _1c6bd997a_Short(_1c6bd9408_Flag* _self_);
inline jule::Str _1c6bdc7d5_Name(_1c6bdcb59_Flag* _self_);
inline jule::Str _1c6bdce45_What(_1c6bdcb59_Flag* _self_);
inline void _1c6bdd088_Reset(_1c6bdcb59_Flag* _self_);
inline jule::I32 _1c6bdd1cb_Short(_1c6bdcb59_Flag* _self_);
inline jule::Str _1c6be0ee2_Name(_1c6be1366_Flag* _self_);
inline jule::Str _1c6be1652_What(_1c6be1366_Flag* _self_);
inline void _1c6be1795_Reset(_1c6be1366_Flag* _self_);
inline jule::I32 _1c6be18d8_Short(_1c6be1366_Flag* _self_);
inline jule::Ptr<_1be0a7724_FlagSet> static__1be0a7a43_New(void);
inline jule::Trait _1be0a7ee9_FindFlag(_1be0a7724_FlagSet* _self_, jule::Str _7124_name);
inline jule::Trait _1be0a833a_FindFlagShort(_1be0a7724_FlagSet* _self_, jule::I32 _8129_name);
inline jule::Exceptional<jule::Slice<jule::Str>> _1be0a8912_Parse(_1be0a7724_FlagSet* _self_, jule::Slice<jule::Str> _11521_args);
inline jule::Ptr<_1c6be1366_Flag> _1c70800b7_addFlagCommon(_1be0a7724_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline jule::Ptr<_1c6bdcb59_Flag> _1c708918c_addFlagCommon(_1be0a7724_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what);
inline void _1c707c889_AddVar(_1be0a7724_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline void _1c70869a3_AddVar(_1be0a7724_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what);
inline __jule_tuple_i64__jule_tuple_bool _1c6c04137_parseInteger(_1be0aa1d8_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline __jule_tuple_u64__jule_tuple_bool _1c6c0bc11_parseInteger(_1be0aa1d8_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser);
inline jule::Str _1be0aaa35_getData(_1be0aa1d8_argParser* _self_);
inline jule::VoidExceptional _1be0aacaa_processFlag(_1be0aa1d8_argParser* _self_, jule::Trait* _21232_flag);
inline jule::VoidExceptional _1be0ab063_singleDash(_1be0aa1d8_argParser* _self_, jule::Str* _25227_arg);
inline jule::VoidExceptional _1be0ab31b_doubleDash(_1be0aa1d8_argParser* _self_, jule::Str* _26627_arg);
inline jule::VoidExceptional _1be0ab519_tryArg(_1be0aa1d8_argParser* _self_);
inline jule::VoidExceptional _1be0ab717_parse(_1be0aa1d8_argParser* _self_);
inline jule::Exceptional<jule::Slice<_1a9c2b05a_Dir>> static__1abb3d168_Read(jule::Str _1117_path);
inline jule::VoidExceptional static__1abb3d366_Create(jule::Str _3419_path);
inline jule::VoidExceptional static__1abb3d597_Remove(jule::Str _4519_path);
inline jule::Ptr<_1a9c2bb82_Cmd> static__1a9c2c0d3_New(jule::Str _3516_path);
inline jule::VoidExceptional _1a9c2c2d1_Spawn(_1a9c2bb82_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1a9c2c765_Wait(_1a9c2bb82_Cmd* _self_);
inline jule::VoidExceptional _1a9cc2aa2_spawn(_1a9c2bb82_Cmd* _self_);
inline jule::Exceptional<jule::I32> _1a9cc3036_wait(_1a9c2bb82_Cmd* _self_);
inline __jule_tuple_x_1bcdbd492_IR__jule_tuple_s_1a9575ca1_Log static__1bcdbd96a_Build(jule::Str _3018_path, jule::I32 _3029_flags);
inline void _1bcdbde54_appendStructs(_1bcdbd492_IR* _self_, jule::Ptr<_1bc3e0421_Package>* _6830_p, jule::Slice<jule::Ptr<_1bc27d26a_Struct>>* _6854_buffer);
inline jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _1bcdbe1da_GetAllStructures(_1bcdbd492_IR* _self_);
inline void _1bcdbe54d_appendGlobals(_1bcdbd492_IR* _self_, jule::Ptr<_1bc3e0421_Package>* _9130_p, jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _9154_buffer);
inline jule::Slice<jule::Ptr<_1bc42dc12_Var>> _1bcdbe7d4_GetAllGlobals(_1bcdbd492_IR* _self_);
inline void _1bcdbe9d2_Order(_1bcdbd492_IR* _self_);
inline void _1c17a029e_Free(void* _4520_ptr);
inline jule::Str _1c2ee9750_BytePtrToStr(jule::U8* _6524_s);
inline jule::Slice<jule::U8> _1c2ee99d6_StrToBytes(jule::Str _9015_s);
inline jule::I32 _1c174a337_GetLastErrno(void);
inline jule::I32 _1c3008e46_Fcntl(jule::I32 _5510_handle, jule::I32 _5523_cmd, jule::I32 _5533_arg);
inline jule::I32 _1c30092ba_Stat(jule::U8* _6016_path, struct stat* _6033_stat);
inline jule::I32 _1c30096e9_Open(jule::U8* _6516_path, jule::I32 _6529_flag, jule::I32 _6540_mode);
inline jule::U8* _1c3009a6d_Getcwd(jule::U8* _7118_buff, jule::U32 _7131_bufflen);
inline DIR* _1c300a068_Opendir(jule::U8* _7619_path);
inline struct dirent* _1c300a244_Readdir(DIR* _7923_dir);
inline jule::I32 _1c300a4db_Closedir(DIR* _8224_dir);
inline jule::I32 _1c300ade3_Mkdir(jule::U8* _9117_path, jule::I32 _9130_mode);
inline jule::I32 _1c300b1ac_Rmdir(jule::U8* _9617_path);
inline jule::I32 _1c300b476_Unlink(jule::U8* _9918_path);
inline jule::I32 _1c3043535_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n);
inline jule::I32 _1c304390e_Close(jule::I32 _2510_handle);
inline jule::I32 _1c3043cb6_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n);
inline void _1c3043ee7_Exit(jule::I32 _339_code);
inline jule::Str _1c3049a03_Str(jule::U8* _108_b, jule::I32 _1018_n);
inline jule::Slice<jule::U8> _1be141ba9_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap);
inline jule::Slice<jule::U8> _1c3060bb2_StrBytes(jule::Str _4013_s);
inline jule::Str _1c3060e48_BytesStr(jule::Slice<jule::U8> _4913_b);
inline jule::Str _1c3061212_StrFromBytes(jule::Slice<jule::U8> _5717_b);
inline __jule_tuple_i32__jule_tuple_int _1a952db16_DecodeRune(jule::Slice<jule::U8> _18215_p);
inline __jule_tuple_i32__jule_tuple_int _1a952de57_DecodeRuneStr(jule::Str _22918_s);
inline __jule_tuple_i32__jule_tuple_int _1a952e4a7_DecodeLastRuneStr(jule::Str _31722_s);
inline jule::Slice<jule::U8> _1a9530002_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r);
inline jule::Slice<jule::U8> _1a9530376_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r);
inline jule::I32 _1a9530909_RuneCountStr(jule::Str _47317_s);
inline jule::Bool _1a9530bc3_RuneStart(jule::U8 _51714_b);
inline jule::I32 _1a9784124_LeadingZeros64(jule::U64 _5919_x);
inline jule::I32 _1a978506a_TrailingZeros(jule::U32 _8118_x);
inline jule::I32 _1a9785950_TrailingZeros32(jule::U32 _10320_x);
inline jule::I32 _1a9785c19_TrailingZeros64(jule::U64 _11220_x);
inline jule::I32 _1a978b6e2_Len32(jule::U32 _35014_x);
inline jule::I32 _1a978b9ab_Len64(jule::U64 _36414_x);
inline __jule_tuple_u64__jule_tuple_u64 _1a978c748_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry);
inline __jule_tuple_u64__jule_tuple_u64 _1a978e052_Mul64(jule::U64 _49710_x, jule::U64 _49718_y);
inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args);
inline jule::U64 _1dae50eda_f64bits(jule::F64 _612_f);
inline jule::I32 _1dae9a100_randInt(jule::U64 _716_seed, jule::I32 _727_max);
inline jule::Bool _1be356eac_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1be3a556b_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1c04de154_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n);
inline jule::Bool _1c694a06a_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n);
inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b);
inline void _1c304854b__handleRW(jule::Slice<jule::U8>* _1615_b);
inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf);
inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf);
inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _4718_buf);
inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n);
inline jule::U32 _1be27e3ce_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo);
inline jule::U32 _1be27e599_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo);
inline jule::Str _1c30685d2_executable(void);
inline jule::U32* __jule_RCNew(void);
inline jule::U32 __jule_RCLoad(jule::U32* _4019_p);
inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p);
inline void __jule_RCAdd(jule::U32* _5722_p);
inline void __jule_RCAddAtomic(jule::U32* _6328_p);
inline jule::Bool __jule_RCDrop(jule::U32* _7523_p);
inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p);
inline void __jule_RCFree(jule::U32* _9219_p);
inline jule::Str __jule_ptrToStr(void* _1113_p);
inline jule::Str __jule_boolToStr(jule::Bool _3214_b);
inline jule::Str __jule_i64ToStr(jule::I64 _4113_x);
inline jule::Str __jule_u64ToStr(jule::U64 _5017_x);
inline jule::I32 _1c3072641_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x);
inline jule::Str __jule_f64ToStr(jule::F64 _8017_f);
inline jule::Str _1c704dc67_arrToStr(jule::Slice<jule::U8> _14216_x);
inline jule::Str _1c7043a70_structToStr(_1a95669ea_Builder _17519_x);
inline jule::Str _1be2ea35c_toStr(jule::Any _21613_x);
inline jule::Str _1be2ec53a_toStr(jule::Str _21613_x);
inline jule::Str _1be2ecc88_toStr(jule::I32 _21613_x);
inline jule::Str _1be3029e6_toStr(jule::I8 _21613_x);
inline jule::Str _1be30072a_toStr(jule::I16 _21613_x);
inline jule::Str _1be307e08_toStr(jule::I32 _21613_x);
inline jule::Str _1be30a8de_toStr(jule::I64 _21613_x);
inline jule::Str _1be30d43b_toStr(jule::U32 _21613_x);
inline jule::Str _1be30ae50_toStr(jule::Uintptr _21613_x);
inline jule::Str _1be311120_toStr(jule::U8 _21613_x);
inline jule::Str _1be313562_toStr(jule::U16 _21613_x);
inline jule::Str _1be3159a4_toStr(jule::U32 _21613_x);
inline jule::Str _1be317de6_toStr(jule::U64 _21613_x);
inline jule::Str _1be31b2c3_toStr(jule::F32 _21613_x);
inline jule::Str _1be31b647_toStr(jule::F64 _21613_x);
inline jule::Str _1be3082d2_toStr(jule::Bool _21613_x);
inline jule::Str _1c00ed7d0_toStr(jule::I32 _21613_x);
inline jule::Str _1c0107cb2_toStr(jule::I32 _21613_x);
inline jule::Str _1c013c313_toStr(jule::I32 _21613_x);
inline jule::Str _1c057d5bc_toStr(jule::I32 _21613_x);
inline jule::Str _1c0c0157a_toStr(jule::Ptr<_1bc42dc12_Var> _21613_x);
inline jule::Str _1c0c03b21_toStr(jule::Ptr<_1bc4b5705_TypeAlias> _21613_x);
inline jule::Str _1c0c075b4_toStr(jule::Ptr<_1bc27d26a_Struct> _21613_x);
inline jule::Str _1c0c0ad7b_toStr(jule::Ptr<_1bc2ee055_Fn> _21613_x);
inline jule::Str _1c0c0e940_toStr(jule::Ptr<_1bc309769_Trait> _21613_x);
inline jule::Str _1c0c13009_toStr(jule::Ptr<_1bc30be20_Enum> _21613_x);
inline jule::Str _1c0c165b2_toStr(jule::Ptr<_1bc30d62a_TypeEnum> _21613_x);
inline jule::Str _1c0c34adb_toStr(jule::Ptr<_1bc27a377_Field> _21613_x);
inline jule::Str _1c0c46bca_toStr(jule::Ptr<_1bac25065_Const> _21613_x);
inline jule::Str _1bbc94358_toStr(jule::Ptr<_1bc30b3b4_EnumItem> _21613_x);
inline jule::Str _1bbca5cd7_toStr(jule::Ptr<_1bc2ec581_Param> _21613_x);
inline jule::Str _1ad07d92b_toStr(jule::Str _21613_x);
inline jule::Str _1ad1224c5_toStr(jule::Ptr<_1bc25d019_IdentTypeDecl> _21613_x);
inline jule::Str _1ad1397a6_toStr(jule::Ptr<_1bc2e737d_TupleExprModel> _21613_x);
inline jule::Str _1ad13bbb5_toStr(jule::Ptr<_1bc262837_TupleExpr> _21613_x);
inline jule::Str _1ad14baa4_toStr(jule::Ptr<_1bc26b3ac_AssignSt> _21613_x);
inline jule::Str _1ad14eb51_toStr(jule::Ptr<_1bc261c43_Expr> _21613_x);
inline jule::Str _1ad14e227_toStr(jule::Ptr<_1bc3b03ad_Postfix> _21613_x);
inline jule::Str _1ad154a68_toStr(jule::Ptr<_1bc3b0864_Assign> _21613_x);
inline jule::Str _1ad15213c_toStr(jule::Ptr<_1bc3b0d1a_MultiAssign> _21613_x);
inline jule::Str _1ad15a255_toStr(jule::Ptr<_1bc48354c_Data> _21613_x);
inline jule::Str _1ad15d8a7_toStr(jule::Ptr<_1bc2e3c70_FnCallExprModel> _21613_x);
inline jule::Str _1ad1904cc_toStr(jule::Ptr<_1bc3ae874_Label> _21613_x);
inline jule::Str _1c110167d_toStr(jule::Ptr<_1bc3abd27_Scope> _21613_x);
inline jule::Str _1c0c76a84_toStr(jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _21613_x);
inline jule::Str _1c04043cc_toStr(jule::Ptr<_1bc2ead43_BackendEmitExprModel> _21613_x);
inline jule::Str _1c0404597_toStr(jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> _21613_x);
inline jule::Str _1c0c7b58e_toStr(jule::Ptr<_1bc2e767a_BuiltinPrintCallExprModel> _21613_x);
inline jule::Str _1bd53a647_toStr(jule::Ptr<_1bc2e7977_BuiltinPrintlnCallExprModel> _21613_x);
inline jule::Str _1bd53b901_toStr(jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> _21613_x);
inline jule::Str _1bd54261b_toStr(jule::Ptr<_1bc2e9957_BuiltinCopyCallExprModel> _21613_x);
inline jule::Str _1bd540e77_toStr(jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> _21613_x);
inline jule::Str _1bd543b39_toStr(jule::Ptr<_1bc2eb140_FreeExprModel> _21613_x);
inline jule::Str _1bd55275d_toStr(jule::Ptr<_1bc3ac960_Conditional> _21613_x);
inline jule::Str _1bd55d13c_toStr(jule::Ptr<_1bc3acc5c_InfIter> _21613_x);
inline jule::Str _1bd563e9a_toStr(jule::Ptr<_1bc3ad213_WhileIter> _21613_x);
inline jule::Str _1bd58b313_toStr(jule::Ptr<_1bc3adb5e_RangeIter> _21613_x);
inline jule::Str _1bd59ae27_toStr(jule::Ptr<_1bc271cca_WhileKind> _21613_x);
inline jule::Str _1bd59da95_toStr(jule::Ptr<_1bc2726d2_RangeKind> _21613_x);
inline jule::Str _1c0c827c6_toStr(jule::Ptr<_1bc3adee4_ContSt> _21613_x);
inline jule::Str _1bbd33c88_toStr(jule::Ptr<_1bc3aeed4_GotoSt> _21613_x);
inline jule::Str _1c040e2d8_toStr(jule::Ptr<_1bc26355d_IdentExpr> _21613_x);
inline jule::Str _1c0424694_toStr(jule::Ptr<_1bc2e4600_IndexingExprModel> _21613_x);
inline jule::Str _1c0ca3165_toStr(jule::Ptr<_1bc3b1557_Match> _21613_x);
inline jule::Str _1c0cb7201_toStr(jule::Ptr<_1bc3b2778_FallSt> _21613_x);
inline jule::Str _1c0cd32b6_toStr(jule::Ptr<_1bc3ae3bd_BreakSt> _21613_x);
inline jule::Str _1bbd6985c_toStr(jule::Ptr<_1bc3b2b1e_RetSt> _21613_x);
inline jule::Str _1be0431e8_toStr(jule::Ptr<_1bc26ca0c_ScopeTree> _21613_x);
inline jule::Str _1be0434a1_toStr(jule::Ptr<_1bc270856_VarDecl> _21613_x);
inline jule::Str _1be04872b_toStr(jule::Ptr<_1bc274508_TypeAliasDecl> _21613_x);
inline jule::Str _1be04c0ae_toStr(jule::Ptr<_1bc273cbb_Conditional> _21613_x);
inline jule::Str _1be0511e5_toStr(jule::Ptr<_1bc2714a0_Iter> _21613_x);
inline jule::Str _1be05378b_toStr(jule::Ptr<_1bc272e85_ContSt> _21613_x);
inline jule::Str _1be050854_toStr(jule::Ptr<_1bc269ee3_LabelSt> _21613_x);
inline jule::Str _1be05697b_toStr(jule::Ptr<_1bc26a3bc_GotoSt> _21613_x);
inline jule::Str _1be05d0ae_toStr(jule::Ptr<_1bc2752c8_MatchCase> _21613_x);
inline jule::Str _1be06158a_toStr(jule::Ptr<_1bc26a6b9_FallSt> _21613_x);
inline jule::Str _1be0653c4_toStr(jule::Ptr<_1bc272aab_BreakSt> _21613_x);
inline jule::Str _1be06796a_toStr(jule::Ptr<_1bc270c30_RetSt> _21613_x);
inline jule::Str _1be06b7a4_toStr(jule::Ptr<_1bc262617_UseExpr> _21613_x);
inline jule::Str _1c31d4d14_toStr(jule::Ptr<_1bc2793ba_Impl> _21613_x);
inline jule::Str _1c31d98eb_toStr(jule::Ptr<_1bc27851d_StructDecl> _21613_x);
inline jule::Str _1be06d92c_toStr(jule::Ptr<_1bc26e69b_FnDecl> _21613_x);
inline jule::Str _1c0cd771b_toStr(jule::Ptr<_1bc278c5a_TraitDecl> _21613_x);
inline jule::Str _1c0cdc4ce_toStr(jule::Ptr<_1bc2768c3_EnumDecl> _21613_x);
inline jule::Str _1c13b899a_toStr(jule::Ptr<_1bc27785d_TypeEnumDecl> _21613_x);
inline jule::Str _1c0d0abb2_toStr(jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _21613_x);
inline jule::Str _1c13c3774_toStr(jule::Ptr<_1bc2e2169_UnaryExprModel> _21613_x);
inline jule::Str _1c3216263_toStr(jule::Ptr<_1bc302113_FnIns> _21613_x);
inline jule::Str _1c049d1bd_toStr(jule::Ptr<_1bc260428_MapTypeDecl> _21613_x);
inline jule::Str _1c04a1a84_toStr(jule::Ptr<_1bc25e13b_TupleTypeDecl> _21613_x);
inline jule::Str _1c04abe24_toStr(jule::Ptr<_1bc25ebca_ArrTypeDecl> _21613_x);
inline jule::Str _1c35b1124_toStr(jule::Ptr<_1bc25dd3e_SlcTypeDecl> _21613_x);
inline jule::Str _1c04b1775_toStr(jule::Ptr<_1bc25e438_PtrTypeDecl> _21613_x);
inline jule::Str _1c32c7d6e_toStr(jule::Ptr<_1bc25d9a9_SptrTypeDecl> _21613_x);
inline jule::Str _1c36c815e_toStr(jule::Ptr<_1bc2641c9_VariadicExpr> _21613_x);
inline jule::Str _1c36cdde0_toStr(jule::Ptr<_1bc2e4149_SliceExprModel> _21613_x);
inline jule::Str _1c36e8e0a_toStr(jule::Ptr<_1bc266462_FieldExprPair> _21613_x);
inline jule::Str _1c370292a_toStr(jule::Ptr<_1bc267a6d_KeyValPair> _21613_x);
inline jule::Str _1c34403c1_toStr(jule::Ptr<_1bc26596c_FnCallExpr> _21613_x);
inline jule::Str _1c32e6464_toStr(jule::Ptr<_1bc2e2d3a_AllocStructLitExprModel> _21613_x);
inline jule::Str _1c330893d_toStr(jule::Ptr<_1bc2e33bd_CastingExprModel> _21613_x);
inline jule::Str _1c04c836e_toStr(jule::Ptr<_1bc2e6ba7_StructStaticIdentExprModel> _21613_x);
inline jule::Str _1c3318c8e_toStr(jule::Ptr<_1bc264d56_SubIdentExpr> _21613_x);
inline jule::Str _1c382ee53_toStr(jule::Ptr<_1bc2e2a3d_StructLitExprModel> _21613_x);
inline jule::Str _1c14b8b77_toStr(jule::Ptr<_1bc2ea9be_RuneExprModel> _21613_x);
inline jule::Str _1c14d070a_toStr(jule::Ptr<_1bc2810c5_StructIns> _21613_x);
inline jule::Str _1c39996a5_toStr(jule::Ptr<_1bc4b64e7_Type> _21613_x);
inline jule::Str _1c345ba4c_toStr(jule::Ptr<_1bc2e7081_ArrayExprModel> _21613_x);
inline jule::Str _1c110e955_toStr(jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> _21613_x);
inline jule::Str _1c37634d5_toStr(jule::Ptr<_1bc263d00_UnaryExpr> _21613_x);
inline jule::Str _1c376c8eb_toStr(jule::Ptr<_1bc25c90e_TypeDecl> _21613_x);
inline jule::Str _1c377116e_toStr(jule::Ptr<_1bc26497c_NamespaceExpr> _21613_x);
inline jule::Str _1c3778cc0_toStr(jule::Ptr<_1bc25d6ac_NamespaceTypeDecl> _21613_x);
inline jule::Str _1c333401d_toStr(jule::Ptr<_1bc2e58dc_SlicingExprModel> _21613_x);
inline jule::Str _1c36476b6_toStr(jule::Ptr<_1bc268299_SliceExpr> _21613_x);
inline jule::Str _1c3474ed8_toStr(jule::Ptr<_1bc2e5e70_TraitSubIdentExprModel> _21613_x);
inline jule::Str _1c33678c0_toStr(jule::Ptr<_1bc2e5359_MapExprModel> _21613_x);
inline jule::Str _1c38c5081_toStr(jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _21613_x);
inline jule::Str _1c33682c7_toStr(jule::Ptr<_1bc26200c_RangeExpr> _21613_x);
inline jule::Str _1c336b0dd_toStr(jule::Ptr<_1bc262bcd_LitExpr> _21613_x);
inline jule::Str _1c336ec07_toStr(jule::Ptr<_1bc2630a7_UnsafeExpr> _21613_x);
inline jule::Str _1c0d35c0e_toStr(jule::Ptr<_1bc268c06_IndexingExpr> _21613_x);
inline jule::Str _1c39d82b5_toStr(jule::Ptr<_1bc269366_SlicingExpr> _21613_x);
inline jule::Str _1c38c898b_toStr(jule::Ptr<_1bc2645a3_CastExpr> _21613_x);
inline jule::Str _1c38c545a_toStr(jule::Ptr<_1bc266c8c_StructLit> _21613_x);
inline jule::Str _1c36805cd_toStr(jule::Ptr<_1bc267243_BraceLit> _21613_x);
inline jule::Str _1c38cba27_toStr(jule::Ptr<_1bc26530c_BinaryExpr> _21613_x);
inline jule::Str _1c3538cc2_toStr(jule::Ptr<_1bc2e1c90_BinaryExprModel> _21613_x);
inline jule::Str _1c5e9d190_toStr(jule::Ptr<_1bc2e7d51_BuiltinNewCallExprModel> _21613_x);
inline jule::Str _1c5eb422d_toStr(jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> _21613_x);
inline jule::Str _1c3a4131d_toStr(jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _21613_x);
inline jule::Str _1c3a5b0e6_toStr(jule::Ptr<_1bc2e91a4_BuiltinCapCallExprModel> _21613_x);
inline jule::Str _1c60801c8_toStr(jule::Ptr<_1bc2ea12d_SizeofExprModel> _21613_x);
inline jule::Str _1c5eb7297_toStr(jule::Ptr<_1bc2ea7d2_AlignofExprModel> _21613_x);
inline jule::Str _1c67d5257_toStr(jule::Ptr<_1bdad9bc4_ExceptionalForwardingExprModel> _21613_x);
inline jule::Str _1c6817377_toStr(jule::Ptr<_1bdadcb72_StrRuneIter> _21613_x);
inline jule::Str _1c681c558_toStr(jule::Ptr<_1bdadb8eb_MutSlicingExprModel> _21613_x);
inline jule::Str _1c685345c_toStr(jule::Ptr<_1bdadc798_AppendToSliceExprModel> _21613_x);
inline jule::Str _1c6855c89_toStr(jule::Ptr<_1bdadc3be_PushToSliceExprModel> _21613_x);
inline jule::Str _1c685ca60_toStr(jule::Ptr<_1bdada653_SwapExprModel> _21613_x);
inline jule::Str _1c60dbeb0_toStr(jule::Ptr<_1bdadaa2c_EmptyCompareExprModel> _21613_x);
inline jule::Str _1c68eda02_toStr(jule::Ptr<_1bdadb2d0_StrCompExprModel> _21613_x);
inline jule::Str _1c33db845_toStr(jule::Ptr<_1bdada235_StrConcatExprModel> _21613_x);
inline jule::Str _1c68a6988_toStr(jule::Ptr<_1bdadbbe8_UnsafeBinaryExprModel> _21613_x);
inline jule::Str _1c669b805_toStr(jule::Ptr<_1bdadce6e_UnsafeDerefExprModel> _21613_x);
inline jule::Str _1c624117a_toStr(jule::Ptr<_1bdadad29_RefExprModel> _21613_x);
inline jule::Str _1c68a8847_toStr(jule::Ptr<_1bc2e2697_StructArgExprModel> _21613_x);
inline jule::Str _1c68b051e_toStr(jule::Ptr<_1bdadd26b_UnsafeCastingExprModel> _21613_x);
inline jule::Str _1c6a2edec_toStr(jule::Ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel> _21613_x);
inline jule::Str _1c6a426e5_toStr(jule::Ptr<_1bdadbee5_UnsafeIndexingExprModel> _21613_x);
inline jule::Str _1c6bc55c0_toStr(jule::Ptr<jule::Str> _21613_x);
inline jule::Str _1c703da9d_toStr(_1a95669ea_Builder _21613_x);
inline jule::Str _1c704a48e_toStr(jule::Slice<jule::U8> _21613_x);
inline jule::Str _1c70422cc_toStr(jule::Str _21613_x);
inline jule::Str _1c70529a2_toStr(jule::Str _21613_x);
inline void _1c30737da_rev(jule::Slice<jule::U8> _26912_b);
inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b);
inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes);
inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes);
inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s);
inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s);
inline jule::Str __jule_strFromByte(jule::U8 _7516_b);
inline jule::Str __jule_strFromRune(jule::I32 _8316_r);
inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen);
inline jule::I32 __jule_runeCount(jule::Str _10514_s);
inline void _1a9533940_handleRW(jule::Slice<jule::U8>* _814_b);
inline jule::Slice<jule::Str> _1a9533e4b_args(void);
inline jule::I32 _1a95344e0_strlen(jule::U8* _3122_p);
inline jule::Bool _1a9535810__coSpawn(void* _1520_func, void* _1535_args);
inline jule::U64 _1a96a3d57_hash128to64(_1a96a39a0_u128 _4316_sum);
inline jule::U64 _1a96a4165_fetch64(jule::Slice<jule::U8> _5312_bytes);
inline jule::U32 _1a96a442e_fetch32(jule::Slice<jule::U8> _5412_bytes);
inline jule::U64 _1a96a4770_shiftMix(jule::U64 _5513_z);
inline jule::U64 _1a96a4ab1_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v);
inline jule::U64 _1a96a4e35_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift);
inline jule::U64 _1a96a5364_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul);
inline jule::U64 _1a96a57e8_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n);
inline _1a96a39a0_u128 _1a96a5ba0_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1a96a39a0_u128 _10342_seed);
inline _1a96a39a0_u128 _1a96a62ee_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b);
inline _1a96a39a0_u128 _1a96a672d_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b);
inline _1a96a39a0_u128 _1a96a6b5c_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1a96a39a0_u128 _16048_seed);
inline jule::U64 _1a96a6e26_hash(jule::Slice<jule::U8> _23413_bytes);
inline jule::U64 _1a97936c7_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h);
inline jule::U64 _1a97939d5_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m);
inline jule::U32 _1a9793c9e_nextMatch(jule::U64* _6419_b);
inline jule::U64 _1a97940e0_hasZeroByte(jule::U64 _7016_x);
inline jule::U64 _1a9794376_castU64(jule::Array<jule::I8,8>* _7419_m);
inline jule::I32 _1a9794640_numGroups(jule::I32 _7914_n);
inline jule::Array<jule::I8,8> _1a979484e_newEmptyMetadata(void);
inline __jule_tuple_u64__jule_tuple_i8 _1a9794c28_splitHash(jule::U64 _9414_h);
inline jule::U32 _1a9795025_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups);
inline jule::U32 _1a9795399_fastModN(jule::U32 _10313_x, jule::U32 _10321_n);
inline __jule_tuple_int__jule_tuple_bool _1a9c77826_AtoiBp(jule::U8* _722_b, jule::I32 _736_n);
inline jule::Str _1a9c81247_Itoa(jule::I32 _89_x);
inline jule::Str _1a9c8149a_Utoa(jule::U32 _1613_x);
inline void _1a9c816cb_rev(jule::Slice<jule::U8>* _3513_b);
inline jule::I32 _1a9cbd1a7_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b);
inline jule::I32 _1a9cbd85b_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b);
inline jule::I32 _1a9cbdbd0_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b);
inline jule::Str _1a9cce790_Getwd(void);
inline jule::Bool _1a98e9c4b_IsLetter(jule::I32 _7613_r);
inline jule::Bool _1abb2b486_is16(jule::Slice<_1abb296e8_Range16> _1919_ranges, jule::U16 _19128_r);
inline jule::Bool _1abb2b80a_is32(jule::Slice<_1abb29c26_Range32> _2289_ranges, jule::U32 _22828_r);
inline jule::Bool _1abb2c113_isExcludingLatin(jule::Ptr<_1abb2a199_RangeTable> _27821_rangeTab, jule::I32 _27844_r);
inline jule::Bool _1abb2c355_IsUpper(jule::I32 _29512_r);
inline jule::I32 _1abb2ca4d_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1abb29242_CaseRange> _31336_cr);
inline jule::Ptr<_1abb29242_CaseRange> _1abb2cdc2_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1abb29242_CaseRange> _33329_caseRange);
inline jule::I32 _1abb2d18b_SimpleFold(jule::I32 _37015_r);
inline jule::Str _1abb2d60e_Repeat(jule::Str _1111_s, jule::I32 _1123_n);
inline jule::Bool _1abb2d9c7_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub);
inline jule::Bool _1abb2dd4b_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub);
inline jule::I32 _1abb2e302_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i);
inline jule::I32 _1abb2e643_Find(jule::Str _549_s, jule::Str _5417_sub);
inline jule::I32 _1abb2ea72_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i);
inline jule::I32 _1abb2ede6_FindLast(jule::Str _8413_s, jule::Str _8421_sub);
inline jule::I32 _1abb316cd_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b);
inline jule::I32 _1abb31a52_FindRune(jule::Str _15513_s, jule::I32 _15521_r);
inline jule::I32 _1abb3247b_FindAny(jule::Str _18512_s, jule::Str _18520_runes);
inline jule::Slice<jule::Str> _1abb32b1e_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n);
inline jule::Slice<jule::Str> _1abb32e93_SplitAll(jule::Str _24413_s, jule::Str _24421_sub);
inline jule::Bool _1abb33317_Contains(jule::Str _24913_s, jule::Str _24921_sub);
inline jule::Bool _1abb33d84_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes);
inline jule::I32 _1abb34208_Count(jule::Str _27010_s, jule::Str _27018_sub);
inline jule::Str _1abb346e2_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n);
inline jule::Str _1abb34b21_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new);
inline jule::Str _1abb3589c_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset);
inline jule::Str _1abb35c21_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset);
inline jule::Str _1abb3632b_Trim(jule::Str _3819_s, jule::Str _38117_cutset);
inline jule::Str _1abb3665b_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep);
inline jule::Bool _1abb37d33_EqualFold(jule::Str _5518_s, jule::Str _5530_t);
inline jule::Str _1abb3984b_Clean(jule::Str _10914_path);
inline jule::Str _1abb39e23_FromSlash(jule::Str _21214_path);
inline jule::Str _1abb3a264_Join(jule::Slice<jule::Str> _2269_elem);
inline jule::Str _1abb3a4ea_Ext(jule::Str _2318_path);
inline __jule_tuple_str__jule_tuple_bool _1abb3a7b4_Abs(jule::Str _2468_path);
inline jule::Str _1abb3aa7d_Base(jule::Str _25213_path);
inline jule::Str _1abb3ae57_Dir(jule::Str _2838_path);
inline jule::Str _1abb3b199_VolumeName(jule::Str _30115_path);
inline jule::Bool _1abb3c046_IsPathSep(jule::U8 _4814_c);
inline jule::Bool _1abb3c354_IsAbs(jule::Str _5310_path);
inline jule::I32 _1abb3c61d_volumeNameLen(jule::Str _5918_path);
inline __jule_tuple_str__jule_tuple_bool _1abb3c95e_abs(jule::Str _638_path);
inline jule::Str _1abb3cbe5_join(jule::Slice<jule::Str> _749_elem);
inline jule::Slice<char*> _1a9cc2266_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs);
inline jule::I32 _1a9cc25da_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv);
inline jule::VoidExceptional _1a9cc281b_setenv(jule::Slice<jule::Str>* _5712_envv);
inline jule::I32 _1a9cc33bb_cmdErrorFromCode(jule::I32 _15121_code);
inline jule::I32 _1a9cc35ca_getLastCmdError(void);
inline void _1a9cd29e6_Exit(jule::I32 _119_code);
inline jule::Str _1a9cd2c5a_Executable(void);
inline jule::Slice<jule::Str> _1a9cd2e25_Args(void);
inline jule::Exceptional<jule::Str> _1a9cd3387_Getwd(void);
inline jule::I32 _1a9cd8711_getLastFsError(void);
inline jule::I32 _1a9cd8c1c_getLastOsError(void);
inline jule::Bool _1a982c82c_IsStdHeaderPath(jule::Str _2620_p);
inline jule::Bool _1a982cb07_IsValidHeaderExt(jule::Str _3121_ext);
inline jule::Bool _1a982cdc1_IsValidCppExt(jule::Str _4118_ext);
inline jule::Str _1a9576213_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args);
inline jule::Str _1a9576521_argToStr(jule::Any _32613_arg);
inline jule::I32 _1a95767da_findNextFmt(jule::Str _33916_fmt);
inline jule::Str _1a9576ba3_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args);
inline jule::Bool _1a9577b4e_IsTopDirective(jule::Str _2319_directive);
inline jule::Bool _1a95790b2_IsWindows(jule::Str _3714_os);
inline jule::Bool _1a95793c0_IsDarwin(jule::Str _4013_os);
inline jule::Bool _1a9579689_IsLinux(jule::Str _4312_os);
inline jule::Bool _1a95799ca_IsI386(jule::Str _4611_arch);
inline jule::Bool _1a9579c61_IsAmd64(jule::Str _4912_arch);
inline jule::Bool _1a957a02a_IsArm64(jule::Str _5212_arch);
inline jule::Bool _1a957a2e4_IsUnix(jule::Str _5511_os);
inline jule::Bool _1a957a6bd_Is32Bit(jule::Str _5812_arch);
inline jule::Bool _1a957a910_Is64Bit(jule::Str _6112_arch);
inline void _1abb3ec6e_init(void);
inline jule::U32 _1ac53cc65_F32Bits(jule::F32 _4112_f);
inline jule::F32 _1ac53d073_F32FromBits(jule::U32 _4716_b);
inline jule::U64 _1ac53d33c_F64Bits(jule::F64 _5212_f);
inline jule::F64 _1ac53d67d_F64FromBits(jule::U64 _5816_b);
inline __jule_tuple_f64__jule_tuple_int _1ac540be1_Frexp(jule::F64 _4714_f);
inline jule::F64 _1ac546158_NaN(void);
inline jule::Bool _1ac546466_IsNaN(jule::F64 _5210_f);
inline jule::F64 _1ac546730_Inf(jule::I32 _618_sign);
inline jule::Bool _1ac546ae8_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign);
inline __jule_tuple_f64__jule_tuple_int _1ac546db2_normalize(jule::F64 _8214_x);
inline jule::F64 _1ac548886_Log(jule::F64 _1118_x);
inline jule::F64 _1ac54926b_Abs(jule::F64 _438_x);
inline __jule_tuple_f64__jule_tuple_f64 _1ac550cde_Modf(jule::F64 _449_f);
inline jule::F64 _1ac5515e7_Log2(jule::F64 _449_x);
inline jule::Str _1ac57a1d1_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize);
inline jule::Slice<jule::U8> _1ac57a7b9_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize);
inline jule::Slice<jule::U8> _1ac57aec3_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1ac579004_floatInfo* _18824_flt);
inline jule::Slice<jule::U8> _1ac57b699_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1ac579b4d_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt);
inline void _1ac57bab7_roundShortest(_1ac59254a_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1ac579004_floatInfo* _26257_flt);
inline jule::Slice<jule::U8> _1ac57c15b_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1ac579b4d_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt);
inline jule::Slice<jule::U8> _1ac57c645_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1ac579b4d_decimalSlice _45637_d, jule::I32 _45654_prec);
inline jule::Slice<jule::U8> _1ac57cce9_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1ac579004_floatInfo* _48963_flt);
inline jule::Slice<jule::U8> _1ac57d47b_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1ac579004_floatInfo* _51232_flt);
inline jule::I32 _1ac57d800_min(jule::I32 _5968_a, jule::I32 _59616_b);
inline jule::I32 _1ac57db74_max(jule::I32 _6038_a, jule::I32 _60316_b);
inline jule::U8 _1ac57e812_lower(jule::U8 _4710_c);
inline __jule_tuple_u64__jule_tuple__1ab8d26e3_ConvError _1ac57ec85_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize);
inline jule::Exceptional<jule::U64> _1ac5801b4_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize);
inline jule::Exceptional<jule::I64> _1ac58066a_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize);
inline __jule_tuple_f64__jule_tuple_bool _1ac581308_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg);
inline __jule_tuple_f32__jule_tuple_bool _1ac5816e3_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg);
inline jule::I32 _1ac58341a_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ac583728_special(jule::Str _6912_s);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ac5839e2_readFloat(jule::Str* _10815_s);
inline __jule_tuple_f64__jule_tuple_bool _1ac58553d_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg);
inline __jule_tuple_f32__jule_tuple_bool _1ac58596c_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg);
inline __jule_tuple_f64__jule_tuple__1ab8d26e3_ConvError _1ac586011_atofHex(_1ac579004_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc);
inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError _1ac5863da_atof32(jule::Str _62111_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError _1ac58662c_atof64(jule::Str _67911_s);
inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError _1ac5869a1_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize);
inline jule::Exceptional<jule::F64> _1ac586d25_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize);
inline void _1ac587650_ryuFtoaFixed32(_1ac579b4d_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec);
inline void _1ac587ae5_ryuFtoaFixed64(_1ac579b4d_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec);
inline void _1ac588431_formatDecimal(_1ac579b4d_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec);
inline void _1ac588909_ryuFtoaShortest(_1ac579b4d_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1ac579004_floatInfo* _26168_flt);
inline jule::I32 _1ac588b90_mulByLog2Log10(jule::I32 _37719_x);
inline jule::I32 _1ac588e59_mulByLog10Log2(jule::I32 _38719_x);
inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ac589388_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1ac579004_floatInfo* _3963_flt);
inline void _1ac5899d7_ryuDigits(_1ac579b4d_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup);
inline void _1ac58eeb5_ryuDigits32(_1ac579b4d_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex);
inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ac5903e4_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q);
inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ac590823_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q);
inline jule::Bool _1ac590b97_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k);
inline __jule_tuple_u32__jule_tuple_u32 _1ac590e61_divmod1e9(jule::U64 _60214_x);
inline void _1ac593d98_trim(_1ac59254a_decimal* _27414_a);
inline void _1ac594184_rightShift(_1ac59254a_decimal* _28420_a, jule::U32 _28432_k);
inline jule::Bool _1ac59463a_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s);
inline void _1ac5948e3_leftShift(_1ac59254a_decimal* _35219_a, jule::U32 _35231_k);
inline jule::Bool _1ac594c67_shouldRoundUp(_1ac59254a_decimal* _39919_a, jule::I32 _39931_nd);
inline jule::Str _1ac59643e_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base);
inline jule::Str _1ac596807_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base);
inline jule::Str _1ac596ac1_Itoa(jule::I32 _819_i);
inline jule::Str _1ac596e12_small(jule::I32 _8610_i);
inline jule::Bool _1ac597198_isPowerOfTwo(jule::I32 _9617_x);
inline __jule_tuple_su8__jule_tuple_str _1ac59773c_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_);
inline void _1ac598e47_Throw(jule::Str _910_msg);
inline jule::Bool _1bc247751_IsUnaryOp(jule::U32 _33314_id);
inline jule::Bool _1bc247a5e_IsBinOp(jule::U32 _34312_id);
inline jule::Bool _1bc248169_IsStr(jule::Str _36310_k);
inline jule::Bool _1bc248400_IsRawStr(jule::Str _36613_k);
inline jule::Bool _1bc2486b9_IsRune(jule::Str _37011_k);
inline jule::Bool _1bc24909e_IsFloat(jule::Str _37912_k);
inline jule::Bool _1bc249368_IsNum(jule::Str _38710_k);
inline jule::Bool _1bc2498eb_IsIgnoreIdent(jule::Str _40218_ident);
inline jule::Bool _1bc249bb5_IsAnonIdent(jule::Str _40516_ident);
inline jule::Bool _1bc24a248_IsSpace(jule::I32 _41812_r);
inline jule::Bool _1bc24a743_IsLetter(jule::I32 _42813_r);
inline jule::Bool _1bc24abb6_IsKeyword(jule::Str _44814_s);
inline jule::Bool _1bc24ae80_IsDecimal(jule::I32 _45814_r);
inline jule::Bool _1bc24b249_IsBinary(jule::I32 _46113_r);
inline jule::Bool _1bc24b513_IsOctal(jule::I32 _46412_r);
inline jule::Bool _1bc24b7cc_IsHex(jule::I32 _46710_r);
inline jule::Bool _1bc24ba96_IsAssign(jule::U32 _48213_id);
inline jule::Bool _1bc24bd60_IsPostfixOp(jule::U32 _49416_id);
inline jule::Bool _1bc24c129_IsAssignOp(jule::U32 _50415_id);
inline _1a9575ca1_Log _1bc250b44_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1bc24cab9_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args);
inline jule::Bool _1bc25100c_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix);
inline jule::Str _1bc251381_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i);
inline jule::Str _1bc251749_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i);
inline jule::Str _1bc251abd_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i);
inline jule::Str _1bc251e42_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i);
inline jule::Str _1bc2522b6_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i);
inline jule::Str _1bc25274a_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i);
inline jule::Str _1bc25298c_commonNum(jule::Slice<jule::U8>* _21715_txt);
inline jule::Str _1bc252c56_binaryNum(jule::Slice<jule::U8>* _24015_txt);
inline jule::Bool _1bc2530ca_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i);
inline jule::Bool _1bc25344e_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i);
inline jule::Bool _1bc2537c3_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i);
inline jule::Bool _1bc253b47_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i);
inline jule::Bool _1bc253ebb_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i);
inline jule::Str _1bc2544b6_octalNum(jule::Slice<jule::U8>* _31914_txt);
inline jule::Str _1bc254692_hexNum(jule::Slice<jule::U8>* _36112_txt);
inline jule::Str _1bc2549e4_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n);
inline jule::Str _1bc254cad_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt);
inline jule::Str _1bc255077_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt);
inline jule::Str _1bc255341_hexByteEscape(jule::Slice<jule::U8>* _42219_txt);
inline jule::Str _1bc25560a_byteEscape(jule::Slice<jule::U8>* _42716_txt);
inline jule::Slice<_1a9575ca1_Log> _1bc25a5ee_Lex(jule::Ptr<_1bc24cab9_Fileset> _80712_f, jule::I32 _80725_mode);
inline void _1bc2de3a8_lshiftUnsig(_1bac25065_Const* _58821_c, _1bac25065_Const* _58832_x);
inline void _1bc2de6d8_rshiftUnsig(_1bac25065_Const* _59421_c, _1bac25065_Const* _59432_x);
inline jule::Str _1bc3745a3_RealKindOf(jule::Str _4515_kind);
inline jule::I32 _1bc37486c_BitSizeOf(jule::Str _5914_k);
inline jule::Str _1bc374bad_IntFromBits(jule::I32 _8716_bits);
inline jule::Str _1bc374e44_UintFromBits(jule::I32 _10517_bits);
inline jule::Str _1bc37520d_FloatFromBits(jule::I32 _12318_bits);
inline jule::Bool _1bc375d13_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit);
inline jule::I32 _1bc3760cc_BitSizeOfFloat(jule::F64 _16119_x);
inline jule::I32 _1bc376396_BitSizeOfInt(jule::I64 _17717_x);
inline jule::I32 _1bc376660_BitSizeOfUint(jule::U64 _19718_x);
inline void _1bc376808_UpdateTarget(void);
inline void _1bc37697e_init(void);
inline jule::I64 _1bc37a543_MinI(jule::Str _6113_k);
inline jule::I64 _1bc37a851_MaxI(jule::Str _7913_k);
inline jule::U64 _1bc37ab1a_MaxU(jule::Str _9713_k);
inline jule::F64 _1bc37ae5b_Min(jule::Str _11512_k);
inline jule::F64 _1bc37b1e2_Max(jule::Str _13312_k);
inline jule::Bool _1bc37c314_IsSigInt(jule::Str _2717_k);
inline jule::Bool _1bc37c622_IsUnsigInt(jule::Str _3619_k);
inline jule::Bool _1bc37c8db_IsInt(jule::Str _4610_k);
inline jule::Bool _1bc37cc2c_IsFloat(jule::Str _5112_k);
inline jule::Bool _1bc37ceb3_IsNum(jule::Str _5610_k);
inline jule::Bool _1bc37d27c_IsSigNum(jule::Str _6113_k);
inline jule::Bool _1bc4063b0_FindModuleFile(jule::Slice<_1a9c2b05a_Dir>* _1420_dirents);
inline jule::Str _1bc40668a_FindModuleFileDeep(jule::Str _2627_path);
inline jule::Slice<_1a9575ca1_Log> _1bc406954_CheckModuleFile(jule::Str* _4821_path);
inline jule::Bool _1bc4071e6_IsPub(jule::Str _910_ident);
inline jule::Bool _1bc46a0b1_IsAscii(jule::I32 _1112_r);
inline jule::I32 _1bc451a48_ToRune(jule::Str _2015_lit);
inline jule::Str _1bc46bed6_ToRawStr(jule::Str _3613_lit);
inline jule::Str _1bc46c327_ToStr(jule::Str _4714_lit);
inline __jule_tuple_u8__jule_tuple_bool _1bc46c5ad_tryBtoaCommonEsq(jule::Str _8321_s);
inline jule::I32 _1bc46c932_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i);
inline void _1bc46ccc8_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i);
inline jule::I32 _1bc52d2b7_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i);
inline jule::Slice<jule::U8> _1bc534d5c_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes);
inline void _1bc535148_FmtByDefault(_1a95669ea_Builder* _4822_buf, jule::Any* _4846_arg);
inline void _1bc535566_applyFmtByDefault(_1a95669ea_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args);
inline void _1bc535984_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1a95669ea_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args);
inline jule::Slice<jule::U8> _1bc535d08_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args);
inline jule::Str _1bc537ea3_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args);
inline jule::Ptr<_1bc2ee055_Fn> _1bb4732c9_runtimeFindFn(jule::Ptr<_1bc3dcb9e_ImportInfo>* _1023_runtime, jule::Str _1045_ident);
inline jule::Ptr<_1bc27d26a_Struct> _1bb473829_runtimeFindStruct(jule::Ptr<_1bc3dcb9e_ImportInfo>* _2327_runtime, jule::Str _2349_ident);
inline jule::Bool _1bc3043e0_parameterUsesGenerics(jule::Ptr<_1bc300ead_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _39546_generics);
inline jule::Ptr<_1bc48354c_Data> _1bc3a301b_buildAsComptimeMethodData(jule::Ptr<_1bc302113_FnIns>* _203035_f);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3a322a_findComptimePackage(jule::Ptr<_1bc409eeb_sema>* _203829_s);
inline jule::Ptr<_1bc48354c_Data> _1bc3a359e_buildComptimeTypeInfoData(jule::Ptr<_1bc409eeb_sema>* _204435_s, jule::Ptr<_1bc4b64e7_Type>* _204450_t);
inline jule::Ptr<_1bc48354c_Data> _1bc3a38e0_buildComptimeValue(jule::Ptr<_1bc48354c_Data>* _205228_d);
inline jule::Str _1bc3a6717_toStrConstraints(jule::Ptr<_1bc4b4b11_InsGeneric> _14321_g);
inline jule::Bool _1bc3a6ad0_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1bc4b64e7_Type>* _15434_g);
inline jule::Bool _1bc3a6d99_isBuiltinConstraint(jule::Str* _19325_ident);
inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3a9781_newScopeCheckerBase(jule::Ptr<_1bc409eeb_sema>* _3229_s, jule::Ptr<_1bc302113_FnIns> _3243_owner);
inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3a9b49_newScopeChecker(jule::Ptr<_1bc409eeb_sema>* _4025_s, jule::Ptr<_1bc302113_FnIns> _4039_owner);
inline jule::Ptr<_1bc3b30c5_scopeLabel> _1bc3a9ebd_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1bc3b448e_scopeChecker> _5037_scope);
inline jule::Slice<jule::Ptr<_1bc48354c_Data>> _1bc3aa30e_getDatasFromTupleData(jule::Ptr<_1bc48354c_Data>* _6231_d);
inline jule::Bool _1bc3aaa7e_checkMut(jule::Ptr<_1bc409eeb_sema>* _9718_s, jule::Ptr<_1bc48354c_Data>* _9729_left, jule::Ptr<_1bc48354c_Data> _9746_right, jule::Ptr<_1bc247014_Token> _9760_op);
inline jule::Bool _1bc3ab068_checkAssign(jule::Ptr<_1bc409eeb_sema>* _11621_s, jule::Ptr<_1bc48354c_Data>* _11636_left, jule::Ptr<_1bc48354c_Data> _11653_right, jule::Ptr<_1bc247014_Token> _11667_op);
inline jule::Bool _1bc3ab442_isValidAstStForNextSt(jule::Any* _13831_n);
inline jule::Bool _1bc3ab684_isValidStForNextSt(jule::Any* _14924_st);
inline jule::U32 _1bc3c6bdd_removeEqFromOp(jule::U32 _216519_op);
inline void _1bc3c6e1e_makeComptimeRange(jule::Ptr<_1bc48354c_Data>* _219427_d);
inline jule::Bool _1bc3c71d8_canComptimeMatch(jule::Ptr<_1bc48354c_Data>* _221726_d);
inline jule::Bool _1bc3c74a2_stmtIsDef(jule::Any* _222515_stmt);
inline jule::I32 _1bc3c7826_countMatchType(jule::Ptr<_1bc3b1557_Match>* _223720_m, jule::Ptr<_1bc4b64e7_Type>* _223732_t);
inline jule::Ptr<_1bc4bdc08_TypeSym> _1bc3cc4da_buildType(jule::Ptr<_1bc25c90e_TypeDecl> _6918_t);
inline jule::Ptr<_1bc4846c4_Value> _1bc3cc7e8_buildExpr(jule::Ptr<_1bc261c43_Expr> _7818_expr);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3ccab2_buildTypeAlias(jule::Ptr<_1bc274508_TypeAliasDecl> _8723_decl);
inline jule::Ptr<_1bc27a377_Field> _1bc3cce03_buildField(jule::Ptr<_1bc277b27_FieldDecl> _9819_decl);
inline jule::Slice<jule::Ptr<_1bc27a377_Field>> _1bc3cd189_buildFields(jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>>* _10921_decls);
inline jule::Ptr<_1bc27d26a_Struct> _1bc3cd453_buildStruct(jule::Ptr<_1bc27851d_StructDecl> _11720_decl);
inline jule::Ptr<_1bc2ec581_Param> _1bc3cd71c_buildParam(jule::Ptr<_1bc26d249_ParamDecl> _12919_decl);
inline jule::Slice<jule::Ptr<_1bc2ec581_Param>> _1bc3cdae6_buildParams(jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>>* _14021_decls);
inline jule::Ptr<_1bc2ebeba_RetType> _1bc3cdd38_buildRetType(jule::Ptr<_1bc260802_RetTypeDecl> _14821_decl);
inline jule::Ptr<_1bc2ee055_Fn> _1bc3ce102_buildFunc(jule::Ptr<_1bc26e69b_FnDecl> _15818_decl);
inline jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _1bc3ce3bb_buildMethods(jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>>* _17622_decls);
inline jule::Slice<jule::Ptr<_1bc4bdc08_TypeSym>> _1bc3ce685_buildTraitInherits(jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>* _18428_inherits);
inline jule::Ptr<_1bc309769_Trait> _1bc3ce94e_buildTrait(jule::Ptr<_1bc278c5a_TraitDecl> _19219_decl);
inline jule::Ptr<_1bc30b3b4_EnumItem> _1bc3cec18_buildEnumItem(jule::Ptr<_1bc275d12_EnumItemDecl> _20222_decl);
inline jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _1bc3ceed2_buildEnumItems(jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>>* _21024_decls);
inline jule::Ptr<_1bc30be20_Enum> _1bc3d04cc_buildEnum(jule::Ptr<_1bc2768c3_EnumDecl> _21818_decl);
inline jule::Ptr<_1bc30d053_TypeEnumItem> _1bc3d06a8_buildTypeEnumItem(jule::Ptr<_1bc2771ed_TypeEnumItemDecl> _22826_decl);
inline jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> _1bc3d0950_buildTypeEnumItems(jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>>* _23628_decls);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3d0c19_buildTypeEnum(jule::Ptr<_1bc27785d_TypeEnumDecl> _24422_decl);
inline jule::Ptr<_1bc42dc12_Var> _1bc3d0ed3_buildVar(jule::Ptr<_1bc270856_VarDecl> _25317_decl);
inline jule::Slice<jule::Ptr<_1bc42dc12_Var>> _1bc3d129c_buildVars(jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _27018_decls);
inline jule::Ptr<_1bc3a7718_Impl> _1bc3d1566_buildImpl(jule::Ptr<_1bc2793ba_Impl> _27818_decl);
inline jule::Bool _1bc3d7d86_isImplicitImport(jule::Ptr<_1bc3dcb9e_ImportInfo> _79121_imp);
inline jule::Ptr<_1bc305358_SymTab> _1bc3d9edc_findVarFileInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _4430_files, jule::Ptr<_1bc42dc12_Var>* _4449_v);
inline jule::Ptr<_1bc42dc12_Var> _1bc3da460_findVarInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3da88e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded);
inline jule::Ptr<_1bc27d26a_Struct> _1bc3dad45_findStructInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded);
inline jule::Ptr<_1bc2ee055_Fn> _1bc3db241_findFnInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded);
inline jule::Ptr<_1bc309769_Trait> _1bc3db5b5_findTraitInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _10328_files, jule::Str* _10347_ident);
inline jule::Ptr<_1bc30be20_Enum> _1bc3db939_findEnumInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _11527_files, jule::Str* _11546_ident);
inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3dbdbd_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _12731_files, jule::Str* _12750_ident);
inline jule::Bool _1bc3e28eb_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p);
inline jule::Bool _1bc4078ab_isValidModelForRef(jule::Any* _1528_m);
inline _1a9575ca1_Log _1bc407dd9_compilerErr(jule::Ptr<_1bc247014_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args);
inline void _1bc4081c5_appendRetVars(jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _6323_dest, jule::Ptr<_1bc302113_FnIns>* _6342_f);
inline void _1bc408505_appendParamVars(jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _9325_dest, jule::Ptr<_1bc302113_FnIns>* _9344_f);
inline void _1bc4087e1_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>* _15334_dest, jule::Ptr<_1bc302113_FnIns>* _15359_f);
inline jule::Ptr<_1bc305358_SymTab> _1bc408b65_findFile(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _19418_files, jule::Ptr<_1bc24cab9_Fileset>* _19437_handler);
inline void _1bc40900b_pushSuggestion(_1a9575ca1_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args);
inline void _1bc42bb66_pushImplemented(jule::Ptr<_1bc309769_Trait> _279824_t, jule::Ptr<_1bc27d26a_Struct>* _279840_d);
inline void _1bc42be52_pushImplements(jule::Ptr<_1bc27d26a_Struct>* _281624_s, jule::Ptr<_1bc309769_Trait> _281640_t);
inline void _1bc42c3a3_pushRuntimeToStr(jule::Ptr<_1bc409eeb_sema>* _283426_s, jule::Ptr<_1bc4b64e7_Type>* _283441_t, jule::Ptr<_1bc247014_Token>* _283456_token, jule::Ptr<_1bc3cab26_ReferenceStack> _28356_refers);
inline jule::Bool _1bc42c66c_isValidImpAlias(jule::Str _285224_alias);
inline jule::Bool _1bc46d427_traitHasReferenceReceiver(jule::Ptr<_1bc309769_Trait>* _1631_t);
inline jule::Bool _1bc46d7e0_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1bc48354c_Data>* _3133_d);
inline jule::Bool _1bc46db64_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1bc48354c_Data>* _3630_d);
inline jule::Bool _1bc46e02c_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1bc48354c_Data>* _5932_d);
inline jule::Bool _1bc46e3a1_intAssignable(jule::Str _8818_kind, jule::Ptr<_1bc48354c_Data>* _8830_d);
inline void _1bc47a896_checkMutRiskOfStructLit(jule::Ptr<_1bc409eeb_sema>* _90933_s, jule::Ptr<_1bc2e2a3d_StructLitExprModel>* _90944_m);
inline jule::Ptr<_1bc4b64e7_Type> _1bc4817ae_lenKind(void);
inline jule::Bool _1bc481b11_isGoodValueToInfer(jule::Ptr<_1bc48354c_Data>* _141424_d);
inline jule::Ptr<_1bc25bd2b_Directive> _1bc4acc6e_findDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _436623_directives, jule::Str _436654_d);
inline jule::Any _1bc4ad137_findBuiltinsImport(jule::Str* _437524_ident, jule::Ptr<_1bc3dcb9e_ImportInfo> _437536_imp);
inline void _1bc4ad368_fitBitsize(jule::Ptr<_1bc48354c_Data>* _438420_d);
inline void _1bc4ad698_makeStructLitAlloc(jule::Ptr<_1bc48354c_Data>* _441328_d, jule::Ptr<_1bc2e2a3d_StructLitExprModel>* _441343_lit);
inline jule::Ptr<_1bc42dc12_Var> _1bc4ada1c_buildErrorVar(jule::Ptr<_1bc3abd27_Scope>* _442423_s, jule::Ptr<_1bc26596c_FnCallExpr>* _442439_fc);
inline jule::Any _1bc4add91_findBuiltinsSema(jule::Str* _443922_ident, jule::Ptr<_1bc409eeb_sema> _443938_s);
inline jule::Bool _1bc4ae15a_isOkForShifting(jule::Ptr<_1bc48354c_Data>* _445425_d);
inline jule::Bool _1bc4ae534_isInstancedStruct(jule::Ptr<_1bc2810c5_StructIns> _447122_s);
inline jule::Bool _1bc4ae831_isPtrArithmeticCompatible(jule::Ptr<_1bc48354c_Data>* _447535_l, jule::Ptr<_1bc48354c_Data>* _447550_r);
inline void _1bc4aed3c_applyRuntimeToStr(jule::Ptr<_1bc409eeb_sema>* _449627_s, jule::Ptr<_1bc4b64e7_Type>* _449642_from, jule::Ptr<_1bc4b64e7_Type>* _449660_to, jule::Ptr<_1bc247014_Token>* _44977_token, jule::Ptr<_1bc3cab26_ReferenceStack> _449733_refers);
inline void _1bc4b0348_applyCastKindModel(jule::Ptr<_1bc409eeb_sema>* _451128_s, jule::Ptr<_1bc48354c_Data>* _451143_d, jule::Ptr<_1bc4b64e7_Type>* _451158_t, jule::Ptr<_1bc247014_Token>* _45127_token, jule::Ptr<_1bc3cab26_ReferenceStack> _451233_refers);
inline void _1bc4b0854_applyCastKind(jule::Ptr<_1bc409eeb_sema>* _452223_s, jule::Ptr<_1bc48354c_Data>* _452238_d, jule::Ptr<_1bc4b64e7_Type>* _452253_t, jule::Ptr<_1bc247014_Token>* _45237_token, jule::Ptr<_1bc3cab26_ReferenceStack> _452333_refers);
inline jule::Ptr<_1bc48354c_Data> _1bc4b0a63_buildVoidData(void);
inline jule::Str _1bc4b104c_checkDataForIntegerIndexing(jule::Ptr<_1bc409eeb_sema>* _453437_s, jule::Ptr<_1bc48354c_Data>* _453452_d, jule::Ptr<_1bc247014_Token>* _45357_token, jule::Ptr<_1bc3cab26_ReferenceStack> _453533_refers);
inline void _1bc4b1558_applyCastModelByEnum(jule::Ptr<_1bc409eeb_sema>* _456030_s, jule::Ptr<_1bc48354c_Data>* _456045_d, jule::Ptr<_1bc30be20_Enum> _456059_e, jule::Ptr<_1bc247014_Token>* _45617_token, jule::Ptr<_1bc3cab26_ReferenceStack> _456133_refers);
inline void _1bc4b1a75_castConstByType(jule::Str* _456821_t, jule::Ptr<_1bc48354c_Data>* _456834_d);
inline void _1bc4b1c51_updateModelToGenericIns(jule::Any* _460233_m, jule::Ptr<_1bc302113_FnIns>* _460252_f);
inline jule::Bool _1bc4b20c5_pushSubIdentFromExpr(jule::Any _461329_expr, jule::Ptr<_1bc25d2d3_SubIdentTypeDecl>* _461355_t);
inline jule::Str _1bc4b238e_constoa(jule::Ptr<_1bac25065_Const>* _463613_c);
inline jule::Ptr<_1bc48354c_Data> _1bc4b2933_evalEnumStatic(jule::Ptr<_1bc409eeb_sema>* _464724_s, jule::Ptr<_1bc30be20_Enum>* _464739_enm, jule::Ptr<_1bc30b3b4_EnumItem>* _464756_item, jule::Ptr<_1bc247014_Token>* _46487_token, jule::Ptr<_1bc3cab26_ReferenceStack> _464833_refers);
inline jule::Ptr<_1bc2e2a3d_StructLitExprModel> _1bc4b2bec_isLitBased(jule::Any* _466520_m);
inline void _1bc4b2ed8_makeImplicitDeref(jule::Ptr<_1bc48354c_Data>* _468227_d, jule::Ptr<_1bc247014_Token> _468241_baseToken);
inline void _1c3787284_updateRefer(jule::Ptr<_1bc3cab26_ReferenceStack> _469323_ref, jule::Ptr<_1bc302113_FnIns>* _469346_old, jule::Ptr<_1bc302113_FnIns>* _469359_new);
inline void _1bc4b366a_makeVariadic(jule::Ptr<_1bc48354c_Data>* _470122_d, jule::Ptr<_1bc4b64e7_Type> _470136_elem);
inline jule::Bool _1bc4b3a99_isVarCaptured(jule::Ptr<_1bc3b448e_scopeChecker> _471518_r, jule::Ptr<_1bc3b448e_scopeChecker> _471540_s, jule::Ptr<_1bc42dc12_Var> _471558_v);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc4b3e1d_findNamespace(jule::Trait _473222_lookup, jule::Str _473238_namespace);
inline jule::Bool _1bc4d269a_kindUsesGenerics(jule::Ptr<_1bc4b64e7_Type>* _172526_k, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _172537_generics);
inline jule::Bool _1bc4d2a63_hasDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _173522_directives, jule::Str _173553_tag);
inline jule::Bool _1bc4d2d2c_canGetPtr(jule::Ptr<_1bc48354c_Data>* _174419_d);
inline jule::Bool _1bc4d316d_isBuiltinStrConvertable(jule::Ptr<_1bc4b64e7_Type>* _174733_t);
inline jule::Ptr<_1bc4be610_Prim> _1bc4d3404_buildPrimType(jule::Str _175118_kind);
inline void _1bc4d3bc9_applyImplicitCast(jule::Ptr<_1bc409eeb_sema>* _177927_s, jule::Ptr<_1bc4b64e7_Type>* _177942_dest, jule::Ptr<_1bc48354c_Data>* _177960_d, jule::Ptr<_1bc247014_Token>* _17807_token, jule::Ptr<_1bc3cab26_ReferenceStack> _178033_refers);
inline jule::Bool _1bc4d40a3_validTypeForXof(jule::Ptr<_1bc4b64e7_Type>* _180925_t);
inline __jule_tuple_x_1bc305358_SymTab__jule_tuple_s_1a9575ca1_Log _1bc4d702e_buildSymbols(jule::Ptr<_1bc25aa50_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1bc3d1b2c_symBuilder> _1667_owner);
inline void _1bc4d735e_collectImplicitImports(jule::Ptr<_1bc409eeb_sema>* _3132_s, jule::Ptr<_1bc305358_SymTab>* _3147_file);
inline __jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log _1bc4d778d_analyzePackage(jule::Slice<jule::Ptr<_1bc25aa50_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags);
inline __jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log _1bc4d7c44_AnalyzePackage(jule::Slice<jule::Ptr<_1bc25aa50_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags);
inline jule::Ptr<_1bc302113_FnIns> _1bc538910_findBuiltinFunc(jule::Str* _2021_ident);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc538beb_primTypeAlias(jule::Ptr<_1bc4b64e7_Type>* _5723_k);
inline jule::Ptr<_1bc42dc12_Var> _1bc53c5a1_findBuiltinVar(jule::Str* _8520_ident);
inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc53c8e2_findBuiltinTypeAlias(jule::Str _13325_ident);
inline jule::Any _1bc53cb78_findBuiltinDef(jule::Str* _18820_ident);
inline jule::Any _1bc53ce42_findBuiltinDefStdMem(jule::Str* _20426_ident);
inline jule::Any _1bc53d20b_findBuiltinDefStdComptime(jule::Str* _22031_ident);
inline jule::Any _1bc53d5d5_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident);
inline jule::Any _1bc53d8d2_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident);
inline jule::Ptr<_1bc48354c_Data> _1bc53dc56_builtinCallerError(jule::Ptr<_1bc48551b_eval>* _27328_e, jule::Ptr<_1bc26596c_FnCallExpr>* _27343_fc);
inline jule::Ptr<_1bc48354c_Data> _1bc53e185_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _30428_e, jule::Ptr<_1bc26596c_FnCallExpr>* _30443_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc53e5b4_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _33130_e, jule::Ptr<_1bc26596c_FnCallExpr>* _33145_fc, jule::Ptr<_1bc48354c_Data>* _33172_d);
inline jule::Ptr<_1bc48354c_Data> _1bc53e9e3_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _34326_e, jule::Ptr<_1bc26596c_FnCallExpr>* _34341_fc, jule::Ptr<_1bc48354c_Data>* _34368_d);
inline jule::Ptr<_1bc48354c_Data> _1bc53ee22_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _39728_e, jule::Ptr<_1bc26596c_FnCallExpr>* _39743_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc540351_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _42327_e, jule::Ptr<_1bc26596c_FnCallExpr>* _42342_fc, jule::Ptr<_1bc48354c_Data>* _42369_d);
inline jule::Ptr<_1bc48354c_Data> _1bc5409b1_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _47429_e, jule::Ptr<_1bc26596c_FnCallExpr>* _47444_fc, jule::Ptr<_1bc48354c_Data>* _47471_d);
inline jule::Ptr<_1bc48354c_Data> _1bc540d8a_callerCopySlice(jule::Ptr<_1bc48354c_Data>* _59425_dest, jule::Ptr<_1bc48551b_eval>* _59443_e, jule::Ptr<_1bc26596c_FnCallExpr>* _59458_fc, jule::Ptr<_1bc48354c_Data>* _59485_d);
inline jule::Ptr<_1bc48354c_Data> _1bc5412b9_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _62827_e, jule::Ptr<_1bc26596c_FnCallExpr>* _62842_fc, jule::Ptr<_1bc48354c_Data>* _62869_d);
inline jule::Ptr<_1bc48354c_Data> _1bc54163d_callerLenSlice(jule::Ptr<_1bc48354c_Data>* _65324_expr, jule::Ptr<_1bc48354c_Data>* _65342_d);
inline jule::Ptr<_1bc48354c_Data> _1bc5419b2_callerLenMap(jule::Ptr<_1bc48354c_Data>* _66122_expr, jule::Ptr<_1bc48354c_Data>* _66140_d);
inline jule::Ptr<_1bc48354c_Data> _1bc541d36_callerLenArr(jule::Ptr<_1bc48354c_Data>* _66922_expr, jule::Ptr<_1bc48354c_Data>* _66940_d);
inline jule::Ptr<_1bc48354c_Data> _1bc5421aa_callerLenStr(jule::Ptr<_1bc48354c_Data>* _67622_expr, jule::Ptr<_1bc48354c_Data>* _67640_d);
inline jule::Ptr<_1bc48354c_Data> _1bc54252e_callerLenComptime(jule::Ptr<_1bc48354c_Data>* _68927_d, jule::I32 _68937_n);
inline jule::Ptr<_1bc48354c_Data> _1bc54295d_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _69626_e, jule::Ptr<_1bc26596c_FnCallExpr>* _69641_fc, jule::Ptr<_1bc48354c_Data>* _69668_d);
inline jule::Ptr<_1bc48354c_Data> _1bc542cd2_callerCapSlice(jule::Ptr<_1bc48354c_Data>* _73624_expr, jule::Ptr<_1bc48354c_Data>* _73642_d);
inline jule::Ptr<_1bc48354c_Data> _1bc543211_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _74426_e, jule::Ptr<_1bc26596c_FnCallExpr>* _74441_fc, jule::Ptr<_1bc48354c_Data>* _74468_d);
inline jule::Ptr<_1bc48354c_Data> _1bc5436ea_callerDeleteMap(jule::Ptr<_1bc48551b_eval>* _76725_e, jule::Ptr<_1bc26596c_FnCallExpr>* _76740_fc, jule::Ptr<_1bc48354c_Data>* _76767_expr, jule::Ptr<_1bc48354c_Data>* _76785_d);
inline jule::Ptr<_1bc48354c_Data> _1bc543b29_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _79629_e, jule::Ptr<_1bc26596c_FnCallExpr>* _79644_fc, jule::Ptr<_1bc48354c_Data>* _79671_d);
inline jule::Ptr<_1bc48354c_Data> _1bc544058_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _81940_e, jule::Ptr<_1bc26596c_FnCallExpr>* _81955_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc544487_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _85541_e, jule::Ptr<_1bc26596c_FnCallExpr>* _85556_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc5448b6_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _87538_e, jule::Ptr<_1bc26596c_FnCallExpr>* _87553_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc545037_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _88738_e, jule::Ptr<_1bc26596c_FnCallExpr>* _88753_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc545466_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _90039_e, jule::Ptr<_1bc26596c_FnCallExpr>* _90054_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc545895_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _91343_e, jule::Ptr<_1bc26596c_FnCallExpr>* _91358_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc545cc4_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _97335_e, jule::Ptr<_1bc26596c_FnCallExpr>* _97350_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc546203_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _99836_e, jule::Ptr<_1bc26596c_FnCallExpr>* _99851_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc546632_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _102333_e, jule::Ptr<_1bc26596c_FnCallExpr>* _102348_fc, jule::Ptr<_1bc48354c_Data>* );
inline jule::Ptr<_1bc48354c_Data> _1bc546a61_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _104644_e, jule::Ptr<_1bc26596c_FnCallExpr>* _104659_fc, jule::Ptr<_1bc48354c_Data>* _104686_d);
inline jule::Ptr<_1bcd36e55_FileInfo> _1bcd39c6b_ParseFile(jule::Ptr<_1bc24cab9_Fileset> _2318_f);
inline __jule_tuple_x_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log _1bcd850d5_parseFileset(jule::Ptr<_1bc24cab9_Fileset> _5521_f);
inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd85965_newScope(void);
inline __jule_tuple_bool__jule_tuple_bool _1bcd85cea_isSt(jule::Ptr<_1bc247014_Token> _149_current, jule::Ptr<_1bc247014_Token> _1433_prev);
inline jule::Bool _1bcd8616e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1bc247014_Token>>* _2026_tokens, jule::I32* _2052_i);
inline __jule_tuple_int__jule_tuple_bool _1bcd86537_nextStPos(jule::Slice<jule::Ptr<_1bc247014_Token>>* _3415_tokens, jule::I32 _3440_start);
inline __jule_tuple_sx_1bc247014_Token__jule_tuple_bool _1bcd868ab_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1bc247014_Token>> _9628_tokens);
inline jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _1bcd87093_splitStmts(jule::Slice<jule::Ptr<_1bc247014_Token>>* _11720_tokens);
inline jule::Bool _1bcda05d9_isTypeOp(jule::U32* _87114_id);
inline jule::Bool _1bcda08e7_isTypeRange(jule::Slice<jule::Ptr<_1bc247014_Token>>* _87821_tokens);
inline jule::Slice<jule::Ptr<_1bc247014_Token>> _1bcda0bb1_getBlockExpr(jule::Slice<jule::Ptr<_1bc247014_Token>>* _91122_tokens);
inline __jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token _1bcda1079_splitDelim(jule::Slice<jule::Ptr<_1bc247014_Token>>* _94320_tokens, jule::U32 _94345_delim);
inline jule::I32 _1bcda1343_findLowestPrecOp(jule::Slice<jule::Ptr<_1bc247014_Token>>* _98222_tokens);
inline jule::Ptr<_1bc26355d_IdentExpr> _1bcda160c_buildIdentExpr(jule::Ptr<_1bc247014_Token>* _104724_token);
inline __jule_tuple_sx_1bc247014_Token__jule_tuple_int _1bcda18c6_getRangeExprTokens(jule::Slice<jule::Ptr<_1bc247014_Token>>* _105528_tokens);
inline jule::Bool _1bcda1ca0_isAnonFnHead(jule::Slice<jule::Ptr<_1bc247014_Token>>* _107818_tokens);
inline jule::Bool _1bcda294e_checkAssignTokens(jule::Slice<jule::Ptr<_1bc247014_Token>>* _1623_tokens);
inline _1a9575ca1_Log _1bcda390b_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1bc24cab9_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args);
inline jule::Slice<jule::Ptr<_1bc247014_Token>> _1bcda3e39_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1bc247014_Token>>* _3063_tokens);
inline __jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token _1bcda4203_rangeLast(jule::Slice<jule::Ptr<_1bc247014_Token>>* _6019_tokens);
inline __jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log _1bcda46a9_parts(jule::Slice<jule::Ptr<_1bc247014_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust);
inline jule::U32 _1bcda4940_getCloseOfBrace(jule::U32 _12820_left);
inline _1a9575ca1_Log _1bcda4d6e_compilerErr(jule::Ptr<_1bc247014_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args);
inline void _1bcda5215_pushSuggestion(_1a9575ca1_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args);
inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb617c_buildVoidType(void);
inline __jule_tuple_bool__jule_tuple_bool _1bc5cd796_checkOs(jule::Str _912_arg);
inline __jule_tuple_bool__jule_tuple_bool _1bc5c8b04_checkArch(jule::Str _2814_arg);
inline void _1bc5e5071_setOsVars(jule::Slice<jule::Str>* _3619_vars);
inline void _1bc5e52e6_setArchVars(jule::Slice<jule::Str>* _4421_vars);
inline void _1bc5e55d2_initVars(jule::Slice<jule::Str>* _5518_vars, _1bc5e4c52_CompileInfo* _5532_info);
inline jule::I32 _1bc5e599a_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident);
inline jule::Slice<jule::U8> _1bcdba24c_readBuff(jule::Str _1713_path);
inline _1a9575ca1_Log _1bcdba55a_flatCompilerErr(jule::Str _2820_text);
inline jule::Ptr<_1bc2ee055_Fn> _1bc546d80_RuntimeFindFn(jule::Ptr<_1bc3dcb9e_ImportInfo>* _723_runtime, jule::Str _751_ident);
inline jule::Ptr<_1bc27d26a_Struct> _1bc547248_RuntimeFindStruct(jule::Ptr<_1bc3dcb9e_ImportInfo>* _1627_runtime, jule::Str _1655_ident);
inline jule::Uintptr _1bc547e6e_TypeData(jule::Any* _1414_m);
inline jule::Bool _1bc548337_equalConst(jule::Ptr<_1bac25065_Const> _1815_l, jule::Ptr<_1bac25065_Const> _1836_r);
inline jule::Bool _1bc5486ab_equalCasting(jule::Ptr<_1bc2e33bd_CastingExprModel> _3717_l, jule::Ptr<_1bc2e33bd_CastingExprModel> _3745_r);
inline jule::Bool _1bc548a74_equalUnary(jule::Ptr<_1bc2e2169_UnaryExprModel> _4415_l, jule::Ptr<_1bc2e2169_UnaryExprModel> _4441_r);
inline jule::Bool _1bc548de8_equalIndexing(jule::Ptr<_1bc2e4600_IndexingExprModel> _5118_l, jule::Ptr<_1bc2e4600_IndexingExprModel> _5147_r);
inline jule::Bool _1bc54926c_equalBinary(jule::Ptr<_1bc2e1c90_BinaryExprModel> _5616_l, jule::Ptr<_1bc2e1c90_BinaryExprModel> _5643_r);
inline jule::Bool _1bc5495e1_EqualModels(jule::Any _6716_l, jule::Any _6736_r);
inline void _1bcdbed45_pushPasses(jule::Ptr<_1bc3e0421_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes);
inline jule::Slice<jule::Str> _1bcdc020d_getAllUniquePasses(jule::Ptr<_1bc3e0421_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _14053_uses);
inline _1bc5e4c52_CompileInfo _1bcdc041c_buildCompileInfo(void);
inline void _1bcdc06c5_pushRuntimeToAST(jule::Ptr<_1bc25aa50_AST>* _17926_f);
inline void _1bcdc0de0_IterPackages(jule::Ptr<_1bcdbd492_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1bc3e0421_Package>*> _731_f);
inline void _1bcdc1143_IterFiles(jule::Ptr<_1bc3e0421_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1bc305358_SymTab>*> _1640_f);
inline void _1bcdc142e_IterTraitMethods(jule::Ptr<_1bc309769_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1bc2ee055_Fn>*> _2443_f);
inline jule::Bool _1bcdc35da_IsForwarded(jule::Ptr<_1bc3abd27_Scope>* _1217_s);
inline jule::Bool _1bcdc37b6_IsExprComesFromBind(jule::Ptr<_1bc48354c_Data>* _2825_d);
inline jule::Bool _1bcdc3a80_IsAny(jule::Ptr<_1bc4b64e7_Type>* _4015_t);
inline jule::Bool _1bcdc3dc1_IsClosure(jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _4915_m);
inline jule::Bool _1bcdc4157_IsOpMethod(jule::Ptr<_1bc2ee055_Fn>* _5216_m);
inline jule::Bool _1bcdc44cb_IsTraitMethod(jule::Ptr<_1bc2810c5_StructIns>* _6823_owner, jule::Ptr<_1bc302113_FnIns>* _6849_f);
inline jule::Bool _1bcdc4850_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p);
inline jule::Ptr<_1bc25bd2b_Directive> _1bcdc56db_FindDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _1123_directives, jule::Str _1154_tag);
inline jule::Bool _1bcdc5aa4_HasDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _2118_directives, jule::Str _2149_tag);
inline jule::I32 _1bcdc65dd_FindTraitTypeOffsetS(jule::Ptr<_1bc309769_Trait> _3925_t, jule::Ptr<_1bc2810c5_StructIns> _3946_s);
inline jule::I32 _1bcdc6962_FindTraitTypeOffset(jule::Ptr<_1bc309769_Trait> _6224_t, jule::Ptr<_1bc4b64e7_Type> _6245_k);
inline jule::Ptr<_1bc302113_FnIns> _1bcdc6d91_FindOperator(jule::Ptr<_1bc2810c5_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary);
inline jule::Ptr<_1bc302113_FnIns> _1bcdc7215_FindFnGenericInstance(jule::Ptr<_1bc2ee055_Fn>* _14731_f, jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _14745_generics);
inline jule::Ptr<_1bc2810c5_StructIns> _1bcdc7699_FindStructGenericInstance(jule::Ptr<_1bc27d26a_Struct>* _16335_s, jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _16353_generics);
inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bcdc7996_SelectImport(jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _17821_imports, jule::Str _17851_linkpath);
inline jule::Bool _1c676500b_isOrdered(jule::Ptr<_1bc42dc12_Var>* _1418_t, jule::Slice<jule::Ptr<_1bc42dc12_Var>> _1425_s);
inline jule::Bool _1c676ac7b_isOrdered(jule::Ptr<_1bc27d26a_Struct>* _1418_t, jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _1425_s);
inline void _1c67621e5_order(jule::Slice<jule::Ptr<_1bc42dc12_Var>> _3717_s);
inline void _1c6762cc8_order(jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _3717_s);
inline void _1bdc1e116_EliminateDefines(jule::Ptr<_1bcdbd492_IR>* _36526_ir);
inline jule::Bool _1bdc1e424_isAllMethodsLive(jule::Ptr<_1bc27d26a_Struct> _37121_s);
inline void _1bdc23291_eliminateDeadCodeOfScope(jule::Ptr<_1bc3abd27_Scope> _21833_s);
inline void _1bdc23516_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1bc2ee055_Fn>>* _23033_funcs);
inline void _1bdc23747_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1bc27d26a_Struct>>* _23937_structs);
inline void _1bdc23a00_eliminateFunctionsScopePackage(jule::Ptr<_1bc3e0421_Package>* _24740_pkg);
inline void _1bdc23bed_eliminateScopePackage(jule::Ptr<_1bc3e0421_Package>* _25431_pkg);
inline void _1bdc23e2e_EliminateScopes(jule::Ptr<_1bcdbd492_IR>* _25925_ir);
inline void _1bdae0328_possibleNilRemove(jule::Ptr<_1bdade349_nils>* _7527_n, jule::Any _7537_m);
inline jule::Bool _1bdae06e1_isGuaranteedNonNilExpr(jule::Ptr<_1bdade349_nils>* _8132_n, jule::Any _8142_m);
inline jule::Bool _1bdae09aa_isNilValidType(jule::Ptr<_1bc4b64e7_Type> _8923_t);
inline jule::Uintptr _1bdae0ceb_getNilVar(jule::Any _9114_m);
inline jule::Bool _1bdae70ee_isConstantValidConditionalCase(jule::Ptr<_1bc3ac245_If>* _83236_i);
inline jule::Bool _1bdae740c_isUnreachableExpr(jule::Any* _84123_expr);
inline jule::Bool _1bdae76c6_isConstantValidMatchCase(jule::Ptr<_1bc3b2080_Case>* _85630_case);
inline jule::Bool _1bdae7a17_isUnreachableConditionalCase(jule::Ptr<_1bc3ac245_If>* _86534_i);
inline jule::Bool _1bdae7c9d_isUnreachableMatchCase(jule::Ptr<_1bc3b2080_Case>* _86928_case);
inline __jule_tuple_bool__jule_tuple_u64 _1bdaee304_checkForBitShiftOpt(jule::Ptr<_1bc2e1795_OperandExprModel>* _81125_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _81154_r);
inline jule::Bool _1bdaee6bc_areSameLvalueExprModel(jule::Any* _82828_l, jule::Any* _82849_r);
inline void _1bdb01779_possibleDynamicRemove(jule::Ptr<_1bdb006e0_dynamic>* _7631_d, jule::Any _7644_m);
inline jule::Bool _1bdb01a87_isDynamicValidType(jule::Ptr<_1bc4b64e7_Type> _8227_t);
inline jule::Ptr<_1bc4b64e7_Type> _1bdb01eb6_isTypeGuaranteedDynamicData(jule::Ptr<_1bdb006e0_dynamic>* _8437_dy, jule::Ptr<_1bc4b64e7_Type> _8455_t, jule::Any _8475_m);
inline jule::Uintptr _1bdb02307_getDynamicVar(jule::Any _11218_m);
inline void _1c691e88b__removeDeads(jule::Ptr<_1bdb0587c_boundary>* _3340_alive, jule::Ptr<_1bdb0587c_boundary>* _3366_other, jule::Uintptr _3391_invalid);
inline void _1c6921728__removeDeads(jule::Ptr<_1bdade349_nils>* _3340_alive, jule::Ptr<_1bdade349_nils>* _3366_other, jule::Uintptr _3391_invalid);
inline void _1c6a4a302__removeDeads(jule::Ptr<_1bdb006e0_dynamic>* _3340_alive, jule::Ptr<_1bdb006e0_dynamic>* _3366_other, jule::Uintptr _3391_invalid);
inline jule::Bool _1bdb068e4_isValidBoundaryInfo(jule::Any _8524_m);
inline jule::I32 _1bdb06cac_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9040_expr);
inline jule::Bool _1bdb07131_fitsSize(jule::Any _9913_e1, jule::Any _9934_e2);
inline void _1bdb07461_possibleBoundaryRemove(jule::Ptr<_1bdb0587c_boundary>* _12532_b, jule::Any _12546_model);
inline jule::Bool _1bdb0772a_isBoundaryRiskyType(jule::Ptr<_1bc4b64e7_Type> _13728_t);
inline jule::Bool _1bdb079e4_isBoundaryValidType(jule::Ptr<_1bc4b64e7_Type> _14228_t);
inline jule::Uintptr _1bdb07cad_getBoundaryVar(jule::Any _14419_m);
inline void _1bdb0bb2a_PushOptLevel(jule::I32 _4117_level);
inline void _1bdc277d4_detectEnabled(void);
inline void _1c7012ed4_Reverse(jule::Slice<jule::U8> _7327_s);
inline void _1c7011ae8_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r);
inline void _1c700d001_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r);
inline jule::Bool _1c700b692_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b);
inline jule::Slice<jule::U8> _1c70072e7_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7240_v);
inline jule::U64 _1bdee088d_unix(void);
inline jule::Bool _1bdc32c62_isCopyOptimizable(jule::Ptr<_1bc48354c_Data>* _117223_expr);
inline jule::Bool _1bdc3312a_isIterCopyOptimizable(jule::Ptr<_1bc48354c_Data>* _118327_expr, jule::Ptr<_1bc42dc12_Var>* _118347_v);
inline jule::Bool _1bdc33559_captureVarHandling(jule::Ptr<_1bdeeab84_ObjectCoder>* _119028_oc, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _119051_m, jule::Ptr<_1bc42dc12_Var>* _119083_v);
inline jule::Str _1bdc45ea6_decomposeCommonEsq(jule::U8 _193423_b);
inline jule::Str _1bdc462b4_sbtoa(jule::U8 _196110_b);
inline void _1bdc465a0_cstrBytes(_1a95669ea_Builder* _198119_s, jule::Str _198140_ctx);
inline void _1bdc468d0_cstrLit(_1a95669ea_Builder* _198717_s, jule::Str _198738_ctx);
inline void _1bdc46c76_ftoa(_1a95669ea_Builder* _199314_s, jule::F64 _199335_f, jule::I32 _199343_bitsize);
inline void _1bdc47062_itoa(_1a95669ea_Builder* _201114_s, jule::I64 _201135_x);
inline void _1bdc4734d_utoa(_1a95669ea_Builder* _202814_s, jule::U64 _202835_x);
inline void _1bdc4799c_operatorOverloadingBinary(_1a95669ea_Builder* _204235_buf, jule::Ptr<_1bc2810c5_StructIns>* _204263_s, jule::Str* _204285_l, jule::Str* _20433_r, jule::U32 _204311_op, jule::Str _204326_kind);
inline jule::Slice<jule::U8> _1be0086ca_concatAllParts(jule::Slice<jule::Ptr<_1bc247014_Token>> _137519_parts);
inline jule::Bool _1be0089d8_isHeadDecl(jule::Ptr<_1bc2ee055_Fn>* _139120_m);
inline jule::Bool _1be008ca2_defaultEq(jule::Ptr<_1bc2810c5_StructIns>* _139915_s);
inline jule::Bool _1be017b90_ableToInit(jule::Ptr<_1bc4b64e7_Type>* _45520_t);
inline jule::Bool _1be017e6a_shouldInitialized(jule::Ptr<_1bc4b64e7_Type>* _46227_t);
inline void _1abb4722c_printErrorMessage(jule::Str _3022_msg);
inline void _1abb474a2_help(jule::Slice<jule::Str>* _3510_args);
inline void _1abb476d3_version(jule::Slice<jule::Str>* _6313_args);
inline void _1abb478e2_toolDistos(void);
inline void _1abb47a57_toolDistarch(void);
inline void _1abb47c55_tool(jule::Slice<jule::Str>* _9410_args);
inline void _1abb47e86_julenv(jule::Slice<jule::Str>* _11712_args);
inline void _1abb482c7_mod(jule::Slice<jule::Str>* _1309_args);
inline jule::Bool _1abb48519_processCommand(jule::Slice<jule::Str>* _15320_args);
inline void _1abb486b2_showInfo(void);
void _1abb48838_main(void);
inline void _1be0acb8b_init(void);
inline jule::Ptr<_1a9c30b64_File> _1be0ace55_openOutput(jule::Str* _3016_path);
inline void _1be0ad0ed_clearObjects(void);
inline void _1be0ad40b_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd);
inline jule::Bool _1be0ad6c5_isCppSourceFile(jule::Str _8620_path);
inline void _1be0ad906_pushCompCmdClang(_1a95669ea_Builder* _9426_cmd);
inline void _1be0adb37_pushCompCmdGcc(_1a95669ea_Builder* _12024_cmd);
inline __jule_tuple_str__jule_tuple_str _1be0ae0bb_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1bcdbd492_IR>* _14636_ir);
inline jule::Str _1be0ae253_getCompilePath(void);
inline void _1be0ae484_applyTargetIndependentOptimizations(jule::Ptr<_1bcdbd492_IR>* _19245_ir);
inline void _1be0ae62c_checkCompilerFlag(void);
inline void _1be0ae83b_checkTargetArch(jule::Str _21420_arch);
inline void _1be0aea6c_checkTargetOs(jule::Str _22218_os);
inline void _1be0aec9d_checkTargetFlag(jule::Str* _23021_target);
inline void _1be0aeece_checkOptFlag(jule::Str* _25318_opt);
inline void _1be0b0397_checkCppStdFlag(void);
inline jule::Slice<jule::Str> _1be0b0562_checkFlags(jule::Slice<jule::Str>* _28116_args);
inline void _1be0b0771_setupSemaFlags(jule::I32* _33024_flags);
inline jule::Ptr<_1bcdbd492_IR> _1be0b0a3a_buildIr(jule::Slice<jule::Str>* _33613_args);
inline void _1be0b0c6b_compileCommand(jule::Slice<jule::Str>* _37624_args);


struct _1bc37e217_comptimeRangeKindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1bc37d59b_index)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i);
	void(*_1bc37d90e_ready)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB);
	void(*_1bc37dd2c_step)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB);
	jule::I32(*_1bc37e0b3_len)(jule::Ptr<jule::Uintptr> _self_);
};

struct _1bc3d9b9b_ImporterMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	void(*_1bc3d8a24_SetModPath)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path);
	jule::Str(*_1bc3d8c11_GetModPath)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1bc3d9052_ModById)(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id);
	jule::Ptr<_1bc3dcb9e_ImportInfo>(*_1bc3d9393_GetImport)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path);
	__jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log(*_1bc3d978e_ImportPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod);
	void(*_1bc3d9a47_Imported)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo> _4128__0);
};

struct _1bc4b6041_KindMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1bc4b5a9b_Str)(jule::Ptr<jule::Uintptr> _self_);
	jule::Bool(*_1bc4b5ddc_Equal)(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other);
};

struct _1bc4d634c_LookupMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Ptr<_1bc3dcb9e_ImportInfo>(*_1bc4d4636_SelectPackage)(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _929_selector);
	jule::Ptr<_1bc42dc12_Var>(*_1bc4d4a32_FindVar)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded);
	jule::Ptr<_1bc4b5705_TypeAlias>(*_1bc4d4e2d_FindTypeAlias)(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded);
	jule::Ptr<_1bc27d26a_Struct>(*_1bc4d5329_FindStruct)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded);
	jule::Ptr<_1bc2ee055_Fn>(*_1bc4d5725_FindFn)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded);
	jule::Ptr<_1bc309769_Trait>(*_1bc4d5a66_FindTrait)(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident);
	jule::Ptr<_1bc30be20_Enum>(*_1bc4d5da7_FindEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident);
	jule::Ptr<_1bc30d62a_TypeEnum>(*_1bc4d61e8_FindTypeEnum)(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident);
};

struct _1be0a5b51_CommonFlagMptrData {
	void (*dealloc)(jule::Ptr<jule::Uintptr>&);
	jule::Str(*_1bcdd5be6_Name)(jule::Ptr<jule::Uintptr> _self_);
	jule::I32(*_1bcdd5d39_Short)(jule::Ptr<jule::Uintptr> _self_);
	jule::Str(*_1be0a5832_What)(jule::Ptr<jule::Uintptr> _self_);
	void(*_1be0a59ec_Reset)(jule::Ptr<jule::Uintptr> _self_);
};



void __jule_type_deallocator0(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc381736_comptimeStructFields>().dealloc(); }
void __jule_type_deallocator1(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc38496a_comptimeStatics>().dealloc(); }
void __jule_type_deallocator2(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3876e8_comptimeEnumFields>().dealloc(); }
void __jule_type_deallocator3(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc38b059_comptimeParams>().dealloc(); }
void __jule_type_deallocator4(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc38c8b8_comptimeTypeInfos>().dealloc(); }
void __jule_type_deallocator5(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc398198_comptimeFiles>().dealloc(); }
void __jule_type_deallocator6(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc39b740_comptimeDecls>().dealloc(); }
void __jule_type_deallocator7(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bcdbaa44_Importer>().dealloc(); }
void __jule_type_deallocator8(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2810c5_StructIns>().dealloc(); }
void __jule_type_deallocator9(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc302113_FnIns>().dealloc(); }
void __jule_type_deallocator10(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc309769_Trait>().dealloc(); }
void __jule_type_deallocator11(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc30be20_Enum>().dealloc(); }
void __jule_type_deallocator12(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc30d62a_TypeEnum>().dealloc(); }
void __jule_type_deallocator13(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc37e437_comptimeRange>().dealloc(); }
void __jule_type_deallocator14(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc37ee93_comptimeStructField>().dealloc(); }
void __jule_type_deallocator15(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3831b6_comptimeStatic>().dealloc(); }
void __jule_type_deallocator16(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3863d9_comptimeEnumField>().dealloc(); }
void __jule_type_deallocator17(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc389200_comptimeParam>().dealloc(); }
void __jule_type_deallocator18(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc38e337_comptimeTypeInfo>().dealloc(); }
void __jule_type_deallocator19(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc39543c_comptimeValue>().dealloc(); }
void __jule_type_deallocator20(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc399b17_comptimeFile>().dealloc(); }
void __jule_type_deallocator21(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc39da2d_comptimeDecl>().dealloc(); }
void __jule_type_deallocator22(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4b64e7_Type>().dealloc(); }
void __jule_type_deallocator23(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4be610_Prim>().dealloc(); }
void __jule_type_deallocator24(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4c313b_Sptr>().dealloc(); }
void __jule_type_deallocator25(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4c3b0e_Slc>().dealloc(); }
void __jule_type_deallocator26(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4c4703_Tuple>().dealloc(); }
void __jule_type_deallocator27(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4c52a3_Map>().dealloc(); }
void __jule_type_deallocator28(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4c5e30_Arr>().dealloc(); }
void __jule_type_deallocator29(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4c6903_Ptr>().dealloc(); }
void __jule_type_deallocator30(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1be009eb2_customType>().dealloc(); }
void __jule_type_deallocator31(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc305358_SymTab>().dealloc(); }
void __jule_type_deallocator32(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b448e_scopeChecker>().dealloc(); }
void __jule_type_deallocator33(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3dcb9e_ImportInfo>().dealloc(); }
void __jule_type_deallocator34(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3e0421_Package>().dealloc(); }
void __jule_type_deallocator35(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc409eeb_sema>().dealloc(); }
void __jule_type_deallocator36(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6bd2368_Flag>().dealloc(); }
void __jule_type_deallocator37(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6bd5beb_Flag>().dealloc(); }
void __jule_type_deallocator38(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6bd9408_Flag>().dealloc(); }
void __jule_type_deallocator39(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6bdcb59_Flag>().dealloc(); }
void __jule_type_deallocator40(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1c6be1366_Flag>().dealloc(); }
void __jule_type_deallocator41(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator42(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator43(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I64>().dealloc(); }
void __jule_type_deallocator44(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U64>().dealloc(); }
void __jule_type_deallocator45(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Bool>().dealloc(); }
void __jule_type_deallocator46(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator47(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F64>().dealloc(); }
void __jule_type_deallocator48(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc42dc12_Var>().dealloc(); }
void __jule_type_deallocator49(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc4b5705_TypeAlias>().dealloc(); }
void __jule_type_deallocator50(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc27d26a_Struct>().dealloc(); }
void __jule_type_deallocator51(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2ee055_Fn>().dealloc(); }
void __jule_type_deallocator52(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc27a377_Field>().dealloc(); }
void __jule_type_deallocator53(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bac25065_Const>().dealloc(); }
void __jule_type_deallocator54(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc30b3b4_EnumItem>().dealloc(); }
void __jule_type_deallocator55(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2ec581_Param>().dealloc(); }
void __jule_type_deallocator56(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::Str>().dealloc(); }
void __jule_type_deallocator57(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3ae874_Label>().dealloc(); }
void __jule_type_deallocator58(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3abd27_Scope>().dealloc(); }
void __jule_type_deallocator59(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e9d31_BuiltinErrorCallExprModel>().dealloc(); }
void __jule_type_deallocator60(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc48354c_Data>().dealloc(); }
void __jule_type_deallocator61(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2ead43_BackendEmitExprModel>().dealloc(); }
void __jule_type_deallocator62(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e8aaa_BuiltinAppendCallExprModel>().dealloc(); }
void __jule_type_deallocator63(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e767a_BuiltinPrintCallExprModel>().dealloc(); }
void __jule_type_deallocator64(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e7977_BuiltinPrintlnCallExprModel>().dealloc(); }
void __jule_type_deallocator65(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e822a_BuiltinPanicCallExprModel>().dealloc(); }
void __jule_type_deallocator66(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e9957_BuiltinCopyCallExprModel>().dealloc(); }
void __jule_type_deallocator67(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e957d_BuiltinDeleteCallExprModel>().dealloc(); }
void __jule_type_deallocator68(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2eb140_FreeExprModel>().dealloc(); }
void __jule_type_deallocator69(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e3c70_FnCallExprModel>().dealloc(); }
void __jule_type_deallocator70(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3ac960_Conditional>().dealloc(); }
void __jule_type_deallocator71(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3acc5c_InfIter>().dealloc(); }
void __jule_type_deallocator72(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc271cca_WhileKind>().dealloc(); }
void __jule_type_deallocator73(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3ad213_WhileIter>().dealloc(); }
void __jule_type_deallocator74(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2726d2_RangeKind>().dealloc(); }
void __jule_type_deallocator75(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3adb5e_RangeIter>().dealloc(); }
void __jule_type_deallocator76(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3adee4_ContSt>().dealloc(); }
void __jule_type_deallocator77(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3aeed4_GotoSt>().dealloc(); }
void __jule_type_deallocator78(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b03ad_Postfix>().dealloc(); }
void __jule_type_deallocator79(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b0864_Assign>().dealloc(); }
void __jule_type_deallocator80(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26355d_IdentExpr>().dealloc(); }
void __jule_type_deallocator81(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e4600_IndexingExprModel>().dealloc(); }
void __jule_type_deallocator82(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b0d1a_MultiAssign>().dealloc(); }
void __jule_type_deallocator83(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b1557_Match>().dealloc(); }
void __jule_type_deallocator84(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b2778_FallSt>().dealloc(); }
void __jule_type_deallocator85(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3ae3bd_BreakSt>().dealloc(); }
void __jule_type_deallocator86(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc3b2b1e_RetSt>().dealloc(); }
void __jule_type_deallocator87(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26ca0c_ScopeTree>().dealloc(); }
void __jule_type_deallocator88(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc270856_VarDecl>().dealloc(); }
void __jule_type_deallocator89(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc274508_TypeAliasDecl>().dealloc(); }
void __jule_type_deallocator90(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc261c43_Expr>().dealloc(); }
void __jule_type_deallocator91(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc273cbb_Conditional>().dealloc(); }
void __jule_type_deallocator92(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2714a0_Iter>().dealloc(); }
void __jule_type_deallocator93(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc272e85_ContSt>().dealloc(); }
void __jule_type_deallocator94(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc269ee3_LabelSt>().dealloc(); }
void __jule_type_deallocator95(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26a3bc_GotoSt>().dealloc(); }
void __jule_type_deallocator96(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26b3ac_AssignSt>().dealloc(); }
void __jule_type_deallocator97(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2752c8_MatchCase>().dealloc(); }
void __jule_type_deallocator98(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26a6b9_FallSt>().dealloc(); }
void __jule_type_deallocator99(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc272aab_BreakSt>().dealloc(); }
void __jule_type_deallocator100(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc270c30_RetSt>().dealloc(); }
void __jule_type_deallocator101(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc262617_UseExpr>().dealloc(); }
void __jule_type_deallocator102(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2793ba_Impl>().dealloc(); }
void __jule_type_deallocator103(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc27851d_StructDecl>().dealloc(); }
void __jule_type_deallocator104(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26e69b_FnDecl>().dealloc(); }
void __jule_type_deallocator105(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc278c5a_TraitDecl>().dealloc(); }
void __jule_type_deallocator106(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2768c3_EnumDecl>().dealloc(); }
void __jule_type_deallocator107(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc27785d_TypeEnumDecl>().dealloc(); }
void __jule_type_deallocator108(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25ebca_ArrTypeDecl>().dealloc(); }
void __jule_type_deallocator109(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25dd3e_SlcTypeDecl>().dealloc(); }
void __jule_type_deallocator110(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25e438_PtrTypeDecl>().dealloc(); }
void __jule_type_deallocator111(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25d9a9_SptrTypeDecl>().dealloc(); }
void __jule_type_deallocator112(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc260428_MapTypeDecl>().dealloc(); }
void __jule_type_deallocator113(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25e13b_TupleTypeDecl>().dealloc(); }
void __jule_type_deallocator114(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25d019_IdentTypeDecl>().dealloc(); }
void __jule_type_deallocator115(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2641c9_VariadicExpr>().dealloc(); }
void __jule_type_deallocator116(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e4149_SliceExprModel>().dealloc(); }
void __jule_type_deallocator117(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc266462_FieldExprPair>().dealloc(); }
void __jule_type_deallocator118(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc267a6d_KeyValPair>().dealloc(); }
void __jule_type_deallocator119(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc262837_TupleExpr>().dealloc(); }
void __jule_type_deallocator120(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e737d_TupleExprModel>().dealloc(); }
void __jule_type_deallocator121(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26596c_FnCallExpr>().dealloc(); }
void __jule_type_deallocator122(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2ea9be_RuneExprModel>().dealloc(); }
void __jule_type_deallocator123(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e7081_ArrayExprModel>().dealloc(); }
void __jule_type_deallocator124(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc264d56_SubIdentExpr>().dealloc(); }
void __jule_type_deallocator125(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25d2d3_SubIdentTypeDecl>().dealloc(); }
void __jule_type_deallocator126(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc263d00_UnaryExpr>().dealloc(); }
void __jule_type_deallocator127(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25c90e_TypeDecl>().dealloc(); }
void __jule_type_deallocator128(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26497c_NamespaceExpr>().dealloc(); }
void __jule_type_deallocator129(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc25d6ac_NamespaceTypeDecl>().dealloc(); }
void __jule_type_deallocator130(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e58dc_SlicingExprModel>().dealloc(); }
void __jule_type_deallocator131(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e33bd_CastingExprModel>().dealloc(); }
void __jule_type_deallocator132(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc268299_SliceExpr>().dealloc(); }
void __jule_type_deallocator133(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e2a3d_StructLitExprModel>().dealloc(); }
void __jule_type_deallocator134(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e6ba7_StructStaticIdentExprModel>().dealloc(); }
void __jule_type_deallocator135(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e5e70_TraitSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator136(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e6811_StructSubIdentExprModel>().dealloc(); }
void __jule_type_deallocator137(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e5359_MapExprModel>().dealloc(); }
void __jule_type_deallocator138(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e4aa6_AnonFnExprModel>().dealloc(); }
void __jule_type_deallocator139(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26200c_RangeExpr>().dealloc(); }
void __jule_type_deallocator140(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc262bcd_LitExpr>().dealloc(); }
void __jule_type_deallocator141(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2630a7_UnsafeExpr>().dealloc(); }
void __jule_type_deallocator142(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc268c06_IndexingExpr>().dealloc(); }
void __jule_type_deallocator143(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc269366_SlicingExpr>().dealloc(); }
void __jule_type_deallocator144(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2645a3_CastExpr>().dealloc(); }
void __jule_type_deallocator145(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc266c8c_StructLit>().dealloc(); }
void __jule_type_deallocator146(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc267243_BraceLit>().dealloc(); }
void __jule_type_deallocator147(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc26530c_BinaryExpr>().dealloc(); }
void __jule_type_deallocator148(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e2169_UnaryExprModel>().dealloc(); }
void __jule_type_deallocator149(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e1c90_BinaryExprModel>().dealloc(); }
void __jule_type_deallocator150(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e2d3a_AllocStructLitExprModel>().dealloc(); }
void __jule_type_deallocator151(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e7d51_BuiltinNewCallExprModel>().dealloc(); }
void __jule_type_deallocator152(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e86d1_BuiltinMakeCallExprModel>().dealloc(); }
void __jule_type_deallocator153(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e8da7_BuiltinLenCallExprModel>().dealloc(); }
void __jule_type_deallocator154(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e91a4_BuiltinCapCallExprModel>().dealloc(); }
void __jule_type_deallocator155(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2ea12d_SizeofExprModel>().dealloc(); }
void __jule_type_deallocator156(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2ea7d2_AlignofExprModel>().dealloc(); }
void __jule_type_deallocator157(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdad9bc4_ExceptionalForwardingExprModel>().dealloc(); }
void __jule_type_deallocator158(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadcb72_StrRuneIter>().dealloc(); }
void __jule_type_deallocator159(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadb8eb_MutSlicingExprModel>().dealloc(); }
void __jule_type_deallocator160(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadc3be_PushToSliceExprModel>().dealloc(); }
void __jule_type_deallocator161(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadc798_AppendToSliceExprModel>().dealloc(); }
void __jule_type_deallocator162(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdada653_SwapExprModel>().dealloc(); }
void __jule_type_deallocator163(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadaa2c_EmptyCompareExprModel>().dealloc(); }
void __jule_type_deallocator164(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadb2d0_StrCompExprModel>().dealloc(); }
void __jule_type_deallocator165(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdada235_StrConcatExprModel>().dealloc(); }
void __jule_type_deallocator166(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadbbe8_UnsafeBinaryExprModel>().dealloc(); }
void __jule_type_deallocator167(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadce6e_UnsafeDerefExprModel>().dealloc(); }
void __jule_type_deallocator168(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadad29_RefExprModel>().dealloc(); }
void __jule_type_deallocator169(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bc2e2697_StructArgExprModel>().dealloc(); }
void __jule_type_deallocator170(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadd26b_UnsafeCastingExprModel>().dealloc(); }
void __jule_type_deallocator171(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdad9e38_FnCallIgnoreExceptionalExprModel>().dealloc(); }
void __jule_type_deallocator172(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<_1bdadbee5_UnsafeIndexingExprModel>().dealloc(); }
void __jule_type_deallocator173(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator174(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator175(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U8>().dealloc(); }
void __jule_type_deallocator176(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I32>().dealloc(); }
void __jule_type_deallocator177(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::F32>().dealloc(); }
void __jule_type_deallocator178(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I8>().dealloc(); }
void __jule_type_deallocator179(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::I16>().dealloc(); }
void __jule_type_deallocator180(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U16>().dealloc(); }
void __jule_type_deallocator181(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<jule::U32>().dealloc(); }
inline void __jule_trait_method_1c0aca322_1c0a73b28(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc382737_index(_self_.as<_1bc381736_comptimeStructFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca322_1c0a8c58c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc38595a_index(_self_.as<_1bc38496a_comptimeStatics>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca322_1c0a79e5e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc388771_index(_self_.as<_1bc3876e8_comptimeEnumFields>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca322_1c0a8096a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc38be39_index(_self_.as<_1bc38b059_comptimeParams>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca322_1c0a88cb4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc38d8a8_index(_self_.as<_1bc38c8b8_comptimeTypeInfos>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca322_1c0aa9433(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc399188_index(_self_.as<_1bc398198_comptimeFiles>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca322_1c0aa27c2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc48354c_Data>* _1426_d, jule::I32 _1436_i) {
	_1bc39c851_index(_self_.as<_1bc39b740_comptimeDecls>().alloc, _1426_d, _1436_i);
}
inline void __jule_trait_method_1c0aca8b6_1c0a73b28(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc3823c4_ready(_self_.as<_1bc381736_comptimeStructFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0aca8b6_1c0a8c58c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc3855e7_ready(_self_.as<_1bc38496a_comptimeStatics>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0aca8b6_1c0a79e5e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc38840d_ready(_self_.as<_1bc3876e8_comptimeEnumFields>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0aca8b6_1c0a8096a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc38bac6_ready(_self_.as<_1bc38b059_comptimeParams>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0aca8b6_1c0a88cb4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc38d545_ready(_self_.as<_1bc38c8b8_comptimeTypeInfos>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0aca8b6_1c0aa9433(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc398d25_ready(_self_.as<_1bc398198_comptimeFiles>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0aca8b6_1c0aa27c2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc42dc12_Var>* _1526_keyA, jule::Ptr<_1bc42dc12_Var>* _1543_keyB) {
	_1bc39c4dd_ready(_self_.as<_1bc39b740_comptimeDecls>().alloc, _1526_keyA, _1543_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0a73b28(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc382b55_step(_self_.as<_1bc381736_comptimeStructFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0a8c58c(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc385d78_step(_self_.as<_1bc38496a_comptimeStatics>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0a79e5e(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc388b8e_step(_self_.as<_1bc3876e8_comptimeEnumFields>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0a8096a(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc38c357_step(_self_.as<_1bc38b059_comptimeParams>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0a88cb4(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc38dcc6_step(_self_.as<_1bc38c8b8_comptimeTypeInfos>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0aa9433(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc3995a6_step(_self_.as<_1bc398198_comptimeFiles>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline void __jule_trait_method_1c0acb08c_1c0aa27c2(jule::Ptr<jule::Uintptr> _self_, jule::I32 _1620_i, jule::Ptr<_1bc42dc12_Var>* _1633_keyA, jule::Ptr<_1bc42dc12_Var>* _1650_keyB) {
	_1bc39cc6e_step(_self_.as<_1bc39b740_comptimeDecls>().alloc, _1620_i, _1633_keyA, _1650_keyB);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0a73b28(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc382ddb_len(_self_.as<_1bc381736_comptimeStructFields>().alloc);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0a8c58c(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38610e_len(_self_.as<_1bc38496a_comptimeStatics>().alloc);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0a79e5e(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc388e25_len(_self_.as<_1bc3876e8_comptimeEnumFields>().alloc);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0a8096a(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38c5dd_len(_self_.as<_1bc38b059_comptimeParams>().alloc);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0a88cb4(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38e05c_len(_self_.as<_1bc38c8b8_comptimeTypeInfos>().alloc);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0aa9433(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc39983c_len(_self_.as<_1bc398198_comptimeFiles>().alloc);
}
inline jule::I32 __jule_trait_method_1c0acb774_1c0aa27c2(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc39d005_len(_self_.as<_1bc39b740_comptimeDecls>().alloc);
}
inline void __jule_trait_method_1c0acbab5_1c6562ce8(jule::Ptr<jule::Uintptr> _self_, jule::Str _1726_path) {
	_1bcdbb649_SetModPath(_self_.as<_1bcdbaa44_Importer>().alloc, _1726_path);
}
inline jule::Str __jule_trait_method_1c0acc016_1c6562ce8(jule::Ptr<jule::Uintptr> _self_) {
	return _1bcdbb8d0_GetModPath(_self_.as<_1bcdbaa44_Importer>().alloc);
}
inline jule::Str __jule_trait_method_1c0acc423_1c6562ce8(jule::Ptr<jule::Uintptr> _self_, jule::I32 _2519_id) {
	return _1bcdbbc21_ModById(_self_.as<_1bcdbaa44_Importer>().alloc, _2519_id);
}
inline jule::Ptr<_1bc3dcb9e_ImportInfo> __jule_trait_method_1c0acc8da_1c6562ce8(jule::Ptr<jule::Uintptr> _self_, jule::Str _3125_path) {
	return _1bcdbc062_GetImport(_self_.as<_1bcdbaa44_Importer>().alloc, _3125_path);
}
inline __jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log __jule_trait_method_1c0accec3_1c6562ce8(jule::Ptr<jule::Uintptr> _self_, jule::Str _3729_path, jule::Bool _3740_updateMod) {
	return _1bcdbc45d_ImportPackage(_self_.as<_1bcdbaa44_Importer>().alloc, _3729_path, _3740_updateMod);
}
inline void __jule_trait_method_1c0acd886_1c6562ce8(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo> _4128__0) {
	_1bcdbc716_Imported(_self_.as<_1bcdbaa44_Importer>().alloc, _4128__0);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0950ad2(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc28147c_Str(_self_.as<_1bc2810c5_StructIns>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c094ee55(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc302487_Str(_self_.as<_1bc302113_FnIns>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c096816b(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc309b65_Str(_self_.as<_1bc309769_Trait>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0941e03(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc30c2c7_Str(_self_.as<_1bc30be20_Enum>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c094902b(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc30d99e_Str(_self_.as<_1bc30d62a_TypeEnum>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a875cb(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc37e833_Str(_self_.as<_1bc37e437_comptimeRange>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a76de5(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38034a_Str(_self_.as<_1bc37ee93_comptimeStructField>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a73b28(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc381aee_Str(_self_.as<_1bc381736_comptimeStructFields>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a90859(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38356d_Str(_self_.as<_1bc3831b6_comptimeStatic>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a8c58c(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc384d22_Str(_self_.as<_1bc38496a_comptimeStatics>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a7d22b(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc386791_Str(_self_.as<_1bc3863d9_comptimeEnumField>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a79e5e(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc387bb0_Str(_self_.as<_1bc3876e8_comptimeEnumFields>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a83c37(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc3895a7_Str(_self_.as<_1bc389200_comptimeParam>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a8096a(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38b301_Str(_self_.as<_1bc38b059_comptimeParams>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a88cb4(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38cc70_Str(_self_.as<_1bc38c8b8_comptimeTypeInfos>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0979c93(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc38e6de_Str(_self_.as<_1bc38e337_comptimeTypeInfo>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a938c3(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc3957e4_Str(_self_.as<_1bc39543c_comptimeValue>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0aa9433(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc398550_Str(_self_.as<_1bc398198_comptimeFiles>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0aa5a8e(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc399ebe_Str(_self_.as<_1bc399b17_comptimeFile>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0aa27c2(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc39bd28_Str(_self_.as<_1bc39b740_comptimeDecls>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0a99522(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc39ddd5_Str(_self_.as<_1bc39da2d_comptimeDecl>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0932c3a(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4b68e3_Str(_self_.as<_1bc4b64e7_Type>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c09370a2(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4be984_Str(_self_.as<_1bc4be610_Prim>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c093d8b1(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4c34e3_Str(_self_.as<_1bc4c313b_Sptr>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c094d5c4(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4c40c6_Str(_self_.as<_1bc4c3b0e_Slc>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c09b5c8a(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4c4aaa_Str(_self_.as<_1bc4c4703_Tuple>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c09b421c(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4c565a_Str(_self_.as<_1bc4c52a3_Map>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c094bb77(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4c62d7_Str(_self_.as<_1bc4c5e30_Arr>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c0940176(jule::Ptr<jule::Uintptr> _self_) {
	return _1bc4c6caa_Str(_self_.as<_1bc4c6903_Ptr>().alloc);
}
inline jule::Str __jule_trait_method_1c0acdd70_1c698b30e(jule::Ptr<jule::Uintptr> _self_) {
	return _1be00a39c_Str(_self_.as<_1be009eb2_customType>().alloc);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0950ad2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc2817bd_Equal(_self_.as<_1bc2810c5_StructIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c094ee55(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc3027c8_Equal(_self_.as<_1bc302113_FnIns>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c096816b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc309ea6_Equal(_self_.as<_1bc309769_Trait>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0941e03(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc30c618_Equal(_self_.as<_1bc30be20_Enum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c094902b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc30dce0_Equal(_self_.as<_1bc30d62a_TypeEnum>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a875cb(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc37eb74_Equal(_self_.as<_1bc37e437_comptimeRange>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a76de5(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc38068b_Equal(_self_.as<_1bc37ee93_comptimeStructField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a73b28(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc381e40_Equal(_self_.as<_1bc381736_comptimeStructFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a90859(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc3838ae_Equal(_self_.as<_1bc3831b6_comptimeStatic>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a8c58c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc385163_Equal(_self_.as<_1bc38496a_comptimeStatics>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a7d22b(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc386ad2_Equal(_self_.as<_1bc3863d9_comptimeEnumField>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a79e5e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc388001_Equal(_self_.as<_1bc3876e8_comptimeEnumFields>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a83c37(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc3898e8_Equal(_self_.as<_1bc389200_comptimeParam>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a8096a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc38b642_Equal(_self_.as<_1bc38b059_comptimeParams>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a88cb4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc38d0b1_Equal(_self_.as<_1bc38c8b8_comptimeTypeInfos>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0979c93(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc38ea30_Equal(_self_.as<_1bc38e337_comptimeTypeInfo>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a938c3(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc395b35_Equal(_self_.as<_1bc39543c_comptimeValue>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0aa9433(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc398891_Equal(_self_.as<_1bc398198_comptimeFiles>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0aa5a8e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc39a310_Equal(_self_.as<_1bc399b17_comptimeFile>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0aa27c2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc39c169_Equal(_self_.as<_1bc39b740_comptimeDecls>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0a99522(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc39e226_Equal(_self_.as<_1bc39da2d_comptimeDecl>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0932c3a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4b6c34_Equal(_self_.as<_1bc4b64e7_Type>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c09370a2(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4becc5_Equal(_self_.as<_1bc4be610_Prim>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c093d8b1(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4c3834_Equal(_self_.as<_1bc4c313b_Sptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c094d5c4(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4c4417_Equal(_self_.as<_1bc4c3b0e_Slc>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c09b5c8a(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4c4deb_Equal(_self_.as<_1bc4c4703_Tuple>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c09b421c(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4c599b_Equal(_self_.as<_1bc4c52a3_Map>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c094bb77(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4c6628_Equal(_self_.as<_1bc4c5e30_Arr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c0940176(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1bc4c70eb_Equal(_self_.as<_1bc4c6903_Ptr>(), _3818_other);
}
inline jule::Bool __jule_trait_method_1c0ace1e4_1c698b30e(jule::Ptr<jule::Uintptr> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	return _1be00a6dd_Equal(_self_.as<_1be009eb2_customType>(), _3818_other);
}
inline jule::Ptr<_1bc3dcb9e_ImportInfo> __jule_trait_method_1c0ace766_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _929_selector) {
	return _1bc305875_SelectPackage(_self_.as<_1bc305358_SymTab>().alloc, _929_selector);
}
inline jule::Ptr<_1bc3dcb9e_ImportInfo> __jule_trait_method_1c0ace766_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _929_selector) {
	return _1bc3b4967_SelectPackage(_self_.as<_1bc3b448e_scopeChecker>().alloc, _929_selector);
}
inline jule::Ptr<_1bc3dcb9e_ImportInfo> __jule_trait_method_1c0ace766_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _929_selector) {
	return _1bc3dd1bb_SelectPackage(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _929_selector);
}
inline jule::Ptr<_1bc3dcb9e_ImportInfo> __jule_trait_method_1c0ace766_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _929_selector) {
	return _1bc3e08e9_SelectPackage(_self_.as<_1bc3e0421_Package>().alloc, _929_selector);
}
inline jule::Ptr<_1bc3dcb9e_ImportInfo> __jule_trait_method_1c0ace766_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _929_selector) {
	return _1bc40a4c4_SelectPackage(_self_.as<_1bc409eeb_sema>().alloc, _929_selector);
}
inline jule::Ptr<_1bc42dc12_Var> __jule_trait_method_1c0ad05e1_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1bc305c71_FindVar(_self_.as<_1bc305358_SymTab>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1bc42dc12_Var> __jule_trait_method_1c0ad05e1_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1bc3b4d63_FindVar(_self_.as<_1bc3b448e_scopeChecker>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1bc42dc12_Var> __jule_trait_method_1c0ad05e1_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1bc3dd5b7_FindVar(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1bc42dc12_Var> __jule_trait_method_1c0ad05e1_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1bc3e0ce5_FindVar(_self_.as<_1bc3e0421_Package>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1bc42dc12_Var> __jule_trait_method_1c0ad05e1_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _1323_ident, jule::Bool _1335_binded) {
	return _1bc40a8c0_FindVar(_self_.as<_1bc409eeb_sema>().alloc, _1323_ident, _1335_binded);
}
inline jule::Ptr<_1bc4b5705_TypeAlias> __jule_trait_method_1c0ad0bb8_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1bc30616c_FindTypeAlias(_self_.as<_1bc305358_SymTab>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1bc4b5705_TypeAlias> __jule_trait_method_1c0ad0bb8_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1bc3b525e_FindTypeAlias(_self_.as<_1bc3b448e_scopeChecker>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1bc4b5705_TypeAlias> __jule_trait_method_1c0ad0bb8_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1bc3dd9b3_FindTypeAlias(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1bc4b5705_TypeAlias> __jule_trait_method_1c0ad0bb8_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1bc3e11e1_FindTypeAlias(_self_.as<_1bc3e0421_Package>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1bc4b5705_TypeAlias> __jule_trait_method_1c0ad0bb8_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _1729_ident, jule::Bool _1741_binded) {
	return _1bc40acbb_FindTypeAlias(_self_.as<_1bc409eeb_sema>().alloc, _1729_ident, _1741_binded);
}
inline jule::Ptr<_1bc27d26a_Struct> __jule_trait_method_1c0ad12c3_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1bc306568_FindStruct(_self_.as<_1bc305358_SymTab>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1bc27d26a_Struct> __jule_trait_method_1c0ad12c3_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1bc3b565a_FindStruct(_self_.as<_1bc3b448e_scopeChecker>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1bc27d26a_Struct> __jule_trait_method_1c0ad12c3_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1bc3dddae_FindStruct(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1bc27d26a_Struct> __jule_trait_method_1c0ad12c3_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1bc3e15dc_FindStruct(_self_.as<_1bc3e0421_Package>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1bc27d26a_Struct> __jule_trait_method_1c0ad12c3_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _2126_ident, jule::Bool _2138_binded) {
	return _1bc40b1b7_FindStruct(_self_.as<_1bc409eeb_sema>().alloc, _2126_ident, _2138_binded);
}
inline jule::Ptr<_1bc2ee055_Fn> __jule_trait_method_1c0ad18cd_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1bc306964_FindFn(_self_.as<_1bc305358_SymTab>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1bc2ee055_Fn> __jule_trait_method_1c0ad18cd_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1bc3b5a56_FindFn(_self_.as<_1bc3b448e_scopeChecker>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1bc2ee055_Fn> __jule_trait_method_1c0ad18cd_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1bc3de2aa_FindFn(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1bc2ee055_Fn> __jule_trait_method_1c0ad18cd_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1bc3e19d8_FindFn(_self_.as<_1bc3e0421_Package>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1bc2ee055_Fn> __jule_trait_method_1c0ad18cd_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _2522_ident, jule::Bool _2534_binded) {
	return _1bc40b5b3_FindFn(_self_.as<_1bc409eeb_sema>().alloc, _2522_ident, _2534_binded);
}
inline jule::Ptr<_1bc309769_Trait> __jule_trait_method_1c0ad1ed8_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1bc306ca5_FindTrait(_self_.as<_1bc305358_SymTab>().alloc, _2925_ident);
}
inline jule::Ptr<_1bc309769_Trait> __jule_trait_method_1c0ad1ed8_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1bc3b5d97_FindTrait(_self_.as<_1bc3b448e_scopeChecker>().alloc, _2925_ident);
}
inline jule::Ptr<_1bc309769_Trait> __jule_trait_method_1c0ad1ed8_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1bc3de5eb_FindTrait(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _2925_ident);
}
inline jule::Ptr<_1bc309769_Trait> __jule_trait_method_1c0ad1ed8_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1bc3e1d29_FindTrait(_self_.as<_1bc3e0421_Package>().alloc, _2925_ident);
}
inline jule::Ptr<_1bc309769_Trait> __jule_trait_method_1c0ad1ed8_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _2925_ident) {
	return _1bc40b904_FindTrait(_self_.as<_1bc409eeb_sema>().alloc, _2925_ident);
}
inline jule::Ptr<_1bc30be20_Enum> __jule_trait_method_1c0ad2538_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1bc3070e6_FindEnum(_self_.as<_1bc305358_SymTab>().alloc, _3324_ident);
}
inline jule::Ptr<_1bc30be20_Enum> __jule_trait_method_1c0ad2538_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1bc3b61d8_FindEnum(_self_.as<_1bc3b448e_scopeChecker>().alloc, _3324_ident);
}
inline jule::Ptr<_1bc30be20_Enum> __jule_trait_method_1c0ad2538_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1bc3de93c_FindEnum(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _3324_ident);
}
inline jule::Ptr<_1bc30be20_Enum> __jule_trait_method_1c0ad2538_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1bc3e216a_FindEnum(_self_.as<_1bc3e0421_Package>().alloc, _3324_ident);
}
inline jule::Ptr<_1bc30be20_Enum> __jule_trait_method_1c0ad2538_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _3324_ident) {
	return _1bc40bc45_FindEnum(_self_.as<_1bc409eeb_sema>().alloc, _3324_ident);
}
inline jule::Ptr<_1bc30d62a_TypeEnum> __jule_trait_method_1c0ad2a88_1c0952de2(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1bc307437_FindTypeEnum(_self_.as<_1bc305358_SymTab>().alloc, _3728_ident);
}
inline jule::Ptr<_1bc30d62a_TypeEnum> __jule_trait_method_1c0ad2a88_1c0a27aaa(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1bc3b6529_FindTypeEnum(_self_.as<_1bc3b448e_scopeChecker>().alloc, _3728_ident);
}
inline jule::Ptr<_1bc30d62a_TypeEnum> __jule_trait_method_1c0ad2a88_1c0954520(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1bc3dec7d_FindTypeEnum(_self_.as<_1bc3dcb9e_ImportInfo>().alloc, _3728_ident);
}
inline jule::Ptr<_1bc30d62a_TypeEnum> __jule_trait_method_1c0ad2a88_1c0955345(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1bc3e24ab_FindTypeEnum(_self_.as<_1bc3e0421_Package>().alloc, _3728_ident);
}
inline jule::Ptr<_1bc30d62a_TypeEnum> __jule_trait_method_1c0ad2a88_1c09523ec(jule::Ptr<jule::Uintptr> _self_, jule::Str _3728_ident) {
	return _1bc40c086_FindTypeEnum(_self_.as<_1bc409eeb_sema>().alloc, _3728_ident);
}
inline jule::Str __jule_trait_method_1c6be338a_1c6bd2368(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd2654_Name(_self_.as<_1c6bd2368_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be338a_1c6bd5beb(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd5877_Name(_self_.as<_1c6bd5beb_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be338a_1c6bd9408(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd9084_Name(_self_.as<_1c6bd9408_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be338a_1c6bdcb59(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bdc7d5_Name(_self_.as<_1c6bdcb59_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be338a_1c6be1366(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6be0ee2_Name(_self_.as<_1c6be1366_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c6be3478_1c6bd2368(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd2a2d_Short(_self_.as<_1c6bd2368_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c6be3478_1c6bd5beb(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd626d_Short(_self_.as<_1c6bd5beb_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c6be3478_1c6bd9408(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd997a_Short(_self_.as<_1c6bd9408_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c6be3478_1c6bdcb59(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bdd1cb_Short(_self_.as<_1c6bdcb59_Flag>().alloc);
}
inline jule::I32 __jule_trait_method_1c6be3478_1c6be1366(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6be18d8_Short(_self_.as<_1c6be1366_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be4d4d_1c6bd2368(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd2797_What(_self_.as<_1c6bd2368_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be4d4d_1c6bd5beb(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd5ed7_What(_self_.as<_1c6bd5beb_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be4d4d_1c6bd9408(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bd96e4_What(_self_.as<_1c6bd9408_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be4d4d_1c6bdcb59(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6bdce45_What(_self_.as<_1c6bdcb59_Flag>().alloc);
}
inline jule::Str __jule_trait_method_1c6be4d4d_1c6be1366(jule::Ptr<jule::Uintptr> _self_) {
	return _1c6be1652_What(_self_.as<_1c6be1366_Flag>().alloc);
}
inline void __jule_trait_method_1c6be525a_1c6bd2368(jule::Ptr<jule::Uintptr> _self_) {
	_1c6bd28da_Reset(_self_.as<_1c6bd2368_Flag>().alloc);
}
inline void __jule_trait_method_1c6be525a_1c6bd5beb(jule::Ptr<jule::Uintptr> _self_) {
	_1c6bd612a_Reset(_self_.as<_1c6bd5beb_Flag>().alloc);
}
inline void __jule_trait_method_1c6be525a_1c6bd9408(jule::Ptr<jule::Uintptr> _self_) {
	_1c6bd9837_Reset(_self_.as<_1c6bd9408_Flag>().alloc);
}
inline void __jule_trait_method_1c6be525a_1c6bdcb59(jule::Ptr<jule::Uintptr> _self_) {
	_1c6bdd088_Reset(_self_.as<_1c6bdcb59_Flag>().alloc);
}
inline void __jule_trait_method_1c6be525a_1c6be1366(jule::Ptr<jule::Uintptr> _self_) {
	_1c6be1795_Reset(_self_.as<_1c6be1366_Flag>().alloc);
}


static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data0 {
	.dealloc=__jule_type_deallocator0,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0a73b28,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0a73b28,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0a73b28,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0a73b28,
};
static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data1 {
	.dealloc=__jule_type_deallocator1,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0a8c58c,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0a8c58c,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0a8c58c,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0a8c58c,
};
static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data2 {
	.dealloc=__jule_type_deallocator2,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0a79e5e,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0a79e5e,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0a79e5e,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0a79e5e,
};
static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data3 {
	.dealloc=__jule_type_deallocator3,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0a8096a,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0a8096a,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0a8096a,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0a8096a,
};
static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data4 {
	.dealloc=__jule_type_deallocator4,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0a88cb4,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0a88cb4,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0a88cb4,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0a88cb4,
};
static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data5 {
	.dealloc=__jule_type_deallocator5,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0aa9433,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0aa9433,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0aa9433,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0aa9433,
};
static _1bc37e217_comptimeRangeKindMptrData _1bc37e217_comptimeRangeKind_mptr_data6 {
	.dealloc=__jule_type_deallocator6,
	._1bc37d59b_index=__jule_trait_method_1c0aca322_1c0aa27c2,
	._1bc37d90e_ready=__jule_trait_method_1c0aca8b6_1c0aa27c2,
	._1bc37dd2c_step=__jule_trait_method_1c0acb08c_1c0aa27c2,
	._1bc37e0b3_len=__jule_trait_method_1c0acb774_1c0aa27c2,
};
static _1bc3d9b9b_ImporterMptrData _1bc3d9b9b_Importer_mptr_data0 {
	.dealloc=__jule_type_deallocator7,
	._1bc3d8a24_SetModPath=__jule_trait_method_1c0acbab5_1c6562ce8,
	._1bc3d8c11_GetModPath=__jule_trait_method_1c0acc016_1c6562ce8,
	._1bc3d9052_ModById=__jule_trait_method_1c0acc423_1c6562ce8,
	._1bc3d9393_GetImport=__jule_trait_method_1c0acc8da_1c6562ce8,
	._1bc3d978e_ImportPackage=__jule_trait_method_1c0accec3_1c6562ce8,
	._1bc3d9a47_Imported=__jule_trait_method_1c0acd886_1c6562ce8,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data0 {
	.dealloc=__jule_type_deallocator8,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0950ad2,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0950ad2,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data1 {
	.dealloc=__jule_type_deallocator9,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c094ee55,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c094ee55,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data2 {
	.dealloc=__jule_type_deallocator10,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c096816b,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c096816b,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data3 {
	.dealloc=__jule_type_deallocator11,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0941e03,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0941e03,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data4 {
	.dealloc=__jule_type_deallocator12,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c094902b,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c094902b,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data5 {
	.dealloc=__jule_type_deallocator13,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a875cb,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a875cb,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data6 {
	.dealloc=__jule_type_deallocator14,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a76de5,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a76de5,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data7 {
	.dealloc=__jule_type_deallocator0,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a73b28,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a73b28,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data8 {
	.dealloc=__jule_type_deallocator15,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a90859,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a90859,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data9 {
	.dealloc=__jule_type_deallocator1,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a8c58c,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a8c58c,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data10 {
	.dealloc=__jule_type_deallocator16,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a7d22b,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a7d22b,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data11 {
	.dealloc=__jule_type_deallocator2,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a79e5e,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a79e5e,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data12 {
	.dealloc=__jule_type_deallocator17,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a83c37,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a83c37,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data13 {
	.dealloc=__jule_type_deallocator3,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a8096a,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a8096a,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data14 {
	.dealloc=__jule_type_deallocator4,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a88cb4,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a88cb4,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data15 {
	.dealloc=__jule_type_deallocator18,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0979c93,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0979c93,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data16 {
	.dealloc=__jule_type_deallocator19,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a938c3,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a938c3,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data17 {
	.dealloc=__jule_type_deallocator5,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0aa9433,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0aa9433,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data18 {
	.dealloc=__jule_type_deallocator20,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0aa5a8e,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0aa5a8e,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data19 {
	.dealloc=__jule_type_deallocator6,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0aa27c2,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0aa27c2,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data20 {
	.dealloc=__jule_type_deallocator21,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0a99522,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0a99522,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data21 {
	.dealloc=__jule_type_deallocator22,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0932c3a,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0932c3a,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data22 {
	.dealloc=__jule_type_deallocator23,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c09370a2,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c09370a2,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data23 {
	.dealloc=__jule_type_deallocator24,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c093d8b1,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c093d8b1,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data24 {
	.dealloc=__jule_type_deallocator25,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c094d5c4,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c094d5c4,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data25 {
	.dealloc=__jule_type_deallocator26,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c09b5c8a,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c09b5c8a,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data26 {
	.dealloc=__jule_type_deallocator27,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c09b421c,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c09b421c,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data27 {
	.dealloc=__jule_type_deallocator28,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c094bb77,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c094bb77,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data28 {
	.dealloc=__jule_type_deallocator29,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c0940176,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c0940176,
};
static _1bc4b6041_KindMptrData _1bc4b6041_Kind_mptr_data29 {
	.dealloc=__jule_type_deallocator30,
	._1bc4b5a9b_Str=__jule_trait_method_1c0acdd70_1c698b30e,
	._1bc4b5ddc_Equal=__jule_trait_method_1c0ace1e4_1c698b30e,
};
static _1bc4d634c_LookupMptrData _1bc4d634c_Lookup_mptr_data0 {
	.dealloc=__jule_type_deallocator31,
	._1bc4d4636_SelectPackage=__jule_trait_method_1c0ace766_1c0952de2,
	._1bc4d4a32_FindVar=__jule_trait_method_1c0ad05e1_1c0952de2,
	._1bc4d4e2d_FindTypeAlias=__jule_trait_method_1c0ad0bb8_1c0952de2,
	._1bc4d5329_FindStruct=__jule_trait_method_1c0ad12c3_1c0952de2,
	._1bc4d5725_FindFn=__jule_trait_method_1c0ad18cd_1c0952de2,
	._1bc4d5a66_FindTrait=__jule_trait_method_1c0ad1ed8_1c0952de2,
	._1bc4d5da7_FindEnum=__jule_trait_method_1c0ad2538_1c0952de2,
	._1bc4d61e8_FindTypeEnum=__jule_trait_method_1c0ad2a88_1c0952de2,
};
static _1bc4d634c_LookupMptrData _1bc4d634c_Lookup_mptr_data1 {
	.dealloc=__jule_type_deallocator32,
	._1bc4d4636_SelectPackage=__jule_trait_method_1c0ace766_1c0a27aaa,
	._1bc4d4a32_FindVar=__jule_trait_method_1c0ad05e1_1c0a27aaa,
	._1bc4d4e2d_FindTypeAlias=__jule_trait_method_1c0ad0bb8_1c0a27aaa,
	._1bc4d5329_FindStruct=__jule_trait_method_1c0ad12c3_1c0a27aaa,
	._1bc4d5725_FindFn=__jule_trait_method_1c0ad18cd_1c0a27aaa,
	._1bc4d5a66_FindTrait=__jule_trait_method_1c0ad1ed8_1c0a27aaa,
	._1bc4d5da7_FindEnum=__jule_trait_method_1c0ad2538_1c0a27aaa,
	._1bc4d61e8_FindTypeEnum=__jule_trait_method_1c0ad2a88_1c0a27aaa,
};
static _1bc4d634c_LookupMptrData _1bc4d634c_Lookup_mptr_data2 {
	.dealloc=__jule_type_deallocator33,
	._1bc4d4636_SelectPackage=__jule_trait_method_1c0ace766_1c0954520,
	._1bc4d4a32_FindVar=__jule_trait_method_1c0ad05e1_1c0954520,
	._1bc4d4e2d_FindTypeAlias=__jule_trait_method_1c0ad0bb8_1c0954520,
	._1bc4d5329_FindStruct=__jule_trait_method_1c0ad12c3_1c0954520,
	._1bc4d5725_FindFn=__jule_trait_method_1c0ad18cd_1c0954520,
	._1bc4d5a66_FindTrait=__jule_trait_method_1c0ad1ed8_1c0954520,
	._1bc4d5da7_FindEnum=__jule_trait_method_1c0ad2538_1c0954520,
	._1bc4d61e8_FindTypeEnum=__jule_trait_method_1c0ad2a88_1c0954520,
};
static _1bc4d634c_LookupMptrData _1bc4d634c_Lookup_mptr_data3 {
	.dealloc=__jule_type_deallocator34,
	._1bc4d4636_SelectPackage=__jule_trait_method_1c0ace766_1c0955345,
	._1bc4d4a32_FindVar=__jule_trait_method_1c0ad05e1_1c0955345,
	._1bc4d4e2d_FindTypeAlias=__jule_trait_method_1c0ad0bb8_1c0955345,
	._1bc4d5329_FindStruct=__jule_trait_method_1c0ad12c3_1c0955345,
	._1bc4d5725_FindFn=__jule_trait_method_1c0ad18cd_1c0955345,
	._1bc4d5a66_FindTrait=__jule_trait_method_1c0ad1ed8_1c0955345,
	._1bc4d5da7_FindEnum=__jule_trait_method_1c0ad2538_1c0955345,
	._1bc4d61e8_FindTypeEnum=__jule_trait_method_1c0ad2a88_1c0955345,
};
static _1bc4d634c_LookupMptrData _1bc4d634c_Lookup_mptr_data4 {
	.dealloc=__jule_type_deallocator35,
	._1bc4d4636_SelectPackage=__jule_trait_method_1c0ace766_1c09523ec,
	._1bc4d4a32_FindVar=__jule_trait_method_1c0ad05e1_1c09523ec,
	._1bc4d4e2d_FindTypeAlias=__jule_trait_method_1c0ad0bb8_1c09523ec,
	._1bc4d5329_FindStruct=__jule_trait_method_1c0ad12c3_1c09523ec,
	._1bc4d5725_FindFn=__jule_trait_method_1c0ad18cd_1c09523ec,
	._1bc4d5a66_FindTrait=__jule_trait_method_1c0ad1ed8_1c09523ec,
	._1bc4d5da7_FindEnum=__jule_trait_method_1c0ad2538_1c09523ec,
	._1bc4d61e8_FindTypeEnum=__jule_trait_method_1c0ad2a88_1c09523ec,
};
static _1be0a5b51_CommonFlagMptrData _1be0a5b51_CommonFlag_mptr_data0 {
	.dealloc=__jule_type_deallocator36,
	._1bcdd5be6_Name=__jule_trait_method_1c6be338a_1c6bd2368,
	._1bcdd5d39_Short=__jule_trait_method_1c6be3478_1c6bd2368,
	._1be0a5832_What=__jule_trait_method_1c6be4d4d_1c6bd2368,
	._1be0a59ec_Reset=__jule_trait_method_1c6be525a_1c6bd2368,
};
static _1be0a5b51_CommonFlagMptrData _1be0a5b51_CommonFlag_mptr_data1 {
	.dealloc=__jule_type_deallocator37,
	._1bcdd5be6_Name=__jule_trait_method_1c6be338a_1c6bd5beb,
	._1bcdd5d39_Short=__jule_trait_method_1c6be3478_1c6bd5beb,
	._1be0a5832_What=__jule_trait_method_1c6be4d4d_1c6bd5beb,
	._1be0a59ec_Reset=__jule_trait_method_1c6be525a_1c6bd5beb,
};
static _1be0a5b51_CommonFlagMptrData _1be0a5b51_CommonFlag_mptr_data2 {
	.dealloc=__jule_type_deallocator38,
	._1bcdd5be6_Name=__jule_trait_method_1c6be338a_1c6bd9408,
	._1bcdd5d39_Short=__jule_trait_method_1c6be3478_1c6bd9408,
	._1be0a5832_What=__jule_trait_method_1c6be4d4d_1c6bd9408,
	._1be0a59ec_Reset=__jule_trait_method_1c6be525a_1c6bd9408,
};
static _1be0a5b51_CommonFlagMptrData _1be0a5b51_CommonFlag_mptr_data3 {
	.dealloc=__jule_type_deallocator39,
	._1bcdd5be6_Name=__jule_trait_method_1c6be338a_1c6bdcb59,
	._1bcdd5d39_Short=__jule_trait_method_1c6be3478_1c6bdcb59,
	._1be0a5832_What=__jule_trait_method_1c6be4d4d_1c6bdcb59,
	._1be0a59ec_Reset=__jule_trait_method_1c6be525a_1c6bdcb59,
};
static _1be0a5b51_CommonFlagMptrData _1be0a5b51_CommonFlag_mptr_data4 {
	.dealloc=__jule_type_deallocator40,
	._1bcdd5be6_Name=__jule_trait_method_1c6be338a_1c6be1366,
	._1bcdd5d39_Short=__jule_trait_method_1c6be3478_1c6be1366,
	._1be0a5832_What=__jule_trait_method_1c6be4d4d_1c6be1366,
	._1be0a59ec_Reset=__jule_trait_method_1c6be525a_1c6be1366,
};


jule::Bool __jule_any_type0_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type0_to_str(void *alloc) noexcept { return _1c00ed7d0_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type0{.dealloc=__jule_type_deallocator41, .eq=__jule_any_type0_eq, .to_str=__jule_any_type0_to_str};
jule::Bool __jule_any_type1_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type1_to_str(void *alloc) noexcept { return _1be307e08_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type1{.dealloc=__jule_type_deallocator42, .eq=__jule_any_type1_eq, .to_str=__jule_any_type1_to_str};
jule::Bool __jule_any_type2_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I64*>(alloc) == *reinterpret_cast<jule::I64*>(other)); }
jule::Str __jule_any_type2_to_str(void *alloc) noexcept { return _1be30a8de_toStr(*reinterpret_cast<const jule::I64*>(alloc)); }
struct jule::Any::Type __jule_any_type2{.dealloc=__jule_type_deallocator43, .eq=__jule_any_type2_eq, .to_str=__jule_any_type2_to_str};
jule::Bool __jule_any_type3_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U64*>(alloc) == *reinterpret_cast<jule::U64*>(other)); }
jule::Str __jule_any_type3_to_str(void *alloc) noexcept { return _1be317de6_toStr(*reinterpret_cast<const jule::U64*>(alloc)); }
struct jule::Any::Type __jule_any_type3{.dealloc=__jule_type_deallocator44, .eq=__jule_any_type3_eq, .to_str=__jule_any_type3_to_str};
jule::Bool __jule_any_type4_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Bool*>(alloc) == *reinterpret_cast<jule::Bool*>(other)); }
jule::Str __jule_any_type4_to_str(void *alloc) noexcept { return _1be3082d2_toStr(*reinterpret_cast<const jule::Bool*>(alloc)); }
struct jule::Any::Type __jule_any_type4{.dealloc=__jule_type_deallocator45, .eq=__jule_any_type4_eq, .to_str=__jule_any_type4_to_str};
jule::Bool __jule_any_type5_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type5_to_str(void *alloc) noexcept { return _1be2ec53a_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type5{.dealloc=__jule_type_deallocator46, .eq=__jule_any_type5_eq, .to_str=__jule_any_type5_to_str};
jule::Bool __jule_any_type6_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F64*>(alloc) == *reinterpret_cast<jule::F64*>(other)); }
jule::Str __jule_any_type6_to_str(void *alloc) noexcept { return _1be31b647_toStr(*reinterpret_cast<const jule::F64*>(alloc)); }
struct jule::Any::Type __jule_any_type6{.dealloc=__jule_type_deallocator47, .eq=__jule_any_type6_eq, .to_str=__jule_any_type6_to_str};
struct jule::Any::Type __jule_any_type7{.dealloc=__jule_type_deallocator48, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type7_compare(const jule::Any &any, const jule::Ptr<_1bc42dc12_Var> &other) { return any.type == &__jule_any_type7 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type8{.dealloc=__jule_type_deallocator49, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type8_compare(const jule::Any &any, const jule::Ptr<_1bc4b5705_TypeAlias> &other) { return any.type == &__jule_any_type8 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type9{.dealloc=__jule_type_deallocator50, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type9_compare(const jule::Any &any, const jule::Ptr<_1bc27d26a_Struct> &other) { return any.type == &__jule_any_type9 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type10{.dealloc=__jule_type_deallocator51, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type10_compare(const jule::Any &any, const jule::Ptr<_1bc2ee055_Fn> &other) { return any.type == &__jule_any_type10 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type11{.dealloc=__jule_type_deallocator10, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type11_compare(const jule::Any &any, const jule::Ptr<_1bc309769_Trait> &other) { return any.type == &__jule_any_type11 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type12{.dealloc=__jule_type_deallocator11, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type12_compare(const jule::Any &any, const jule::Ptr<_1bc30be20_Enum> &other) { return any.type == &__jule_any_type12 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type13{.dealloc=__jule_type_deallocator12, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type13_compare(const jule::Any &any, const jule::Ptr<_1bc30d62a_TypeEnum> &other) { return any.type == &__jule_any_type13 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type14{.dealloc=__jule_type_deallocator52, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type14_compare(const jule::Any &any, const jule::Ptr<_1bc27a377_Field> &other) { return any.type == &__jule_any_type14 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type15{.dealloc=__jule_type_deallocator53, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type15_compare(const jule::Any &any, const jule::Ptr<_1bac25065_Const> &other) { return any.type == &__jule_any_type15 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type16{.dealloc=__jule_type_deallocator54, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type16_compare(const jule::Any &any, const jule::Ptr<_1bc30b3b4_EnumItem> &other) { return any.type == &__jule_any_type16 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type17{.dealloc=__jule_type_deallocator55, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type17_compare(const jule::Any &any, const jule::Ptr<_1bc2ec581_Param> &other) { return any.type == &__jule_any_type17 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type18_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::Str*>(alloc) == *reinterpret_cast<jule::Str*>(other)); }
jule::Str __jule_any_type18_to_str(void *alloc) noexcept { return _1ad07d92b_toStr(*reinterpret_cast<const jule::Str*>(alloc)); }
struct jule::Any::Type __jule_any_type18{.dealloc=__jule_type_deallocator56, .eq=__jule_any_type18_eq, .to_str=__jule_any_type18_to_str};
struct jule::Any::Type __jule_any_type19{.dealloc=__jule_type_deallocator57, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type19_compare(const jule::Any &any, const jule::Ptr<_1bc3ae874_Label> &other) { return any.type == &__jule_any_type19 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type20{.dealloc=__jule_type_deallocator58, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type20_compare(const jule::Any &any, const jule::Ptr<_1bc3abd27_Scope> &other) { return any.type == &__jule_any_type20 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type21{.dealloc=__jule_type_deallocator59, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type21_compare(const jule::Any &any, const jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> &other) { return any.type == &__jule_any_type21 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type22{.dealloc=__jule_type_deallocator60, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type22_compare(const jule::Any &any, const jule::Ptr<_1bc48354c_Data> &other) { return any.type == &__jule_any_type22 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type23{.dealloc=__jule_type_deallocator61, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type23_compare(const jule::Any &any, const jule::Ptr<_1bc2ead43_BackendEmitExprModel> &other) { return any.type == &__jule_any_type23 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type24{.dealloc=__jule_type_deallocator62, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type24_compare(const jule::Any &any, const jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> &other) { return any.type == &__jule_any_type24 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type25{.dealloc=__jule_type_deallocator63, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type25_compare(const jule::Any &any, const jule::Ptr<_1bc2e767a_BuiltinPrintCallExprModel> &other) { return any.type == &__jule_any_type25 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type26{.dealloc=__jule_type_deallocator64, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type26_compare(const jule::Any &any, const jule::Ptr<_1bc2e7977_BuiltinPrintlnCallExprModel> &other) { return any.type == &__jule_any_type26 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type27{.dealloc=__jule_type_deallocator65, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type27_compare(const jule::Any &any, const jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> &other) { return any.type == &__jule_any_type27 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type28{.dealloc=__jule_type_deallocator66, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type28_compare(const jule::Any &any, const jule::Ptr<_1bc2e9957_BuiltinCopyCallExprModel> &other) { return any.type == &__jule_any_type28 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type29{.dealloc=__jule_type_deallocator67, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type29_compare(const jule::Any &any, const jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> &other) { return any.type == &__jule_any_type29 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type30{.dealloc=__jule_type_deallocator68, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type30_compare(const jule::Any &any, const jule::Ptr<_1bc2eb140_FreeExprModel> &other) { return any.type == &__jule_any_type30 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type31{.dealloc=__jule_type_deallocator69, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type31_compare(const jule::Any &any, const jule::Ptr<_1bc2e3c70_FnCallExprModel> &other) { return any.type == &__jule_any_type31 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type32{.dealloc=__jule_type_deallocator70, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type32_compare(const jule::Any &any, const jule::Ptr<_1bc3ac960_Conditional> &other) { return any.type == &__jule_any_type32 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type33{.dealloc=__jule_type_deallocator71, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type33_compare(const jule::Any &any, const jule::Ptr<_1bc3acc5c_InfIter> &other) { return any.type == &__jule_any_type33 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type34{.dealloc=__jule_type_deallocator72, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type34_compare(const jule::Any &any, const jule::Ptr<_1bc271cca_WhileKind> &other) { return any.type == &__jule_any_type34 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type35{.dealloc=__jule_type_deallocator73, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type35_compare(const jule::Any &any, const jule::Ptr<_1bc3ad213_WhileIter> &other) { return any.type == &__jule_any_type35 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type36{.dealloc=__jule_type_deallocator74, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type36_compare(const jule::Any &any, const jule::Ptr<_1bc2726d2_RangeKind> &other) { return any.type == &__jule_any_type36 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type37{.dealloc=__jule_type_deallocator75, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type37_compare(const jule::Any &any, const jule::Ptr<_1bc3adb5e_RangeIter> &other) { return any.type == &__jule_any_type37 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type38{.dealloc=__jule_type_deallocator76, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type38_compare(const jule::Any &any, const jule::Ptr<_1bc3adee4_ContSt> &other) { return any.type == &__jule_any_type38 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type39{.dealloc=__jule_type_deallocator77, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type39_compare(const jule::Any &any, const jule::Ptr<_1bc3aeed4_GotoSt> &other) { return any.type == &__jule_any_type39 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type40{.dealloc=__jule_type_deallocator78, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type40_compare(const jule::Any &any, const jule::Ptr<_1bc3b03ad_Postfix> &other) { return any.type == &__jule_any_type40 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type41{.dealloc=__jule_type_deallocator79, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type41_compare(const jule::Any &any, const jule::Ptr<_1bc3b0864_Assign> &other) { return any.type == &__jule_any_type41 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type42{.dealloc=__jule_type_deallocator80, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type42_compare(const jule::Any &any, const jule::Ptr<_1bc26355d_IdentExpr> &other) { return any.type == &__jule_any_type42 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type43{.dealloc=__jule_type_deallocator81, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type43_compare(const jule::Any &any, const jule::Ptr<_1bc2e4600_IndexingExprModel> &other) { return any.type == &__jule_any_type43 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type44{.dealloc=__jule_type_deallocator82, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type44_compare(const jule::Any &any, const jule::Ptr<_1bc3b0d1a_MultiAssign> &other) { return any.type == &__jule_any_type44 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type45{.dealloc=__jule_type_deallocator83, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type45_compare(const jule::Any &any, const jule::Ptr<_1bc3b1557_Match> &other) { return any.type == &__jule_any_type45 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type46{.dealloc=__jule_type_deallocator84, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type46_compare(const jule::Any &any, const jule::Ptr<_1bc3b2778_FallSt> &other) { return any.type == &__jule_any_type46 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type47{.dealloc=__jule_type_deallocator85, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type47_compare(const jule::Any &any, const jule::Ptr<_1bc3ae3bd_BreakSt> &other) { return any.type == &__jule_any_type47 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type48{.dealloc=__jule_type_deallocator86, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type48_compare(const jule::Any &any, const jule::Ptr<_1bc3b2b1e_RetSt> &other) { return any.type == &__jule_any_type48 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type49{.dealloc=__jule_type_deallocator87, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type49_compare(const jule::Any &any, const jule::Ptr<_1bc26ca0c_ScopeTree> &other) { return any.type == &__jule_any_type49 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type50{.dealloc=__jule_type_deallocator88, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type50_compare(const jule::Any &any, const jule::Ptr<_1bc270856_VarDecl> &other) { return any.type == &__jule_any_type50 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type51{.dealloc=__jule_type_deallocator89, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type51_compare(const jule::Any &any, const jule::Ptr<_1bc274508_TypeAliasDecl> &other) { return any.type == &__jule_any_type51 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type52{.dealloc=__jule_type_deallocator90, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type52_compare(const jule::Any &any, const jule::Ptr<_1bc261c43_Expr> &other) { return any.type == &__jule_any_type52 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type53{.dealloc=__jule_type_deallocator91, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type53_compare(const jule::Any &any, const jule::Ptr<_1bc273cbb_Conditional> &other) { return any.type == &__jule_any_type53 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type54{.dealloc=__jule_type_deallocator92, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type54_compare(const jule::Any &any, const jule::Ptr<_1bc2714a0_Iter> &other) { return any.type == &__jule_any_type54 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type55{.dealloc=__jule_type_deallocator93, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type55_compare(const jule::Any &any, const jule::Ptr<_1bc272e85_ContSt> &other) { return any.type == &__jule_any_type55 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type56{.dealloc=__jule_type_deallocator94, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type56_compare(const jule::Any &any, const jule::Ptr<_1bc269ee3_LabelSt> &other) { return any.type == &__jule_any_type56 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type57{.dealloc=__jule_type_deallocator95, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type57_compare(const jule::Any &any, const jule::Ptr<_1bc26a3bc_GotoSt> &other) { return any.type == &__jule_any_type57 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type58{.dealloc=__jule_type_deallocator96, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type58_compare(const jule::Any &any, const jule::Ptr<_1bc26b3ac_AssignSt> &other) { return any.type == &__jule_any_type58 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type59{.dealloc=__jule_type_deallocator97, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type59_compare(const jule::Any &any, const jule::Ptr<_1bc2752c8_MatchCase> &other) { return any.type == &__jule_any_type59 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type60{.dealloc=__jule_type_deallocator98, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type60_compare(const jule::Any &any, const jule::Ptr<_1bc26a6b9_FallSt> &other) { return any.type == &__jule_any_type60 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type61{.dealloc=__jule_type_deallocator99, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type61_compare(const jule::Any &any, const jule::Ptr<_1bc272aab_BreakSt> &other) { return any.type == &__jule_any_type61 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type62{.dealloc=__jule_type_deallocator100, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type62_compare(const jule::Any &any, const jule::Ptr<_1bc270c30_RetSt> &other) { return any.type == &__jule_any_type62 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type63{.dealloc=__jule_type_deallocator101, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type63_compare(const jule::Any &any, const jule::Ptr<_1bc262617_UseExpr> &other) { return any.type == &__jule_any_type63 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type64{.dealloc=__jule_type_deallocator8, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type64_compare(const jule::Any &any, const jule::Ptr<_1bc2810c5_StructIns> &other) { return any.type == &__jule_any_type64 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type65{.dealloc=__jule_type_deallocator9, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type65_compare(const jule::Any &any, const jule::Ptr<_1bc302113_FnIns> &other) { return any.type == &__jule_any_type65 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type66{.dealloc=__jule_type_deallocator102, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type66_compare(const jule::Any &any, const jule::Ptr<_1bc2793ba_Impl> &other) { return any.type == &__jule_any_type66 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type67{.dealloc=__jule_type_deallocator103, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type67_compare(const jule::Any &any, const jule::Ptr<_1bc27851d_StructDecl> &other) { return any.type == &__jule_any_type67 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type68{.dealloc=__jule_type_deallocator104, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type68_compare(const jule::Any &any, const jule::Ptr<_1bc26e69b_FnDecl> &other) { return any.type == &__jule_any_type68 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type69{.dealloc=__jule_type_deallocator105, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type69_compare(const jule::Any &any, const jule::Ptr<_1bc278c5a_TraitDecl> &other) { return any.type == &__jule_any_type69 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type70{.dealloc=__jule_type_deallocator106, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type70_compare(const jule::Any &any, const jule::Ptr<_1bc2768c3_EnumDecl> &other) { return any.type == &__jule_any_type70 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type71{.dealloc=__jule_type_deallocator107, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type71_compare(const jule::Any &any, const jule::Ptr<_1bc27785d_TypeEnumDecl> &other) { return any.type == &__jule_any_type71 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type72{.dealloc=__jule_type_deallocator108, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type72_compare(const jule::Any &any, const jule::Ptr<_1bc25ebca_ArrTypeDecl> &other) { return any.type == &__jule_any_type72 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type73{.dealloc=__jule_type_deallocator109, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type73_compare(const jule::Any &any, const jule::Ptr<_1bc25dd3e_SlcTypeDecl> &other) { return any.type == &__jule_any_type73 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type74{.dealloc=__jule_type_deallocator110, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type74_compare(const jule::Any &any, const jule::Ptr<_1bc25e438_PtrTypeDecl> &other) { return any.type == &__jule_any_type74 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type75{.dealloc=__jule_type_deallocator111, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type75_compare(const jule::Any &any, const jule::Ptr<_1bc25d9a9_SptrTypeDecl> &other) { return any.type == &__jule_any_type75 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type76{.dealloc=__jule_type_deallocator112, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type76_compare(const jule::Any &any, const jule::Ptr<_1bc260428_MapTypeDecl> &other) { return any.type == &__jule_any_type76 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type77{.dealloc=__jule_type_deallocator113, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type77_compare(const jule::Any &any, const jule::Ptr<_1bc25e13b_TupleTypeDecl> &other) { return any.type == &__jule_any_type77 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type78{.dealloc=__jule_type_deallocator114, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type78_compare(const jule::Any &any, const jule::Ptr<_1bc25d019_IdentTypeDecl> &other) { return any.type == &__jule_any_type78 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type79{.dealloc=__jule_type_deallocator115, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type79_compare(const jule::Any &any, const jule::Ptr<_1bc2641c9_VariadicExpr> &other) { return any.type == &__jule_any_type79 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type80{.dealloc=__jule_type_deallocator116, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type80_compare(const jule::Any &any, const jule::Ptr<_1bc2e4149_SliceExprModel> &other) { return any.type == &__jule_any_type80 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type81{.dealloc=__jule_type_deallocator117, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type81_compare(const jule::Any &any, const jule::Ptr<_1bc266462_FieldExprPair> &other) { return any.type == &__jule_any_type81 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type82{.dealloc=__jule_type_deallocator118, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type82_compare(const jule::Any &any, const jule::Ptr<_1bc267a6d_KeyValPair> &other) { return any.type == &__jule_any_type82 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type83{.dealloc=__jule_type_deallocator119, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type83_compare(const jule::Any &any, const jule::Ptr<_1bc262837_TupleExpr> &other) { return any.type == &__jule_any_type83 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type84{.dealloc=__jule_type_deallocator120, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type84_compare(const jule::Any &any, const jule::Ptr<_1bc2e737d_TupleExprModel> &other) { return any.type == &__jule_any_type84 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type85{.dealloc=__jule_type_deallocator121, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type85_compare(const jule::Any &any, const jule::Ptr<_1bc26596c_FnCallExpr> &other) { return any.type == &__jule_any_type85 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type86{.dealloc=__jule_type_deallocator122, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type86_compare(const jule::Any &any, const jule::Ptr<_1bc2ea9be_RuneExprModel> &other) { return any.type == &__jule_any_type86 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type87{.dealloc=__jule_type_deallocator22, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type87_compare(const jule::Any &any, const jule::Ptr<_1bc4b64e7_Type> &other) { return any.type == &__jule_any_type87 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type88{.dealloc=__jule_type_deallocator123, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type88_compare(const jule::Any &any, const jule::Ptr<_1bc2e7081_ArrayExprModel> &other) { return any.type == &__jule_any_type88 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type89{.dealloc=__jule_type_deallocator124, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type89_compare(const jule::Any &any, const jule::Ptr<_1bc264d56_SubIdentExpr> &other) { return any.type == &__jule_any_type89 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type90{.dealloc=__jule_type_deallocator125, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type90_compare(const jule::Any &any, const jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> &other) { return any.type == &__jule_any_type90 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type91{.dealloc=__jule_type_deallocator126, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type91_compare(const jule::Any &any, const jule::Ptr<_1bc263d00_UnaryExpr> &other) { return any.type == &__jule_any_type91 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type92{.dealloc=__jule_type_deallocator127, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type92_compare(const jule::Any &any, const jule::Ptr<_1bc25c90e_TypeDecl> &other) { return any.type == &__jule_any_type92 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type93{.dealloc=__jule_type_deallocator128, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type93_compare(const jule::Any &any, const jule::Ptr<_1bc26497c_NamespaceExpr> &other) { return any.type == &__jule_any_type93 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type94{.dealloc=__jule_type_deallocator129, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type94_compare(const jule::Any &any, const jule::Ptr<_1bc25d6ac_NamespaceTypeDecl> &other) { return any.type == &__jule_any_type94 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type95{.dealloc=__jule_type_deallocator130, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type95_compare(const jule::Any &any, const jule::Ptr<_1bc2e58dc_SlicingExprModel> &other) { return any.type == &__jule_any_type95 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type96{.dealloc=__jule_type_deallocator131, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type96_compare(const jule::Any &any, const jule::Ptr<_1bc2e33bd_CastingExprModel> &other) { return any.type == &__jule_any_type96 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type97{.dealloc=__jule_type_deallocator132, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type97_compare(const jule::Any &any, const jule::Ptr<_1bc268299_SliceExpr> &other) { return any.type == &__jule_any_type97 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type98{.dealloc=__jule_type_deallocator133, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type98_compare(const jule::Any &any, const jule::Ptr<_1bc2e2a3d_StructLitExprModel> &other) { return any.type == &__jule_any_type98 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type99{.dealloc=__jule_type_deallocator134, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type99_compare(const jule::Any &any, const jule::Ptr<_1bc2e6ba7_StructStaticIdentExprModel> &other) { return any.type == &__jule_any_type99 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type100{.dealloc=__jule_type_deallocator135, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type100_compare(const jule::Any &any, const jule::Ptr<_1bc2e5e70_TraitSubIdentExprModel> &other) { return any.type == &__jule_any_type100 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type101{.dealloc=__jule_type_deallocator136, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type101_compare(const jule::Any &any, const jule::Ptr<_1bc2e6811_StructSubIdentExprModel> &other) { return any.type == &__jule_any_type101 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type102{.dealloc=__jule_type_deallocator137, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type102_compare(const jule::Any &any, const jule::Ptr<_1bc2e5359_MapExprModel> &other) { return any.type == &__jule_any_type102 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type103{.dealloc=__jule_type_deallocator138, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type103_compare(const jule::Any &any, const jule::Ptr<_1bc2e4aa6_AnonFnExprModel> &other) { return any.type == &__jule_any_type103 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type104{.dealloc=__jule_type_deallocator139, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type104_compare(const jule::Any &any, const jule::Ptr<_1bc26200c_RangeExpr> &other) { return any.type == &__jule_any_type104 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type105{.dealloc=__jule_type_deallocator140, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type105_compare(const jule::Any &any, const jule::Ptr<_1bc262bcd_LitExpr> &other) { return any.type == &__jule_any_type105 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type106{.dealloc=__jule_type_deallocator141, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type106_compare(const jule::Any &any, const jule::Ptr<_1bc2630a7_UnsafeExpr> &other) { return any.type == &__jule_any_type106 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type107{.dealloc=__jule_type_deallocator142, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type107_compare(const jule::Any &any, const jule::Ptr<_1bc268c06_IndexingExpr> &other) { return any.type == &__jule_any_type107 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type108{.dealloc=__jule_type_deallocator143, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type108_compare(const jule::Any &any, const jule::Ptr<_1bc269366_SlicingExpr> &other) { return any.type == &__jule_any_type108 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type109{.dealloc=__jule_type_deallocator144, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type109_compare(const jule::Any &any, const jule::Ptr<_1bc2645a3_CastExpr> &other) { return any.type == &__jule_any_type109 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type110{.dealloc=__jule_type_deallocator145, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type110_compare(const jule::Any &any, const jule::Ptr<_1bc266c8c_StructLit> &other) { return any.type == &__jule_any_type110 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type111{.dealloc=__jule_type_deallocator146, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type111_compare(const jule::Any &any, const jule::Ptr<_1bc267243_BraceLit> &other) { return any.type == &__jule_any_type111 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type112{.dealloc=__jule_type_deallocator147, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type112_compare(const jule::Any &any, const jule::Ptr<_1bc26530c_BinaryExpr> &other) { return any.type == &__jule_any_type112 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type113{.dealloc=__jule_type_deallocator148, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type113_compare(const jule::Any &any, const jule::Ptr<_1bc2e2169_UnaryExprModel> &other) { return any.type == &__jule_any_type113 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type114{.dealloc=__jule_type_deallocator149, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type114_compare(const jule::Any &any, const jule::Ptr<_1bc2e1c90_BinaryExprModel> &other) { return any.type == &__jule_any_type114 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type115{.dealloc=__jule_type_deallocator150, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type115_compare(const jule::Any &any, const jule::Ptr<_1bc2e2d3a_AllocStructLitExprModel> &other) { return any.type == &__jule_any_type115 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type116{.dealloc=__jule_type_deallocator151, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type116_compare(const jule::Any &any, const jule::Ptr<_1bc2e7d51_BuiltinNewCallExprModel> &other) { return any.type == &__jule_any_type116 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type117{.dealloc=__jule_type_deallocator152, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type117_compare(const jule::Any &any, const jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> &other) { return any.type == &__jule_any_type117 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type118{.dealloc=__jule_type_deallocator153, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type118_compare(const jule::Any &any, const jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> &other) { return any.type == &__jule_any_type118 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type119{.dealloc=__jule_type_deallocator154, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type119_compare(const jule::Any &any, const jule::Ptr<_1bc2e91a4_BuiltinCapCallExprModel> &other) { return any.type == &__jule_any_type119 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type120{.dealloc=__jule_type_deallocator155, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type120_compare(const jule::Any &any, const jule::Ptr<_1bc2ea12d_SizeofExprModel> &other) { return any.type == &__jule_any_type120 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type121{.dealloc=__jule_type_deallocator156, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type121_compare(const jule::Any &any, const jule::Ptr<_1bc2ea7d2_AlignofExprModel> &other) { return any.type == &__jule_any_type121 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type122{.dealloc=__jule_type_deallocator157, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type122_compare(const jule::Any &any, const jule::Ptr<_1bdad9bc4_ExceptionalForwardingExprModel> &other) { return any.type == &__jule_any_type122 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type123{.dealloc=__jule_type_deallocator158, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type123_compare(const jule::Any &any, const jule::Ptr<_1bdadcb72_StrRuneIter> &other) { return any.type == &__jule_any_type123 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type124{.dealloc=__jule_type_deallocator159, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type124_compare(const jule::Any &any, const jule::Ptr<_1bdadb8eb_MutSlicingExprModel> &other) { return any.type == &__jule_any_type124 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type125{.dealloc=__jule_type_deallocator160, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type125_compare(const jule::Any &any, const jule::Ptr<_1bdadc3be_PushToSliceExprModel> &other) { return any.type == &__jule_any_type125 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type126{.dealloc=__jule_type_deallocator161, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type126_compare(const jule::Any &any, const jule::Ptr<_1bdadc798_AppendToSliceExprModel> &other) { return any.type == &__jule_any_type126 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type127{.dealloc=__jule_type_deallocator162, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type127_compare(const jule::Any &any, const jule::Ptr<_1bdada653_SwapExprModel> &other) { return any.type == &__jule_any_type127 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type128{.dealloc=__jule_type_deallocator163, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type128_compare(const jule::Any &any, const jule::Ptr<_1bdadaa2c_EmptyCompareExprModel> &other) { return any.type == &__jule_any_type128 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type129{.dealloc=__jule_type_deallocator164, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type129_compare(const jule::Any &any, const jule::Ptr<_1bdadb2d0_StrCompExprModel> &other) { return any.type == &__jule_any_type129 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type130{.dealloc=__jule_type_deallocator165, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type130_compare(const jule::Any &any, const jule::Ptr<_1bdada235_StrConcatExprModel> &other) { return any.type == &__jule_any_type130 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type131{.dealloc=__jule_type_deallocator166, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type131_compare(const jule::Any &any, const jule::Ptr<_1bdadbbe8_UnsafeBinaryExprModel> &other) { return any.type == &__jule_any_type131 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type132{.dealloc=__jule_type_deallocator167, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type132_compare(const jule::Any &any, const jule::Ptr<_1bdadce6e_UnsafeDerefExprModel> &other) { return any.type == &__jule_any_type132 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type133{.dealloc=__jule_type_deallocator168, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type133_compare(const jule::Any &any, const jule::Ptr<_1bdadad29_RefExprModel> &other) { return any.type == &__jule_any_type133 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type134{.dealloc=__jule_type_deallocator169, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type134_compare(const jule::Any &any, const jule::Ptr<_1bc2e2697_StructArgExprModel> &other) { return any.type == &__jule_any_type134 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type135{.dealloc=__jule_type_deallocator170, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type135_compare(const jule::Any &any, const jule::Ptr<_1bdadd26b_UnsafeCastingExprModel> &other) { return any.type == &__jule_any_type135 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type136{.dealloc=__jule_type_deallocator171, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type136_compare(const jule::Any &any, const jule::Ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel> &other) { return any.type == &__jule_any_type136 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type137{.dealloc=__jule_type_deallocator172, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type137_compare(const jule::Any &any, const jule::Ptr<_1bdadbee5_UnsafeIndexingExprModel> &other) { return any.type == &__jule_any_type137 && __jule_ptrEqual(any.data.alloc, other.alloc); }
struct jule::Any::Type __jule_any_type138{.dealloc=__jule_type_deallocator46, .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};
jule::Bool __jule_any_type138_compare(const jule::Any &any, const jule::Ptr<jule::Str> &other) { return any.type == &__jule_any_type138 && __jule_ptrEqual(any.data.alloc, other.alloc); }
jule::Bool __jule_any_type139_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type139_to_str(void *alloc) noexcept { return _1c0107cb2_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type139{.dealloc=__jule_type_deallocator173, .eq=__jule_any_type139_eq, .to_str=__jule_any_type139_to_str};
jule::Bool __jule_any_type140_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type140_to_str(void *alloc) noexcept { return _1c013c313_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type140{.dealloc=__jule_type_deallocator174, .eq=__jule_any_type140_eq, .to_str=__jule_any_type140_to_str};
jule::Bool __jule_any_type141_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U8*>(alloc) == *reinterpret_cast<jule::U8*>(other)); }
jule::Str __jule_any_type141_to_str(void *alloc) noexcept { return _1be311120_toStr(*reinterpret_cast<const jule::U8*>(alloc)); }
struct jule::Any::Type __jule_any_type141{.dealloc=__jule_type_deallocator175, .eq=__jule_any_type141_eq, .to_str=__jule_any_type141_to_str};
jule::Bool __jule_any_type142_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I32*>(alloc) == *reinterpret_cast<jule::I32*>(other)); }
jule::Str __jule_any_type142_to_str(void *alloc) noexcept { return _1c057d5bc_toStr(*reinterpret_cast<const jule::I32*>(alloc)); }
struct jule::Any::Type __jule_any_type142{.dealloc=__jule_type_deallocator176, .eq=__jule_any_type142_eq, .to_str=__jule_any_type142_to_str};
jule::Bool __jule_any_type143_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::F32*>(alloc) == *reinterpret_cast<jule::F32*>(other)); }
jule::Str __jule_any_type143_to_str(void *alloc) noexcept { return _1be31b2c3_toStr(*reinterpret_cast<const jule::F32*>(alloc)); }
struct jule::Any::Type __jule_any_type143{.dealloc=__jule_type_deallocator177, .eq=__jule_any_type143_eq, .to_str=__jule_any_type143_to_str};
jule::Bool __jule_any_type144_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I8*>(alloc) == *reinterpret_cast<jule::I8*>(other)); }
jule::Str __jule_any_type144_to_str(void *alloc) noexcept { return _1be3029e6_toStr(*reinterpret_cast<const jule::I8*>(alloc)); }
struct jule::Any::Type __jule_any_type144{.dealloc=__jule_type_deallocator178, .eq=__jule_any_type144_eq, .to_str=__jule_any_type144_to_str};
jule::Bool __jule_any_type145_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::I16*>(alloc) == *reinterpret_cast<jule::I16*>(other)); }
jule::Str __jule_any_type145_to_str(void *alloc) noexcept { return _1be30072a_toStr(*reinterpret_cast<const jule::I16*>(alloc)); }
struct jule::Any::Type __jule_any_type145{.dealloc=__jule_type_deallocator179, .eq=__jule_any_type145_eq, .to_str=__jule_any_type145_to_str};
jule::Bool __jule_any_type146_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U16*>(alloc) == *reinterpret_cast<jule::U16*>(other)); }
jule::Str __jule_any_type146_to_str(void *alloc) noexcept { return _1be313562_toStr(*reinterpret_cast<const jule::U16*>(alloc)); }
struct jule::Any::Type __jule_any_type146{.dealloc=__jule_type_deallocator180, .eq=__jule_any_type146_eq, .to_str=__jule_any_type146_to_str};
jule::Bool __jule_any_type147_eq(void *alloc, void *other) noexcept { return (*reinterpret_cast<jule::U32*>(alloc) == *reinterpret_cast<jule::U32*>(other)); }
jule::Str __jule_any_type147_to_str(void *alloc) noexcept { return _1be3159a4_toStr(*reinterpret_cast<const jule::U32*>(alloc)); }
struct jule::Any::Type __jule_any_type147{.dealloc=__jule_type_deallocator181, .eq=__jule_any_type147_eq, .to_str=__jule_any_type147_to_str};
inline jule::Bool __jule_anon1c0bc5906(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc300ead_ParamIns> _25021_p1, jule::Ptr<_1bc300ead_ParamIns> _25036_p2);
struct __jule_anon_1c0c3b43e_ctx{
	jule::Ptr<_1bc37ee93_comptimeStructField> _self_;
};
static void __jule_anon_1c0c3b43e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c3b43e_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c3b43e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _6521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _6536_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c3d3b9_ctx{
	jule::Ptr<_1bc37ee93_comptimeStructField> _self_;
};
static void __jule_anon_1c0c3d3b9_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c3d3b9_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c3d3b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _7221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _7236_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c51e27_ctx{
	jule::Ptr<_1bc3831b6_comptimeStatic> _self_;
};
static void __jule_anon_1c0c51e27_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c51e27_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c51e27(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _17821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _17836_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c53da2_ctx{
	jule::Ptr<_1bc3831b6_comptimeStatic> _self_;
};
static void __jule_anon_1c0c53da2_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c53da2_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c53da2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _18521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _18536_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1bbc98a22_ctx{
	jule::Ptr<_1bc3863d9_comptimeEnumField> _self_;
};
static void __jule_anon_1bbc98a22_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbc98a22_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbc98a22(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _28321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _28336_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c54dd6_ctx{
	jule::Ptr<_1bc389200_comptimeParam> _self_;
};
static void __jule_anon_1c0c54dd6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c54dd6_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c54dd6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _40221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _40236_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1bbcaddde_ctx{
	jule::Ptr<_1bc389200_comptimeParam> _self_;
};
static void __jule_anon_1bbcaddde_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbcaddde_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbcaddde(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _40921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _40936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1bbcb0d69_ctx{
	jule::Ptr<_1bc389200_comptimeParam> _self_;
};
static void __jule_anon_1bbcb0d69_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbcb0d69_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbcb0d69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _41621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _41636_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1bbd0b997_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd0b997_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd0b997_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbd0b997(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _97421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _97436_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1bbd0d922_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1bbd0d922_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bbd0d922_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbd0d922(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _98121_e, jule::Ptr<_1bc26596c_FnCallExpr>* _98136_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c65ca4_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c0c65ca4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c65ca4_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c65ca4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _98821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _98836_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c69329_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c0c69329_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c69329_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c69329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _99521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _99536_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c6b2a4_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c0c6b2a4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c6b2a4_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c6b2a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _100221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _100236_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c0c6d22e_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c0c6d22e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c0c6d22e_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c6d22e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _100921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _100936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1be0421b4_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1be0421b4_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1be0421b4_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1be0421b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _101621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _101636_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03de52c_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03de52c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03de52c_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03de52c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _102321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _102336_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03e16b6_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03e16b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03e16b6_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e16b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _103021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _103036_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03e3641_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03e3641_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03e3641_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e3641(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _103721_e, jule::Ptr<_1bc26596c_FnCallExpr>* _103736_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03e55bb_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03e55bb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03e55bb_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e55bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _104421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _104436_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03e7546_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03e7546_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03e7546_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e7546(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _105121_e, jule::Ptr<_1bc26596c_FnCallExpr>* _105136_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03e94c1_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03e94c1_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03e94c1_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e94c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _105821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _105836_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10db613_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c10db613_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10db613_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10db613(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _106521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _106536_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10dd604_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c10dd604_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10dd604_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10dd604(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _107221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _107236_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10e057e_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c10e057e_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10e057e_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10e057e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _107921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _107936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10e2509_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c10e2509_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10e2509_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10e2509(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _108621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _108636_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10e4484_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c10e4484_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10e4484_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10e4484(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _109321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _109336_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c03eac53_ctx{
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_;
};
static void __jule_anon_1c03eac53_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c03eac53_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03eac53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _110021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _110036_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c12508cb_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1c12508cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c12508cb_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c12508cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _126221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _126236_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c12528bc_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1c12528bc_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c12528bc_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c12528bc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _126921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _126936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c1254847_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1c1254847_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c1254847_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c1254847(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _127621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _127636_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad07e3dd_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1ad07e3dd_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad07e3dd_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad07e3dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _128321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _128336_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad080675_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1ad080675_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad080675_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad080675(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _129021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _129036_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad08190c_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1ad08190c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad08190c_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad08190c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _129721_e, jule::Ptr<_1bc26596c_FnCallExpr>* _129736_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1bd52d3d7_ctx{
	jule::Ptr<_1bc39543c_comptimeValue> _self_;
};
static void __jule_anon_1bd52d3d7_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd52d3d7_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bd52d3d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _130421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _130436_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10eb920_ctx{
	jule::Ptr<_1bc399b17_comptimeFile> _self_;
};
static void __jule_anon_1c10eb920_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10eb920_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10eb920(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _142921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _142936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1c10eda65_ctx{
	jule::Ptr<_1bc399b17_comptimeFile> _self_;
};
static void __jule_anon_1c10eda65_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c10eda65_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10eda65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _143621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _143636_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad08b120_ctx{
	jule::Ptr<_1bc399b17_comptimeFile> _self_;
};
static void __jule_anon_1ad08b120_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad08b120_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad08b120(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _144321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _144336_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad0ea1e5_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad0ea1e5_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad0ea1e5_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad0ea1e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _194921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _194936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad0ec170_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad0ec170_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad0ec170_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad0ec170(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _195621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _195636_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad0ee0ea_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad0ee0ea_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad0ee0ea_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad0ee0ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _196321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _196336_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad101075_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad101075_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad101075_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad101075(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _197021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _197036_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad103000_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad103000_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad103000_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad103000(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _197721_e, jule::Ptr<_1bc26596c_FnCallExpr>* _197736_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad104e7a_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad104e7a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad104e7a_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad104e7a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _198421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _198436_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad106e05_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad106e05_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad106e05_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad106e05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _199121_e, jule::Ptr<_1bc26596c_FnCallExpr>* _199136_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad108d80_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad108d80_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad108d80_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad108d80(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _199821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _199836_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad10b080_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad10b080_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad10b080_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad10b080(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _200521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _200536_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad10d00a_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad10d00a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad10d00a_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad10d00a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _201221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _201236_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad10ee85_ctx{
	jule::Ptr<_1bc39da2d_comptimeDecl> _self_;
};
static void __jule_anon_1ad10ee85_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad10ee85_ctx>().dealloc(); }
inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad10ee85(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _201921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _201936_fc, jule::Ptr<_1bc48354c_Data>* );
struct __jule_anon_1ad11b25a_ctx{
	jule::Ptr<_1bc3a5419_constraintChecker> _self_;
};
static void __jule_anon_1ad11b25a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1ad11b25a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1ad11b25a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _6415_sema, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>* _6433_generics);
struct __jule_anon_1c31a9910_ctx{
	jule::Ptr<_1bc3dcb9e_ImportInfo> *_48628_pkg;
};
static void __jule_anon_1c31a9910_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c31a9910_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c31a9910(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3dcb9e_ImportInfo> _48735_spkg);
struct __jule_anon_1bd5c741a_ctx{
	jule::Ptr<_1bc302113_FnIns> _82743_f;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _82811_generics;
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> *_82759_ignored;
};
static void __jule_anon_1bd5c741a_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1bd5c741a_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1bd5c741a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _83442_sema);
struct __jule_anon_1c3227197_ctx{
	jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*> _93046_algo;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _9357_generics;
};
static void __jule_anon_1c3227197_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c3227197_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c3227197(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _93742_sema);
struct __jule_anon_1c3229b5b_ctx{
	jule::Ptr<_1bc302113_FnIns> _94637_f;
	jule::Ptr<_1bc409eeb_sema> _self_;
};
static void __jule_anon_1c3229b5b_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c3229b5b_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c3229b5b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _95037_sema, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>* _95055_generics);
inline jule::Str __jule_anon1c5e18b44(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def);
struct __jule_anon_1c6622a67_ctx{
	jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_;
};
static void __jule_anon_1c6622a67_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6622a67_ctx>().dealloc(); }
inline void __jule_anon_1c6622a67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _19031_file);
struct __jule_anon_1c6663008_ctx{
	_1bdc245e4_exprDeadCode *_self_;
};
static void __jule_anon_1c6663008_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6663008_ctx>().dealloc(); }
inline void __jule_anon_1c6663008(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr);
struct __jule_anon_1c6909854_ctx{
	jule::Ptr<_1bdada235_StrConcatExprModel> _2167_model;
	jule::Fn<void,jule::Any> *_2204__step;
};
static void __jule_anon_1c6909854_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6909854_ctx>().dealloc(); }
inline void __jule_anon_1c6909854(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _22113_m);
struct __jule_anon_1c669dc25_ctx{
	_1bdae8e9c_exprOptimizer *_self_;
};
static void __jule_anon_1c669dc25_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c669dc25_ctx>().dealloc(); }
inline void __jule_anon_1c669dc25(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _77747_m);
struct __jule_anon_1c6ab6b32_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
	jule::Bool _1017_ref;
};
static void __jule_anon_1c6ab6b32_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6ab6b32_ctx>().dealloc(); }
inline void __jule_anon_1c6ab6b32(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6aba98d_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
	jule::Ptr<_1bc3adb5e_RangeIter> *_9336_it;
};
static void __jule_anon_1c6aba98d_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6aba98d_ctx>().dealloc(); }
inline void __jule_anon_1c6aba98d(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c69993b6_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
};
static void __jule_anon_1c69993b6_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c69993b6_ctx>().dealloc(); }
inline void __jule_anon_1c69993b6(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6ac9c66_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
};
static void __jule_anon_1c6ac9c66_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6ac9c66_ctx>().dealloc(); }
inline void __jule_anon_1c6ac9c66(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6ad3599_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
};
static void __jule_anon_1c6ad3599_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6ad3599_ctx>().dealloc(); }
inline void __jule_anon_1c6ad3599(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c674d148_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
};
static void __jule_anon_1c674d148_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c674d148_ctx>().dealloc(); }
inline void __jule_anon_1c674d148(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c674e479_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
	jule::Ptr<_1bc3b1557_Match> _75730_m;
};
static void __jule_anon_1c674e479_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c674e479_ctx>().dealloc(); }
inline void __jule_anon_1c674e479(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6b30063_ctx{
	jule::Ptr<_1bdc2983b_scopeCoder> _self_;
	jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _112734_m;
};
static void __jule_anon_1c6b30063_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6b30063_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c6b30063(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc42dc12_Var> _113367_v);
struct __jule_anon_1c7242851_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c7242851_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c7242851_ctx>().dealloc(); }
inline void __jule_anon_1c7242851(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _83538_pkg);
struct __jule_anon_1c7257635_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
	jule::Ptr<_1bc42dc12_Var> _92024_v;
};
static void __jule_anon_1c7257635_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c7257635_ctx>().dealloc(); }
inline void __jule_anon_1c7257635(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c7259725_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
	jule::Ptr<_1bc42dc12_Var> _92024_v;
};
static void __jule_anon_1c7259725_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c7259725_ctx>().dealloc(); }
inline void __jule_anon_1c7259725(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c725be31_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c725be31_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c725be31_ctx>().dealloc(); }
inline void __jule_anon_1c725be31(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c725d0ca_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
	jule::Ptr<_1bc42dc12_Var> _92024_v;
};
static void __jule_anon_1c725d0ca_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c725d0ca_ctx>().dealloc(); }
inline void __jule_anon_1c725d0ca(jule::Ptr<jule::Uintptr> __f_ctx);
struct __jule_anon_1c6ee3657_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c6ee3657_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6ee3657_ctx>().dealloc(); }
inline void __jule_anon_1c6ee3657(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _118238_pkg);
struct __jule_anon_1c6ee4acb_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c6ee4acb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6ee4acb_ctx>().dealloc(); }
inline void __jule_anon_1c6ee4acb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _120531_file);
struct __jule_anon_1c7001016_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c7001016_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c7001016_ctx>().dealloc(); }
inline void __jule_anon_1c7001016(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _124438_pkg);
struct __jule_anon_1c6bc9a36_ctx{
	jule::Ptr<_1bdee90e4_traitHash> _12777_hash;
};
static void __jule_anon_1c6bc9a36_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6bc9a36_ctx>().dealloc(); }
inline void __jule_anon_1c6bc9a36(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn>* _128136_m);
struct __jule_anon_1c7003ab8_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c7003ab8_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c7003ab8_ctx>().dealloc(); }
inline void __jule_anon_1c7003ab8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _129538_pkg);
inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c6c07b74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base);
inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c6c107d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base);
inline jule::Bool __jule_anon1c0c2eca1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3dcb9e_ImportInfo> _203925_pkg);
struct __jule_anon_1c14b1224_ctx{
	jule::Str _473238_namespace;
};
static void __jule_anon_1c14b1224_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c14b1224_ctx>().dealloc(); }
inline jule::Bool __jule_anon_1c14b1224(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3dcb9e_ImportInfo> _473330_imp);
struct __jule_anon_1c7243764_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c7243764_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c7243764_ctx>().dealloc(); }
inline void __jule_anon_1c7243764(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _83632_file);
struct __jule_anon_1c6ee458c_ctx{
	jule::Ptr<_1bc3e0421_Package> *_118238_pkg;
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c6ee458c_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c6ee458c_ctx>().dealloc(); }
inline void __jule_anon_1c6ee458c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _118332_file);
struct __jule_anon_1c70049cb_ctx{
	jule::Ptr<_1bdeeab84_ObjectCoder> _self_;
};
static void __jule_anon_1c70049cb_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<__jule_anon_1c70049cb_ctx>().dealloc(); }
inline void __jule_anon_1c70049cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _129632_file);
jule::Array<jule::Array<jule::Str,2>,5> _1abb47051_HelpMap;
jule::Str _1be0ac42c_OutDir;
jule::Str _1be0ac729_OutName;
jule::Str _1be0ac9d2_Out;
jule::Uintptr _1c3007d9b_STDIN;
jule::Uintptr _1c30081cb_STDOUT;
jule::Uintptr _1c30084b7_STDERR;
jule::Array<jule::U8,256> _1a952c87e_first;
jule::Array<_1a952ce34_acceptRange,16> _1a952d2ca_acceptRanges;
jule::Array<jule::U8,32> _1a978471d__DE_BRUIJN32_TAB;
jule::Array<jule::U8,64> _1a9784d06__DE_BRUIJN64_TAB;
jule::I32 __jule_argc;
jule::U8** __jule_argv;
jule::U8** __jule_envp;
jule::Ptr<_1abb2a199_RangeTable> _1a98ebd2a__L;
jule::Ptr<_1abb2a199_RangeTable> _1a98ecc3d__LU;
jule::Ptr<_1abb2a199_RangeTable> _1a9903c22_Letter;
jule::Ptr<_1abb2a199_RangeTable> _1a9909ee2_Upper;
jule::Slice<_1abb29242_CaseRange> _1abb23307__CaseRanges;
jule::Array<jule::U8,256> _1abb235e3__PROPERTIES;
jule::Array<jule::U16,128> _1abb253c5_asciiFold;
jule::Slice<_1abb28c47_foldPair> _1abb256b1_caseOrbit;
jule::Array<jule::Str,4> _1a979e2a4_CppHeaderExts;
jule::Array<jule::Str,3> _1a979e392_CppExts;
jule::Array<jule::Str,1> _1a982c673_ObjectiveCppExts;
jule::Str _1abb3dc7e_PathStdlib;
jule::Str _1abb3e015_PathExec;
jule::Str _1abb3e2bd_PathWd;
jule::Str _1abb3e5ba_PathApi;
jule::Str _1abb3e873_OS;
jule::Str _1abb3eb2b_Arch;
jule::Str _1abb435ad_Compiler;
jule::Str _1abb449aa_CompilerPath;
jule::Str _1abb44bb9_CppStd;
jule::Bool _1abb44e61_Shadowing;
jule::Bool _1abb45219_Transpilation;
jule::Bool _1abb454c2_Test;
jule::Bool _1abb4577a_RC;
jule::Bool _1abb45b43_Safety;
jule::Bool _1abb45d85_Production;
_1ac579004_floatInfo _1ac5793bc_f32info;
_1ac579004_floatInfo _1ac5796b9_f64info;
jule::Array<jule::Array<jule::U64,2>,696> _1ac5820d9_detailedPowsOfTen;
jule::Slice<jule::I32> _1ac583d44_powtab;
jule::Slice<jule::F64> _1ac584905_f64pow10;
jule::Slice<jule::F32> _1ac584c35_f32pow10;
jule::Array<jule::U64,20> _1ac587e36_u64pow10;
jule::Slice<_1ac591a33_leftCheat> _1ac591e62_leftCheats;
jule::Array<jule::I32,5> _1bc198e22_Spaces;
jule::Array<jule::U32,6> _1bc199131_UnaryOps;
jule::Array<jule::U32,18> _1bc19940b_BinOps;
jule::Array<jule::U32,2> _1bc2414e7_PostfixOps;
jule::Array<jule::U32,11> _1bc2417d3_AssignOps;
jule::Array<_1bc24edda_kindPair,28> _1bc2502c5_keywords;
jule::Array<_1bc24edda_kindPair,46> _1bc250605_basicOps;
jule::I32 _1bc37385a_BitSize;
jule::Str _1bc373abe_SysInt;
jule::Str _1bc373d77_SysUint;
jule::Slice<jule::Str> _1bc3a4acd_builtinConstraints;
jule::Ptr<_1bc4b64e7_Type> _1bc539009_primNil;
jule::Ptr<_1bc4b64e7_Type> _1bc539306_primVoid;
jule::Ptr<_1bc4b64e7_Type> _1bc5395ae_primAny;
jule::Ptr<_1bc4b64e7_Type> _1bc5398ab_primStr;
jule::Ptr<_1bc4b64e7_Type> _1bc539b64_primBool;
jule::Ptr<_1bc4b64e7_Type> _1bc539e1c_primUintptr;
jule::Ptr<_1bc4b64e7_Type> _1bc53a1c5_primUint;
jule::Ptr<_1bc4b64e7_Type> _1bc53a58d_primInt;
jule::Ptr<_1bc4b64e7_Type> _1bc53a7d0_primI8;
jule::Ptr<_1bc4b64e7_Type> _1bc53aa77_primI16;
jule::Ptr<_1bc4b64e7_Type> _1bc53ad30_primI32;
jule::Ptr<_1bc4b64e7_Type> _1bc53b0d8_primI64;
jule::Ptr<_1bc4b64e7_Type> _1bc53b391_primU8;
jule::Ptr<_1bc4b64e7_Type> _1bc53b649_primU16;
jule::Ptr<_1bc4b64e7_Type> _1bc53b902_primU32;
jule::Ptr<_1bc4b64e7_Type> _1bc53bddb_primU64;
jule::Ptr<_1bc4b64e7_Type> _1bc53c12d_primF32;
jule::Ptr<_1bc4b64e7_Type> _1bc53c33c_primF64;
jule::Ptr<_1bcdcad73_Meta> _1bcdc8b40_ProgramMeta;
jule::Ptr<_1bdb035c2_data> _1bdb02b10_emptyData;
jule::Bool _1bdb0861b_Copy;
jule::Bool _1bdb08918_Deadcode;
jule::Bool _1bdb08bc1_Append;
jule::Bool _1bdb08ebd_Math;
jule::Bool _1bdb09276_Access;
jule::Bool _1bdb0952e_Inline;
jule::Bool _1bdb097d7_Ptr;
jule::Bool _1bdb09ba0_Cond;
jule::Bool _1bdb09de2_Str;
jule::Bool _1bdb0a189_Slice;
jule::Bool _1bdb0a442_Assign;
jule::Bool _1bdb0a6ea_Exceptional;
jule::Bool _1bdb0a9a3_Iter;
jule::Bool _1bdb0ac5b_Dynamic;
jule::Bool _1bdb0b014_Array;
jule::Bool _1bdb0b4ed_Len;
jule::Bool _1bdb0b740_StdStrings;
jule::Bool _1bdb0b94e_StdMathCmplx;
jule::Bool _1bdc25370_exprEnabled;
jule::Bool _1bdc2557e_scopeEnabled;
jule::Array<jule::U64,12> _1bdedc538_mdays;
jule::Str _1bdc290cc_assignArgName;
jule::Ptr<_1bc4b64e7_Type> _1bdee8104_generalGCPtr;
jule::Slice<_1abb29242_CaseRange> _1abb2301b_CaseRanges;


inline jule::Bool _1a952ce34_acceptRange_eq(_1a952ce34_acceptRange *_self_, _1a952ce34_acceptRange _other_) {
	return 
		(_self_->_field_lo == _other_._field_lo) &&
		(_self_->_field_hi == _self_->_field_hi);
}






inline jule::Bool _1a968904b_LittleEndian_eq(_1a968904b_LittleEndian *_self_, _1a968904b_LittleEndian _other_) { return true; }

inline jule::U32 static__1a969e8d0_DecodeU32(jule::Slice<jule::U8> _4522_b) {
	return (((static_cast<jule::U32>(_4522_b[0LL]) | (jule::U32)(static_cast<jule::U32>(_4522_b[1LL]) << 8LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[2LL]) << 16LLU)) | (jule::U32)(static_cast<jule::U32>(_4522_b[3LL]) << 24LLU));;
}



inline jule::U64 static__1a96a0309_DecodeU64(jule::Slice<jule::U8> _7522_b) {
	return (((((((static_cast<jule::U64>(_7522_b[0LL]) | (jule::U64)(static_cast<jule::U64>(_7522_b[1LL]) << 8LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[2LL]) << 16LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[3LL]) << 24LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[4LL]) << 32LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[5LL]) << 40LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[6LL]) << 48LLU)) | (jule::U64)(static_cast<jule::U64>(_7522_b[7LL]) << 56LLU));;
}








inline jule::Bool _1a96a39a0_u128_eq(_1a96a39a0_u128 *_self_, _1a96a39a0_u128 _other_) {
	return 
		(_self_->_field_hi == _other_._field_hi) &&
		(_self_->_field_lo == _self_->_field_lo);
}






inline jule::Bool _1c694982d_group_eq(_1c694982d_group *_self_, _1c694982d_group _other_) {
	return 
		_1be356eac_arrayCmp(_self_->_field_keys.begin(), _other_._field_keys.begin(), 8) &&
		_1c694a06a_arrayCmp(_self_->_field_values.begin(), _self_->_field_values.begin(), 8);
}







inline jule::Ptr<_1c694752e__Map> static__1c6947ae5_make(void) {
	return jule::new_ptr<_1c694752e__Map>(_1c694752e__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c694982d_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1c6947c49_initData(_1c694752e__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1a9794640_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c694982d_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c694982d_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6966d56:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1a979484e_newEmptyMetadata();
			}
			_iter_next_1c6966d56:;
			++it;
			_1407_i++;
			goto _iter_begin_1c6966d56;
		}
		_iter_end_1c6966d56:;
	};
}



inline jule::U64 _1c6947d9d_hash(_1c694752e__Map* _self_, jule::Str _14616_k) {
	jule::Str _1473_bytes = _1be2ec53a_toStr(_14616_k);;
	return _1a96a6e26_hash(_1c3060bb2_StrBytes(_1473_bytes));;
}



inline void _1c6948002_rehash(_1c694752e__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1c6947c49_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1c694982d_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1c694982d_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c694982d_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c694982d_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Str,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Bool,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = false; __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c696a442:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1a979484e_newEmptyMetadata();
			}
			_iter_next_1c696a442:;
			++it;
			_1617_i++;
			goto _iter_begin_1c696a442;
		}
		_iter_end_1c696a442:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c696a09b:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c696beb0:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1c696beb0;
							};
							{
								(*(_1c6948563_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1c696beb0:;
						++it;
						_1678_s++;
						goto _iter_begin_1c696beb0;
					}
					_iter_end_1c696beb0:;
				};
			}
			_iter_next_1c696a09b:;
			++it;
			_1667_g++;
			goto _iter_begin_1c696a09b;
		}
		_iter_end_1c696a09b:;
	};
}



inline jule::I32 _1c6948156_nextSize(_1c694752e__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1c69482aa_lookup(jule::Ptr<_1c694752e__Map> _self_, jule::Str _19134_k, jule::Bool* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a9794c28_splitHash(_1c6947d9d_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1a9795025_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1a97936c7_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1a9793c9e_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1c6a68d37:;
			}
			_iter_end_1c6a68d37:;;
			_2018_matches=_1a97939d5_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1c6a6793a:;
	}
	_iter_end_1c6a6793a:;;
}



inline jule::Bool _1c694840e_get(jule::Ptr<_1c694752e__Map> _self_, jule::Str _23024_k) {
	jule::Bool _23111_v = false;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1c69482aa_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Bool* _1c6948563_set(_1c694752e__Map* _self_, jule::Str _24123_k) {
	jule::Bool* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1c6948002_rehash(_self_, _1c6948156_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a9794c28_splitHash(_1c6947d9d_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1a9795025_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1a97936c7_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1a9793c9e_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1c6a7225d:;
			}
			_iter_end_1c6a7225d:;;
			_2488_matches=_1a97939d5_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1a9793c9e_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1c6a706bd:;
	}
	_iter_end_1c6a706bd:;;
}



inline jule::Bool _1c69486b7_del(jule::Ptr<_1c694752e__Map> _self_, jule::Str _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a9794c28_splitHash(_1c6947d9d_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1a9795025_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1a97936c7_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1a9793c9e_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1a97939d5_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Str _30214_key;;
						jule::Bool _30314_val = false;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1c6a79809:;
			}
			_iter_end_1c6a79809:;;
			_2838_matches=_1a97939d5_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1c6a78c37:;
	}
	_iter_end_1c6a78c37:;;
}



inline void _1c694881b_clear(jule::Ptr<_1c694752e__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a7cb1a:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a7d621:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1c6a7d621:;
						++it;
						_3298_j++;
						goto _iter_begin_1c6a7d621;
					}
					_iter_end_1c6a7d621:;
				};
			}
			_iter_next_1c6a7cb1a:;
			++it;
			_3287_i++;
			goto _iter_begin_1c6a7cb1a;
		}
		_iter_end_1c6a7cb1a:;
	};
	jule::Str _33311_k;;
	jule::Bool _33411_v = false;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a7c9a5:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1c694982d_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6a80c72:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1c6a80c72:;
							++it;
							_3389_j++;
							goto _iter_begin_1c6a80c72;
						}
						_iter_end_1c6a80c72:;
					};
				};
			}
			_iter_next_1c6a7c9a5:;
			++it;
			_3357_i++;
			goto _iter_begin_1c6a7c9a5;
		}
		_iter_end_1c6a7c9a5:;
	};
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*_self_.alloc)._field_resident = ___jule_assign_arg;
		(*_self_.alloc)._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I32 _1c6948970_len(jule::Ptr<_1c694752e__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _1c6948ac4_cap(_1c694752e__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1c6953c66_mapIterator _1c6948c28_iterator(jule::Ptr<_1c694752e__Map> _self_) {
	_1c6953c66_mapIterator _3607_iterator = _1c6953c66_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c694982d_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1c69542e9_init(&_3607_iterator);
	return _3607_iterator;;
}





inline jule::Ptr<_1c6a85d98__Map> static__1c6a863b5_make(void) {
	return jule::new_ptr<_1c6a85d98__Map>(_1c6a85d98__Map{._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c6a88010_group>(nullptr), ._field_resident=0, ._field_dead=0, ._field_limit=0});;
}



inline void _1c6a86519_initData(_1c6a85d98__Map* _self_, jule::I32 _13524_cap) {
	jule::I32 _1363_groups = _1a9794640_numGroups(_13524_cap);;
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c6a88010_group>::alloc(_1363_groups, _1363_groups); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c6a88010_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1bc302113_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc302113_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_limit=(_1363_groups << 2LLU);
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6aa129d:;
		if (it != expr_end) {
			jule::I32 _1407_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1407_i]=_1a979484e_newEmptyMetadata();
			}
			_iter_next_1c6aa129d:;
			++it;
			_1407_i++;
			goto _iter_begin_1c6aa129d;
		}
		_iter_end_1c6aa129d:;
	};
}



inline jule::U64 _1c6a8666d_hash(_1c6a85d98__Map* _self_, jule::Ptr<_1bc302113_FnIns> _14616_k) {
	jule::Str _1473_bytes = _1c3216263_toStr(_14616_k);;
	return _1a96a6e26_hash(_1c3060bb2_StrBytes(_1473_bytes));;
}



inline void _1c6a867c2_rehash(_1c6a85d98__Map* _self_, jule::I32 _15122_n) {
	if (((*(_self_))._field_groups == nullptr)) {
		_1c6a86519_initData(_self_, 8LL);
		return;;
	};
	jule::Slice<_1c6a88010_group> _1587_groups;
	jule::Slice<jule::Array<jule::I8,8>> _15815_ctrl;
	({
		jule::Slice<_1c6a88010_group> ___jule_assign_arg = (*(_self_))._field_groups;
		jule::Slice<jule::Array<jule::I8,8>> _1___jule_assign_arg = (*(_self_))._field_ctrl;
		_1587_groups = ___jule_assign_arg;
		_15815_ctrl = _1___jule_assign_arg;
	});
	(*(_self_))._field_groups=({ auto __jule_collection = jule::Slice<_1c6a88010_group>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1c6a88010_group{._field_keys=({ auto __jule_collection = jule::Array<jule::Ptr<_1bc302113_FnIns>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc302113_FnIns>(nullptr); __jule_collection; }), ._field_values=({ auto __jule_collection = jule::Array<jule::Slice<jule::Uintptr>,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Uintptr>(nullptr); __jule_collection; })}; __jule_collection; });
	(*(_self_))._field_ctrl=({ auto __jule_collection = jule::Slice<jule::Array<jule::I8,8>>::alloc(_15122_n, _15122_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }); __jule_collection; });
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6aa4889:;
		if (it != expr_end) {
			jule::I32 _1617_i = it - expr->begin();
			{
				(*(_self_))._field_ctrl[_1617_i]=_1a979484e_newEmptyMetadata();
			}
			_iter_next_1c6aa4889:;
			++it;
			_1617_i++;
			goto _iter_begin_1c6aa4889;
		}
		_iter_end_1c6aa4889:;
	};
	(*(_self_))._field_limit=(_15122_n << 2LLU);
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*(_self_))._field_resident = ___jule_assign_arg;
		(*(_self_))._field_dead = _1___jule_assign_arg;
	});
	{
		auto expr = &(_15815_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6aa44e3:;
		if (it != expr_end) {
			jule::I32 _1667_g = it - expr->begin();
			{
				{
					auto expr = &(_15815_ctrl[_1667_g]);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c112200b:;
					if (it != expr_end) {
						jule::I32 _1678_s = it - expr->begin();
						{
							jule::I8 _1685_c = _15815_ctrl[_1667_g][_1678_s];;
							if (((_1685_c == -128LL) || (_1685_c == -2LL))) {
								goto _iter_next_1c112200b;
							};
							{
								(*(_1c6a86d33_set(_self_, _1587_groups[_1667_g]._field_keys[_1678_s])))=_1587_groups[_1667_g]._field_values[_1678_s];
							};
						}
						_iter_next_1c112200b:;
						++it;
						_1678_s++;
						goto _iter_begin_1c112200b;
					}
					_iter_end_1c112200b:;
				};
			}
			_iter_next_1c6aa44e3:;
			++it;
			_1667_g++;
			goto _iter_begin_1c6aa44e3;
		}
		_iter_end_1c6aa44e3:;
	};
}



inline jule::I32 _1c6a86926_nextSize(_1c6a85d98__Map* _self_) {
	jule::I32 __jule_func_result = 0;
	if (((*(_self_))._field_groups == nullptr)) {
		__jule_func_result = 8LL;
		return __jule_func_result;;
	};
	__jule_func_result=((*(_self_))._field_groups.len() << 2LL);
	if (((*(_self_))._field_dead >= ((*(_self_))._field_resident >> 1LL))) {
		__jule_func_result=(*(_self_))._field_groups.len();
	};
	return __jule_func_result;;
}



inline void _1c6a86a7a_lookup(jule::Ptr<_1c6a85d98__Map> _self_, jule::Ptr<_1bc302113_FnIns> _19134_k, jule::Slice<jule::Uintptr>* _19146_v, jule::Bool* _19159_ok) {
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		if ((_19159_ok != nullptr)) {
			(*(_19159_ok))=false;
		};
		return;;
	};
	jule::U64 _1983_hi;
	jule::I8 _1987_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a9794c28_splitHash(_1c6a8666d_hash(_self_.ptr(), _19134_k));
		_1983_hi = __jule_assign_result.__jule_result_arg0;
		_1987_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _1997_g = _1a9795025_probeStart(_1983_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2018_matches = _1a97936c7_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])), _1987_lo);;
			while ((_2018_matches != 0LLU)) {
				{
					jule::U32 _2035_s = _1a9793c9e_nextMatch(&(_2018_matches));;
					if ((_19134_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_keys[static_cast<jule::I32>(_2035_s)])) {
						if ((_19146_v != nullptr)) {
							(*(_19146_v))=(*_self_.alloc)._field_groups[static_cast<jule::I32>(_1997_g)]._field_values[static_cast<jule::I32>(_2035_s)];
						};
						if ((_19159_ok != nullptr)) {
							(*(_19159_ok))=true;
						};
						return;;
					};
				}
			_iter_next_1c69743b3:;
			}
			_iter_end_1c69743b3:;;
			_2018_matches=_1a97939d5_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_1997_g)])));
			if ((_2018_matches != 0LLU)) {
				if ((_19159_ok != nullptr)) {
					(*(_19159_ok))=false;
				};
				return;;
			};
			_1997_g+=1LLU;
			if ((_1997_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_1997_g=0LLU;
			};
		}
	_iter_next_1c6972cda:;
	}
	_iter_end_1c6972cda:;;
}



inline jule::Slice<jule::Uintptr> _1c6a86bce_get(jule::Ptr<_1c6a85d98__Map> _self_, jule::Ptr<_1bc302113_FnIns> _23024_k) {
	jule::Slice<jule::Uintptr> _23111_v;;
	if ((_self_ != nullptr)) {
		jule::Bool _2338_ok = false;;
		{
			_1c6a86a7a_lookup(_self_, _23024_k, (&(_23111_v)), (&(_2338_ok)));
		};
	};
	return _23111_v;;
}



inline jule::Slice<jule::Uintptr>* _1c6a86d33_set(_1c6a85d98__Map* _self_, jule::Ptr<_1bc302113_FnIns> _24123_k) {
	jule::Slice<jule::Uintptr>* __jule_func_result = nullptr;
	if (((*(_self_))._field_resident >= (*(_self_))._field_limit)) {
		_1c6a867c2_rehash(_self_, _1c6a86926_nextSize(_self_));
	};
	jule::U64 _2453_hi;
	jule::I8 _2457_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a9794c28_splitHash(_1c6a8666d_hash(_self_, _24123_k));
		_2453_hi = __jule_assign_result.__jule_result_arg0;
		_2457_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2467_g = _1a9795025_probeStart(_2453_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2488_matches = _1a97936c7_metaMatchH2((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])), _2457_lo);;
			while ((_2488_matches != 0LLU)) {
				{
					jule::U32 _2505_s = _1a9793c9e_nextMatch(&(_2488_matches));;
					if ((_24123_k == (*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)])) {
						(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2505_s)]=_24123_k;
						__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2505_s)]));
						return __jule_func_result;;
					};
				}
			_iter_next_1c66d8ac8:;
			}
			_iter_end_1c66d8ac8:;;
			_2488_matches=_1a97939d5_metaMatchEmpty((&((*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)])));
			if ((_2488_matches != 0LLU)) {
				jule::U32 _2615_s = _1a9793c9e_nextMatch(&(_2488_matches));;
				(*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_keys[static_cast<jule::I32>(_2615_s)]=_24123_k;
				__jule_func_result=(&((*(_self_))._field_groups[static_cast<jule::I32>(_2467_g)]._field_values[static_cast<jule::I32>(_2615_s)]));
				(*(_self_))._field_ctrl[static_cast<jule::I32>(_2467_g)][static_cast<jule::I32>(_2615_s)]=static_cast<jule::I8>(_2457_lo);
				((*(_self_))._field_resident)++;
				return __jule_func_result;;
			};
			_2467_g+=1LLU;
			if ((_2467_g >= static_cast<jule::U32>((*(_self_))._field_groups.len()))) {
				_2467_g=0LLU;
			};
		}
	_iter_next_1c697a661:;
	}
	_iter_end_1c697a661:;;
}



inline jule::Bool _1c6a86e87_del(jule::Ptr<_1c6a85d98__Map> _self_, jule::Ptr<_1bc302113_FnIns> _27624_k) {
	jule::Bool __jule_func_result = false;
	if (((_self_ == nullptr) || ((*(_self_))._field_groups == nullptr))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::U64 _2803_hi;
	jule::I8 _2807_lo;
	({
		__jule_tuple_u64__jule_tuple_i8 __jule_assign_result = _1a9794c28_splitHash(_1c6a8666d_hash(_self_.ptr(), _27624_k));
		_2803_hi = __jule_assign_result.__jule_result_arg0;
		_2807_lo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _2817_g = _1a9795025_probeStart(_2803_hi, (*(_self_))._field_groups.len());;
	for (;;) {
		{
			jule::U64 _2838_matches = _1a97936c7_metaMatchH2((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])), _2807_lo);;
			while ((_2838_matches != 0LLU)) {
				{
					jule::U32 _2855_s = _1a9793c9e_nextMatch(&(_2838_matches));;
					if ((_27624_k == (*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)])) {
						__jule_func_result=true;
						if ((_1a97939d5_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)]))) != 0LLU)) {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-128LL;
							((*_self_.alloc)._field_resident)--;
						} else {
							(*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)][static_cast<jule::I32>(_2855_s)]=-2LL;
							((*_self_.alloc)._field_dead)++;
						};
						jule::Ptr<_1bc302113_FnIns> _30214_key;;
						jule::Slice<jule::Uintptr> _30314_val;;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_keys[static_cast<jule::I32>(_2855_s)]=_30214_key;
						(*_self_.alloc)._field_groups[static_cast<jule::I32>(_2817_g)]._field_values[static_cast<jule::I32>(_2855_s)]=_30314_val;
						return __jule_func_result;;
					};
				}
			_iter_next_1c6aa6baa:;
			}
			_iter_end_1c6aa6baa:;;
			_2838_matches=_1a97939d5_metaMatchEmpty((&((*_self_.alloc)._field_ctrl[static_cast<jule::I32>(_2817_g)])));
			if ((_2838_matches != 0LLU)) {
				__jule_func_result=false;
				return __jule_func_result;;
			};
			_2817_g+=1LLU;
			if ((_2817_g >= static_cast<jule::U32>((*_self_.alloc)._field_groups.len()))) {
				_2817_g=0LLU;
			};
		}
	_iter_next_1c6aa4cc9:;
	}
	_iter_end_1c6aa4cc9:;;
}



inline void _1c6a870db_clear(jule::Ptr<_1c6a85d98__Map> _self_) {
	if ((_self_ == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_ctrl);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1123b45:;
		if (it != expr_end) {
			jule::I32 _3287_i = it - expr->begin();
			jule::Array<jule::I8,8> _32810_c = *it;
			{
				{
					auto expr = &(_32810_c);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c112464b:;
					if (it != expr_end) {
						jule::I32 _3298_j = it - expr->begin();
						{
							(*(_self_))._field_ctrl[_3287_i][_3298_j]=-128LL;
						}
						_iter_next_1c112464b:;
						++it;
						_3298_j++;
						goto _iter_begin_1c112464b;
					}
					_iter_end_1c112464b:;
				};
			}
			_iter_next_1c1123b45:;
			++it;
			_3287_i++;
			goto _iter_begin_1c1123b45;
		}
		_iter_end_1c1123b45:;
	};
	jule::Ptr<_1bc302113_FnIns> _33311_k;;
	jule::Slice<jule::Uintptr> _33411_v;;
	{
		auto expr = &((*_self_.alloc)._field_groups);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6aa930b:;
		if (it != expr_end) {
			jule::I32 _3357_i = it - expr->begin();
			{
				_1c6a88010_group* _3368_g = (&((*(_self_))._field_groups[_3357_i]));;
				{
					{
						auto expr = &((*(_3368_g))._field_keys);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6aaa83a:;
						if (it != expr_end) {
							jule::I32 _3389_j = it - expr->begin();
							{
								(*(_3368_g))._field_keys[_3389_j]=_33311_k;
								(*(_3368_g))._field_values[_3389_j]=_33411_v;
							}
							_iter_next_1c6aaa83a:;
							++it;
							_3389_j++;
							goto _iter_begin_1c6aaa83a;
						}
						_iter_end_1c6aaa83a:;
					};
				};
			}
			_iter_next_1c6aa930b:;
			++it;
			_3357_i++;
			goto _iter_begin_1c6aa930b;
		}
		_iter_end_1c6aa930b:;
	};
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		(*_self_.alloc)._field_resident = ___jule_assign_arg;
		(*_self_.alloc)._field_dead = _1___jule_assign_arg;
	});
}



inline jule::I32 _1c6a87240_len(jule::Ptr<_1c6a85d98__Map> _self_) {
	if ((_self_ == nullptr)) {
		return 0LL;;
	};
	return ((*(_self_))._field_resident - (*_self_.alloc)._field_dead);;
}



inline jule::I32 _1c6a87394_cap(_1c6a85d98__Map* _self_) {
	return ((*(_self_))._field_limit - (*(_self_))._field_resident);;
}



inline _1c11211d6_mapIterator _1c6a874e8_iterator(jule::Ptr<_1c6a85d98__Map> _self_) {
	_1c11211d6_mapIterator _3607_iterator = _1c11211d6_mapIterator{._field_m=_self_, ._field_ctrl=jule::Slice<jule::Array<jule::I8,8>>(nullptr), ._field_groups=jule::Slice<_1c6a88010_group>(nullptr), ._field_n=0, ._field_g=0, ._field_s=0};;
	_1c1121769_init(&_3607_iterator);
	return _3607_iterator;;
}







inline void _1c69542e9_init(_1c6953c66_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1c694982d_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1c6948970_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1dae9a100_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_pstr__jule_tuple_pbool _1c695444d_next(_1c6953c66_mapIterator* _self_) {
	__jule_tuple_pstr__jule_tuple_pbool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1c695bd90;
					};
					jule::Str* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Bool* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1c695bd90:;
			}
			_iter_end_1c695bd90:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1c695b125:;
	}
	_iter_end_1c695b125:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}





inline void _1c1121769_init(_1c11211d6_mapIterator* _self_) {
	if (((*(_self_))._field_m == nullptr)) {
		return;;
	};
	({
		jule::Slice<jule::Array<jule::I8,8>> ___jule_assign_arg = (*((*(_self_))._field_m))._field_ctrl;
		jule::Slice<_1c6a88010_group> _1___jule_assign_arg = (*(*(_self_))._field_m.alloc)._field_groups;
		(*(_self_))._field_ctrl = ___jule_assign_arg;
		(*(_self_))._field_groups = _1___jule_assign_arg;
	});
	if ((_1c6a87240_len((*(_self_))._field_m) > 0LL)) {
		(*(_self_))._field_g=_1dae9a100_randInt(static_cast<jule::U64>(((jule::Uintptr)(_self_))), (*(_self_))._field_groups.len());
	};
	(*(_self_))._field_n=0LL;
	(*(_self_))._field_s=0LL;
}



inline __jule_tuple_px_1bc302113_FnIns__jule_tuple_psuintptr _1c11218bd_next(_1c11211d6_mapIterator* _self_) {
	__jule_tuple_px_1bc302113_FnIns__jule_tuple_psuintptr __jule_func_result;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	for (; ((*(_self_))._field_n < (*(_self_))._field_groups.len()); ((*(_self_))._field_n)++) {
		{
			jule::Array<jule::I8,8>* _4004_ctrl = (&((*(_self_))._field_ctrl[(*(_self_))._field_g]));;
			for (; ((*(_self_))._field_s < 8LL); ((*(_self_))._field_s)++) {
				{
					jule::I8 _4025_c = (*(_4004_ctrl))[(*(_self_))._field_s];;
					if (((_4025_c == -128LL) || (_4025_c == -2LL))) {
						goto _iter_next_1c6a95d42;
					};
					jule::Ptr<_1bc302113_FnIns>* _4069_k = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_keys[(*(_self_))._field_s]));;
					jule::Slice<jule::Uintptr>* _4079_v = (&((*(_self_))._field_groups[(*(_self_))._field_g]._field_values[(*(_self_))._field_s]));;
					((*(_self_))._field_s)++;
					if (((*(_self_))._field_s >= 8LL)) {
						((*(_self_))._field_n)++;
						(*(_self_))._field_s=0LL;
						((*(_self_))._field_g)++;
						if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
							(*(_self_))._field_g=0LL;
						};
					};
					__jule_func_result.__jule_result_arg0 = _4069_k;
					__jule_func_result.__jule_result_arg1 = _4079_v;
					return __jule_func_result;;
				}
			_iter_next_1c6a95d42:;
			}
			_iter_end_1c6a95d42:;;
			((*(_self_))._field_g)++;
			(*(_self_))._field_s=0LL;
			if (((*(_self_))._field_g >= (*(_self_))._field_groups.len())) {
				(*(_self_))._field_g=0LL;
			};
		}
	_iter_next_1c6a950c7:;
	}
	_iter_end_1c6a950c7:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}







inline _1a95669ea_Builder static__1a9567369_New(jule::I32 _2316_cap) {
	if ((_2316_cap < 0LL)) {
		__jule_panic_s(jule::Str::lit("strings: Builder.New: cap < 0", 29) + jule::Str("\nlocation: std/internal/strings/builder.jule:25:4"));;
	};
	return _1a95669ea_Builder{._field_buf=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _2316_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; })};;
}



inline jule::Exceptional<jule::I32> _1a95676aa_Write(_1a95669ea_Builder* _self_, jule::Slice<jule::U8> _3421_b) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_3421_b);;
	__jule_func_result = _3421_b.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1a95679eb_WriteStr(_1a95669ea_Builder* _self_, jule::Str _4124_s) {
	jule::I32 __jule_func_result = 0;
	((*(_self_))._field_buf).append(_4124_s);;
	__jule_func_result = _4124_s.len();
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::VoidExceptional _1a9567ca4_WriteByte(_1a95669ea_Builder* _self_, jule::U8 _4825_b) {
	{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(_4825_b); };
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a95680e5_WriteRune(_1a95669ea_Builder* _self_, jule::I32 _5525_r) {
	jule::I32 __jule_func_result = 0;
	if ((_5525_r < 128LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_self_))._field_buf; __jule_push_dest.push(static_cast<jule::U8>(_5525_r)); };
		__jule_func_result = 1LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	__jule_func_result=(*(_self_))._field_buf.len();
	(*(_self_))._field_buf=_1a9530002_AppendRune((*(_self_))._field_buf, _5525_r);
	__jule_func_result=((*(_self_))._field_buf.len() - __jule_func_result);
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Str _1a956837b_Str(_1a95669ea_Builder* _self_) {
	jule::Str _687_s = _1c3061212_StrFromBytes((*(_self_))._field_buf);;
	_1a9568579_Clear(_self_);
	return _687_s;;
}



inline void _1a9568579_Clear(_1a95669ea_Builder* _self_) {
	(*(_self_))._field_buf=nullptr;
}



inline jule::I32 _1a9568810_Len(_1a95669ea_Builder* _self_) {
	return (*(_self_))._field_buf.len();;
}



inline jule::Slice<jule::U8> _1a9568d2c_Buf(_1a95669ea_Builder* _self_) {
	return (*(_self_))._field_buf;;
}



inline void _1a95690d5_SetBuf(_1a95669ea_Builder* _self_, jule::Slice<jule::U8> _9533_buf) {
	(*(_self_))._field_buf=_9533_buf;
}








inline jule::Bool _1abb28c47_foldPair_eq(_1abb28c47_foldPair *_self_, _1abb28c47_foldPair _other_) {
	return 
		(_self_->_field_from == _other_._field_from) &&
		(_self_->_field_to == _self_->_field_to);
}






inline jule::Bool _1abb29242_CaseRange_eq(_1abb29242_CaseRange *_self_, _1abb29242_CaseRange _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		_1be3a556b_arrayCmp(_self_->_field_Delta.begin(), _self_->_field_Delta.begin(), 3);
}






inline jule::Bool _1abb296e8_Range16_eq(_1abb296e8_Range16 *_self_, _1abb296e8_Range16 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}






inline jule::Bool _1abb29c26_Range32_eq(_1abb29c26_Range32 *_self_, _1abb29c26_Range32 _other_) {
	return 
		(_self_->_field_Lo == _other_._field_Lo) &&
		(_self_->_field_Hi == _self_->_field_Hi) &&
		(_self_->_field_Stride == _self_->_field_Stride);
}









inline jule::U8 _1abb38e77_index(_1abb389b0_lazyBuff* _self_, jule::I32 _5521_i) {
	if (((*(_self_))._field_buff != nullptr)) {
		return (*(_self_))._field_buff[_5521_i];;
	};
	return (*(_self_))._field_path[_5521_i];;
}



inline void _1abb39230_append(_1abb389b0_lazyBuff* _self_, jule::U8 _6222_c) {
	if (((*(_self_))._field_buff == nullptr)) {
		if ((((*(_self_))._field_w < (*(_self_))._field_path.len()) && ((*(_self_))._field_path[(*(_self_))._field_w] == _6222_c))) {
			((*(_self_))._field_w)++;
			return;;
		};
		(*(_self_))._field_buff=({ auto __jule_collection = jule::Slice<jule::U8>::alloc((*(_self_))._field_path.len(), (*(_self_))._field_path.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		jule::copy((*(_self_))._field_buff, (*(_self_))._field_path.slice(0LL, (*(_self_))._field_w));
	};
	(*(_self_))._field_buff[(*(_self_))._field_w]=_6222_c;
	((*(_self_))._field_w)++;
}



inline jule::Str _1abb394b6_string(_1abb389b0_lazyBuff* _self_) {
	if (((*(_self_))._field_buff == nullptr)) {
		return (*(_self_))._field_volAndPath.slice(0LL, ((*(_self_))._field_volLen + (*(_self_))._field_w));;
	};
	return ((*(_self_))._field_volAndPath.slice(0LL, (*(_self_))._field_volLen) + _1c3060e48_BytesStr((*(_self_))._field_buff.slice(0LL, (*(_self_))._field_w)));;
}








inline jule::Bool _1a9c30b64_File_eq(_1a9c30b64_File *_self_, _1a9c30b64_File _other_) {
	return 
		(_self_->_field_handle == _other_._field_handle);
}

inline jule::Exceptional<jule::Ptr<_1a9c30b64_File>> static__1a9c29eb0_Open(jule::Str _1517_path, jule::I32 _1528_flag, jule::I32 _1541_mode) {
	jule::Slice<jule::U8> _163_s = _1c2ee99d6_StrToBytes(_1517_path);;
	jule::I32 _173_handle = _1c30096e9_Open((&(_163_s[0LL])), _1528_flag, _1541_mode);;
	if ((_173_handle == -1LL)) {
		return jule::Exceptional<jule::Ptr<_1a9c30b64_File>>{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	return jule::Exceptional<jule::Ptr<_1a9c30b64_File>>{.result=static__1a9c31648_New(static_cast<jule::Uintptr>(_173_handle))};;
}



inline jule::VoidExceptional static__1a9c2a1e1_Remove(jule::Str _2519_path) {
	jule::Slice<jule::U8> _263_s = _1c2ee99d6_StrToBytes(_2519_path);;
	if ((_1c300b476_Unlink((&(_263_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a9c2a675_Write(_1a9c30b64_File* _self_, jule::Slice<jule::U8> _3821_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_3821_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1a9533940_handleRW(&(_3821_buf));
	__jule_func_result=_1c3043cb6_Write(static_cast<jule::I32>((*(_self_))._field_handle), (&(_3821_buf[0LL])), static_cast<jule::U32>(_3821_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Exceptional<jule::I32> _1a9c2a9b6_Read(_1a9c30b64_File* _self_, jule::Slice<jule::U8> _5724_buf) {
	jule::I32 __jule_func_result = 0;
	if ((_5724_buf.len() == 0LL)) {
		__jule_func_result = 0LL;
		return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
	};
	_1a9533940_handleRW(&(_5724_buf));
	__jule_func_result=_1c3043535_Read(static_cast<jule::I32>((*(_self_))._field_handle), (&(_5724_buf[0LL])), static_cast<jule::U32>(_5724_buf.len()));
	if ((__jule_func_result == -1LL)) {
		return jule::Exceptional<jule::I32>{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	__jule_func_result = __jule_func_result;
	return jule::Exceptional<jule::I32>{.result=__jule_func_result};;
}



inline jule::Ptr<_1a9c30b64_File> static__1a9c31648_New(jule::Uintptr _6723_handle) {
	return jule::new_ptr<_1a9c30b64_File>(_1a9c30b64_File{._field_handle=_6723_handle});;
}



inline jule::Exceptional<jule::Ptr<_1a9c30b64_File>> static__1a9c31912_Create(jule::Str _7819_path) {
	return static__1a9c29eb0_Open(_7819_path, static_cast<jule::I32>(578LL), 438LL);
}



inline jule::Exceptional<jule::Slice<jule::U8>> static__1a9c31bcb_Read(jule::Str _8517_path) {
	_1a9cc3e6b_Stat _863_s = ({
		auto except = static__1a9c2d0a1_Of(_8517_path);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a9cc460e_IsReg(&_863_s)))) {
		return jule::Exceptional<jule::Slice<jule::U8>>{.error=jule::Any(static_cast<jule::I32>(14LL), &__jule_any_type0)};
	};
	jule::I32 _917_sz = static_cast<jule::I32>(_1a9cc4895_Size(&_863_s));;
	if ((_917_sz != static_cast<jule::I32>(_1a9cc4895_Size(&_863_s)))) {
		_917_sz=0LL;
	};
	if ((_917_sz < 512LLU)) {
		_917_sz=512LLU;
	};
	jule::Ptr<_1a9c30b64_File> _1047_f = ({
		auto except = static__1a9c29eb0_Open(_8517_path, 0LL, 0LL);
		(except.ok()) ? (except.result) : ({{

			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		} jule::Ptr<_1a9c30b64_File>(nullptr);});
	});;
	jule::Slice<jule::U8> _1057_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_917_sz, _917_sz); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1067_n = 0LL;;
	while ((_1067_n < _917_sz)) {
		{
			jule::I32 _1084_rn = ({
				auto except = _1a9c2a9b6_Read(_1047_f.ptr(), _1057_buf.slice(_1067_n));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
				} 0;});
			});;
			if ((_1084_rn == 0LL)) {
				goto _iter_end_1c01212e7;
			};
			_1067_n+=_1084_rn;
		}
	_iter_next_1c01212e7:;
	}
	_iter_end_1c01212e7:;;
	({
		auto except = _1a9c3287a_Close(_1047_f.ptr());
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::U8>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::U8>>{.result=_1057_buf.slice(0LL, _1067_n)};;
}



inline jule::VoidExceptional static__1a9c32072_Write(jule::Str _12418_path, jule::Slice<jule::U8> _12429_data, jule::I32 _12443_perm) {
	jule::Ptr<_1a9c30b64_File> _1257_f = ({
		auto except = static__1a9c29eb0_Open(_12418_path, static_cast<jule::I32>(577LL), _12443_perm);
		(except.ok()) ? (except.result) : ({{

			return jule::VoidExceptional{.error=std::move(except.error)};
		} jule::Ptr<_1a9c30b64_File>(nullptr);});
	});;
	jule::I32 _1267_n = 0LL;;
	while ((_1267_n < _12429_data.len())) {
		{
			_1267_n+=({
				auto except = _1a9c2a675_Write(_1257_f, _12429_data.slice(_1267_n));
				(except.ok()) ? (except.result) : ({{

					return jule::VoidExceptional{.error=std::move(except.error)};
				} 0;});
			});
		}
	_iter_next_1c0126495:;
	}
	_iter_end_1c0126495:;;
	return _1a9c3287a_Close(_1257_f.ptr());
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1a9c3287a_Close(_1a9c30b64_File* _self_) {
	if ((_1c304390e_Close(static_cast<jule::I32>((*(_self_))._field_handle)) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}








inline jule::Bool _1a9cc1d04_cmdAttrs_eq(_1a9cc1d04_cmdAttrs *_self_, _1a9cc1d04_cmdAttrs _other_) {
	return 
		(_self_->_field_pid == _other_._field_pid);
}






inline jule::Bool _1a9cc3e6b_Stat_eq(_1a9cc3e6b_Stat *_self_, _1a9cc3e6b_Stat _other_) {
	return 
		(_self_->_field_mode == _other_._field_mode) &&
		(_self_->_field_size == _self_->_field_size);
}

inline jule::Exceptional<_1a9cc3e6b_Stat> static__1a9c2d0a1_Of(jule::Str _1015_path) {
	if ((_1015_path).empty()) {
		return jule::Exceptional<_1a9cc3e6b_Stat>{.error=jule::Any(static_cast<jule::I32>(4LL), &__jule_any_type0)};
	};
	struct stat _147_handle = (struct stat){};;
	jule::Slice<jule::U8> _153_s = _1c2ee99d6_StrToBytes(_1015_path);;
	jule::I32 _163_code = _1c30092ba_Stat((&(_153_s[0LL])), (&(_147_handle)));;
	if ((_163_code == -1LL)) {
		return jule::Exceptional<_1a9cc3e6b_Stat>{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	_1a9cc3e6b_Stat _207_stat = _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};;
	_207_stat._field_size=static_cast<jule::U32>(_147_handle.st_size);
	if (((_147_handle.st_mode & 16384LLU) == 16384LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(1LL);
	} else if (((_147_handle.st_mode & 32768LLU) == 32768LLU)) {
		_207_stat._field_mode|=static_cast<jule::I32>(2LL);
	};
	return jule::Exceptional<_1a9cc3e6b_Stat>{.result=_207_stat};;
}



inline jule::Bool _1a9cc4378_IsDir(_1a9cc3e6b_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL));;
}



inline jule::Bool _1a9cc460e_IsReg(_1a9cc3e6b_Stat* _self_) {
	return (((*(_self_))._field_mode & static_cast<jule::I32>(2LL)) == static_cast<jule::I32>(2LL));;
}



inline jule::U32 _1a9cc4895_Size(_1a9cc3e6b_Stat* _self_) {
	return (*(_self_))._field_size;;
}








inline jule::Bool _1a9575ca1_Log_eq(_1a9575ca1_Log *_self_, _1a9575ca1_Log _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Text == _self_->_field_Text) &&
		(_self_->_field_Line == _self_->_field_Line) &&
		(_self_->_field_Suggestion == _self_->_field_Suggestion);
}






inline jule::Bool _1ac579004_floatInfo_eq(_1ac579004_floatInfo *_self_, _1ac579004_floatInfo _other_) {
	return 
		(_self_->_field_mantbits == _other_._field_mantbits) &&
		(_self_->_field_expbits == _self_->_field_expbits) &&
		(_self_->_field_bias == _self_->_field_bias);
}










inline jule::Bool _1ac591a33_leftCheat_eq(_1ac591a33_leftCheat *_self_, _1ac591a33_leftCheat _other_) {
	return 
		(_self_->_field_delta == _other_._field_delta) &&
		(_self_->_field_cutoff == _self_->_field_cutoff);
}






inline jule::Bool _1ac59254a_decimal_eq(_1ac59254a_decimal *_self_, _1ac59254a_decimal _other_) {
	return 
		_1c04de154_arrayCmp(_self_->_field_d.begin(), _other_._field_d.begin(), 800) &&
		(_self_->_field_nd == _self_->_field_nd) &&
		(_self_->_field_dp == _self_->_field_dp) &&
		(_self_->_field_neg == _self_->_field_neg) &&
		(_self_->_field_trunc == _self_->_field_trunc);
}

inline jule::Bool _1ac5841a7_set(_1ac59254a_decimal* _self_, jule::Slice<jule::U8> _23819_s) {
	jule::Bool __jule_func_result = false;
	jule::I32 _2397_i = 0LL;;
	(*(_self_))._field_neg=false;
	(*(_self_))._field_trunc=false;
	if ((_2397_i >= _23819_s.len())) {
		return __jule_func_result;;
	};
	{
		
		if ((_23819_s[_2397_i] == '+')) {
			_case_begin_1c06ce344:;
			{
				(_2397_i)++;
			}
		}
		else if ((_23819_s[_2397_i] == '-')) {
			_case_begin_1c06ce4cb:;
			{
				(*(_self_))._field_neg=true;
				(_2397_i)++;
			}
		}
		_match_end_1c06ce2cd:;
	};
	jule::Bool _2567_sawdot = false;;
	jule::Bool _2577_sawdigits = false;;
	for (; (_2397_i < _23819_s.len()); (_2397_i)++) {
		{
			{
				
				if ((_23819_s[_2397_i] == '_')) {
					_case_begin_1c06d0e28:;
					{
						goto _iter_next_1c06d06a8;
					}
				}
				else if ((_23819_s[_2397_i] == '.')) {
					_case_begin_1c06d0ec2:;
					{
						if (_2567_sawdot) {
							return __jule_func_result;;
						};
						_2567_sawdot=true;
						(*(_self_))._field_dp=(*(_self_))._field_nd;
						goto _iter_next_1c06d06a8;
					}
				}
				else if ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9'))) {
					_case_begin_1c06d1038:;
					{
						_2577_sawdigits=true;
						if (((_23819_s[_2397_i] == '0') && ((*(_self_))._field_nd == 0LL))) {
							((*(_self_))._field_dp)--;
							goto _iter_next_1c06d06a8;
						};
						if (((*(_self_))._field_nd < 800LL)) {
							(*(_self_))._field_d[(*(_self_))._field_nd]=_23819_s[_2397_i];
							((*(_self_))._field_nd)++;
						} else if ((_23819_s[_2397_i] != '0')) {
							(*(_self_))._field_trunc=true;
						};
						goto _iter_next_1c06d06a8;
					}
				}
				_match_end_1c06d0ce6:;
			};
			goto _iter_end_1c06d06a8;
		}
	_iter_next_1c06d06a8:;
	}
	_iter_end_1c06d06a8:;;
	if ((!(_2577_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_2567_sawdot))) {
		(*(_self_))._field_dp=(*(_self_))._field_nd;
	};
	if (((_2397_i < _23819_s.len()) && (_1ac57e812_lower(_23819_s[_2397_i]) == 'e'))) {
		(_2397_i)++;
		if ((_2397_i >= _23819_s.len())) {
			return __jule_func_result;;
		};
		jule::I32 _3028_esign = 1LL;;
		if ((_23819_s[_2397_i] == '+')) {
			(_2397_i)++;
		} else if ((_23819_s[_2397_i] == '-')) {
			(_2397_i)++;
			_3028_esign=-1LL;
		};
		if ((((_2397_i >= _23819_s.len()) || (_23819_s[_2397_i] < '0')) || (_23819_s[_2397_i] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _3128_e = 0LL;;
		for (; ((_2397_i < _23819_s.len()) && ((('0' <= _23819_s[_2397_i]) && (_23819_s[_2397_i] <= '9')) || (_23819_s[_2397_i] == '_'))); (_2397_i)++) {
			{
				if ((_23819_s[_2397_i] == '_')) {
					goto _iter_next_1c06d6d52;
				};
				if ((_3128_e < 10000LL)) {
					_3128_e=(((_3128_e * 10LL) + static_cast<jule::I32>(_23819_s[_2397_i])) - '0');
				};
			}
		_iter_next_1c06d6d52:;
		}
		_iter_end_1c06d6d52:;;
		(*(_self_))._field_dp+=(_3128_e * _3028_esign);
	};
	if ((_2397_i != _23819_s.len())) {
		return __jule_func_result;;
	};
	__jule_func_result=true;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_bool _1ac5844e8_floatBits(_1ac59254a_decimal* _self_, _1ac579004_floatInfo* _33226_flt) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _3337_exp = 0LL;;
	jule::U64 _3347_mant = static_cast<jule::U64>(0LLU);;
	if (((*(_self_))._field_nd == 0LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1c06e5899;
	};
	if (((*(_self_))._field_dp > 310LL)) {
		goto _julec_label_1c06e48ed;
	};
	if (((*(_self_))._field_dp < -330LL)) {
		_3347_mant=0LLU;
		_3337_exp=(*(_33226_flt))._field_bias;
		goto _julec_label_1c06e5899;
	};
	_3337_exp=0LL;
	while (((*(_self_))._field_dp > 0LL)) {
		{
			jule::I32 _3598_n = 0LL;;
			if (((*(_self_))._field_dp >= _1ac583d44_powtab.len())) {
				_3598_n=27LL;
			} else {
				_3598_n=_1ac583d44_powtab[(*(_self_))._field_dp];
			};
			_1ac592bdd_shift(_self_, (-(_3598_n)));
			_3337_exp+=_3598_n;
		}
	_iter_next_1c06dc20e:;
	}
	_iter_end_1c06dc20e:;;
	while ((((*(_self_))._field_dp < 0LL) || (((*(_self_))._field_dp == 0LL) && ((*(_self_))._field_d[0LL] < '5')))) {
		{
			jule::I32 _3698_n = 0LL;;
			if (((-((*(_self_))._field_dp)) >= _1ac583d44_powtab.len())) {
				_3698_n=27LL;
			} else {
				_3698_n=_1ac583d44_powtab[(-((*(_self_))._field_dp))];
			};
			_1ac592bdd_shift(_self_, _3698_n);
			_3337_exp-=_3698_n;
		}
	_iter_next_1c06da75c:;
	}
	_iter_end_1c06da75c:;;
	(_3337_exp)--;
	if ((_3337_exp < ((*(_33226_flt))._field_bias + 1LL))) {
		jule::I32 _3864_n = (((*(_33226_flt))._field_bias + 1LL) - _3337_exp);;
		_1ac592bdd_shift(_self_, (-(_3864_n)));
		_3337_exp+=_3864_n;
	};
	if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
		goto _julec_label_1c06e48ed;
	};
	_1ac592bdd_shift(_self_, static_cast<jule::I32>((jule::U32)(1LL + (*(_33226_flt))._field_mantbits)));
	_3347_mant=_1ac59378d_roundedInteger(_self_);
	if ((_3347_mant == ({ jule::U64 __jule_x = 2LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
		_3347_mant=(_3347_mant >> 1LLU);
		(_3337_exp)++;
		if (((_3337_exp - (*(_33226_flt))._field_bias) >= static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))) {
			goto _julec_label_1c06e48ed;
		};
	};
	if (((_3347_mant & ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) == 0LLU)) {
		_3337_exp=(*(_33226_flt))._field_bias;
	};
	goto _julec_label_1c06e5899;
	_julec_label_1c06e48ed:;
	_3347_mant=0LLU;
	_3337_exp=static_cast<jule::I32>((jule::U32)((jule::U32)(({ jule::U32 __jule_x = static_cast<jule::U32>(1LLU); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LLU) + static_cast<jule::U32>((*(_33226_flt))._field_bias)));
	__jule_func_result.__jule_result_arg1=true;
	_julec_label_1c06e5899:;
	jule::U64 _4227_bits = (_3347_mant & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_4227_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_3337_exp - (*(_33226_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if ((*(_self_))._field_neg) {
		_4227_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_33226_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_33226_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	__jule_func_result.__jule_result_arg0 = _4227_bits;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline void _1ac592935_assign(_1ac59254a_decimal* _self_, jule::U64 _15126_v) {
	jule::Array<jule::U8,24> _15211_buf = ({ auto __jule_collection = jule::Array<jule::U8,24>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1557_n = 0LL;;
	while ((_15126_v > 0LLU)) {
		{
			jule::U64 _1574_v1 = (_15126_v / 10LLU);;
			_15126_v-=(jule::U64)(10LLU * _1574_v1);
			_15211_buf[_1557_n]=static_cast<jule::U8>((jule::U64)(_15126_v + '0'));
			(_1557_n)++;
			_15126_v=_1574_v1;
		}
	_iter_next_1c06e811b:;
	}
	_iter_end_1c06e811b:;;
	(*(_self_))._field_nd=0LL;
	(_1557_n)--;
	for (; (_1557_n >= 0LL); (_1557_n)--) {
		{
			(*(_self_))._field_d[(*(_self_))._field_nd]=_15211_buf[_1557_n];
			((*(_self_))._field_nd)++;
		}
	_iter_next_1c06e8418:;
	}
	_iter_end_1c06e8418:;;
	(*(_self_))._field_dp=(*(_self_))._field_nd;
	_1ac593d98_trim(_self_);
}



inline void _1ac592bdd_shift(_1ac59254a_decimal* _self_, jule::I32 _17625_k) {
	{
		
		if (((*(_self_))._field_nd == 0LL)) {
			_case_begin_1c06eaa14:;
		}
		else if ((_17625_k > 0LL)) {
			_case_begin_1c06eaaad:;
			{
				while ((_17625_k > 28LL)) {
					{
						_1ac5948e3_leftShift(_self_, 28LLU);
						_17625_k-=28LL;
					}
				_iter_next_1c06eb6b3:;
				}
				_iter_end_1c06eb6b3:;;
				_1ac5948e3_leftShift(_self_, static_cast<jule::U32>(_17625_k));
			}
		}
		else if ((_17625_k < 0LL)) {
			_case_begin_1c06eab24:;
			{
				while ((_17625_k < -28LL)) {
					{
						_1ac594184_rightShift(_self_, 28LLU);
						_17625_k+=28LL;
					}
				_iter_next_1c06eb5d6:;
				}
				_iter_end_1c06eb5d6:;;
				_1ac594184_rightShift(_self_, static_cast<jule::U32>((-(_17625_k))));
			}
		}
		_match_end_1c06ea89e:;
	};
}



inline void _1ac592e96_roundDown(_1ac59254a_decimal* _self_, jule::I32 _19625_nd) {
	if (((_19625_nd < 0LL) || (_19625_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	(*(_self_))._field_nd=_19625_nd;
	_1ac593d98_trim(_self_);
}



inline void _1ac59324e_roundUp(_1ac59254a_decimal* _self_, jule::I32 _20523_nd) {
	if (((_20523_nd < 0LL) || (_20523_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	jule::I32 _2117_i = (_20523_nd - 1LL);;
	for (; (_2117_i >= 0LL); (_2117_i)--) {
		{
			jule::U8 _2134_c = (*(_self_))._field_d[_2117_i];;
			if ((_2134_c < '9')) {
				((*(_self_))._field_d[_2117_i])++;
				(*(_self_))._field_nd=(_2117_i + 1LL);
				return;;
			};
		}
	_iter_next_1c06eea6d:;
	}
	_iter_end_1c06eea6d:;;
	(*(_self_))._field_d[0LL]='1';
	(*(_self_))._field_nd=1LL;
	((*(_self_))._field_dp)++;
}



inline void _1ac593507_round(_1ac59254a_decimal* _self_, jule::I32 _23221_nd) {
	if (((_23221_nd < 0LL) || (_23221_nd >= (*(_self_))._field_nd))) {
		return;;
	};
	if (_1ac594c67_shouldRoundUp(_self_, _23221_nd)) {
		_1ac59324e_roundUp(_self_, _23221_nd);
	} else {
		_1ac592e96_roundDown(_self_, _23221_nd);
	};
}



inline jule::U64 _1ac59378d_roundedInteger(_1ac59254a_decimal* _self_) {
	if (((*(_self_))._field_dp > 20LL)) {
		return jule::MAX_U64;;
	};
	jule::I32 _2497_i = 0LL;;
	jule::U64 _2507_n = static_cast<jule::U64>(0LLU);;
	for (; ((_2497_i < (*(_self_))._field_dp) && (_2497_i < (*(_self_))._field_nd)); (_2497_i)++) {
		{
			_2507_n=(jule::U64)((jule::U64)(_2507_n * 10LLU) + static_cast<jule::U64>((jule::U8)((*(_self_))._field_d[_2497_i] - '0')));
		}
	_iter_next_1c07029c7:;
	}
	_iter_end_1c07029c7:;;
	for (; (_2497_i < (*(_self_))._field_dp); (_2497_i)++) {
		{
			_2507_n*=10LLU;
		}
	_iter_next_1c0704457:;
	}
	_iter_end_1c0704457:;;
	if (_1ac594c67_shouldRoundUp(_self_, (*(_self_))._field_dp)) {
		(_2507_n)++;
	};
	return _2507_n;;
}








inline jule::Bool _1abb6a96a_AnsiEscape_eq(_1abb6a96a_AnsiEscape *_self_, _1abb6a96a_AnsiEscape _other_) { return true; }

inline void static__1abb492c8_Reset(void) {
	jule::print(_1be2ec53a_toStr(jule::Str::lit("\033[0m", 4)));
}



inline void static__1abb6ab57_Print(jule::Str _1918_escape, jule::Str _1931_text) {
	jule::print(_1be2ec53a_toStr(_1918_escape));
	jule::print(_1be2ec53a_toStr(_1931_text));
	static__1abb492c8_Reset();
}








inline jule::Bool _1ac597a6c_Logger_eq(_1ac597a6c_Logger *_self_, _1ac597a6c_Logger _other_) { return true; }

inline void static__1ac597d7a_LogFlat(_1a9575ca1_Log* _1421_l) {
	jule::println(_1be2ec53a_toStr((*(_1421_l))._field_Text));
}



inline void static__1ac5980ab_LogError(_1a9575ca1_Log* _1922_l) {
	jule::print(_1be2ec53a_toStr(jule::Str::lit("\033[31m", 5)));
	jule::print(_1be2ec53a_toStr(jule::Str::lit("error: ", 7)));
	jule::print(_1be2ec53a_toStr((*(_1922_l))._field_Text));
	static__1abb492c8_Reset();
	if (((*(_1922_l))._field_Path.len() != 0LL)) {
		jule::print(_1be2ec53a_toStr(jule::Str::lit("\n  --> ", 7)));
		jule::print(_1be2ec53a_toStr((*(_1922_l))._field_Path));
	};
	if ((((*(_1922_l))._field_Row != 0LL) && ((*(_1922_l))._field_Column != 0LL))) {
		jule::print(_1be2ec53a_toStr(jule::Str::lit(":", 1)));
		jule::print(_1be2ec53a_toStr(_1ac596ac1_Itoa((*(_1922_l))._field_Row)));
		jule::print(_1be2ec53a_toStr(jule::Str::lit(":", 1)));
		jule::print(_1be2ec53a_toStr(_1ac596ac1_Itoa((*(_1922_l))._field_Column)));
	};
	if (((*(_1922_l))._field_Line.len() != 0LL)) {
		jule::Str _388_line = _1abb3632b_Trim((*(_1922_l))._field_Line, jule::Str::lit("\r\n\v\b\t ", 6));;
		_388_line=_1abb34b21_ReplaceAll(_388_line, jule::Str::lit("\t", 1), jule::Str::lit(" ", 1));
		jule::I32 _418_offset = (((*(_1922_l))._field_Line.len() - _388_line.len()) + 1LL);;
		jule::print(_1be2ec53a_toStr(jule::Str::lit("\n  ", 3)));
		jule::Str _434_row = _1ac596ac1_Itoa((*(_1922_l))._field_Row);;
		jule::print(_1be2ec53a_toStr(_434_row));
		jule::print(_1be2ec53a_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1be2ec53a_toStr(_388_line));
		jule::print(_1be2ec53a_toStr(jule::Str::lit("\n  ", 3)));
		jule::print(_1be2ec53a_toStr(_1abb2d60e_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
		jule::print(_1be2ec53a_toStr(jule::Str::lit(" | ", 3)));
		jule::print(_1be2ec53a_toStr(_1abb2d60e_Repeat(jule::Str::lit(" ", 1), ((*(_1922_l))._field_Column - _418_offset))));
		jule::print(_1be2ec53a_toStr(jule::Str::lit("^", 1)));
		if (((*(_1922_l))._field_Suggestion.len() != 0LL)) {
			jule::print(_1be2ec53a_toStr(jule::Str::lit("\n  ", 3)));
			jule::print(_1be2ec53a_toStr(_1abb2d60e_Repeat(jule::Str::lit(" ", 1), _434_row.len())));
			jule::print(_1be2ec53a_toStr(jule::Str::lit(" | ", 3)));
			static__1abb6ab57_Print(jule::Str::lit("\033[95m", 5), jule::Str::lit("suggestion: ", 12));
			jule::print(_1be2ec53a_toStr((*(_1922_l))._field_Suggestion));
		};
	};
	jule::println(_1be2ec53a_toStr(jule::Str::lit("\n", 1)));
}



inline void static__1ac5982dc_Log(_1a9575ca1_Log* _6417_l) {
	{
		auto &_match_expr{ (*(_6417_l))._field_Kind };
		
		if (_match_expr == static_cast<jule::I32>(0LL)) {
			_case_begin_1c0727678:;
			{
				static__1ac597d7a_LogFlat(_6417_l);
			}
		}
		else if (_match_expr == static_cast<jule::I32>(1LL)) {
			_case_begin_1c0727931:;
			{
				static__1ac5980ab_LogError(_6417_l);
			}
		}
		_match_end_1c0727832:;
	};
}



inline void static__1ac59851d_PrintLogs(jule::Slice<_1a9575ca1_Log>* _7423_logs) {
	{
		auto expr = _7423_logs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0728404:;
		if (it != expr_end) {
			_1a9575ca1_Log *_7510_l = it;
			{
				static__1ac5982dc_Log(_7510_l);
			}
			_iter_next_1c0728404:;
			++it;
			goto _iter_begin_1c0728404;
		}
		_iter_end_1c0728404:;
	};
	jule::print(_1be2ec53a_toStr(jule::Str::lit("=== ", 4)));
	jule::print(_1be2ec53a_toStr(_1ac596ac1_Itoa((*(_7423_logs)).len())));
	jule::println(_1be2ec53a_toStr(jule::Str::lit(" error generated ===", 20)));
}








inline jule::Bool _1bc247014_Token_eq(_1bc247014_Token *_self_, _1bc247014_Token _other_) {
	return 
		(_self_->_field_File == _other_._field_File) &&
		(_self_->_field_Row == _self_->_field_Row) &&
		(_self_->_field_Column == _self_->_field_Column) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Id == _self_->_field_Id);
}

inline jule::U8 _1bc2473bb_Prec(_1bc247014_Token* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(57LLU) || _match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c07891ce:;
			{
				return 5LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c0789c07:;
			{
				return 4LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(71LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c0789c7e:;
			{
				return 3LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c0789256:;
			{
				return 2LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c07892cd:;
			{
				return 1LLU;;
			}
		}
		else {
			_case_begin_1c07899c6:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c0789113:;
	};
}







inline jule::Ptr<_1bc24cab9_Fileset> static__1bc24ce4e_New(jule::Str _2016_path) {
	return jule::new_ptr<_1bc24cab9_Fileset>(_1bc24cab9_Fileset{._field_data=jule::Slice<jule::U8>(nullptr), ._field_Path=_2016_path, ._field_Tokens=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr)});;
}



inline void _1bc24d4b0_FillMut(_1bc24cab9_Fileset* _self_, jule::Slice<jule::U8> _3634_data) {
	(*(_self_))._field_data=_3634_data;
}



inline jule::Str _1bc24d746_Dir(_1bc24cab9_Fileset* _self_) {
	return _1abb3ae57_Dir((*(_self_))._field_Path);;
}



inline jule::Str _1bc24d9cc_Name(_1bc24cab9_Fileset* _self_) {
	return _1abb3aa7d_Base((*(_self_))._field_Path);;
}



inline jule::Str _1bc24e0a4_GetRow(_1bc24cab9_Fileset* _self_, jule::I32 _5718_row) {
	jule::I32 _587_n = 0LL;;
	jule::I32 _597_lineStart = 0LL;;
	jule::I32 _607_i = 0LL;;
	for (; (_607_i < (*(_self_))._field_data.len()); (_607_i)++) {
		{
			if (((*(_self_))._field_data[_607_i] != '\n')) {
				goto _iter_next_1c0795b7a;
			};
			(_587_n)++;
			if ((_587_n == _5718_row)) {
				return _1c3061212_StrFromBytes((*(_self_))._field_data.slice(_597_lineStart, _607_i));;
			};
			_597_lineStart=(_607_i + 1LL);
		}
	_iter_next_1c0795b7a:;
	}
	_iter_end_1c0795b7a:;;
	return jule::Str();;
}








inline jule::Bool _1bc24edda_kindPair_eq(_1bc24edda_kindPair *_self_, _1bc24edda_kindPair _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind) &&
		(_self_->_field_id == _self_->_field_id);
}





inline void _1bc256441_pushErr(_1bc255d7a_lex* _self_, jule::Str _44823_fmt, jule::Slice<jule::Any> _44843_args) {
	{ jule::Slice<_1a9575ca1_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bc250b44_makeErr((*(_self_))._field_row, (*(_self_))._field_column, &((*(_self_))._field_file), _44823_fmt, _44843_args)); };
}



inline void _1bc2569a2_lex(_1bc255d7a_lex* _self_) {
	(*(_self_))._field_errors=nullptr;
	_1bc258bc4_newLine(_self_);
	while (((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len())) {
		{
			jule::Ptr<_1bc247014_Token> _4638_token = _1bc25a1ae_token(_self_);;
			if (((*(_4638_token))._field_Id != static_cast<jule::U32>(0LLU))) {
				{ jule::Slice<jule::Ptr<_1bc247014_Token>> &__jule_push_dest = (*(_self_))._field_tokens; __jule_push_dest.push(_4638_token); };
			};
		}
	_iter_next_1c07c4879:;
	}
	_iter_end_1c07c4879:;;
}



inline jule::Str _1bc256ce3_id(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _47219_ln) {
	if (((*(_47219_ln)).len() == 0LL)) {
		return jule::Str();;
	};
	jule::I32 _4763_r;
	jule::I32 _47610_i;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune((*(_47219_ln)));
		_4763_r = __jule_assign_result.__jule_result_arg0;
		_47610_i = __jule_assign_result.__jule_result_arg1;
	});
	if (((_4763_r != '_') && (!(_1bc24a743_IsLetter(_4763_r))))) {
		return jule::Str();;
	};
	while ((_47610_i < (*(_47219_ln)).len())) {
		{
			jule::I32 _4824_pr;
			jule::I32 _4828_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune((*(_47219_ln)).slice(_47610_i));
				_4824_pr = __jule_assign_result.__jule_result_arg0;
				_4828_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_4824_pr != '_') && (!(_1bc24ae80_IsDecimal(_4824_pr)))) && (!(_1bc24a743_IsLetter(_4824_pr))))) {
				(*(_self_))._field_pos+=_47610_i;
				return _1c3061212_StrFromBytes((*(_47219_ln)).slice(0LL, _47610_i));;
			};
			_47610_i+=_4828_n;
		}
	_iter_next_1c07c7ae1:;
	}
	_iter_end_1c07c7ae1:;;
	(*(_self_))._field_pos+=(*(_47219_ln)).len();
	return _1c3061212_StrFromBytes((*(_47219_ln)));;
}



inline jule::Slice<jule::U8> _1bc257079_resume(_1bc255d7a_lex* _self_) {
	jule::I32 _4977_i = (*(_self_))._field_pos;;
	for (; (_4977_i < (*((*(_self_))._field_file))._field_data.len()); (_4977_i)++) {
		{
			jule::I32 _4994_r = static_cast<jule::I32>((*((*(_self_))._field_file))._field_data[_4977_i]);;
			if (_1bc24a248_IsSpace(_4994_r)) {
				((*(_self_))._field_pos)++;
				{
					auto &_match_expr{ _4994_r };
					
					if (_match_expr == '\n') {
						_case_begin_1c07cbb17:;
						{
							_1bc258bc4_newLine(_self_);
						}
					}
					else {
						_case_begin_1c07cb4c9:;
						{
							((*(_self_))._field_column)++;
						}
					}
					_match_end_1c07cb760:;
				};
				goto _iter_next_1c07ca330;
			};
			jule::I32 _5118_j = _4977_i;;
			for (; (_5118_j < (*(*(_self_))._field_file.alloc)._field_data.len()); (_5118_j)++) {
				{
					if (((*(*(_self_))._field_file.alloc)._field_data[_5118_j] == '\n')) {
						goto _iter_end_1c07cb089;
					};
				}
			_iter_next_1c07cb089:;
			}
			_iter_end_1c07cb089:;;
			return (*(*(_self_))._field_file.alloc)._field_data.slice(_4977_i, _5118_j);;
		}
	_iter_next_1c07ca330:;
	}
	_iter_end_1c07ca330:;;
	return nullptr;;
}



inline void _1bc257332_lexLineComment(_1bc255d7a_lex* _self_, jule::Ptr<_1bc247014_Token>* _52235_token) {
	jule::I32 _5233_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5264_r = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if (((_5264_r == '\n') || (_5264_r == '\r'))) {
				goto _iter_end_1c07ce1ad;
			};
		}
	_iter_next_1c07ce1ad:;
	}
	_iter_end_1c07ce1ad:;;
	if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
		(*((*(_52235_token))))._field_Id=static_cast<jule::U32>(15LLU);
		(*((*(_52235_token))))._field_Kind=_1c3061212_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5233_start, (*(_self_))._field_pos));
	};
}



inline void _1bc2575da_lexRangeComment(_1bc255d7a_lex* _self_, jule::Ptr<_1bc247014_Token>* _53736_token) {
	jule::I32 _5383_start = (*(_self_))._field_pos;;
	(*(_self_))._field_pos+=2LL;
	for (; ((*(_self_))._field_pos < (*((*(_self_))._field_file))._field_data.len()); ((*(_self_))._field_pos)++) {
		{
			jule::U8 _5414_r = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_5414_r == '\r')) {
				goto _iter_next_1c07d2821;
			};
			if ((_5414_r == '\n')) {
				_1bc258bc4_newLine(_self_);
				goto _iter_next_1c07d2821;
			};
			(*(_self_))._field_column+=1LL;
			if ((((((*(_self_))._field_pos + 1LL) < (*(*(_self_))._field_file.alloc)._field_data.len()) && (_5414_r == '*')) && ((*(*(_self_))._field_file.alloc)._field_data[((*(_self_))._field_pos + 1LL)] == '/'))) {
				(*(_self_))._field_column+=2LL;
				(*(_self_))._field_pos+=2LL;
				if ((((*(_self_))._field_mode & static_cast<jule::I32>(1LL)) == static_cast<jule::I32>(1LL))) {
					(*((*(_53736_token))))._field_Id=static_cast<jule::U32>(15LLU);
					(*((*(_53736_token))))._field_Kind=_1c3061212_StrFromBytes((*(*(_self_))._field_file.alloc)._field_data.slice(_5383_start, (*(_self_))._field_pos));
				};
				return;;
			};
		}
	_iter_next_1c07d2821:;
	}
	_iter_end_1c07d2821:;;
	_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("missing block comment close", 27)), jule::Slice<jule::Any>());
}



inline jule::Str _1bc25792b_num(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _56520_txt) {
	jule::Str __jule_func_result;
	if (((*(_56520_txt))[0LL] == '_')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result=_1bc254692_hexNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c07d95c5;
	};
	__jule_func_result=_1bc2544b6_octalNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c07d95c5;
	};
	__jule_func_result=_1bc252c56_binaryNum(_56520_txt);
	if (!(__jule_func_result).empty()) {
		goto _julec_label_1c07d95c5;
	};
	__jule_func_result=_1bc25298c_commonNum(_56520_txt);
	_julec_label_1c07d95c5:;
	(*(_self_))._field_pos+=__jule_func_result.len();
	return __jule_func_result;;
}



inline jule::Str _1bc257c6c_escapeSeq(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _58726_txt) {
	jule::Str _5887_seq = jule::Str();;
	if (((*(_58726_txt)).len() < 2LL)) {
		goto _julec_label_1c07dd387;
	};
	{
		auto &_match_expr{ (*(_58726_txt))[1LL] };
		
		if (_match_expr == '\\' || _match_expr == '\'' || _match_expr == '\"' || _match_expr == 'a' || _match_expr == 'b' || _match_expr == 'f' || _match_expr == 'n' || _match_expr == 'r' || _match_expr == 't' || _match_expr == 'v') {
			_case_begin_1c07db275:;
			{
				(*(_self_))._field_pos+=2LL;
				return _1c3061212_StrFromBytes((*(_58726_txt)).slice(0LL, 2LL));;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c07db132:;
			{
				_5887_seq=_1bc254cad_bigUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'u') {
			_case_begin_1c07db198:;
			{
				_5887_seq=_1bc255077_littleUnicodePointEscape(_58726_txt);
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c07dad13:;
			{
				_5887_seq=_1bc255341_hexByteEscape(_58726_txt);
			}
		}
		else {
			_case_begin_1c07da5d7:;
			{
				_5887_seq=_1bc25560a_byteEscape(_58726_txt);
			}
		}
		_match_end_1c07dab8c:;
	};
	_julec_label_1c07dd387:;
	if ((_5887_seq).empty()) {
		((*(_self_))._field_pos)++;
		_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("invalid escape sequence", 23)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	(*(_self_))._field_pos+=_5887_seq.len();
	return _5887_seq;;
}



inline jule::Str _1bc258168_getRune(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _61724_txt, jule::Bool _61737_raw) {
	if (((!(_61737_raw)) && ((*(_61724_txt))[0LL] == '\\'))) {
		return _1bc257c6c_escapeSeq(_self_, _61724_txt);;
	};
	jule::I32 _6213_r;
	jule::I32 _6216_n;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune((*(_61724_txt)));
		_6213_r = __jule_assign_result.__jule_result_arg0;
		_6216_n = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_pos+=_6216_n;
	return __jule_strFromRune(_6213_r);;
}



inline jule::Str _1bc2584a9_lexRune(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _62624_txt) {
	_1a95669ea_Builder _6277_run = static__1a9567369_New(8LL);;
	({
		auto except = _1a9567ca4_WriteByte(&_6277_run, '\'');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:628:3"));
	});
	((*(_self_))._field_column)++;
	jule::I32 _6307_n = 0LL;;
	jule::I32 _6317_i = 1LL;;
	for (; (_6317_i < (*(_62624_txt)).len()); (_6317_i)++) {
		{
			if (((*(_62624_txt))[_6317_i] == '\r')) {
				goto _iter_next_1c07e218d;
			};
			if (((*(_62624_txt))[_6317_i] == '\n')) {
				_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is not finished", 20)), jule::Slice<jule::Any>());
				((*(_self_))._field_pos)++;
				_1bc258bc4_newLine(_self_);
				return jule::Str();;
			};
			jule::Slice<jule::U8> _6434_part = (*(_62624_txt)).slice(_6317_i);;
			jule::Str _6444_r = _1bc258168_getRune(_self_, &(_6434_part), false);;
			({
				auto except = _1a95679eb_WriteStr(&_6277_run, _6444_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:645:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1a9530909_RuneCountStr(_6444_r);
			if (_6444_r.equal("'", 1)) {
				((*(_self_))._field_pos)++;
				goto _iter_end_1c07e218d;
			};
			if ((_6444_r.len() > 1LL)) {
				_6317_i+=(_6444_r.len() - 1LL);
			};
			(_6307_n)++;
		}
	_iter_next_1c07e218d:;
	}
	_iter_end_1c07e218d:;;
	if ((_6307_n == 0LL)) {
		_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is cannot empty", 20)), jule::Slice<jule::Any>());
	} else if ((_6307_n > 1LL)) {
		_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("rune is should be single", 24)), jule::Slice<jule::Any>());
	};
	return _1a956837b_Str(&_6277_run);;
}



inline jule::Str _1bc258740_lexStr(_1bc255d7a_lex* _self_) {
	_1a95669ea_Builder _6677_s = static__1a9567369_New(16LL);;
	jule::U8 _6683_mark = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
	((*(_self_))._field_pos)++;
	jule::Bool _6703_raw = (_6683_mark == '`');;
	({
		auto except = _1a9567ca4_WriteByte(&_6677_s, _6683_mark);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:671:3"));
	});
	((*(_self_))._field_column)++;
	while (((*(_self_))._field_pos < (*(*(_self_))._field_file.alloc)._field_data.len())) {
		{
			jule::U8 _6754_ch = (*((*(_self_))._field_file))._field_data[(*(_self_))._field_pos];;
			if ((_6754_ch == '\r')) {
				goto _iter_next_1c07e7bbb;
			};
			if ((_6754_ch == '\n')) {
				_1bc258bc4_newLine(_self_);
				if ((!(_6703_raw))) {
					_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("string is not finished", 22)), jule::Slice<jule::Any>());
					((*(_self_))._field_pos)++;
					return jule::Str();;
				};
			};
			jule::Slice<jule::U8> _6878_part = (*(*(_self_))._field_file.alloc)._field_data.slice((*(_self_))._field_pos);;
			jule::Str _6884_r = _1bc258168_getRune(_self_, &(_6878_part), _6703_raw);;
			({
				auto except = _1a95679eb_WriteStr(&_6677_s, _6884_r);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/token/lex.jule:689:4"));
				(except.result);
			});
			(*(_self_))._field_column+=_1a9530909_RuneCountStr(_6884_r);
			if ((_6754_ch == _6683_mark)) {
				goto _iter_end_1c07e7bbb;
			};
		}
	_iter_next_1c07e7bbb:;
	}
	_iter_end_1c07e7bbb:;;
	return _1a956837b_Str(&_6677_s);;
}



inline void _1bc258bc4_newLine(_1bc255d7a_lex* _self_) {
	((*(_self_))._field_row)++;
	(*(_self_))._field_column=1LL;
}



inline jule::Bool _1bc259235_isOp(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _70821_txt, jule::Str _70834_kind, jule::U32 _70845_id, jule::Ptr<_1bc247014_Token>* _70858_t) {
	if ((!(_1bc25100c_bytesHasPrefix(_70821_txt, _70834_kind)))) {
		return false;;
	};
	(*((*(_70858_t))))._field_Kind=_70834_kind;
	(*((*(_70858_t))))._field_Id=_70845_id;
	(*(_self_))._field_pos+=_70834_kind.len();
	return true;;
}



inline jule::Bool _1bc259631_lexBasicOps(_1bc255d7a_lex* _self_, jule::Slice<jule::U8> _71827_txt, jule::Ptr<_1bc247014_Token>* _71845_tok) {
	{
		auto expr = &(_1bc250605_basicOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c07ee684:;
		if (it != expr_end) {
			_1bc24edda_kindPair *_71910_pair = it;
			{
				if (_1bc259235_isOp(_self_, &(_71827_txt), (*(_71910_pair))._field_kind, (*(_71910_pair))._field_id, _71845_tok)) {
					return true;;
				};
			}
			_iter_next_1c07ee684:;
			++it;
			goto _iter_begin_1c07ee684;
		}
		_iter_end_1c07ee684:;
	};
	return false;;
}



inline jule::Bool _1bc259a2c_lexId(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _72722_txt, jule::Ptr<_1bc247014_Token>* _72740_t) {
	jule::Str _7283_lex = _1bc256ce3_id(_self_, _72722_txt);;
	if ((_7283_lex).empty()) {
		return false;;
	};
	(*((*(_72740_t))))._field_Kind=_7283_lex;
	(*((*(_72740_t))))._field_Id=static_cast<jule::U32>(1LLU);
	return true;;
}



inline jule::Bool _1bc259e28_lexNum(_1bc255d7a_lex* _self_, jule::Slice<jule::U8>* _73723_txt, jule::Ptr<_1bc247014_Token>* _73741_t) {
	jule::Str _7383_lex = _1bc25792b_num(_self_, _73723_txt);;
	if ((_7383_lex).empty()) {
		return false;;
	};
	(*((*(_73741_t))))._field_Kind=_7383_lex;
	(*((*(_73741_t))))._field_Id=static_cast<jule::U32>(4LLU);
	return true;;
}



inline jule::Ptr<_1bc247014_Token> _1bc25a1ae_token(_1bc255d7a_lex* _self_) {
	jule::Ptr<_1bc247014_Token> _7497_t = jule::new_ptr<_1bc247014_Token>(_1bc247014_Token{._field_File=(*(_self_))._field_file, ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str(), ._field_Id=static_cast<jule::U32>(0LLU)});;
	jule::Slice<jule::U8> _7543_txt = _1bc257079_resume(_self_);;
	if ((_7543_txt == nullptr)) {
		return _7497_t;;
	};
	(*(_7497_t))._field_Column=(*(_self_))._field_column;
	(*_7497_t.alloc)._field_Row=(*(_self_))._field_row;
	{
		
		if (_1bc259e28_lexNum(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1c08056ce:;
			{
				goto _match_end_1c08050d5;
			}
		}
		else if ((_7543_txt[0LL] == '\'')) {
			_case_begin_1c0805448:;
			{
				(*_7497_t.alloc)._field_Kind=_1bc2584a9_lexRune(_self_, &(_7543_txt));
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (((_7543_txt[0LL] == '\"') || (_7543_txt[0LL] == '`'))) {
			_case_begin_1c08054ae:;
			{
				(*_7497_t.alloc)._field_Kind=_1bc258740_lexStr(_self_);
				(*_7497_t.alloc)._field_Id=static_cast<jule::U32>(4LLU);
				return _7497_t;;
			}
		}
		else if (_1bc25100c_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("//", 2)))) {
			_case_begin_1c0805525:;
			{
				_1bc257332_lexLineComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1bc25100c_bytesHasPrefix(&(_7543_txt), static_cast<jule::Str>(jule::Str::lit("/*", 2)))) {
			_case_begin_1c080558b:;
			{
				_1bc2575da_lexRangeComment(_self_, &(_7497_t));
				return _7497_t;;
			}
		}
		else if (_1bc259631_lexBasicOps(_self_, _7543_txt, &(_7497_t))) {
			_case_begin_1c0805602:;
			{
				goto _match_end_1c08050d5;
			}
		}
		else if (_1bc259a2c_lexId(_self_, &(_7543_txt), &(_7497_t))) {
			_case_begin_1c08069ee:;
			{
				{
					auto expr = &(_1bc2502c5_keywords);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c080a86b:;
					if (it != expr_end) {
						_1bc24edda_kindPair *_78611_pair = it;
						{
							if (((*(_78611_pair))._field_kind == (*_7497_t.alloc)._field_Kind)) {
								(*_7497_t.alloc)._field_Id=(*(_78611_pair))._field_id;
								goto _iter_end_1c080a86b;
							};
						}
						_iter_next_1c080a86b:;
						++it;
						goto _iter_begin_1c080a86b;
					}
					_iter_end_1c080a86b:;
				};
			}
		}
		else {
			_case_begin_1c0805349:;
			{
				jule::I32 _7934_r;
				jule::I32 _7937_sz;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune(_7543_txt);
					_7934_r = __jule_assign_result.__jule_result_arg0;
					_7937_sz = __jule_assign_result.__jule_result_arg1;
				});
				_1bc256441_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("undefined token: @", 18)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7934_r, &__jule_any_type1); __jule_collection; }));
				((*(_self_))._field_column)++;
				(*(_self_))._field_pos+=_7937_sz;
				return _7497_t;;
			}
		}
		_match_end_1c08050d5:;
	};
	(*(_self_))._field_column+=_1a9530909_RuneCountStr((*_7497_t.alloc)._field_Kind);
	return _7497_t;;
}












inline jule::Bool _1bc25b90d_Node_eq(_1bc25b90d_Node *_self_, _1bc25b90d_Node _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1bc25c90e_TypeDecl_eq(_1bc25c90e_TypeDecl *_self_, _1bc25c90e_TypeDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1bc25d6ac_NamespaceTypeDecl_eq(_1bc25d6ac_NamespaceTypeDecl *_self_, _1bc25d6ac_NamespaceTypeDecl _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1bc25d9a9_SptrTypeDecl_eq(_1bc25d9a9_SptrTypeDecl *_self_, _1bc25d9a9_SptrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}






inline jule::Bool _1bc25dd3e_SlcTypeDecl_eq(_1bc25dd3e_SlcTypeDecl *_self_, _1bc25dd3e_SlcTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}










inline jule::Bool _1bc25e438_PtrTypeDecl_eq(_1bc25e438_PtrTypeDecl *_self_, _1bc25e438_PtrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Bool _1bc25e7ce_IsUnsafe(_1bc25e438_PtrTypeDecl* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1bc25ebca_ArrTypeDecl_eq(_1bc25ebca_ArrTypeDecl *_self_, _1bc25ebca_ArrTypeDecl _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem) &&
		(_self_->_field_Size == _self_->_field_Size);
}

inline jule::Bool _1bc260071_AutoSized(_1bc25ebca_ArrTypeDecl* _self_) {
	return ((*(_self_))._field_Size == nullptr);;
}








inline jule::Bool _1bc260428_MapTypeDecl_eq(_1bc260428_MapTypeDecl *_self_, _1bc260428_MapTypeDecl _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1bc261c43_Expr_eq(_1bc261c43_Expr *_self_, _1bc261c43_Expr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}






inline jule::Bool _1bc26200c_RangeExpr_eq(_1bc26200c_RangeExpr *_self_, _1bc26200c_RangeExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc262617_UseExpr_eq(_1bc262617_UseExpr *_self_, _1bc262617_UseExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1bc262bcd_LitExpr_eq(_1bc262bcd_LitExpr *_self_, _1bc262bcd_LitExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Value == _self_->_field_Value);
}






inline jule::Bool _1bc2630a7_UnsafeExpr_eq(_1bc2630a7_UnsafeExpr *_self_, _1bc2630a7_UnsafeExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc26355d_IdentExpr_eq(_1bc26355d_IdentExpr *_self_, _1bc26355d_IdentExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1bc263d00_UnaryExpr_eq(_1bc263d00_UnaryExpr *_self_, _1bc263d00_UnaryExpr _other_) {
	return 
		(_self_->_field_Op == _other_._field_Op) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc2641c9_VariadicExpr_eq(_1bc2641c9_VariadicExpr *_self_, _1bc2641c9_VariadicExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc2645a3_CastExpr_eq(_1bc2645a3_CastExpr *_self_, _1bc2645a3_CastExpr _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc26497c_NamespaceExpr_eq(_1bc26497c_NamespaceExpr *_self_, _1bc26497c_NamespaceExpr _other_) {
	return 
		(_self_->_field_Namespace == _other_._field_Namespace) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1bc264d56_SubIdentExpr_eq(_1bc264d56_SubIdentExpr *_self_, _1bc264d56_SubIdentExpr _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1bc26530c_BinaryExpr_eq(_1bc26530c_BinaryExpr *_self_, _1bc26530c_BinaryExpr _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}





inline jule::Bool _1bc265d24_Unhandled(_1bc26596c_FnCallExpr* _self_) {
	return ((*(_self_))._field_Exception == nullptr);;
}



inline jule::Bool _1bc2660aa_Ignored(_1bc26596c_FnCallExpr* _self_) {
	return (((*(_self_))._field_Exception != nullptr) && (*(*(_self_))._field_Exception.alloc)._field_Deferred);;
}








inline jule::Bool _1bc266462_FieldExprPair_eq(_1bc266462_FieldExprPair *_self_, _1bc266462_FieldExprPair _other_) {
	return 
		(_self_->_field_Field == _other_._field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}














inline jule::Bool _1bc267a6d_KeyValPair_eq(_1bc267a6d_KeyValPair *_self_, _1bc267a6d_KeyValPair _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val) &&
		(_self_->_field_Colon == _self_->_field_Colon);
}










inline jule::Bool _1bc268c06_IndexingExpr_eq(_1bc268c06_IndexingExpr *_self_, _1bc268c06_IndexingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1bc269366_SlicingExpr_eq(_1bc269366_SlicingExpr *_self_, _1bc269366_SlicingExpr _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Start == _self_->_field_Start) &&
		(_self_->_field_To == _self_->_field_To);
}










inline jule::Bool _1bc269b19_GenericDecl_eq(_1bc269b19_GenericDecl *_self_, _1bc269b19_GenericDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Constraint == _self_->_field_Constraint);
}






inline jule::Bool _1bc269ee3_LabelSt_eq(_1bc269ee3_LabelSt *_self_, _1bc269ee3_LabelSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}






inline jule::Bool _1bc26a3bc_GotoSt_eq(_1bc26a3bc_GotoSt *_self_, _1bc26a3bc_GotoSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1bc26a6b9_FallSt_eq(_1bc26a6b9_FallSt *_self_, _1bc26a6b9_FallSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token);
}






inline jule::Bool _1bc26ad29_AssignLeft_eq(_1bc26ad29_AssignLeft *_self_, _1bc26ad29_AssignLeft _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1bc26c39c_Stmt_eq(_1bc26c39c_Stmt *_self_, _1bc26c39c_Stmt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_End == _self_->_field_End) &&
		(_self_->_field_Data == _self_->_field_Data);
}










inline jule::Bool _1bc26d249_ParamDecl_eq(_1bc26d249_ParamDecl *_self_, _1bc26d249_ParamDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Bool _1bc26d601_IsSelf(_1bc26d249_ParamDecl* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}







inline jule::Bool _1bc26ea42_IsAnon(_1bc26e69b_FnDecl* _self_) {
	return ((*(_self_))._field_Ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}












inline jule::Bool _1bc270c30_RetSt_eq(_1bc270c30_RetSt *_self_, _1bc270c30_RetSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc2714a0_Iter_eq(_1bc2714a0_Iter *_self_, _1bc2714a0_Iter _other_) {
	return 
		(_self_->_field_Comptime == _other_._field_Comptime) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}

inline jule::Bool _1bc271846_IsInf(_1bc2714a0_Iter* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}








inline jule::Bool _1bc271cca_WhileKind_eq(_1bc271cca_WhileKind *_self_, _1bc271cca_WhileKind _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next) &&
		(_self_->_field_NextToken == _self_->_field_NextToken);
}

inline jule::Bool _1bc272171_IsWhileNext(_1bc271cca_WhileKind* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1bc2726d2_RangeKind_eq(_1bc2726d2_RangeKind *_self_, _1bc2726d2_RangeKind _other_) {
	return 
		(_self_->_field_InToken == _other_._field_InToken) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1bc272aab_BreakSt_eq(_1bc272aab_BreakSt *_self_, _1bc272aab_BreakSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1bc272e85_ContSt_eq(_1bc272e85_ContSt *_self_, _1bc272e85_ContSt _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Label == _self_->_field_Label);
}






inline jule::Bool _1bc27343b_If_eq(_1bc27343b_If *_self_, _1bc27343b_If _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1bc273815_Else_eq(_1bc273815_Else *_self_, _1bc273815_Else _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}










inline jule::Bool _1bc274508_TypeAliasDecl_eq(_1bc274508_TypeAliasDecl *_self_, _1bc274508_TypeAliasDecl _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}














inline jule::Bool _1bc27585b_UseDecl_eq(_1bc27585b_UseDecl *_self_, _1bc27585b_UseDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Binded == _self_->_field_Binded);
}






inline jule::Bool _1bc275d12_EnumItemDecl_eq(_1bc275d12_EnumItemDecl *_self_, _1bc275d12_EnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1bc2771ed_TypeEnumItemDecl_eq(_1bc2771ed_TypeEnumItemDecl *_self_, _1bc2771ed_TypeEnumItemDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}










inline jule::Bool _1bc277b27_FieldDecl_eq(_1bc277b27_FieldDecl *_self_, _1bc277b27_FieldDecl _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_Default == _self_->_field_Default);
}

















inline jule::Ptr<_1bac25065_Const> static__1bac25494_NewI64(jule::I64 _1419_x) {
	return jule::new_ptr<_1bac25065_Const>(_1bac25065_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1419_x, &__jule_any_type2)});;
}



inline jule::Ptr<_1bac25065_Const> static__1bac2575d_NewU64(jule::U64 _1719_x) {
	return jule::new_ptr<_1bac25065_Const>(_1bac25065_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_1719_x, &__jule_any_type3)});;
}



inline jule::Ptr<_1bac25065_Const> static__1bac25a27_NewBool(jule::Bool _2020_x) {
	return jule::new_ptr<_1bac25065_Const>(_1bac25065_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2020_x, &__jule_any_type4)});;
}



inline jule::Ptr<_1bac25065_Const> static__1bac25ce1_NewStr(jule::Str _2319_x) {
	return jule::new_ptr<_1bac25065_Const>(_1bac25065_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2319_x, &__jule_any_type5)});;
}



inline jule::Ptr<_1bac25065_Const> static__1bac260aa_NewF64(jule::F64 _2619_x) {
	return jule::new_ptr<_1bac25065_Const>(_1bac25065_Const{._field_Kind=jule::Str(), ._field_data=jule::Any(_2619_x, &__jule_any_type6)});;
}



inline jule::Ptr<_1bac25065_Const> static__1bac262b9_NewNil(void) {
	return jule::new_ptr<_1bac25065_Const>(_1bac25065_Const{._field_Kind=jule::Str(), ._field_data=nullptr});;
}



inline jule::I64 _1bac26929_ReadI64(_1bac25065_Const* _self_) {
	if ((!(_1bac29025_IsI64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::I64>(&__jule_any_type2);;
}



inline jule::U64 _1bac26bb0_ReadU64(_1bac25065_Const* _self_) {
	if ((!(_1bac292ab_IsU64(_self_)))) {
		return 0LLU;;
	};
	return (*(_self_))._field_data.cast<jule::U64>(&__jule_any_type3);;
}



inline jule::Bool _1bac26e46_ReadBool(_1bac25065_Const* _self_) {
	if ((!(_1bac29542_IsBool(_self_)))) {
		return false;;
	};
	return (*(_self_))._field_data.cast<jule::Bool>(&__jule_any_type4);;
}



inline jule::Str _1bac271cc_ReadStr(_1bac25065_Const* _self_) {
	if ((!(_1bac297c8_IsStr(_self_)))) {
		return jule::Str();;
	};
	return (*(_self_))._field_data.cast<jule::Str>(&__jule_any_type5);;
}



inline jule::F64 _1bac27463_ReadF64(_1bac25065_Const* _self_) {
	if ((!(_1bac29a5e_IsF64(_self_)))) {
		return 0LL;;
	};
	return (*(_self_))._field_data.cast<jule::F64>(&__jule_any_type6);;
}



inline jule::I64 _1bac276e9_AsI64(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c0865bc3:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::I64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c086661e:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c0866685:;
			{
				return static_cast<jule::I64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1c0866179:;
			{
				return 0LL;;
			}
		}
		_match_end_1c0865ed1:;
	};
}



inline jule::U64 _1bac27980_AsU64(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c0867268:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::U64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c0867e8e:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c0868005:;
			{
				return static_cast<jule::U64>((*(_self_))._field_data.unsafe_cast<jule::F64>());;
			}
		}
		else {
			_case_begin_1c0867741:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c08676ca:;
	};
}



inline jule::F64 _1bac27c16_AsF64(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c08699eb:;
			{
				return (*(_self_))._field_data.unsafe_cast<jule::F64>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c0868ac7:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::I64>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c08697dc:;
			{
				return static_cast<jule::F64>((*(_self_))._field_data.unsafe_cast<jule::U64>());;
			}
		}
		else {
			_case_begin_1c086908e:;
			{
				return 0LL;;
			}
		}
		_match_end_1c0869028:;
	};
}



inline void _1bac27ebe_SetI64(_1bac25065_Const* _self_, jule::I64 _13622_x) {
	(*(_self_))._field_data=jule::Any(_13622_x, &__jule_any_type2);
}



inline void _1bac28277_SetU64(_1bac25065_Const* _self_, jule::U64 _13922_x) {
	(*(_self_))._field_data=jule::Any(_13922_x, &__jule_any_type3);
}



inline void _1bac28530_SetBool(_1bac25065_Const* _self_, jule::Bool _14223_x) {
	(*(_self_))._field_data=jule::Any(_14223_x, &__jule_any_type4);
}



inline void _1bac287d8_SetStr(_1bac25065_Const* _self_, jule::Str _14522_x) {
	(*(_self_))._field_data=jule::Any(_14522_x, &__jule_any_type5);
}



inline void _1bac28a91_SetF64(_1bac25065_Const* _self_, jule::F64 _14822_x) {
	(*(_self_))._field_data=jule::Any(_14822_x, &__jule_any_type6);
}



inline jule::Bool _1bac29025_IsI64(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c086d3e5:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c086d626:;
			{
				return false;;
			}
		}
		_match_end_1c086d5b0:;
	};
}



inline jule::Bool _1bac292ab_IsU64(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c086de84:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c086d758:;
			{
				return false;;
			}
		}
		_match_end_1c086d6e2:;
	};
}



inline jule::Bool _1bac29542_IsBool(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c086e3c4:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c086e8ad:;
			{
				return false;;
			}
		}
		_match_end_1c086e847:;
	};
}



inline jule::Bool _1bac297c8_IsStr(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c086ed53:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c087033c:;
			{
				return false;;
			}
		}
		_match_end_1c08702c6:;
	};
}



inline jule::Bool _1bac29a5e_IsF64(_1bac25065_Const* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_data };
		
		if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c08707d2:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c0870cbb:;
			{
				return false;;
			}
		}
		_match_end_1c0870c55:;
	};
}



inline jule::Bool _1bac29ce5_IsNil(_1bac25065_Const* _self_) {
	return ((*(_self_))._field_data == nullptr);;
}



inline jule::Bool _1bac2a477_And(_1bac25065_Const* _self_, _1bac25065_Const _23615_x) {
	{
		
		if ((_1bac29542_IsBool(_self_) && _1bac29542_IsBool(&_23615_x))) {
			_case_begin_1c0875265:;
			{
				return (_1bac26e46_ReadBool(_self_) && _1bac26e46_ReadBool(&_23615_x));;
			}
		}
		else {
			_case_begin_1c08751ee:;
			{
				return false;;
			}
		}
		_match_end_1c0874cae:;
	};
}



inline jule::Bool _1bac2a7b8_Or(_1bac25065_Const* _self_, _1bac25065_Const _24714_x) {
	{
		
		if ((_1bac29542_IsBool(_self_) && _1bac29542_IsBool(&_24714_x))) {
			_case_begin_1c0876563:;
			{
				return (_1bac26e46_ReadBool(_self_) || _1bac26e46_ReadBool(&_24714_x));;
			}
		}
		else {
			_case_begin_1c0875c49:;
			{
				return false;;
			}
		}
		_match_end_1c0875b5b:;
	};
}



inline jule::Bool _1bc2dae76_Eq(_1bac25065_Const* _self_, _1bac25065_Const _25814_x) {
	{
		
		if (_1bac29ce5_IsNil(_self_)) {
			_case_begin_1c08778c7:;
			{
				return _1bac29ce5_IsNil(&_25814_x);;
			}
		}
		else if (_1bac29542_IsBool(_self_)) {
			_case_begin_1c087793d:;
			{
				return (_1bac29542_IsBool(&_25814_x) && (_1bac26e46_ReadBool(_self_) == _1bac26e46_ReadBool(&_25814_x)));;
			}
		}
		else if (_1bac297c8_IsStr(_self_)) {
			_case_begin_1c08779a4:;
			{
				return (_1bac297c8_IsStr(&_25814_x) && (_1bac271cc_ReadStr(_self_) == _1bac271cc_ReadStr(&_25814_x)));;
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c0877a2b:;
			{
				return (_1bac26929_ReadI64(_self_) == _1bac276e9_AsI64(&_25814_x));;
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c0877aa3:;
			{
				return (_1bac26bb0_ReadU64(_self_) == _1bac27980_AsU64(&_25814_x));;
			}
		}
		else if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c0877c4b:;
			{
				return (_1bac27463_ReadF64(_self_) == _1bac27c16_AsF64(&_25814_x));;
			}
		}
		else {
			_case_begin_1c0877036:;
			{
				return false;;
			}
		}
		_match_end_1c0876e48:;
	};
}



inline jule::Bool _1bc2db2b7_Lt(_1bac25065_Const* _self_, _1bac25065_Const _28514_x) {
	{
		
		if (_1bac297c8_IsStr(_self_)) {
			_case_begin_1c087b601:;
			{
				return (_1bac297c8_IsStr(&_28514_x) && (_1bac271cc_ReadStr(_self_) < _1bac271cc_ReadStr(&_28514_x)));;
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c087b667:;
			{
				return (_1bac26929_ReadI64(_self_) < _1bac276e9_AsI64(&_28514_x));;
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c087b6cd:;
			{
				return (_1bac26bb0_ReadU64(_self_) < _1bac27980_AsU64(&_28514_x));;
			}
		}
		else if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c087b755:;
			{
				return (_1bac27463_ReadF64(_self_) < _1bac27c16_AsF64(&_28514_x));;
			}
		}
		else {
			_case_begin_1c0878389:;
			{
				return false;;
			}
		}
		_match_end_1c08782ac:;
	};
}



inline jule::Bool _1bc2db608_LtEq(_1bac25065_Const* _self_, _1bac25065_Const _30816_x) {
	{
		
		if (_1bac297c8_IsStr(_self_)) {
			_case_begin_1c087e307:;
			{
				return (_1bac297c8_IsStr(&_30816_x) && (_1bac271cc_ReadStr(_self_) <= _1bac271cc_ReadStr(&_30816_x)));;
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c087e36d:;
			{
				return (_1bac26929_ReadI64(_self_) <= _1bac276e9_AsI64(&_30816_x));;
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c087e3d4:;
			{
				return (_1bac26bb0_ReadU64(_self_) <= _1bac27980_AsU64(&_30816_x));;
			}
		}
		else if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c087e45b:;
			{
				return (_1bac27463_ReadF64(_self_) <= _1bac27c16_AsF64(&_30816_x));;
			}
		}
		else {
			_case_begin_1c087beb4:;
			{
				return false;;
			}
		}
		_match_end_1c087bdd7:;
	};
}



inline jule::Bool _1bc2db949_Gt(_1bac25065_Const* _self_, _1bac25065_Const _33114_x) {
	{
		
		if (_1bac297c8_IsStr(_self_)) {
			_case_begin_1c088200d:;
			{
				return (_1bac297c8_IsStr(&_33114_x) && (_1bac271cc_ReadStr(_self_) > _1bac271cc_ReadStr(&_33114_x)));;
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c0882074:;
			{
				return (_1bac26929_ReadI64(_self_) > _1bac276e9_AsI64(&_33114_x));;
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c08820da:;
			{
				return (_1bac26bb0_ReadU64(_self_) > _1bac27980_AsU64(&_33114_x));;
			}
		}
		else if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c0882162:;
			{
				return (_1bac27463_ReadF64(_self_) > _1bac27c16_AsF64(&_33114_x));;
			}
		}
		else {
			_case_begin_1c087ebba:;
			{
				return false;;
			}
		}
		_match_end_1c087eadd:;
	};
}



inline jule::Bool _1bc2dbc8a_GtEq(_1bac25065_Const* _self_, _1bac25065_Const _35416_x) {
	{
		
		if (_1bac297c8_IsStr(_self_)) {
			_case_begin_1c0884c14:;
			{
				return (_1bac297c8_IsStr(&_35416_x) && (_1bac271cc_ReadStr(_self_) >= _1bac271cc_ReadStr(&_35416_x)));;
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c0884c7a:;
			{
				return (_1bac26929_ReadI64(_self_) >= _1bac276e9_AsI64(&_35416_x));;
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c0884ce1:;
			{
				return (_1bac26bb0_ReadU64(_self_) >= _1bac27980_AsU64(&_35416_x));;
			}
		}
		else if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c0884d68:;
			{
				return (_1bac27463_ReadF64(_self_) >= _1bac27c16_AsF64(&_35416_x));;
			}
		}
		else {
			_case_begin_1c08828c1:;
			{
				return false;;
			}
		}
		_match_end_1c08827e4:;
	};
}



inline jule::Bool _1bc2dc0cb_Add(_1bac25065_Const* _self_, _1bac25065_Const _37519_x) {
	{
		
		if (_1bac297c8_IsStr(_self_)) {
			_case_begin_1c088791a:;
			{
				if ((!(_1bac297c8_IsStr(&_37519_x)))) {
					return false;;
				};
				_1bac287d8_SetStr(_self_, (_1bac271cc_ReadStr(_self_) + _1bac271cc_ReadStr(&_37519_x)));
			}
		}
		else if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c0887981:;
			{
				_1bac28a91_SetF64(_self_, (_1bac27463_ReadF64(_self_) + _1bac27c16_AsF64(&_37519_x)));
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c08879e7:;
			{
				if (_1bac29a5e_IsF64(&_37519_x)) {
					_1bac28a91_SetF64(_self_, (_1bac27c16_AsF64(_self_) + _1bac27463_ReadF64(&_37519_x)));
				} else {
					_1bac27ebe_SetI64(_self_, (_1bac26929_ReadI64(_self_) + _1bac276e9_AsI64(&_37519_x)));
				};
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c0887a6e:;
			{
				if (_1bac29a5e_IsF64(&_37519_x)) {
					_1bac28a91_SetF64(_self_, (_1bac27c16_AsF64(_self_) + _1bac27463_ReadF64(&_37519_x)));
				} else {
					_1bac28277_SetU64(_self_, (jule::U64)(_1bac26bb0_ReadU64(_self_) + _1bac27980_AsU64(&_37519_x)));
				};
			}
		}
		else {
			_case_begin_1c08855c7:;
			{
				return false;;
			}
		}
		_match_end_1c08854ea:;
	};
	return true;;
}



inline jule::Bool _1bc2dc41c_Sub(_1bac25065_Const* _self_, _1bac25065_Const _40419_x) {
	{
		
		if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c088c744:;
			{
				_1bac28a91_SetF64(_self_, (_1bac27463_ReadF64(_self_) - _1bac27c16_AsF64(&_40419_x)));
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c088c7aa:;
			{
				if (_1bac29a5e_IsF64(&_40419_x)) {
					_1bac28a91_SetF64(_self_, (_1bac27c16_AsF64(_self_) - _1bac27463_ReadF64(&_40419_x)));
				} else {
					_1bac27ebe_SetI64(_self_, (_1bac26929_ReadI64(_self_) - _1bac276e9_AsI64(&_40419_x)));
				};
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c088c821:;
			{
				if (_1bac29a5e_IsF64(&_40419_x)) {
					_1bac28a91_SetF64(_self_, (_1bac27c16_AsF64(_self_) - _1bac27463_ReadF64(&_40419_x)));
				} else {
					_1bac28277_SetU64(_self_, (jule::U64)(_1bac26bb0_ReadU64(_self_) - _1bac27980_AsU64(&_40419_x)));
				};
			}
		}
		else {
			_case_begin_1c088be80:;
			{
				return false;;
			}
		}
		_match_end_1c088bd81:;
	};
	return true;;
}



inline jule::Bool _1bc2dc75d_Mul(_1bac25065_Const* _self_, _1bac25065_Const _42819_x) {
	{
		
		if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c089165a:;
			{
				_1bac28a91_SetF64(_self_, (_1bac27463_ReadF64(_self_) * _1bac27c16_AsF64(&_42819_x)));
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c08916c1:;
			{
				if (_1bac29a5e_IsF64(&_42819_x)) {
					_1bac28a91_SetF64(_self_, (_1bac27c16_AsF64(_self_) * _1bac27463_ReadF64(&_42819_x)));
				} else {
					_1bac27ebe_SetI64(_self_, (_1bac26929_ReadI64(_self_) * _1bac276e9_AsI64(&_42819_x)));
				};
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c0891737:;
			{
				if (_1bac29a5e_IsF64(&_42819_x)) {
					_1bac28a91_SetF64(_self_, (_1bac27c16_AsF64(_self_) * _1bac27463_ReadF64(&_42819_x)));
				} else {
					_1bac28277_SetU64(_self_, (jule::U64)(_1bac26bb0_ReadU64(_self_) * _1bac27980_AsU64(&_42819_x)));
				};
			}
		}
		else {
			_case_begin_1c0890c31:;
			{
				return false;;
			}
		}
		_match_end_1c0890b43:;
	};
	return true;;
}



inline jule::Bool _1bc2dca9e_Div(_1bac25065_Const* _self_, _1bac25065_Const _45619_x) {
	{
		
		if (_1bac29a5e_IsF64(_self_)) {
			_case_begin_1c0895560:;
			{
				jule::F64 _4594_l = _1bac27c16_AsF64(&_45619_x);;
				if ((_4594_l == 0LL)) {
					return false;;
				};
				_1bac28a91_SetF64(_self_, ({ jule::F64 __jule_x = _1bac27463_ReadF64(_self_); jule::F64 __jule_y = _4594_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c08955c6:;
			{
				jule::F64 _4654_l = _1bac27c16_AsF64(&_45619_x);;
				if ((_4654_l == 0LL)) {
					return false;;
				};
				_1bac28a91_SetF64(_self_, ({ jule::F64 __jule_x = _1bac27c16_AsF64(_self_); jule::F64 __jule_y = _4654_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c089563c:;
			{
				jule::F64 _4714_l = _1bac27c16_AsF64(&_45619_x);;
				if ((_4714_l == 0LL)) {
					return false;;
				};
				_1bac28a91_SetF64(_self_, ({ jule::F64 __jule_x = _1bac27c16_AsF64(_self_); jule::F64 __jule_y = _4714_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); }));
			}
		}
		else {
			_case_begin_1c0894b36:;
			{
				return false;;
			}
		}
		_match_end_1c0894a48:;
	};
	return true;;
}



inline jule::Bool _1bc2dcde0_Mod(_1bac25065_Const* _self_, _1bac25065_Const _48519_x) {
	{
		
		if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c0899443:;
			{
				jule::I64 _4884_l = _1bac276e9_AsI64(&_48519_x);;
				if ((_4884_l == 0LL)) {
					return false;;
				};
				_1bac27ebe_SetI64(_self_, ({ jule::I64 __jule_x = _1bac26929_ReadI64(_self_); jule::I64 __jule_y = _4884_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I64)(__jule_x % __jule_y)); }));
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c0899850:;
			{
				jule::U64 _4944_l = _1bac27980_AsU64(&_48519_x);;
				if ((_4944_l == 0LLU)) {
					return false;;
				};
				_1bac28277_SetU64(_self_, ({ jule::U64 __jule_x = _1bac26bb0_ReadU64(_self_); jule::U64 __jule_y = _4944_l; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x % __jule_y)); }));
			}
		}
		else {
			_case_begin_1c08993bb:;
			{
				return false;;
			}
		}
		_match_end_1c08992ab:;
	};
	return true;;
}



inline jule::Bool _1bc2dd231_BitwiseAnd(_1bac25065_Const* _self_, _1bac25065_Const _50726_x) {
	{
		
		if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c089c2ae:;
			{
				_1bac27ebe_SetI64(_self_, (_1bac26929_ReadI64(_self_) & _1bac276e9_AsI64(&_50726_x)));
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c089c6bb:;
			{
				_1bac28277_SetU64(_self_, (_1bac26bb0_ReadU64(_self_) & _1bac27980_AsU64(&_50726_x)));
			}
		}
		else {
			_case_begin_1c089c237:;
			{
				return false;;
			}
		}
		_match_end_1c089c127:;
	};
	return true;;
}



inline jule::Bool _1bc2dd572_BitwiseOr(_1bac25065_Const* _self_, _1bac25065_Const _52125_x) {
	{
		
		if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c089e080:;
			{
				_1bac27ebe_SetI64(_self_, (_1bac26929_ReadI64(_self_) | _1bac276e9_AsI64(&_52125_x)));
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c089e48c:;
			{
				_1bac28277_SetU64(_self_, (_1bac26bb0_ReadU64(_self_) | _1bac27980_AsU64(&_52125_x)));
			}
		}
		else {
			_case_begin_1c089e008:;
			{
				return false;;
			}
		}
		_match_end_1c089dde8:;
	};
	return true;;
}



inline jule::Bool _1bc2dd8b3_Xor(_1bac25065_Const* _self_, _1bac25065_Const _53519_x) {
	{
		
		if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c08a0d51:;
			{
				_1bac27ebe_SetI64(_self_, (_1bac26929_ReadI64(_self_) ^ _1bac276e9_AsI64(&_53519_x)));
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c08a125d:;
			{
				_1bac28277_SetU64(_self_, (_1bac26bb0_ReadU64(_self_) ^ _1bac27980_AsU64(&_53519_x)));
			}
		}
		else {
			_case_begin_1c08a0cc9:;
			{
				return false;;
			}
		}
		_match_end_1c08a0bb9:;
	};
	return true;;
}



inline jule::Bool _1bc2ddc04_Lshift(_1bac25065_Const* _self_, _1bac25065_Const _54922_x) {
	{
		
		if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c08a2b22:;
			{
				jule::I64 _5524_l = _1bac276e9_AsI64(_self_);;
				if ((_5524_l < 0LL)) {
					jule::U64 _5545_r = _1bac27980_AsU64(&_54922_x);;
					_1bac27ebe_SetI64(_self_, ({ jule::I64 __jule_x = _5524_l; jule::U64 __jule_y = _5545_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
				} else {
					_1bc2de3a8_lshiftUnsig(_self_, &(_54922_x));
				};
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c08a302e:;
			{
				_1bc2de3a8_lshiftUnsig(_self_, &(_54922_x));
			}
		}
		else {
			_case_begin_1c08a2a9a:;
			{
				return false;;
			}
		}
		_match_end_1c08a298a:;
	};
	return true;;
}



inline jule::Bool _1bc2de045_Rshift(_1bac25065_Const* _self_, _1bac25065_Const _56922_x) {
	{
		
		if (_1bac29025_IsI64(_self_)) {
			_case_begin_1c08a51a7:;
			{
				jule::I64 _5724_l = _1bac276e9_AsI64(_self_);;
				if ((_5724_l < 0LL)) {
					jule::U64 _5745_r = _1bac27980_AsU64(&_56922_x);;
					_1bac27ebe_SetI64(_self_, ({ jule::I64 __jule_x = _5724_l; jule::U64 __jule_y = _5745_r; ((jule::I64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
				} else {
					_1bc2de6d8_rshiftUnsig(_self_, &(_56922_x));
				};
			}
		}
		else if (_1bac292ab_IsU64(_self_)) {
			_case_begin_1c08a55b4:;
			{
				_1bc2de6d8_rshiftUnsig(_self_, &(_56922_x));
			}
		}
		else {
			_case_begin_1c08a5130:;
			{
				return false;;
			}
		}
		_match_end_1c08a5031:;
	};
	return true;;
}








inline jule::Bool _1bc27a377_Field_eq(_1bc27a377_Field *_self_, _1bc27a377_Field _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Public == _self_->_field_Public) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Default == _self_->_field_Default);
}

inline jule::Ptr<_1bc280525_FieldIns> _1bc27a72e_instance(jule::Ptr<_1bc27a377_Field> _self_) {
	return jule::new_ptr<_1bc280525_FieldIns>(_1bc280525_FieldIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=_self_, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Default=jule::Ptr<_1bc48354c_Data>(nullptr)});;
}








inline jule::Bool _1bc27c357_Operators_eq(_1bc27c357_Operators *_self_, _1bc27c357_Operators _other_) {
	return 
		(_self_->_field_Eq == _other_._field_Eq) &&
		(_self_->_field_Gt == _self_->_field_Gt) &&
		(_self_->_field_GtEq == _self_->_field_GtEq) &&
		(_self_->_field_Lt == _self_->_field_Lt) &&
		(_self_->_field_LtEq == _self_->_field_LtEq) &&
		(_self_->_field_Shl == _self_->_field_Shl) &&
		(_self_->_field_Shr == _self_->_field_Shr) &&
		(_self_->_field_Add == _self_->_field_Add) &&
		(_self_->_field_Sub == _self_->_field_Sub) &&
		(_self_->_field_Div == _self_->_field_Div) &&
		(_self_->_field_Mul == _self_->_field_Mul) &&
		(_self_->_field_Mod == _self_->_field_Mod) &&
		(_self_->_field_BitAnd == _self_->_field_BitAnd) &&
		(_self_->_field_BitOr == _self_->_field_BitOr) &&
		(_self_->_field_BitXor == _self_->_field_BitXor) &&
		(_self_->_field_Neg == _self_->_field_Neg) &&
		(_self_->_field_Pos == _self_->_field_Pos) &&
		(_self_->_field_BitNot == _self_->_field_BitNot) &&
		(_self_->_field_AddAssign == _self_->_field_AddAssign) &&
		(_self_->_field_SubAssign == _self_->_field_SubAssign) &&
		(_self_->_field_DivAssign == _self_->_field_DivAssign) &&
		(_self_->_field_MulAssign == _self_->_field_MulAssign) &&
		(_self_->_field_ModAssign == _self_->_field_ModAssign) &&
		(_self_->_field_ShlAssign == _self_->_field_ShlAssign) &&
		(_self_->_field_ShrAssign == _self_->_field_ShrAssign) &&
		(_self_->_field_BitOrAssign == _self_->_field_BitOrAssign) &&
		(_self_->_field_BitAndAssign == _self_->_field_BitAndAssign) &&
		(_self_->_field_BitXorAssign == _self_->_field_BitXorAssign);
}





inline jule::Ptr<_1bc2810c5_StructIns> _1bc27d710_instance(jule::Ptr<_1bc27d26a_Struct> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	jule::Ptr<_1bc2810c5_StructIns> _997_ins = jule::new_ptr<_1bc2810c5_StructIns>(_1bc2810c5_StructIns{._field_Checked=false, ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc280525_FieldIns>>::alloc(0LL, (*(_self_))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc280525_FieldIns>(nullptr); __jule_collection; }), ._field_Statics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(0LL, (*_self_.alloc)._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc42dc12_Var>(nullptr); __jule_collection; }), ._field_Methods=jule::Slice<jule::Ptr<_1bc2ee055_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=static__1bc3cae89_new(), ._field_Operators=_1bc27c357_Operators{._field_Eq=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Add=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Div=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1bc302113_FnIns>(nullptr)}});;
	{
		auto expr = &((*_self_.alloc)._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b8915b:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _10615_s = *it;
			{
				(*(_997_ins))._field_Statics=jule::append((*_997_ins.alloc)._field_Statics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc42dc12_Var>((*(_10615_s))); __jule_collection; }));
			}
			_iter_next_1c0b8915b:;
			++it;
			goto _iter_begin_1c0b8915b;
		}
		_iter_end_1c0b8915b:;
	};
	{
		auto expr = &((*_self_.alloc)._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b8a03b:;
		if (it != expr_end) {
			jule::Ptr<_1bc27a377_Field> _11015_f = *it;
			{
				jule::Ptr<_1bc280525_FieldIns> _1118_f2 = _1bc27a72e_instance(_11015_f);;
				(*(_1118_f2))._field_Owner=_997_ins;
				(*(_997_ins))._field_Fields=jule::append((*_997_ins.alloc)._field_Fields,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc280525_FieldIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1118_f2; __jule_collection; }));
				if ((((!((*_11015_f.alloc)._field_Mutable)) && ((*((*_11015_f.alloc)._field_TypeSym))._field_Type != nullptr)) && _1bc4b7dcd_Mutable((*((*(_11015_f))._field_TypeSym))._field_Type))) {
					(*_997_ins.alloc)._field_Mutable=true;
				};
			}
			_iter_next_1c0b8a03b:;
			++it;
			goto _iter_begin_1c0b8a03b;
		}
		_iter_end_1c0b8a03b:;
	};
	if (((*_self_.alloc)._field_Generics.len() == 0LL)) {
		(*(_997_ins))._field_Methods=(*_self_.alloc)._field_Methods;
	} else {
		(*(_997_ins))._field_Methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ee055_Fn>>::alloc(0LL, (*_self_.alloc)._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc2ee055_Fn>(nullptr); __jule_collection; });
		{
			auto expr = &((*_self_.alloc)._field_Methods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0b8e35e:;
			if (it != expr_end) {
				jule::Ptr<_1bc2ee055_Fn> _12316_f = *it;
				{
					jule::Ptr<_1bc2ee055_Fn> _1249_fins = jule::new_ptr<_1bc2ee055_Fn>((*(_12316_f)));;
					(*_1249_fins.alloc)._field_Instances=nullptr;
					(*_997_ins.alloc)._field_Methods=jule::append((*_997_ins.alloc)._field_Methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ee055_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1249_fins; __jule_collection; }));
				}
				_iter_next_1c0b8e35e:;
				++it;
				goto _iter_begin_1c0b8e35e;
			}
			_iter_end_1c0b8e35e:;
		};
	};
	return _997_ins;;
}



inline jule::Ptr<_1bc2810c5_StructIns> _1bc27da1d_appendInstance(_1bc27d26a_Struct* _self_, jule::Ptr<_1bc2810c5_StructIns>* _13535_ins) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*(_self_))._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b916d5:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _14115_ains = *it;
			{
				if (_1bc281c74_Same(_14115_ains.ptr(), (*(_13535_ins)))) {
					return _14115_ains;;
				};
			}
			_iter_next_1c0b916d5:;
			++it;
			goto _iter_begin_1c0b916d5;
		}
		_iter_end_1c0b916d5:;
	};
	{ jule::Slice<jule::Ptr<_1bc2810c5_StructIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13535_ins))); };
	return nullptr;;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc27de19_FindMethod(_1bc27d26a_Struct* _self_, jule::Str _15326_ident, jule::Bool _15338_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b92c58:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _15415_f = *it;
			{
				if ((((*(_15415_f))._field_Statically == _15338_statically) && ((*_15415_f.alloc)._field_Ident == _15326_ident))) {
					return _15415_f;;
				};
			}
			_iter_next_1c0b92c58:;
			++it;
			goto _iter_begin_1c0b92c58;
		}
		_iter_end_1c0b92c58:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc27e25a_FindStatic(_1bc27d26a_Struct* _self_, jule::Str _16426_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b9409a:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _16515_v = *it;
			{
				if (((*(_16515_v))._field_Ident == _16426_ident)) {
					return _16515_v;;
				};
			}
			_iter_next_1c0b9409a:;
			++it;
			goto _iter_begin_1c0b9409a;
		}
		_iter_end_1c0b9409a:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc27a377_Field> _1bc27e59b_FindField(_1bc27d26a_Struct* _self_, jule::Str _17525_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b95079:;
		if (it != expr_end) {
			jule::Ptr<_1bc27a377_Field> _17615_f = *it;
			{
				if (((*(_17615_f))._field_Ident == _17525_ident)) {
					return _17615_f;;
				};
			}
			_iter_next_1c0b95079:;
			++it;
			goto _iter_begin_1c0b95079;
		}
		_iter_end_1c0b95079:;
	};
	return nullptr;;
}



inline jule::Bool _1bc27e8dc_IsImplements(_1bc27d26a_Struct* _self_, jule::Ptr<_1bc309769_Trait> _18524_t) {
	{
		auto expr = &((*(_self_))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b96069:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> *_18610_it = it;
			{
				if ((_18524_t == (*(_18610_it)))) {
					return true;;
				};
			}
			_iter_next_1c0b96069:;
			++it;
			goto _iter_begin_1c0b96069;
		}
		_iter_end_1c0b96069:;
	};
	return false;;
}



inline jule::Bool _1bc27ec2d_IsUses(_1bc27d26a_Struct* _self_, jule::Ptr<_1bc27d26a_Struct> _19518_s) {
	{
		auto expr = &((*(_self_))._field_Uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0b96a1a:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> *_19610_u = it;
			{
				while ((_19518_s == (*(_19610_u)))) {
					{
						return true;;
					}
				_iter_next_1c0b975ba:;
				}
				_iter_end_1c0b975ba:;;
			}
			_iter_next_1c0b96a1a:;
			++it;
			goto _iter_begin_1c0b96a1a;
		}
		_iter_end_1c0b96a1a:;
	};
	return false;;
}








inline jule::Bool _1bc280525_FieldIns_eq(_1bc280525_FieldIns *_self_, _1bc280525_FieldIns _other_) {
	return 
		(_self_->_field_Owner == _other_._field_Owner) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Default == _self_->_field_Default);
}





inline jule::Str _1bc28147c_Str(_1bc2810c5_StructIns* _self_) {
	_1a95669ea_Builder _2417_kind = static__1a9567369_New(32LL);;
	({
		auto except = _1a95679eb_WriteStr(&_2417_kind, (*((*(_self_))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:242:3"));
		(except.result);
	});
	if (((*(_self_))._field_Generics.len() > 0LL)) {
		({
			auto except = _1a9567ca4_WriteByte(&_2417_kind, '[');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:244:4"));
		});
		{
			auto expr = &((*(_self_))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0b9a27c:;
			if (it != expr_end) {
				jule::I32 _2458_i = it - expr->begin();
				jule::Ptr<_1bc4b4b11_InsGeneric> *_24511_g = it;
				{
					({
						auto except = _1a95679eb_WriteStr(&_2417_kind, _1bc4b68e3_Str((*((*(_24511_g))))._field_Type.ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:246:5"));
						(except.result);
					});
					if ((_2458_i < ((*(_self_))._field_Generics.len() - 1LL))) {
						({
							auto except = _1a9567ca4_WriteByte(&_2417_kind, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:248:6"));
						});
					};
				}
				_iter_next_1c0b9a27c:;
				++it;
				_2458_i++;
				goto _iter_begin_1c0b9a27c;
			}
			_iter_end_1c0b9a27c:;
		};
		({
			auto except = _1a9567ca4_WriteByte(&_2417_kind, ']');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/struct.jule:251:4"));
		});
	};
	return _1a956837b_Str(&_2417_kind);;
}



inline jule::Bool _1bc2817bd_Equal(jule::Ptr<_1bc2810c5_StructIns> _self_, jule::Ptr<_1bc4b64e7_Type> _25718_other) {
	jule::Ptr<_1bc2810c5_StructIns> _2583_s = _1bc4ba221_Struct(_25718_other.ptr());;
	if ((_2583_s == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Decl != (*(_2583_s))._field_Decl)) {
		return false;;
	};
	if (((*(_self_))._field_Generics.len() != (*(_2583_s))._field_Generics.len())) {
		return false;;
	};
	jule::I32 _2717_i = 0LL;;
	for (; (_2717_i < (*(_self_))._field_Generics.len()); (_2717_i)++) {
		{
			if ((!(_1bc4b6c34_Equal((*((*(_self_))._field_Generics[_2717_i]))._field_Type, (*((*(_2583_s))._field_Generics[_2717_i]))._field_Type)))) {
				return false;;
			};
		}
	_iter_next_1c0b9e5e4:;
	}
	_iter_end_1c0b9e5e4:;;
	return true;;
}



inline jule::Bool _1bc281c74_Same(_1bc2810c5_StructIns* _self_, jule::Ptr<_1bc2810c5_StructIns> _28516_s) {
	if ((((*(_self_))._field_Decl != (*(_28516_s))._field_Decl) || ((*_28516_s.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ba20b9:;
		if (it != expr_end) {
			jule::I32 _2897_i = it - expr->begin();
			jule::Ptr<_1bc4b4b11_InsGeneric> *_28910_g = it;
			{
				jule::Ptr<_1bc4b4b11_InsGeneric> _2904_g2 = (*(_28516_s))._field_Generics[_2897_i];;
				if ((((*((*((*(_28910_g))))._field_Type))._field_BindIdent != (*(*(_2904_g2))._field_Type.alloc)._field_BindIdent) || (!(_1bc4b6c34_Equal((*((*(_28910_g))))._field_Type, (*(_2904_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1c0ba20b9:;
			++it;
			_2897_i++;
			goto _iter_begin_1c0ba20b9;
		}
		_iter_end_1c0ba20b9:;
	};
	return true;;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc282170_FindMethod(_1bc2810c5_StructIns* _self_, jule::Str _30026_ident, jule::Bool _30038_statically) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ba4ad3:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _30115_f = *it;
			{
				if ((((*(_30115_f))._field_Statically == _30038_statically) && ((*_30115_f.alloc)._field_Ident == _30026_ident))) {
					return _30115_f;;
				};
			}
			_iter_next_1c0ba4ad3:;
			++it;
			goto _iter_begin_1c0ba4ad3;
		}
		_iter_end_1c0ba4ad3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc280525_FieldIns> _1bc2824b1_FindField(_1bc2810c5_StructIns* _self_, jule::Str _31125_ident) {
	{
		auto expr = &((*(_self_))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ba5e25:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> _31215_f = *it;
			{
				if (((*((*(_31215_f))._field_Decl))._field_Ident == _31125_ident)) {
					return _31215_f;;
				};
			}
			_iter_next_1c0ba5e25:;
			++it;
			goto _iter_begin_1c0ba5e25;
		}
		_iter_end_1c0ba5e25:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc282802_FindStatic(_1bc2810c5_StructIns* _self_, jule::Str _32226_ident) {
	{
		auto expr = &((*(_self_))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ba7113:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _32315_v = *it;
			{
				if (((*(_32315_v))._field_Ident == _32226_ident)) {
					return _32315_v;;
				};
			}
			_iter_next_1c0ba7113:;
			++it;
			goto _iter_begin_1c0ba7113;
		}
		_iter_end_1c0ba7113:;
	};
	return nullptr;;
}








inline jule::Bool _1bc2e1795_OperandExprModel_eq(_1bc2e1795_OperandExprModel *_self_, _1bc2e1795_OperandExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Model == _self_->_field_Model);
}






inline jule::Bool _1bc2e1c90_BinaryExprModel_eq(_1bc2e1c90_BinaryExprModel *_self_, _1bc2e1c90_BinaryExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1bc2e2169_UnaryExprModel_eq(_1bc2e2169_UnaryExprModel *_self_, _1bc2e2169_UnaryExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1bc2e2697_StructArgExprModel_eq(_1bc2e2697_StructArgExprModel *_self_, _1bc2e2697_StructArgExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}










inline jule::Bool _1bc2e2d3a_AllocStructLitExprModel_eq(_1bc2e2d3a_AllocStructLitExprModel *_self_, _1bc2e2d3a_AllocStructLitExprModel _other_) {
	return 
		(_self_->_field_Lit == _other_._field_Lit);
}






inline jule::Bool _1bc2e33bd_CastingExprModel_eq(_1bc2e33bd_CastingExprModel *_self_, _1bc2e33bd_CastingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_ExprType == _self_->_field_ExprType);
}














inline jule::Bool _1bc2e4600_IndexingExprModel_eq(_1bc2e4600_IndexingExprModel *_self_, _1bc2e4600_IndexingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Index == _self_->_field_Index);
}










inline jule::Bool _1bc2e4e80_KeyValPairExprModel_eq(_1bc2e4e80_KeyValPairExprModel *_self_, _1bc2e4e80_KeyValPairExprModel _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}










inline jule::Bool _1bc2e58dc_SlicingExprModel_eq(_1bc2e58dc_SlicingExprModel *_self_, _1bc2e58dc_SlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bc2e5e70_TraitSubIdentExprModel_eq(_1bc2e5e70_TraitSubIdentExprModel *_self_, _1bc2e5e70_TraitSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Trt == _self_->_field_Trt);
}






inline jule::Bool _1bc2e6811_StructSubIdentExprModel_eq(_1bc2e6811_StructSubIdentExprModel *_self_, _1bc2e6811_StructSubIdentExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method) &&
		(_self_->_field_Field == _self_->_field_Field) &&
		(_self_->_field_Owner == _self_->_field_Owner);
}






inline jule::Bool _1bc2e6ba7_StructStaticIdentExprModel_eq(_1bc2e6ba7_StructStaticIdentExprModel *_self_, _1bc2e6ba7_StructStaticIdentExprModel _other_) {
	return 
		(_self_->_field_Structure == _other_._field_Structure) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Method == _self_->_field_Method);
}














inline jule::Bool _1bc2e767a_BuiltinPrintCallExprModel_eq(_1bc2e767a_BuiltinPrintCallExprModel *_self_, _1bc2e767a_BuiltinPrintCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc2e7977_BuiltinPrintlnCallExprModel_eq(_1bc2e7977_BuiltinPrintlnCallExprModel *_self_, _1bc2e7977_BuiltinPrintlnCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc2e7d51_BuiltinNewCallExprModel_eq(_1bc2e7d51_BuiltinNewCallExprModel *_self_, _1bc2e7d51_BuiltinNewCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Init == _self_->_field_Init);
}






inline jule::Bool _1bc2e822a_BuiltinPanicCallExprModel_eq(_1bc2e822a_BuiltinPanicCallExprModel *_self_, _1bc2e822a_BuiltinPanicCallExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc2e86d1_BuiltinMakeCallExprModel_eq(_1bc2e86d1_BuiltinMakeCallExprModel *_self_, _1bc2e86d1_BuiltinMakeCallExprModel _other_) {
	return 
		(_self_->_field_Type == _other_._field_Type) &&
		(_self_->_field_Len == _self_->_field_Len) &&
		(_self_->_field_Cap == _self_->_field_Cap);
}






inline jule::Bool _1bc2e8aaa_BuiltinAppendCallExprModel_eq(_1bc2e8aaa_BuiltinAppendCallExprModel *_self_, _1bc2e8aaa_BuiltinAppendCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elements == _self_->_field_Elements);
}






inline jule::Bool _1bc2e8da7_BuiltinLenCallExprModel_eq(_1bc2e8da7_BuiltinLenCallExprModel *_self_, _1bc2e8da7_BuiltinLenCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc2e91a4_BuiltinCapCallExprModel_eq(_1bc2e91a4_BuiltinCapCallExprModel *_self_, _1bc2e91a4_BuiltinCapCallExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc2e957d_BuiltinDeleteCallExprModel_eq(_1bc2e957d_BuiltinDeleteCallExprModel *_self_, _1bc2e957d_BuiltinDeleteCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Key == _self_->_field_Key);
}






inline jule::Bool _1bc2e9957_BuiltinCopyCallExprModel_eq(_1bc2e9957_BuiltinCopyCallExprModel *_self_, _1bc2e9957_BuiltinCopyCallExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Src == _self_->_field_Src);
}






inline jule::Bool _1bc2e9d31_BuiltinErrorCallExprModel_eq(_1bc2e9d31_BuiltinErrorCallExprModel *_self_, _1bc2e9d31_BuiltinErrorCallExprModel _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Err == _self_->_field_Err);
}






inline jule::Bool _1bc2ea12d_SizeofExprModel_eq(_1bc2ea12d_SizeofExprModel *_self_, _1bc2ea12d_SizeofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc2ea7d2_AlignofExprModel_eq(_1bc2ea7d2_AlignofExprModel *_self_, _1bc2ea7d2_AlignofExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bc2ea9be_RuneExprModel_eq(_1bc2ea9be_RuneExprModel *_self_, _1bc2ea9be_RuneExprModel _other_) {
	return 
		(_self_->_field_Code == _other_._field_Code);
}










inline jule::Bool _1bc2eb140_FreeExprModel_eq(_1bc2eb140_FreeExprModel *_self_, _1bc2eb140_FreeExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}










inline jule::Bool _1bc2ec581_Param_eq(_1bc2ec581_Param *_self_, _1bc2ec581_Param _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym) &&
		(_self_->_field_Ident == _self_->_field_Ident);
}

inline jule::Ptr<_1bc300ead_ParamIns> _1bc2ec949_instance(jule::Ptr<_1bc2ec581_Param> _self_) {
	return jule::new_ptr<_1bc300ead_ParamIns>(_1bc300ead_ParamIns{._field_Decl=_self_, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr)});;
}



inline jule::Bool _1bc2ecbd0_IsSelf(_1bc2ec581_Param* _self_) {
	return ((*(_self_))._field_Ident.equal("&self", 5) || (*(_self_))._field_Ident.equal("self", 4));;
}



inline jule::Bool _1bc2ece66_IsRef(_1bc2ec581_Param* _self_) {
	return (!((*(_self_))._field_Ident).empty() && ((*(_self_))._field_Ident[0LL] == '&'));;
}







inline jule::Bool _1bc2ee50b_IsVoid(_1bc2ee055_Fn* _self_) {
	return ((*(_self_))._field_Result == nullptr);;
}



inline jule::Bool _1bc2ee792_IsMethod(_1bc2ee055_Fn* _self_) {
	if (((*(_self_))._field_Owner != nullptr)) {
		return true;;
	};
	if (((*(_self_))._field_Params.len() > 0LL)) {
		jule::Ptr<_1bc2ec581_Param> _804_p = (*(_self_))._field_Params[0LL];;
		if (_1bc2ecbd0_IsSelf(_804_p.ptr())) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1bc2eea28_IsEntryPoint(_1bc2ee055_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("main", 4);;
}



inline jule::Bool _1bc2eecae_IsInit(_1bc2ee055_Fn* _self_) {
	return (*(_self_))._field_Ident.equal("init", 4);;
}



inline jule::Bool _1bc300045_IsAnon(_1bc2ee055_Fn* _self_) {
	return _1bc249bb5_IsAnonIdent((*(_self_))._field_Ident);;
}



inline jule::Bool _1bc3002cb_AnyVar(_1bc2ee055_Fn* _self_) {
	return (((*(_self_))._field_Result != nullptr) && ((*(*(_self_))._field_Result.alloc)._field_Idents.len() > 0LL));;
}



inline jule::Ptr<_1bc302113_FnIns> _1bc300562_instanceForce(jule::Ptr<_1bc2ee055_Fn> _self_) {
	jule::Ptr<_1bc302113_FnIns> _1107_ins = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=_self_, ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::new_ptr<_1bc3abd27_Scope>(_1bc3abd27_Scope{._field_Parent=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0}), ._field_Refers=static__1bc3cae89_new(), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(nullptr), ._field_reloaded=false});;
	(*(_1107_ins))._field_Params=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>::alloc(0LL, (*(_self_))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc300ead_ParamIns>(nullptr); __jule_collection; });
	{
		auto expr = &((*_self_.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bb0490:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ec581_Param> _11715_p = *it;
			{
				(*_1107_ins.alloc)._field_Params=jule::append((*_1107_ins.alloc)._field_Params,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc2ec949_instance(_11715_p); __jule_collection; }));
			}
			_iter_next_1c0bb0490:;
			++it;
			goto _iter_begin_1c0bb0490;
		}
		_iter_end_1c0bb0490:;
	};
	if (((*((*_1107_ins.alloc)._field_Decl))._field_Result != nullptr)) {
		(*_1107_ins.alloc)._field_Result=(*((*(*((*(_1107_ins))._field_Decl))._field_Result.alloc)._field_TypeSym))._field_Type;
	};
	return _1107_ins;;
}



inline jule::Ptr<_1bc302113_FnIns> _1bc3007e8_instance(jule::Ptr<_1bc2ee055_Fn> _self_) {
	if ((((*(_self_))._field_Generics.len() == 0LL) && ((*_self_.alloc)._field_Instances.len() == 1LL))) {
		return (*(_self_))._field_Instances[0LL];;
	};
	return _1bc300562_instanceForce(_self_);;
}



inline jule::Ptr<_1bc302113_FnIns> _1bc300b06_appendInstance(_1bc2ee055_Fn* _self_, jule::Ptr<_1bc302113_FnIns>* _13835_ins) {
	if (((*(_self_))._field_Generics.len() == 0LL)) {
		if (((*(_self_))._field_Instances.len() == 1LL)) {
			return (*(_self_))._field_Instances[0LL];;
		};
		{ jule::Slice<jule::Ptr<_1bc302113_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	if (((*(_self_))._field_Instances.len() == 0LL)) {
		{ jule::Slice<jule::Ptr<_1bc302113_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bbaab6:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _15415_ains = *it;
			{
				if (_1bc303ba3_Same(_15415_ains.ptr(), (*(_13835_ins)))) {
					return _15415_ains;;
				};
			}
			_iter_next_1c0bbaab6:;
			++it;
			goto _iter_begin_1c0bbaab6;
		}
		_iter_end_1c0bbaab6:;
	};
	{ jule::Slice<jule::Ptr<_1bc302113_FnIns>> &__jule_push_dest = (*(_self_))._field_Instances; __jule_push_dest.push((*(_13835_ins))); };
	return nullptr;;
}








inline jule::Bool _1bc300ead_ParamIns_eq(_1bc300ead_ParamIns *_self_, _1bc300ead_ParamIns _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Str _1bc301354_Str(_1bc300ead_ParamIns* _self_) {
	_1a95669ea_Builder _1767_s = static__1a9567369_New(32LL);;
	if ((*((*(_self_))._field_Decl))._field_Mutable) {
		({
			auto except = _1a95679eb_WriteStr(&_1767_s, jule::Str::lit("mut ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:178:4"));
			(except.result);
		});
	};
	if ((*((*(_self_))._field_Decl))._field_Reference) {
		({
			auto except = _1a95679eb_WriteStr(&_1767_s, jule::Str::lit("&_:", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:182:4"));
			(except.result);
		});
	};
	if (_1bc2ecbd0_IsSelf((*(_self_))._field_Decl.ptr())) {
		if (_1bc2ece66_IsRef((*(_self_))._field_Decl)) {
			({
				auto except = _1a9567ca4_WriteByte(&_1767_s, '&');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:187:5"));
			});
		};
		({
			auto except = _1a95679eb_WriteStr(&_1767_s, jule::Str::lit("self", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:189:4"));
			(except.result);
		});
		return _1a956837b_Str(&_1767_s);;
	};
	if ((*((*(_self_))._field_Decl))._field_Variadic) {
		({
			auto except = _1a95679eb_WriteStr(&_1767_s, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:194:4"));
			(except.result);
		});
	};
	if (((*(_self_))._field_Type != nullptr)) {
		({
			auto except = _1a95679eb_WriteStr(&_1767_s, _1bc4b68e3_Str((*(_self_))._field_Type));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:197:4"));
			(except.result);
		});
	};
	return _1a956837b_Str(&_1767_s);;
}







inline jule::Str _1bc302487_Str(_1bc302113_FnIns* _self_) {
	;
	return _1bc303ee4_GetKindStr(_self_, false);;
}



inline jule::Bool _1bc3027c8_Equal(jule::Ptr<_1bc302113_FnIns> _self_, jule::Ptr<_1bc4b64e7_Type> _22918_other) {
	jule::Ptr<_1bc302113_FnIns> _2303_f = _1bc4b9e8a_Fn(_22918_other.ptr());;
	if ((_2303_f == nullptr)) {
		return false;;
	};
	return _1bc302c6d_EqualFn(_self_, &(_2303_f));;
}



inline jule::Bool _1bc302c6d_EqualFn(jule::Ptr<_1bc302113_FnIns> _self_, jule::Ptr<_1bc302113_FnIns>* _24021_f) {
	if (((*((*(_self_))._field_Decl))._field_Exceptional != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Exceptional)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Unsafety != (*(*((*(_24021_f))))._field_Decl.alloc)._field_Unsafety)) {
		return false;;
	};
	if ((_1bc2ee50b_IsVoid((*(_self_))._field_Decl.ptr()) != _1bc2ee50b_IsVoid((*((*(_24021_f))))._field_Decl))) {
		return false;;
	};
	jule::Fn<jule::Bool,jule::Ptr<_1bc300ead_ParamIns>,jule::Ptr<_1bc300ead_ParamIns>> _2503_checkParams = jule::__new_closure<jule::Bool,jule::Ptr<_1bc300ead_ParamIns>,jule::Ptr<_1bc300ead_ParamIns>>((void*)__jule_anon1c0bc5906, nullptr, nullptr);;
	if (((*((*(_24021_f))))._field_Params.len() != (*(_self_))._field_Params.len())) {
		return false;;
	};
	jule::I32 _2827_i = 0LL;;
	for (; (_2827_i < (*(_self_))._field_Params.len()); (_2827_i)++) {
		{
			if ((!(_2503_checkParams((*(_self_))._field_Params[_2827_i], (*((*(_24021_f))))._field_Params[_2827_i])))) {
				return false;;
			};
		}
	_iter_next_1c0bcb764:;
	}
	_iter_end_1c0bcb764:;;
	if ((!(_1bc2ee50b_IsVoid((*_self_.alloc)._field_Decl.ptr())))) {
		if ((!(_1bc4b6c34_Equal((*_self_.alloc)._field_Result, (*((*(_24021_f))))._field_Result)))) {
			return false;;
		};
	};
	return true;;
}



inline jule::Bool _1bc3030ae_equalTrait(jule::Ptr<_1bc302113_FnIns> _self_, jule::Ptr<_1bc302113_FnIns>* _29924_other) {
	if (((*((*(_self_))._field_Decl))._field_Public != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Public)) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Ident != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Ident)) {
		return false;;
	};
	if ((!(_1bc302c6d_EqualFn(_self_, _29924_other)))) {
		return false;;
	};
	if (((*((*(_self_))._field_Decl))._field_Generics.len() != (*(*((*(_29924_other))))._field_Decl.alloc)._field_Generics.len())) {
		return false;;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _1bc303345_Types(_1bc302113_FnIns* _self_) {
	{
		
		if (((*(_self_))._field_Result == nullptr)) {
			_case_begin_1c0bd2407:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc4ba9c4_Tup((*(_self_))._field_Result.ptr()) == nullptr)) {
			_case_begin_1c0bd246d:;
			{
				return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_self_))._field_Result; __jule_collection; });;
			}
		}
		else {
			_case_begin_1c0bd1e84:;
			{
				return (*(_1bc4ba9c4_Tup((*(_self_))._field_Result)))._field_Types;;
			}
		}
		_match_end_1c0bd1d74:;
	};
}



inline jule::Bool _1bc3035cb_IsBuiltin(_1bc302113_FnIns* _self_) {
	return ((*(_self_))._field_caller != nullptr);;
}



inline jule::Bool _1bc303862_IsAnon(_1bc302113_FnIns* _self_) {
	return ((*(_self_))._field_Anon || (((*(_self_))._field_Decl != nullptr) && _1bc300045_IsAnon((*(_self_))._field_Decl)));;
}



inline jule::Bool _1bc303ba3_Same(_1bc302113_FnIns* _self_, jule::Ptr<_1bc302113_FnIns> _34216_f) {
	if ((((*(_self_))._field_Decl != (*(_34216_f))._field_Decl) || ((*_34216_f.alloc)._field_Generics.len() != (*(_self_))._field_Generics.len()))) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bd58c2:;
		if (it != expr_end) {
			jule::I32 _3477_i = it - expr->begin();
			jule::Ptr<_1bc4b4b11_InsGeneric> *_34710_g = it;
			{
				jule::Ptr<_1bc4b4b11_InsGeneric> _3484_g2 = (*(_34216_f))._field_Generics[_3477_i];;
				if ((((*((*((*(_34710_g))))._field_Type))._field_BindIdent != (*(*(_3484_g2))._field_Type.alloc)._field_BindIdent) || (!(_1bc4b6c34_Equal((*((*(_34710_g))))._field_Type, (*(_3484_g2))._field_Type))))) {
					return false;;
				};
			}
			_iter_next_1c0bd58c2:;
			++it;
			_3477_i++;
			goto _iter_begin_1c0bd58c2;
		}
		_iter_end_1c0bd58c2:;
	};
	return true;;
}



inline jule::Str _1bc303ee4_GetKindStr(_1bc302113_FnIns* _self_, jule::Bool _35922_ident) {
	_1a95669ea_Builder _3607_s = static__1a9567369_New(32LL);;
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Unsafety)) {
		({
			auto except = _1a95679eb_WriteStr(&_3607_s, jule::Str::lit("unsafe ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:363:4"));
			(except.result);
		});
	};
	({
		auto except = _1a95679eb_WriteStr(&_3607_s, jule::Str::lit("fn", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:366:3"));
		(except.result);
	});
	if ((_35922_ident && ((*(_self_))._field_Decl != nullptr))) {
		({
			auto except = _1a9567ca4_WriteByte(&_3607_s, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:369:4"));
		});
		({
			auto except = _1a95679eb_WriteStr(&_3607_s, (*(*(_self_))._field_Decl.alloc)._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:370:4"));
			(except.result);
		});
	};
	({
		auto except = _1a9567ca4_WriteByte(&_3607_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:373:3"));
	});
	jule::I32 _3743_n = (*(_self_))._field_Params.len();;
	if ((_3743_n > 0LL)) {
		{
			auto expr = &((*(_self_))._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0bdb037:;
			if (it != expr_end) {
				jule::I32 _3768_i = it - expr->begin();
				jule::Ptr<_1bc300ead_ParamIns> *_37611_p = it;
				{
					({
						auto except = _1a95679eb_WriteStr(&_3607_s, _1bc301354_Str((*(_37611_p)).ptr()));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:377:5"));
						(except.result);
					});
					if ((_3768_i < ((*(_self_))._field_Params.len() - 1LL))) {
						({
							auto except = _1a9567ca4_WriteByte(&_3607_s, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:379:6"));
						});
					};
				}
				_iter_next_1c0bdb037:;
				++it;
				_3768_i++;
				goto _iter_begin_1c0bdb037;
			}
			_iter_end_1c0bdb037:;
		};
	};
	({
		auto except = _1a9567ca4_WriteByte(&_3607_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:383:3"));
	});
	if ((((*(_self_))._field_Decl != nullptr) && (*(*(_self_))._field_Decl.alloc)._field_Exceptional)) {
		({
			auto except = _1a9567ca4_WriteByte(&_3607_s, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:385:4"));
		});
	};
	if ((((*(_self_))._field_Decl != nullptr) && (!(_1bc2ee50b_IsVoid((*(_self_))._field_Decl))))) {
		({
			auto except = _1a9567ca4_WriteByte(&_3607_s, ':');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:388:4"));
		});
		({
			auto except = _1a95679eb_WriteStr(&_3607_s, _1bc4b68e3_Str((*(_self_))._field_Result.ptr()));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/fn.jule:389:4"));
			(except.result);
		});
	};
	return _1a956837b_Str(&_3607_s);;
}







inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc305875_SelectPackage(_1bc305358_SymTab* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _2729_selector) {
	if ((_2729_selector == nullptr)) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0bdecd8:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _3115_pkg = *it;
			{
				if (_2729_selector(_3115_pkg)) {
					return _3115_pkg;;
				};
			}
			_iter_next_1c0bdecd8:;
			++it;
			goto _iter_begin_1c0bdecd8;
		}
		_iter_end_1c0bdecd8:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc305c71_FindVar(_1bc305358_SymTab* _self_, jule::Str _4123_ident, jule::Bool _4135_binded) {
	return _1bc307da5_findVar(_self_, &(_4123_ident), _4135_binded, false);;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc30616c_FindTypeAlias(_1bc305358_SymTab* _self_, jule::Str _4729_ident, jule::Bool _4741_binded) {
	return _1bc30835b_findTypeAlias(_self_, &(_4729_ident), _4741_binded, false);;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc306568_FindStruct(_1bc305358_SymTab* _self_, jule::Str _5326_ident, jule::Bool _5338_binded) {
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be2219:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _5415_s = *it;
			{
				if ((((*(_5415_s))._field_Ident == _5326_ident) && ((*_5415_s.alloc)._field_Binded == _5338_binded))) {
					return _5415_s;;
				};
			}
			_iter_next_1c0be2219:;
			++it;
			goto _iter_begin_1c0be2219;
		}
		_iter_end_1c0be2219:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc306964_FindFn(_1bc305358_SymTab* _self_, jule::Str _6422_ident, jule::Bool _6434_binded) {
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be377b:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _6515_f = *it;
			{
				if ((((*(_6515_f))._field_Ident == _6422_ident) && ((*_6515_f.alloc)._field_Binded == _6434_binded))) {
					return _6515_f;;
				};
			}
			_iter_next_1c0be377b:;
			++it;
			goto _iter_begin_1c0be377b;
		}
		_iter_end_1c0be377b:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc309769_Trait> _1bc306ca5_FindTrait(_1bc305358_SymTab* _self_, jule::Str _7525_ident) {
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be4ace:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _7615_t = *it;
			{
				if (((*(_7615_t))._field_Ident == _7525_ident)) {
					return _7615_t;;
				};
			}
			_iter_next_1c0be4ace:;
			++it;
			goto _iter_begin_1c0be4ace;
		}
		_iter_end_1c0be4ace:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc3070e6_FindEnum(_1bc305358_SymTab* _self_, jule::Str _8624_ident) {
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be5a9c:;
		if (it != expr_end) {
			jule::Ptr<_1bc30be20_Enum> _8715_e = *it;
			{
				if (((*(_8715_e))._field_Ident == _8624_ident)) {
					return _8715_e;;
				};
			}
			_iter_next_1c0be5a9c:;
			++it;
			goto _iter_begin_1c0be5a9c;
		}
		_iter_end_1c0be5a9c:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc307437_FindTypeEnum(_1bc305358_SymTab* _self_, jule::Str _9728_ident) {
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be6a8c:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d62a_TypeEnum> _9815_e = *it;
			{
				if (((*(_9815_e))._field_Ident == _9728_ident)) {
					return _9815_e;;
				};
			}
			_iter_next_1c0be6a8c:;
			++it;
			goto _iter_begin_1c0be6a8c;
		}
		_iter_end_1c0be6a8c:;
	};
	return nullptr;;
}



inline jule::I32 _1bc3078ee_findVar1(_1bc305358_SymTab* _self_, jule::Ptr<_1bc42dc12_Var>* _10825_v) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0be7a7c:;
		if (it != expr_end) {
			jule::I32 _1097_i = it - expr->begin();
			{
				if (((*(_self_))._field_Vars[_1097_i] == (*(_10825_v)))) {
					return _1097_i;;
				};
			}
			_iter_next_1c0be7a7c:;
			++it;
			_1097_i++;
			goto _iter_begin_1c0be7a7c;
		}
		_iter_end_1c0be7a7c:;
	};
	return -1LL;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc307da5_findVar(_1bc305358_SymTab* _self_, jule::Str* _11724_ident, jule::Bool _11736_binded, jule::Bool _11750_reverse) {
	if (_11750_reverse) {
		jule::I32 _1198_i = ((*(_self_))._field_Vars.len() - 1LL);;
		for (; (_1198_i >= 0LL); (_1198_i)--) {
			{
				jule::Ptr<_1bc42dc12_Var> _1219_v = (*(_self_))._field_Vars[_1198_i];;
				if ((((*(_1219_v))._field_Ident == (*(_11724_ident))) && ((*_1219_v.alloc)._field_Binded == _11736_binded))) {
					return _1219_v;;
				};
			}
		_iter_next_1c0be9908:;
		}
		_iter_end_1c0be9908:;;
	} else {
		{
			auto expr = &((*(_self_))._field_Vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0bead8d:;
			if (it != expr_end) {
				jule::Ptr<_1bc42dc12_Var> _12716_v = *it;
				{
					if ((((*(_12716_v))._field_Ident == (*(_11724_ident))) && ((*_12716_v.alloc)._field_Binded == _11736_binded))) {
						return _12716_v;;
					};
				}
				_iter_next_1c0bead8d:;
				++it;
				goto _iter_begin_1c0bead8d;
			}
			_iter_end_1c0bead8d:;
		};
	};
	return nullptr;;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc30835b_findTypeAlias(_1bc305358_SymTab* _self_, jule::Str* _13630_ident, jule::Bool _13642_binded, jule::Bool _13656_reverse) {
	if (_13656_reverse) {
		jule::I32 _1388_i = ((*(_self_))._field_TypeAliases.len() - 1LL);;
		for (; (_1388_i >= 0LL); (_1388_i)--) {
			{
				jule::Ptr<_1bc4b5705_TypeAlias> _1409_ta = (*(_self_))._field_TypeAliases[_1388_i];;
				if ((((*(_1409_ta))._field_Ident == (*(_13630_ident))) && ((*_1409_ta.alloc)._field_Binded == _13642_binded))) {
					return _1409_ta;;
				};
			}
		_iter_next_1c0becc4c:;
		}
		_iter_end_1c0becc4c:;;
	} else {
		{
			auto expr = &((*(_self_))._field_TypeAliases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0bee1d2:;
			if (it != expr_end) {
				jule::Ptr<_1bc4b5705_TypeAlias> _14616_ta = *it;
				{
					if ((((*(_14616_ta))._field_Ident == (*(_13630_ident))) && ((*_14616_ta.alloc)._field_Binded == _13642_binded))) {
						return _14616_ta;;
					};
				}
				_iter_next_1c0bee1d2:;
				++it;
				goto _iter_begin_1c0bee1d2;
			}
			_iter_end_1c0bee1d2:;
		};
	};
	return nullptr;;
}



inline jule::Any _1bc308757_defByIdent(_1bc305358_SymTab* _self_, jule::Str* _15727_ident, jule::Bool _15739_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c00425:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _15815_v = *it;
			{
				if ((((*(_15815_v))._field_Ident == (*(_15727_ident))) && ((*_15815_v.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_15815_v, &__jule_any_type7);;
				};
			}
			_iter_next_1c0c00425:;
			++it;
			goto _iter_begin_1c0c00425;
		}
		_iter_end_1c0c00425:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c01217:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b5705_TypeAlias> _16415_ta = *it;
			{
				if ((((*(_16415_ta))._field_Ident == (*(_15727_ident))) && ((*_16415_ta.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_16415_ta, &__jule_any_type8);;
				};
			}
			_iter_next_1c0c01217:;
			++it;
			goto _iter_begin_1c0c01217;
		}
		_iter_end_1c0c01217:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c045a0:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _17015_s = *it;
			{
				if ((((*(_17015_s))._field_Ident == (*(_15727_ident))) && ((*_17015_s.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17015_s, &__jule_any_type9);;
				};
			}
			_iter_next_1c0c045a0:;
			++it;
			goto _iter_begin_1c0c045a0;
		}
		_iter_end_1c0c045a0:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c03d96:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _17615_f = *it;
			{
				if ((((*(_17615_f))._field_Ident == (*(_15727_ident))) && ((*_17615_f.alloc)._field_Binded == _15739_binded))) {
					return jule::Any(_17615_f, &__jule_any_type10);;
				};
			}
			_iter_next_1c0c03d96:;
			++it;
			goto _iter_begin_1c0c03d96;
		}
		_iter_end_1c0c03d96:;
	};
	if (_15739_binded) {
		return nullptr;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c07d34:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _18615_t = *it;
			{
				if (((*(_18615_t))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_18615_t, &__jule_any_type11);;
				};
			}
			_iter_next_1c0c07d34:;
			++it;
			goto _iter_begin_1c0c07d34;
		}
		_iter_end_1c0c07d34:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c07dcd:;
		if (it != expr_end) {
			jule::Ptr<_1bc30be20_Enum> _19215_e = *it;
			{
				if (((*(_19215_e))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19215_e, &__jule_any_type12);;
				};
			}
			_iter_next_1c0c07dcd:;
			++it;
			goto _iter_begin_1c0c07dcd;
		}
		_iter_end_1c0c07dcd:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c115ce:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d62a_TypeEnum> _19815_te = *it;
			{
				if (((*(_19815_te))._field_Ident == (*(_15727_ident)))) {
					return jule::Any(_19815_te, &__jule_any_type13);;
				};
			}
			_iter_next_1c0c115ce:;
			++it;
			goto _iter_begin_1c0c115ce;
		}
		_iter_end_1c0c115ce:;
	};
	return nullptr;;
}



inline jule::Bool _1bc308c0d_isDuplicatedIdent(_1bc305358_SymTab* _self_, jule::Uintptr _21029_itself, jule::Str* _21047_ident, jule::Bool _21059_binded) {
	{
		auto expr = &((*(_self_))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c0e522:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> *_21110_v = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21110_v))) != _21029_itself) && ((*((*(_21110_v))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21110_v)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1c0c0e522:;
			++it;
			goto _iter_begin_1c0c0e522;
		}
		_iter_end_1c0c0e522:;
	};
	{
		auto expr = &((*(_self_))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c1403d:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b5705_TypeAlias> *_21710_ta = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_21710_ta))) != _21029_itself) && ((*((*(_21710_ta))))._field_Ident == (*(_21047_ident)))) && ((*(*(_21710_ta)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1c0c1403d:;
			++it;
			goto _iter_begin_1c0c1403d;
		}
		_iter_end_1c0c1403d:;
	};
	{
		auto expr = &((*(_self_))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c1ba5c:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> *_22310_s = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22310_s))) != _21029_itself) && ((*((*(_22310_s))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22310_s)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1c0c1ba5c:;
			++it;
			goto _iter_begin_1c0c1ba5c;
		}
		_iter_end_1c0c1ba5c:;
	};
	{
		auto expr = &((*(_self_))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c1cd05:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> *_22910_f = it;
			{
				if ((((static_cast<jule::Uintptr>((*(_22910_f))) != _21029_itself) && ((*((*(_22910_f))))._field_Ident == (*(_21047_ident)))) && ((*(*(_22910_f)).alloc)._field_Binded == _21059_binded))) {
					return true;;
				};
			}
			_iter_next_1c0c1cd05:;
			++it;
			goto _iter_begin_1c0c1cd05;
		}
		_iter_end_1c0c1cd05:;
	};
	if (_21059_binded) {
		return false;;
	};
	{
		auto expr = &((*(_self_))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c1de38:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> *_23910_t = it;
			{
				if (((static_cast<jule::Uintptr>((*(_23910_t))) != _21029_itself) && ((*((*(_23910_t))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1c0c1de38:;
			++it;
			goto _iter_begin_1c0c1de38;
		}
		_iter_end_1c0c1de38:;
	};
	{
		auto expr = &((*(_self_))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c20313:;
		if (it != expr_end) {
			jule::Ptr<_1bc30be20_Enum> *_24510_e = it;
			{
				if (((static_cast<jule::Uintptr>((*(_24510_e))) != _21029_itself) && ((*((*(_24510_e))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1c0c20313:;
			++it;
			goto _iter_begin_1c0c20313;
		}
		_iter_end_1c0c20313:;
	};
	{
		auto expr = &((*(_self_))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c216bb:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d62a_TypeEnum> *_25110_te = it;
			{
				if (((static_cast<jule::Uintptr>((*(_25110_te))) != _21029_itself) && ((*((*(_25110_te))))._field_Ident == (*(_21047_ident))))) {
					return true;;
				};
			}
			_iter_next_1c0c216bb:;
			++it;
			goto _iter_begin_1c0c216bb;
		}
		_iter_end_1c0c216bb:;
	};
	return false;;
}







inline jule::Str _1bc309b65_Str(_1bc309769_Trait* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1bc309ea6_Equal(jule::Ptr<_1bc309769_Trait> _self_, jule::Ptr<_1bc4b64e7_Type> _2518_other) {
	jule::Ptr<_1bc309769_Trait> _263_trt = _1bc4ba4a7_Trait(_2518_other.ptr());;
	return (_self_ == _263_trt);;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc30a44b_FindMethod(_1bc309769_Trait* _self_, jule::Str _3426_ident) {
	{
		auto expr = &((*(_self_))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c2423a:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _3515_f = *it;
			{
				if (((*(_3515_f))._field_Ident == _3426_ident)) {
					return _3515_f;;
				};
			}
			_iter_next_1c0c2423a:;
			++it;
			goto _iter_begin_1c0c2423a;
		}
		_iter_end_1c0c2423a:;
	};
	return _1bc30aacd_findMethodInherit(_self_, &(_3426_ident));;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc30aacd_findMethodInherit(_1bc309769_Trait* _self_, jule::Str* _5534_ident) {
	{
		auto expr = &((*(_self_))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c26dca:;
		if (it != expr_end) {
			jule::Ptr<_1bc4bdc08_TypeSym> _5615_i = *it;
			{
				if (((*(_5615_i))._field_Type == nullptr)) {
					goto _iter_next_1c0c26dca;
				};
				jule::Ptr<_1bc309769_Trait> _608_t = _1bc4ba4a7_Trait((*(_5615_i))._field_Type.ptr());;
				if ((_608_t != nullptr)) {
					jule::Ptr<_1bc2ee055_Fn> _629_f2 = _1bc30a44b_FindMethod(_608_t, (*(_5534_ident)));;
					if ((_629_f2 != nullptr)) {
						return _629_f2;;
					};
				};
			}
			_iter_next_1c0c26dca:;
			++it;
			goto _iter_begin_1c0c26dca;
		}
		_iter_end_1c0c26dca:;
	};
	return nullptr;;
}








inline jule::Bool _1bc30b3b4_EnumItem_eq(_1bc30b3b4_EnumItem *_self_, _1bc30b3b4_EnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_Value == _self_->_field_Value);
}

inline jule::Bool _1bc30b78d_AutoExpr(_1bc30b3b4_EnumItem* _self_) {
	return ((*(_self_))._field_Value == nullptr);;
}







inline jule::Str _1bc30c2c7_Str(_1bc30be20_Enum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1bc30c618_Equal(jule::Ptr<_1bc30be20_Enum> _self_, jule::Ptr<_1bc4b64e7_Type> _3818_other) {
	jule::Ptr<_1bc30be20_Enum> _393_enm = _1bc4b9451_Enum(_3818_other.ptr());;
	return (_self_ == _393_enm);;
}



inline jule::Ptr<_1bc30b3b4_EnumItem> _1bc30ca47_FindItem(_1bc30be20_Enum* _self_, jule::Str _4724_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c2ac14:;
		if (it != expr_end) {
			jule::Ptr<_1bc30b3b4_EnumItem> _4815_item = *it;
			{
				if (((*(_4815_item))._field_Ident == _4724_ident)) {
					return _4815_item;;
				};
			}
			_iter_next_1c0c2ac14:;
			++it;
			goto _iter_begin_1c0c2ac14;
		}
		_iter_end_1c0c2ac14:;
	};
	return nullptr;;
}








inline jule::Bool _1bc30d053_TypeEnumItem_eq(_1bc30d053_TypeEnumItem *_self_, _1bc30d053_TypeEnumItem _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Ident == _self_->_field_Ident) &&
		(_self_->_field_TypeSym == _self_->_field_TypeSym);
}





inline jule::Str _1bc30d99e_Str(_1bc30d62a_TypeEnum* _self_) {
	return (*(_self_))._field_Ident;;
}



inline jule::Bool _1bc30dce0_Equal(jule::Ptr<_1bc30d62a_TypeEnum> _self_, jule::Ptr<_1bc4b64e7_Type> _8018_other) {
	jule::Ptr<_1bc30d62a_TypeEnum> _813_tenm = _1bc4b96d7_TypeEnum(_8018_other.ptr());;
	return (_self_ == _813_tenm);;
}



inline jule::Ptr<_1bc30d053_TypeEnumItem> _1bc30e21e_FindItem(_1bc30d62a_TypeEnum* _self_, jule::Str _8924_ident) {
	{
		auto expr = &((*(_self_))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c2cead:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d053_TypeEnumItem> _9015_item = *it;
			{
				if (((*(_9015_item))._field_Ident == _8924_ident)) {
					return _9015_item;;
				};
			}
			_iter_next_1c0c2cead:;
			++it;
			goto _iter_begin_1c0c2cead;
		}
		_iter_end_1c0c2cead:;
	};
	return nullptr;;
}








inline jule::Bool _1bc37e437_comptimeRange_eq(_1bc37e437_comptimeRange *_self_, _1bc37e437_comptimeRange _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1bc37e833_Str(_1bc37e437_comptimeRange* _self_) {
	return jule::Str::lit("comptimeRange", 13);;
}



inline jule::Bool _1bc37eb74_Equal(jule::Ptr<_1bc37e437_comptimeRange> _self_, jule::Ptr<_1bc4b64e7_Type> _2718_other) {
	return false;;
}








inline jule::Bool _1bc37ee93_comptimeStructField_eq(_1bc37ee93_comptimeStructField *_self_, _1bc37ee93_comptimeStructField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1bc38034a_Str(_1bc37ee93_comptimeStructField* _self_) {
	return jule::Str::lit("comptimeStructField", 19);;
}



inline jule::Bool _1bc38068b_Equal(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Ptr<_1bc4b64e7_Type> _3718_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc380b97__Decl(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Ptr<_1bc48551b_eval>* _4127_e, jule::Ptr<_1bc26596c_FnCallExpr>* _4142_fc) {
	if (((*((*(_4142_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_4127_e)).ptr(), (*((*((*(_4142_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_field))._field_Decl, &__jule_any_type14)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc381093__Type(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Ptr<_1bc48551b_eval>* _5327_e, jule::Ptr<_1bc26596c_FnCallExpr>* _5342_fc) {
	if (((*((*(_5342_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_5327_e)).ptr(), (*((*((*(_5342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_5327_e))))._field_s), &((*((*(_self_))._field_field))._field_Type));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3813d4_subIdent(jule::Ptr<_1bc37ee93_comptimeStructField> _self_, jule::Str* _6126_ident) {
	{
		auto &_match_expr{ (*(_6126_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1c0c3a1b8:;
			{
				jule::Ptr<_1bc302113_FnIns> _648_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c3b43e, jule::Ptr<__jule_anon_1c0c3b43e_ctx>::make(__jule_anon_1c0c3b43e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c3b43e_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c0c3a251:;
			{
				jule::Ptr<_1bc302113_FnIns> _718_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c3d3b9, jule::Ptr<__jule_anon_1c0c3d3b9_ctx>::make(__jule_anon_1c0c3d3b9_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c3d3b9_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_718_method));;
			}
		}
		else {
			_case_begin_1c0c39eed:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0c3a10d:;
	};
}







inline jule::Str _1bc381aee_Str(_1bc381736_comptimeStructFields* _self_) {
	return jule::Str::lit("comptimeStructFields", 20);;
}



inline jule::Bool _1bc381e40_Equal(jule::Ptr<_1bc381736_comptimeStructFields> _self_, jule::Ptr<_1bc4b64e7_Type> _9018_other) {
	return false;;
}



inline void _1bc3823c4_ready(_1bc381736_comptimeStructFields* _self_, jule::Ptr<_1bc42dc12_Var>* _9426_keyA, jule::Ptr<_1bc42dc12_Var>* _9443_keyB) {
	if (((*(_9426_keyA)) != nullptr)) {
		(*((*(_9426_keyA))))._field_Constant=true;
		(*((*(_9426_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_9426_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_9443_keyB)) != nullptr)) {
		(*((*(_9443_keyB))))._field_Constant=true;
		(*((*(_9443_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_9443_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37ee93_comptimeStructField>(_1bc37ee93_comptimeStructField{._field_field=jule::Ptr<_1bc280525_FieldIns>(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data6)})});
	};
}



inline void _1bc382737_index(_1bc381736_comptimeStructFields* _self_, jule::Ptr<_1bc48354c_Data>* _11526_d, jule::I32 _11536_i) {
	(*((*(_11526_d))))._field_Decl=false;
	(*((*(_11526_d))))._field_untyped=false;
	(*((*(_11526_d))))._field_Constant=nullptr;
	(*((*(_11526_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37ee93_comptimeStructField>(_1bc37ee93_comptimeStructField{._field_field=(*(_self_))._field_fields[_11536_i]}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data6)});
}



inline void _1bc382b55_step(_1bc381736_comptimeStructFields* _self_, jule::I32 _12620_i, jule::Ptr<_1bc42dc12_Var>* _12633_keyA, jule::Ptr<_1bc42dc12_Var>* _12650_keyB) {
	if (((*(_12633_keyA)) != nullptr)) {
		(*((*((*((*(_12633_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_12620_i));
		(*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_12633_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_12650_keyB)) != nullptr)) {
		(*(_1bc4bb277_comptimeStructField((*((*((*(_12650_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_12620_i];
	};
}



inline jule::I32 _1bc382ddb_len(_1bc381736_comptimeStructFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1bc3831b6_comptimeStatic_eq(_1bc3831b6_comptimeStatic *_self_, _1bc3831b6_comptimeStatic _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1bc38356d_Str(_1bc3831b6_comptimeStatic* _self_) {
	return jule::Str::lit("comptimeStatic", 14);;
}



inline jule::Bool _1bc3838ae_Equal(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Ptr<_1bc4b64e7_Type> _15018_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc383dba__Decl(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Ptr<_1bc48551b_eval>* _15427_e, jule::Ptr<_1bc26596c_FnCallExpr>* _15442_fc) {
	if (((*((*(_15442_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_15427_e)).ptr(), (*((*((*(_15442_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type7)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3842b6__Type(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Ptr<_1bc48551b_eval>* _16627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _16642_fc) {
	if (((*((*(_16642_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_16627_e)).ptr(), (*((*((*(_16642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_16627_e))))._field_s), &((*((*((*(_self_))._field_field))._field_TypeSym))._field_Type));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc384607_subIdent(jule::Ptr<_1bc3831b6_comptimeStatic> _self_, jule::Str* _17426_ident) {
	{
		auto &_match_expr{ (*(_17426_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1c0c50ba1:;
			{
				jule::Ptr<_1bc302113_FnIns> _1778_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c51e27, jule::Ptr<__jule_anon_1c0c51e27_ctx>::make(__jule_anon_1c0c51e27_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c51e27_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_1778_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c0c50c39:;
			{
				jule::Ptr<_1bc302113_FnIns> _1848_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c53da2, jule::Ptr<__jule_anon_1c0c53da2_ctx>::make(__jule_anon_1c0c53da2_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c53da2_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_1848_method));;
			}
		}
		else {
			_case_begin_1c0c509d6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0c50ae6:;
	};
}







inline jule::Str _1bc384d22_Str(_1bc38496a_comptimeStatics* _self_) {
	return jule::Str::lit("comptimeStatics", 15);;
}



inline jule::Bool _1bc385163_Equal(jule::Ptr<_1bc38496a_comptimeStatics> _self_, jule::Ptr<_1bc4b64e7_Type> _20318_other) {
	return false;;
}



inline void _1bc3855e7_ready(_1bc38496a_comptimeStatics* _self_, jule::Ptr<_1bc42dc12_Var>* _20726_keyA, jule::Ptr<_1bc42dc12_Var>* _20743_keyB) {
	if (((*(_20726_keyA)) != nullptr)) {
		(*((*(_20726_keyA))))._field_Constant=true;
		(*((*(_20726_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_20726_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_20743_keyB)) != nullptr)) {
		(*((*(_20743_keyB))))._field_Constant=true;
		(*((*(_20743_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_20743_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc3831b6_comptimeStatic>(_1bc3831b6_comptimeStatic{._field_field=jule::Ptr<_1bc42dc12_Var>(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data8)})});
	};
}



inline void _1bc38595a_index(_1bc38496a_comptimeStatics* _self_, jule::Ptr<_1bc48354c_Data>* _22826_d, jule::I32 _22836_i) {
	(*((*(_22826_d))))._field_Decl=false;
	(*((*(_22826_d))))._field_untyped=false;
	(*((*(_22826_d))))._field_Constant=nullptr;
	(*((*(_22826_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc3831b6_comptimeStatic>(_1bc3831b6_comptimeStatic{._field_field=(*(_self_))._field_fields[_22836_i]}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data8)});
}



inline void _1bc385d78_step(_1bc38496a_comptimeStatics* _self_, jule::I32 _23920_i, jule::Ptr<_1bc42dc12_Var>* _23933_keyA, jule::Ptr<_1bc42dc12_Var>* _23950_keyB) {
	if (((*(_23933_keyA)) != nullptr)) {
		(*((*((*((*(_23933_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_23920_i));
		(*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_23933_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_23950_keyB)) != nullptr)) {
		(*(_1bc4bca81_comptimeStatic((*((*((*(_23950_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_23920_i];
	};
}



inline jule::I32 _1bc38610e_len(_1bc38496a_comptimeStatics* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1bc3863d9_comptimeEnumField_eq(_1bc3863d9_comptimeEnumField *_self_, _1bc3863d9_comptimeEnumField _other_) {
	return 
		(_self_->_field_field == _other_._field_field);
}

inline jule::Str _1bc386791_Str(_1bc3863d9_comptimeEnumField* _self_) {
	return jule::Str::lit("comptimeEnumField", 17);;
}



inline jule::Bool _1bc386ad2_Equal(jule::Ptr<_1bc3863d9_comptimeEnumField> _self_, jule::Ptr<_1bc4b64e7_Type> _26318_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3870cc__Decl(jule::Ptr<_1bc3863d9_comptimeEnumField> _self_, jule::Ptr<_1bc48551b_eval>* _26727_e, jule::Ptr<_1bc26596c_FnCallExpr>* _26742_fc) {
	if (((*((*(_26742_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_26727_e)).ptr(), (*((*((*(_26742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any((*(_self_))._field_field, &__jule_any_type16)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc38741d_subIdent(jule::Ptr<_1bc3863d9_comptimeEnumField> _self_, jule::Str* _27926_ident) {
	{
		auto &_match_expr{ (*(_27926_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bbc970e7:;
			{
				jule::Ptr<_1bc302113_FnIns> _2828_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1bbc98a22, jule::Ptr<__jule_anon_1bbc98a22_ctx>::make(__jule_anon_1bbc98a22_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbc98a22_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_2828_method));;
			}
		}
		else {
			_case_begin_1bbc93a94:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbc94721:;
	};
}







inline jule::Str _1bc387bb0_Str(_1bc3876e8_comptimeEnumFields* _self_) {
	return jule::Str::lit("comptimeEnumFields", 18);;
}



inline jule::Bool _1bc388001_Equal(jule::Ptr<_1bc3876e8_comptimeEnumFields> _self_, jule::Ptr<_1bc4b64e7_Type> _30118_other) {
	return false;;
}



inline void _1bc38840d_ready(_1bc3876e8_comptimeEnumFields* _self_, jule::Ptr<_1bc42dc12_Var>* _30526_keyA, jule::Ptr<_1bc42dc12_Var>* _30543_keyB) {
	if (((*(_30526_keyA)) != nullptr)) {
		(*((*(_30526_keyA))))._field_Constant=true;
		(*((*(_30526_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_30526_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_30543_keyB)) != nullptr)) {
		(*((*(_30543_keyB))))._field_Constant=true;
		(*((*(_30543_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_30543_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc3863d9_comptimeEnumField>(_1bc3863d9_comptimeEnumField{._field_field=jule::Ptr<_1bc30b3b4_EnumItem>(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data10)})});
	};
}



inline void _1bc388771_index(_1bc3876e8_comptimeEnumFields* _self_, jule::Ptr<_1bc48354c_Data>* _32626_d, jule::I32 _32636_i) {
	(*((*(_32626_d))))._field_Decl=false;
	(*((*(_32626_d))))._field_untyped=false;
	(*((*(_32626_d))))._field_Constant=nullptr;
	(*((*(_32626_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc3863d9_comptimeEnumField>(_1bc3863d9_comptimeEnumField{._field_field=(*(_self_))._field_fields[_32636_i]}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data10)});
}



inline void _1bc388b8e_step(_1bc3876e8_comptimeEnumFields* _self_, jule::I32 _33720_i, jule::Ptr<_1bc42dc12_Var>* _33733_keyA, jule::Ptr<_1bc42dc12_Var>* _33750_keyB) {
	if (((*(_33733_keyA)) != nullptr)) {
		(*((*((*((*(_33733_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_33720_i));
		(*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_33733_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_33750_keyB)) != nullptr)) {
		(*(_1bc4bb794_comptimeEnumField((*((*((*(_33750_keyB))))._field_TypeSym))._field_Type.ptr())))._field_field=(*(_self_))._field_fields[_33720_i];
	};
}



inline jule::I32 _1bc388e25_len(_1bc3876e8_comptimeEnumFields* _self_) {
	return (*(_self_))._field_fields.len();;
}








inline jule::Bool _1bc389200_comptimeParam_eq(_1bc389200_comptimeParam *_self_, _1bc389200_comptimeParam _other_) {
	return 
		(_self_->_field_param == _other_._field_param);
}

inline jule::Str _1bc3895a7_Str(_1bc389200_comptimeParam* _self_) {
	return jule::Str::lit("comptimeParam", 13);;
}



inline jule::Bool _1bc3898e8_Equal(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc4b64e7_Type> _36118_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc389e15__Decl(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc48551b_eval>* _36527_e, jule::Ptr<_1bc26596c_FnCallExpr>* _36542_fc) {
	if (((*((*(_36542_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_36527_e)).ptr(), (*((*((*(_36542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any((*((*(_self_))._field_param))._field_Decl, &__jule_any_type17)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc38a311__Type(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc48551b_eval>* _37727_e, jule::Ptr<_1bc26596c_FnCallExpr>* _37742_fc) {
	if (((*((*(_37742_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_37727_e)).ptr(), (*((*((*(_37742_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_37727_e))))._field_s), &((*((*(_self_))._field_param))._field_Type));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc38a70c__Recv(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Ptr<_1bc48551b_eval>* _38527_e, jule::Ptr<_1bc26596c_FnCallExpr>* _38542_fc) {
	if (((*((*(_38542_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_38527_e)).ptr(), (*((*((*(_38542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Recv", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _3907_constant = static__1bac25a27_NewBool(_1bc2ecbd0_IsSelf((*((*(_self_))._field_param))._field_Decl.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_3907_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_3907_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc38aa4d_subIdent(jule::Ptr<_1bc389200_comptimeParam> _self_, jule::Str* _39826_ident) {
	{
		auto &_match_expr{ (*(_39826_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1c0c52653:;
			{
				jule::Ptr<_1bc302113_FnIns> _4018_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c54dd6, jule::Ptr<__jule_anon_1c0c54dd6_ctx>::make(__jule_anon_1c0c54dd6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c54dd6_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_4018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Recv", 4)) {
			_case_begin_1c0c526b9:;
			{
				jule::Ptr<_1bc302113_FnIns> _4088_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1bbcaddde, jule::Ptr<__jule_anon_1bbcaddde_ctx>::make(__jule_anon_1bbcaddde_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbcaddde_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_4088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c0c52730:;
			{
				jule::Ptr<_1bc302113_FnIns> _4158_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1bbcb0d69, jule::Ptr<__jule_anon_1bbcb0d69_ctx>::make(__jule_anon_1bbcb0d69_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbcb0d69_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_4158_method));;
			}
		}
		else {
			_case_begin_1c0b836d8:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0c50cc2:;
	};
}







inline jule::Str _1bc38b301_Str(_1bc38b059_comptimeParams* _self_) {
	return jule::Str::lit("comptimeParams", 14);;
}



inline jule::Bool _1bc38b642_Equal(jule::Ptr<_1bc38b059_comptimeParams> _self_, jule::Ptr<_1bc4b64e7_Type> _43418_other) {
	return false;;
}



inline void _1bc38bac6_ready(_1bc38b059_comptimeParams* _self_, jule::Ptr<_1bc42dc12_Var>* _43826_keyA, jule::Ptr<_1bc42dc12_Var>* _43843_keyB) {
	if (((*(_43826_keyA)) != nullptr)) {
		(*((*(_43826_keyA))))._field_Constant=true;
		(*((*(_43826_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_43826_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_43843_keyB)) != nullptr)) {
		(*((*(_43843_keyB))))._field_Constant=true;
		(*((*(_43843_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_43843_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc389200_comptimeParam>(_1bc389200_comptimeParam{._field_param=jule::Ptr<_1bc300ead_ParamIns>(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data12)})});
	};
}



inline void _1bc38be39_index(_1bc38b059_comptimeParams* _self_, jule::Ptr<_1bc48354c_Data>* _45926_d, jule::I32 _45936_i) {
	(*((*(_45926_d))))._field_Decl=false;
	(*((*(_45926_d))))._field_untyped=false;
	(*((*(_45926_d))))._field_Constant=nullptr;
	(*((*(_45926_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc389200_comptimeParam>(_1bc389200_comptimeParam{._field_param=(*(_self_))._field_params[_45936_i]}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data12)});
}



inline void _1bc38c357_step(_1bc38b059_comptimeParams* _self_, jule::I32 _47020_i, jule::Ptr<_1bc42dc12_Var>* _47033_keyA, jule::Ptr<_1bc42dc12_Var>* _47050_keyB) {
	if (((*(_47033_keyA)) != nullptr)) {
		(*((*((*((*(_47033_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_47020_i));
		(*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_47033_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_47050_keyB)) != nullptr)) {
		(*(_1bc4bbcb1_comptimeParam((*((*((*(_47050_keyB))))._field_TypeSym))._field_Type.ptr())))._field_param=(*(_self_))._field_params[_47020_i];
	};
}



inline jule::I32 _1bc38c5dd_len(_1bc38b059_comptimeParams* _self_) {
	return (*(_self_))._field_params.len();;
}







inline jule::Str _1bc38cc70_Str(_1bc38c8b8_comptimeTypeInfos* _self_) {
	return jule::Str::lit("comptimeTypeInfos", 17);;
}



inline jule::Bool _1bc38d0b1_Equal(jule::Ptr<_1bc38c8b8_comptimeTypeInfos> _self_, jule::Ptr<_1bc4b64e7_Type> _49418_other) {
	return false;;
}



inline void _1bc38d545_ready(_1bc38c8b8_comptimeTypeInfos* _self_, jule::Ptr<_1bc42dc12_Var>* _49826_keyA, jule::Ptr<_1bc42dc12_Var>* _49843_keyB) {
	if (((*(_49826_keyA)) != nullptr)) {
		(*((*(_49826_keyA))))._field_Constant=true;
		(*((*(_49826_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_49826_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_49843_keyB)) != nullptr)) {
		(*((*(_49843_keyB))))._field_Constant=true;
		(*((*(_49843_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_49843_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc38e337_comptimeTypeInfo>(_1bc38e337_comptimeTypeInfo{._field_base=jule::Ptr<_1bc4b64e7_Type>(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data15)})});
	};
}



inline void _1bc38d8a8_index(_1bc38c8b8_comptimeTypeInfos* _self_, jule::Ptr<_1bc48354c_Data>* _51926_d, jule::I32 _51936_i) {
	(*((*(_51926_d))))._field_Decl=false;
	(*((*(_51926_d))))._field_untyped=false;
	(*((*(_51926_d))))._field_Constant=nullptr;
	(*((*(_51926_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_types[_51936_i], (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data15)});
}



inline void _1bc38dcc6_step(_1bc38c8b8_comptimeTypeInfos* _self_, jule::I32 _52820_i, jule::Ptr<_1bc42dc12_Var>* _52833_keyA, jule::Ptr<_1bc42dc12_Var>* _52850_keyB) {
	if (((*(_52833_keyA)) != nullptr)) {
		(*((*((*((*(_52833_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_52820_i));
		(*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_52833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_52850_keyB)) != nullptr)) {
		(*((*((*((*(_52850_keyB))))._field_TypeSym))._field_Type))._field_Kind=jule::Trait((*(_self_))._field_types[_52820_i], (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data15);
	};
}



inline jule::I32 _1bc38e05c_len(_1bc38c8b8_comptimeTypeInfos* _self_) {
	return (*(_self_))._field_types.len();;
}








inline jule::Bool _1bc38e337_comptimeTypeInfo_eq(_1bc38e337_comptimeTypeInfo *_self_, _1bc38e337_comptimeTypeInfo _other_) {
	return 
		(_self_->_field_base == _other_._field_base);
}

inline jule::Str _1bc38e6de_Str(_1bc38e337_comptimeTypeInfo* _self_) {
	return ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("comptimeTypeInfo[", 17)); size += part0.len(); jule::Str part1 = std::move(_1bc4b68e3_Str((*(_self_))._field_base.ptr())); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit("]", 1)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
}



inline jule::Bool _1bc38ea30_Equal(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc4b64e7_Type> _55218_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39016d__Decl(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _55627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _55642_fc) {
	if (((*((*(_55642_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_55627_e)).ptr(), (*((*((*(_55642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Any _5617_decl = jule::Any();;
	{
		
		if ((_1bc4ba221_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ad05be7b:;
			{
				_5617_decl=jule::Any((*(_1bc4ba221_Struct((*(_self_))._field_base)))._field_Decl, &__jule_any_type9);
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1ad05bee2:;
			{
				_5617_decl=jule::Any(_1bc4ba4a7_Trait((*(_self_))._field_base), &__jule_any_type11);
			}
		}
		else if ((_1bc4b9451_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1ad05a9b3:;
			{
				_5617_decl=jule::Any(_1bc4b9451_Enum((*(_self_))._field_base), &__jule_any_type12);
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1ad05aa29:;
			{
				_5617_decl=jule::Any(_1bc4b96d7_TypeEnum((*(_self_))._field_base), &__jule_any_type13);
			}
		}
		else if ((_1bc4b9e8a_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_1ad05aa90:;
			{
				jule::Ptr<_1bc302113_FnIns> _5728_f = _1bc4b9e8a_Fn((*(_self_))._field_base);;
				{
					
					if (_1bc3035cb_IsBuiltin(_5728_f.ptr())) {
						_case_begin_1bbcb17b5:;
						{
							_1bc4859e4_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<built-in function>", 19), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					else if (_1bc303862_IsAnon(_5728_f.ptr())) {
						_case_begin_1bbcad262:;
						{
							_1bc4859e4_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("<anonymous function>", 20), &__jule_any_type5); __jule_collection; }));
							return nullptr;;
						}
					}
					_match_end_1bbcb174e:;
				};
				_5617_decl=jule::Any((*(_5728_f))._field_Decl, &__jule_any_type10);
			}
		}
		else {
			_case_begin_1ad05a94c:;
			{
				_1bc4859e4_pushErr((*(_55627_e)).ptr(), (*((*(_55642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Decl", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ad05a82b:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=_5617_decl}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc390569__Str(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _59322_e, jule::Ptr<_1bc26596c_FnCallExpr>* _59337_fc) {
	if (((*((*(_59337_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_59322_e)).ptr(), (*((*((*(_59337_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Str", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _5987_constant = static__1bac25ce1_NewStr(_1bc4b68e3_Str((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc5398ab_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_5987_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_5987_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc390965__Kind(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _60627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _60642_fc) {
	if (((*((*(_60642_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_60627_e)).ptr(), (*((*((*(_60642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Kind", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc30be20_Enum> _6117_enm = _1bc3de93c_FindEnum(_1bc3a322a_findComptimePackage(&((*((*(_60627_e))))._field_s)).ptr(), jule::Str::lit("Kind", 4));;
	jule::Ptr<_1bc30b3b4_EnumItem> _61211_item = nullptr;;
	{
		
		if (_1bc4b78b1_Void((*(_self_))._field_base.ptr())) {
			_case_begin_1bbccc1c6:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm.ptr(), jule::Str::lit("Void", 4));
			}
		}
		else if ((_1bc4ba221_Struct((*(_self_))._field_base.ptr()) != nullptr)) {
			_case_begin_1bbccc0d8:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm.ptr(), jule::Str::lit("Struct", 6));
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccbd85:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Trait", 5));
			}
		}
		else if ((_1bc4b91ba_Ptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccbdeb:;
			{
				if (_1bc4c7470_IsUnsafe(_1bc4b91ba_Ptr((*(_self_))._field_base).ptr())) {
					_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("UnsafePtr", 9));
				} else {
					_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Ptr", 3));
				};
			}
		}
		else if ((_1bc4b8e34_Sptr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccbe62:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("SmartPtr", 8));
			}
		}
		else if ((_1bc4b9451_Enum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccbec8:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Enum", 4));
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccc935:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("TypeEnum", 8));
			}
		}
		else if ((_1bc4ba73d_Map((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccc99b:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Map", 3));
			}
		}
		else if ((_1bc4b9c04_Slc((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccca12:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Slice", 5));
			}
		}
		else if ((_1bc4b996d_Arr((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbccca78:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Array", 5));
			}
		}
		else if ((_1bc4b9e8a_Fn((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbcccb00:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Func", 4));
			}
		}
		else if ((_1bc4ba9c4_Tup((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbcccb77:;
			{
				_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Tuple", 5));
			}
		}
		else if ((_1bc4b8b9d_Prim((*(_self_))._field_base) != nullptr)) {
			_case_begin_1bbcccbee:;
			{
				jule::Ptr<_1bc4be610_Prim> _6434_prim = _1bc4b8b9d_Prim((*(_self_))._field_base);;
				{
					
					if (_1bc4c2d61_IsAny(_6434_prim.ptr())) {
						_case_begin_1ad06943e:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Any", 3));
						}
					}
					else if (_1bc4c2844_IsBool(_6434_prim.ptr())) {
						_case_begin_1ad069351:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Bool", 4));
						}
					}
					else if (_1bc4c2aca_IsStr(_6434_prim)) {
						_case_begin_1ad069131:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Str", 3));
						}
					}
					else if (_1bc4c1a74_IsF32(_6434_prim)) {
						_case_begin_1ad069197:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("F32", 3));
						}
					}
					else if (_1bc4c1d0a_IsF64(_6434_prim)) {
						_case_begin_1ad06920d:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("F64", 3));
						}
					}
					else if (_1bc4c0501_IsI8(_6434_prim)) {
						_case_begin_1ad069274:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("I8", 2));
						}
					}
					else if (_1bc4c0787_IsI16(_6434_prim)) {
						_case_begin_1ad069b9d:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("I16", 3));
						}
					}
					else if (_1bc4c0a1d_IsI32(_6434_prim)) {
						_case_begin_1ad069c25:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("I32", 3));
						}
					}
					else if (_1bc4c0ca4_IsI64(_6434_prim)) {
						_case_begin_1ad069c9c:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("I64", 3));
						}
					}
					else if (_1bc4c103a_IsU8(_6434_prim)) {
						_case_begin_1ad069d24:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("U8", 2));
						}
					}
					else if (_1bc4c12c1_IsU16(_6434_prim)) {
						_case_begin_1ad069d9b:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("U16", 3));
						}
					}
					else if (_1bc4c1557_IsU32(_6434_prim)) {
						_case_begin_1ad069e23:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("U32", 3));
						}
					}
					else if (_1bc4c17dd_IsU64(_6434_prim)) {
						_case_begin_1ad069e9a:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("U64", 3));
						}
					}
					else if (_1bc4c2091_IsInt(_6434_prim)) {
						_case_begin_1ad06a022:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Int", 3));
						}
					}
					else if (_1bc4c2327_IsUint(_6434_prim)) {
						_case_begin_1ad06a099:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Uint", 4));
						}
					}
					else if (_1bc4c25ad_IsUintptr(_6434_prim)) {
						_case_begin_1ad06a121:;
						{
							_61211_item=_1bc30ca47_FindItem(_6117_enm, jule::Str::lit("Uintptr", 7));
						}
					}
					else {
						_case_begin_1ad068e88:;
						{
							__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1bc4b68e3_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:678:5"));;
						}
					}
					_match_end_1ad068e11:;
				};
			}
		}
		else {
			_case_begin_1bbccbc20:;
			{
				__jule_panic_s((jule::Str::lit("sema: Kind(): unimplemented type for comptime: ", 47) + _1bc4b68e3_Str((*(_self_))._field_base)) + jule::Str("\nlocation: std/jule/sema/comptime.jule:681:4"));;
			}
		}
		_match_end_1bbccbb65:;
	};
	return _1bc4b2933_evalEnumStatic(&((*((*(_60627_e))))._field_s), &(_6117_enm), &(_61211_item), &((*((*(_60642_fc))))._field_Token), _1bc488a2a_getOwnerRefers((*(_60627_e)).ptr()));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc390d61__Bits(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _68627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _68642_fc) {
	if (((*((*(_68642_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_68627_e)).ptr(), (*((*((*(_68642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4be610_Prim> _6913_prim = _1bc4b8b9d_Prim((*(_self_))._field_base.ptr());;
	if ((_6913_prim == nullptr)) {
		_1bc4859e4_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _6963_n = _1bc37486c_BitSizeOf((*(_6913_prim))._field_Kind);;
	if ((_6963_n == -1LL)) {
		_1bc4859e4_pushErr((*(_68627_e)).ptr(), (*((*(_68642_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Bits", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _7017_constant = static__1bac25494_NewI64(static_cast<jule::I64>(_6963_n));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a58d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7017_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7017_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39125c__Elem(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _71027_e, jule::Ptr<_1bc26596c_FnCallExpr>* _71042_fc) {
	if (((*((*(_71042_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_71027_e)).ptr(), (*((*((*(_71042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4c6903_Ptr> _7157_ptr = _1bc4b91ba_Ptr((*(_self_))._field_base.ptr());;
	if ((_7157_ptr != nullptr)) {
		if (_1bc4c7470_IsUnsafe(_7157_ptr)) {
			_1bc4859e4_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7157_ptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1bc4c313b_Sptr> _7237_sptr = _1bc4b8e34_Sptr((*(_self_))._field_base);;
	if ((_7237_sptr != nullptr)) {
		return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7237_sptr.alloc)._field_Elem));;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _7277_slice = _1bc4b9c04_Slc((*(_self_))._field_base);;
	if ((_7277_slice != nullptr)) {
		return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7277_slice.alloc)._field_Elem));;
	};
	jule::Ptr<_1bc4c5e30_Arr> _7317_array = _1bc4b996d_Arr((*(_self_))._field_base);;
	if ((_7317_array != nullptr)) {
		return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*_7317_array.alloc)._field_Elem));;
	};
	jule::Ptr<_1bc30be20_Enum> _7357_enm = _1bc4b9451_Enum((*(_self_))._field_base);;
	if ((_7357_enm != nullptr)) {
		return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_71027_e))))._field_s), &((*((*_7357_enm.alloc)._field_TypeSym))._field_Type));;
	};
	_1bc4859e4_pushErr((*(_71027_e)).ptr(), (*((*(_71042_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Elem", 4), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc391658__Size(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _74327_e, jule::Ptr<_1bc26596c_FnCallExpr>* _74342_fc) {
	if (((*((*(_74342_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_74327_e)).ptr(), (*((*((*(_74342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4c5e30_Arr> _7487_arr = _1bc4b996d_Arr((*(_self_))._field_base.ptr());;
	if ((_7487_arr == nullptr)) {
		_1bc4859e4_pushErr((*(_74327_e)).ptr(), (*((*(_74342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Size", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _7537_constant = static__1bac25494_NewI64(static_cast<jule::I64>((*(_7487_arr))._field_N));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a58d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_7537_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_7537_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc391a54__Key(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _76226_e, jule::Ptr<_1bc26596c_FnCallExpr>* _76241_fc) {
	if (((*((*(_76241_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_76226_e)).ptr(), (*((*((*(_76241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4c52a3_Map> _7677_m = _1bc4ba73d_Map((*(_self_))._field_base.ptr());;
	if ((_7677_m == nullptr)) {
		_1bc4859e4_pushErr((*(_76226_e)).ptr(), (*((*(_76241_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Key", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_76226_e))))._field_s), &((*(_7677_m))._field_Key));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc391e50__Value(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _77528_e, jule::Ptr<_1bc26596c_FnCallExpr>* _77543_fc) {
	if (((*((*(_77543_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_77528_e)).ptr(), (*((*((*(_77543_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4c52a3_Map> _7807_m = _1bc4ba73d_Map((*(_self_))._field_base.ptr());;
	if ((_7807_m == nullptr)) {
		_1bc4859e4_pushErr((*(_77528_e)).ptr(), (*((*(_77543_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Value", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_77528_e))))._field_s), &((*(_7807_m))._field_Val));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39234b__Fields(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _78829_e, jule::Ptr<_1bc26596c_FnCallExpr>* _78844_fc) {
	if (((*((*(_78844_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_78829_e)).ptr(), (*((*((*(_78844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _7937_s = _1bc4ba221_Struct((*(_self_))._field_base.ptr());;
	if ((_7937_s != nullptr)) {
		return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc381736_comptimeStructFields>(_1bc381736_comptimeStructFields{._field_fields=(*_7937_s.alloc)._field_Fields}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data7)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	};
	jule::Ptr<_1bc30be20_Enum> _8037_enm = _1bc4b9451_Enum((*(_self_))._field_base);;
	if ((_8037_enm != nullptr)) {
		return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc3876e8_comptimeEnumFields>(_1bc3876e8_comptimeEnumFields{._field_fields=(*_8037_enm.alloc)._field_Items}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data11)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	};
	_1bc4859e4_pushErr((*(_78829_e)).ptr(), (*((*(_78844_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc392747__Statics(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _81730_e, jule::Ptr<_1bc26596c_FnCallExpr>* _81745_fc) {
	if (((*((*(_81745_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_81730_e)).ptr(), (*((*((*(_81745_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _8227_s = _1bc4ba221_Struct((*(_self_))._field_base.ptr());;
	if ((_8227_s == nullptr)) {
		_1bc4859e4_pushErr((*(_81730_e)).ptr(), (*((*(_81745_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc38496a_comptimeStatics>(_1bc38496a_comptimeStatics{._field_fields=(*(_8227_s))._field_Statics}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data9)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc392b43__Binded(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _83629_e, jule::Ptr<_1bc26596c_FnCallExpr>* _83644_fc) {
	if (((*((*(_83644_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_83629_e)).ptr(), (*((*((*(_83644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _8417_constant = static__1bac25a27_NewBool(_1bc4b7394_Binded((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8417_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8417_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39303e__Ordered(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _84926_e, jule::Ptr<_1bc26596c_FnCallExpr>* _84941_fc) {
	if (((*((*(_84941_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_84926_e)).ptr(), (*((*((*(_84941_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Ordered", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _8547_constant = static__1bac25a27_NewBool(_1bc4b8164_Ordered((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8547_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8547_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39343a__Comparable(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _86229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _86244_fc) {
	if (((*((*(_86244_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_86229_e)).ptr(), (*((*((*(_86244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Comparable", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _8677_constant = static__1bac25a27_NewBool(_1bc4b7b47_Comparable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8677_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc393836__Mutable(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _87526_e, jule::Ptr<_1bc26596c_FnCallExpr>* _87541_fc) {
	if (((*((*(_87541_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_87526_e)).ptr(), (*((*((*(_87541_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _8807_constant = static__1bac25a27_NewBool(_1bc4b7dcd_Mutable((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8807_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8807_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc393c32__Types(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _88828_e, jule::Ptr<_1bc26596c_FnCallExpr>* _88843_fc) {
	if (((*((*(_88843_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_88828_e)).ptr(), (*((*((*(_88843_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4c4703_Tuple> _8937_tup = _1bc4ba9c4_Tup((*(_self_))._field_base.ptr());;
	if ((_8937_tup == nullptr)) {
		_1bc4859e4_pushErr((*(_88828_e)).ptr(), (*((*(_88843_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Types", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc38c8b8_comptimeTypeInfos> _8987_infos = jule::new_ptr<_1bc38c8b8_comptimeTypeInfos>(_1bc38c8b8_comptimeTypeInfos{._field_types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc38e337_comptimeTypeInfo>>::alloc(0LL, (*(_8937_tup))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc38e337_comptimeTypeInfo>(nullptr); __jule_collection; })});;
	{
		auto expr = &((*_8937_tup.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbce8973:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b64e7_Type> _90115_t = *it;
			{
				(*(_8987_infos))._field_types=jule::append((*_8987_infos.alloc)._field_types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc38e337_comptimeTypeInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc409869_pushComptimeTypeInfo((*((*((*(_88828_e))))._field_s))._field_meta.ptr(), &(_90115_t)); __jule_collection; }));
			}
			_iter_next_1bbce8973:;
			++it;
			goto _iter_begin_1bbce8973;
		}
		_iter_end_1bbce8973:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8987_infos, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data14)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39412d__CanNil(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _91129_e, jule::Ptr<_1bc26596c_FnCallExpr>* _91144_fc) {
	if (((*((*(_91144_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_91129_e)).ptr(), (*((*((*(_91144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("CanNil", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _9167_constant = static__1bac25a27_NewBool(_1bc4b83ea_NilCompatible((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9167_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9167_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc394529__GC(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _92425_e, jule::Ptr<_1bc26596c_FnCallExpr>* _92440_fc) {
	if (((*((*(_92440_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_92425_e)).ptr(), (*((*((*(_92440_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("GC", 2), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _9297_constant = static__1bac25a27_NewBool(_1bc4b8681_GC((*(_self_))._field_base.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_9297_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_9297_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc394925__Result(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _93729_e, jule::Ptr<_1bc26596c_FnCallExpr>* _93744_fc) {
	if (((*((*(_93744_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_93729_e)).ptr(), (*((*((*(_93744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc302113_FnIns> _9427_f = _1bc4b9e8a_Fn((*(_self_))._field_base.ptr());;
	if ((_9427_f == nullptr)) {
		_1bc4859e4_pushErr((*(_93729_e)).ptr(), (*((*(_93744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Result", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*(_9427_f))._field_Result == nullptr)) {
		return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &(_1bc539306_primVoid));;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_93729_e))))._field_s), &((*(_9427_f))._field_Result));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc394d21__Params(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Ptr<_1bc48551b_eval>* _95329_e, jule::Ptr<_1bc26596c_FnCallExpr>* _95344_fc) {
	if (((*((*(_95344_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_95329_e)).ptr(), (*((*((*(_95344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc302113_FnIns> _9587_f = _1bc4b9e8a_Fn((*(_self_))._field_base.ptr());;
	if ((_9587_f == nullptr)) {
		_1bc4859e4_pushErr((*(_95329_e)).ptr(), (*((*(_95344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_self_))._field_base), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc38b059_comptimeParams>(_1bc38b059_comptimeParams{._field_params=(*(_9587_f))._field_Params}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data13)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc395162_subIdent(jule::Ptr<_1bc38e337_comptimeTypeInfo> _self_, jule::Str* _97026_ident) {
	{
		auto &_match_expr{ (*(_97026_ident)) };
		
		if (_match_expr == jule::Str::lit("Decl", 4)) {
			_case_begin_1bbd09dd5:;
			{
				jule::Ptr<_1bc302113_FnIns> _9738_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1bbd0b997, jule::Ptr<__jule_anon_1bbd0b997_ctx>::make(__jule_anon_1bbd0b997_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd0b997_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_9738_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Str", 3)) {
			_case_begin_1bbd09e4b:;
			{
				jule::Ptr<_1bc302113_FnIns> _9808_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1bbd0d922, jule::Ptr<__jule_anon_1bbd0d922_ctx>::make(__jule_anon_1bbd0d922_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bbd0d922_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_9808_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Bits", 4)) {
			_case_begin_1bbd09eb2:;
			{
				jule::Ptr<_1bc302113_FnIns> _9878_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c65ca4, jule::Ptr<__jule_anon_1c0c65ca4_ctx>::make(__jule_anon_1c0c65ca4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c65ca4_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_9878_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Elem", 4)) {
			_case_begin_1bbd0a149:;
			{
				jule::Ptr<_1bc302113_FnIns> _9948_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c69329, jule::Ptr<__jule_anon_1c0c69329_ctx>::make(__jule_anon_1c0c69329_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c69329_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_9948_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Size", 4)) {
			_case_begin_1bbd0a1c1:;
			{
				jule::Ptr<_1bc302113_FnIns> _10018_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c6b2a4, jule::Ptr<__jule_anon_1c0c6b2a4_ctx>::make(__jule_anon_1c0c6b2a4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c6b2a4_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10018_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Key", 3)) {
			_case_begin_1bbd0a248:;
			{
				jule::Ptr<_1bc302113_FnIns> _10088_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c0c6d22e, jule::Ptr<__jule_anon_1c0c6d22e_ctx>::make(__jule_anon_1c0c6d22e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c0c6d22e_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10088_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Value", 5)) {
			_case_begin_1bbd0a2c0:;
			{
				jule::Ptr<_1bc302113_FnIns> _10158_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1be0421b4, jule::Ptr<__jule_anon_1be0421b4_ctx>::make(__jule_anon_1be0421b4_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1be0421b4_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10158_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1bbd0a3d0:;
			{
				jule::Ptr<_1bc302113_FnIns> _10228_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03de52c, jule::Ptr<__jule_anon_1c03de52c_ctx>::make(__jule_anon_1c03de52c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03de52c_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10228_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1bbd0a446:;
			{
				jule::Ptr<_1bc302113_FnIns> _10298_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03e16b6, jule::Ptr<__jule_anon_1c03e16b6_ctx>::make(__jule_anon_1c03e16b6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03e16b6_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10298_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1bbd0a4ac:;
			{
				jule::Ptr<_1bc302113_FnIns> _10368_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03e3641, jule::Ptr<__jule_anon_1c03e3641_ctx>::make(__jule_anon_1c03e3641_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03e3641_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10368_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Types", 5)) {
			_case_begin_1bbd0a523:;
			{
				jule::Ptr<_1bc302113_FnIns> _10438_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03e55bb, jule::Ptr<__jule_anon_1c03e55bb_ctx>::make(__jule_anon_1c03e55bb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03e55bb_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10438_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1bbd0a59a:;
			{
				jule::Ptr<_1bc302113_FnIns> _10508_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03e7546, jule::Ptr<__jule_anon_1c03e7546_ctx>::make(__jule_anon_1c03e7546_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03e7546_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10508_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Ordered", 7)) {
			_case_begin_1bbd0a622:;
			{
				jule::Ptr<_1bc302113_FnIns> _10578_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03e94c1, jule::Ptr<__jule_anon_1c03e94c1_ctx>::make(__jule_anon_1c03e94c1_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03e94c1_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10578_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Comparable", 10)) {
			_case_begin_1bbd0a699:;
			{
				jule::Ptr<_1bc302113_FnIns> _10648_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10db613, jule::Ptr<__jule_anon_1c10db613_ctx>::make(__jule_anon_1c10db613_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10db613_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10648_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1bbd0a721:;
			{
				jule::Ptr<_1bc302113_FnIns> _10718_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10dd604, jule::Ptr<__jule_anon_1c10dd604_ctx>::make(__jule_anon_1c10dd604_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10dd604_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10718_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("CanNil", 6)) {
			_case_begin_1bbd0a798:;
			{
				jule::Ptr<_1bc302113_FnIns> _10788_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10e057e, jule::Ptr<__jule_anon_1c10e057e_ctx>::make(__jule_anon_1c10e057e_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10e057e_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10788_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("GC", 2)) {
			_case_begin_1bbd0a820:;
			{
				jule::Ptr<_1bc302113_FnIns> _10858_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10e2509, jule::Ptr<__jule_anon_1c10e2509_ctx>::make(__jule_anon_1c10e2509_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10e2509_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10858_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Result", 6)) {
			_case_begin_1bbd0a897:;
			{
				jule::Ptr<_1bc302113_FnIns> _10928_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10e4484, jule::Ptr<__jule_anon_1c10e4484_ctx>::make(__jule_anon_1c10e4484_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10e4484_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10928_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Kind", 4)) {
			_case_begin_1bbd0a91e:;
			{
				jule::Ptr<_1bc302113_FnIns> _10998_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c03eac53, jule::Ptr<__jule_anon_1c03eac53_ctx>::make(__jule_anon_1c03eac53_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c03eac53_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_10998_method));;
			}
		}
		else {
			_case_begin_1bbd07740:;
			{
				return nullptr;;
			}
		}
		_match_end_1bbd09bb5:;
	};
}








inline jule::Bool _1bc39543c_comptimeValue_eq(_1bc39543c_comptimeValue *_self_, _1bc39543c_comptimeValue _other_) {
	return 
		(_self_->_field_data == _other_._field_data);
}

inline jule::Str _1bc3957e4_Str(_1bc39543c_comptimeValue* _self_) {
	return jule::Str::lit("comptimeValue", 13);;
}



inline jule::Bool _1bc395b35_Equal(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc4b64e7_Type> _111818_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc396196__Unwrap(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _112229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _112244_fc) {
	if (((*((*(_112244_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_112229_e)).ptr(), (*((*((*(_112244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Unwrap", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_self_))._field_data;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc396592__Type(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _113027_e, jule::Ptr<_1bc26596c_FnCallExpr>* _113042_fc) {
	if (((*((*(_113042_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_113027_e)).ptr(), (*((*((*(_113042_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_113027_e))))._field_s), &((*((*(_self_))._field_data))._field_Type));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39698d__Lvalue(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _113829_e, jule::Ptr<_1bc26596c_FnCallExpr>* _113844_fc) {
	if (((*((*(_113844_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_113829_e)).ptr(), (*((*((*(_113844_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Lvalue", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _11437_constant = static__1bac25a27_NewBool((*((*(_self_))._field_data))._field_Lvalue);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11437_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11437_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc396d89__Mutable(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _115130_e, jule::Ptr<_1bc26596c_FnCallExpr>* _115145_fc) {
	if (((*((*(_115145_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_115130_e)).ptr(), (*((*((*(_115145_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _11567_constant = static__1bac25a27_NewBool((*((*(_self_))._field_data))._field_Mutable);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11567_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11567_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc397285__Const(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _116428_e, jule::Ptr<_1bc26596c_FnCallExpr>* _116443_fc) {
	if (((*((*(_116443_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_116428_e)).ptr(), (*((*((*(_116443_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Const", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _11697_constant = static__1bac25a27_NewBool(_1bc483e87_IsConst((*(_self_))._field_data.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_11697_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_11697_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc397681__Field(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _117728_e, jule::Ptr<_1bc26596c_FnCallExpr>* _117743_fc) {
	if (((*((*(_117743_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_117728_e)).ptr(), (*((*((*(_117743_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _11827_s = _1bc4ba221_Struct((*((*(_self_))._field_data))._field_Type.ptr());;
	if ((_11827_s == nullptr)) {
		_1bc4859e4_pushErr((*(_117728_e)).ptr(), (*((*(_117743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_data))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Field", 5), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc261c43_Expr> _11877_arg = (*((*(_117743_fc))))._field_Args[0LL];;
	jule::Ptr<_1bc48354c_Data> _11887_d = _1bc4a4309_evalExpr((*(_117728_e)), _11877_arg);;
	if ((_11887_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc483e87_IsConst(_11887_d.ptr())))) {
		_1bc4859e4_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc4be610_Prim> _11963_prim = _1bc4b8b9d_Prim((*(_11887_d))._field_Type);;
	if (((_11963_prim == nullptr) || (!(_1bc4c2aca_IsStr(_11963_prim.ptr()))))) {
		_1bc4859e4_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1bc4b68e3_Str((*(_11887_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12013_ident = _1bac271cc_ReadStr((*(_11887_d))._field_Constant.ptr());;
	jule::Ptr<_1bc280525_FieldIns> _12027_f = _1bc2824b1_FindField(_11827_s.ptr(), _12013_ident);;
	if ((_12027_f == nullptr)) {
		_1bc4859e4_pushErr((*(_117728_e)).ptr(), (*(_11877_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_11827_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12013_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_11887_d=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_data.alloc));
	_11887_d=_1bc49bee4_evalStructSubIdentField((*(_117728_e)).ptr(), &(_11887_d), &(_11827_s), &((*(_11877_arg))._field_Token), &(_12027_f));
	return _1bc3a38e0_buildComptimeValue(&(_11887_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc397a7c__Method(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Ptr<_1bc48551b_eval>* _121229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _121244_fc) {
	if (((*((*(_121244_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_121229_e)).ptr(), (*((*((*(_121244_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _12177_ref = false;;
	jule::Ptr<_1bc2810c5_StructIns> _12187_s = static_cast<jule::Ptr<_1bc2810c5_StructIns>>(nullptr);;
	if ((_1bc4b8e34_Sptr((*((*(_self_))._field_data))._field_Type.ptr()) != nullptr)) {
		_12187_s=_1bc4ba221_Struct((*(_1bc4b8e34_Sptr((*((*(_self_))._field_data))._field_Type)))._field_Elem.ptr());
		_12177_ref=true;
	} else {
		_12187_s=_1bc4ba221_Struct((*((*(_self_))._field_data))._field_Type.ptr());
	};
	if ((_12187_s == nullptr)) {
		_1bc4859e4_pushErr((*(_121229_e)).ptr(), (*((*(_121244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_data))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Method", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc261c43_Expr> _12297_arg = (*((*(_121244_fc))))._field_Args[0LL];;
	jule::Ptr<_1bc48354c_Data> _12307_d = _1bc4a4309_evalExpr((*(_121229_e)), _12297_arg);;
	if ((_12307_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc483e87_IsConst(_12307_d.ptr())))) {
		_1bc4859e4_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc4be610_Prim> _12383_prim = _1bc4b8b9d_Prim((*(_12307_d))._field_Type.ptr());;
	if (((_12383_prim == nullptr) || (!(_1bc4c2aca_IsStr(_12383_prim.ptr()))))) {
		_1bc4859e4_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1bc4b68e3_Str((*(_12307_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _12433_ident = _1bac271cc_ReadStr((*_12307_d.alloc)._field_Constant.ptr());;
	;
	jule::Ptr<_1bc2ee055_Fn> _12457_m = _1bc282170_FindMethod(_12187_s.ptr(), _12433_ident, false);;
	if ((_12457_m == nullptr)) {
		_1bc4859e4_pushErr((*(_121229_e)).ptr(), (*(_12297_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_12187_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_12433_ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_12307_d=jule::new_ptr<_1bc48354c_Data>((*((*(_self_))._field_data)));
	if (_12177_ref) {
		_1bc4b2ed8_makeImplicitDeref(&(_12307_d), (*((*(_121244_fc))))._field_Token);
	};
	_12307_d=_1bc49c610_evalStructSubIdentMethod((*(_121229_e)).ptr(), &(_12307_d), &(_12187_s), &((*(_12297_arg))._field_Token), &(_12457_m), _12177_ref);
	return _1bc3a38e0_buildComptimeValue(&(_12307_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc397dbd_subIdent(jule::Ptr<_1bc39543c_comptimeValue> _self_, jule::Str* _125826_ident) {
	{
		auto &_match_expr{ (*(_125826_ident)) };
		
		if (_match_expr == jule::Str::lit("Unwrap", 6)) {
			_case_begin_1c124e3e1:;
			{
				jule::Ptr<_1bc302113_FnIns> _12618_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c12508cb, jule::Ptr<__jule_anon_1c12508cb_ctx>::make(__jule_anon_1c12508cb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c12508cb_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_12618_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Type", 4)) {
			_case_begin_1c124e457:;
			{
				jule::Ptr<_1bc302113_FnIns> _12688_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c12528bc, jule::Ptr<__jule_anon_1c12528bc_ctx>::make(__jule_anon_1c12528bc_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c12528bc_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_12688_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Lvalue", 6)) {
			_case_begin_1c124e4bd:;
			{
				jule::Ptr<_1bc302113_FnIns> _12758_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c1254847, jule::Ptr<__jule_anon_1c1254847_ctx>::make(__jule_anon_1c1254847_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c1254847_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_12758_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1c124e545:;
			{
				jule::Ptr<_1bc302113_FnIns> _12828_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad07e3dd, jule::Ptr<__jule_anon_1ad07e3dd_ctx>::make(__jule_anon_1ad07e3dd_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad07e3dd_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_12828_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Const", 5)) {
			_case_begin_1c124e732:;
			{
				jule::Ptr<_1bc302113_FnIns> _12898_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad080675, jule::Ptr<__jule_anon_1ad080675_ctx>::make(__jule_anon_1ad080675_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad080675_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_12898_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Field", 5)) {
			_case_begin_1c124e798:;
			{
				jule::Ptr<_1bc302113_FnIns> _12968_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad08190c, jule::Ptr<__jule_anon_1ad08190c_ctx>::make(__jule_anon_1ad08190c_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad08190c_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_12968_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Method", 6)) {
			_case_begin_1c124e80e:;
			{
				jule::Ptr<_1bc302113_FnIns> _13038_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1bd52d3d7, jule::Ptr<__jule_anon_1bd52d3d7_ctx>::make(__jule_anon_1bd52d3d7_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1bd52d3d7_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_13038_method));;
			}
		}
		else {
			_case_begin_1c124e138:;
			{
				return nullptr;;
			}
		}
		_match_end_1c124e29d:;
	};
}







inline jule::Str _1bc398550_Str(_1bc398198_comptimeFiles* _self_) {
	return jule::Str::lit("comptimeFiles", 13);;
}



inline jule::Bool _1bc398891_Equal(jule::Ptr<_1bc398198_comptimeFiles> _self_, jule::Ptr<_1bc4b64e7_Type> _132218_other) {
	return false;;
}



inline void _1bc398d25_ready(_1bc398198_comptimeFiles* _self_, jule::Ptr<_1bc42dc12_Var>* _132626_keyA, jule::Ptr<_1bc42dc12_Var>* _132643_keyB) {
	if (((*(_132626_keyA)) != nullptr)) {
		(*((*(_132626_keyA))))._field_Constant=true;
		(*((*(_132626_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_132626_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_132643_keyB)) != nullptr)) {
		(*((*(_132643_keyB))))._field_Constant=true;
		(*((*(_132643_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_132643_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc399b17_comptimeFile>(_1bc399b17_comptimeFile{._field_file=jule::Ptr<_1bc305358_SymTab>(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data18)})});
	};
}



inline void _1bc399188_index(_1bc398198_comptimeFiles* _self_, jule::Ptr<_1bc48354c_Data>* _134726_d, jule::I32 _134736_i) {
	(*((*(_134726_d))))._field_Decl=false;
	(*((*(_134726_d))))._field_untyped=false;
	(*((*(_134726_d))))._field_Constant=nullptr;
	(*((*(_134726_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc399b17_comptimeFile>(_1bc399b17_comptimeFile{._field_file=(*(_self_))._field_files[_134736_i]}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data18)});
}



inline void _1bc3995a6_step(_1bc398198_comptimeFiles* _self_, jule::I32 _135820_i, jule::Ptr<_1bc42dc12_Var>* _135833_keyA, jule::Ptr<_1bc42dc12_Var>* _135850_keyB) {
	if (((*(_135833_keyA)) != nullptr)) {
		(*((*((*((*(_135833_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_135820_i));
		(*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_135833_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_135850_keyB)) != nullptr)) {
		(*((*((*((*((*(_135850_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1bc399b17_comptimeFile>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data18)))._field_file=(*(_self_))._field_files[_135820_i];
	};
}



inline jule::I32 _1bc39983c_len(_1bc398198_comptimeFiles* _self_) {
	return (*(_self_))._field_files.len();;
}








inline jule::Bool _1bc399b17_comptimeFile_eq(_1bc399b17_comptimeFile *_self_, _1bc399b17_comptimeFile _other_) {
	return 
		(_self_->_field_file == _other_._field_file);
}

inline jule::Str _1bc399ebe_Str(_1bc399b17_comptimeFile* _self_) {
	return jule::Str::lit("comptimeFile", 12);;
}



inline jule::Bool _1bc39a310_Equal(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc4b64e7_Type> _138218_other) {
	return false;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39a82c__Path(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc48551b_eval>* _138627_e, jule::Ptr<_1bc26596c_FnCallExpr>* _138642_fc) {
	if (((*((*(_138642_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_138627_e)).ptr(), (*((*((*(_138642_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Path", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _13917_constant = static__1bac25ce1_NewStr((*((*((*(_self_))._field_file))._field_File))._field_Path);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc5398ab_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_13917_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_13917_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39ac28__Name(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc48551b_eval>* _139927_e, jule::Ptr<_1bc26596c_FnCallExpr>* _139942_fc) {
	if (((*((*(_139942_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_139927_e)).ptr(), (*((*((*(_139942_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _14047_constant = static__1bac25ce1_NewStr(_1bc24d9cc_Name((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc5398ab_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14047_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14047_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39b124__Dir(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Ptr<_1bc48551b_eval>* _141226_e, jule::Ptr<_1bc26596c_FnCallExpr>* _141241_fc) {
	if (((*((*(_141241_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_141226_e)).ptr(), (*((*((*(_141241_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Dir", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bac25065_Const> _14177_constant = static__1bac25ce1_NewStr(_1bc24d746_Dir((*((*(_self_))._field_file))._field_File.ptr()));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc5398ab_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_14177_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_14177_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39b465_subIdent(jule::Ptr<_1bc399b17_comptimeFile> _self_, jule::Str* _142526_ident) {
	{
		auto &_match_expr{ (*(_142526_ident)) };
		
		if (_match_expr == jule::Str::lit("Path", 4)) {
			_case_begin_1ad089aad:;
			{
				jule::Ptr<_1bc302113_FnIns> _14288_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10eb920, jule::Ptr<__jule_anon_1c10eb920_ctx>::make(__jule_anon_1c10eb920_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10eb920_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_14288_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ad089b57:;
			{
				jule::Ptr<_1bc302113_FnIns> _14358_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1c10eda65, jule::Ptr<__jule_anon_1c10eda65_ctx>::make(__jule_anon_1c10eda65_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c10eda65_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_14358_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Dir", 3)) {
			_case_begin_1ad089bce:;
			{
				jule::Ptr<_1bc302113_FnIns> _14428_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad08b120, jule::Ptr<__jule_anon_1ad08b120_ctx>::make(__jule_anon_1ad08b120_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad08b120_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_14428_method));;
			}
		}
		else {
			_case_begin_1ad08988d:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad089a03:;
	};
}







inline jule::Str _1bc39bd28_Str(_1bc39b740_comptimeDecls* _self_) {
	return jule::Str::lit("comptimeDecls", 13);;
}



inline jule::Bool _1bc39c169_Equal(jule::Ptr<_1bc39b740_comptimeDecls> _self_, jule::Ptr<_1bc4b64e7_Type> _146118_other) {
	return false;;
}



inline void _1bc39c4dd_ready(_1bc39b740_comptimeDecls* _self_, jule::Ptr<_1bc42dc12_Var>* _146526_keyA, jule::Ptr<_1bc42dc12_Var>* _146543_keyB) {
	if (((*(_146526_keyA)) != nullptr)) {
		(*((*(_146526_keyA))))._field_Constant=true;
		(*((*(_146526_keyA))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_146526_keyA))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	if (((*(_146543_keyB)) != nullptr)) {
		(*((*(_146543_keyB))))._field_Constant=true;
		(*((*(_146543_keyB))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		(*((*(_146543_keyB))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(nullptr)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)})});
	};
}



inline void _1bc39c851_index(_1bc39b740_comptimeDecls* _self_, jule::Ptr<_1bc48354c_Data>* _148626_d, jule::I32 _148636_i) {
	(*((*(_148626_d))))._field_Decl=false;
	(*((*(_148626_d))))._field_untyped=false;
	(*((*(_148626_d))))._field_Constant=nullptr;
	(*((*(_148626_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_self_))._field_decls[_148636_i], (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)});
}



inline void _1bc39cc6e_step(_1bc39b740_comptimeDecls* _self_, jule::I32 _149520_i, jule::Ptr<_1bc42dc12_Var>* _149533_keyA, jule::Ptr<_1bc42dc12_Var>* _149550_keyB) {
	if (((*(_149533_keyA)) != nullptr)) {
		(*((*((*((*(_149533_keyA))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_149520_i));
		(*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Model=jule::Any((*(*((*((*(_149533_keyA))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*(_149550_keyB)) != nullptr)) {
		(*((*((*((*((*(_149550_keyB))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1bc39da2d_comptimeDecl>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)))._field_decl=(*((*(_self_))._field_decls[_149520_i]))._field_decl;
	};
}



inline jule::I32 _1bc39d005_len(_1bc39b740_comptimeDecls* _self_) {
	return (*(_self_))._field_decls.len();;
}








inline jule::Bool _1bc39da2d_comptimeDecl_eq(_1bc39da2d_comptimeDecl *_self_, _1bc39da2d_comptimeDecl _other_) {
	return 
		(_self_->_field_decl == _other_._field_decl);
}

inline jule::Str _1bc39ddd5_Str(_1bc39da2d_comptimeDecl* _self_) {
	return jule::Str::lit("comptimeDecl", 12);;
}



inline jule::Bool _1bc39e226_Equal(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc4b64e7_Type> _153418_other) {
	return false;;
}



inline jule::Str _1bc39e677_declAsStr(_1bc39da2d_comptimeDecl* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad090520:;
			{
				return jule::Str::lit("<struct>", 8);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad08eec0:;
			{
				return jule::Str::lit("<fn>", 4);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ad0903cc:;
			{
				return jule::Str::lit("<enum>", 6);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad090454:;
			{
				return jule::Str::lit("<type enum>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ad0906c9:;
			{
				return jule::Str::lit("<trait>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad090751:;
			{
				return jule::Str::lit("<field>", 7);;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad0909c6:;
			{
				return jule::Str::lit("<type alias>", 12);;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad090a3c:;
			{
				return jule::Str::lit("<var>", 5);;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad090aa3:;
			{
				return jule::Str::lit("<enum item>", 11);;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ad090b19:;
			{
				return jule::Str::lit("<param>", 7);;
			}
		}
		else {
			_case_begin_1ad090366:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1561:4"));;
			}
		}
		_match_end_1ad090102:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc39ea73__Name(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _156527_e, jule::Ptr<_1bc26596c_FnCallExpr>* _156542_fc) {
	if (((*((*(_156542_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_156527_e)).ptr(), (*((*((*(_156542_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Name", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Str _15707_name = jule::Str();;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad09549d:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad095855:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ee055_Fn>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ad0958bb:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc30be20_Enum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad095943:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc30d62a_TypeEnum>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ad0959ba:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc309769_Trait>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad095a42:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc27a377_Field>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad095de9:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc4b5705_TypeAlias>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad095e60:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type16) {
			_case_begin_1ad095ec6:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc30b3b4_EnumItem>()))._field_Ident;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ad09603c:;
			{
				_15707_name=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ec581_Param>()))._field_Ident;
			}
		}
		else {
			_case_begin_1ad0957de:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Name: unimplemented declaration kind", 55) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1593:4"));;
			}
		}
		_match_end_1ad095778:;
	};
	jule::Ptr<_1bac25065_Const> _15957_constant = static__1bac25ce1_NewStr(_15707_name);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc5398ab_primStr, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_15957_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_15957_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc39ee6e__Public(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _160329_e, jule::Ptr<_1bc26596c_FnCallExpr>* _160344_fc) {
	if (((*((*(_160344_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_160329_e)).ptr(), (*((*((*(_160344_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16087_public = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1ad09e9b3:;
			{
				_1bc4859e4_pushErr((*(_160329_e)).ptr(), (*((*(_160344_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Public", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad09ed59:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad09edc0:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ee055_Fn>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ad09ee36:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc30be20_Enum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1ad09eead:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc30d62a_TypeEnum>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ad0a0035:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc309769_Trait>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad0a00ac:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc27a377_Field>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad0a040e:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc4b5705_TypeAlias>()))._field_Public;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad0a0486:;
			{
				_16087_public=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Public;
			}
		}
		else {
			_case_begin_1ad09ece3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Public: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1631:4"));;
			}
		}
		_match_end_1ad09ec7c:;
	};
	jule::Ptr<_1bac25065_Const> _16337_constant = static__1bac25a27_NewBool(_16087_public);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16337_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16337_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a036a__Binded(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _164129_e, jule::Ptr<_1bc26596c_FnCallExpr>* _164144_fc) {
	if (((*((*(_164144_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_164129_e)).ptr(), (*((*((*(_164144_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _16467_binded = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1ad0a95c2:;
			{
				_1bc4859e4_pushErr((*(_164129_e)).ptr(), (*((*(_164144_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Binded", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0a92a3:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad0a9319:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ee055_Fn>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1ad0a9380:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc4b5705_TypeAlias>()))._field_Binded;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad0a93e6:;
			{
				_16467_binded=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Binded;
			}
		}
		else {
			_case_begin_1ad0a923c:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Binded: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1665:4"));;
			}
		}
		_match_end_1ad0a91c6:;
	};
	jule::Ptr<_1bac25065_Const> _16677_constant = static__1bac25a27_NewBool(_16467_binded);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16677_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16677_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a0766__Exceptional(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _167534_e, jule::Ptr<_1bc26596c_FnCallExpr>* _167549_fc) {
	if (((*((*(_167549_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_167534_e)).ptr(), (*((*((*(_167549_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad0aebc1:;
			{
				goto _match_end_1ad0b1057;
			}
		}
		else {
			_case_begin_1ad0b10bd:;
			{
				_1bc4859e4_pushErr((*(_167534_e)).ptr(), (*((*(_167549_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Exceptional", 11), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1ad0b1057:;
	};
	jule::Ptr<_1bc2ee055_Fn> _16877_f = (*(_self_))._field_decl.cast_ptr<_1bc2ee055_Fn>(&__jule_any_type10);;
	jule::Ptr<_1bac25065_Const> _16887_constant = static__1bac25a27_NewBool((*(_16877_f))._field_Exceptional);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_16887_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_16887_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a0b62__Mutable(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _169630_e, jule::Ptr<_1bc26596c_FnCallExpr>* _169645_fc) {
	if (((*((*(_169645_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_169630_e)).ptr(), (*((*((*(_169645_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17017_mutable = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16) {
			_case_begin_1ad0b61e4:;
			{
				_1bc4859e4_pushErr((*(_169630_e)).ptr(), (*((*(_169645_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Mutable", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ad0b5dc5:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ec581_Param>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type14) {
			_case_begin_1ad0b5e3b:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc27a377_Field>()))._field_Mutable;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad0b5ea2:;
			{
				_17017_mutable=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Mutable;
			}
		}
		else {
			_case_begin_1ad0b5d5e:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Mutable: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1719:4"));;
			}
		}
		_match_end_1ad0b5ce8:;
	};
	jule::Ptr<_1bac25065_Const> _17217_constant = static__1bac25a27_NewBool(_17017_mutable);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17217_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17217_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a105d__Variadic(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _172931_e, jule::Ptr<_1bc26596c_FnCallExpr>* _172946_fc) {
	if (((*((*(_172946_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_172931_e)).ptr(), (*((*((*(_172946_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17347_variadic = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7) {
			_case_begin_1ad0bcb68:;
			{
				_1bc4859e4_pushErr((*(_172931_e)).ptr(), (*((*(_172946_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Variadic", 8), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ad0bc849:;
			{
				_17347_variadic=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ec581_Param>()))._field_Variadic;
			}
		}
		else {
			_case_begin_1ad0bc7d3:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Variadic: unimplemented declaration kind", 59) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1750:4"));;
			}
		}
		_match_end_1ad0bc76c:;
	};
	jule::Ptr<_1bac25065_Const> _17527_constant = static__1bac25a27_NewBool(_17347_variadic);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17527_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17527_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a1459__Reference(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _176032_e, jule::Ptr<_1bc26596c_FnCallExpr>* _176047_fc) {
	if (((*((*(_176047_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_176032_e)).ptr(), (*((*((*(_176047_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Bool _17657_ref = false;;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14) {
			_case_begin_1ad0c34ed:;
			{
				_1bc4859e4_pushErr((*(_176032_e)).ptr(), (*((*(_176047_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Reference", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad0c31ce:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Reference;
			}
		}
		else if (_match_expr.type == &__jule_any_type17) {
			_case_begin_1ad0c3245:;
			{
				_17657_ref=(*((*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ec581_Param>()))._field_Reference;
			}
		}
		else {
			_case_begin_1ad0c3168:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Reference: unimplemented declaration kind", 60) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1782:4"));;
			}
		}
		_match_end_1ad0c3102:;
	};
	jule::Ptr<_1bac25065_Const> _17847_constant = static__1bac25a27_NewBool(_17657_ref);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_17847_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_17847_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a1855__Params(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _179229_e, jule::Ptr<_1bc26596c_FnCallExpr>* _179244_fc) {
	if (((*((*(_179244_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_179229_e)).ptr(), (*((*((*(_179244_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type9 || _match_expr.type == &__jule_any_type12 || _match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17) {
			_case_begin_1ad0c7a0d:;
			{
				_1bc4859e4_pushErr((*(_179229_e)).ptr(), (*((*(_179244_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Params", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1ad0c9306:;
			{
				jule::Ptr<_1bc2ee055_Fn> _18108_f = (*(_self_))._field_decl.unsafe_cast_ptr<_1bc2ee055_Fn>();;
				jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>> _18118_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>::alloc((*(_18108_f))._field_Params.len(), (*(_18108_f))._field_Params.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc39da2d_comptimeDecl>(nullptr); __jule_collection; });;
				{
					auto expr = &((*_18108_f.alloc)._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0cc97a:;
					if (it != expr_end) {
						jule::I32 _18129_i = it - expr->begin();
						jule::Ptr<_1bc2ec581_Param> _181216_param = *it;
						{
							_18118_params[_18129_i]=jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(_181216_param, &__jule_any_type17)});
						}
						_iter_next_1ad0cc97a:;
						++it;
						_18129_i++;
						goto _iter_begin_1ad0cc97a;
					}
					_iter_end_1ad0cc97a:;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39b740_comptimeDecls>(_1bc39b740_comptimeDecls{._field_decls=_18118_params}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1ad0c8e0a:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Params: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1823:4"));;
			}
		}
		_match_end_1ad0c8d94:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a1c51__Fields(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _182729_e, jule::Ptr<_1bc26596c_FnCallExpr>* _182744_fc) {
	if (((*((*(_182744_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_182729_e)).ptr(), (*((*((*(_182744_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>> _18327_fields = static_cast<jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10) {
			_case_begin_1ad0d08d4:;
			{
				_1bc4859e4_pushErr((*(_182729_e)).ptr(), (*((*(_182744_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Fields", 6), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1ad0d11ed:;
			{
				jule::Ptr<_1bc30be20_Enum> _18458_enm = (*(_self_))._field_decl.unsafe_cast_ptr<_1bc30be20_Enum>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>::alloc((*(_18458_enm))._field_Items.len(), (*(_18458_enm))._field_Items.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc39da2d_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18458_enm.alloc)._field_Items);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0d45b9:;
					if (it != expr_end) {
						jule::I32 _18479_i = it - expr->begin();
						jule::Ptr<_1bc30b3b4_EnumItem> _184716_item = *it;
						{
							_18327_fields[_18479_i]=jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(_184716_item, &__jule_any_type16)});
						}
						_iter_next_1ad0d45b9:;
						++it;
						_18479_i++;
						goto _iter_begin_1ad0d45b9;
					}
					_iter_end_1ad0d45b9:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0d1264:;
			{
				jule::Ptr<_1bc27d26a_Struct> _18518_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1bc27d26a_Struct>();;
				_18327_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>::alloc((*(_18518_s))._field_Fields.len(), (*(_18518_s))._field_Fields.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc39da2d_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18518_s.alloc)._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0d64cd:;
					if (it != expr_end) {
						jule::I32 _18539_i = it - expr->begin();
						jule::Ptr<_1bc27a377_Field> _185316_field = *it;
						{
							_18327_fields[_18539_i]=jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(_185316_field, &__jule_any_type14)});
						}
						_iter_next_1ad0d64cd:;
						++it;
						_18539_i++;
						goto _iter_begin_1ad0d64cd;
					}
					_iter_end_1ad0d64cd:;
				};
			}
		}
		else {
			_case_begin_1c124e875:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Fields: unimplemented declaration kind", 57) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1857:4"));;
			}
		}
		_match_end_1ad0d0e67:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39b740_comptimeDecls>(_1bc39b740_comptimeDecls{._field_decls=_18327_fields}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a214c__Statics(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _186830_e, jule::Ptr<_1bc26596c_FnCallExpr>* _186845_fc) {
	if (((*((*(_186845_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_186830_e)).ptr(), (*((*((*(_186845_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>> _18737_fields = static_cast<jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type11 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1ad0da04d:;
			{
				_1bc4859e4_pushErr((*(_186830_e)).ptr(), (*((*(_186845_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Statics", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0d9c2e:;
			{
				jule::Ptr<_1bc27d26a_Struct> _18878_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1bc27d26a_Struct>();;
				_18737_fields=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>::alloc((*(_18878_s))._field_Statics.len(), (*(_18878_s))._field_Statics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc39da2d_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_18878_s.alloc)._field_Statics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0dd480:;
					if (it != expr_end) {
						jule::I32 _18899_i = it - expr->begin();
						jule::Ptr<_1bc42dc12_Var> _188916_field = *it;
						{
							_18737_fields[_18899_i]=jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(_188916_field, &__jule_any_type7)});
						}
						_iter_next_1ad0dd480:;
						++it;
						_18899_i++;
						goto _iter_begin_1ad0dd480;
					}
					_iter_end_1ad0dd480:;
				};
			}
		}
		else {
			_case_begin_1ad0d9bb8:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Statics: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1893:4"));;
			}
		}
		_match_end_1ad0d9b52:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39b740_comptimeDecls>(_1bc39b740_comptimeDecls{._field_decls=_18737_fields}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a2548__Methods(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Ptr<_1bc48551b_eval>* _190430_e, jule::Ptr<_1bc26596c_FnCallExpr>* _190445_fc) {
	if (((*((*(_190445_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_190430_e)).ptr(), (*((*((*(_190445_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>> _19097_methods = static_cast<jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>>(nullptr);;
	{
		auto &_match_expr{ (*(_self_))._field_decl };
		
		if (_match_expr.type == &__jule_any_type13 || _match_expr.type == &__jule_any_type8 || _match_expr.type == &__jule_any_type16 || _match_expr.type == &__jule_any_type14 || _match_expr.type == &__jule_any_type7 || _match_expr.type == &__jule_any_type17 || _match_expr.type == &__jule_any_type10 || _match_expr.type == &__jule_any_type12) {
			_case_begin_1ad0e2000:;
			{
				_1bc4859e4_pushErr((*(_190430_e)).ptr(), (*((*(_190445_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc39e677_declAsStr(_self_.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("Methods", 7), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_match_expr.type == &__jule_any_type11) {
			_case_begin_1ad0e1bd1:;
			{
				jule::Ptr<_1bc309769_Trait> _19228_t = (*(_self_))._field_decl.unsafe_cast_ptr<_1bc309769_Trait>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>::alloc((*(_19228_t))._field_Methods.len(), (*(_19228_t))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc39da2d_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19228_t.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0e5344:;
					if (it != expr_end) {
						jule::I32 _19249_i = it - expr->begin();
						jule::Ptr<_1bc2ee055_Fn> _192416_method = *it;
						{
							_19097_methods[_19249_i]=jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(_192416_method, &__jule_any_type10)});
						}
						_iter_next_1ad0e5344:;
						++it;
						_19249_i++;
						goto _iter_begin_1ad0e5344;
					}
					_iter_end_1ad0e5344:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1ad0e1c47:;
			{
				jule::Ptr<_1bc27d26a_Struct> _19288_s = (*(_self_))._field_decl.unsafe_cast_ptr<_1bc27d26a_Struct>();;
				_19097_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc39da2d_comptimeDecl>>::alloc((*(_19288_s))._field_Methods.len(), (*(_19288_s))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc39da2d_comptimeDecl>(nullptr); __jule_collection; });
				{
					auto expr = &((*_19288_s.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad0e7258:;
					if (it != expr_end) {
						jule::I32 _19309_i = it - expr->begin();
						jule::Ptr<_1bc2ee055_Fn> _193016_method = *it;
						{
							_19097_methods[_19309_i]=jule::new_ptr<_1bc39da2d_comptimeDecl>(_1bc39da2d_comptimeDecl{._field_decl=jule::Any(_193016_method, &__jule_any_type10)});
						}
						_iter_next_1ad0e7258:;
						++it;
						_19309_i++;
						goto _iter_begin_1ad0e7258;
					}
					_iter_end_1ad0e7258:;
				};
			}
		}
		else {
			_case_begin_1ad0e1b6a:;
			{
				__jule_panic_s(jule::Str::lit("sema: comptimeDecl.Methods: unimplemented declaration kind", 58) + jule::Str("\nlocation: std/jule/sema/comptime.jule:1934:4"));;
			}
		}
		_match_end_1ad0e1b04:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39b740_comptimeDecls>(_1bc39b740_comptimeDecls{._field_decls=_19097_methods}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data19)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a2889_subIdent(jule::Ptr<_1bc39da2d_comptimeDecl> _self_, jule::Str* _194526_ident) {
	{
		auto &_match_expr{ (*(_194526_ident)) };
		
		if (_match_expr == jule::Str::lit("Name", 4)) {
			_case_begin_1ad0e8a0c:;
			{
				jule::Ptr<_1bc302113_FnIns> _19488_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad0ea1e5, jule::Ptr<__jule_anon_1ad0ea1e5_ctx>::make(__jule_anon_1ad0ea1e5_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad0ea1e5_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19488_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Public", 6)) {
			_case_begin_1ad0e8a73:;
			{
				jule::Ptr<_1bc302113_FnIns> _19558_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad0ec170, jule::Ptr<__jule_anon_1ad0ec170_ctx>::make(__jule_anon_1ad0ec170_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad0ec170_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19558_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Binded", 6)) {
			_case_begin_1ad0e8aea:;
			{
				jule::Ptr<_1bc302113_FnIns> _19628_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad0ee0ea, jule::Ptr<__jule_anon_1ad0ee0ea_ctx>::make(__jule_anon_1ad0ee0ea_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad0ee0ea_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19628_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Exceptional", 11)) {
			_case_begin_1ad0e8b72:;
			{
				jule::Ptr<_1bc302113_FnIns> _19698_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad101075, jule::Ptr<__jule_anon_1ad101075_ctx>::make(__jule_anon_1ad101075_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad101075_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19698_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Mutable", 7)) {
			_case_begin_1ad0e8d2b:;
			{
				jule::Ptr<_1bc302113_FnIns> _19768_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad103000, jule::Ptr<__jule_anon_1ad103000_ctx>::make(__jule_anon_1ad103000_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad103000_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19768_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Variadic", 8)) {
			_case_begin_1ad0e8d92:;
			{
				jule::Ptr<_1bc302113_FnIns> _19838_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad104e7a, jule::Ptr<__jule_anon_1ad104e7a_ctx>::make(__jule_anon_1ad104e7a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad104e7a_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19838_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Reference", 9)) {
			_case_begin_1ad0e8e19:;
			{
				jule::Ptr<_1bc302113_FnIns> _19908_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad106e05, jule::Ptr<__jule_anon_1ad106e05_ctx>::make(__jule_anon_1ad106e05_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad106e05_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19908_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Params", 6)) {
			_case_begin_1ad0e8e91:;
			{
				jule::Ptr<_1bc302113_FnIns> _19978_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad108d80, jule::Ptr<__jule_anon_1ad108d80_ctx>::make(__jule_anon_1ad108d80_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad108d80_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_19978_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Fields", 6)) {
			_case_begin_1ad0e90b2:;
			{
				jule::Ptr<_1bc302113_FnIns> _20048_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad10b080, jule::Ptr<__jule_anon_1ad10b080_ctx>::make(__jule_anon_1ad10b080_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad10b080_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_20048_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Statics", 7)) {
			_case_begin_1ad0e9128:;
			{
				jule::Ptr<_1bc302113_FnIns> _20118_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad10d00a, jule::Ptr<__jule_anon_1ad10d00a_ctx>::make(__jule_anon_1ad10d00a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad10d00a_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_20118_method));;
			}
		}
		else if (_match_expr == jule::Str::lit("Methods", 7)) {
			_case_begin_1ad0e918e:;
			{
				jule::Ptr<_1bc302113_FnIns> _20188_method = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::__new_closure<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>((void*)__jule_anon_1ad10ee85, jule::Ptr<__jule_anon_1ad10ee85_ctx>::make(__jule_anon_1ad10ee85_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad10ee85_ctx_handler), ._field_reloaded=false});;
				return _1bc3a301b_buildAsComptimeMethodData(&(_20188_method));;
			}
		}
		else {
			_case_begin_1ad0e42bb:;
			{
				return nullptr;;
			}
		}
		_match_end_1ad0e8864:;
	};
}







inline jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*> _1bc3a5848_readyFn(jule::Ptr<_1bc3a5419_constraintChecker> _self_) {
	return jule::__new_closure<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*>((void*)__jule_anon_1ad11b25a, jule::Ptr<__jule_anon_1ad11b25a_ctx>::make(__jule_anon_1ad11b25a_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1ad11b25a_ctx_handler);;
}



inline jule::Bool _1bc3a5ace_readyFi(jule::Ptr<_1bc3a5419_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_fi))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_fi.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1bc418669_fnEnvironment((*_self_.alloc)._field_s, &((*_self_.alloc)._field_fi), _1bc3a5848_readyFn(_self_)));;
}



inline jule::Bool _1bc3a5d65_readySi(jule::Ptr<_1bc3a5419_constraintChecker> _self_) {
	(*(_self_))._field_genericsD=(*((*((*_self_.alloc)._field_si))._field_Decl))._field_Generics;
	(*_self_.alloc)._field_generics=(*(*(_self_))._field_si.alloc)._field_Generics;
	return ((!((*_self_.alloc)._field_uniq)) || _1bc3a5848_readyFn(_self_)(&((*_self_.alloc)._field_s), &((*_self_.alloc)._field_genericsA)));;
}



inline jule::Bool _1bc3a60eb_ready(jule::Ptr<_1bc3a5419_constraintChecker> _self_) {
	if (((*(_self_))._field_fi != nullptr)) {
		return _1bc3a5ace_readyFi(_self_);;
	};
	return _1bc3a5d65_readySi(_self_);;
}



inline jule::Bool _1bc3a6382_check(jule::Ptr<_1bc3a5419_constraintChecker> _self_) {
	if ((!(_1bc3a60eb_ready(_self_)))) {
		return false;;
	};
	_julec_label_1ad12bda3:;
	{
		auto expr = &((*(_self_))._field_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad12c359:;
		if (it != expr_end) {
			jule::I32 _1208_i = it - expr->begin();
			jule::Ptr<_1bc4b4b11_InsGeneric> _12015_g = *it;
			{
				if (((*(_12015_g))._field_Constraint == nullptr)) {
					goto _iter_next_1ad12c359;
				};
				{
					auto expr = &((*(_12015_g))._field_Constraint);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad12d602:;
					if (it != expr_end) {
						jule::Ptr<_1bc4b64e7_Type> _12416_c2 = *it;
						{
							jule::Ptr<_1bc4be610_Prim> _1259_prim = _1bc4b8b9d_Prim(_12416_c2.ptr());;
							if (((_1259_prim != nullptr) && _1bc4c026a_IsConstraint(_1259_prim))) {
								if (_1bc3a6ad0_matchConstraint(&((*_1259_prim.alloc)._field_Kind), &((*(_12015_g))._field_Type))) {
									goto _iter_next_1ad12c359;
								};
								goto _iter_next_1ad12d602;
							};
							if (_1bc4b6c34_Equal(_12416_c2, (*(_12015_g))._field_Type)) {
								goto _iter_next_1ad12c359;
							};
						}
						_iter_next_1ad12d602:;
						++it;
						goto _iter_begin_1ad12d602;
					}
					_iter_end_1ad12d602:;
				};
				_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_self_.alloc)._field_et, static_cast<jule::Str>(jule::Str::lit("type @ is not matched with @'s constraint\n       constraint: @", 62)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*_12015_g.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*((*_self_.alloc)._field_genericsD[_1208_i]))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1bc3a6717_toStrConstraints(_12015_g), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
			_iter_next_1ad12c359:;
			++it;
			_1208_i++;
			goto _iter_begin_1ad12c359;
		}
		_iter_end_1ad12c359:;
	};
	return true;;
}







inline jule::Bool _1bc3a7b14_IsTraitImpl(_1bc3a7718_Impl* _self_) {
	return ((*(_self_))._field_Base != nullptr);;
}



inline jule::Bool _1bc3a7d9a_IsStructImpl(_1bc3a7718_Impl* _self_) {
	return ((*(_self_))._field_Base == nullptr);;
}












inline jule::Bool _1bc3ac245_If_eq(_1bc3ac245_If *_self_, _1bc3ac245_If _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Scope == _self_->_field_Scope);
}






inline jule::Bool _1bc3ac542_Else_eq(_1bc3ac542_Else *_self_, _1bc3ac542_Else _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}










inline jule::Bool _1bc3acc5c_InfIter_eq(_1bc3acc5c_InfIter *_self_, _1bc3acc5c_InfIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope);
}






inline jule::Bool _1bc3ad213_WhileIter_eq(_1bc3ad213_WhileIter *_self_, _1bc3ad213_WhileIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Next == _self_->_field_Next);
}

inline jule::Bool _1bc3ad5a9_IsWhileNext(_1bc3ad213_WhileIter* _self_) {
	return ((*(_self_))._field_Next != nullptr);;
}








inline jule::Bool _1bc3adb5e_RangeIter_eq(_1bc3adb5e_RangeIter *_self_, _1bc3adb5e_RangeIter _other_) {
	return 
		(_self_->_field_Scope == _other_._field_Scope) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_KeyA == _self_->_field_KeyA) &&
		(_self_->_field_KeyB == _self_->_field_KeyB);
}






inline jule::Bool _1bc3adee4_ContSt_eq(_1bc3adee4_ContSt *_self_, _1bc3adee4_ContSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It);
}






inline jule::Bool _1bc3ae3bd_BreakSt_eq(_1bc3ae3bd_BreakSt *_self_, _1bc3ae3bd_BreakSt _other_) {
	return 
		(_self_->_field_It == _other_._field_It) &&
		(_self_->_field_Mtch == _self_->_field_Mtch);
}






inline jule::Bool _1bc3ae874_Label_eq(_1bc3ae874_Label *_self_, _1bc3ae874_Label _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1bc3aeed4_GotoSt_eq(_1bc3aeed4_GotoSt *_self_, _1bc3aeed4_GotoSt _other_) {
	return 
		(_self_->_field_Ident == _other_._field_Ident) &&
		(_self_->_field_Token == _self_->_field_Token) &&
		(_self_->_field_Label == _self_->_field_Label) &&
		(_self_->_field_Scope == _self_->_field_Scope) &&
		(_self_->_field_Index == _self_->_field_Index);
}






inline jule::Bool _1bc3b03ad_Postfix_eq(_1bc3b03ad_Postfix *_self_, _1bc3b03ad_Postfix _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Op == _self_->_field_Op);
}






inline jule::Bool _1bc3b0864_Assign_eq(_1bc3b0864_Assign *_self_, _1bc3b0864_Assign _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_Op == _self_->_field_Op);
}


















inline jule::Bool _1bc3b2778_FallSt_eq(_1bc3b2778_FallSt *_self_, _1bc3b2778_FallSt _other_) {
	return 
		(_self_->_field_DestCase == _other_._field_DestCase);
}






inline jule::Bool _1bc3b2b1e_RetSt_eq(_1bc3b2b1e_RetSt *_self_, _1bc3b2b1e_RetSt _other_) {
	return 
		(_self_->_field_Func == _other_._field_Func) &&
		(_self_->_field_Expr == _self_->_field_Expr);
}






inline jule::Bool _1bc3b30c5_scopeLabel_eq(_1bc3b30c5_scopeLabel *_self_, _1bc3b30c5_scopeLabel _other_) {
	return 
		(_self_->_field_token == _other_._field_token) &&
		(_self_->_field_node == _self_->_field_node) &&
		(_self_->_field_used == _self_->_field_used);
}






inline jule::Bool _1bc3b349e_result_eq(_1bc3b349e_result *_self_, _1bc3b349e_result _other_) {
	return 
		(_self_->_field_func == _other_._field_func) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1bc3b448e_scopeChecker_eq(_1bc3b448e_scopeChecker *_self_, _1bc3b448e_scopeChecker _other_) {
	return 
		(_self_->_field_calledFrom == _other_._field_calledFrom) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_parent == _self_->_field_parent) &&
		(_self_->_field_childIndex == _self_->_field_childIndex) &&
		(_self_->_field_table == _self_->_field_table) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_tree == _self_->_field_tree) &&
		(_self_->_field_result == _self_->_field_result) &&
		(_self_->_field_it == _self_->_field_it) &&
		(_self_->_field_cse == _self_->_field_cse) &&
		(_self_->_field_captured == _self_->_field_captured) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_i == _self_->_field_i);
}

inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3b4967_SelectPackage(_1bc3b448e_scopeChecker* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _35429_selector) {
	return _1bc40a4c4_SelectPackage((*(_self_))._field_s.ptr(), _35429_selector);;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc3b4d63_FindVar(_1bc3b448e_scopeChecker* _self_, jule::Str _36523_ident, jule::Bool _36535_binded) {
	if ((!(_36535_binded))) {
		jule::Ptr<_1bc42dc12_Var> _3678_v = _1bc3b81c9_findVar(_self_, _36523_ident);;
		if ((_3678_v != nullptr)) {
			return _3678_v;;
		};
	};
	return _1bc40a8c0_FindVar((*(_self_))._field_s.ptr(), _36523_ident, _36535_binded);;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3b525e_FindTypeAlias(_1bc3b448e_scopeChecker* _self_, jule::Str _38229_ident, jule::Bool _38241_binded) {
	;
	jule::Ptr<_1bc4b5705_TypeAlias> _3857_ta = _1bc30835b_findTypeAlias((*(_self_))._field_table.ptr(), &(_38229_ident), _38241_binded, true);;
	if ((_3857_ta != nullptr)) {
		return _3857_ta;;
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _3907_parent = (*(_self_))._field_parent;;
	while ((_3907_parent != nullptr)) {
		{
			_3857_ta=_1bc30835b_findTypeAlias((*(_3907_parent))._field_table, &(_38229_ident), _38241_binded, true);
			if ((_3857_ta != nullptr)) {
				return _3857_ta;;
			};
			_3907_parent=(*(_3907_parent))._field_parent;
		}
	_iter_next_1ad17b386:;
	}
	_iter_end_1ad17b386:;;
	return _1bc40acbb_FindTypeAlias((*(_self_))._field_s.ptr(), _38229_ident, _38241_binded);;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc3b565a_FindStruct(_1bc3b448e_scopeChecker* _self_, jule::Str _40726_ident, jule::Bool _40738_binded) {
	return _1bc40b1b7_FindStruct((*(_self_))._field_s.ptr(), _40726_ident, _40738_binded);;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc3b5a56_FindFn(_1bc3b448e_scopeChecker* _self_, jule::Str _41622_ident, jule::Bool _41634_binded) {
	return _1bc40b5b3_FindFn((*(_self_))._field_s.ptr(), _41622_ident, _41634_binded);;
}



inline jule::Ptr<_1bc309769_Trait> _1bc3b5d97_FindTrait(_1bc3b448e_scopeChecker* _self_, jule::Str _42525_ident) {
	return _1bc40b904_FindTrait((*(_self_))._field_s.ptr(), _42525_ident);;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc3b61d8_FindEnum(_1bc3b448e_scopeChecker* _self_, jule::Str _43424_ident) {
	return _1bc40bc45_FindEnum((*(_self_))._field_s.ptr(), _43424_ident);;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3b6529_FindTypeEnum(_1bc3b448e_scopeChecker* _self_, jule::Str _44328_ident) {
	return _1bc40c086_FindTypeEnum((*(_self_))._field_s.ptr(), _44328_ident);;
}



inline jule::Bool _1bc3b687b_isUnsafe(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	jule::Ptr<_1bc3b448e_scopeChecker> _4517_scope = _self_;;
	_julec_label_1ad181655:;
	if ((*((*(_4517_scope))._field_scope))._field_Unsafety) {
		return true;;
	};
	if (((*(_4517_scope))._field_parent != nullptr)) {
		_4517_scope=(*_4517_scope.alloc)._field_parent;
		goto _julec_label_1ad181655;
	};
	return false;;
}



inline jule::Bool _1bc3b6b12_isRoot(_1bc3b448e_scopeChecker* _self_) {
	return (((*(_self_))._field_parent == nullptr) || ((*(_self_))._field_owner != nullptr));;
}



inline void _1bc3b6d10_stop(_1bc3b448e_scopeChecker* _self_) {
	(*(_self_))._field_i=-1LL;
}



inline jule::Bool _1bc3b7096_stopped(_1bc3b448e_scopeChecker* _self_) {
	return ((*(_self_))._field_i == -1LL);;
}



inline jule::Bool _1bc3b732c_isDeferred(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	jule::Ptr<_1bc3b448e_scopeChecker> _4847_scope = _self_;;
	_julec_label_1ad184229:;
	if ((*((*(_4847_scope))._field_scope))._field_Deferred) {
		return true;;
	};
	if (((*(_4847_scope))._field_parent != nullptr)) {
		_4847_scope=(*_4847_scope.alloc)._field_parent;
		goto _julec_label_1ad184229;
	};
	return false;;
}



inline void _1bc3b75d5_pushCaptured(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc42dc12_Var>* _50534_v) {
	jule::Ptr<_1bc3b448e_scopeChecker> _5067_sc = _self_;;
	for (;;) {
		{
			if (((*(_5067_sc))._field_captured != nullptr)) {
				{
					auto expr = &((*(*(_5067_sc))._field_captured.alloc));
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad186858:;
					if (it != expr_end) {
						jule::Ptr<_1bc42dc12_Var> _50912_cv = *it;
						{
							if ((_50912_cv == (*(_50534_v)))) {
								goto _julec_label_1ad18779e;
							};
						}
						_iter_next_1ad186858:;
						++it;
						goto _iter_begin_1ad186858;
					}
					_iter_end_1ad186858:;
				};
				(*(*(_5067_sc))._field_captured.alloc)=jule::append((*(*(_5067_sc))._field_captured.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_50534_v)); __jule_collection; }));
				_julec_label_1ad18779e:;
			};
			if (((*(_5067_sc))._field_parent == nullptr)) {
				goto _iter_end_1ad185aee;
			};
			_5067_sc=(*(_5067_sc))._field_parent;
			if ((!(_1bc4b3a99_isVarCaptured(_5067_sc, _5067_sc, (*(_50534_v)))))) {
				goto _iter_end_1ad185aee;
			};
		}
	_iter_next_1ad185aee:;
	}
	_iter_end_1ad185aee:;;
}



inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3b786b_getRoot(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	jule::Ptr<_1bc3b448e_scopeChecker> _5307_root = _self_;;
	while ((((*(_5307_root))._field_parent != nullptr) && ((*_5307_root.alloc)._field_owner == nullptr))) {
		{
			_5307_root=(*_5307_root.alloc)._field_parent;
		}
	_iter_next_1ad18887c:;
	}
	_iter_end_1ad18887c:;;
	return _5307_root;;
}



inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3b7b02_getHardRoot(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	jule::Ptr<_1bc3b448e_scopeChecker> _5407_root = _self_;;
	while (((*(_5407_root))._field_parent != nullptr)) {
		{
			_5407_root=(*_5407_root.alloc)._field_parent;
		}
	_iter_next_1ad189b14:;
	}
	_iter_end_1ad189b14:;;
	return _5407_root;;
}



inline jule::Ptr<_1bc3cab26_ReferenceStack> _1bc3b7d88_getOwnerRefers(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	return (*((*(_1bc3b7b02_getHardRoot(_self_)))._field_owner))._field_Refers;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc3b81c9_findVar(_1bc3b448e_scopeChecker* _self_, jule::Str _55223_ident) {
	;
	;
	jule::Ptr<_1bc42dc12_Var> _5557_v = _1bc307da5_findVar((*(_self_))._field_table.ptr(), &(_55223_ident), false, true);;
	if ((_5557_v != nullptr)) {
		return _5557_v;;
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _5597_parent = (*(_self_))._field_parent;;
	while ((_5597_parent != nullptr)) {
		{
			_5557_v=_1bc307da5_findVar((*(_5597_parent))._field_table, &(_55223_ident), false, true);
			if ((_5557_v != nullptr)) {
				return _5557_v;;
			};
			_5597_parent=(*(_5597_parent))._field_parent;
		}
	_iter_next_1ad18c694:;
	}
	_iter_end_1ad18c694:;;
	return nullptr;;
}



inline jule::Ptr<_1bc3ae874_Label> _1bc3b851a_findLabel(_1bc3b448e_scopeChecker* _self_, jule::Str* _57326_ident) {
	{
		auto expr = &((*((*(_self_))._field_scope))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad18e6da:;
		if (it != expr_end) {
			jule::Any _57415_st = *it;
			{
				{
					auto &_match_expr{ _57415_st };
					
					if (_match_expr.type == &__jule_any_type19) {
						_case_begin_1ad190059:;
						{
							jule::Ptr<_1bc3ae874_Label> _5779_label = _57415_st.unsafe_cast_ptr<_1bc3ae874_Label>();;
							if (((*(_5779_label))._field_Ident == (*(_57326_ident)))) {
								return _5779_label;;
							};
						}
					}
					_match_end_1ad18eee3:;
				};
			}
			_iter_next_1ad18e6da:;
			++it;
			goto _iter_begin_1ad18e6da;
		}
		_iter_end_1ad18e6da:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc3b30c5_scopeLabel> _1bc3b885b_findLabelScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Str* _58932_ident) {
	jule::Ptr<_1bc3b30c5_scopeLabel> _5907_label = _1bc3b8b9c_findLabelAll(_self_.ptr(), _58932_ident);;
	if (((_5907_label != nullptr) && ((*((*_5907_label.alloc)._field_node))._field_Scope == (*_self_.alloc)._field_scope))) {
		return _5907_label;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc3b30c5_scopeLabel> _1bc3b8b9c_findLabelAll(_1bc3b448e_scopeChecker* _self_, jule::Str* _60029_ident) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad195405:;
		if (it != expr_end) {
			jule::Ptr<_1bc3b30c5_scopeLabel> _60115_lbl = *it;
			{
				if (((*((*(_60115_lbl))._field_node))._field_Ident == (*(_60029_ident)))) {
					return _60115_lbl;;
				};
			}
			_iter_next_1ad195405:;
			++it;
			goto _iter_begin_1ad195405;
		}
		_iter_end_1ad195405:;
	};
	return nullptr;;
}



inline jule::Bool _1bc3b9098_isDuplicatedIdent(_1bc3b448e_scopeChecker* _self_, jule::Uintptr _61233_itself, jule::Str* _61251_ident) {
	jule::Ptr<_1bc42dc12_Var> _6133_v = _1bc3b4d63_FindVar(_self_, (*(_61251_ident)), false);;
	if (((_6133_v != nullptr) && (static_cast<jule::Uintptr>(_6133_v) != _61233_itself))) {
		if (((*_6133_v.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6133_v.alloc)._field_Scope == (*(_self_))._field_scope) || (!(_1bc40c493_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	jule::Ptr<_1bc4b5705_TypeAlias> _6213_ta = _1bc3b525e_FindTypeAlias(_self_, (*(_61251_ident)), false);;
	if (((_6213_ta != nullptr) && (static_cast<jule::Uintptr>(_6213_ta) != _61233_itself))) {
		if (((*_6213_ta.alloc)._field_Scope == nullptr)) {
			return false;;
		};
		return (((*_6213_ta.alloc)._field_Scope == (*(_self_))._field_tree) || (!(_1bc40c493_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))));;
	};
	return false;;
}



inline void _1bc3b9351_checkVarDecl(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc270856_VarDecl> _63233_decl) {
	jule::Ptr<_1bc42dc12_Var> _6337_v = _1bc3d0ed3_buildVar(_63233_decl);;
	(*(_6337_v))._field_Scope=(*(_self_))._field_scope;
	__JULE_DEFER({
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6337_v; __jule_collection; }));
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_6337_v, &__jule_any_type7); __jule_collection; }));
	});;
	if (_1bc3b9098_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>(_6337_v), &((*_6337_v.alloc)._field_Ident))) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_6337_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_6337_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1bc3b6d10_stop(_self_);
		return;;
	};
	_1bc421353_checkVarDecl((*_self_.alloc)._field_s, &(_6337_v), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));
	if (((!(_1bc42e3a5_IsTypeInferred(_6337_v))) && (((*_6337_v.alloc)._field_TypeSym == nullptr) || ((*((*_6337_v.alloc)._field_TypeSym))._field_Type == nullptr)))) {
		return;;
	};
	_1bc424ae8_evalVarValue((*(_self_))._field_s, &(_6337_v), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));
	if (((!(_1bc42e11e_IsInitialized(_6337_v))) || ((*((*_6337_v.alloc)._field_Value))._field_Data == nullptr))) {
		return;;
	};
	_1bc3c05bb_removeInteriorMutRisk(_self_, &((*((*_6337_v.alloc)._field_Value))._field_Data));
	_1bc424785_checkVarValue((*(_self_))._field_s, &(_6337_v));
}



inline void _1bc3b9609_checkTypeAlias(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _66336_ta) {
	if (_1bc3b9098_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_66336_ta))), &((*((*(_66336_ta))))._field_Ident))) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_66336_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_66336_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		_1bc3b6d10_stop(_self_);
		return;;
	};
	_1bc41a3d5_checkTypeAliasDecl((*(_self_))._field_s, _66336_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));
	(*((*_self_.alloc)._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_66336_ta)); __jule_collection; }));
	if (((*((*((*(_66336_ta))))._field_TypeSym))._field_Type == nullptr)) {
		_1bc3b6d10_stop(_self_);
	};
}



inline void _1bc3b98b2_checkTypeAliasDecl(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc274508_TypeAliasDecl> _67939_decl) {
	jule::Ptr<_1bc4b5705_TypeAlias> _6807_ta = _1bc3ccab2_buildTypeAlias(_67939_decl);;
	_1bc3b9609_checkTypeAlias(_self_, &(_6807_ta));
}



inline jule::Ptr<_1bc3abd27_Scope> _1bc3b9b48_getChild(_1bc3b448e_scopeChecker* _self_) {
	return jule::new_ptr<_1bc3abd27_Scope>(_1bc3abd27_Scope{._field_Parent=(*(_self_))._field_scope, ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<jule::Any>(nullptr), ._field_ChildIndex=0, ._field_StmtIndex=0});;
}



inline void _1bc3ba066_checkChildSsc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _69035_tree, jule::Ptr<_1bc3abd27_Scope>* _69063_s, jule::Ptr<_1bc3b448e_scopeChecker>* _69079_ssc) {
	(*((*(_69063_s))))._field_StmtIndex=(*(_self_))._field_i;
	(*((*(_69063_s))))._field_ChildIndex=(*((*(_69079_ssc))))._field_childIndex;
	(*((*(_69079_ssc))))._field_parent=_self_;
	_1bc3c6616_check((*(_69079_ssc)), _69035_tree, _69063_s);
}



inline jule::Ptr<_1bc3abd27_Scope> _1bc3ba462_checkChildSc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _69734_tree, jule::Ptr<_1bc3b448e_scopeChecker>* _69762_ssc) {
	jule::Ptr<_1bc3abd27_Scope> _6987_s = _1bc3b9b48_getChild(_self_.ptr());;
	_1bc3ba066_checkChildSsc(_self_, _69734_tree, &(_6987_s), _69762_ssc);
	return _6987_s;;
}



inline jule::Ptr<_1bc3abd27_Scope> _1bc3ba7a3_checkChild(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _70332_tree) {
	jule::Ptr<_1bc3b448e_scopeChecker> _7047_ssc = _1bc3c689c_newChildChecker(_self_);;
	return _1bc3ba462_checkChildSc(_self_, _70332_tree, &(_7047_ssc));;
}



inline void _1bc3baa5b_checkAnonScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree> _70835_tree) {
	jule::Ptr<_1bc3abd27_Scope> _7097_s = _1bc3ba7a3_checkChild(_self_, &(_70835_tree));;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7097_s, &__jule_any_type20); __jule_collection; }));
}



inline void _1bc3badbe_processErrorCall(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel>* _71338_m, jule::Ptr<_1bc247014_Token> _71369_err) {
	if (_1bc3b732c_isDeferred(_self_)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), _71369_err, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports error calls", 44)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _7187_root = _1bc3b786b_getRoot(_self_);;
	if ((!((*((*((*(_7187_root))._field_owner))._field_Decl))._field_Exceptional))) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), _71369_err, static_cast<jule::Str>(jule::Str::lit("error call can only useable for exceptional functions", 53)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can declare an exceptional function with \"!\" operator", 57)), jule::Slice<jule::Any>());
	};
	(*((*(_71338_m))))._field_Func=(*(_7187_root))._field_owner;
}



inline void _1bc3bb177_checkExpr(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc261c43_Expr> _72630_expr) {
	jule::Ptr<_1bc48551b_eval> _7277_eval = _1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	(*(_7277_eval))._field_target._field_ignored=true;
	jule::Ptr<_1bc48354c_Data> _7297_d = _1bc4a4309_evalExpr(_7277_eval, _72630_expr);;
	if (((_7297_d == nullptr) || ((*(_7297_d))._field_Model == nullptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_7297_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c0c753ce:;
			{
				jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _7388_m = (*(_7297_d))._field_Model.unsafe_cast_ptr<_1bc2e9d31_BuiltinErrorCallExprModel>();;
				_1bc3badbe_processErrorCall(_self_, &(_7388_m), (*(_72630_expr))._field_Token);
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type23 || _match_expr.type == &__jule_any_type24 || _match_expr.type == &__jule_any_type25 || _match_expr.type == &__jule_any_type26 || _match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type28 || _match_expr.type == &__jule_any_type29 || _match_expr.type == &__jule_any_type30 || _match_expr.type == &__jule_any_type31) {
			_case_begin_1c0c759ea:;
			{
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7297_d, &__jule_any_type22); __jule_collection; }));
			}
		}
		else {
			_case_begin_1c0c75984:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*(_72630_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c0c7591d:;
	};
}



inline jule::Ptr<_1bc3ac245_If> _1bc3bb4b8_checkIf(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc27343b_If> _75628_i) {
	jule::Ptr<_1bc3abd27_Scope> _7577_s = _1bc3ba7a3_checkChild(_self_, &((*(_75628_i))._field_Scope));;
	jule::Ptr<_1bc48354c_Data> _7597_d = _1bc4a4309_evalExpr(_1bc414cc5_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)), (*_75628_i.alloc)._field_Expr);;
	if ((_7597_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc4be610_Prim> _7647_prim = _1bc4b8b9d_Prim((*(_7597_d))._field_Type.ptr());;
	if (((_7647_prim == nullptr) || (!(_1bc4c2844_IsBool(_7647_prim.ptr()))))) {
		_1bc40ce00_pushErr((*(_self_))._field_s, (*((*_75628_i.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("if conditions must be have boolean expression", 45)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc3ac245_If>(_1bc3ac245_If{._field_Expr=(*_7597_d.alloc)._field_Model, ._field_Scope=_7577_s});;
}



inline jule::Ptr<_1bc3ac542_Else> _1bc3bb809_checkElse(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc273815_Else> _77630_e) {
	return jule::new_ptr<_1bc3ac542_Else>(_1bc3ac542_Else{._field_Scope=_1bc3ba7a3_checkChild(_self_, &((*(_77630_e))._field_Scope))});;
}



inline void _1bc3bbab2_checkConditional(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc273cbb_Conditional> _78237_conditional) {
	jule::Ptr<_1bc3ac960_Conditional> _7837_c = jule::new_ptr<_1bc3ac960_Conditional>(_1bc3ac960_Conditional{._field_Elifs=jule::Slice<jule::Ptr<_1bc3ac245_If>>(nullptr), ._field_Default=jule::Ptr<_1bc3ac542_Else>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_7837_c, &__jule_any_type32); __jule_collection; }));
	(*_7837_c.alloc)._field_Elifs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3ac245_If>>::alloc(0LL, ((*(_78237_conditional))._field_Tail.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc3ac245_If>(nullptr); __jule_collection; });
	(*_7837_c.alloc)._field_Elifs=jule::append((*_7837_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3ac245_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc3bb4b8_checkIf(_self_, (*_78237_conditional.alloc)._field_Head); __jule_collection; }));
	{
		auto expr = &((*_78237_conditional.alloc)._field_Tail);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd554c16:;
		if (it != expr_end) {
			jule::Ptr<_1bc27343b_If> _78915_elif = *it;
			{
				(*_7837_c.alloc)._field_Elifs=jule::append((*_7837_c.alloc)._field_Elifs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3ac245_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc3bb4b8_checkIf(_self_, _78915_elif); __jule_collection; }));
			}
			_iter_next_1bd554c16:;
			++it;
			goto _iter_begin_1bd554c16;
		}
		_iter_end_1bd554c16:;
	};
	if (((*_78237_conditional.alloc)._field_Default != nullptr)) {
		(*_7837_c.alloc)._field_Default=_1bc3bb809_checkElse(_self_, (*_78237_conditional.alloc)._field_Default);
	};
}



inline void _1bc3bc08a_checkIterScopeSsc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _79834_it, jule::Ptr<_1bc26ca0c_ScopeTree> _79851_tree, jule::Ptr<_1bc3abd27_Scope>* _79879_s, jule::Ptr<_1bc3b448e_scopeChecker> _79894_ssc) {
	(*(_79894_ssc))._field_it=_79834_it;
	_1bc3ba066_checkChildSsc(_self_, &(_79851_tree), _79879_s, &(_79894_ssc));
}



inline jule::Ptr<_1bc3abd27_Scope> _1bc3bc541_checkIterScopeSc(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _80333_it, jule::Ptr<_1bc26ca0c_ScopeTree> _80350_tree, jule::Ptr<_1bc3b448e_scopeChecker> _80377_ssc) {
	jule::Ptr<_1bc3abd27_Scope> _8047_scope = _1bc3b9b48_getChild(_self_.ptr());;
	_1bc3bc08a_checkIterScopeSsc(_self_, _80333_it, _80350_tree, &(_8047_scope), _80377_ssc);
	return _8047_scope;;
}



inline jule::Ptr<_1bc3abd27_Scope> _1bc3bc93c_checkIterScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _80931_it, jule::Ptr<_1bc26ca0c_ScopeTree>* _80949_tree) {
	jule::Ptr<_1bc3b448e_scopeChecker> _8107_ssc = _1bc3c689c_newChildChecker(_self_);;
	return _1bc3bc541_checkIterScopeSc(_self_, _80931_it, (*(_80949_tree)), _8107_ssc);;
}



inline void _1bc3bcbe5_checkInfIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _81434_it) {
	jule::Ptr<_1bc3acc5c_InfIter> _8157_kind = jule::new_ptr<_1bc3acc5c_InfIter>(_1bc3acc5c_InfIter{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8157_kind, &__jule_any_type33); __jule_collection; }));
	(*_8157_kind.alloc)._field_Scope=_1bc3bc93c_checkIterScope(_self_, static_cast<jule::Uintptr>(_8157_kind), &((*((*(_81434_it))))._field_Scope));
}



inline void _1bc3bce9d_checkWhileIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _82036_it) {
	jule::Ptr<_1bc271cca_WhileKind> _8217_wh = (*((*(_82036_it))))._field_Kind.cast_ptr<_1bc271cca_WhileKind>(&__jule_any_type34);;
	if ((((*(_8217_wh))._field_Expr == nullptr) && ((*_8217_wh.alloc)._field_Next == nullptr))) {
		_1bc3bcbe5_checkInfIter(_self_, _82036_it);
		return;;
	};
	jule::Ptr<_1bc3ad213_WhileIter> _8277_kind = jule::new_ptr<_1bc3ad213_WhileIter>(_1bc3ad213_WhileIter{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Expr=jule::Any(nullptr), ._field_Next=jule::Any(nullptr)});;
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8277_kind, &__jule_any_type35); __jule_collection; }));
	(*_8277_kind.alloc)._field_Scope=_1bc3bc93c_checkIterScope(_self_, static_cast<jule::Uintptr>(_8277_kind), &((*((*(_82036_it))))._field_Scope));
	if (((*(_8217_wh))._field_Expr != nullptr)) {
		jule::Ptr<_1bc48354c_Data> _8328_d = _1bc4a4309_evalExpr(_1bc414cc5_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)), (*_8217_wh.alloc)._field_Expr);;
		if ((_8328_d == nullptr)) {
			return;;
		};
		jule::Ptr<_1bc4be610_Prim> _8374_prim = _1bc4b8b9d_Prim((*(_8328_d))._field_Type.ptr());;
		if ((_8374_prim == nullptr)) {
			_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_82036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		if ((!(_1bc4c2844_IsBool(_8374_prim.ptr())))) {
			_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_82036_it))))._field_Token, static_cast<jule::Str>(jule::Str::lit("while iterations must be have boolean expression", 48)), jule::Slice<jule::Any>());
			return;;
		};
		(*_8277_kind.alloc)._field_Expr=(*_8328_d.alloc)._field_Model;
	};
	if (_1bc272171_IsWhileNext(_8217_wh.ptr())) {
		if ((!(_1bc3ab442_isValidAstStForNextSt(&((*_8217_wh.alloc)._field_Next))))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_8217_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			return;;
		};
		jule::I32 _8574_n = (*(*(_self_))._field_scope.alloc)._field_Stmts.len();;
		_1bc3c524c_checkNode(_self_, &((*_8217_wh.alloc)._field_Next));
		if ((_8574_n < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) {
			jule::Any _8609_st = (*((*(_self_))._field_scope))._field_Stmts[_8574_n];;
			((*((*(_self_))._field_scope))._field_Stmts).mut_slice(0LL, _8574_n);;
			if ((!(_1bc3ab684_isValidStForNextSt(&(_8609_st))))) {
				_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_8217_wh.alloc)._field_NextToken, static_cast<jule::Str>(jule::Str::lit("invalid statement for while-next", 32)), jule::Slice<jule::Any>());
			};
			(*_8277_kind.alloc)._field_Next=_8609_st;
		};
	};
}



inline void _1bc3bd3bb_checkComptimeRangeIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _87044_it, jule::Ptr<_1bc3adb5e_RangeIter>* _87065_kind, jule::Ptr<_1bc48354c_Data>* _87088_d) {
	if (((*((*(_87065_kind))))._field_KeyA != nullptr)) {
		if (((!(_1bc40c493_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1bc3b9098_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Ident)))) {
			_1bc40ce00_pushErr((*(_self_))._field_s, (*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	if (((*((*(_87065_kind))))._field_KeyB != nullptr)) {
		if (((!(_1bc40c493_isFlag((*(_self_))._field_s.ptr(), static_cast<jule::I32>(1LL)))) && _1bc3b9098_isDuplicatedIdent(_self_, 0LLU, &((*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Ident)))) {
			_1bc40ce00_pushErr((*(_self_))._field_s, (*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
	};
	jule::Ptr<_1bc2726d2_RangeKind> _8847_rang = (*((*(_87044_it))))._field_Kind.cast_ptr<_1bc2726d2_RangeKind>(&__jule_any_type36);;
	_1bc3c6e1e_makeComptimeRange(_87088_d);
	if ((*((*(_87088_d))))._field_Decl) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_8847_rang))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not supports comptime iterations", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_87088_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1bc47cb62_rangeChecker _8917_rc = _1bc47cb62_rangeChecker{._field_sc=_self_, ._field_rang=_8847_rang, ._field_Kind=(*(_87065_kind)), ._field_d=(*(_87088_d))};;
	jule::Bool _8973_ok = _1bc47eba8_check(&_8917_rc);;
	if ((!(_8973_ok))) {
		return;;
	};
	jule::Ptr<_1bc37e437_comptimeRange> _9027_comptime = _1bc4bc047_comptimeRange((*((*(_87088_d))))._field_Type.ptr());;
	((_1bc37e217_comptimeRangeKindMptrData*)(*(_9027_comptime))._field_kind.safe_type())->_1bc37d90e_ready((*(_9027_comptime))._field_kind.data, &((*((*(_87065_kind))))._field_KeyA), &((*((*(_87065_kind))))._field_KeyB));
	jule::I32 _9047_i = 0LL;;
	jule::I32 _9053_errors = (*((*(_self_))._field_s))._field_errors.len();;
	for (; (_9047_i < ((_1bc37e217_comptimeRangeKindMptrData*)(*_9027_comptime.alloc)._field_kind.safe_type())->_1bc37e0b3_len((*_9027_comptime.alloc)._field_kind.data)); (_9047_i)++) {
		{
			jule::Ptr<_1bc3b448e_scopeChecker> _9078_ssc = _1bc3c689c_newChildChecker(_self_);;
			jule::Ptr<_1bc3abd27_Scope> _9088_scope = _1bc3b9b48_getChild(_self_);;
			if (((*((*(_87065_kind))))._field_KeyA != nullptr)) {
				(*(*((*(_87065_kind))))._field_KeyA.alloc)._field_Scope=_9088_scope;
				(*((*(_9078_ssc))._field_table))._field_Vars=jule::append((*(*(_9078_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87065_kind))))._field_KeyA; __jule_collection; }));
			};
			if (((*((*(_87065_kind))))._field_KeyB != nullptr)) {
				(*(*((*(_87065_kind))))._field_KeyB.alloc)._field_Scope=_9088_scope;
				(*((*(_9078_ssc))._field_table))._field_Vars=jule::append((*(*(_9078_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_87065_kind))))._field_KeyB; __jule_collection; }));
			};
			((_1bc37e217_comptimeRangeKindMptrData*)(*_9027_comptime.alloc)._field_kind.safe_type())->_1bc37dd2c_step((*_9027_comptime.alloc)._field_kind.data, _9047_i, &((*((*(_87065_kind))))._field_KeyA), &((*((*(_87065_kind))))._field_KeyB));
			_1bc3ba066_checkChildSsc(_self_, &((*((*(_87044_it))))._field_Scope), &(_9088_scope), &(_9078_ssc));
			if ((_9053_errors != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
				goto _iter_end_1bd57ca52;
			};
			(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9088_scope, &__jule_any_type20); __jule_collection; }));
		}
	_iter_next_1bd57ca52:;
	}
	_iter_end_1bd57ca52:;;
}



inline void _1bc3bd674_checkRangeIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter>* _92736_it) {
	jule::Ptr<_1bc2726d2_RangeKind> _9287_rang = (*((*(_92736_it))))._field_Kind.cast_ptr<_1bc2726d2_RangeKind>(&__jule_any_type36);;
	jule::Ptr<_1bc48551b_eval> _9347_eval = _1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	(*(_9347_eval))._field_target._field_mutable=true;
	jule::Ptr<_1bc48354c_Data> _9377_d = _1bc4a3eb8_evalExpr1(_9347_eval, (*(_9287_rang))._field_Expr);;
	if ((_9377_d == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc3adb5e_RangeIter> _9427_kind = jule::new_ptr<_1bc3adb5e_RangeIter>(_1bc3adb5e_RangeIter{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Expr=_9377_d, ._field_KeyA=jule::Ptr<_1bc42dc12_Var>(nullptr), ._field_KeyB=jule::Ptr<_1bc42dc12_Var>(nullptr)});;
	if ((*((*(_92736_it))))._field_Comptime) {
		_1bc3bd3bb_checkComptimeRangeIter(_self_, _92736_it, &(_9427_kind), &(_9377_d));
		return;;
	};
	if (_1bc4bac5a_comptime((*(_9377_d))._field_Type.ptr())) {
		_1bc40ce00_pushErr((*(_self_))._field_s, (*((*_9287_rang.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime expressions cannot be iterated at runtime", 50)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("declarate comptime iteration like: const for ...", 48)), jule::Slice<jule::Any>());
		return;;
	};
	_1bc47cb62_rangeChecker _9567_rc = _1bc47cb62_rangeChecker{._field_sc=_self_, ._field_rang=_9287_rang, ._field_Kind=_9427_kind, ._field_d=_9377_d};;
	jule::Bool _9623_ok = _1bc47eba8_check(&_9567_rc);;
	if ((!(_9623_ok))) {
		return;;
	};
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9427_kind, &__jule_any_type37); __jule_collection; }));
	jule::Ptr<_1bc3b448e_scopeChecker> _9697_ssc = _1bc3c689c_newChildChecker(_self_);;
	jule::Ptr<_1bc3abd27_Scope> _9707_scope = _1bc3b9b48_getChild(_self_);;
	if (((*(_9427_kind))._field_KeyA != nullptr)) {
		if (((!(_1bc40c493_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1bc3b9098_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9427_kind))._field_KeyA.alloc)._field_Ident)))) {
			_1bc40ce00_pushErr((*(_self_))._field_s, (*(*(_9427_kind))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9427_kind))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9427_kind))._field_KeyA.alloc)._field_Scope=_9707_scope;
		(*((*(_9697_ssc))._field_table))._field_Vars=jule::append((*(*(_9697_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9427_kind.alloc)._field_KeyA; __jule_collection; }));
	};
	if (((*(_9427_kind))._field_KeyB != nullptr)) {
		if (((!(_1bc40c493_isFlag((*(_self_))._field_s, static_cast<jule::I32>(1LL)))) && _1bc3b9098_isDuplicatedIdent(_self_, 0LLU, &((*(*(_9427_kind))._field_KeyB.alloc)._field_Ident)))) {
			_1bc40ce00_pushErr((*(_self_))._field_s, (*(*(_9427_kind))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_9427_kind))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
		};
		(*(*(_9427_kind))._field_KeyB.alloc)._field_Scope=_9707_scope;
		(*((*(_9697_ssc))._field_table))._field_Vars=jule::append((*(*(_9697_ssc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*_9427_kind.alloc)._field_KeyB; __jule_collection; }));
	};
	_1bc3bc08a_checkIterScopeSsc(_self_, static_cast<jule::Uintptr>(_9427_kind), (*((*(_92736_it))))._field_Scope, &(_9707_scope), _9697_ssc);
	(*(_9427_kind))._field_Scope=_9707_scope;
}



inline void _1bc3bd92c_checkIter(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2714a0_Iter> _99430_it) {
	if (_1bc271846_IsInf(_99430_it.ptr())) {
		if ((*_99430_it.alloc)._field_Comptime) {
			_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_99430_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
			return;;
		};
		_1bc3bcbe5_checkInfIter(_self_, &(_99430_it));
		return;;
	};
	{
		auto &_match_expr{ (*(_99430_it))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type34) {
			_case_begin_1bd5994ec:;
			{
				if ((*(_99430_it))._field_Comptime) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_99430_it.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime iterations can only be range iteration", 47)), jule::Slice<jule::Any>());
					return;;
				};
				_1bc3bce9d_checkWhileIter(_self_, &(_99430_it));
			}
		}
		else if (_match_expr.type == &__jule_any_type36) {
			_case_begin_1bd59a6b8:;
			{
				_1bc3bd674_checkRangeIter(_self_, &(_99430_it));
			}
		}
		else {
			_case_begin_1bd59a652:;
			{
				jule::println(_1be2ec53a_toStr(jule::Str::lit("error <unimplemented iteration kind>", 36)));
			}
		}
		_match_end_1bd59a5db:;
	};
}



inline jule::Bool _1bc3bdc6d_checkValidContLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _101836_it) {
	jule::Ptr<_1bc3b448e_scopeChecker> _10197_scope = _self_;;
	_julec_label_1bd5a2bdc:;
	if (((*(_10197_scope))._field_it == _101836_it)) {
		return true;;
	};
	if (((*(_10197_scope))._field_parent != nullptr)) {
		_10197_scope=(*_10197_scope.alloc)._field_parent;
		goto _julec_label_1bd5a2bdc;
	};
	return false;;
}



inline jule::Bool _1bc3be0ae_checkValidBreakLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Uintptr _103437_ptr) {
	jule::Ptr<_1bc3b448e_scopeChecker> _10357_scope = _self_;;
	_julec_label_1c0c7bea7:;
	if (((*(_10357_scope))._field_it == _103437_ptr)) {
		return true;;
	};
	if (((*(_10357_scope))._field_cse != 0LLU)) {
		jule::Uintptr _10434_mtch = static_cast<jule::Uintptr>((*(((_1bc3b2080_Case*)((*_10357_scope.alloc)._field_cse))))._field_Owner);;
		if ((_10434_mtch == _103437_ptr)) {
			return true;;
		};
	};
	if (((*(_10357_scope))._field_parent != nullptr)) {
		_10357_scope=(*_10357_scope.alloc)._field_parent;
		goto _julec_label_1c0c7bea7;
	};
	return false;;
}



inline jule::Ptr<_1bc3adee4_ContSt> _1bc3be400_checkContValidScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272e85_ContSt> _105736_c) {
	if (_1bc3b732c_isDeferred(_self_)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_105736_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_105736_c))._field_Label != nullptr)) {
		return jule::new_ptr<_1bc3adee4_ContSt>(_1bc3adee4_ContSt{._field_It=0});;
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _10677_scope = _self_;;
	_julec_label_1bbd1b248:;
	{
		
		if (((((*(_10677_scope))._field_it == 0LLU) && ((*_10677_scope.alloc)._field_parent != nullptr)) && ((*_10677_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1bbd1cde8:;
			{
				_10677_scope=(*_10677_scope.alloc)._field_parent;
				goto _julec_label_1bbd1b248;
			}
		}
		else if (((*(_10677_scope))._field_it != 0LLU)) {
			_case_begin_1bbd1ce81:;
			{
				return jule::new_ptr<_1bc3adee4_ContSt>(_1bc3adee4_ContSt{._field_It=(*_10677_scope.alloc)._field_it});;
			}
		}
		_match_end_1bbd1cd3d:;
	};
	_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*(_105736_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("continue keyword is cannot used at out of iteration", 51)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1bc3be6a8_checkCont(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272e85_ContSt> _108126_c) {
	jule::Ptr<_1bc3adee4_ContSt> _10827_cont = _1bc3be400_checkContValidScope(_self_, _108126_c);;
	if ((_10827_cont == nullptr)) {
		return;;
	};
	if (((*(_108126_c))._field_Label != nullptr)) {
		jule::Ptr<_1bc3b30c5_scopeLabel> _10888_label = _1bc3a9ebd_findLabelParent(&((*(*(_108126_c))._field_Label.alloc)._field_Kind), (*_self_.alloc)._field_parent);;
		if ((_10888_label == nullptr)) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		(*(_10888_label))._field_used=true;
		if ((((*((*_10888_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_10888_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return;;
		};
		jule::I32 _11014_i = ((*((*_10888_label.alloc)._field_node))._field_Index + 1LL);;
		if ((_11014_i >= (*((*(*(_10888_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), jule::Slice<jule::Any>());
		} else {
			jule::Any _11059_st = (*((*(*(_10888_label))._field_node.alloc)._field_Scope))._field_Stmts[_11014_i];;
			{
				auto &_match_expr{ _11059_st };
				
				if (_match_expr.type == &__jule_any_type33) {
					_case_begin_1bbd2929a:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1bc3acc5c_InfIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type37) {
					_case_begin_1bbd27e14:;
					{
						(*(_10827_cont))._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1bc3adb5e_RangeIter>());
					}
				}
				else if (_match_expr.type == &__jule_any_type35) {
					_case_begin_1bbd28101:;
					{
						(*_10827_cont.alloc)._field_It=static_cast<jule::Uintptr>(_11059_st.unsafe_cast_ptr<_1bc3ad213_WhileIter>());
					}
				}
				else {
					_case_begin_1bbd2808a:;
					{
						_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_108126_c.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_108126_c))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					}
				}
				_match_end_1bbd28024:;
			};
		};
	};
	if (((*(_10827_cont))._field_It != 0LLU)) {
		if ((!(_1bc3bdc6d_checkValidContLabel(_self_, (*_10827_cont.alloc)._field_It)))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_108126_c))._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_108126_c.alloc)._field_Label))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_10827_cont, &__jule_any_type38); __jule_collection; }));
}



inline void _1bc3be961_checkLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc269ee3_LabelSt> _112831_l) {
	if ((_1bc3b851a_findLabel(_self_.ptr(), &((*(_112831_l))._field_Ident)) != nullptr)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_112831_l.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("label is already exist in this identifier: @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_112831_l.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1bc3ae874_Label> _11347_label = jule::new_ptr<_1bc3ae874_Label>(_1bc3ae874_Label{._field_Ident=(*(_112831_l))._field_Ident, ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11347_label, &__jule_any_type19); __jule_collection; }));
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3b30c5_scopeLabel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc3b30c5_scopeLabel>(_1bc3b30c5_scopeLabel{._field_token=(*_112831_l.alloc)._field_Token, ._field_node=_11347_label, ._field_used=false}); __jule_collection; }));
}



inline void _1bc3bec19_pushGoto(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26a3bc_GotoSt> _114729_gt) {
	jule::Ptr<_1bc3aeed4_GotoSt> _11487_st = jule::new_ptr<_1bc3aeed4_GotoSt>(_1bc3aeed4_GotoSt{._field_Ident=(*((*_114729_gt.alloc)._field_Label))._field_Kind, ._field_Token=(*(_114729_gt))._field_Label, ._field_Label=jule::Ptr<_1bc3ae874_Label>(nullptr), ._field_Scope=(*(_self_))._field_scope, ._field_Index=(*_self_.alloc)._field_i});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_11487_st, &__jule_any_type39); __jule_collection; }));
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _11487_st; __jule_collection; }));
}



inline void _1bc3beec2_checkPostfix(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt> _115833_a) {
	if (((*(_115833_a))._field_Left.len() > 1LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc48551b_eval> _11647_eval = _1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	(*(_11647_eval))._field_target._field_mutable=true;
	jule::Ptr<_1bc261c43_Expr> _11677_expr = (*((*(_115833_a))._field_Left[0LL]))._field_Expr;;
	jule::Ptr<_1bc48354c_Data> _11687_d = _1bc4a4309_evalExpr(_11647_eval, _11677_expr);;
	if ((_11687_d == nullptr)) {
		return;;
	};
	_1bc3ab068_checkAssign(&((*_self_.alloc)._field_s), &(_11687_d), nullptr, (*_115833_a.alloc)._field_Setter);
	if ((_1bc4b91ba_Ptr((*(_11687_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc4c6903_Ptr> _11768_ptr = _1bc4b91ba_Ptr((*(_11687_d))._field_Type);;
		if (_1bc4c7470_IsUnsafe(_11768_ptr.ptr())) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115833_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_11687_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else {
		if (((_1bc4b8b9d_Prim((*(_11687_d))._field_Type.ptr()) == nullptr) || (!(_1bc37ceb3_IsNum((*(_1bc4b8b9d_Prim((*(_11687_d))._field_Type)))._field_Kind))))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_115833_a.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_115833_a.alloc)._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_11687_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1bc3b03ad_Postfix>(_1bc3b03ad_Postfix{._field_Expr=(*(_11687_d))._field_Model, ._field_Op=(*((*_115833_a.alloc)._field_Setter))._field_Kind}), &__jule_any_type40); __jule_collection; }));
}



inline jule::Bool _1bc3c0313_isNewAssignIdent(_1bc3b448e_scopeChecker* _self_, jule::Str _119432_ident) {
	if ((_1bc2498eb_IsIgnoreIdent(_119432_ident) || (_119432_ident).empty())) {
		return false;;
	};
	return (_1bc308757_defByIdent((*(_self_))._field_table.ptr(), &(_119432_ident), false) == nullptr);;
}



inline void _1bc3c05bb_removeInteriorMutRisk(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc48354c_Data>* _120743_d) {
	jule::Ptr<_1bc2810c5_StructIns> _12083_s = _1bc4ba221_Struct((*((*(_120743_d))))._field_Type.ptr());;
	if ((_12083_s == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _12123_root = _1bc3b7b02_getHardRoot(_self_);;
	if (((*((*(_12123_root))._field_owner))._field_Owner != _12083_s)) {
		return;;
	};
	(*((*(_120743_d))))._field_Mutable=true;
}



inline jule::Bool _1bc3c0a72_checkStructureAssignOp(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2810c5_StructIns>* _122144_s, jule::Ptr<_1bc26b3ac_AssignSt>* _122164_a, jule::Ptr<_1bc48354c_Data>* _122188_r) {
	jule::Ptr<_1bc302113_FnIns> _122411_overload = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_122164_a))))._field_Setter))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1bbd47010:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_AddAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1bbd46bad:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_SubAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1bbd46c24:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_DivAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1bbd46c8a:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_MulAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1bbd46d01:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ModAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1bbd46d67:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ShlAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1bbd46dcd:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_ShrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1bbd48682:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitOrAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1bbd486e8:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitAndAssign;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1bbd4875e:;
			{
				_122411_overload=(*((*(_122144_s))))._field_Operators._field_BitXorAssign;
			}
		}
		else {
			_case_begin_1bbd46493:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_122164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122164_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc28147c_Str((*(_122144_s)).ptr()), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1bbd46b36:;
	};
	if ((_122411_overload == nullptr)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_122164_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_122164_a))))._field_Setter))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc28147c_Str((*(_122144_s)).ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1bc300ead_ParamIns> _12567_p = (*(_122411_overload))._field_Params[1LL];;
	return _1bc4153e1_checkAssignType((*(_self_))._field_s, (*((*(_12567_p))._field_Decl))._field_Reference, &((*_12567_p.alloc)._field_Type), _122188_r, (*((*(_122164_a))))._field_Setter, _1bc3b7d88_getOwnerRefers(_self_));;
}



inline void _1bc3c0d2a_checkSingleAssign(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt>* _126039_a) {
	jule::Ptr<_1bc48354c_Data> _126111_l = nullptr;;
	if ((!(_1bc2498eb_IsIgnoreIdent((*((*((*(_126039_a))))._field_Left[0LL]))._field_Ident)))) {
		jule::Ptr<_1bc261c43_Expr> _12648_expr = (*((*((*(_126039_a))))._field_Left[0LL]))._field_Expr;;
		jule::Ptr<_1bc48551b_eval> _12658_eval = _1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
		(*(_12658_eval))._field_target._field_mutable=true;
		_126111_l=_1bc4a4309_evalExpr(_12658_eval, _12648_expr);
		if ((_126111_l == nullptr)) {
			return;;
		};
	};
	jule::Ptr<_1bc48551b_eval> _12737_eval = static_cast<jule::Ptr<_1bc48551b_eval>>(nullptr);;
	if ((_126111_l != nullptr)) {
		_12737_eval=_1bc414984_evalp((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1), (*_126111_l.alloc)._field_Type);
	} else {
		_12737_eval=_1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));
	};
	(*(_12737_eval))._field_target._field_mutable=true;
	(*_12737_eval.alloc)._field_unsafety=_1bc3b687b_isUnsafe(_self_);
	jule::Ptr<_1bc48354c_Data> _12817_r = _1bc4a4309_evalExpr(_12737_eval, (*((*(_126039_a))))._field_Right);;
	if ((_12817_r == nullptr)) {
		return;;
	};
	_1bc3c05bb_removeInteriorMutRisk(_self_, &(_12817_r));
	if ((_126111_l == nullptr)) {
		if (_1bc4b78b1_Void((*(_12817_r))._field_Type.ptr())) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*((*((*(_126039_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		if (((*((*((*(_126039_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_126039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_12817_r, &__jule_any_type22); __jule_collection; }));
		return;;
	};
	if ((!(_1bc3ab068_checkAssign(&((*_self_.alloc)._field_s), &(_126111_l), _12817_r, (*((*(_126039_a))))._field_Setter)))) {
		return;;
	};
	if ((_1bc4ba9c4_Tup((*(_12817_r))._field_Type.ptr()) != nullptr)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_126039_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc2e1795_OperandExprModel> _13087_lm = jule::new_ptr<_1bc2e1795_OperandExprModel>(_1bc2e1795_OperandExprModel{._field_Type=(*(_126111_l))._field_Type, ._field_Model=(*_126111_l.alloc)._field_Model});;
	jule::Ptr<_1bc2e1795_OperandExprModel> _13127_rm = jule::new_ptr<_1bc2e1795_OperandExprModel>(_1bc2e1795_OperandExprModel{._field_Type=(*(_12817_r))._field_Type, ._field_Model=(*_12817_r.alloc)._field_Model});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1bc3b0864_Assign>(_1bc3b0864_Assign{._field_Left=_13087_lm, ._field_Right=_13127_rm, ._field_Op=(*((*(_126039_a))))._field_Setter}), &__jule_any_type41); __jule_collection; }));
	if (((*((*((*(_126039_a))))._field_Setter))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1bc471716_assignTypeChecker _13198_checker = _1bc471716_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_126111_l.alloc)._field_Type, ._field_d=_12817_r, ._field_errorToken=(*((*(_126039_a))))._field_Setter, ._field_refers=_1bc3b7d88_getOwnerRefers(_self_)};;
		if (_1bc472717_check(&_13198_checker)) {
			(*(_13127_rm))._field_Model=(*(_12817_r))._field_Model;
			(*(_13087_lm))._field_Model=(*_126111_l.alloc)._field_Model;
		};
		return;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _13327_strct = _1bc4ba221_Struct((*_126111_l.alloc)._field_Type.ptr());;
	if ((_13327_strct != nullptr)) {
		_1bc3c0a72_checkStructureAssignOp(_self_, &(_13327_strct), _126039_a, &(_12817_r));
		return;;
	};
	jule::U32 _13373_id = (*((*((*(_126039_a))))._field_Setter))._field_Id;;
	(*(*((*(_126039_a))))._field_Setter.alloc)._field_Id=_1bc3c6bdd_removeEqFromOp((*(*((*(_126039_a))))._field_Setter.alloc)._field_Id);
	_1bc4a6729_binaryEval _13397_solver = static__1bc4a7186_new(_12737_eval, (*((*(_126039_a))))._field_Setter);;
	({
		jule::Ptr<_1bc48354c_Data> ___jule_assign_arg = _126111_l;
		jule::Ptr<_1bc48354c_Data> _1___jule_assign_arg = _12817_r;
		_13397_solver._field_l = ___jule_assign_arg;
		_13397_solver._field_r = _1___jule_assign_arg;
	});
	_1bc4ab366_evalOp(&_13397_solver);
	(*(*((*(_126039_a))))._field_Setter.alloc)._field_Id=_13373_id;
}



inline void _1bc3c1468_processEndPartOfMultiAssign(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _134549_st, jule::Ptr<_1bc26b3ac_AssignSt>* _134572_a, jule::Ptr<_1bc26ad29_AssignLeft>* _13468_lexpr, jule::Ptr<_1bc48354c_Data>* _134638_l, jule::Ptr<_1bc48354c_Data>* _134653_r, jule::Bool _134663_strict) {
	if (((!((*((*(_13468_lexpr))))._field_Reference)) && _1bc2498eb_IsIgnoreIdent((*((*(_13468_lexpr))))._field_Ident))) {
		if (_1bc4b78b1_Void((*((*(_134653_r))))._field_Type.ptr())) {
			_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_134572_a))))._field_Right))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		};
		{ jule::Slice<jule::Ptr<_1bc48354c_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push(nullptr); };
		return;;
	};
	if ((*((*(_134572_a))))._field_Declarative) {
		{
			auto &_match_expr{ (*((*((*(_13468_lexpr))))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1c040c9ce:;
				{
					if ((!(_1bc3c0313_isNewAssignIdent(_self_.ptr(), (*((*(_13468_lexpr))))._field_Ident)))) {
						goto _julec_label_1c041717b;
					};
				}
			}
			else {
				_case_begin_1c040c968:;
				{
					if (((*((*(_13468_lexpr))))._field_Mutable || (*((*(_13468_lexpr))))._field_Reference)) {
						_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						return;;
					};
					goto _julec_label_1c041717b;
				}
			}
			_match_end_1c040c8e1:;
		};
		if (_1bc3b9098_isDuplicatedIdent(_self_.ptr(), 0LLU, &((*((*(_13468_lexpr))))._field_Ident))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13468_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
			_1bc3b6d10_stop(_self_);
			return;;
		};
		if (_1bc2498eb_IsIgnoreIdent((*((*(_13468_lexpr))))._field_Ident)) {
			_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc42dc12_Var> _13788_v = jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=(*(_self_))._field_scope, ._field_Token=(*((*(_13468_lexpr))))._field_Token, ._field_Ident=(*((*(_13468_lexpr))))._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*((*(_13468_lexpr))))._field_Mutable, ._field_Public=false, ._field_Used=false, ._field_Statically=false, ._field_Reference=(*((*(_13468_lexpr))))._field_Reference, ._field_TypeSym=jule::Ptr<_1bc4bdc08_TypeSym>(nullptr), ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=(*((*(_134572_a))))._field_Right, ._field_Data=(*(_134653_r))}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
		_1bc424785_checkVarValue((*_self_.alloc)._field_s, &(_13788_v));
		{ jule::Slice<jule::Ptr<_1bc48354c_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push(jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=(*((*_13788_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_13788_v.alloc)._field_Mutable, ._field_Reference=(*_13788_v.alloc)._field_Reference, ._field_Lvalue=(!((*(_13788_v))._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_13788_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})); };
		{ jule::Slice<jule::Ptr<_1bc42dc12_Var>> &__jule_push_dest = (*((*(_134549_st))))._field_Decls; __jule_push_dest.push(_13788_v); };
		(*((*_self_.alloc)._field_table))._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _13788_v; __jule_collection; }));
		return;;
	};
	_julec_label_1c041717b:;
	if (((*((*(_13468_lexpr))))._field_Mutable || (*((*(_13468_lexpr))))._field_Reference)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_13468_lexpr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_13468_lexpr))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if ((!(_1bc3ab068_checkAssign(&((*(_self_))._field_s), _134638_l, (*(_134653_r)), (*((*(_13468_lexpr))))._field_Token)))) {
		return;;
	};
	jule::Bool _14137_reference = false;;
	if (_1bc419b76_checkValidityForInitExpr((*(_self_))._field_s, (*((*(_134638_l))))._field_Mutable, _14137_reference, &((*((*(_134638_l))))._field_Type), _134653_r, &((*((*(_13468_lexpr))))._field_Token))) {
		_14137_reference=_134663_strict;
		_1bc4153e1_checkAssignType((*(_self_))._field_s, _14137_reference, &((*((*(_134638_l))))._field_Type), _134653_r, (*((*(_13468_lexpr))))._field_Token, _1bc3b7d88_getOwnerRefers(_self_));
	};
	{ jule::Slice<jule::Ptr<_1bc48354c_Data>> &__jule_push_dest = (*((*(_134549_st))))._field_Left; __jule_push_dest.push((*(_134638_l))); };
}



inline void _1bc3c1721_checkMultiAssign(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt>* _142138_a) {
	if ((((*((*((*(_142138_a))))._field_Setter))._field_Id != static_cast<jule::U32>(71LLU)) && ((*(*((*(_142138_a))))._field_Setter.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc48551b_eval> _14267_eval = _1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	jule::Ptr<_1bc48354c_Data> _14277_rd = _1bc4a4309_evalExpr(_14267_eval, (*((*(_142138_a))))._field_Right);;
	if ((_14277_rd == nullptr)) {
		return;;
	};
	jule::Bool _14317_strict = false;;
	jule::Slice<jule::Ptr<_1bc48354c_Data>> _14327_right = _1bc3aa30e_getDatasFromTupleData(&(_14277_rd));;
	if ((_14327_right.len() == 1LL)) {
		{
			auto &_match_expr{ (*(_14327_right[0LL]))._field_Model };
			
			if (_match_expr.type == &__jule_any_type43) {
				_case_begin_1c0424221:;
				{
					jule::Ptr<_1bc2e4600_IndexingExprModel> _14369_iem = (*(_14327_right[0LL]))._field_Model.unsafe_cast_ptr<_1bc2e4600_IndexingExprModel>();;
					if ((_1bc4ba73d_Map((*((*(_14369_iem))._field_Expr))._field_Type.ptr()) != nullptr)) {
						_14317_strict=true;
						_14327_right=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=(*(_1bc4ba73d_Map((*((*(_14369_iem))._field_Expr))._field_Type)))._field_Val, ._field_Mutable=(*(_14327_right[0LL]))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)}); (*it++) = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)}); __jule_collection; });
					};
				}
			}
			_match_end_1c0424166:;
		};
	};
	{
		
		if (((*((*(_142138_a))))._field_Left.len() > _14327_right.len())) {
			_case_begin_1c042791c:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("overflow multi assignment identifers", 36)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if (((*((*(_142138_a))))._field_Left.len() < _14327_right.len())) {
			_case_begin_1c0427983:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_142138_a))))._field_Setter, static_cast<jule::Str>(jule::Str::lit("missing identifier(s) for multiple assignment", 45)), jule::Slice<jule::Any>());
				return;;
			}
		}
		_match_end_1c04242ba:;
	};
	(*_14267_eval.alloc)._field_target._field_mutable=true;
	jule::Ptr<_1bc3b0d1a_MultiAssign> _14597_st = jule::new_ptr<_1bc3b0d1a_MultiAssign>(_1bc3b0d1a_MultiAssign{._field_Decls=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1bc48354c_Data>>(nullptr), ._field_Right=(*(_14277_rd))._field_Model});;
	{
		auto expr = &((*((*(_142138_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c042cbca:;
		if (it != expr_end) {
			jule::I32 _14627_i = it - expr->begin();
			{
				jule::Ptr<_1bc26ad29_AssignLeft> _14638_lexpr = (*((*(_142138_a))))._field_Left[_14627_i];;
				jule::Ptr<_1bc48354c_Data> _146412_l = nullptr;;
				if ((!(_1bc2498eb_IsIgnoreIdent((*(_14638_lexpr))._field_Ident)))) {
					if ((!((*((*(_142138_a))))._field_Declarative))) {
						goto _julec_label_1c042e4e5;
					};
					if (((*_14638_lexpr.alloc)._field_Mutable && (*_14638_lexpr.alloc)._field_Reference)) {
						goto _julec_label_1c0431c56;
					};
					{
						auto &_match_expr{ (*((*(_14638_lexpr))._field_Expr))._field_Kind };
						
						if (_match_expr.type == &__jule_any_type42) {
							_case_begin_1c0430705:;
							{
								if (_1bc3c0313_isNewAssignIdent(_self_, (*_14638_lexpr.alloc)._field_Ident)) {
									goto _julec_label_1c0431c56;
								};
							}
						}
						_match_end_1c043067d:;
					};
					_julec_label_1c042e4e5:;
					_146412_l=_1bc4a4309_evalExpr(_14267_eval, (*_14638_lexpr.alloc)._field_Expr);
					if ((_146412_l == nullptr)) {
						goto _iter_next_1c042cbca;
					};
					_julec_label_1c0431c56:;
				};
				jule::Ptr<_1bc48354c_Data> _14858_r = _14327_right[_14627_i];;
				_1bc3c05bb_removeInteriorMutRisk(_self_, &(_14858_r));
				_1bc3c1468_processEndPartOfMultiAssign(_self_, &(_14597_st), _142138_a, &(_14638_lexpr), &(_146412_l), &(_14858_r), _14317_strict);
			}
			_iter_next_1c042cbca:;
			++it;
			_14627_i++;
			goto _iter_begin_1c042cbca;
		}
		_iter_end_1c042cbca:;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_14597_st, &__jule_any_type44); __jule_collection; }));
}



inline void _1bc3c19c9_checkAssignSt(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26b3ac_AssignSt> _149234_a) {
	{
		
		if (_1bc24bd60_IsPostfixOp((*((*(_149234_a))._field_Setter))._field_Id)) {
			_case_begin_1c04339d3:;
			{
				_1bc3beec2_checkPostfix(_self_, _149234_a);
			}
		}
		else if (((*(_149234_a))._field_Left.len() == 1LL)) {
			_case_begin_1c0433681:;
			{
				_1bc3c0d2a_checkSingleAssign(_self_, &(_149234_a));
			}
		}
		else {
			_case_begin_1c043361a:;
			{
				_1bc3c1721_checkMultiAssign(_self_, &(_149234_a));
			}
		}
		_match_end_1c043352c:;
	};
}



inline jule::Ptr<_1bc3abd27_Scope> _1bc3c1dc5_checkCaseScope(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b2080_Case>* _150332_c, jule::Ptr<_1bc26ca0c_ScopeTree>* _150347_tree) {
	jule::Ptr<_1bc3b448e_scopeChecker> _15047_ssc = _1bc3c689c_newChildChecker(_self_);;
	(*(_15047_ssc))._field_cse=static_cast<jule::Uintptr>((*(_150332_c)));
	return _1bc3ba462_checkChildSc(_self_, _150347_tree, &(_15047_ssc));;
}



inline jule::Ptr<_1bc3b2080_Case> _1bc3c2436_checkCase(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b1557_Match> _150930_m, jule::I32 _150941_i, jule::Ptr<_1bc2749ae_Case> _150953_c, jule::Ptr<_1bc48354c_Data> _150972_expr) {
	jule::Ptr<_1bc3b2080_Case> _15107_case = (*(_150930_m))._field_Cases[_150941_i];;
	(*(_15107_case))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(0LL, (*(_150953_c))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc48354c_Data>(nullptr); __jule_collection; });
	jule::Bool _15127_constMatched = false;;
	jule::Ptr<_1bc48551b_eval> _15137_eval = _1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	{
		auto expr = &((*_150953_c.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c043928b:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _151415_e = *it;
			{
				jule::Ptr<_1bc48354c_Data> _15158_d = _1bc4a34e5_evalExprKind(_15137_eval, (*(_151415_e))._field_Kind);;
				if ((_15158_d == nullptr)) {
					goto _iter_next_1c043928b;
				};
				if ((*_150930_m.alloc)._field_TypeMatch) {
					(*_15107_case.alloc)._field_Exprs=jule::append((*_15107_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15158_d; __jule_collection; }));
					if ((_1bc3c7826_countMatchType(&(_150930_m), &((*(_15158_d))._field_Type)) > 1LL)) {
						_1bc40ce00_pushErr((*(_self_))._field_s, (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("duplicated pattern: type @ is already matched", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*_15158_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					};
					if ((*_150930_m.alloc)._field_Comptime) {
						_15127_constMatched=(_15127_constMatched || _1bc4b6c34_Equal((*(_150972_expr))._field_Type, (*(_15158_d))._field_Type));
					} else {
						if ((_1bc4b96d7_TypeEnum((*(_150972_expr))._field_Type.ptr()) != nullptr)) {
							_1bc415d4d_checkTypeCompatibility((*(_self_))._field_s, &((*_150972_expr.alloc)._field_Type), &((*(_15158_d))._field_Type), &((*_151415_e.alloc)._field_Token));
						} else {
							jule::Ptr<_1bc309769_Trait> _15347_trt = _1bc4ba4a7_Trait((*(_150972_expr))._field_Type.ptr());;
							if ((_15347_trt != nullptr)) {
								_1bc415d4d_checkTypeCompatibility((*(_self_))._field_s, &((*_150972_expr.alloc)._field_Type), &((*(_15158_d))._field_Type), &((*_151415_e.alloc)._field_Token));
							};
						};
					};
					_1bc4aed3c_applyRuntimeToStr(&((*_self_.alloc)._field_s), &((*(_15158_d))._field_Type), &((*((*_150930_m.alloc)._field_Expr))._field_Type), &((*_151415_e.alloc)._field_Token), _1bc3b7d88_getOwnerRefers(_self_));
					goto _iter_next_1c043928b;
				};
				if ((*(_15158_d))._field_Decl) {
					_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expecting expression, found type declaration", 44)), jule::Slice<jule::Any>());
					_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("you can use type-match if you want to match types", 49)), jule::Slice<jule::Any>());
					goto _iter_next_1c043928b;
				};
				if ((*_150930_m.alloc)._field_Comptime) {
					if (((!(_1bc483e87_IsConst(_15158_d.ptr()))) && (_1bc4bc564_comptimeTypeInfo((*_15158_d.alloc)._field_Type.ptr()) == nullptr))) {
						_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_151415_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
						_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
						goto _iter_next_1c043928b;
					};
					if ((!(_15127_constMatched))) {
						if (_1bc483e87_IsConst(_15158_d.ptr())) {
							_15127_constMatched=(_1bc483e87_IsConst(_150972_expr.ptr()) && _1bc2dae76_Eq((*_15158_d.alloc)._field_Constant.ptr(), (*((*(_150972_expr))._field_Constant))));
						} else {
							jule::Ptr<_1bc38e337_comptimeTypeInfo> _15607_exprCti = _1bc4bc564_comptimeTypeInfo((*(_150972_expr))._field_Type.ptr());;
							_15127_constMatched=((_15607_exprCti != nullptr) && _1bc4b6c34_Equal((*(_1bc4bc564_comptimeTypeInfo((*(_15158_d))._field_Type)))._field_base, (*_15607_exprCti.alloc)._field_base));
						};
					};
				};
				(*_15107_case.alloc)._field_Exprs=jule::append((*_15107_case.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15158_d; __jule_collection; }));
				if ((((!((*_150930_m.alloc)._field_Comptime)) || (_1bc4bc564_comptimeTypeInfo((*(_150972_expr))._field_Type.ptr()) == nullptr)) || (_1bc4bc564_comptimeTypeInfo((*(_15158_d))._field_Type) == nullptr))) {
					_1bc471716_assignTypeChecker _15709_checker = _1bc471716_assignTypeChecker{._field_s=(*_self_.alloc)._field_s, ._field_dest=(*_150972_expr.alloc)._field_Type, ._field_d=_15158_d, ._field_errorToken=(*_151415_e.alloc)._field_Token, ._field_refers=_1bc3b7d88_getOwnerRefers(_self_)};;
					_1bc472717_check(&_15709_checker);
				};
			}
			_iter_next_1c043928b:;
			++it;
			goto _iter_begin_1c043928b;
		}
		_iter_end_1c043928b:;
	};
	if (((!((*_150930_m.alloc)._field_Comptime)) || _15127_constMatched)) {
		(*_15107_case.alloc)._field_Scope=_1bc3c1dc5_checkCaseScope(_self_, &(_15107_case), &((*_150953_c.alloc)._field_Scope));
	};
	return _15107_case;;
}



inline void _1bc3c2854_checkCases(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase>* _158632_m, jule::Ptr<_1bc3b1557_Match> _158656_rm, jule::Ptr<_1bc48354c_Data> _158672_expr) {
	(*(_158656_rm))._field_Cases=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3b2080_Case>>::alloc(0LL, (*((*(_158632_m))))._field_Cases.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc3b2080_Case>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_158632_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c847c8:;
		if (it != expr_end) {
			jule::I32 _15887_i = it - expr->begin();
			{
				jule::Ptr<_1bc3b2080_Case> _15898_case = jule::new_ptr<_1bc3b2080_Case>(_1bc3b2080_Case{._field_Owner=_158656_rm, ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1bc48354c_Data>>(nullptr), ._field_Next=jule::Ptr<_1bc3b2080_Case>(nullptr)});;
				if ((_15887_i > 0LL)) {
					(*((*_158656_rm.alloc)._field_Cases[(_15887_i - 1LL)]))._field_Next=_15898_case;
				};
				(*_158656_rm.alloc)._field_Cases=jule::append((*_158656_rm.alloc)._field_Cases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3b2080_Case>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _15898_case; __jule_collection; }));
			}
			_iter_next_1c0c847c8:;
			++it;
			_15887_i++;
			goto _iter_begin_1c0c847c8;
		}
		_iter_end_1c0c847c8:;
	};
	if ((((*_158656_rm.alloc)._field_Default != nullptr) && ((*((*(_158632_m))))._field_Cases.len() > 0LL))) {
		(*((*_158656_rm.alloc)._field_Cases[((*_158656_rm.alloc)._field_Cases.len() - 1LL)]))._field_Next=(*_158656_rm.alloc)._field_Default;
	};
	{
		auto expr = &((*((*(_158632_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c87d1a:;
		if (it != expr_end) {
			jule::I32 _16028_i = it - expr->begin();
			jule::Ptr<_1bc2749ae_Case> _160215_c = *it;
			{
				_1bc3c2436_checkCase(_self_, _158656_rm, _16028_i, _160215_c, _158672_expr);
			}
			_iter_next_1c0c87d1a:;
			++it;
			_16028_i++;
			goto _iter_begin_1c0c87d1a;
		}
		_iter_end_1c0c87d1a:;
	};
}



inline jule::Ptr<_1bc3b2080_Case> _1bc3c2c50_checkDefault(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b1557_Match> _160733_m, jule::Ptr<_1bc273815_Else> _160748_d) {
	jule::Ptr<_1bc3b2080_Case> _16087_def = jule::new_ptr<_1bc3b2080_Case>(_1bc3b2080_Case{._field_Owner=_160733_m, ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1bc48354c_Data>>(nullptr), ._field_Next=jule::Ptr<_1bc3b2080_Case>(nullptr)});;
	(*(_16087_def))._field_Scope=_1bc3c1dc5_checkCaseScope(_self_, &(_16087_def), &((*(_160748_d))._field_Scope));
	return _16087_def;;
}



inline void _1bc3c30b3_checkComptimePanic(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc247014_Token> _161539_callToken, jule::Ptr<_1bc3abd27_Scope>* _161566_s) {
	if (((*((*(_161566_s))))._field_Stmts.len() != 1LL)) {
		return;;
	};
	jule::Any _16193_stmt = (*((*(_161566_s))))._field_Stmts[0LL];;
	{
		auto &_match_expr{ _16193_stmt };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c0c8a6e1:;
			{
				jule::Ptr<_1bc48354c_Data> _16224_d = _16193_stmt.unsafe_cast_ptr<_1bc48354c_Data>();;
				{
					auto &_match_expr{ (*(_16224_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type27) {
						_case_begin_1c0c8b6e2:;
						{
							jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> _16259_m = (*(_16224_d))._field_Model.unsafe_cast_ptr<_1bc2e822a_BuiltinPanicCallExprModel>();;
							{
								auto &_match_expr{ (*(_16259_m))._field_Expr };
								
								if (_match_expr.type == &__jule_any_type15) {
									_case_begin_1c0c8c8d0:;
									{
										jule::Ptr<_1bac25065_Const> _16286_c = (*(_16259_m))._field_Expr.unsafe_cast_ptr<_1bac25065_Const>();;
										if ((!(_1bac297c8_IsStr(_16286_c.ptr())))) {
											goto _match_end_1c0c8c858;
										};
										if ((_161539_callToken == nullptr)) {
											jule::Ptr<_1bc3b448e_scopeChecker> _163311_root = _1bc3b7b02_getHardRoot(_self_);;
											if (((*(_163311_root))._field_calledFrom == nullptr)) {
												_161539_callToken=(*(_16259_m))._field_Token;
											} else {
												_161539_callToken=(*(_163311_root))._field_calledFrom;
											};
										};
										_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _161539_callToken, static_cast<jule::Str>(jule::Str::lit("compile-time panic: @", 21)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bac271cc_ReadStr(_16286_c.ptr()), &__jule_any_type5); __jule_collection; }));
										_1bc3b6d10_stop(_self_);
									}
								}
								_match_end_1c0c8c858:;
							};
						}
					}
					_match_end_1c0c8b67b:;
				};
			}
		}
		_match_end_1c0c89c2e:;
	};
}



inline void _1bc3c3426_processConstMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc3b1557_Match>* _164739_tm, jule::Ptr<_1bc2752c8_MatchCase>* _164756_m) {
	{
		auto expr = &((*((*(_164739_tm))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0c8cd42:;
		if (it != expr_end) {
			jule::I32 _16488_i = it - expr->begin();
			jule::Ptr<_1bc3b2080_Case> _164815_c = *it;
			{
				if (((*(_164815_c))._field_Scope != nullptr)) {
					jule::Ptr<_1bc247014_Token> _165013_token = nullptr;;
					if (((!((*((*(_164739_tm))))._field_TypeMatch)) && ((*(*(_164815_c))._field_Scope.alloc)._field_Stmts.len() > 0LL))) {
						_165013_token=(*((*((*((*(_164756_m))))._field_Cases[_16488_i]))._field_Scope))._field_Stmts[0LL]._field_Token;
					};
					_1bc3c30b3_checkComptimePanic(_self_, _165013_token, &((*_164815_c.alloc)._field_Scope));
					(*((*(_164739_tm))))._field_Default=_164815_c;
					(*((*(_164739_tm))))._field_Cases=nullptr;
					return;;
				};
			}
			_iter_next_1c0c8cd42:;
			++it;
			_16488_i++;
			goto _iter_begin_1c0c8cd42;
		}
		_iter_end_1c0c8cd42:;
	};
	if (((*((*(_164756_m))))._field_Default != nullptr)) {
		(*((*(_164739_tm))))._field_Cases=nullptr;
		(*((*(_164739_tm))))._field_Default=_1bc3c2c50_checkDefault(_self_, (*(_164739_tm)), (*((*(_164756_m))))._field_Default);
		if (((*((*(_164739_tm))))._field_Default != nullptr)) {
			jule::Ptr<_1bc247014_Token> _166413_token = nullptr;;
			if ((!((*((*(_164739_tm))))._field_TypeMatch))) {
				_166413_token=(*((*(*((*(_164756_m))))._field_Default.alloc)._field_Scope))._field_Stmts[0LL]._field_Token;
			};
			_1bc3c30b3_checkComptimePanic(_self_, _166413_token, &((*(*((*(_164739_tm))))._field_Default.alloc)._field_Scope));
		};
	} else {
		(*((*(_164739_tm))))._field_Cases=nullptr;
	};
}



inline void _1bc3c36ce_checkTypeMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase>* _167636_m) {
	jule::Ptr<_1bc48354c_Data> _16777_d = _1bc4a3836_eval1(_1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)), (*((*(_167636_m))))._field_Expr);;
	if ((_16777_d == nullptr)) {
		return;;
	};
	if ((*((*(_167636_m))))._field_Comptime) {
		jule::Ptr<_1bc38e337_comptimeTypeInfo> _16838_cti = _1bc4bc564_comptimeTypeInfo((*(_16777_d))._field_Type.ptr());;
		if ((_16838_cti == nullptr)) {
			if ((!((*_16777_d.alloc)._field_Decl))) {
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*((*(_167636_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime type-match expressions can take only type declarations", 63)), jule::Slice<jule::Any>());
				return;;
			};
		} else {
			(*_16777_d.alloc)._field_Type=(*(_16838_cti))._field_base;
		};
	} else if (((*(_16777_d))._field_Decl || (!(((((_1bc4b8b9d_Prim((*_16777_d.alloc)._field_Type.ptr()) != nullptr) && _1bc4c2d61_IsAny(_1bc4b8b9d_Prim((*(_16777_d))._field_Type).ptr())) || (_1bc4ba4a7_Trait((*(_16777_d))._field_Type) != nullptr)) || (_1bc4b96d7_TypeEnum((*(_16777_d))._field_Type) != nullptr)))))) {
		_1bc40ce00_pushErr((*(_self_))._field_s, (*((*((*(_167636_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type-match must be have <any>, <type enum>, <trait> or <generic> typed expression", 81)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc3b1557_Match> _16977_tm = jule::new_ptr<_1bc3b1557_Match>(_1bc3b1557_Match{._field_Scope=(*_self_.alloc)._field_scope, ._field_Expr=_16777_d, ._field_TypeMatch=true, ._field_Comptime=(*((*(_167636_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1bc3b2080_Case>>(nullptr), ._field_Default=jule::Ptr<_1bc3b2080_Case>(nullptr)});;
	if (((!((*(_16977_tm))._field_Comptime)) && ((*((*(_167636_m))))._field_Default != nullptr))) {
		(*_16977_tm.alloc)._field_Default=_1bc3c2c50_checkDefault(_self_, _16977_tm, (*((*(_167636_m))))._field_Default);
	};
	_1bc3c2854_checkCases(_self_, _167636_m, _16977_tm, _16777_d);
	if ((*(_16977_tm))._field_Comptime) {
		_1bc3c3426_processConstMatch(_self_, &(_16977_tm), _167636_m);
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_16977_tm, &__jule_any_type45); __jule_collection; }));
}



inline void _1bc3c3987_checkCommonMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase>* _171938_m) {
	jule::Ptr<_1bc48354c_Data> _172011_d = nullptr;;
	if (((*((*(_171938_m))))._field_Expr == nullptr)) {
		_172011_d=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac25a27_NewBool(true)});
		(*(_172011_d))._field_Model=jule::Any((*_172011_d.alloc)._field_Constant, &__jule_any_type15);
	} else {
		_172011_d=_1bc4a3eb8_evalExpr1(_1bc414cc5_eval((*(_self_))._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)), (*((*(_171938_m))))._field_Expr);
		if ((_172011_d == nullptr)) {
			return;;
		};
	};
	if ((*((*(_171938_m))))._field_Comptime) {
		if ((!(_1bc3c71d8_canComptimeMatch(&(_172011_d))))) {
			_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171938_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
			return;;
		};
	} else if (_1bc4bac5a_comptime((*(_172011_d))._field_Type.ptr())) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*((*(_171938_m))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("comptime-matching requires constant expression", 46)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc3b1557_Match> _17467_mc = jule::new_ptr<_1bc3b1557_Match>(_1bc3b1557_Match{._field_Scope=(*(_self_))._field_scope, ._field_Expr=_172011_d, ._field_TypeMatch=false, ._field_Comptime=(*((*(_171938_m))))._field_Comptime, ._field_Cases=jule::Slice<jule::Ptr<_1bc3b2080_Case>>(nullptr), ._field_Default=jule::Ptr<_1bc3b2080_Case>(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_17467_mc, &__jule_any_type45); __jule_collection; }));
	if (((!((*(_17467_mc))._field_Comptime)) && ((*((*(_171938_m))))._field_Default != nullptr))) {
		(*_17467_mc.alloc)._field_Default=_1bc3c2c50_checkDefault(_self_, _17467_mc, (*((*(_171938_m))))._field_Default);
	};
	_1bc3c2854_checkCases(_self_, _171938_m, _17467_mc, _172011_d);
	if ((*(_17467_mc))._field_Comptime) {
		_1bc3c3426_processConstMatch(_self_, &(_17467_mc), _171938_m);
	};
}



inline void _1bc3c3c40_checkMatch(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc2752c8_MatchCase> _177031_m) {
	if ((*(_177031_m))._field_TypeMatch) {
		_1bc3c36ce_checkTypeMatch(_self_, &(_177031_m));
		return;;
	};
	_1bc3c3987_checkCommonMatch(_self_, &(_177031_m));
}



inline void _1bc3c3ee8_checkFall(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26a6b9_FallSt> _177826_f) {
	if (((((*(_self_))._field_cse == 0LLU) || (((*((*_self_.alloc)._field_scope))._field_Stmts.len() + 1LL) < (*(*(_self_))._field_scope.alloc)._field_Stmts.len())) || _1bc3b732c_isDeferred(_self_))) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177826_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall keyword can only useable at end of the case scopes", 55)), jule::Slice<jule::Any>());
		return;;
	};
	_1bc3b2080_Case* _17867_case = ((_1bc3b2080_Case*)((*(_self_))._field_cse));;
	if ((*((*(_17867_case))._field_Owner))._field_Comptime) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177826_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("the fall statement is not allowed for comptime-matching", 55)), jule::Slice<jule::Any>());
		return;;
	} else if (((*(_17867_case))._field_Next == nullptr)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_177826_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("fall cannot useable at final case", 33)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("remove \"fall\" keyword", 21)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::new_ptr<_1bc3b2778_FallSt>(_1bc3b2778_FallSt{._field_DestCase=static_cast<jule::Uintptr>((*(_17867_case))._field_Next)}), &__jule_any_type46); __jule_collection; }));
}



inline jule::Ptr<_1bc3ae3bd_BreakSt> _1bc3c4339_checkBreakWithLabel(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272aab_BreakSt> _180136_b) {
	jule::Ptr<_1bc3ae3bd_BreakSt> _18027_brk = _1bc3c467a_checkPlainBreak(_self_, _180136_b);;
	if ((_18027_brk == nullptr)) {
		return nullptr;;
	};
	(*(_18027_brk))._field_It=0LLU;
	(*_18027_brk.alloc)._field_Mtch=0LLU;
	jule::Ptr<_1bc3b30c5_scopeLabel> _18127_label = _1bc3a9ebd_findLabelParent(&((*((*(_180136_b))._field_Label))._field_Kind), (*_self_.alloc)._field_parent);;
	if ((_18127_label == nullptr)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*(_18127_label))._field_used=true;
	if ((((*((*_18127_label.alloc)._field_node))._field_Index + 1LL) >= (*((*(*(_18127_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::I32 _18253_i = ((*((*_18127_label.alloc)._field_node))._field_Index + 1LL);;
	if ((_18253_i >= (*((*(*(_18127_label))._field_node.alloc)._field_Scope))._field_Stmts.len())) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	} else {
		jule::Any _18298_st = (*((*(*(_18127_label))._field_node.alloc)._field_Scope))._field_Stmts[_18253_i];;
		{
			auto &_match_expr{ _18298_st };
			
			if (_match_expr.type == &__jule_any_type33) {
				_case_begin_1c0cc51cb:;
				{
					(*_18027_brk.alloc)._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1bc3acc5c_InfIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type37) {
				_case_begin_1c0cc3d45:;
				{
					(*_18027_brk.alloc)._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1bc3adb5e_RangeIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type35) {
				_case_begin_1c0cc4032:;
				{
					(*_18027_brk.alloc)._field_It=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1bc3ad213_WhileIter>());
				}
			}
			else if (_match_expr.type == &__jule_any_type45) {
				_case_begin_1c0cc4098:;
				{
					(*_18027_brk.alloc)._field_Mtch=static_cast<jule::Uintptr>(_18298_st.unsafe_cast_ptr<_1bc3b1557_Match>());
				}
			}
			else {
				_case_begin_1c0cc3ebb:;
				{
					_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				}
			}
			_match_end_1c0cc3e55:;
		};
	};
	if (((*_18027_brk.alloc)._field_It != 0LLU)) {
		if ((!(_1bc3be0ae_checkValidBreakLabel(_self_, (*_18027_brk.alloc)._field_It)))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	if (((*_18027_brk.alloc)._field_Mtch != 0LLU)) {
		if ((!(_1bc3be0ae_checkValidBreakLabel(_self_, (*_18027_brk.alloc)._field_Mtch)))) {
			_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_180136_b.alloc)._field_Label, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_180136_b))._field_Label.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return _18027_brk;;
}



inline jule::Ptr<_1bc3ae3bd_BreakSt> _1bc3c467a_checkPlainBreak(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272aab_BreakSt> _185932_b) {
	if (_1bc3b732c_isDeferred(_self_)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_185932_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _18657_scope = _self_;;
	_julec_label_1c0ccb501:;
	{
		
		if ((((((*(_18657_scope))._field_it == 0LLU) && ((*_18657_scope.alloc)._field_cse == 0LLU)) && ((*_18657_scope.alloc)._field_parent != nullptr)) && ((*_18657_scope.alloc)._field_owner == nullptr))) {
			_case_begin_1c0ccc9b9:;
			{
				_18657_scope=(*_18657_scope.alloc)._field_parent;
				goto _julec_label_1c0ccb501;
			}
		}
		else if (((*(_18657_scope))._field_it != 0LLU)) {
			_case_begin_1c0ccca52:;
			{
				return jule::new_ptr<_1bc3ae3bd_BreakSt>(_1bc3ae3bd_BreakSt{._field_It=(*_18657_scope.alloc)._field_it, ._field_Mtch=0});;
			}
		}
		else if (((*_18657_scope.alloc)._field_cse != 0LLU)) {
			_case_begin_1c0cccab8:;
			{
				return jule::new_ptr<_1bc3ae3bd_BreakSt>(_1bc3ae3bd_BreakSt{._field_It=0, ._field_Mtch=static_cast<jule::Uintptr>((*(((_1bc3b2080_Case*)((*_18657_scope.alloc)._field_cse))))._field_Owner)});;
			}
		}
		_match_end_1c0ccc8ba:;
	};
	_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*(_185932_b))._field_Token, static_cast<jule::Str>(jule::Str::lit("break keyword is cannot used at out of iteration and match cases", 64)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline void _1bc3c4933_checkBreak(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc272aab_BreakSt> _188127_b) {
	if (((*(_188127_b))._field_Label != nullptr)) {
		jule::Ptr<_1bc3ae3bd_BreakSt> _18838_brk = _1bc3c4339_checkBreakWithLabel(_self_, _188127_b);;
		(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18838_brk, &__jule_any_type47); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1bc3ae3bd_BreakSt> _18887_brk = _1bc3c467a_checkPlainBreak(_self_, _188127_b);;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18887_brk, &__jule_any_type47); __jule_collection; }));
}



inline void _1bc3c4bdb_checkRet(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc270c30_RetSt> _189229_r) {
	if (_1bc3b732c_isDeferred(_self_)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_189229_r))._field_Token, static_cast<jule::Str>(jule::Str::lit("deferred scopes are not supports return statements", 50)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc3b2b1e_RetSt> _18977_rt = jule::new_ptr<_1bc3b2b1e_RetSt>(_1bc3b2b1e_RetSt{._field_Func=(*(_1bc3b786b_getRoot(_self_)))._field_owner, ._field_Expr=jule::Any(nullptr)});;
	(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_18977_rt, &__jule_any_type48); __jule_collection; }));
	jule::Ptr<_1bc4804a0_retTypeChecker> _19027_rtc = jule::new_ptr<_1bc4804a0_retTypeChecker>(_1bc4804a0_retTypeChecker{._field_sc=_self_, ._field_f=(*(_18977_rt))._field_Func, ._field_types=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr), ._field_exprs=jule::Slice<jule::Ptr<_1bc261c43_Expr>>(nullptr), ._field_errorToken=(*(_189229_r))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=true});;
	jule::Bool _19083_ok = _1bc481490_check(_19027_rtc.ptr(), &((*_189229_r.alloc)._field_Expr));;
	if ((!(_19083_ok))) {
		return;;
	};
	if (((*_189229_r.alloc)._field_Expr != nullptr)) {
		(*_18977_rt.alloc)._field_Expr=(*_19027_rtc.alloc)._field_model;
	};
}



inline void _1bc3c4e94_checkUseExpr(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc262617_UseExpr> _191829_ue) {
	if (((*(_self_))._field_result == nullptr)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191829_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable out of non-void returned exceptional handler scopes", 82)), jule::Slice<jule::Any>());
		return;;
	};
	if (_1bc3b732c_isDeferred(_self_)) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191829_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions cannot useable in deferred scopes", 49)), jule::Slice<jule::Any>());
	};
	if ((((*(_self_))._field_i + 1LL) < (*((*_self_.alloc)._field_tree))._field_Stmts.len())) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_191829_ue))._field_Token, static_cast<jule::Str>(jule::Str::lit("use expressions must be last statement of scope", 47)), jule::Slice<jule::Any>());
	};
}



inline void _1bc3c524c_checkNode(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Any* _193431_node) {
	{
		auto &_match_expr{ (*(_193431_node)) };
		
		if (_match_expr.type == &__jule_any_type49) {
			_case_begin_1be041548:;
			{
				_1bc3baa5b_checkAnonScope(_self_, (*(_193431_node)).cast_ptr<_1bc26ca0c_ScopeTree>(&__jule_any_type49));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1be0425d2:;
			{
				_1bc3b9351_checkVarDecl(_self_, (*(_193431_node)).cast_ptr<_1bc270856_VarDecl>(&__jule_any_type50));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1be042648:;
			{
				_1bc3b98b2_checkTypeAliasDecl(_self_, (*(_193431_node)).cast_ptr<_1bc274508_TypeAliasDecl>(&__jule_any_type51));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1be041933:;
			{
				_1bc3bb177_checkExpr(_self_, (*(_193431_node)).cast_ptr<_1bc261c43_Expr>(&__jule_any_type52));
			}
		}
		else if (_match_expr.type == &__jule_any_type53) {
			_case_begin_1be041999:;
			{
				_1bc3bbab2_checkConditional(_self_, (*(_193431_node)).cast_ptr<_1bc273cbb_Conditional>(&__jule_any_type53));
			}
		}
		else if (_match_expr.type == &__jule_any_type54) {
			_case_begin_1be040eb5:;
			{
				_1bc3bd92c_checkIter(_self_, (*(_193431_node)).cast_ptr<_1bc2714a0_Iter>(&__jule_any_type54));
			}
		}
		else if (_match_expr.type == &__jule_any_type55) {
			_case_begin_1be04102b:;
			{
				_1bc3be6a8_checkCont(_self_, (*(_193431_node)).cast_ptr<_1bc272e85_ContSt>(&__jule_any_type55));
			}
		}
		else if (_match_expr.type == &__jule_any_type56) {
			_case_begin_1be0428e0:;
			{
				_1bc3be961_checkLabel(_self_, (*(_193431_node)).cast_ptr<_1bc269ee3_LabelSt>(&__jule_any_type56));
			}
		}
		else if (_match_expr.type == &__jule_any_type57) {
			_case_begin_1be042956:;
			{
				_1bc3bec19_pushGoto(_self_, (*(_193431_node)).cast_ptr<_1bc26a3bc_GotoSt>(&__jule_any_type57));
			}
		}
		else if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1be0429bc:;
			{
				_1bc3c19c9_checkAssignSt(_self_, (*(_193431_node)).cast_ptr<_1bc26b3ac_AssignSt>(&__jule_any_type58));
			}
		}
		else if (_match_expr.type == &__jule_any_type59) {
			_case_begin_1be042a33:;
			{
				_1bc3c3c40_checkMatch(_self_, (*(_193431_node)).cast_ptr<_1bc2752c8_MatchCase>(&__jule_any_type59));
			}
		}
		else if (_match_expr.type == &__jule_any_type60) {
			_case_begin_1be042a99:;
			{
				_1bc3c3ee8_checkFall(_self_, (*(_193431_node)).cast_ptr<_1bc26a6b9_FallSt>(&__jule_any_type60));
			}
		}
		else if (_match_expr.type == &__jule_any_type61) {
			_case_begin_1be042b21:;
			{
				_1bc3c4933_checkBreak(_self_, (*(_193431_node)).cast_ptr<_1bc272aab_BreakSt>(&__jule_any_type61));
			}
		}
		else if (_match_expr.type == &__jule_any_type62) {
			_case_begin_1be042b98:;
			{
				_1bc3c4bdb_checkRet(_self_, (*(_193431_node)).cast_ptr<_1bc270c30_RetSt>(&__jule_any_type62));
			}
		}
		else if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1be042c20:;
			{
				_1bc3c4e94_checkUseExpr(_self_, (*(_193431_node)).cast_ptr<_1bc262617_UseExpr>(&__jule_any_type63));
			}
		}
		else {
			_case_begin_1c0cd256d:;
			{
				jule::println(_1be2ec53a_toStr(jule::Str::lit("error <unimplemented scope node>", 32)));
			}
		}
		_match_end_1c0cd49c1:;
	};
}



inline void _1bc3c544a_checkResult(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	_1bc26c39c_Stmt _19727_stmt = (*((*(_self_))._field_tree))._field_Stmts[((*(*(_self_))._field_tree.alloc)._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _19727_stmt._field_Data };
		
		if (_match_expr.type == &__jule_any_type63) {
			_case_begin_1c1105682:;
			{
				jule::Ptr<_1bc262617_UseExpr> _19758_ue = _19727_stmt._field_Data.unsafe_cast_ptr<_1bc262617_UseExpr>();;
				jule::Ptr<_1bc48354c_Data> _19768_d = _1bc4a4309_evalExpr(_1bc414cc5_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)), (*(_19758_ue))._field_Expr);;
				if ((_19768_d == nullptr)) {
					return;;
				};
				(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19768_d, &__jule_any_type22); __jule_collection; }));
				jule::Ptr<_1bc4804a0_retTypeChecker> _19818_rtc = jule::new_ptr<_1bc4804a0_retTypeChecker>(_1bc4804a0_retTypeChecker{._field_sc=_self_, ._field_f=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_types=_1bc303345_Types((*((*_self_.alloc)._field_result))._field_func.ptr()), ._field_exprs=jule::Slice<jule::Ptr<_1bc261c43_Expr>>(nullptr), ._field_errorToken=(*((*_19758_ue.alloc)._field_Expr))._field_Token, ._field_model=jule::Any(nullptr), ._field_mutable=(*(*(_self_))._field_result.alloc)._field_mutable});;
				_1bc481490_check(_19818_rtc.ptr(), &((*_19758_ue.alloc)._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1c11062ba:;
			{
				jule::Ptr<_1bc261c43_Expr> _19898_expr = _19727_stmt._field_Data.unsafe_cast_ptr<_1bc261c43_Expr>();;
				jule::Ptr<_1bc48354c_Data> _19908_d = _1bc4a4309_evalExpr(_1bc414cc5_eval((*_self_.alloc)._field_s, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)), _19898_expr);;
				if ((_19908_d == nullptr)) {
					return;;
				};
				{
					auto &_match_expr{ (*(_19908_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1bbd76418:;
						{
							jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _19969_m = (*(_19908_d))._field_Model.unsafe_cast_ptr<_1bc2e9d31_BuiltinErrorCallExprModel>();;
							_1bc3badbe_processErrorCall(_self_, &(_19969_m), (*(_19898_expr))._field_Token);
							(*((*_self_.alloc)._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_19908_d, &__jule_any_type22); __jule_collection; }));
						}
					}
					else {
						_case_begin_1bbd765e4:;
						{
							return;;
						}
					}
					_match_end_1bbd7657d:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type57 || _match_expr.type == &__jule_any_type61 || _match_expr.type == &__jule_any_type55 || _match_expr.type == &__jule_any_type62) {
			_case_begin_1c1105929:;
			{
				_1bc3c524c_checkNode(_self_, &(_19727_stmt._field_Data));
			}
		}
		else {
			_case_begin_1c11058b3:;
			{
				_1bc3c524c_checkNode(_self_, &(_19727_stmt._field_Data));
				return;;
			}
		}
		_match_end_1c110584c:;
	};
	(*_self_.alloc)._field_result=nullptr;
}



inline void _1bc3c5648_checkTree(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	(*(_self_))._field_i=0LL;
	jule::I32 _20187_n = (*((*_self_.alloc)._field_tree))._field_Stmts.len();;
	if (((*_self_.alloc)._field_result != nullptr)) {
		(_20187_n)--;
	};
	for (; ((*_self_.alloc)._field_i < _20187_n); ((*_self_.alloc)._field_i)++) {
		{
			_1bc26c39c_Stmt _20268_stmt = (*(*(_self_))._field_tree.alloc)._field_Stmts[(*_self_.alloc)._field_i];;
			_1bc3c524c_checkNode(_self_, &(_20268_stmt._field_Data));
			if (_1bc3b7096_stopped(_self_)) {
				return;;
			};
		}
	_iter_next_1bbd7a73b:;
	}
	_iter_end_1bbd7a73b:;;
	if ((((*_self_.alloc)._field_result != nullptr) && ((*(*(_self_))._field_tree.alloc)._field_Stmts.len() != 0LL))) {
		_1bc3c544a_checkResult(_self_);
	};
}



inline void _1bc3c59ab_checkGoto(_1bc3b448e_scopeChecker* _self_, jule::Ptr<_1bc3aeed4_GotoSt>* _203730_gt, jule::Ptr<_1bc3b30c5_scopeLabel>* _203748_label) {
	jule::I32 _20387_n = 0LL;;
	if (((*((*(_203730_gt))))._field_Scope == (*((*((*(_203748_label))))._field_node))._field_Scope)) {
		if (((*((*(_203730_gt))))._field_Index > (*(*((*(_203748_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20387_n=(*((*(_203730_gt))))._field_Index;
	} else if (((*((*((*(_203730_gt))))._field_Scope))._field_ChildIndex > (*((*((*((*(_203748_label))))._field_node))._field_Scope))._field_ChildIndex)) {
		jule::Ptr<_1bc3abd27_Scope> _20518_gtsc = (*((*(_203730_gt))))._field_Scope;;
		while ((((*_20518_gtsc.alloc)._field_ChildIndex - 1LL) > (*(*((*((*(_203748_label))))._field_node))._field_Scope.alloc)._field_ChildIndex)) {
			{
				_20518_gtsc=(*(_20518_gtsc))._field_Parent;
			}
		_iter_next_1bbd80b92:;
		}
		_iter_end_1bbd80b92:;;
		if (((*_20518_gtsc.alloc)._field_StmtIndex > (*(*((*(_203748_label))))._field_node.alloc)._field_Index)) {
			return;;
		};
		_20387_n=(*_20518_gtsc.alloc)._field_StmtIndex;
	} else {
		_20387_n=0LL;
	};
	jule::Ptr<_1bc3abd27_Scope> _20737_s = (*((*((*(_203748_label))))._field_node))._field_Scope;;
	jule::I32 _20747_i = ((*(*((*(_203748_label))))._field_node.alloc)._field_Index - 1LL);;
	for (;;) {
		{
			for (; (_20747_i >= _20387_n); (_20747_i)--) {
				{
					jule::Any _20779_stmt = (*(_20737_s))._field_Stmts[_20747_i];;
					if (_1bc3c74a2_stmtIsDef(&(_20779_stmt))) {
						_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_203730_gt))))._field_Token, static_cast<jule::Str>(jule::Str::lit("goto @ jumps over declaration(s)", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_203730_gt))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return;;
					};
				}
			_iter_next_1bbd8469b:;
			}
			_iter_end_1bbd8469b:;;
			if (((*(_20737_s))._field_ChildIndex > (*((*((*(_203730_gt))))._field_Scope))._field_ChildIndex)) {
				_20737_s=(*(_20737_s))._field_Parent;
				_20747_i=((*_20737_s.alloc)._field_StmtIndex - 1LL);
				goto _iter_next_1bbd84327;
			};
			goto _iter_end_1bbd84327;
		}
	_iter_next_1bbd84327:;
	}
	_iter_end_1bbd84327:;;
}



inline void _1bc3c5ba9_checkGotos(_1bc3b448e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_gotos)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd8735d:;
		if (it != expr_end) {
			jule::Ptr<_1bc3aeed4_GotoSt> _209515_gt = *it;
			{
				jule::Ptr<_1bc3b30c5_scopeLabel> _20968_label = _1bc3b8b9c_findLabelAll(_self_, &((*(_209515_gt))._field_Ident));;
				if ((_20968_label == nullptr)) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_209515_gt.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("not exist any label in this identifier: @", 41)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_209515_gt.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					goto _iter_next_1bbd8735d;
				};
				(*_209515_gt.alloc)._field_Label=(*(_20968_label))._field_node;
				(*_20968_label.alloc)._field_used=true;
				_1bc3c59ab_checkGoto(_self_, &(_209515_gt), &(_20968_label));
			}
			_iter_next_1bbd8735d:;
			++it;
			goto _iter_begin_1bbd8735d;
		}
		_iter_end_1bbd8735d:;
	};
}



inline void _1bc3c5da7_checkLabels(_1bc3b448e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_labels)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd89e76:;
		if (it != expr_end) {
			jule::Ptr<_1bc3b30c5_scopeLabel> _210810_l = *it;
			{
				if ((!((*(_210810_l))._field_used))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_210810_l.alloc)._field_token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_210810_l.alloc)._field_node))._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bbd89e76:;
			++it;
			goto _iter_begin_1bbd89e76;
		}
		_iter_end_1bbd89e76:;
	};
}



inline void _1bc3c60a5_checkVars(_1bc3b448e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd8bc03:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _211610_v = *it;
			{
				if (((((!((*(_211610_v))._field_Used)) && (!((*_211610_v.alloc)._field_Constant))) && (!(_1bc2498eb_IsIgnoreIdent((*_211610_v.alloc)._field_Ident)))) && (!(_1bc249bb5_IsAnonIdent((*_211610_v.alloc)._field_Ident))))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_211610_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_211610_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bbd8bc03:;
			++it;
			goto _iter_begin_1bbd8bc03;
		}
		_iter_end_1bbd8bc03:;
	};
}



inline void _1bc3c62a3_checkAliases(_1bc3b448e_scopeChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_table))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bbd8e50d:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b5705_TypeAlias> _212410_a = *it;
			{
				if ((((!((*(_212410_a))._field_Used)) && (!(_1bc2498eb_IsIgnoreIdent((*_212410_a.alloc)._field_Ident)))) && (!(_1bc249bb5_IsAnonIdent((*_212410_a.alloc)._field_Ident))))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_212410_a.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("@ declared but not used", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_212410_a.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1bbd8e50d:;
			++it;
			goto _iter_begin_1bbd8e50d;
		}
		_iter_end_1bbd8e50d:;
	};
}



inline void _1bc3c6616_check(jule::Ptr<_1bc3b448e_scopeChecker> _self_, jule::Ptr<_1bc26ca0c_ScopeTree>* _213227_tree, jule::Ptr<_1bc3abd27_Scope>* _213255_s) {
	(*((*(_213255_s))))._field_Deferred=(*((*(_213227_tree))))._field_Deferred;
	(*((*(_213255_s))))._field_Unsafety=(*((*(_213227_tree))))._field_Unsafety;
	jule::I32 _21363_errors = (*((*(_self_))._field_s))._field_errors.len();;
	(*_self_.alloc)._field_tree=(*(_213227_tree));
	(*_self_.alloc)._field_scope=(*(_213255_s));
	_1bc3c5648_checkTree(_self_);
	if ((_21363_errors == (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		_1bc3c60a5_checkVars(_self_);
		_1bc3c62a3_checkAliases(_self_);
		if (_1bc3b6b12_isRoot(_self_)) {
			_1bc3c5ba9_checkGotos(_self_);
			_1bc3c5da7_checkLabels(_self_);
		};
	};
}



inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3c689c_newChildChecker(jule::Ptr<_1bc3b448e_scopeChecker> _self_) {
	jule::Ptr<_1bc3b448e_scopeChecker> _21567_base = _1bc3a9781_newScopeCheckerBase(&((*(_self_))._field_s), nullptr);;
	(*(_21567_base))._field_parent=_self_;
	(*_21567_base.alloc)._field_labels=(*_self_.alloc)._field_labels;
	(*_21567_base.alloc)._field_gotos=(*_self_.alloc)._field_gotos;
	(*_21567_base.alloc)._field_childIndex=((*_self_.alloc)._field_childIndex + 1LL);
	return _21567_base;;
}








inline jule::Bool _1bc3c831b_directiveChecker_eq(_1bc3c831b_directiveChecker *_self_, _1bc3c831b_directiveChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_o == _self_->_field_o);
}

inline void _1bc3c876c_checkCdef(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _1626_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbd9876a:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc2ee055_Fn>()))._field_Binded) {
					goto _match_end_1bbd975c1;
				};
				goto _case_begin_1bbd97637;
			}
		}
		else {
			_case_begin_1bbd97637:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_1626_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bbd975c1:;
	};
	if (((*((*(_1626_d))))._field_Args.len() > 0LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_1626_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1bc3c8a25_checkTypedef(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _3229_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bbd9b98d:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Binded) {
					goto _match_end_1bbd9a7e4;
				};
				goto _case_begin_1bbd9a85a;
			}
		}
		else {
			_case_begin_1bbd9a85a:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_3229_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bbd9a7e4:;
	};
	if (((*((*(_3229_d))))._field_Args.len() > 0LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_3229_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1bc3c8ccd_checkNamespace(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _4835_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bbd9ebb1:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Binded))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbd9d7d6:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc2ee055_Fn>()))._field_Binded))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bbd9dae4:;
			{
				if ((!((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Binded))) {
					_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1bbd9da7d:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_4835_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bbd9da17:;
	};
	if (((*((*(_4835_d))))._field_Args.len() == 0LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_4835_d))))._field_Args.len() > 1LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_4835_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_4835_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc247014_Token> _733_arg = (*((*(_4835_d))))._field_Args[0LL];;
	if (((*(_733_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_733_arg))._field_Kind[0LL] != '\"')) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _733_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_4835_d))))._field_Args[0LL]))._field_Kind=(*(_733_arg))._field_Kind.slice(1LL, ((*_733_arg.alloc)._field_Kind.len() - 1LL));
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bbdaa381:;
			{
				if ((_1bc4acc6e_findDirective(&((*((*(_self_))._field_d))), static_cast<jule::Str>(jule::Str::lit("typedef", 7))) == nullptr)) {
					jule::Ptr<_1bc25bd2b_Directive> _919_typedef = jule::new_ptr<_1bc25bd2b_Directive>(_1bc25bd2b_Directive{._field_Tag=jule::new_ptr<_1bc247014_Token>((*((*((*(_4835_d))))._field_Tag))), ._field_Args=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr)});;
					(*(*(_919_typedef))._field_Tag.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("typedef", 7));
					(*(*(_self_))._field_d.alloc)=jule::append((*(*(_self_))._field_d.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _919_typedef; __jule_collection; }));
				};
			}
		}
		_match_end_1bbdaa31a:;
	};
}



inline void _1bc3c9086_checkDeprecated(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _10036_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1bbdadc9c:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Binded) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1bbdac949:;
			{
				jule::Ptr<_1bc2ee055_Fn> _1078_f = (*(_self_))._field_o.unsafe_cast_ptr<_1bc2ee055_Fn>();;
				if ((((*(_1078_f))._field_Binded || _1bc2eea28_IsEntryPoint(_1078_f)) || _1bc2eecae_IsInit(_1078_f))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1bbdacbd0:;
			{
				if ((*((*(_self_))._field_o.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Binded) {
					_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_10036_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1bbdacb69:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_10036_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_10036_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1bbdacb03:;
	};
	if (((*((*(_10036_d))))._field_Args.len() == 0LL)) {
		return;;
	};
	if (((*((*(_10036_d))))._field_Args.len() > 1LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_10036_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_10036_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc247014_Token> _1263_arg = (*((*(_10036_d))))._field_Args[0LL];;
	if (((*(_1263_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1263_arg))._field_Kind[0LL] != '\"')) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _1263_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_10036_d))))._field_Args[0LL]))._field_Kind=(*(_1263_arg))._field_Kind.slice(1LL, ((*_1263_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1bc3c933e_checkTest(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _14126_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1c314bb9e:;
			{
				jule::Ptr<_1bc2ee055_Fn> _1444_f = (*(_self_))._field_o.unsafe_cast_ptr<_1bc2ee055_Fn>();;
				if ((((!((*(_1444_f))._field_Binded)) && (!(_1bc2eecae_IsInit(_1444_f)))) && (!(_1bc2eea28_IsEntryPoint(_1444_f))))) {
					goto _match_end_1c314aa05;
				};
				if (_1bc2ee792_IsMethod(_1444_f.ptr())) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*_1444_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot declare test methods", 31)), jule::Slice<jule::Any>());
					goto _match_end_1c314aa05;
				};
				goto _case_begin_1c314aa6b;
			}
		}
		else {
			_case_begin_1c314aa6b:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_14126_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1c314aa05:;
	};
	if (((*((*(_14126_d))))._field_Args.len() > 0LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_14126_d))))._field_Args[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1bc3c95e7_checkExport(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _16232_d) {
	{
		auto &_match_expr{ (*(_self_))._field_o };
		
		if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1c31518eb:;
			{
				jule::Ptr<_1bc2ee055_Fn> _1654_f = (*(_self_))._field_o.unsafe_cast_ptr<_1bc2ee055_Fn>();;
				if ((((((*(_1654_f))._field_Binded || _1bc2eecae_IsInit(_1654_f)) || _1bc2eea28_IsEntryPoint(_1654_f)) || _1bc2ee792_IsMethod(_1654_f)) || ((*_1654_f.alloc)._field_Generics.len() > 0LL))) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
					return;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c3150521:;
			{
				jule::Ptr<_1bc42dc12_Var> _1714_v = (*(_self_))._field_o.unsafe_cast_ptr<_1bc42dc12_Var>();;
				if (((*(_1714_v))._field_Binded || (*_1714_v.alloc)._field_Constant)) {
					_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		else {
			_case_begin_1c31507b8:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_16232_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
				return;;
			}
		}
		_match_end_1c3150752:;
	};
	if (((*((*(_16232_d))))._field_Args.len() > 1LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Args[1LL], static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_16232_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if (((*((*(_16232_d))))._field_Args.len() < 1LL)) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_16232_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc247014_Token> _1873_arg = (*((*(_16232_d))))._field_Args[0LL];;
	if (((*(_1873_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_1873_arg))._field_Kind[0LL] != '\"')) {
		_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _1873_arg, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*((*(_16232_d))))._field_Args[0LL]))._field_Kind=(*(_1873_arg))._field_Kind.slice(1LL, ((*_1873_arg.alloc)._field_Kind.len() - 1LL));
}



inline void _1bc3c98a0_checkDirective(_1bc3c831b_directiveChecker* _self_, jule::Ptr<_1bc25bd2b_Directive>* _20035_d) {
	{
		auto &_match_expr{ (*((*((*(_20035_d))))._field_Tag))._field_Kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cdef", 4))) {
			_case_begin_1c315db39:;
			{
				_1bc3c876c_checkCdef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("typedef", 7))) {
			_case_begin_1c315c9d4:;
			{
				_1bc3c8a25_checkTypedef(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("namespace", 9))) {
			_case_begin_1c315ca4a:;
			{
				_1bc3c8ccd_checkNamespace(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("deprecated", 10))) {
			_case_begin_1c315cab1:;
			{
				_1bc3c9086_checkDeprecated(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("test", 4))) {
			_case_begin_1c315cb27:;
			{
				_1bc3c933e_checkTest(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("export", 6))) {
			_case_begin_1c315cb8d:;
			{
				_1bc3c95e7_checkExport(_self_, _20035_d);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("build", 5)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
			_case_begin_1c315cc04:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("directive @ is not supported by define", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_20035_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1c3157eda:;
			{
				_1bc40ce00_pushErr((*(_self_))._field_s, (*((*(_20035_d))))._field_Tag, static_cast<jule::Str>(jule::Str::lit("invalid label: @", 16)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_20035_d))))._field_Tag.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1c315c907:;
	};
}



inline void _1bc3c9a9d_check(_1bc3c831b_directiveChecker* _self_) {
	{
		auto expr = &((*((*(_self_))._field_d)));
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c316190b:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _22315_d = *it;
			{
				_1bc3c98a0_checkDirective(_self_, &(_22315_d));
			}
			_iter_next_1c316190b:;
			++it;
			goto _iter_begin_1c316190b;
		}
		_iter_end_1c316190b:;
	};
}







inline jule::Ptr<_1bc3cab26_ReferenceStack> static__1bc3cae89_new(void) {
	return jule::new_ptr<_1bc3cab26_ReferenceStack>(_1bc3cab26_ReferenceStack{._field_buffer=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
}



inline jule::I32 _1bc3cb385_Len(_1bc3cab26_ReferenceStack* _self_) {
	return (*(_self_))._field_buffer.len();;
}



inline jule::Any _1bc3cb6c6_At(_1bc3cab26_ReferenceStack* _self_, jule::I32 _4318_i) {
	return (*(_self_))._field_buffer[_4318_i];;
}



inline void _1bc3cb97e_Push(_1bc3cab26_ReferenceStack* _self_, jule::Any _4824_ref) {
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_buffer; __jule_push_dest.push(_4824_ref); };
}



inline jule::Bool _1c14db11c_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc2810c5_StructIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14dc481:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type64) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1c14dc481:;
			++it;
			goto _iter_begin_1c14dc481;
		}
		_iter_end_1c14dc481:;
	};
	return false;;
}

inline jule::Bool _1c14e7348_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc302113_FnIns> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14e8668:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type65) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1c14e8668:;
			++it;
			goto _iter_begin_1c14e8668;
		}
		_iter_end_1c14e8668:;
	};
	return false;;
}

inline jule::Bool _1c398a355_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc42dc12_Var> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c398b6b9:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type7) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1c398b6b9:;
			++it;
			goto _iter_begin_1c398b6b9;
		}
		_iter_end_1c398b6b9:;
	};
	return false;;
}

inline jule::Bool _1c5e16812_Exist(_1bc3cab26_ReferenceStack* _self_, jule::Ptr<_1bc309769_Trait> _5320_t) {
	{
		auto expr = &((*(_self_))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e17a88:;
		if (it != expr_end) {
			jule::Any *_5410_ref = it;
			{
				if ((jule::Any(_5320_t, &__jule_any_type11) == (*(_5410_ref)))) {
					return true;;
				};
			}
			_iter_next_1c5e17a88:;
			++it;
			goto _iter_begin_1c5e17a88;
		}
		_iter_end_1c5e17a88:;
	};
	return false;;
}








inline jule::Bool _1bc3cc177_Pass_eq(_1bc3cc177_Pass *_self_, _1bc3cc177_Pass _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Text == _self_->_field_Text);
}





inline void _1bc3d2633_pushErr(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc247014_Token>* _30724_token, jule::Str _30746_fmt, jule::Slice<jule::Any> _30766_args) {
	{ jule::Slice<_1a9575ca1_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bc407dd9_compilerErr(_30724_token, true, _30746_fmt, _30766_args)); };
}



inline void _1bc3d2db4_pushSuggestion(_1bc3d1b2c_symBuilder* _self_, jule::Str _31630_fmt, jule::Slice<jule::Any> _31650_args) {
	{
		_1bc40900b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _31630_fmt, _31650_args);
	};
}



inline jule::Bool _1bc3d32b0_checkCppUseDeclPath(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc27585b_UseDecl>* _32036_decl, jule::Str* _32058_path) {
	jule::Bool __jule_func_result = false;
	jule::Str _3213_ext = _1abb3a4ea_Ext((*(_32058_path)));;
	if (((!(_1a982cb07_IsValidHeaderExt(_3213_ext))) && (!(_1a982cdc1_IsValidCppExt(_3213_ext))))) {
		_1bc3d2633_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid C++ extension: @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3213_ext, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a9cc3e6b_Stat _3283_info = ({
		auto except = static__1a9c2d0a1_Of((*(_32058_path)));
		(except.ok()) ? (except.result) : ({{
			_1bc3d2633_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32036_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			__jule_func_result = false;
			return __jule_func_result;;
		} _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if (_1a9cc4378_IsDir(&_3283_info)) {
		_1bc3d2633_pushErr(_self_, &((*((*(_32036_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_32036_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d35bd_buildCppHeaderImport(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc27585b_UseDecl>* _34041_decl) {
	jule::Str _3417_path = (*((*((*(_34041_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if ((!(_1a982c82c_IsStdHeaderPath(_3417_path)))) {
		_3417_path=_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1bc24d746_Dir((*((*((*(_34041_decl))))._field_Token))._field_File.ptr()); (*it++) = _3417_path; __jule_collection; }));
		jule::Bool _3458_ok = _1bc3d32b0_checkCppUseDeclPath(_self_, _34041_decl, &(_3417_path));;
		if ((!(_3458_ok))) {
			return nullptr;;
		};
		({
			__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1abb3a7b4_Abs(_3417_path);
			_3417_path = __jule_assign_result.__jule_result_arg0;
			_3458_ok = __jule_assign_result.__jule_result_arg1;
		});
		if ((!(_3458_ok))) {
			_1bc3d2633_pushErr(_self_, &((*((*(_34041_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	};
	return jule::new_ptr<_1bc3dcb9e_ImportInfo>(_1bc3dcb9e_ImportInfo{._field_Decl=(*(_34041_decl)), ._field_Path=_3417_path, ._field_LinkPath=(*(*((*(_34041_decl))))._field_Path.alloc)._field_Kind, ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=true, ._field_Std=false, ._field_Package=nullptr, ._field_ModId=0});;
}



inline jule::Str _1bc3d39b9_checkAbsPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Str _37033_filepath, jule::Ptr<_1bc27585b_UseDecl>* _37053_decl) {
	jule::Str _3713_modPath = ((_1bc3d9b9b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1bc3d8c11_GetModPath((*(_self_))._field_importer.data);;
	if ((_3713_modPath.len() == 0LL)) {
		_1bc3d2633_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("no module file found in current directory or any parent directory", 65)), jule::Slice<jule::Any>());
		_1bc3d2db4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"julec mod init\" command to initialize module", 49)), jule::Slice<jule::Any>());
		return jule::Str();;
	};
	_37033_filepath=_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _3713_modPath; (*it++) = _37033_filepath; __jule_collection; }));
	jule::Bool _37913_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1abb3a7b4_Abs(_37033_filepath);
		_37033_filepath = __jule_assign_result.__jule_result_arg0;
		_37913_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_37913_ok))) {
		_1bc3d2633_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1a9cc3e6b_Stat _3863_info = ({
		auto except = static__1a9c2d0a1_Of(_37033_filepath);
		(except.ok()) ? (except.result) : ({{
			_1bc3d2633_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a9cc4378_IsDir(&_3863_info)))) {
		_1bc3d2633_pushErr(_self_, &((*((*(_37053_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_37053_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _37033_filepath;;
}



inline jule::Str _1bc3d3db5_checkStdAbsPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Str _39936_filepath, jule::Ptr<_1bc27585b_UseDecl>* _39956_decl) {
	(_39936_filepath).mut_slice(4LL);;
	_39936_filepath=_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1abb3dc7e_PathStdlib; (*it++) = _39936_filepath; __jule_collection; }));
	jule::Bool _40213_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1abb3a7b4_Abs(_39936_filepath);
		_39936_filepath = __jule_assign_result.__jule_result_arg0;
		_40213_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_40213_ok))) {
		_1bc3d2633_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	_1a9cc3e6b_Stat _4093_info = ({
		auto except = static__1a9c2d0a1_Of(_39936_filepath);
		(except.ok()) ? (except.result) : ({{
			_1bc3d2633_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return jule::Str();;
		} _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a9cc4378_IsDir(&_4093_info)))) {
		_1bc3d2633_pushErr(_self_.ptr(), &((*((*(_39956_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("used directory path not found/access: @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_39956_decl))))._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		return jule::Str();;
	};
	return _39936_filepath;;
}



inline __jule_tuple_bool__jule_tuple_str _1bc3d4206_checkImpPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc27585b_UseDecl>* _42234_decl) {
	__jule_tuple_bool__jule_tuple_str __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	jule::Str _4233_path = (*((*((*(_42234_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind.len() - 1LL));;
	if (_1abb2dd4b_HasSuffix(_4233_path, jule::Str::lit("/", 1))) {
		_1bc3d2633_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	jule::Slice<jule::Str> _4283_parts = _1abb32e93_SplitAll(_4233_path, jule::Str::lit("/", 1));;
	if ((_4283_parts.len() == 0LL)) {
		_1bc3d2633_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=_4283_parts[0LL].equal("std", 3);
	{
		auto expr = &(_4283_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c319e31c:;
		if (it != expr_end) {
			jule::Str *_43410_part = it;
			{
				if ((((*(_43410_part))).empty() || _1bc2498eb_IsIgnoreIdent((*(_43410_part))))) {
					_1bc3d2633_pushErr(_self_.ptr(), &((*((*(_42234_decl))))._field_Path), static_cast<jule::Str>(jule::Str::lit("invalid import path: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_42234_decl))))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg1=_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = __jule_func_result.__jule_result_arg1; (*it++) = (*(_43410_part)); __jule_collection; }));
			}
			_iter_next_1c319e31c:;
			++it;
			goto _iter_begin_1c319e31c;
		}
		_iter_end_1c319e31c:;
	};
	if (__jule_func_result.__jule_result_arg0) {
		__jule_func_result.__jule_result_arg1=_1bc3d3db5_checkStdAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	} else {
		__jule_func_result.__jule_result_arg1=_1bc3d39b9_checkAbsPath(_self_, __jule_func_result.__jule_result_arg1, _42234_decl);
	};
	return __jule_func_result;;
}



inline void _1bc3d44ae_assignAlias(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _45233_imp) {
	jule::I32 _4537_i = _1abb2ede6_FindLast((*((*(_45233_imp))))._field_LinkPath, jule::Str::lit("/", 1));;
	(_4537_i)++;
	jule::Str _4553_path = (*((*(_45233_imp))))._field_LinkPath.slice(_4537_i);;
	(*((*(_45233_imp))))._field_Alias=_4553_path;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d4800_buildImport(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc27585b_UseDecl>* _45933_decl) {
	if ((*((*(_45933_decl))))._field_Binded) {
		return _1bc3d35bd_buildCppHeaderImport(_self_.ptr(), _45933_decl);;
	};
	jule::Bool _4633_std;
	jule::Str _4638_filepath;
	({
		__jule_tuple_bool__jule_tuple_str __jule_assign_result = _1bc3d4206_checkImpPath(_self_, _45933_decl);
		_4633_std = __jule_assign_result.__jule_result_arg0;
		_4638_filepath = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4638_filepath).empty()) {
		return nullptr;;
	};
	jule::Ptr<_1bc3dcb9e_ImportInfo> _4687_imp = jule::new_ptr<_1bc3dcb9e_ImportInfo>(_1bc3dcb9e_ImportInfo{._field_Decl=(*(_45933_decl)), ._field_Path=_4638_filepath, ._field_LinkPath=(*((*((*(_45933_decl))))._field_Path))._field_Kind.slice(1LL, ((*(*((*(_45933_decl))))._field_Path.alloc)._field_Kind.len() - 1LL)), ._field_Alias=jule::Str(), ._field_Duplicate=false, ._field_Binded=false, ._field_Std=_4633_std, ._field_Package=jule::new_ptr<_1bc3e0421_Package>(_1bc3e0421_Package{._field_Files=nullptr}), ._field_ModId=0});;
	if (((*((*(_45933_decl))))._field_Alias != nullptr)) {
		(*(_4687_imp))._field_Alias=(*(*((*(_45933_decl))))._field_Alias.alloc)._field_Kind;
	} else if ((!(_1bc3d7d86_isImplicitImport(_4687_imp)))) {
		_1bc3d44ae_assignAlias(_self_, &(_4687_imp));
	};
	return _4687_imp;;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d4b41_findUseDecl(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _48628_pkg) {
	return _1bc305875_SelectPackage((*(_self_))._field_table.ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>>((void*)__jule_anon_1c31a9910, jule::Ptr<__jule_anon_1c31a9910_ctx>::make(__jule_anon_1c31a9910_ctx{._48628_pkg=_48628_pkg}).as<jule::Uintptr>(), __jule_anon_1c31a9910_ctx_handler));;
}



inline jule::Bool _1bc3d4e82_checkDuplicateUseDecl(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _49442_pkg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc3dcb9e_ImportInfo> _4957_lpkg = _1bc3d4b41_findUseDecl(_self_, _49442_pkg);;
	if ((_4957_lpkg == nullptr)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	_1bc3d2633_pushErr(_self_, &((*((*((*(_49442_pkg))))._field_Decl))._field_Token), static_cast<jule::Str>(jule::Str::lit("use declaration duplication: @ is already used above", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49442_pkg))))._field_LinkPath, &__jule_any_type5); __jule_collection; }));
	_1bc3d2db4_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("remove this use declaration, already used, it is safe", 53)), jule::Slice<jule::Any>());
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Str _1bc3d52c3_getAsLinkPath(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Str _50434_path) {
	_1a95669ea_Builder _5057_sb = static__1a9567369_New(_50434_path.len());;
	if (_1abb2d9c7_HasPrefix(_50434_path, _1abb3dc7e_PathStdlib)) {
		(_50434_path).mut_slice(_1abb3dc7e_PathStdlib.len());;
		({
			auto except = _1a95679eb_WriteStr(&_5057_sb, jule::Str::lit("\"std", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:508:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&_5057_sb, _1abb34b21_ReplaceAll(_50434_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:509:4"));
			(except.result);
		});
		({
			auto except = _1a9567ca4_WriteByte(&_5057_sb, '\"');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:510:4"));
		});
		return _1a956837b_Str(&_5057_sb);;
	};
	jule::Str _5143_root;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1abb3a7b4_Abs(((_1bc3d9b9b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1bc3d8c11_GetModPath((*(_self_))._field_importer.data));
		_5143_root = __jule_assign_result.__jule_result_arg0;
	});
	(_50434_path).mut_slice(_5143_root.len());;
	if ((_50434_path[0LL] == 47LLU)) {
		(_50434_path).mut_slice(1LL);;
	};
	({
		auto except = _1a9567ca4_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:519:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&_5057_sb, _1abb34b21_ReplaceAll(_50434_path, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:520:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&_5057_sb, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:521:3"));
	});
	return _1a956837b_Str(&_5057_sb);;
}



inline void _1bc3d56e1_pushCycleError(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3d1b2c_symBuilder>* _52532_sb, jule::Str _52549_path, _1a95669ea_Builder* _52565_message) {
	;
	jule::Str _5273_refersTo = _1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc3d52c3_getAsLinkPath(_self_, _1bc24d746_Dir((*((*((*(_52532_sb))))._field_table))._field_File.ptr())), &__jule_any_type5); (*it++) = jule::Any(_1bc3d52c3_getAsLinkPath(_self_, _52549_path), &__jule_any_type5); __jule_collection; }));;
	jule::Str _5313_m = _1a956837b_Str(_52565_message);;
	({
		auto except = _1a95679eb_WriteStr(_52565_message, _1abb2d60e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:532:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_52565_message, _5273_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:533:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_52565_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:534:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_52565_message, _5313_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sym.jule:535:3"));
		(except.result);
	});
}



inline void _1bc3d5b0e_pushCrossCycleError(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3d1b2c_symBuilder>* _53837_target, jule::Ptr<_1bc3dcb9e_ImportInfo>* _53859_imp, jule::Ptr<_1bc247014_Token>* _53878_errorToken) {
	_1a95669ea_Builder _5397_message = static__1a9567369_New(32LL);;
	_1bc3d56e1_pushCycleError(_self_, &(_self_), (*((*(_53859_imp))))._field_Path, &(_5397_message));
	jule::Ptr<_1bc3d1b2c_symBuilder> _5437_owner = (*_self_.alloc)._field_owner;;
	jule::Ptr<_1bc3d1b2c_symBuilder> _5447_old = _self_;;
	while (((*(_5437_owner))._field_owner != nullptr)) {
		{
			_1bc3d56e1_pushCycleError(_self_, &((*_5447_old.alloc)._field_owner), _1bc24d746_Dir((*((*_5447_old.alloc)._field_table))._field_File.ptr()), &(_5397_message));
			if (((*_5437_owner.alloc)._field_owner == (*(_53837_target)))) {
				_1bc3d56e1_pushCycleError(_self_, _53837_target, _1bc24d746_Dir((*((*(_5437_owner))._field_table))._field_File), &(_5397_message));
				goto _iter_end_1c31b5a4d;
			};
			_5447_old=_5437_owner;
			_5437_owner=(*_5437_owner.alloc)._field_owner;
		}
	_iter_next_1c31b5a4d:;
	}
	_iter_end_1c31b5a4d:;;
	_1bc3d2633_pushErr(_self_, _53878_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in use declarations;\n@", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a956837b_Str(&_5397_message), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1bc3d600a_checkImportCycles(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo> _56134_imp, jule::Ptr<_1bc27585b_UseDecl>* _56153_decl) {
	if (((*(_56134_imp))._field_Path == _1bc24d746_Dir((*((*(_self_))._field_table))._field_File.ptr()))) {
		_1bc3d2633_pushErr(_self_, &((*((*(_56153_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("illegal cycle in use declaration, package @ refers to itself", 60)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc3d52c3_getAsLinkPath(_self_, (*_56134_imp.alloc)._field_Path), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	if (((*(_self_))._field_owner == nullptr)) {
		return true;;
	};
	jule::Ptr<_1bc3d1b2c_symBuilder> _5717_owner = (*(_self_))._field_owner;;
	_julec_label_1c31b9ed6:;
	if ((_1bc24d746_Dir((*((*(_5717_owner))._field_table))._field_File.ptr()) == (*(_56134_imp))._field_Path)) {
		_1bc3d5b0e_pushCrossCycleError(_self_, &(_5717_owner), &(_56134_imp), &((*((*(_56153_decl))))._field_Token));
		return false;;
	};
	if (((*(_5717_owner))._field_owner != nullptr)) {
		_5717_owner=(*_5717_owner.alloc)._field_owner;
		goto _julec_label_1c31b9ed6;
	};
	return true;;
}



inline void _1bc3d6428_checkPackageAccessibility(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc27585b_UseDecl>* _59242_decl, jule::Str* _59264_mod, jule::Str* _59275_path) {
	if ((((_1bc3d9b9b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1bc3d8c11_GetModPath((*(_self_))._field_importer.data) == (*(_59264_mod)))) {
		return;;
	};
	;
	jule::I32 _5973_i = _1abb2e643_Find((*(_59275_path)), jule::Str::lit("internal", 8));;
	if ((_5973_i == -1LL)) {
		return;;
	};
	if ((_5973_i == 0LL)) {
		if (((((*(_59275_path)).len() - 8LL) == 0LL) || _1abb2d9c7_HasPrefix((*(_59275_path)), jule::Str::lit("internal/", 9)))) {
			_1bc3d2633_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((*(_59275_path)).slice((_5973_i - 1LL)).equal("/internal", 9)) {
		_1bc3d2633_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _6153_n = ((_5973_i + 8LL) + 1LL);;
	if (((_6153_n < (*(_59275_path)).len()) && (*(_59275_path)).slice((_5973_i - 1LL), _6153_n).equal("/internal/", 10))) {
		_1bc3d2633_pushErr(_self_, &((*((*(_59242_decl))))._field_Token), static_cast<jule::Str>(jule::Str::lit("you cannot access to internal packages", 38)), jule::Slice<jule::Any>());
		return;;
	};
}



inline jule::Bool _1bc3d6824_importPackage(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _62235_imp, jule::Ptr<_1bc27585b_UseDecl>* _62258_decl) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_62235_imp))))._field_Binded) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc3dcb9e_ImportInfo> _6277_port = ((_1bc3d9b9b_ImporterMptrData*)(*(_self_))._field_importer.safe_type())->_1bc3d9393_GetImport((*(_self_))._field_importer.data, (*((*(_62235_imp))))._field_Path);;
	if ((_6277_port != nullptr)) {
		(*((*(_62235_imp))))._field_Package=(*_6277_port.alloc)._field_Package;
		(*((*(_62235_imp))))._field_Duplicate=true;
		jule::Str _6324_oldMod = ((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d8c11_GetModPath((*_self_.alloc)._field_importer.data);;
		((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d8a24_SetModPath((*_self_.alloc)._field_importer.data, ((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d9052_ModById((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_ModId));
		_1bc3d6428_checkPackageAccessibility(_self_, _62258_decl, &(_6324_oldMod), &((*_6277_port.alloc)._field_Path));
		((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d8a24_SetModPath((*_self_.alloc)._field_importer.data, _6324_oldMod);
	} else {
		if ((!(_1bc3d600a_checkImportCycles(_self_, (*(_62235_imp)), _62258_decl)))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
		jule::Str _6414_oldMod = ((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d8c11_GetModPath((*_self_.alloc)._field_importer.data);;
		__JULE_DEFER({
			((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d8a24_SetModPath((*_self_.alloc)._field_importer.data, _6414_oldMod);
		});;
		if ((*((*(_62235_imp))))._field_Std) {
			((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d8a24_SetModPath((*_self_.alloc)._field_importer.data, _1abb3dc7e_PathStdlib);
		};
		jule::Slice<jule::Ptr<_1bc25aa50_AST>> _6468_asts;
		jule::Slice<_1a9575ca1_Log> _64618_errors;
		({
			__jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log __jule_assign_result = ((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d978e_ImportPackage((*_self_.alloc)._field_importer.data, (*((*(_62235_imp))))._field_Path, (!((*((*(_62235_imp))))._field_Std)));
			_6468_asts = __jule_assign_result.__jule_result_arg0;
			_64618_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_64618_errors.len() > 0LL)) {
			(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
			__jule_func_result = false;
			return __jule_func_result;;
		};
		_1bc3d6428_checkPackageAccessibility(_self_, _62258_decl, &(_6414_oldMod), &((*((*(_62235_imp))))._field_Path));
		{
			auto expr = &(_6468_asts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c31cbe3d:;
			if (it != expr_end) {
				jule::Ptr<_1bc25aa50_AST> _65416_ast = *it;
				{
					jule::Ptr<_1bc305358_SymTab> _6559_table = static_cast<jule::Ptr<_1bc305358_SymTab>>(nullptr);;
					({
						__jule_tuple_x_1bc305358_SymTab__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bc4d702e_buildSymbols(&(_65416_ast), &((*_self_.alloc)._field_importer), _self_);
						_6559_table = __jule_assign_result.__jule_result_arg0;
						_64618_errors = __jule_assign_result.__jule_result_arg1;
					});
					if ((_64618_errors.len() > 0LL)) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,_64618_errors);
						__jule_func_result = false;
						return __jule_func_result;;
					};
					(*((*((*(_62235_imp))))._field_Package))._field_Files=jule::append((*(*((*(_62235_imp))))._field_Package.alloc)._field_Files,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc305358_SymTab>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6559_table; __jule_collection; }));
				}
				_iter_next_1c31cbe3d:;
				++it;
				goto _iter_begin_1c31cbe3d;
			}
			_iter_end_1c31cbe3d:;
		};
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3d6b65_importUseDecl(jule::Ptr<_1bc3d1b2c_symBuilder> _self_, jule::Ptr<_1bc27585b_UseDecl>* _66835_decl) {
	jule::Ptr<_1bc3dcb9e_ImportInfo> _6697_imp = _1bc3d4800_buildImport(_self_, _66835_decl);;
	if ((_6697_imp == nullptr)) {
		return nullptr;;
	};
	jule::Bool _6747_ok = _1bc3d4e82_checkDuplicateUseDecl(_self_, &(_6697_imp));;
	if ((!(_6747_ok))) {
		return nullptr;;
	};
	_6747_ok=_1bc3d6824_importPackage(_self_, &(_6697_imp), _66835_decl);
	(*((*_self_.alloc)._field_table))._field_Imports=jule::append((*(*(_self_))._field_table.alloc)._field_Imports,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6697_imp; __jule_collection; }));
	if (_6747_ok) {
		((_1bc3d9b9b_ImporterMptrData*)(*_self_.alloc)._field_importer.safe_type())->_1bc3d9a47_Imported((*_self_.alloc)._field_importer.data, _6697_imp);
		return _6697_imp;;
	};
	return nullptr;;
}



inline void _1bc3d6d63_importUseDecls(jule::Ptr<_1bc3d1b2c_symBuilder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_UseDecls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31d286c:;
		if (it != expr_end) {
			jule::Ptr<_1bc27585b_UseDecl> _68815_decl = *it;
			{
				_1bc3d6b65_importUseDecl(_self_, &(_68815_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					goto _iter_end_1c31d286c;
				};
			}
			_iter_next_1c31d286c:;
			++it;
			goto _iter_begin_1c31d286c;
		}
		_iter_end_1c31d286c:;
	};
}



inline void _1bc3d711b_appendNode(_1bc3d1b2c_symBuilder* _self_, _1bc25b90d_Node* _69731_node) {
	{
		auto &_match_expr{ (*(_69731_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type66) {
			_case_begin_1c31d3d46:;
			{
				(*((*(_self_))._field_table))._field_Impls=jule::append((*(*(_self_))._field_table.alloc)._field_Impls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3a7718_Impl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc3d1566_buildImpl((*(_69731_node))._field_Data.cast_ptr<_1bc2793ba_Impl>(&__jule_any_type66)); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type51) {
			_case_begin_1c31d3dac:;
			{
				jule::Ptr<_1bc4b5705_TypeAlias> _7028_ta = _1bc3ccab2_buildTypeAlias((*(_69731_node))._field_Data.cast_ptr<_1bc274508_TypeAliasDecl>(&__jule_any_type51));;
				(*((*(_self_))._field_table))._field_TypeAliases=jule::append((*(*(_self_))._field_table.alloc)._field_TypeAliases,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7028_ta; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c31d3e23:;
			{
				jule::Ptr<_1bc27d26a_Struct> _7058_srct = _1bc3cd453_buildStruct((*(_69731_node))._field_Data.cast_ptr<_1bc27851d_StructDecl>(&__jule_any_type67));;
				(*(*(_self_))._field_table.alloc)._field_Structs=jule::append((*(*(_self_))._field_table.alloc)._field_Structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27d26a_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7058_srct; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c31d3e89:;
			{
				jule::Ptr<_1bc2ee055_Fn> _7088_f = _1bc3ce102_buildFunc((*(_69731_node))._field_Data.cast_ptr<_1bc26e69b_FnDecl>(&__jule_any_type68));;
				(*(*(_self_))._field_table.alloc)._field_Funcs=jule::append((*(*(_self_))._field_table.alloc)._field_Funcs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ee055_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7088_f; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type69) {
			_case_begin_1c31d4000:;
			{
				jule::Ptr<_1bc309769_Trait> _7118_t = _1bc3ce94e_buildTrait((*(_69731_node))._field_Data.cast_ptr<_1bc278c5a_TraitDecl>(&__jule_any_type69));;
				(*(*(_self_))._field_table.alloc)._field_Traits=jule::append((*(*(_self_))._field_table.alloc)._field_Traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc309769_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7118_t; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c31d4066:;
			{
				jule::Ptr<_1bc42dc12_Var> _7148_v = _1bc3d0ed3_buildVar((*(_69731_node))._field_Data.cast_ptr<_1bc270856_VarDecl>(&__jule_any_type50));;
				(*(*(_self_))._field_table.alloc)._field_Vars=jule::append((*(*(_self_))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7148_v; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type70) {
			_case_begin_1c31d4819:;
			{
				jule::Ptr<_1bc30be20_Enum> _7178_e = _1bc3d04cc_buildEnum((*(_69731_node))._field_Data.cast_ptr<_1bc2768c3_EnumDecl>(&__jule_any_type70));;
				(*(*(_self_))._field_table.alloc)._field_Enums=jule::append((*(*(_self_))._field_table.alloc)._field_Enums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc30be20_Enum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7178_e; __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type71) {
			_case_begin_1c31d4880:;
			{
				jule::Ptr<_1bc30d62a_TypeEnum> _7208_e = _1bc3d0c19_buildTypeEnum((*(_69731_node))._field_Data.cast_ptr<_1bc27785d_TypeEnumDecl>(&__jule_any_type71));;
				(*(*(_self_))._field_table.alloc)._field_TypeEnums=jule::append((*(*(_self_))._field_table.alloc)._field_TypeEnums,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc30d62a_TypeEnum>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7208_e; __jule_collection; }));
			}
		}
		else {
			_case_begin_1c31d3cd0:;
			{
				_1bc3d2633_pushErr(_self_, &((*(_69731_node))._field_Token), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c31d3c69:;
	};
}



inline void _1bc3d7319_appendNodes(_1bc3d1b2c_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_Nodes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13bcae2:;
		if (it != expr_end) {
			_1bc25b90d_Node _72815_node = *it;
			{
				_1bc3d711b_appendNode(_self_, &(_72815_node));
			}
			_iter_next_1c13bcae2:;
			++it;
			goto _iter_begin_1c13bcae2;
		}
		_iter_end_1c13bcae2:;
	};
}



inline void _1bc3d75c2_pushDirectivePass(_1bc3d1b2c_symBuilder* _self_, jule::Ptr<_1bc25bd2b_Directive>* _73338_d) {
	if (((*((*(_73338_d))))._field_Args.len() == 0LL)) {
		_1bc3d2633_pushErr(_self_, &((*((*(_73338_d))))._field_Tag), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	} else if (((*((*(_73338_d))))._field_Args.len() > 1LL)) {
		jule::Ptr<_1bc247014_Token> _7384_arg = (*((*(_73338_d))))._field_Args[1LL];;
		_1bc3d2633_pushErr(_self_, &(_7384_arg), static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*((*(_73338_d))))._field_Tag))._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc247014_Token> _7423_arg = (*((*(_73338_d))))._field_Args[0LL];;
	if (((*(_7423_arg))._field_Id != static_cast<jule::U32>(4LLU))) {
		_1bc3d2633_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_7423_arg))._field_Kind[0LL] != '\"')) {
		_1bc3d2633_pushErr(_self_, &(_7423_arg), static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_self_))._field_table))._field_Passes=jule::append((*(*(_self_))._field_table.alloc)._field_Passes,({ auto __jule_collection = jule::Slice<_1bc3cc177_Pass>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc3cc177_Pass{._field_Token=(*((*(_73338_d))))._field_Tag, ._field_Text=(*(_7423_arg))._field_Kind.slice(1LL, ((*_7423_arg.alloc)._field_Kind.len() - 1LL))}; __jule_collection; }));
}



inline void _1bc3d77c0_appendTopDirectives(_1bc3d1b2c_symBuilder* _self_) {
	{
		auto expr = &((*((*(_self_))._field_ast))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0cdcb83:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _76015_d = *it;
			{
				{
					auto &_match_expr{ (*((*(_76015_d))._field_Tag))._field_Kind };
					
					if (_match_expr == static_cast<jule::Str>(jule::Str::lit("pass", 4))) {
						_case_begin_1c0cded50:;
						{
							_1bc3d75c2_pushDirectivePass(_self_, &(_76015_d));
						}
					}
					_match_end_1c0cdec73:;
				};
			}
			_iter_next_1c0cdcb83:;
			++it;
			goto _iter_begin_1c0cdcb83;
		}
		_iter_end_1c0cdcb83:;
	};
}



inline void _1bc3d79bd_build(jule::Ptr<_1bc3d1b2c_symBuilder> _self_) {
	(*(_self_))._field_table=jule::new_ptr<_1bc305358_SymTab>(_1bc305358_SymTab{._field_File=(*((*_self_.alloc)._field_ast))._field_File, ._field_Passes=jule::Slice<_1bc3cc177_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1bc27d26a_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1bc2ee055_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1bc309769_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1bc30be20_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1bc30d62a_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1bc3a7718_Impl>>(nullptr)});
	_1bc3d77c0_appendTopDirectives(_self_);
	_1bc3d6d63_importUseDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	_1bc3d7319_appendNodes(_self_);
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
}








inline jule::Bool _1bc3dcb9e_ImportInfo_eq(_1bc3dcb9e_ImportInfo *_self_, _1bc3dcb9e_ImportInfo _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Path == _self_->_field_Path) &&
		(_self_->_field_LinkPath == _self_->_field_LinkPath) &&
		(_self_->_field_Alias == _self_->_field_Alias) &&
		(_self_->_field_Duplicate == _self_->_field_Duplicate) &&
		(_self_->_field_Binded == _self_->_field_Binded) &&
		(_self_->_field_Std == _self_->_field_Std) &&
		(_self_->_field_Package == _self_->_field_Package) &&
		(_self_->_field_ModId == _self_->_field_ModId);
}

inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3dd1bb_SelectPackage(_1bc3dcb9e_ImportInfo* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc3dd5b7_FindVar(_1bc3dcb9e_ImportInfo* _self_, jule::Str _18923_ident, jule::Bool ) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3da460_findVarInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_18923_ident), false);;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3dd9b3_FindTypeAlias(_1bc3dcb9e_ImportInfo* _self_, jule::Str _20129_ident, jule::Bool ) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3da88e_findTypeAliasInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_20129_ident), false);;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc3dddae_FindStruct(_1bc3dcb9e_ImportInfo* _self_, jule::Str _21326_ident, jule::Bool ) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3dad45_findStructInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_21326_ident), false);;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc3de2aa_FindFn(_1bc3dcb9e_ImportInfo* _self_, jule::Str _22522_ident, jule::Bool ) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3db241_findFnInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_22522_ident), false);;
}



inline jule::Ptr<_1bc309769_Trait> _1bc3de5eb_FindTrait(_1bc3dcb9e_ImportInfo* _self_, jule::Str _23625_ident) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3db5b5_findTraitInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_23625_ident));;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc3de93c_FindEnum(_1bc3dcb9e_ImportInfo* _self_, jule::Str _24724_ident) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3db939_findEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_24724_ident));;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3dec7d_FindTypeEnum(_1bc3dcb9e_ImportInfo* _self_, jule::Str _25828_ident) {
	if ((!(_1bc3e0146_isLookupable(_self_)))) {
		return nullptr;;
	};
	return _1bc3dbdbd_findTypeEnumInPackage(&((*((*(_self_))._field_Package))._field_Files), &(_25828_ident));;
}



inline jule::Bool _1bc3e0146_isLookupable(_1bc3dcb9e_ImportInfo* _self_) {
	if ((*(_self_))._field_Binded) {
		return false;;
	};
	return true;;
}







inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3e08e9_SelectPackage(_1bc3e0421_Package* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> ) {
	return nullptr;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc3e0ce5_FindVar(_1bc3e0421_Package* _self_, jule::Str _28723_ident, jule::Bool _28735_binded) {
	return _1bc3da460_findVarInPackage(&((*(_self_))._field_Files), &(_28723_ident), _28735_binded);;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3e11e1_FindTypeAlias(_1bc3e0421_Package* _self_, jule::Str _29329_ident, jule::Bool _29341_binded) {
	return _1bc3da88e_findTypeAliasInPackage(&((*(_self_))._field_Files), &(_29329_ident), _29341_binded);;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc3e15dc_FindStruct(_1bc3e0421_Package* _self_, jule::Str _29926_ident, jule::Bool _29938_binded) {
	return _1bc3dad45_findStructInPackage(&((*(_self_))._field_Files), &(_29926_ident), _29938_binded);;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc3e19d8_FindFn(_1bc3e0421_Package* _self_, jule::Str _30522_ident, jule::Bool _30534_binded) {
	return _1bc3db241_findFnInPackage(&((*(_self_))._field_Files), &(_30522_ident), _30534_binded);;
}



inline jule::Ptr<_1bc309769_Trait> _1bc3e1d29_FindTrait(_1bc3e0421_Package* _self_, jule::Str _31125_ident) {
	return _1bc3db5b5_findTraitInPackage(&((*(_self_))._field_Files), &(_31125_ident));;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc3e216a_FindEnum(_1bc3e0421_Package* _self_, jule::Str _31724_ident) {
	return _1bc3db939_findEnumInPackage(&((*(_self_))._field_Files), &(_31724_ident));;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3e24ab_FindTypeEnum(_1bc3e0421_Package* _self_, jule::Str _32328_ident) {
	return _1bc3dbdbd_findTypeEnumInPackage(&((*(_self_))._field_Files), &(_32328_ident));;
}







inline jule::Ptr<_1bc38e337_comptimeTypeInfo> _1bc409869_pushComptimeTypeInfo(_1bc4093c4_commonSemaMeta* _self_, jule::Ptr<_1bc4b64e7_Type>* _21341_t) {
	{
		auto expr = &((*(_self_))._field_comptimeTypeInfos);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c321a72e:;
		if (it != expr_end) {
			jule::Ptr<_1bc38e337_comptimeTypeInfo> _21415_t2 = *it;
			{
				if ((((*((*(_21415_t2))._field_base))._field_BindIdent == (*((*(_21341_t))))._field_BindIdent) && _1bc4b6c34_Equal((*(_21415_t2))._field_base, (*(_21341_t))))) {
					return _21415_t2;;
				};
			}
			_iter_next_1c321a72e:;
			++it;
			goto _iter_begin_1c321a72e;
		}
		_iter_end_1c321a72e:;
	};
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _2197_t1 = jule::new_ptr<_1bc38e337_comptimeTypeInfo>(_1bc38e337_comptimeTypeInfo{._field_base=(*(_21341_t))});;
	{ jule::Slice<jule::Ptr<_1bc38e337_comptimeTypeInfo>> &__jule_push_dest = (*(_self_))._field_comptimeTypeInfos; __jule_push_dest.push(_2197_t1); };
	return _2197_t1;;
}







inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc40a4c4_SelectPackage(_1bc409eeb_sema* _self_, jule::Fn<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>> _24229_selector) {
	return _1bc305875_SelectPackage((*(_self_))._field_file.ptr(), _24229_selector);;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc40a8c0_FindVar(_1bc409eeb_sema* _self_, jule::Str _25223_ident, jule::Bool _25235_binded) {
	jule::Ptr<_1bc42dc12_Var> _2547_v = _1bc3da460_findVarInPackage(&((*(_self_))._field_files), &(_25223_ident), _25235_binded);;
	if ((_2547_v != nullptr)) {
		return _2547_v;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc40acbb_FindTypeAlias(_1bc409eeb_sema* _self_, jule::Str _26729_ident, jule::Bool _26741_binded) {
	jule::Ptr<_1bc4b5705_TypeAlias> _2697_ta = _1bc3da88e_findTypeAliasInPackage(&((*(_self_))._field_files), &(_26729_ident), _26741_binded);;
	if ((_2697_ta != nullptr)) {
		return _2697_ta;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc40b1b7_FindStruct(_1bc409eeb_sema* _self_, jule::Str _28226_ident, jule::Bool _28238_binded) {
	jule::Ptr<_1bc27d26a_Struct> _2847_s = _1bc3dad45_findStructInPackage(&((*(_self_))._field_files), &(_28226_ident), _28238_binded);;
	if ((_2847_s != nullptr)) {
		return _2847_s;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc40b5b3_FindFn(_1bc409eeb_sema* _self_, jule::Str _29722_ident, jule::Bool _29734_binded) {
	jule::Ptr<_1bc2ee055_Fn> _2997_f = _1bc3db241_findFnInPackage(&((*(_self_))._field_files), &(_29722_ident), _29734_binded);;
	if ((_2997_f != nullptr)) {
		return _2997_f;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc309769_Trait> _1bc40b904_FindTrait(_1bc409eeb_sema* _self_, jule::Str _31225_ident) {
	jule::Ptr<_1bc309769_Trait> _3147_t = _1bc3db5b5_findTraitInPackage(&((*(_self_))._field_files), &(_31225_ident));;
	if ((_3147_t != nullptr)) {
		return _3147_t;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc40bc45_FindEnum(_1bc409eeb_sema* _self_, jule::Str _32724_ident) {
	jule::Ptr<_1bc30be20_Enum> _3297_e = _1bc3db939_findEnumInPackage(&((*(_self_))._field_files), &(_32724_ident));;
	if ((_3297_e != nullptr)) {
		return _3297_e;;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc40c086_FindTypeEnum(_1bc409eeb_sema* _self_, jule::Str _34228_ident) {
	jule::Ptr<_1bc30d62a_TypeEnum> _3447_e = _1bc3dbdbd_findTypeEnumInPackage(&((*(_self_))._field_files), &(_34228_ident));;
	if ((_3447_e != nullptr)) {
		return _3447_e;;
	};
	return nullptr;;
}



inline jule::Bool _1bc40c493_isFlag(_1bc409eeb_sema* _self_, jule::I32 _35418_flags) {
	return (((*(_self_))._field_flags & _35418_flags) == _35418_flags);;
}



inline jule::Ptr<_1bc305358_SymTab> _1bc40c729_getCurrentFile(_1bc409eeb_sema* _self_) {
	return (*(_self_))._field_file;;
}



inline void _1bc40c9d2_setCurrentFile(_1bc409eeb_sema* _self_, jule::Ptr<_1bc305358_SymTab> _35734_f) {
	(*(_self_))._field_file=_35734_f;
}



inline void _1bc40ce00_pushErr(_1bc409eeb_sema* _self_, jule::Ptr<_1bc247014_Token> _35923_token, jule::Str _35945_fmt, jule::Slice<jule::Any> _35965_args) {
	{ jule::Slice<_1a9575ca1_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bc407dd9_compilerErr(&(_35923_token), true, _35945_fmt, _35965_args)); };
}



inline void _1bc40d263_pushSuggestion(_1bc409eeb_sema* _self_, jule::Str _36430_fmt, jule::Slice<jule::Any> _36450_args) {
	{
		_1bc40900b_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _36430_fmt, _36450_args);
	};
}



inline jule::Bool _1bc40d65e_isAccessibleDefine(_1bc409eeb_sema* _self_, jule::Bool _37030_public, jule::Ptr<_1bc247014_Token> _37044_token) {
	if ((_37030_public || ((*(_37044_token))._field_File == nullptr))) {
		return true;;
	};
	jule::Str _3753_selfDir = _1bc24d746_Dir((*((*(_self_))._field_file))._field_File.ptr());;
	jule::Str _3763_tokenDir = _1bc24d746_Dir((*(_37044_token))._field_File.ptr());;
	if ((_3753_selfDir == _3763_tokenDir)) {
		return true;;
	};
	if ((_1bc3e28eb_isStdPackage(&(_3763_tokenDir), jule::Str::lit("runtime", 7)) && _1bc3e28eb_isStdPackage(&(_3753_selfDir), jule::Str()))) {
		return true;;
	};
	return false;;
}



inline jule::Bool _1bc40db15_isDuplicatedIdent(_1bc409eeb_sema* _self_, jule::Uintptr _39329_itself, jule::Str* _39347_ident, jule::Bool _39359_binded) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5ac411:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> *_39410_f = it;
			{
				if (_1bc308c0d_isDuplicatedIdent((*(_39410_f)).ptr(), _39329_itself, _39347_ident, _39359_binded)) {
					return true;;
				};
			}
			_iter_next_1bd5ac411:;
			++it;
			goto _iter_begin_1bd5ac411;
		}
		_iter_end_1bd5ac411:;
	};
	return false;;
}



inline void _1bc40de78_checkDirectives(jule::Ptr<_1bc409eeb_sema> _self_, jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _40237_d, jule::Any _40263_o) {
	_1bc3c831b_directiveChecker _4037_dc = _1bc3c831b_directiveChecker{._field_s=_self_, ._field_d=((jule::Ptr<jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>>)(_40237_d)), ._field_o=_40263_o};;
	_1bc3c9a9d_check(&_4037_dc);
}



inline jule::Bool _1bc40e42e_checkGenericQuantity(_1bc409eeb_sema* _self_, jule::I32 _41136_required, jule::I32 _41151_given, jule::Ptr<_1bc247014_Token> _41163_token) {
	jule::Bool __jule_func_result = false;
	{
		
		if (((_41136_required == 0LL) && (_41151_given > 0LL))) {
			_case_begin_1bd5b0117:;
			{
				_1bc40ce00_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type have not generics but instantiate like generics", 52)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if (((_41136_required > 0LL) && (_41151_given == 0LL))) {
			_case_begin_1bd5b018e:;
			{
				_1bc40ce00_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required < _41151_given)) {
			_case_begin_1bd5b0216:;
			{
				_1bc40ce00_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("overflow generics", 17)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_41136_required > _41151_given)) {
			_case_begin_1bd5b028d:;
			{
				_1bc40ce00_pushErr(_self_, _41163_token, static_cast<jule::Str>(jule::Str::lit("missing generics", 16)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1bd5b004b:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1bd5aee6e:;
	};
}



inline jule::Bool _1bc410463_isUseAliasDuplication(_1bc409eeb_sema* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _46938_imp) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d10bc8:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _47015_imp2 = *it;
			{
				if ((_47015_imp2 == (*(_46938_imp)))) {
					goto _iter_end_1c0d10bc8;
				};
				if (((*(_47015_imp2))._field_Alias == (*((*(_46938_imp))))._field_Alias)) {
					return true;;
				};
			}
			_iter_next_1c0d10bc8:;
			++it;
			goto _iter_begin_1c0d10bc8;
		}
		_iter_end_1c0d10bc8:;
	};
	return false;;
}



inline jule::Bool _1bc4107a4_checkAutoAlias(_1bc409eeb_sema* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _48135_imp) {
	if ((*((*(_48135_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
		return true;;
	};
	jule::Bool _4863_valid = _1bc42c66c_isValidImpAlias((*((*(_48135_imp))))._field_Alias);;
	if (_4863_valid) {
		if (_1bc410463_isUseAliasDuplication(_self_, _48135_imp)) {
			_1bc40ce00_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_48135_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
	} else {
		_1bc40ce00_pushErr(_self_, (*((*((*(_48135_imp))))._field_Decl))._field_Path, static_cast<jule::Str>(jule::Str::lit("import path is not suitable for auto-aliasing: @", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*((*(_48135_imp))))._field_Decl.alloc)._field_Path))._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an alias manually to import path, like: use <alias> @", 58)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*((*(_48135_imp))))._field_Decl))._field_Path.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _4863_valid;;
}



inline jule::Bool _1bc410ae5_checkImport(_1bc409eeb_sema* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo>* _49932_imp) {
	if ((*((*(_49932_imp))))._field_Binded) {
		return true;;
	};
	if (((*((*((*(_49932_imp))))._field_Decl))._field_Alias != nullptr)) {
		if (_1bc2498eb_IsIgnoreIdent((*((*(_49932_imp))))._field_Alias)) {
			_1bc40ce00_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
		} else if (_1bc410463_isUseAliasDuplication(_self_, _49932_imp)) {
			_1bc40ce00_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: @ is already used for another use declaration above", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_49932_imp))))._field_Alias, &__jule_any_type5); __jule_collection; }));
			_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename alias for this use declaration to avoid duplication", 58)), jule::Slice<jule::Any>());
		};
		if ((*((*(_49932_imp))))._field_LinkPath.equal("std/unsafe", 10)) {
			_1bc40ce00_pushErr(_self_, (*(*((*(_49932_imp))))._field_Decl.alloc)._field_Alias, static_cast<jule::Str>(jule::Str::lit("expected plain use declaration for this package like: @", 55)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("use \"std/unsafe\"", 16), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else if (((!(_1bc3d7d86_isImplicitImport((*(_49932_imp))))) && (!(_1bc4107a4_checkAutoAlias(_self_, _49932_imp))))) {
		return false;;
	};
	if (((*((*((*(_49932_imp))))._field_Package))._field_Files.len() == 0LL)) {
		return true;;
	};
	if ((!((*((*(_49932_imp))))._field_Duplicate))) {
		jule::Ptr<_1bc409eeb_sema> _5268_sema = jule::new_ptr<_1bc409eeb_sema>(_1bc409eeb_sema{._field_errors=jule::Slice<_1a9575ca1_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1bc305358_SymTab>>(nullptr), ._field_file=jule::Ptr<_1bc305358_SymTab>(nullptr), ._field_flags=(*(_self_))._field_flags, ._field_meta=(*(_self_))._field_meta});;
		_1bc429d2e_check(_5268_sema, &((*((*((*(_49932_imp))))._field_Package))._field_Files));
		if (((*_5268_sema.alloc)._field_errors.len() != 0LL)) {
			((*(_self_))._field_errors).append((*_5268_sema.alloc)._field_errors);;
			(*_5268_sema.alloc)._field_errors=nullptr;
			return false;;
		};
	};
	return true;;
}



inline void _1bc410ce3_checkImports(_1bc409eeb_sema* _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0d1d5dc:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _54115_file = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_, _54115_file);
				{
					auto expr = &((*(_54115_file))._field_Imports);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c32a152e:;
					if (it != expr_end) {
						jule::Ptr<_1bc3dcb9e_ImportInfo> _54316_imp = *it;
						{
							jule::Bool _5445_ok = _1bc410ae5_checkImport(_self_, &(_54316_imp));;
							if ((!(_5445_ok))) {
								return;;
							};
						}
						_iter_next_1c32a152e:;
						++it;
						goto _iter_begin_1c32a152e;
					}
					_iter_end_1c32a152e:;
				};
			}
			_iter_next_1c0d1d5dc:;
			++it;
			goto _iter_begin_1c0d1d5dc;
		}
		_iter_end_1c0d1d5dc:;
	};
}



inline void _1bc410ee1_implFileImpls(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Impls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32a18b4:;
		if (it != expr_end) {
			jule::Ptr<_1bc3a7718_Impl> _55415_imp = *it;
			{
				_1bc420ee0_implImpl(_self_, &(_55415_imp));
			}
			_iter_next_1c32a18b4:;
			++it;
			goto _iter_begin_1c32a18b4;
		}
		_iter_end_1c32a18b4:;
	};
}



inline void _1bc4111de_implImpls(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32a3300:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _56015_file = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_.ptr(), _56015_file);
				_1bc410ee1_implFileImpls(_self_);
			}
			_iter_next_1c32a3300:;
			++it;
			goto _iter_begin_1c32a3300;
		}
		_iter_end_1c32a3300:;
	};
}



inline void _1bc4113dc_checkEnums(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32a43ab:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _56715_file = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_.ptr(), _56715_file);
				{
					
					if ((!(_1bc41c42b_checkEnumDecls(_self_)))) {
						_case_begin_1c32a4a93:;
					}
					else if ((!(_1bc41c6b2_checkTypeEnumDecls(_self_)))) {
						_case_begin_1c32a516a:;
					}
					_match_end_1c32a508d:;
				};
			}
			_iter_next_1c32a43ab:;
			++it;
			goto _iter_begin_1c32a43ab;
		}
		_iter_end_1c32a43ab:;
	};
}



inline void _1bc4115da_checkFileInherits(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32a5e90:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _57715_t = *it;
			{
				jule::Bool _5784_ok = _1bc41e076__checkTraitDeclInherits(_self_, &(_57715_t));;
				if ((!(_5784_ok))) {
					return;;
				};
			}
			_iter_next_1c32a5e90:;
			++it;
			goto _iter_begin_1c32a5e90;
		}
		_iter_end_1c32a5e90:;
	};
}



inline void _1bc4117d8_checkInherits(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32a6512:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _58615_file = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_.ptr(), _58615_file);
				_1bc4115da_checkFileInherits(_self_);
			}
			_iter_next_1c32a6512:;
			++it;
			goto _iter_begin_1c32a6512;
		}
		_iter_end_1c32a6512:;
	};
}



inline _1bc4c88e4_typeChecker _1bc411c8e_typeChecker(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _59232_l, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _59247_generics, jule::Ptr<_1bc4c7904_referencer> _5937_referencer) {
	_1bc4c88e4_typeChecker _5947_tc = _1bc4c88e4_typeChecker{._field_s=_self_, ._field_rootLookup=_59232_l, ._field_lookup=_59232_l, ._field_referencer=_5937_referencer, ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_59247_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ _59232_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
			_case_begin_1c32a91b3:;
			{
				jule::Ptr<_1bc3b448e_scopeChecker> _6038_hard = _1bc3b7b02_getHardRoot(_59232_l.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
				_5947_tc._field_refers=(*((*(_6038_hard))._field_owner))._field_Refers;
			}
		}
		_match_end_1c32a914c:;
	};
	if (((_5937_referencer != nullptr) && ((*_5937_referencer.alloc)._field_refs != nullptr))) {
		{
			auto &_match_expr{ (*(_5937_referencer))._field_owner };
			
			if (_match_expr.type == &__jule_any_type8) {
				_case_begin_1c044cb1d:;
				{
					_5947_tc._field_ownerAlias=(*(_5937_referencer))._field_owner.unsafe_cast_ptr<_1bc4b5705_TypeAlias>();
				}
			}
			_match_end_1c044d536:;
		};
	};
	return _5947_tc;;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc412300_buildTypeWithRefers(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _61941_t, jule::Trait _61964_l, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _6207_generics, jule::Ptr<_1bc4c7904_referencer> _62035_referencer) {
	return ({ auto _wrap_copy = _1bc411c8e_typeChecker(_self_, _61964_l, _6207_generics, _62035_referencer); _1bc4d14ce_checkDecl(&_wrap_copy, _61941_t); });;
}



inline jule::Bool _1bc412861_checkTypeSymWithRefers(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4bdc08_TypeSym>* _62644_t, jule::Trait _62661_l, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _6277_generics, jule::Ptr<_1bc4c7904_referencer> _62735_referencer) {
	jule::Bool __jule_func_result = false;
	if (_1bc4be0b0_checked((*(_62644_t)).ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_62644_t))))._field_Type=_1bc412300_buildTypeWithRefers(_self_, &((*((*(_62644_t))))._field_Decl), _62661_l, _6277_generics, _62735_referencer);
	__jule_func_result = _1bc4be0b0_checked((*(_62644_t)).ptr());
	return __jule_func_result;;
}



inline jule::Ptr<_1bc3a5419_constraintChecker> _1bc412ae7_constraintChecker(jule::Ptr<_1bc409eeb_sema> _self_) {
	return jule::new_ptr<_1bc3a5419_constraintChecker>(_1bc3a5419_constraintChecker{._field_s=_self_, ._field_genericsD=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_genericsA=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_fi=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_si=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_et=jule::Ptr<_1bc247014_Token>(nullptr), ._field_uniq=false});;
}



inline jule::Bool _1bc412ee3_checkTypeSym(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4bdc08_TypeSym>* _64134_t, jule::Trait _64151_l) {
	return _1bc412861_checkTypeSymWithRefers(_self_, _64134_t, _64151_l, nullptr, nullptr);;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc413499_checkTypeSymRefers(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _64640_t, jule::Trait _64663_l, jule::Ptr<_1bc3cab26_ReferenceStack> _64678_refers) {
	jule::Ptr<_1bc4c88e4_typeChecker> _6477_tc = jule::new_ptr<_1bc4c88e4_typeChecker>(_1bc4c88e4_typeChecker{._field_s=_self_, ._field_rootLookup=_64663_l, ._field_lookup=_64663_l, ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=_64678_refers, ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1bc4d14ce_checkDecl(_6477_tc.ptr(), _64640_t);;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc413950_buildTypeWithGenerics(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _65843_t, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _6597_generics, jule::Ptr<_1bc3cab26_ReferenceStack> _65935_refers) {
	jule::Ptr<_1bc4c88e4_typeChecker> _6607_tc = jule::new_ptr<_1bc4c88e4_typeChecker>(_1bc4c88e4_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=_65935_refers, ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=_6597_generics, ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1bc4d14ce_checkDecl(_6607_tc.ptr(), _65843_t);;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc4140d2_selectType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _67632_t) {
	jule::Ptr<_1bc4c88e4_typeChecker> _6777_tc = jule::new_ptr<_1bc4c88e4_typeChecker>(_1bc4c88e4_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=true, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1bc4d14ce_checkDecl(_6777_tc.ptr(), _67632_t);;
}



inline jule::Ptr<_1bc48551b_eval> _1bc414588_evalpd(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _68827_l, jule::Ptr<_1bc4b64e7_Type> _68842_p, jule::Ptr<_1bc42dc12_Var> _68856_owner) {
	jule::Ptr<_1bc48551b_eval> _6897_e = jule::new_ptr<_1bc48551b_eval>(_1bc48551b_eval{._field_s=_self_, ._field_lookup=_68827_l, ._field_prefix=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_unsafety=false, ._field_disBuiltin=false, ._field_owner=_68856_owner, ._field_field=jule::Ptr<_1bc280525_FieldIns>(nullptr), ._field_target=_1bc484a9d_target{._field_ignored=false, ._field_mutable=false}});;
	{
		auto &_match_expr{ _68827_l };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
			_case_begin_1c32a83d2:;
			{
				(*(_6897_e))._field_unsafety=_1bc3b687b_isUnsafe(_68827_l.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));
			}
		}
		_match_end_1c32a903c:;
	};
	(*(_6897_e))._field_prefix=_68842_p;
	return _6897_e;;
}



inline jule::Ptr<_1bc48551b_eval> _1bc414984_evalp(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _70326_l, jule::Ptr<_1bc4b64e7_Type> _70341_p) {
	return _1bc414588_evalpd(_self_, _70326_l, _70341_p, nullptr);;
}



inline jule::Ptr<_1bc48551b_eval> _1bc414cc5_eval(jule::Ptr<_1bc409eeb_sema> _self_, jule::Trait _70825_l) {
	return _1bc414984_evalp(_self_, _70825_l, nullptr);;
}



inline jule::Bool _1bc4153e1_checkAssignType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Bool _71232_destIsRef, jule::Ptr<_1bc4b64e7_Type>* _71254_dest, jule::Ptr<_1bc48354c_Data>* _7138_d, jule::Ptr<_1bc247014_Token> _71322_errorToken, jule::Ptr<_1bc3cab26_ReferenceStack> _71353_refers) {
	if ((*((*(_7138_d))))._field_Decl) {
		_1bc40ce00_pushErr(_self_.ptr(), _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	if (_71232_destIsRef) {
		if ((!(_1bc4b6c34_Equal((*(_71254_dest)), (*((*(_7138_d))))._field_Type)))) {
			_1bc40ce00_pushErr(_self_.ptr(), _71322_errorToken, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_71254_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_7138_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	} else {
		jule::Ptr<_1bc471716_assignTypeChecker> _7248_atc = jule::new_ptr<_1bc471716_assignTypeChecker>(_1bc471716_assignTypeChecker{._field_s=_self_, ._field_dest=(*(_71254_dest)), ._field_d=(*(_7138_d)), ._field_errorToken=_71322_errorToken, ._field_refers=_71353_refers});;
		jule::Bool _7314_ok = _1bc472717_check(_7248_atc.ptr());;
		if ((!(_7314_ok))) {
			return false;;
		};
	};
	if (((!(_1bc483e87_IsConst((*(_7138_d)).ptr()))) || (_1bc4b8b9d_Prim((*(_71254_dest)).ptr()) == nullptr))) {
		return true;;
	};
	jule::Str _7417_kind = (*(_1bc4b8b9d_Prim((*(_71254_dest)).ptr())))._field_Kind;;
	{
		
		if (_1bc37c314_IsSigInt(_7417_kind)) {
			_case_begin_1bd5b55b2:;
			{
				_1bac27ebe_SetI64((*((*(_7138_d))))._field_Constant.ptr(), _1bac276e9_AsI64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_1bc37c622_IsUnsigInt(_7417_kind)) {
			_case_begin_1bd5b565b:;
			{
				_1bac28277_SetU64((*((*(_7138_d))))._field_Constant.ptr(), _1bac27980_AsU64((*((*(_7138_d))))._field_Constant));
			}
		}
		else if (_1bc37cc2c_IsFloat(_7417_kind)) {
			_case_begin_1bd5b56c2:;
			{
				_1bac28a91_SetF64((*((*(_7138_d))))._field_Constant, _1bac27c16_AsF64((*((*(_7138_d))))._field_Constant));
			}
		}
		_match_end_1bd5b54d5:;
	};
	return true;;
}



inline jule::Bool _1bc415897__checkTypeCompatibility(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b64e7_Type>* _75545_dest, jule::Ptr<_1bc4b64e7_Type>* _75563_src, jule::Ptr<_1bc247014_Token> _7567_errorToken) {
	if (((*(_75563_src)) == nullptr)) {
		return false;;
	};
	if ((_1bc4ba9c4_Tup((*(_75563_src)).ptr()) != nullptr)) {
		return false;;
	};
	_1bc46e88a_typeCompatibilityChecker _7647_tcc = _1bc46e88a_typeCompatibilityChecker{._field_s=_self_, ._field_dest=(*(_75545_dest)), ._field_src=(*(_75563_src)), ._field_errorToken=_7567_errorToken};;
	return _1bc471084_check(&_7647_tcc);;
}



inline jule::Bool _1bc415d4d_checkTypeCompatibility(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b64e7_Type>* _77344_dest, jule::Ptr<_1bc4b64e7_Type>* _7748_src, jule::Ptr<_1bc247014_Token>* _77425_errorToken) {
	if (_1bc415897__checkTypeCompatibility(_self_, _77344_dest, _7748_src, (*(_77425_errorToken)))) {
		return true;;
	};
	_1bc40ce00_pushErr(_self_.ptr(), (*(_77425_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_77344_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_7748_src)).ptr()), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline void _1bc41626b_pushCompatiblityError(_1bc409eeb_sema* _self_, jule::Ptr<_1bc4b64e7_Type>* _78242_dest, jule::Ptr<_1bc48354c_Data>* _78260_src, jule::Ptr<_1bc247014_Token>* _7838_errorToken) {
	if ((*((*(_78260_src))))._field_untyped) {
		{
			
			if (_1bac29025_IsI64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1bd5bcd6c:;
				{
					_1bc40ce00_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped integer", 15), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1bac292ab_IsU64((*((*(_78260_src))))._field_Constant.ptr())) {
				_case_begin_1bd5bce16:;
				{
					_1bc40ce00_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped unsigned integer", 24), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			else if (_1bac29a5e_IsF64((*((*(_78260_src))))._field_Constant)) {
				_case_begin_1bd5bce7c:;
				{
					_1bc40ce00_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("untyped float", 13), &__jule_any_type5); __jule_collection; }));
					return;;
				}
			}
			_match_end_1bd5bcc3a:;
		};
	};
	_1bc40ce00_pushErr(_self_, (*(_7838_errorToken)), static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_78242_dest)).ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_78260_src))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1bc416722_checkTypeCompatibility1(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b64e7_Type>* _80045_dest, jule::Ptr<_1bc48354c_Data>* _80063_src, jule::Ptr<_1bc247014_Token>* _8018_errorToken) {
	if (_1bc415897__checkTypeCompatibility(_self_, _80045_dest, &((*((*(_80063_src))))._field_Type), (*(_8018_errorToken)))) {
		return true;;
	};
	_1bc41626b_pushCompatiblityError(_self_.ptr(), _80045_dest, _80063_src, _8018_errorToken);
	return false;;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc416bc8_buildNonGenericType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _81541_ast, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _8168_generics, jule::Slice<jule::Ptr<_1bc4b64e7_Type>>* _81644_ignored) {
	jule::Ptr<_1bc4c88e4_typeChecker> _8177_tc = jule::new_ptr<_1bc4c88e4_typeChecker>(_1bc4c88e4_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=(*(_8168_generics)), ._field_ignoredGenerics=_81644_ignored, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false});;
	return _1bc4d14ce_checkDecl(_8177_tc.ptr(), _81541_ast);;
}



inline jule::Bool _1bc4170c4_buildFnNonGenericTypes(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns> _82743_f, jule::Slice<jule::Ptr<_1bc4b64e7_Type>>* _82759_ignored) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _82811_generics = nullptr;;
	if (_1bc2ee792_IsMethod((*(_82743_f))._field_Decl.ptr())) {
		_82811_generics=jule::append((*(*(_82743_f))._field_Decl.alloc)._field_Generics,(*((*(*(_82743_f))._field_Decl.alloc)._field_Owner))._field_Generics);
	} else {
		_82811_generics=(*((*(_82743_f))._field_Decl))._field_Generics;
	};
	__jule_func_result = _1bc41826d_basicFnEnvironment(_self_, &(_82743_f), jule::__new_closure<jule::Bool,jule::Ptr<_1bc409eeb_sema>*>((void*)__jule_anon_1bd5c741a, jule::Ptr<__jule_anon_1bd5c741a_ctx>::make(__jule_anon_1bd5c741a_ctx{._82743_f=_82743_f,._82811_generics=_82811_generics,._82759_ignored=_82759_ignored}).as<jule::Uintptr>(), __jule_anon_1bd5c741a_ctx_handler));
	return __jule_func_result;;
}



inline jule::Ptr<_1bc302113_FnIns> _1bc417415_getTraitCheckFnKind(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _85041_f) {
	if (((*((*(_85041_f))))._field_Instances.len() == 1LL)) {
		return (*((*(_85041_f))))._field_Instances[0LL];;
	};
	jule::Ptr<_1bc302113_FnIns> _8547_ins = _1bc300562_instanceForce((*(_85041_f)));;
	jule::Ptr<_1bc4c88e4_typeChecker> _8567_tc = jule::new_ptr<_1bc4c88e4_typeChecker>(_1bc4c88e4_typeChecker{._field_s=_self_, ._field_rootLookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_lookup=jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false});;
	{
		auto expr = &((*(_8547_ins))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c34104d4:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> _86115_p = *it;
			{
				if ((!(_1bc2ecbd0_IsSelf((*(_86115_p))._field_Decl.ptr())))) {
					(*_86115_p.alloc)._field_Type=_1bc4d14ce_checkDecl(_8567_tc.ptr(), &((*((*(*(_86115_p))._field_Decl.alloc)._field_TypeSym))._field_Decl));
					if (((*_86115_p.alloc)._field_Type == nullptr)) {
						return nullptr;;
					};
				};
			}
			_iter_next_1c34104d4:;
			++it;
			goto _iter_begin_1c34104d4;
		}
		_iter_end_1c34104d4:;
	};
	if ((!(_1bc2ee50b_IsVoid((*(_85041_f)).ptr())))) {
		(*_8547_ins.alloc)._field_Result=_1bc4d14ce_checkDecl(_8567_tc.ptr(), &((*((*((*((*(_85041_f))))._field_Result))._field_TypeSym))._field_Decl));
		if (((*_8547_ins.alloc)._field_Result == nullptr)) {
			return nullptr;;
		};
	};
	return _8547_ins;;
}



inline jule::Bool _1bc4178bb_checkConstraintsFn(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _87940_f, jule::Ptr<_1bc247014_Token>* _87956_et, jule::Ptr<_1bc302113_FnIns> _87979_exist) {
	jule::Ptr<_1bc3a5419_constraintChecker> _8807_cc = _1bc412ae7_constraintChecker(_self_);;
	(*(_8807_cc))._field_et=(*(_87956_et));
	(*_8807_cc.alloc)._field_fi=(*(_87940_f));
	if ((_87979_exist != nullptr)) {
		{
			auto expr = &((*_87979_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3415660:;
			if (it != expr_end) {
				jule::I32 _8849_i = it - expr->begin();
				jule::Ptr<_1bc4b4b11_InsGeneric> _88416_g = *it;
				{
					(*((*((*(_87940_f))))._field_Generics[_8849_i]))._field_Constraint=(*(_88416_g))._field_Constraint;
				}
				_iter_next_1c3415660:;
				++it;
				_8849_i++;
				goto _iter_begin_1c3415660;
			}
			_iter_end_1c3415660:;
		};
	} else {
		(*_8807_cc.alloc)._field_uniq=true;
	};
	return _1bc3a6382_check(_8807_cc);;
}



inline jule::Bool _1bc417d72_checkConstraintsStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _89344_s, jule::Ptr<_1bc247014_Token>* _89364_et, jule::Ptr<_1bc2810c5_StructIns> _89387_exist) {
	jule::Ptr<_1bc3a5419_constraintChecker> _8947_cc = _1bc412ae7_constraintChecker(_self_);;
	(*(_8947_cc))._field_et=(*(_89364_et));
	(*_8947_cc.alloc)._field_si=(*(_89344_s));
	if ((_89387_exist != nullptr)) {
		{
			auto expr = &((*_89387_exist.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c341882d:;
			if (it != expr_end) {
				jule::I32 _8989_i = it - expr->begin();
				jule::Ptr<_1bc4b4b11_InsGeneric> _89816_g = *it;
				{
					(*((*((*(_89344_s))))._field_Generics[_8989_i]))._field_Constraint=(*(_89816_g))._field_Constraint;
				}
				_iter_next_1c341882d:;
				++it;
				_8989_i++;
				goto _iter_begin_1c341882d;
			}
			_iter_end_1c341882d:;
		};
	} else {
		(*_8947_cc.alloc)._field_uniq=true;
	};
	return _1bc3a6382_check(_8947_cc);;
}



inline jule::Bool _1bc41826d_basicFnEnvironment(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _91040_f, jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*> _91051_algo) {
	jule::Ptr<_1bc409eeb_sema> _9117_sema = (*((*((*(_91040_f))))._field_Decl))._field_sema;;
	jule::Ptr<_1bc305358_SymTab> _9127_old = _1bc40c729_getCurrentFile(_9117_sema.ptr());;
	jule::Ptr<_1bc305358_SymTab> _9137_file = _1bc408b65_findFile(&((*_9117_sema.alloc)._field_files), &((*((*(*((*(_91040_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_9137_file != nullptr)) {
		_1bc40c9d2_setCurrentFile(_9117_sema, _9137_file);
	};
	jule::Bool _9183_ok = _91051_algo(&(_9117_sema));;
	if ((_9117_sema != _self_)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,(*(_9117_sema))._field_errors);
		(*_9117_sema.alloc)._field_errors=nullptr;
	};
	_1bc40c9d2_setCurrentFile(_9117_sema.ptr(), _9127_old);
	return _9183_ok;;
}



inline jule::Bool _1bc418669_fnEnvironment(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _93035_f, jule::Fn<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*> _93046_algo) {
	jule::I32 _9317_size = (*((*(_93035_f))))._field_Generics.len();;
	if ((((*((*(_93035_f))))._field_Decl != nullptr) && ((*(*((*(_93035_f))))._field_Decl.alloc)._field_Owner != nullptr))) {
		_9317_size+=(*(*((*((*(_93035_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _9357_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>::alloc(0LL, _9317_size); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b5705_TypeAlias>(nullptr); __jule_collection; });;
	_1bc4087e1_appendGenericTypeAliases(&(_9357_generics), _93035_f);
	return _1bc41826d_basicFnEnvironment(_self_, _93035_f, jule::__new_closure<jule::Bool,jule::Ptr<_1bc409eeb_sema>*>((void*)__jule_anon_1c3227197, jule::Ptr<__jule_anon_1c3227197_ctx>::make(__jule_anon_1c3227197_ctx{._93046_algo=_93046_algo,._9357_generics=_9357_generics}).as<jule::Uintptr>(), __jule_anon_1c3227197_ctx_handler));;
}



inline void _1bc418922_checkFnParamKind(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc300ead_ParamIns>* _94238_p) {
	(*((*((*(_94238_p))))._field_Type))._field_Variadic=(*((*((*(_94238_p))))._field_Decl))._field_Variadic;
}



inline jule::Bool _1bc418c63_reloadFnInsTypes(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns> _94637_f) {
	if ((_1bc3035cb_IsBuiltin(_94637_f.ptr()) || _1bc303862_IsAnon(_94637_f))) {
		return true;;
	};
	return _1bc418669_fnEnvironment(_self_, &(_94637_f), jule::__new_closure<jule::Bool,jule::Ptr<_1bc409eeb_sema>*,jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>*>((void*)__jule_anon_1c3229b5b, jule::Ptr<__jule_anon_1c3229b5b_ctx>::make(__jule_anon_1c3229b5b_ctx{._94637_f=_94637_f,._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c3229b5b_ctx_handler));;
}



inline jule::Bool _1bc419219_checkRefValidityForInitExpr(jule::Ptr<_1bc409eeb_sema> _self_, jule::Bool _98644_leftMut, jule::Ptr<_1bc48354c_Data>* _98664_d, jule::Ptr<_1bc247014_Token>* _98679_errorToken) {
	if ((!(_1bc4078ab_isValidModelForRef(&((*((*(_98664_d))))._field_Model))))) {
		_1bc40ce00_pushErr(_self_.ptr(), (*(_98679_errorToken)), static_cast<jule::Str>(jule::Str::lit("references requires variable based expression for assignment", 60)), jule::Slice<jule::Any>());
		return false;;
	};
	if ((_98644_leftMut && (!((*((*(_98664_d))))._field_Mutable)))) {
		_1bc40ce00_pushErr(_self_.ptr(), (*(_98679_errorToken)), static_cast<jule::Str>(jule::Str::lit("mutable reference cannot point to immutable data", 48)), jule::Slice<jule::Any>());
		return false;;
	};
	return true;;
}



inline jule::Bool _1bc41955a_isMutRiskyStruct(_1bc409eeb_sema* _self_, jule::Ptr<_1bc2810c5_StructIns>* _100329_s) {
	{
		auto expr = &((*((*(_100329_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c341e119:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> *_100410_f = it;
			{
				if ((((*((*((*(_100410_f))))._field_Decl))._field_Mutable && _1bc4b7dcd_Mutable((*(*(_100410_f)).alloc)._field_Type.ptr())) && _1bc40d65e_isAccessibleDefine(_self_, (*(*((*(_100410_f))))._field_Decl.alloc)._field_Public, (*(*((*(_100410_f))))._field_Decl.alloc)._field_Token))) {
					return true;;
				};
			}
			_iter_next_1c341e119:;
			++it;
			goto _iter_begin_1c341e119;
		}
		_iter_end_1c341e119:;
	};
	return false;;
}



inline jule::Bool _1bc419b76_checkValidityForInitExpr(jule::Ptr<_1bc409eeb_sema> _self_, jule::Bool _103041_leftMut, jule::Bool _103056_leftRef, jule::Ptr<_1bc4b64e7_Type>* _10314_leftKind, jule::Ptr<_1bc48354c_Data>* _103126_d, jule::Ptr<_1bc247014_Token>* _103141_errorToken) {
	if ((_103041_leftMut && (!((*((*(_103126_d))))._field_Mutable)))) {
		if ((_1bc4b7dcd_Mutable((*((*(_103126_d))))._field_Type.ptr()) || (*(*((*(_103126_d))))._field_Type.alloc)._field_Variadic)) {
			_1bc40ce00_pushErr(_self_.ptr(), (*(_103141_errorToken)), static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_103126_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
		jule::Ptr<_1bc2810c5_StructIns> _10394_s = _1bc4ba221_Struct((*((*(_103126_d))))._field_Type.ptr());;
		if (((_10394_s != nullptr) && _1bc41955a_isMutRiskyStruct(_self_.ptr(), &(_10394_s)))) {
			_1bc40ce00_pushErr(_self_, (*(_103141_errorToken)), static_cast<jule::Str>(jule::Str::lit("struct @ cannot copied due to field which is stores mutable data", 64)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_103126_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
			return false;;
		};
	};
	if (_103056_leftRef) {
		if ((!(_1bc419219_checkRefValidityForInitExpr(_self_, _103041_leftMut, _103126_d, _103141_errorToken)))) {
			return false;;
		};
	};
	jule::Ptr<_1bc471716_assignTypeChecker> _10507_atc = jule::new_ptr<_1bc471716_assignTypeChecker>(_1bc471716_assignTypeChecker{._field_s=_self_, ._field_dest=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_d=(*(_103126_d)), ._field_errorToken=(*(_103141_errorToken)), ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr)});;
	return _1bc471e64_checkValidity(_10507_atc.ptr());;
}



inline jule::Bool _1bc41a072_checkTypeAliasDeclKind(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _105844_ta, jule::Trait _105864_l) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc305358_SymTab> _10597_old = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1bc40c9d2_setCurrentFile(_self_, _10597_old);
	});;
	if (((*((*(_105844_ta))))._field_Token != nullptr)) {
		jule::Ptr<_1bc305358_SymTab> _10648_file = _1bc408b65_findFile(&((*_self_.alloc)._field_files), &((*(*((*(_105844_ta))))._field_Token.alloc)._field_File));;
		if ((_10648_file != nullptr)) {
			_1bc40c9d2_setCurrentFile(_self_, _10648_file);
		};
	};
	__jule_func_result=_1bc412861_checkTypeSymWithRefers(_self_, &((*((*(_105844_ta))))._field_TypeSym), _105864_l, nullptr, jule::new_ptr<_1bc4c7904_referencer>(_1bc4c7904_referencer{._field_ident=(*((*(_105844_ta))))._field_Ident, ._field_owner=jule::Any((*(_105844_ta)), &__jule_any_type8), ._field_refs=(&((*((*(_105844_ta))))._field_Refers))}));
	if (((__jule_func_result && (_1bc4b996d_Arr((*((*((*(_105844_ta))))._field_TypeSym))._field_Type.ptr()) != nullptr)) && (*(_1bc4b996d_Arr((*((*((*(_105844_ta))))._field_TypeSym))._field_Type)))._field_Auto)) {
		_1bc40ce00_pushErr(_self_, (*((*(*((*(_105844_ta))))._field_TypeSym.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
		__jule_func_result=false;
	};
	return __jule_func_result;;
}



inline void _1bc41a3d5_checkTypeAliasDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _108140_ta, jule::Trait _108160_l) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_108140_ta))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_108140_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	_1bc41a072_checkTypeAliasDeclKind(_self_, _108140_ta, _108160_l);
}



inline void _1bc41a68d_checkTypeAliasDeclDup(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4b5705_TypeAlias>* _108943_ta) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_108943_ta))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_108943_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1bc40db15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_108943_ta))), &((*((*(_108943_ta))))._field_Ident), (*((*(_108943_ta))))._field_Binded)) {
		_1bc40ce00_pushErr(_self_, (*((*(_108943_ta))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_108943_ta))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1bc41a072_checkTypeAliasDeclKind(_self_, _108943_ta, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));
}



inline jule::Bool _1bc41a924_checkTypeAliasDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeAliases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c356875d:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b5705_TypeAlias> _110215_ta = *it;
			{
				_1bc41a68d_checkTypeAliasDeclDup(_self_, &(_110215_ta));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c356875d:;
			++it;
			goto _iter_begin_1c356875d;
		}
		_iter_end_1c356875d:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1c324105c_checkEnumItemsDup(_1bc409eeb_sema* _self_, jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _111336_items) {
	{
		auto expr = &(_111336_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32417cc:;
		if (it != expr_end) {
			jule::Ptr<_1bc30b3b4_EnumItem> *_111410_item = it;
			{
				if (((*((*(_111410_item))))._field_Ident).empty()) {
					goto _iter_next_1c32417cc;
				} else if (_1bc2498eb_IsIgnoreIdent((*((*(_111410_item))))._field_Ident)) {
					_1bc40ce00_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111336_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c3243515:;
						if (it != expr_end) {
							jule::Ptr<_1bc30b3b4_EnumItem> *_112012_citem = it;
							{
								if (((*(_111410_item)) == (*(_112012_citem)))) {
									goto _iter_end_1c3243515;
								} else if (((*(*(_111410_item)).alloc)._field_Ident == (*((*(_112012_citem))))._field_Ident)) {
									_1bc40ce00_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111410_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1c3243515;
								};
							}
							_iter_next_1c3243515:;
							++it;
							goto _iter_begin_1c3243515;
						}
						_iter_end_1c3243515:;
					};
				};
			}
			_iter_next_1c32417cc:;
			++it;
			goto _iter_begin_1c32417cc;
		}
		_iter_end_1c32417cc:;
	};
}

inline void _1c324e1d0_checkEnumItemsDup(_1bc409eeb_sema* _self_, jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> _111336_items) {
	{
		auto expr = &(_111336_items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c324e950:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d053_TypeEnumItem> *_111410_item = it;
			{
				if (((*((*(_111410_item))))._field_Ident).empty()) {
					goto _iter_next_1c324e950;
				} else if (_1bc2498eb_IsIgnoreIdent((*((*(_111410_item))))._field_Ident)) {
					_1bc40ce00_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
				} else {
					{
						auto expr = &(_111336_items);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c3251644:;
						if (it != expr_end) {
							jule::Ptr<_1bc30d053_TypeEnumItem> *_112012_citem = it;
							{
								if (((*(_111410_item)) == (*(_112012_citem)))) {
									goto _iter_end_1c3251644;
								} else if (((*(*(_111410_item)).alloc)._field_Ident == (*((*(_112012_citem))))._field_Ident)) {
									_1bc40ce00_pushErr(_self_, (*(*(_111410_item)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_111410_item)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
									_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
									goto _iter_end_1c3251644;
								};
							}
							_iter_next_1c3251644:;
							++it;
							goto _iter_begin_1c3251644;
						}
						_iter_end_1c3251644:;
					};
				};
			}
			_iter_next_1c324e950:;
			++it;
			goto _iter_begin_1c324e950;
		}
		_iter_end_1c324e950:;
	};
}



inline void _1bc41ae85_checkEnumItemsStr(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30be20_Enum>* _113339_e) {
	jule::Ptr<_1bc48551b_eval> _11347_eval = _1bc414cc5_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));;
	{
		auto expr = &((*((*(_113339_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c356c674:;
		if (it != expr_end) {
			jule::Ptr<_1bc30b3b4_EnumItem> _113515_item = *it;
			{
				if (_1bc30b78d_AutoExpr(_113515_item.ptr())) {
					(*_113515_item.alloc)._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac25ce1_NewStr((*_113515_item.alloc)._field_Ident)})});
					(*((*((*_113515_item.alloc)._field_Value))._field_Data))._field_Model=jule::Any((*(*((*(_113515_item))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
				} else {
					jule::Ptr<_1bc48354c_Data> _11449_d = _1bc4a4309_evalExpr(_11347_eval, (*((*(_113515_item))._field_Value))._field_Expr);;
					if ((_11449_d == nullptr)) {
						goto _iter_next_1c356c674;
					};
					if ((!(_1bc483e87_IsConst(_11449_d.ptr())))) {
						_1bc40ce00_pushErr(_self_, (*((*(*(_113515_item))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
					};
					jule::Ptr<_1bc3cab26_ReferenceStack> _11539_refers = static_cast<jule::Ptr<_1bc3cab26_ReferenceStack>>(nullptr);;
					_1bc4153e1_checkAssignType(_self_, false, &((*((*((*(_113339_e))))._field_TypeSym))._field_Type), &(_11449_d), (*_113515_item.alloc)._field_Token, _11539_refers);
					(*(*(_113515_item))._field_Value.alloc)._field_Data=_11449_d;
				};
			}
			_iter_next_1c356c674:;
			++it;
			goto _iter_begin_1c356c674;
		}
		_iter_end_1c356c674:;
	};
}



inline void _1c04576a5_checkEnumItemInt(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc48551b_eval>* _116043_eval, jule::Ptr<_1bc30be20_Enum>* _116061_e, jule::Ptr<_1bc4be610_Prim>* _116072_prim, jule::Ptr<_1bc30b3b4_EnumItem>* _116090_item, jule::U64* _1160112_n) {
	if (_1bc30b78d_AutoExpr((*(_116090_item)).ptr())) {
		(*((*(_116090_item))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		{
			
{
				_case_begin_1c0459b2a:;
				{
					(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Constant=static__1bac2575d_NewU64((*(_1160112_n)));
				}
			}
			_match_end_1c045a510:;
		};
		(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116090_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1bc48354c_Data> _11758_d = _1bc4a4309_evalExpr((*(_116043_eval)), (*((*((*(_116090_item))))._field_Value))._field_Expr);;
		if ((_11758_d == nullptr)) {
			return;;
		};
		if ((!(_1bc483e87_IsConst(_11758_d.ptr())))) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(*((*(_116090_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc3cab26_ReferenceStack> _11828_refers = static_cast<jule::Ptr<_1bc3cab26_ReferenceStack>>(nullptr);;
		_1bc4153e1_checkAssignType(_self_, false, &((*((*((*(_116061_e))))._field_TypeSym))._field_Type), &(_11758_d), (*((*(_116090_item))))._field_Token, _11828_refers);
		(*(*((*(_116090_item))))._field_Value.alloc)._field_Data=_11758_d;
		{
			
{
				_case_begin_1c045e6ce:;
				{
					(*(_1160112_n))=_1bac26bb0_ReadU64((*((*(*((*(_116090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1c0460a10:;
		};
	};
}

inline void _1c322e974_checkEnumItemInt(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc48551b_eval>* _116043_eval, jule::Ptr<_1bc30be20_Enum>* _116061_e, jule::Ptr<_1bc4be610_Prim>* _116072_prim, jule::Ptr<_1bc30b3b4_EnumItem>* _116090_item, jule::I64* _1160112_n) {
	if (_1bc30b78d_AutoExpr((*(_116090_item)).ptr())) {
		(*((*(_116090_item))))._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})});
		{
			
{
				_case_begin_1c3232801:;
				{
					(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Constant=static__1bac25494_NewI64((*(_1160112_n)));
				}
			}
			_match_end_1c323278a:;
		};
		(*((*((*((*(_116090_item))))._field_Value))._field_Data))._field_Model=jule::Any((*(*((*((*(_116090_item))))._field_Value))._field_Data.alloc)._field_Constant, &__jule_any_type15);
	} else {
		jule::Ptr<_1bc48354c_Data> _11758_d = _1bc4a4309_evalExpr((*(_116043_eval)), (*((*((*(_116090_item))))._field_Value))._field_Expr);;
		if ((_11758_d == nullptr)) {
			return;;
		};
		if ((!(_1bc483e87_IsConst(_11758_d.ptr())))) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(*((*(_116090_item))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc3cab26_ReferenceStack> _11828_refers = static_cast<jule::Ptr<_1bc3cab26_ReferenceStack>>(nullptr);;
		_1bc4153e1_checkAssignType(_self_, false, &((*((*((*(_116061_e))))._field_TypeSym))._field_Type), &(_11758_d), (*((*(_116090_item))))._field_Token, _11828_refers);
		(*(*((*(_116090_item))))._field_Value.alloc)._field_Data=_11758_d;
		{
			
{
				_case_begin_1c3237e99:;
				{
					(*(_1160112_n))=_1bac26929_ReadI64((*((*(*((*(_116090_item))))._field_Value.alloc)._field_Data))._field_Constant.ptr());
				}
			}
			_match_end_1c3237e22:;
		};
	};
}



inline void _1c3574aaa_checkEnumItemsInt1(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4be610_Prim>* _119641_prim, jule::Ptr<_1bc30be20_Enum>* _119659_e) {
	jule::U64 _11977_max = static_cast<jule::U64>(0LLU);;
	{
		
{
			_case_begin_1c045551b:;
			{
				_11977_max=_1bc37ab1a_MaxU(_1bc4be984_Str((*(_119641_prim)).ptr()));
			}
		}
		_match_end_1c0455681:;
	};
	jule::Ptr<_1bc48551b_eval> _12077_eval = _1bc414cc5_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));;
	jule::U64 _12087_n = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1bc30b3b4_EnumItem> _12097_first = (*((*(_119659_e))))._field_Items[0LL];;
	_1c04576a5_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_12097_first), &(_12087_n));
	if (((*((*(_12097_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c0454d45:;
				{
					_12087_n=_1bac27980_AsU64((*(*((*(_12097_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1c0457a5c:;
		};
	};
	{
		auto expr = (*((*(_119659_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c045c248:;
		if (it != expr_end) {
			jule::Ptr<_1bc30b3b4_EnumItem> _122115_item = *it;
			{
				if (((_1bc30b78d_AutoExpr(_122115_item.ptr()) && (_12087_n > 0LLU)) && ((jule::U64)(_11977_max - _12087_n) <= 0LLU))) {
					_1bc40ce00_pushErr(_self_, (*_122115_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1c045c248;
				};
				(_12087_n)++;
				_1c04576a5_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_122115_item), &(_12087_n));
			}
			_iter_next_1c045c248:;
			++it;
			goto _iter_begin_1c045c248;
		}
		_iter_end_1c045c248:;
	};
}

inline void _1c0465240_checkEnumItemsInt1(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc4be610_Prim>* _119641_prim, jule::Ptr<_1bc30be20_Enum>* _119659_e) {
	jule::I64 _11977_max = static_cast<jule::I64>(0LL);;
	{
		
{
			_case_begin_1c32b2210:;
			{
				_11977_max=_1bc37a851_MaxI(_1bc4be984_Str((*(_119641_prim)).ptr()));
			}
		}
		_match_end_1c32b2199:;
	};
	jule::Ptr<_1bc48551b_eval> _12077_eval = _1bc414cc5_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));;
	jule::I64 _12087_n = static_cast<jule::I64>(0LL);;
	jule::Ptr<_1bc30b3b4_EnumItem> _12097_first = (*((*(_119659_e))))._field_Items[0LL];;
	_1c322e974_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_12097_first), &(_12087_n));
	if (((*((*(_12097_first))._field_Value))._field_Data != nullptr)) {
		{
			
{
				_case_begin_1c323556d:;
				{
					_12087_n=_1bac276e9_AsI64((*(*((*(_12097_first))._field_Value))._field_Data.alloc)._field_Constant.ptr());
				}
			}
			_match_end_1c32304be:;
		};
	};
	{
		auto expr = (*((*(_119659_e))))._field_Items.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c3239cd1:;
		if (it != expr_end) {
			jule::Ptr<_1bc30b3b4_EnumItem> _122115_item = *it;
			{
				if (((_1bc30b78d_AutoExpr(_122115_item.ptr()) && (_12087_n > 0LL)) && ((_11977_max - _12087_n) <= 0LL))) {
					_1bc40ce00_pushErr(_self_, (*_122115_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
					goto _iter_end_1c3239cd1;
				};
				(_12087_n)++;
				_1c322e974_checkEnumItemInt(_self_, &(_12077_eval), _119659_e, _119641_prim, &(_122115_item), &(_12087_n));
			}
			_iter_next_1c3239cd1:;
			++it;
			goto _iter_begin_1c3239cd1;
		}
		_iter_end_1c3239cd1:;
	};
}



inline void _1bc41bb34_checkEnumItemsInt(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30be20_Enum>* _123139_e) {
	jule::Ptr<_1bc4be610_Prim> _12323_prim = _1bc4b8b9d_Prim((*((*((*(_123139_e))))._field_TypeSym))._field_Type.ptr());;
	{
		
		if (_1bc37c314_IsSigInt((*(_12323_prim))._field_Kind)) {
			_case_begin_1c0455b59:;
			{
				_1c0465240_checkEnumItemsInt1(_self_, &(_12323_prim), _123139_e);
			}
		}
		else {
			_case_begin_1c3574307:;
			{
				_1c3574aaa_checkEnumItemsInt1(_self_, &(_12323_prim), _123139_e);
			}
		}
		_match_end_1c3574280:;
	};
}



inline void _1bc41bddc_checkEnumDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30be20_Enum>* _124135_e) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_124135_e))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1bc40db15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_124135_e))), &((*((*(_124135_e))))._field_Ident), false)) {
		_1bc40ce00_pushErr(_self_, (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124135_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_124135_e))))._field_Items.len() == 0LL)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_124135_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1c324105c_checkEnumItemsDup(_self_.ptr(), (*((*(_124135_e))))._field_Items);
	if (((*((*(_124135_e))))._field_TypeSym != nullptr)) {
		if ((!(_1bc412ee3_checkTypeSym(_self_, &((*((*(_124135_e))))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4))))) {
			return;;
		};
	} else {
		(*((*(_124135_e))))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
	};
	jule::Ptr<_1bc4be610_Prim> _12657_t = _1bc4b8b9d_Prim((*((*((*(_124135_e))))._field_TypeSym))._field_Type.ptr());;
	if ((_12657_t == nullptr)) {
		_1bc40ce00_pushErr(_self_, (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if (_1bc4c2aca_IsStr(_12657_t.ptr())) {
			_case_begin_1c324884a:;
			{
				_1bc41ae85_checkEnumItemsStr(_self_, _124135_e);
			}
		}
		else if (_1bc37c8db_IsInt(_1bc4be984_Str(_12657_t.ptr()))) {
			_case_begin_1c324852b:;
			{
				_1bc41bb34_checkEnumItemsInt(_self_, _124135_e);
			}
		}
		else {
			_case_begin_1c32478e3:;
			{
				_1bc40ce00_pushErr(_self_, (*((*(_124135_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type source", 19)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c32479d1:;
	};
}



inline void _1bc41c195_checkTypeEnumDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc30d62a_TypeEnum>* _128239_e) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_128239_e))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_128239_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1bc40db15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_128239_e))), &((*((*(_128239_e))))._field_Ident), false)) {
		_1bc40ce00_pushErr(_self_, (*((*(_128239_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128239_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_128239_e))))._field_Items.len() == 0LL)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_128239_e))))._field_Token, static_cast<jule::Str>(jule::Str::lit("enum @ have no field", 20)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_128239_e))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_1c324e1d0_checkEnumItemsDup(_self_.ptr(), (*((*(_128239_e))))._field_Items);
	{
		auto expr = &((*((*(_128239_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c324e9c7:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d053_TypeEnumItem> _129615_item = *it;
			{
				if (((*(_129615_item))._field_TypeSym == nullptr)) {
					_1bc40ce00_pushErr(_self_, (*_129615_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					goto _iter_next_1c324e9c7;
				};
				jule::Bool _13014_ok = _1bc412ee3_checkTypeSym(_self_, &((*(_129615_item))._field_TypeSym), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));;
				if ((!(_13014_ok))) {
					goto _iter_next_1c324e9c7;
				};
				jule::Ptr<_1bc4be610_Prim> _13054_p = _1bc4b8b9d_Prim((*((*_129615_item.alloc)._field_TypeSym))._field_Type.ptr());;
				if (((_13054_p != nullptr) && _1bc4c2d61_IsAny(_13054_p))) {
					_1bc40ce00_pushErr(_self_, (*_129615_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("the <any> type is not allowed for type-enum declarations", 56)), jule::Slice<jule::Any>());
				};
			}
			_iter_next_1c324e9c7:;
			++it;
			goto _iter_begin_1c324e9c7;
		}
		_iter_end_1c324e9c7:;
	};
	if (((*((*(_128239_e))))._field_Items.len() == 1LL)) {
		jule::Ptr<_1bc30d053_TypeEnumItem> _13118_item = (*((*(_128239_e))))._field_Items[0LL];;
		_1bc4b64e7_Type _13124_tk = _1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_128239_e)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4)};;
		if ((((*((*(_13118_item))._field_TypeSym))._field_Type != nullptr) && _1bc4b6c34_Equal((*((*(_13118_item))._field_TypeSym))._field_Type, ((jule::Ptr<_1bc4b64e7_Type>)((&(_13124_tk))))))) {
			_1bc40ce00_pushErr(_self_, (*_13118_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc30d99e_Str((*(_128239_e)).ptr()), &__jule_any_type5); __jule_collection; }));
		};
	};
}



inline jule::Bool _1bc41c42b_checkEnumDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Enums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c325ac8b:;
		if (it != expr_end) {
			jule::Ptr<_1bc30be20_Enum> _132315_e = *it;
			{
				_1bc41bddc_checkEnumDecl(_self_, &(_132315_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c325ac8b:;
			++it;
			goto _iter_begin_1c325ac8b;
		}
		_iter_end_1c325ac8b:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc41c6b2_checkTypeEnumDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_TypeEnums);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c325c463:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d62a_TypeEnum> _133515_e = *it;
			{
				_1bc41c195_checkTypeEnumDecl(_self_, &(_133515_e));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c325c463:;
			++it;
			goto _iter_begin_1c325c463;
		}
		_iter_end_1c325c463:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc41ca03_checkDeclGenerics(_1bc409eeb_sema* _self_, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _134534_generics) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = _134534_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c325d93c:;
		if (it != expr_end) {
			jule::I32 _13477_i = it - expr->begin();
			jule::Ptr<_1bc269b19_GenericDecl> *_134710_g = it;
			{
				if (_1bc2498eb_IsIgnoreIdent((*((*(_134710_g))))._field_Ident)) {
					_1bc40ce00_pushErr(_self_, (*(*(_134710_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
					__jule_func_result=false;
					goto _iter_next_1c325d93c;
				};
				_julec_label_1c325ea1a:;
				{
					auto expr = _134534_generics;
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c32604ee:;
					if (it != expr_end) {
						jule::I32 _13568_j = it - expr->begin();
						jule::Ptr<_1bc269b19_GenericDecl> *_135611_ct = it;
						{
							{
								
								if ((_13568_j >= _13477_i)) {
									_case_begin_1c3261159:;
									{
										goto _iter_end_1c32604ee;
									}
								}
								else if (((*((*(_134710_g))))._field_Ident == (*((*(_135611_ct))))._field_Ident)) {
									_case_begin_1c32611e2:;
									{
										_1bc40ce00_pushErr(_self_, (*(*(_134710_g)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_134710_g)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										__jule_func_result=false;
										goto _iter_end_1c32604ee;
									}
								}
								_match_end_1c3261049:;
							};
						}
						_iter_next_1c32604ee:;
						++it;
						_13568_j++;
						goto _iter_begin_1c32604ee;
					}
					_iter_end_1c32604ee:;
				};
			}
			_iter_next_1c325d93c:;
			++it;
			_13477_i++;
			goto _iter_begin_1c325d93c;
		}
		_iter_end_1c325d93c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc41cd44_checkFnDeclParamsDup(_1bc409eeb_sema* _self_, jule::Ptr<_1bc2ee055_Fn>* _137237_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	_julec_label_1c325e2bc:;
	{
		auto expr = &((*((*(_137237_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3261d4c:;
		if (it != expr_end) {
			jule::I32 _13757_i = it - expr->begin();
			jule::Ptr<_1bc2ec581_Param> *_137510_p = it;
			{
				{
					auto expr = &((*((*(_137237_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c3263d82:;
					if (it != expr_end) {
						jule::Ptr<_1bc269b19_GenericDecl> *_137711_g = it;
						{
							if (((*((*(_137510_p))))._field_Ident == (*((*(_137711_g))))._field_Ident)) {
								__jule_func_result=false;
								_1bc40ce00_pushErr(_self_, (*(*(_137510_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137510_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								goto _iter_next_1c3261d4c;
							};
						}
						_iter_next_1c3263d82:;
						++it;
						goto _iter_begin_1c3263d82;
					}
					_iter_end_1c3263d82:;
				};
				_julec_label_1c32b3255:;
				{
					auto expr = &((*((*(_137237_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c32b3794:;
					if (it != expr_end) {
						jule::I32 _13878_j = it - expr->begin();
						jule::Ptr<_1bc2ec581_Param> *_138711_jp = it;
						{
							{
								
								if ((_13878_j >= _13757_i)) {
									_case_begin_1c32b44ba:;
									{
										goto _iter_end_1c32b3794;
									}
								}
								else if (_1bc2498eb_IsIgnoreIdent((*((*(_137510_p))))._field_Ident) || _1bc2498eb_IsIgnoreIdent((*((*(_138711_jp))))._field_Ident) || _1bc249bb5_IsAnonIdent((*(*(_137510_p)).alloc)._field_Ident) || _1bc249bb5_IsAnonIdent((*(*(_138711_jp)).alloc)._field_Ident)) {
									_case_begin_1c32b4553:;
									{
										goto _iter_end_1c32b3794;
									}
								}
								else if (((*(*(_137510_p)).alloc)._field_Ident == (*(*(_138711_jp)).alloc)._field_Ident)) {
									_case_begin_1c32b45b9:;
									{
										__jule_func_result=false;
										_1bc40ce00_pushErr(_self_, (*(*(_137510_p)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_137510_p)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_next_1c3261d4c;
									}
								}
								_match_end_1c32b4366:;
							};
						}
						_iter_next_1c32b3794:;
						++it;
						_13878_j++;
						goto _iter_begin_1c32b3794;
					}
					_iter_end_1c32b3794:;
				};
			}
			_iter_next_1c3261d4c:;
			++it;
			_13757_i++;
			goto _iter_begin_1c3261d4c;
		}
		_iter_end_1c3261d4c:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc41d185_checkFnDeclResultDup(_1bc409eeb_sema* _self_, jule::Ptr<_1bc2ee055_Fn>* _140937_f) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	if (_1bc2ee50b_IsVoid((*(_140937_f)).ptr())) {
		return __jule_func_result;;
	};
	{
		auto expr = &((*((*((*(_140937_f))))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13d5533:;
		if (it != expr_end) {
			jule::I32 _14167_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> *_141610_v = it;
			{
				if ((_1bc2498eb_IsIgnoreIdent((*((*(_141610_v))))._field_Kind) || _1bc249bb5_IsAnonIdent((*(*(_141610_v)).alloc)._field_Kind))) {
					goto _iter_next_1c13d5533;
				};
				{
					auto expr = &((*((*(_140937_f))))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c13d6b94:;
					if (it != expr_end) {
						jule::Ptr<_1bc269b19_GenericDecl> *_142111_g = it;
						{
							if (((*((*(_141610_v))))._field_Kind == (*((*(_142111_g))))._field_Ident)) {
								goto _julec_label_1c13d60c2;
							};
						}
						_iter_next_1c13d6b94:;
						++it;
						goto _iter_begin_1c13d6b94;
					}
					_iter_end_1c13d6b94:;
				};
				{
					auto expr = &((*((*(_140937_f))))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c13d706d:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ec581_Param> *_142711_p = it;
						{
							if (((*((*(_141610_v))))._field_Kind == (*((*(_142711_p))))._field_Ident)) {
								goto _julec_label_1c13d60c2;
							};
						}
						_iter_next_1c13d706d:;
						++it;
						goto _iter_begin_1c13d706d;
					}
					_iter_end_1c13d706d:;
				};
				_julec_label_1c13d879a:;
				{
					auto expr = &((*((*((*(_140937_f))))._field_Result))._field_Idents);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c13d8b1e:;
					if (it != expr_end) {
						jule::I32 _14358_j = it - expr->begin();
						jule::Ptr<_1bc247014_Token> *_143511_jv = it;
						{
							{
								
								if ((_14358_j >= _14167_i)) {
									_case_begin_1c13d9735:;
									{
										goto _iter_end_1c13d8b1e;
									}
								}
								else if (((*((*(_143511_jv))))._field_Kind == (*((*(_141610_v))))._field_Kind)) {
									_case_begin_1c13d97bd:;
									{
										goto _julec_label_1c13d60c2;
									}
								}
								_match_end_1c13d9625:;
							};
						}
						_iter_next_1c13d8b1e:;
						++it;
						_14358_j++;
						goto _iter_begin_1c13d8b1e;
					}
					_iter_end_1c13d8b1e:;
				};
				goto _iter_next_1c13d5533;
				_julec_label_1c13d60c2:;
				_1bc40ce00_pushErr(_self_, (*(_141610_v)), static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_141610_v))))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
				__jule_func_result=false;
			}
			_iter_next_1c13d5533:;
			++it;
			_14167_i++;
			goto _iter_begin_1c13d5533;
		}
		_iter_end_1c13d5533:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc41d4c6_checkFnVariadicParam(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _145442_f) {
	if (((*((*(_145442_f))))._field_Params.len() == 0LL)) {
		return false;;
	};
	jule::Ptr<_1bc2ec581_Param> _14587_param = (*((*(_145442_f))))._field_Params[((*((*(_145442_f))))._field_Params.len() - 1LL)];;
	if (((*(_14587_param))._field_Variadic && (*_14587_param.alloc)._field_Reference)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*_14587_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic storage cannot be reference", 36)), jule::Slice<jule::Any>());
	};
	return true;;
}



inline void _1bc41d77e_checkFnDeclPrototype(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _146742_f) {
	if (((*((*(_146742_f))))._field_Exceptional && (*((*(_146742_f))))._field_Binded)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_146742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded defines cannot be exceptional", 36)), jule::Slice<jule::Any>());
		return;;
	};
	if ((*((*(_146742_f))))._field_Exceptional) {
		if (_1bc2eea28_IsEntryPoint((*(_146742_f)).ptr())) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_146742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("entry point cannot be exceptional", 33)), jule::Slice<jule::Any>());
		} else if (_1bc2eecae_IsInit((*(_146742_f)).ptr())) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_146742_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("initializer function cannot be exceptional", 42)), jule::Slice<jule::Any>());
		};
	};
	{
		
		if ((!(_1bc41ca03_checkDeclGenerics(_self_.ptr(), &((*((*(_146742_f))))._field_Generics))))) {
			_case_begin_1c13e1473:;
		}
		else if ((!(_1bc41cd44_checkFnDeclParamsDup(_self_.ptr(), _146742_f)))) {
			_case_begin_1c13e14d9:;
		}
		else if ((!(_1bc41d185_checkFnDeclResultDup(_self_, _146742_f)))) {
			_case_begin_1c13e1550:;
		}
		else if ((!(_1bc41d4c6_checkFnVariadicParam(_self_, _146742_f)))) {
			_case_begin_1c13e15b6:;
		}
		_match_end_1c13de6c4:;
	};
}



inline jule::Bool _1bc41dc35_catchTraitInheritCycle(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait> _148939_t1, jule::Ptr<_1bc309769_Trait> _148955_t2, _1a95669ea_Builder* _148972_message) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(_148955_t2))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13e3b4b:;
		if (it != expr_end) {
			jule::Ptr<_1bc4bdc08_TypeSym> _149115_i = *it;
			{
				if (((*(_149115_i))._field_Type == nullptr)) {
					goto _iter_next_1c13e3b4b;
				};
				jule::Ptr<_1bc309769_Trait> _14958_t3 = _1bc4ba4a7_Trait((*(_149115_i))._field_Type.ptr());;
				if ((_148939_t1 == _14958_t3)) {
					_1bc4239b5_pushCycleError(_self_.ptr(), &((*(_148955_t2))._field_Ident), &((*(_14958_t3))._field_Ident), _148972_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if ((!(_1bc41dc35_catchTraitInheritCycle(_self_, _148939_t1, _14958_t3, _148972_message)))) {
					_1bc4239b5_pushCycleError(_self_, &((*(_148955_t2))._field_Ident), &((*(_14958_t3))._field_Ident), _148972_message);
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c13e3b4b:;
			++it;
			goto _iter_begin_1c13e3b4b;
		}
		_iter_end_1c13e3b4b:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc41e076__checkTraitDeclInherits(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _150845_t) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_150845_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13e7413:;
		if (it != expr_end) {
			jule::I32 _15108_i = it - expr->begin();
			jule::Ptr<_1bc4bdc08_TypeSym> _151015_it = *it;
			{
				if ((!(_1bc412ee3_checkTypeSym(_self_, &(_151015_it), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4))))) {
					__jule_func_result=false;
					goto _iter_next_1c13e7413;
				};
				jule::Ptr<_1bc309769_Trait> _15158_t2 = _1bc4ba4a7_Trait((*(_151015_it))._field_Type.ptr());;
				if ((_15158_t2 == nullptr)) {
					_1bc40ce00_pushErr(_self_.ptr(), (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ cannot implement @, type should be trait", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_150845_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_151015_it))._field_Type), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1c13e7413;
				};
				{
					auto expr = &((*((*(_150845_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c13e9316:;
					if (it != expr_end) {
						jule::I32 _15218_j = it - expr->begin();
						jule::Ptr<_1bc4bdc08_TypeSym> _152111_it2 = *it;
						{
							if ((_15218_j >= _15108_i)) {
								goto _iter_end_1c13e9316;
							};
							if ((((*(_152111_it2))._field_Type != nullptr) && _1bc4b6c34_Equal((*(_151015_it))._field_Type, (*_152111_it2.alloc)._field_Type))) {
								_1bc40ce00_pushErr(_self_.ptr(), (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_15158_t2))._field_Ident, &__jule_any_type5); __jule_collection; }));
								__jule_func_result=false;
								goto _iter_end_1c13e9316;
							};
						}
						_iter_next_1c13e9316:;
						++it;
						_15218_j++;
						goto _iter_begin_1c13e9316;
					}
					_iter_end_1c13e9316:;
				};
				if (((*(_150845_t)) == _15158_t2)) {
					_1bc40ce00_pushErr(_self_.ptr(), (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_150845_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				} else {
					_1a95669ea_Builder _15359_message = static__1a9567369_New(64LL);;
					__jule_func_result=(__jule_func_result && _1bc41dc35_catchTraitInheritCycle(_self_, (*(_150845_t)), _15158_t2, &(_15359_message)));
					if ((_1a9568810_Len(&_15359_message) > 0LL)) {
						jule::Str _153810_errMsg = _1a956837b_Str(&_15359_message);;
						_1a9568579_Clear(&_15359_message);
						_1bc4239b5_pushCycleError(_self_, &((*((*(_150845_t))))._field_Ident), &((*(_15158_t2))._field_Ident), &(_15359_message));
						_153810_errMsg+=_1a956837b_Str(&_15359_message);
						_1bc40ce00_pushErr(_self_, (*((*_151015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_153810_errMsg, &__jule_any_type5); __jule_collection; }));
					};
				};
			}
			_iter_next_1c13e7413:;
			++it;
			_15108_i++;
			goto _iter_begin_1c13e7413;
		}
		_iter_end_1c13e7413:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1bc41e32e_checkTraitDeclInherits(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _154944_t) {
	{
		auto expr = &((*((*(_154944_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c13e7bc7:;
		if (it != expr_end) {
			jule::I32 _15508_i = it - expr->begin();
			jule::Ptr<_1bc4bdc08_TypeSym> _155015_it = *it;
			{
				jule::Ptr<_1bc309769_Trait> _15518_t1 = _1bc4ba4a7_Trait((*(_155015_it))._field_Type.ptr());;
				{
					auto expr = &((*((*(_154944_t))))._field_Inherits);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1403e9c:;
					if (it != expr_end) {
						jule::I32 _15529_j = it - expr->begin();
						jule::Ptr<_1bc4bdc08_TypeSym> _155216_it2 = *it;
						{
							if ((_15529_j == _15508_i)) {
								goto _iter_next_1c1403e9c;
							};
							jule::Ptr<_1bc309769_Trait> _15569_t2 = _1bc4ba4a7_Trait((*(_155216_it2))._field_Type);;
							{
								auto expr = &((*(_15518_t1))._field_Methods);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c14057c8:;
								if (it != expr_end) {
									jule::Ptr<_1bc2ee055_Fn> _155717_t1m = *it;
									{
										jule::Ptr<_1bc2ee055_Fn> _155810_t2m = _1bc30a44b_FindMethod(_15569_t2.ptr(), (*(_155717_t1m))._field_Ident);;
										if ((_155810_t2m == nullptr)) {
											goto _iter_next_1c14057c8;
										};
										jule::Ptr<_1bc302113_FnIns> _15626_t1f = _1bc417415_getTraitCheckFnKind(_self_, &(_155717_t1m));;
										jule::Ptr<_1bc302113_FnIns> _15636_t2f = _1bc417415_getTraitCheckFnKind(_self_, &(_155810_t2m));;
										if ((!(_1bc3030ae_equalTrait(_15626_t1f, &(_15636_t2f))))) {
											_1bc40ce00_pushErr(_self_, (*((*_155015_it.alloc)._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ inherits trait @, but same identifiers implemented different;\n       @\n       @", 87)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_154944_t))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_15569_t2.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1bc303ee4_GetKindStr(_15626_t1f, true), &__jule_any_type5); (*it++) = jule::Any(_1bc303ee4_GetKindStr(_15636_t2f.ptr(), true), &__jule_any_type5); __jule_collection; }));
											return;;
										};
									}
									_iter_next_1c14057c8:;
									++it;
									goto _iter_begin_1c14057c8;
								}
								_iter_end_1c14057c8:;
							};
						}
						_iter_next_1c1403e9c:;
						++it;
						_15529_j++;
						goto _iter_begin_1c1403e9c;
					}
					_iter_end_1c1403e9c:;
				};
			}
			_iter_next_1c13e7bc7:;
			++it;
			_15508_i++;
			goto _iter_begin_1c13e7bc7;
		}
		_iter_end_1c13e7bc7:;
	};
}



inline void _1bc41e5d7_checkTraitDeclMethod(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _157442_f) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_157442_f))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_157442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1bc249bb5_IsAnonIdent((*((*(_157442_f))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_157442_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	(*((*(_157442_f))))._field_sema=_self_;
	_1bc41d77e_checkFnDeclPrototype(_self_, _157442_f);
	jule::Ptr<_1bc302113_FnIns> _15827_ins = _1bc3007e8_instance((*(_157442_f)));;
	_1bc418c63_reloadFnInsTypes(_self_, _15827_ins);
	(*(_15827_ins))._field_reloaded=true;
	_1bc300b06_appendInstance((*(_157442_f)).ptr(), &(_15827_ins));
}



inline void _1bc41e890_checkTraitDeclMethods(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _158843_t) {
	{
		auto expr = &((*((*(_158843_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c140ce51:;
		if (it != expr_end) {
			jule::I32 _15898_i = it - expr->begin();
			jule::Ptr<_1bc2ee055_Fn> _158915_f = *it;
			{
				_1bc41e5d7_checkTraitDeclMethod(_self_, &(_158915_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return;;
				};
				if ((_1bc30aacd_findMethodInherit((*(_158843_t)).ptr(), &((*(_158915_f))._field_Ident)) != nullptr)) {
					_1bc40ce00_pushErr(_self_, (*_158915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_158915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
					goto _iter_next_1c140ce51;
				};
				_julec_label_1c1410d55:;
				{
					auto expr = &((*((*(_158843_t))))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c1411295:;
					if (it != expr_end) {
						jule::I32 _16058_j = it - expr->begin();
						jule::Ptr<_1bc2ee055_Fn> _160511_jf = *it;
						{
							{
								
								if ((_16058_j >= _15898_i)) {
									_case_begin_1c1411dab:;
									{
										goto _iter_end_1c1411295;
									}
								}
								else if (((*(_158915_f))._field_Ident == (*(_160511_jf))._field_Ident)) {
									_case_begin_1c1411e44:;
									{
										_1bc40ce00_pushErr(_self_, (*_158915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_158915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
										_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
										goto _iter_end_1c1411295;
									}
								}
								_match_end_1c1411c9b:;
							};
						}
						_iter_next_1c1411295:;
						++it;
						_16058_j++;
						goto _iter_begin_1c1411295;
					}
					_iter_end_1c1411295:;
				};
			}
			_iter_next_1c140ce51:;
			++it;
			_15898_i++;
			goto _iter_begin_1c140ce51;
		}
		_iter_end_1c140ce51:;
	};
}



inline void _1bc41eb48_checkTraitDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc309769_Trait>* _162436_t) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_162436_t))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_162436_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1bc40db15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_162436_t))), &((*((*(_162436_t))))._field_Ident), false)) {
		_1bc40ce00_pushErr(_self_, (*((*(_162436_t))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_162436_t))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1bc41e32e_checkTraitDeclInherits(_self_, _162436_t);
	_1bc41e890_checkTraitDeclMethods(_self_, _162436_t);
}



inline jule::Bool _1bc41edce_checkTraitDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1417059:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _163815_t = *it;
			{
				_1bc41eb48_checkTraitDecl(_self_, &(_163815_t));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c1417059:;
			++it;
			goto _iter_begin_1c1417059;
		}
		_iter_end_1c1417059:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc4202ca_checkTraitImplMethods(_1bc409eeb_sema* _self_, jule::Ptr<_1bc309769_Trait>* _164842_base, jule::Ptr<_1bc3a7718_Impl>* _164857_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_164857_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1418a3e:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> *_165010_f = it;
			{
				if ((_1bc30a44b_FindMethod((*(_164842_base)).ptr(), (*((*(_165010_f))))._field_Ident) == nullptr)) {
					_1bc40ce00_pushErr(_self_, (*(*(_165010_f)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: trait @ has no define @", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_164842_base))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_165010_f)).alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1c1418a3e:;
			++it;
			goto _iter_begin_1c1418a3e;
		}
		_iter_end_1c1418a3e:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc4206c6_implToStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _165934_dest, jule::Ptr<_1bc3a7718_Impl>* _165954_ipl) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_165954_ipl))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c141b3b0:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _166315_f = *it;
			{
				if (((_1bc27de19_FindMethod((*(_165934_dest)).ptr(), (*(_166315_f))._field_Ident, (*_166315_f.alloc)._field_Statically) != nullptr) || (_1bc27e59b_FindField((*(_165934_dest)).ptr(), (*_166315_f.alloc)._field_Ident) != nullptr))) {
					_1bc40ce00_pushErr(_self_.ptr(), (*_166315_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165934_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_166315_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1c141b3b0;
				};
				if ((((*((*(_165934_dest))))._field_Generics.len() > 0LL) && ((*(_166315_f))._field_Generics.len() > 0LL))) {
					{
						auto expr = &((*_166315_f.alloc)._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c141e4d4:;
						if (it != expr_end) {
							jule::Ptr<_1bc269b19_GenericDecl> _167112_fg = *it;
							{
								{
									auto expr = &((*((*(_165934_dest))))._field_Generics);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c141eec9:;
									if (it != expr_end) {
										jule::Ptr<_1bc269b19_GenericDecl> _167213_dg = *it;
										{
											if (((*(_167112_fg))._field_Ident == (*(_167213_dg))._field_Ident)) {
												_1bc40ce00_pushErr(_self_.ptr(), (*_167112_fg.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods cannot have same generic identifier with owner same time", 64)), jule::Slice<jule::Any>());
												__jule_func_result=false;
											};
										}
										_iter_next_1c141eec9:;
										++it;
										goto _iter_begin_1c141eec9;
									}
									_iter_end_1c141eec9:;
								};
							}
							_iter_next_1c141e4d4:;
							++it;
							goto _iter_begin_1c141e4d4;
						}
						_iter_end_1c141e4d4:;
					};
				};
				_1bc40de78_checkDirectives(_self_, &((*(_166315_f))._field_Directives), jule::Any(_166315_f, &__jule_any_type10));
				(*_166315_f.alloc)._field_sema=_self_;
				(*_166315_f.alloc)._field_Owner=(*(_165934_dest));
				{ jule::Slice<jule::Ptr<_1bc2ee055_Fn>> &__jule_push_dest = (*((*(_165934_dest))))._field_Methods; __jule_push_dest.push(_166315_f); };
			}
			_iter_next_1c141b3b0:;
			++it;
			goto _iter_begin_1c141b3b0;
		}
		_iter_end_1c141b3b0:;
	};
	{
		auto expr = &((*((*(_165954_ipl))))._field_Statics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c141b745:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _168815_v = *it;
			{
				;
				if (((_1bc27de19_FindMethod((*(_165934_dest)).ptr(), (*(_168815_v))._field_Ident, true) != nullptr) || (_1bc27e25a_FindStatic((*(_165934_dest)).ptr(), (*_168815_v.alloc)._field_Ident) != nullptr))) {
					_1bc40ce00_pushErr(_self_.ptr(), (*_168815_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier duplication: struct @ already have define @", 54)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_165934_dest))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_168815_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
					goto _iter_next_1c141b745;
				};
				{ jule::Slice<jule::Ptr<_1bc42dc12_Var>> &__jule_push_dest = (*((*(_165934_dest))))._field_Statics; __jule_push_dest.push(_168815_v); };
			}
			_iter_next_1c141b745:;
			++it;
			goto _iter_begin_1c141b745;
		}
		_iter_end_1c141b745:;
	};
	return __jule_func_result;;
}



inline void _1bc42097e_implTrait(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc3a7718_Impl>* _170131_decl) {
	jule::Ptr<_1bc4b64e7_Type> _17027_base_t = _1bc4140d2_selectType(_self_, &((*((*(_170131_decl))))._field_Base));;
	if ((_17027_base_t == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc309769_Trait> _17067_base = _1bc4ba4a7_Trait(_17027_base_t.ptr());;
	if ((_17067_base == nullptr)) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_170131_decl))))._field_Base))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid base type for impl: @", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str(_17027_base_t), &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected trait, use a trait", 27)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc4b64e7_Type> _17137_destT = _1bc4140d2_selectType(_self_, &((*((*(_170131_decl))))._field_Dest));;
	if ((_17137_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _17177_destS = _1bc4ba221_Struct(_17137_destT.ptr());;
	if ((_17177_destS == nullptr)) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_170131_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str(_17137_destT), &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc27d26a_Struct> _17247_dest = (*(_17177_destS))._field_Decl;;
	if ((_1bc24d746_Dir((*((*(_17247_dest))._field_Token))._field_File.ptr()) != _1bc24d746_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_170131_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	_1bc42bb66_pushImplemented(_17067_base, &(_17247_dest));
	_1bc42be52_pushImplements(&(_17247_dest), _17067_base);
	if (((*((*(_170131_decl))))._field_Statics.len() > 0LL)) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_170131_decl))))._field_Statics[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot implement static field", 51)), jule::Slice<jule::Any>());
	};
	{
		
		if ((!(_1bc4202ca_checkTraitImplMethods(_self_, &(_17067_base), _170131_decl)))) {
			_case_begin_1c1430094:;
		}
		else if ((!(_1bc4206c6_implToStruct(_self_, &(_17247_dest), _170131_decl)))) {
			_case_begin_1c143010a:;
		}
		_match_end_1c142e0e8:;
	};
}



inline void _1bc420c37_implStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc3a7718_Impl>* _174432_decl) {
	jule::Ptr<_1bc4b64e7_Type> _17457_destT = _1bc4140d2_selectType(_self_, &((*((*(_174432_decl))))._field_Dest));;
	if ((_17457_destT == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _17497_destS = _1bc4ba221_Struct(_17457_destT.ptr());;
	if ((_17497_destS == nullptr)) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_174432_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid destination type for impl: @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str(_17457_destT), &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected structure, use a structure", 35)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc27d26a_Struct> _17567_dest = (*(_17497_destS))._field_Decl;;
	if ((_1bc24d746_Dir((*((*(_17567_dest))._field_Token))._field_File.ptr()) != _1bc24d746_Dir((*((*_self_.alloc)._field_file))._field_File.ptr()))) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_174432_decl))))._field_Dest))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal implementation via definition from out of package", 57)), jule::Slice<jule::Any>());
		return;;
	};
	{
		
		if ((!(_1bc4206c6_implToStruct(_self_, &(_17567_dest), _174432_decl)))) {
			_case_begin_1c1435e13:;
		}
		_match_end_1c14344c7:;
	};
}



inline void _1bc420ee0_implImpl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc3a7718_Impl>* _176830_decl) {
	{
		
		if (_1bc3a7b14_IsTraitImpl((*(_176830_decl)).ptr())) {
			_case_begin_1c14369a2:;
			{
				_1bc42097e_implTrait(_self_, _176830_decl);
			}
		}
		else if (_1bc3a7d9a_IsStructImpl((*(_176830_decl)).ptr())) {
			_case_begin_1c1436a4b:;
			{
				_1bc420c37_implStruct(_self_, _176830_decl);
			}
		}
		_match_end_1c1436881:;
	};
}



inline void _1bc421353_checkVarDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _177934_decl, jule::Trait _177950_l) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_177934_decl))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	};
	if (_1bc42e3a5_IsTypeInferred((*(_177934_decl)).ptr())) {
		if ((!(_1bc42e11e_IsInitialized((*(_177934_decl)).ptr())))) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type inferred declarations should have a initializer expression", 63)), jule::Slice<jule::Any>());
		};
	} else {
		jule::Ptr<_1bc3cab26_ReferenceStack> _17898_refers = static_cast<jule::Ptr<_1bc3cab26_ReferenceStack>>(nullptr);;
		{
			auto &_match_expr{ _177950_l };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4)) {
				_case_begin_1c143ab93:;
				{
					_17898_refers=(*((*(_177934_decl))))._field_Refers;
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
				_case_begin_1c143b16b:;
				{
					_17898_refers=_1bc3b7d88_getOwnerRefers(_177950_l.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));
				}
			}
			else {
				_case_begin_1c143ac81:;
				{
					__jule_panic_s(jule::Str::lit("sema: checkVarDecl: unimplemented referencer", 44) + jule::Str("\nlocation: std/jule/sema/sema.jule:1796:5"));;
				}
			}
			_match_end_1c143ac1a:;
		};
		(*((*((*(_177934_decl))))._field_TypeSym))._field_Type=_1bc413499_checkTypeSymRefers(_self_, &((*(*((*(_177934_decl))))._field_TypeSym.alloc)._field_Decl), _177950_l, _17898_refers);
	};
	if ((*((*(_177934_decl))))._field_Reference) {
		if ((*((*(_177934_decl))))._field_Constant) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("references cannot be constant", 29)), jule::Slice<jule::Any>());
		};
		if ((*((*(_177934_decl))))._field_Statically) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables cannot be reference", 36)), jule::Slice<jule::Any>());
		};
	};
	if ((!(_1bc42e11e_IsInitialized((*(_177934_decl)).ptr())))) {
		if ((*((*(_177934_decl))))._field_Constant) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for constant variable initialization", 55)), jule::Slice<jule::Any>());
		};
		if ((*((*(_177934_decl))))._field_Statically) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static variables must be have initialize expression", 51)), jule::Slice<jule::Any>());
		};
		if ((*((*(_177934_decl))))._field_Reference) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(_177934_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("reference variables must be have lvalue initialize expression", 61)), jule::Slice<jule::Any>());
		};
	};
}



inline void _1bc42160b_checkGlobalVarDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _182540_decl) {
	if (_1bc40db15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_182540_decl))), &((*((*(_182540_decl))))._field_Ident), (*((*(_182540_decl))))._field_Binded)) {
		_1bc40ce00_pushErr(_self_, (*((*(_182540_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_182540_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	if (((*((*(_182540_decl))))._field_Binded && (*((*(_182540_decl))))._field_Constant)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_182540_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot be constant", 35)), jule::Slice<jule::Any>());
	};
	if ((((!((*((*(_182540_decl))))._field_Binded)) && (!((*((*(_182540_decl))))._field_Constant))) && (!((*((*(_182540_decl))))._field_Statically)))) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_182540_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("global variables must be static", 31)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"static\" keyword to define", 30)), jule::Slice<jule::Any>());
	};
	_1bc40de78_checkDirectives(_self_, &((*((*(_182540_decl))))._field_Directives), jule::Any((*(_182540_decl)), &__jule_any_type7));
	_1bc421353_checkVarDecl(_self_, _182540_decl, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));
}



inline jule::Bool _1bc421892_checkGlobalDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35792c9:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _184315_decl = *it;
			{
				_1bc42160b_checkGlobalVarDecl(_self_, &(_184315_decl));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c35792c9:;
			++it;
			goto _iter_begin_1c35792c9;
		}
		_iter_end_1c35792c9:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc421c8d_checkStructTraitImpl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _185342_strct, jule::Ptr<_1bc309769_Trait>* _185363_trt) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_185363_trt))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c357abb0:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _185415_tf = *it;
			{
				jule::Bool _18558_exist = false;;
				jule::Ptr<_1bc2ee055_Fn> _18568_sf = _1bc27de19_FindMethod((*(_185342_strct)).ptr(), (*(_185415_tf))._field_Ident, (*_185415_tf.alloc)._field_Statically);;
				jule::Ptr<_1bc302113_FnIns> _18574_tfK = _1bc417415_getTraitCheckFnKind(_self_, &(_185415_tf));;
				if ((_18568_sf != nullptr)) {
					jule::Ptr<_1bc302113_FnIns> _18599_sfK = _1bc417415_getTraitCheckFnKind(_self_, &(_18568_sf));;
					if ((_18599_sfK != nullptr)) {
						_18558_exist=_1bc3030ae_equalTrait(_18574_tfK, &(_18599_sfK));
					};
				};
				if (_18558_exist) {
					jule::Ptr<_1bc25bd2b_Directive> _18655_d = _1bc4acc6e_findDirective(&((*(_18568_sf))._field_Directives), static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
					if ((_18655_d != nullptr)) {
						_1bc40ce00_pushErr(_self_, (*_18655_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("trait implementations cannot have deprecated code", 49)), jule::Slice<jule::Any>());
					};
					__jule_func_result=false;
				} else {
					;
					_1bc40ce00_pushErr(_self_, (*((*(_185342_strct))))._field_Token, static_cast<jule::Str>(jule::Str::lit("trait @ derived but not implemented define @", 44)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_185363_trt))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1bc303ee4_GetKindStr(_18574_tfK.ptr(), true), &__jule_any_type5); __jule_collection; }));
					__jule_func_result=false;
				};
			}
			_iter_next_1c357abb0:;
			++it;
			goto _iter_begin_1c357abb0;
		}
		_iter_end_1c357abb0:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc4220ce_checkStructImpls(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _187938_s) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_187938_s))))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35820c3:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _188115_trt = *it;
			{
				__jule_func_result=(_1bc421c8d_checkStructTraitImpl(_self_, _187938_s, &(_188115_trt)) && __jule_func_result);
			}
			_iter_next_1c35820c3:;
			++it;
			goto _iter_begin_1c35820c3;
		}
		_iter_end_1c35820c3:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc422420_checkStructFields(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _188739_st) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*((*(_188739_st))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3583569:;
		if (it != expr_end) {
			jule::Ptr<_1bc27a377_Field> _188915_f = *it;
			{
				(*(_188915_f))._field_Owner=(*(_188739_st));
				{
					auto expr = &((*((*(_188739_st))))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c3584328:;
					if (it != expr_end) {
						jule::Ptr<_1bc27a377_Field> _189111_cf = *it;
						{
							if ((_188915_f == _189111_cf)) {
								goto _iter_end_1c3584328;
							} else if (((*_188915_f.alloc)._field_Ident == (*(_189111_cf))._field_Ident)) {
								_1bc40ce00_pushErr(_self_.ptr(), (*_188915_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_188915_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
								_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
								__jule_func_result=false;
							};
						}
						_iter_next_1c3584328:;
						++it;
						goto _iter_begin_1c3584328;
					}
					_iter_end_1c3584328:;
				};
			}
			_iter_next_1c3583569:;
			++it;
			goto _iter_begin_1c3583569;
		}
		_iter_end_1c3583569:;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1bc4226c8_checkStructDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _190437_s) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_190437_s))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_190437_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1bc40db15_isDuplicatedIdent(_self_.ptr(), static_cast<jule::Uintptr>((*(_190437_s))), &((*((*(_190437_s))))._field_Ident), (*((*(_190437_s))))._field_Binded)) {
		_1bc40ce00_pushErr(_self_, (*((*(_190437_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_190437_s))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
	_1bc40de78_checkDirectives(_self_, &((*((*(_190437_s))))._field_Directives), jule::Any((*(_190437_s)), &__jule_any_type9));
	{
		
		if ((!(_1bc41ca03_checkDeclGenerics(_self_, &((*((*(_190437_s))))._field_Generics))))) {
			_case_begin_1c14401e7:;
		}
		else if ((!(_1bc422420_checkStructFields(_self_, _190437_s)))) {
			_case_begin_1c144025d:;
		}
		else if ((!(_1bc4220ce_checkStructImpls(_self_, _190437_s)))) {
			_case_begin_1c14402c4:;
		}
		else if ((!(_1bc423311_checkFuncDeclsBy(_self_, &((*((*(_190437_s))))._field_Methods))))) {
			_case_begin_1c144033a:;
		}
		_match_end_1c14400b5:;
	};
}



inline jule::Bool _1bc42295e_checkStructDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14427d2:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _192415_s = *it;
			{
				_1bc4226c8_checkStructDecl(_self_, &(_192415_s));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c14427d2:;
			++it;
			goto _iter_begin_1c14427d2;
		}
		_iter_end_1c14427d2:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc422c17_checkAnonFuncDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _193439_f) {
	(*((*(_193439_f))))._field_sema=_self_;
	_1bc41d77e_checkFnDeclPrototype(_self_, _193439_f);
}



inline void _1bc422ec0_checkFuncDecl(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _193935_f) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_193935_f))))._field_Ident)) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_193935_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("ignore operator cannot use as identifier for this declaration", 61)), jule::Slice<jule::Any>());
	} else if (_1bc300045_IsAnon((*(_193935_f)).ptr())) {
		_1bc40ce00_pushErr(_self_.ptr(), (*((*(_193935_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("anonymous functions are not allowed in this scope", 49)), jule::Slice<jule::Any>());
	};
	_1bc40de78_checkDirectives(_self_, &((*((*(_193935_f))))._field_Directives), jule::Any((*(_193935_f)), &__jule_any_type10));
	_1bc422c17_checkAnonFuncDecl(_self_, _193935_f);
	if ((((*((*(_193935_f))))._field_Owner == nullptr) && _1bc40db15_isDuplicatedIdent(_self_, static_cast<jule::Uintptr>((*(_193935_f))), &((*((*(_193935_f))))._field_Ident), (*((*(_193935_f))))._field_Binded))) {
		if ((*((*(_193935_f))))._field_Ident.equal("init", 4)) {
			jule::Ptr<_1bc2ee055_Fn> _19515_init = _1bc40b5b3_FindFn(_self_, jule::Str::lit("init", 4), false);;
			if ((_19515_init != nullptr)) {
				return;;
			};
		};
		_1bc40ce00_pushErr(_self_, (*((*(_193935_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("identifier \"@\" is duplicated for scope, used by another declaration", 67)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_193935_f))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("rename definition to avoid duplication", 38)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bc423311_checkFuncDeclsBy(jule::Ptr<_1bc409eeb_sema> _self_, jule::Slice<jule::Ptr<_1bc2ee055_Fn>>* _196138_funcs) {
	{
		auto expr = _196138_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c144a3ab:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _196215_f = *it;
			{
				_1bc422ec0_checkFuncDecl(_self_, &(_196215_f));
				if (((*_self_.alloc)._field_errors.len() > 0LL)) {
					return false;;
				};
			}
			_iter_next_1c144a3ab:;
			++it;
			goto _iter_begin_1c144a3ab;
		}
		_iter_end_1c144a3ab:;
	};
	return true;;
}



inline jule::Bool _1bc423597_checkFuncDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1bc423311_checkFuncDeclsBy(_self_, &((*((*_self_.alloc)._field_file))._field_Funcs));
	return __jule_func_result;;
}



inline void _1bc4239b5_pushCycleError(_1bc409eeb_sema* _self_, jule::Str* _197727_st1, jule::Str* _197738_st2, _1a95669ea_Builder* _197753_message) {
	;
	jule::Str _19793_refersTo = _1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_197727_st1)), &__jule_any_type5); (*it++) = jule::Any((*(_197738_st2)), &__jule_any_type5); __jule_collection; }));;
	jule::Str _19803_m = _1a956837b_Str(_197753_message);;
	({
		auto except = _1a95679eb_WriteStr(_197753_message, _1abb2d60e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1981:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_197753_message, _19793_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1982:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_197753_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1983:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_197753_message, _19803_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/sema.jule:1984:3"));
		(except.result);
	});
}



inline void _1bc424169_checkPackageDecls(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14520c7:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _200415_f = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_.ptr(), _200415_f);
				if ((!(_1bc41a924_checkTypeAliasDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c14520c7:;
			++it;
			goto _iter_begin_1c14520c7;
		}
		_iter_end_1c14520c7:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14525a0:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _201115_f = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_, _201115_f);
				if ((!(_1bc41edce_checkTraitDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c14525a0:;
			++it;
			goto _iter_begin_1c14525a0;
		}
		_iter_end_1c14525a0:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c145356d:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _201815_f = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_, _201815_f);
				if ((!(_1bc421892_checkGlobalDecls(_self_)))) {
					return;;
				};
			}
			_iter_next_1c145356d:;
			++it;
			goto _iter_begin_1c145356d;
		}
		_iter_end_1c145356d:;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c14545b3:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _202515_f = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_, _202515_f);
				{
					
					if ((!(_1bc423597_checkFuncDecls(_self_)))) {
						_case_begin_1c1455cce:;
					}
					else if ((!(_1bc42295e_checkStructDecls(_self_)))) {
						_case_begin_1c1455d78:;
					}
					else {
						_case_begin_1c1455729:;
						{
							goto _iter_next_1c14545b3;
						}
					}
					_match_end_1c1455c35:;
				};
				return;;
			}
			_iter_next_1c14545b3:;
			++it;
			goto _iter_begin_1c14545b3;
		}
		_iter_end_1c14545b3:;
	};
}



inline void _1bc4244cc_checkDataForTypeInference(_1bc409eeb_sema* _self_, jule::Ptr<_1bc48354c_Data>* _203742_d, jule::Ptr<_1bc247014_Token>* _203753_errToken) {
	{
		
		if (_1bc48396a_IsNil((*(_203742_d)).ptr())) {
			_case_begin_1c1456de0:;
			{
				_1bc40ce00_pushErr(_self_, (*(_203753_errToken)), static_cast<jule::Str>(jule::Str::lit("nil is cannot use with type inferred definitions", 48)), jule::Slice<jule::Any>());
			}
		}
		else if (_1bc483c01_IsVoid((*(_203742_d)).ptr())) {
			_case_begin_1c1456e89:;
			{
				_1bc40ce00_pushErr(_self_, (*(_203753_errToken)), static_cast<jule::Str>(jule::Str::lit("void data is cannot use for type inferred definitions", 53)), jule::Slice<jule::Any>());
			}
		}
		else if ((*((*((*(_203742_d))))._field_Type))._field_Variadic) {
			_case_begin_1c1457000:;
			{
				_1bc40ce00_pushErr(_self_, (*(_203753_errToken)), static_cast<jule::Str>(jule::Str::lit("invalid expression for type inference", 37)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c1456cad:;
	};
}



inline void _1bc424785_checkVarValue(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _204935_v) {
	if (_1bc42e3a5_IsTypeInferred((*(_204935_v)).ptr())) {
		(*((*(_204935_v))))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*((*((*((*(_204935_v))))._field_Value))._field_Data))._field_Type});
		_1bc4244cc_checkDataForTypeInference(_self_.ptr(), &((*(*((*(_204935_v))))._field_Value.alloc)._field_Data), &((*((*(*((*(_204935_v))))._field_Value.alloc)._field_Expr))._field_Token));
		_1bc419b76_checkValidityForInitExpr(_self_, (*((*(_204935_v))))._field_Mutable, (*((*(_204935_v))))._field_Reference, &((*((*((*(_204935_v))))._field_TypeSym))._field_Type), &((*(*((*(_204935_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_204935_v))))._field_Value))._field_Expr.alloc)._field_Token));
	} else {
		jule::Ptr<_1bc4c5e30_Arr> _20628_arr = _1bc4b996d_Arr((*((*((*(_204935_v))))._field_TypeSym))._field_Type.ptr());;
		if ((_20628_arr != nullptr)) {
			if ((*_20628_arr.alloc)._field_Auto) {
				jule::Ptr<_1bc4c5e30_Arr> _20656_dataArr = _1bc4b996d_Arr((*((*((*((*(_204935_v))))._field_Value))._field_Data))._field_Type.ptr());;
				if ((_20656_dataArr != nullptr)) {
					(*_20628_arr.alloc)._field_N=(*_20656_dataArr.alloc)._field_N;
				};
			};
		};
		if (_1bc4153e1_checkAssignType(_self_, (*((*(_204935_v))))._field_Reference, &((*(*((*(_204935_v))))._field_TypeSym.alloc)._field_Type), &((*((*((*(_204935_v))))._field_Value))._field_Data), (*((*(*((*(_204935_v))))._field_Value.alloc)._field_Expr))._field_Token, (*((*(_204935_v))))._field_Refers)) {
			_1bc419b76_checkValidityForInitExpr(_self_, (*((*(_204935_v))))._field_Mutable, (*((*(_204935_v))))._field_Reference, &((*(*((*(_204935_v))))._field_TypeSym.alloc)._field_Type), &((*(*((*(_204935_v))))._field_Value.alloc)._field_Data), &((*(*((*((*(_204935_v))))._field_Value))._field_Expr.alloc)._field_Token));
		};
	};
	if ((*((*(_204935_v))))._field_Constant) {
		if (((!(_1bc483e87_IsConst((*((*((*(_204935_v))))._field_Value))._field_Data.ptr()))) && (!(_1bc4bac5a_comptime((*(*((*((*(_204935_v))))._field_Value))._field_Data.alloc)._field_Type.ptr()))))) {
			_1bc40ce00_pushErr(_self_.ptr(), (*((*(*((*(_204935_v))))._field_Value.alloc)._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		};
	} else {
		(*((*((*((*(_204935_v))))._field_Value))._field_Data))._field_Constant=nullptr;
		(*(*((*((*(_204935_v))))._field_Value))._field_Data.alloc)._field_untyped=false;
	};
	if ((_1bc4ba9c4_Tup((*((*((*(_204935_v))))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
		(*(*((*(_204935_v))))._field_TypeSym.alloc)._field_Type=nullptr;
	};
}



inline void _1bc424ae8_evalVarValue(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _209834_decl, jule::Trait _209850_l) {
	if ((!(_1bc42e11e_IsInitialized((*(_209834_decl)).ptr())))) {
		return;;
	};
	jule::Ptr<_1bc48551b_eval> _21037_eval = static_cast<jule::Ptr<_1bc48551b_eval>>(nullptr);;
	if (((*((*(_209834_decl))))._field_TypeSym != nullptr)) {
		_21037_eval=_1bc414588_evalpd(_self_, _209850_l, (*(*((*(_209834_decl))))._field_TypeSym.alloc)._field_Type, (*(_209834_decl)));
	} else {
		_21037_eval=_1bc414588_evalpd(_self_, _209850_l, nullptr, (*(_209834_decl)));
	};
	(*(_21037_eval))._field_target._field_mutable=(*((*(_209834_decl))))._field_Mutable;
	(*((*((*(_209834_decl))))._field_Value))._field_Data=_1bc4a4309_evalExpr(_21037_eval, (*(*((*(_209834_decl))))._field_Value.alloc)._field_Expr);
}



inline void _1bc424e5b_checkVar(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc42dc12_Var>* _211530_decl, jule::Trait _211546_l) {
	_1bc424ae8_evalVarValue(_self_, _211530_decl, _211546_l);
	if (((*((*((*(_211530_decl))))._field_Value))._field_Data == nullptr)) {
		return;;
	};
	_1bc424785_checkVarValue(_self_, _211530_decl);
}



inline void _1bc425159_checkGlobals(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c046caa5:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _212515_decl = *it;
			{
				if (((*(_212515_decl))._field_Binded || (*_212515_decl.alloc)._field_Used)) {
					goto _iter_next_1c046caa5;
				};
				_1bc424e5b_checkVar(_self_, &(_212515_decl), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));
			}
			_iter_next_1c046caa5:;
			++it;
			goto _iter_begin_1c046caa5;
		}
		_iter_end_1c046caa5:;
	};
}



inline jule::Ptr<_1bc302113_FnIns> _1bc425555_readyToCheckFn(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _213836_s, jule::Ptr<_1bc2ee055_Fn>* _213856_f) {
	jule::Ptr<_1bc302113_FnIns> _21397_ins = _1bc3007e8_instance((*(_213856_f)));;
	if (((*((*(_213856_f))))._field_Instances.len() != 0LL)) {
		return _21397_ins;;
	};
	(*(_21397_ins))._field_Owner=(*(_213836_s));
	_1bc300b06_appendInstance((*(_213856_f)).ptr(), &(_21397_ins));
	(*_21397_ins.alloc)._field_reloaded=true;
	if (_1bc418c63_reloadFnInsTypes(_self_, _21397_ins)) {
		return _21397_ins;;
	};
	return nullptr;;
}



inline __jule_tuple_bool__jule_tuple_bool _1bc425951_checkGenericFn(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _215436_f, jule::Ptr<_1bc247014_Token>* _215452_et) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=_1bc418c63_reloadFnInsTypes(_self_, (*(_215436_f)));
	(*((*(_215436_f))))._field_reloaded=true;
	if ((!(__jule_func_result.__jule_result_arg0))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc302113_FnIns> _21607_existInstance = _1bc300b06_appendInstance((*((*(_215436_f))))._field_Decl.ptr(), _215436_f);;
	if ((!(_1bc4178bb_checkConstraintsFn(_self_, _215436_f, _215452_et, _21607_existInstance)))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_21607_existInstance != nullptr)) {
		(*(_215436_f))=_21607_existInstance;
		__jule_func_result.__jule_result_arg1=true;
	} else {
		_1bc4284ae_checkFnInsCaller(_self_, _215436_f, (*(_215452_et)));
	};
	__jule_func_result.__jule_result_arg0=true;
	return __jule_func_result;;
}



inline void _1bc425cb4_checkTypeMethod(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _217737_s, jule::Ptr<_1bc2ee055_Fn>* _217757_f) {
	if (((*((*(_217757_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	jule::Ptr<_1bc302113_FnIns> _21827_ins = (*((*(_217757_f))))._field_Instances[0LL];;
	if (((*((*(_21827_ins))._field_Scope))._field_Stmts.len() > 0LL)) {
		return;;
	};
	_1bc428767_checkFnIns(_self_, &(_21827_ins));
}



inline jule::Ptr<_1bc302113_FnIns> _1bc42626a_checkStructInsOp(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _219038_s, jule::Ptr<_1bc2ee055_Fn>* _219058_f, jule::Fn<jule::Bool,jule::Ptr<_1bc2ee055_Fn>> _219066_p) {
	if (((((*(_219058_f)) == nullptr) || ((*((*(_219058_f))))._field_Generics.len() > 0LL)) || (!(_219066_p((*(_219058_f))))))) {
		return nullptr;;
	};
	return (*((*(_219058_f))))._field_Instances[0LL];;
}



inline jule::Bool _1bc426666_checkStructEnv(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _220036_s, jule::Ptr<_1bc247014_Token> _220055_errorToken) {
	jule::Bool __jule_func_result = false;
	_1bc4c88e4_typeChecker _22017_tc = _1bc4c88e4_typeChecker{._field_s=(*((*((*(_220036_s))))._field_Decl))._field_sema, ._field_rootLookup=jule::Trait((*(*((*(_220036_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_lookup=jule::Trait((*(*((*(_220036_s))))._field_Decl.alloc)._field_sema, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), ._field_referencer=jule::new_ptr<_1bc4c7904_referencer>(_1bc4c7904_referencer{._field_ident=(*(*((*(_220036_s))))._field_Decl.alloc)._field_Ident, ._field_owner=jule::Any((*((*(_220036_s))))._field_Decl, &__jule_any_type9), ._field_refs=nullptr}), ._field_refers=(*((*(_220036_s))))._field_Refers, ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false};;
	if (((*((*(_220036_s))))._field_Generics.len() > 0LL)) {
		_22017_tc._field_useGenerics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>::alloc(0LL, (*((*(_220036_s))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b5705_TypeAlias>(nullptr); __jule_collection; });
		{
			auto expr = &((*((*(_220036_s))))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c146ea51:;
			if (it != expr_end) {
				jule::I32 _22149_i = it - expr->begin();
				jule::Ptr<_1bc4b4b11_InsGeneric> _221416_g = *it;
				{
					jule::Ptr<_1bc269b19_GenericDecl> _22159_decl = (*(*((*(_220036_s))))._field_Decl.alloc)._field_Generics[_22149_i];;
					{ jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> &__jule_push_dest = _22017_tc._field_useGenerics; __jule_push_dest.push(jule::new_ptr<_1bc4b5705_TypeAlias>(_1bc4b5705_TypeAlias{._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_22159_decl.alloc)._field_Token, ._field_Ident=(*(_22159_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_221416_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1c146ea51:;
				++it;
				_22149_i++;
				goto _iter_begin_1c146ea51;
			}
			_iter_end_1c146ea51:;
		};
	};
	jule::Ptr<_1bc305358_SymTab> _22247_oldFile = (*(_self_))._field_file;;
	__JULE_DEFER({
		_1bc40c9d2_setCurrentFile(_self_, _22247_oldFile);
	});;
	if (((*((*_self_.alloc)._field_file))._field_File != (*((*(*((*(_220036_s))))._field_Decl.alloc)._field_Token))._field_File)) {
		jule::Ptr<_1bc305358_SymTab> _22288_file = _1bc408b65_findFile(&((*_self_.alloc)._field_files), &((*(*((*((*(_220036_s))))._field_Decl))._field_Token.alloc)._field_File));;
		if ((_22288_file != nullptr)) {
			_1bc40c9d2_setCurrentFile(_self_, _22288_file);
		};
	};
	if (((*((*(_220036_s))))._field_Generics.len() > 0LL)) {
		jule::Ptr<_1bc3a5419_constraintChecker> _22358_cc = _1bc412ae7_constraintChecker(_self_);;
		(*(_22358_cc))._field_et=_220055_errorToken;
		(*_22358_cc.alloc)._field_si=(*(_220036_s));
		(*_22358_cc.alloc)._field_genericsA=_22017_tc._field_useGenerics;
		(*_22358_cc.alloc)._field_uniq=true;
		if ((!(_1bc3a6382_check(_22358_cc)))) {
			return __jule_func_result;;
		};
	};
	__jule_func_result=true;
	if (((*((*(_220036_s))))._field_Statics.len() > 0LL)) {
		jule::I32 _22488_n = (*_self_.alloc)._field_errors.len();;
		(*((*_self_.alloc)._field_files[0LL]))._field_TypeAliases=jule::append(_22017_tc._field_useGenerics,(*((*(_self_))._field_files[0LL]))._field_TypeAliases);
		{
			auto expr = &((*((*(_220036_s))))._field_Statics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c0476e44:;
			if (it != expr_end) {
				jule::Ptr<_1bc42dc12_Var> _225016_v = *it;
				{
					_1bc421353_checkVarDecl(_self_, &(_225016_v), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));
					_1bc424e5b_checkVar(_self_, &(_225016_v), jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));
					__jule_func_result=((((*_self_.alloc)._field_errors.len() - _22488_n) == 0LL) && __jule_func_result);
				}
				_iter_next_1c0476e44:;
				++it;
				goto _iter_begin_1c0476e44;
			}
			_iter_end_1c0476e44:;
		};
		((*((*(_self_))._field_files[0LL]))._field_TypeAliases).mut_slice(_22017_tc._field_useGenerics.len());;
		if ((!(__jule_func_result))) {
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	jule::Ptr<_1bc48551b_eval> _22617_eval = _1bc414cc5_eval(_self_, jule::Trait(_self_, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));;
	(*((*(_220036_s))))._field_Comparable=(!((*(*((*(_220036_s))))._field_Decl.alloc)._field_Binded));
	{
		auto expr = &((*((*(_220036_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c326dd59:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> _226315_f = *it;
			{
				jule::Ptr<_1bc4b64e7_Type> _22648_kind = _1bc4d14ce_checkDecl(&_22017_tc, &((*((*((*(_226315_f))._field_Decl))._field_TypeSym))._field_Decl));;
				__jule_func_result=((_22648_kind != nullptr) && __jule_func_result);
				if ((_22648_kind == nullptr)) {
					if (((_self_ != (*(*((*(_220036_s))))._field_Decl.alloc)._field_sema) && ((*((*(*((*(_220036_s))))._field_Decl.alloc)._field_sema))._field_errors.len() > 0LL))) {
						(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*(*((*((*(_220036_s))))._field_Decl))._field_sema.alloc)._field_errors);
						(*(*((*((*(_220036_s))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
					};
					goto _iter_next_1c326dd59;
				};
				(*_226315_f.alloc)._field_Type=_22648_kind;
				(*((*(_220036_s))))._field_Mutable=((*((*(_220036_s))))._field_Mutable || ((!((*(*(_226315_f))._field_Decl.alloc)._field_Mutable)) && _1bc4b7dcd_Mutable((*(_226315_f))._field_Type)));
				(*((*(_220036_s))))._field_Comparable=((*((*(_220036_s))))._field_Comparable && _1bc4b7b47_Comparable((*(_226315_f))._field_Type));
				if (((*(*(_226315_f))._field_Decl.alloc)._field_Default == nullptr)) {
					goto _iter_next_1c326dd59;
				};
				(*(_22617_eval))._field_prefix=(*_226315_f.alloc)._field_Type;
				(*_22617_eval.alloc)._field_field=_226315_f;
				(*_22617_eval.alloc)._field_target._field_mutable=true;
				(*_226315_f.alloc)._field_Default=_1bc4a4309_evalExpr(_22617_eval, (*(*(_226315_f))._field_Decl.alloc)._field_Default);
				if (((*_226315_f.alloc)._field_Default == nullptr)) {
					goto _iter_next_1c326dd59;
				};
				;
				_1bc4153e1_checkAssignType(_self_, false, &((*_226315_f.alloc)._field_Type), &((*_226315_f.alloc)._field_Default), (*((*(*(_226315_f))._field_Decl.alloc)._field_Default))._field_Token, (*((*(_220036_s))))._field_Refers);
			}
			_iter_next_1c326dd59:;
			++it;
			goto _iter_begin_1c326dd59;
		}
		_iter_end_1c326dd59:;
	};
	return __jule_func_result;;
}



inline jule::Bool _1bc426a62_precheckStructIns(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _229839_s, jule::Ptr<_1bc247014_Token> _229858_errorToken) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=_1bc426666_checkStructEnv(_self_, _229839_s, _229858_errorToken);
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if ((((*((*(_229839_s))))._field_Comparable && ((*((*(_229839_s))))._field_Operators._field_Eq == nullptr)) && ((*((*_self_.alloc)._field_meta))._field_runtime != nullptr))) {
		jule::Ptr<_1bc2ee055_Fn> _23098_decl = _1bb4732c9_runtimeFindFn(&((*(*(_self_))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8)));;
		{
			auto expr = &((*((*(_229839_s))))._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c327a470:;
			if (it != expr_end) {
				jule::Ptr<_1bc280525_FieldIns> _231016_field = *it;
				{
					jule::Ptr<_1bc4c5e30_Arr> _23119_arr = _1bc4b996d_Arr((*(_231016_field))._field_Type.ptr());;
					if ((_23119_arr == nullptr)) {
						goto _iter_next_1c327a470;
					};
					jule::Ptr<_1bc302113_FnIns> _23159_f = _1bc300562_instanceForce(_23098_decl);;
					(*(_23159_f))._field_Generics=jule::append((*_23159_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=(*(_23119_arr))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); __jule_collection; }));
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc425951_checkGenericFn(_self_, &(_23159_f), &((*((*_231016_field.alloc)._field_Decl))._field_Token));
						__jule_func_result = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(__jule_func_result))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/sema.jule:2319:6"));;
					};
					_1bc3cb97e_Push((*((*(_229839_s))))._field_Refers.ptr(), jule::Any(_23159_f, &__jule_any_type65));
				}
				_iter_next_1c327a470:;
				++it;
				goto _iter_begin_1c327a470;
			}
			_iter_end_1c327a470:;
		};
	};
	{
		auto expr = &((*((*(_229839_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c327e4da:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _232515_f = *it;
			{
				if (((*(_232515_f))._field_Generics.len() == 0LL)) {
					if ((_1bc425555_readyToCheckFn(_self_, _229839_s, &(_232515_f)) == nullptr)) {
						__jule_func_result = false;
						return __jule_func_result;;
					};
				};
			}
			_iter_next_1c327e4da:;
			++it;
			goto _iter_begin_1c327e4da;
		}
		_iter_end_1c327e4da:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc426d1a_checkStructIns(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns>* _233536_s) {
	{
		auto expr = &((*((*(_233536_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32810d0:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _233615_f = *it;
			{
				_1bc425cb4_checkTypeMethod(_self_, _233536_s, &(_233615_f));
			}
			_iter_next_1c32810d0:;
			++it;
			goto _iter_begin_1c32810d0;
		}
		_iter_end_1c32810d0:;
	};
}



inline void _1bc4270c3_checkTypeStruct(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _234137_s) {
	if ((*((*(_234137_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_234137_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_234137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3282ac6:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _235415_ins = *it;
			{
				_1bc426d1a_checkStructIns(_self_, &(_235415_ins));
			}
			_iter_next_1c3282ac6:;
			++it;
			goto _iter_begin_1c3282ac6;
		}
		_iter_end_1c3282ac6:;
	};
}



inline void _1bc4272c1_checkStructTypes(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0a15ca7:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _236015_s = *it;
			{
				_1bc4270c3_checkTypeStruct(_self_, &(_236015_s));
			}
			_iter_next_1c0a15ca7:;
			++it;
			goto _iter_begin_1c0a15ca7;
		}
		_iter_end_1c0a15ca7:;
	};
}



inline void _1bc427579_checkStructInsOperators(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2810c5_StructIns> _236544_s) {
	{
		auto expr = &((*(_236544_s))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32b6126:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _236615_m = *it;
			{
				{
					auto &_match_expr{ (*(_236615_m))._field_Ident };
					
					if (_match_expr == jule::Str::lit("Eq", 2)) {
						_case_begin_1c32b6830:;
						{
							(*(_236544_s))._field_Operators._field_Eq=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc430818_Eq);
							(*_236544_s.alloc)._field_Comparable=((*_236544_s.alloc)._field_Operators._field_Eq != nullptr);
						}
					}
					else if (_match_expr == jule::Str::lit("Gt", 2)) {
						_case_begin_1c32b6e29:;
						{
							(*(_236544_s))._field_Operators._field_Gt=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc430ad2_Gt);
						}
					}
					else if (_match_expr == jule::Str::lit("GtEq", 4)) {
						_case_begin_1c32b6e90:;
						{
							(*_236544_s.alloc)._field_Operators._field_GtEq=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc430d9b_GtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Lt", 2)) {
						_case_begin_1c32b7006:;
						{
							(*_236544_s.alloc)._field_Operators._field_Lt=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc431165_Lt);
						}
					}
					else if (_match_expr == jule::Str::lit("LtEq", 4)) {
						_case_begin_1c32b706c:;
						{
							(*_236544_s.alloc)._field_Operators._field_LtEq=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc43142e_LtEq);
						}
					}
					else if (_match_expr == jule::Str::lit("Shl", 3)) {
						_case_begin_1c32b70e4:;
						{
							(*_236544_s.alloc)._field_Operators._field_Shl=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc431a6c_Shl);
						}
					}
					else if (_match_expr == jule::Str::lit("Shr", 3)) {
						_case_begin_1c32b716b:;
						{
							(*_236544_s.alloc)._field_Operators._field_Shr=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc431d36_Shr);
						}
					}
					else if (_match_expr == jule::Str::lit("Add", 3)) {
						_case_begin_1c32b71e3:;
						{
							(*_236544_s.alloc)._field_Operators._field_Add=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc432100_Add);
						}
					}
					else if (_match_expr == jule::Str::lit("Sub", 3)) {
						_case_begin_1c32b726a:;
						{
							(*_236544_s.alloc)._field_Operators._field_Sub=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc4323b9_Sub);
						}
					}
					else if (_match_expr == jule::Str::lit("Div", 3)) {
						_case_begin_1c32b72e2:;
						{
							(*_236544_s.alloc)._field_Operators._field_Div=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc432683_Div);
						}
					}
					else if (_match_expr == jule::Str::lit("Mul", 3)) {
						_case_begin_1c32b7369:;
						{
							(*_236544_s.alloc)._field_Operators._field_Mul=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc43294c_Mul);
						}
					}
					else if (_match_expr == jule::Str::lit("Mod", 3)) {
						_case_begin_1c32b73e1:;
						{
							(*_236544_s.alloc)._field_Operators._field_Mod=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc432c16_Mod);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAnd", 6)) {
						_case_begin_1c32b7468:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitAnd=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc432ed0_BitAnd);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOr", 5)) {
						_case_begin_1c32b74e0:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitOr=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc433299_BitOr);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXor", 6)) {
						_case_begin_1c32b7567:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitXor=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc433563_BitXor);
						}
					}
					else if (_match_expr == jule::Str::lit("Neg", 3)) {
						_case_begin_1c32b75de:;
						{
							(*_236544_s.alloc)._field_Operators._field_Neg=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc433ba1_Neg);
						}
					}
					else if (_match_expr == jule::Str::lit("Pos", 3)) {
						_case_begin_1c32b7666:;
						{
							(*_236544_s.alloc)._field_Operators._field_Pos=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc433e6a_Pos);
						}
					}
					else if (_match_expr == jule::Str::lit("BitNot", 6)) {
						_case_begin_1c32b76dd:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitNot=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc434234_BitNot);
						}
					}
					else if (_match_expr == jule::Str::lit("AddAssign", 9)) {
						_case_begin_1c32b7765:;
						{
							(*_236544_s.alloc)._field_Operators._field_AddAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc434872_AddAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("SubAssign", 9)) {
						_case_begin_1c32b77dc:;
						{
							(*_236544_s.alloc)._field_Operators._field_SubAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc434b3b_SubAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("DivAssign", 9)) {
						_case_begin_1c32b7864:;
						{
							(*_236544_s.alloc)._field_Operators._field_DivAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc434e05_DivAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("MulAssign", 9)) {
						_case_begin_1c32b78db:;
						{
							(*_236544_s.alloc)._field_Operators._field_MulAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc4351be_MulAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ModAssign", 9)) {
						_case_begin_1c32b7963:;
						{
							(*_236544_s.alloc)._field_Operators._field_ModAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc435488_ModAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShlAssign", 9)) {
						_case_begin_1c32b79da:;
						{
							(*_236544_s.alloc)._field_Operators._field_ShlAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc435752_ShlAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("ShrAssign", 9)) {
						_case_begin_1c32b7a62:;
						{
							(*_236544_s.alloc)._field_Operators._field_ShrAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc435a1b_ShrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitOrAssign", 11)) {
						_case_begin_1c32b7ad9:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitOrAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc435cd5_BitOrAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitAndAssign", 12)) {
						_case_begin_1c32b7b61:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitAndAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc43609e_BitAndAssign);
						}
					}
					else if (_match_expr == jule::Str::lit("BitXorAssign", 12)) {
						_case_begin_1c32b7bd8:;
						{
							(*_236544_s.alloc)._field_Operators._field_BitXorAssign=_1bc42626a_checkStructInsOp(_self_, &(_236544_s), &(_236615_m), static__1bc436368_BitXorAssign);
						}
					}
					_match_end_1c32b6b0a:;
				};
			}
			_iter_next_1c32b6126:;
			++it;
			goto _iter_begin_1c32b6126;
		}
		_iter_end_1c32b6126:;
	};
}



inline void _1bc427832_precheckStructType(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc27d26a_Struct>* _242940_s) {
	if ((*((*(_242940_s))))._field_Binded) {
		return;;
	};
	if (((*((*(_242940_s))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_242940_s))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1bc2810c5_StructIns> _24408_ins = _1bc27d710_instance((*(_242940_s)));;
		(*(_24408_ins))._field_Checked=true;
		_1bc27da1d_appendInstance((*(_242940_s)).ptr(), &(_24408_ins));
		jule::Bool _24434_ok = _1bc426a62_precheckStructIns(_self_, &(_24408_ins), nullptr);;
		if ((!(_24434_ok))) {
			return;;
		};
	};
	_1bc427579_checkStructInsOperators(_self_, (*((*(_242940_s))))._field_Instances[0LL]);
}



inline void _1bc427a30_precheckStructTypes(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c328aea8:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _245315_s = *it;
			{
				_1bc427832_precheckStructType(_self_, &(_245315_s));
			}
			_iter_next_1c328aea8:;
			++it;
			goto _iter_begin_1c328aea8;
		}
		_iter_end_1c328aea8:;
	};
}



inline void _1bc427cd8_checkRets(_1bc409eeb_sema* _self_, jule::Ptr<_1bc302113_FnIns>* _245830_f) {
	if (_1bc2ee50b_IsVoid((*((*(_245830_f))))._field_Decl.ptr())) {
		return;;
	};
	_1bc42a22a_missingRetChecker _24623_mrc = static__1bc42a626_new();;
	jule::Bool _24633_ok = _1bc42b803_check(&_24623_mrc, (*((*(_245830_f))))._field_Scope);;
	if ((!(_24633_ok))) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_245830_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing return at end of function", 33)), jule::Slice<jule::Any>());
	};
}



inline void _1bc42814b_checkFnInsSc(_1bc409eeb_sema* _self_, jule::Ptr<_1bc302113_FnIns>* _246933_f, jule::Ptr<_1bc3b448e_scopeChecker>* _246949_sc) {
	_1bc4081c5_appendRetVars(&((*((*((*(_246949_sc))))._field_table))._field_Vars), _246933_f);
	_1bc408505_appendParamVars(&((*(*((*(_246949_sc))))._field_table.alloc)._field_Vars), _246933_f);
	_1bc4087e1_appendGenericTypeAliases(&((*(*((*(_246949_sc))))._field_table.alloc)._field_TypeAliases), _246933_f);
	_1bc3c6616_check((*(_246949_sc)), &((*((*((*(_246933_f))))._field_Decl))._field_Scope), &((*((*(_246933_f))))._field_Scope));
	if ((!(_1bc3b7096_stopped((*(_246949_sc)).ptr())))) {
		_1bc427cd8_checkRets(_self_, _246933_f);
	};
}



inline void _1bc4284ae_checkFnInsCaller(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _248238_f, jule::Ptr<_1bc247014_Token> _248253_caller) {
	if ((*((*((*(_248238_f))))._field_Decl))._field_Binded) {
		return;;
	};
	jule::Ptr<_1bc305358_SymTab> _24877_old = (*((*((*((*(_248238_f))))._field_Decl))._field_sema))._field_file;;
	__JULE_DEFER({
		_1bc40c9d2_setCurrentFile((*((*((*(_248238_f))))._field_Decl))._field_sema, _24877_old);
	});;
	jule::Ptr<_1bc305358_SymTab> _24897_file = _1bc408b65_findFile(&((*(*((*((*(_248238_f))))._field_Decl))._field_sema.alloc)._field_files), &((*((*(*((*(_248238_f))))._field_Decl.alloc)._field_Token))._field_File));;
	if ((_24897_file != nullptr)) {
		_1bc40c9d2_setCurrentFile((*((*((*(_248238_f))))._field_Decl))._field_sema, _24897_file);
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _24947_sc = _1bc3a9b49_newScopeChecker(&((*(*((*(_248238_f))))._field_Decl.alloc)._field_sema), (*(_248238_f)));;
	(*(_24947_sc))._field_calledFrom=_248253_caller;
	_1bc42814b_checkFnInsSc(_self_.ptr(), _248238_f, &(_24947_sc));
	if (((*(*((*(_248238_f))))._field_Decl.alloc)._field_sema != _self_)) {
		(*_self_.alloc)._field_errors=jule::append((*_self_.alloc)._field_errors,(*((*(*((*(_248238_f))))._field_Decl.alloc)._field_sema))._field_errors);
		(*(*((*((*(_248238_f))))._field_Decl))._field_sema.alloc)._field_errors=nullptr;
	};
}



inline void _1bc428767_checkFnIns(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc302113_FnIns>* _250432_f) {
	_1bc4284ae_checkFnInsCaller(_self_, _250432_f, nullptr);
}



inline void _1bc428a20_checkFunc(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _250831_f) {
	if ((*((*(_250831_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_250831_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_250831_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3291893:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _251815_ins = *it;
			{
				_1bc428767_checkFnIns(_self_, &(_251815_ins));
			}
			_iter_next_1c3291893:;
			++it;
			goto _iter_begin_1c3291893;
		}
		_iter_end_1c3291893:;
	};
}



inline void _1bc428cc8_checkTestFn(_1bc409eeb_sema* _self_, jule::Ptr<_1bc302113_FnIns>* _252332_f) {
	if ((*((*((*(_252332_f))))._field_Decl))._field_Public) {
		_1bc40ce00_pushErr(_self_, (*(*((*(_252332_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("test function cannot be public", 30)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("dont use identifier which is starts with capital letter to avoid define as public", 81)), jule::Slice<jule::Any>());
		return;;
	};
	if (((((((*((*((*(_252332_f))))._field_Decl))._field_Unsafety || (!(_1bc2ee50b_IsVoid((*((*(_252332_f))))._field_Decl)))) || ((*(*((*(_252332_f))))._field_Decl.alloc)._field_Generics.len() != 0LL)) || ((*((*(_252332_f))))._field_Params.len() != 1LL)) || (*((*(*((*(_252332_f))))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable) || (*((*((*((*(_252332_f))))._field_Decl))._field_Params[0LL]))._field_Reference)) {
		_1bc40ce00_pushErr(_self_, (*(*((*(_252332_f))))._field_Decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc4c313b_Sptr> _25417_sptr = _1bc4b8e34_Sptr((*((*((*(_252332_f))))._field_Params[0LL]))._field_Type.ptr());;
	if ((_25417_sptr == nullptr)) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_252332_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _25483_s = _1bc4ba221_Struct((*(_25417_sptr))._field_Elem.ptr());;
	if (((_25483_s == nullptr) || (!(_1bc3e28eb_isStdPackage(&((*((*((*((*(_25483_s))._field_Decl))._field_Token))._field_File))._field_Path), jule::Str::lit("testing", 7)))))) {
		_1bc40ce00_pushErr(_self_, (*((*((*(_252332_f))))._field_Decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("wrong test function declaration", 31)), jule::Slice<jule::Any>());
		_1bc40d263_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use expected test function declaration: fn(t: &testing::T)", 58)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1bc429081_precheckFunc(jule::Ptr<_1bc409eeb_sema> _self_, jule::Ptr<_1bc2ee055_Fn>* _255634_f) {
	if ((*((*(_255634_f))))._field_Binded) {
		return;;
	};
	if (((*((*(_255634_f))))._field_Generics.len() > 0LL)) {
		return;;
	};
	if (((*((*(_255634_f))))._field_Instances.len() == 0LL)) {
		jule::Ptr<_1bc302113_FnIns> _25678_ins = _1bc300562_instanceForce((*(_255634_f)));;
		{ jule::Slice<jule::Ptr<_1bc302113_FnIns>> &__jule_push_dest = (*((*(_255634_f))))._field_Instances; __jule_push_dest.push(_25678_ins); };
		jule::Bool _25694_ok = _1bc418c63_reloadFnInsTypes(_self_, _25678_ins);;
		(*(_25678_ins))._field_reloaded=true;
		if ((_25694_ok && _1bc4d2a63_hasDirective(&((*((*(_255634_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
			_1bc428cc8_checkTestFn(_self_, &(_25678_ins));
		};
	};
}



inline void _1bc42927e_precheckFuncs(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c34275b7:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _258015_decl = *it;
			{
				{
					auto expr = &((*(_258015_decl))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c34280ac:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _258116_m = *it;
						{
							_1bc429081_precheckFunc(_self_, &(_258116_m));
						}
						_iter_next_1c34280ac:;
						++it;
						goto _iter_begin_1c34280ac;
					}
					_iter_end_1c34280ac:;
				};
			}
			_iter_next_1c34275b7:;
			++it;
			goto _iter_begin_1c34275b7;
		}
		_iter_end_1c34275b7:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3427b6c:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _258515_decl = *it;
			{
				_1bc429081_precheckFunc(_self_, &(_258515_decl));
			}
			_iter_next_1c3427b6c:;
			++it;
			goto _iter_begin_1c3427b6c;
		}
		_iter_end_1c3427b6c:;
	};
}



inline void _1bc42947c_checkFuncs(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c342980b:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _259215_decl = *it;
			{
				_1bc428a20_checkFunc(_self_, &(_259215_decl));
			}
			_iter_next_1c342980b:;
			++it;
			goto _iter_begin_1c342980b;
		}
		_iter_end_1c342980b:;
	};
}



inline void _1bc42967a_checkPackageTypes(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c04799c4:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _260015_f = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_.ptr(), _260015_f);
				_1bc425159_checkGlobals(_self_);
				_1bc42927e_precheckFuncs(_self_);
				_1bc427a30_precheckStructTypes(_self_);
			}
			_iter_next_1c04799c4:;
			++it;
			goto _iter_begin_1c04799c4;
		}
		_iter_end_1c04799c4:;
	};
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	{
		auto expr = &((*_self_.alloc)._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3429d8e:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _261115_f = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_, _261115_f);
				_1bc42947c_checkFuncs(_self_);
				_1bc4272c1_checkStructTypes(_self_);
			}
			_iter_next_1c3429d8e:;
			++it;
			goto _iter_begin_1c3429d8e;
		}
		_iter_end_1c3429d8e:;
	};
}



inline void _1bc429878_setFileSemaFields(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*((*(_self_))._field_file))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c125b0ac:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _261915_f = *it;
			{
				(*(_261915_f))._field_sema=_self_;
			}
			_iter_next_1c125b0ac:;
			++it;
			goto _iter_begin_1c125b0ac;
		}
		_iter_end_1c125b0ac:;
	};
	{
		auto expr = &((*(*(_self_))._field_file.alloc)._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c125b6d9:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _262215_st = *it;
			{
				(*(_262215_st))._field_sema=_self_;
			}
			_iter_next_1c125b6d9:;
			++it;
			goto _iter_begin_1c125b6d9;
		}
		_iter_end_1c125b6d9:;
	};
}



inline void _1bc429a76_setSemaFields(jule::Ptr<_1bc409eeb_sema> _self_) {
	{
		auto expr = &((*(_self_))._field_files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c125c8d8:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _262815_file = *it;
			{
				_1bc40c9d2_setCurrentFile(_self_.ptr(), _262815_file);
				_1bc429878_setFileSemaFields(_self_);
			}
			_iter_next_1c125c8d8:;
			++it;
			goto _iter_begin_1c125c8d8;
		}
		_iter_end_1c125c8d8:;
	};
}



inline void _1bc429d2e_check(jule::Ptr<_1bc409eeb_sema> _self_, jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _263427_files) {
	(*(_self_))._field_files=(*(_263427_files));
	_1bc429a76_setSemaFields(_self_);
	_1bc410ce3_checkImports(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc4117d8_checkInherits(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc4111de_implImpls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc4113dc_checkEnums(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc424169_checkPackageDecls(_self_);
	if (((*_self_.alloc)._field_errors.len() != 0LL)) {
		return;;
	};
	_1bc42967a_checkPackageTypes(_self_);
}







inline _1bc42a22a_missingRetChecker static__1bc42a626_new(void) {
	return _1bc42a22a_missingRetChecker{._field_breaked=({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(16LLU, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_falled=false};;
}



inline jule::Bool _1bc42a934_checkConditional(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3ac960_Conditional> _268232_c) {
	{
		auto expr = &((*(_268232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1481b40:;
		if (it != expr_end) {
			jule::Ptr<_1bc3ac245_If> _268315_elif = *it;
			{
				if ((_268315_elif == nullptr)) {
					return false;;
				};
				if ((!(_1bc42b4b2_checkScope(_self_, (*(_268315_elif))._field_Scope)))) {
					return false;;
				};
			}
			_iter_next_1c1481b40:;
			++it;
			goto _iter_begin_1c1481b40;
		}
		_iter_end_1c1481b40:;
	};
	return (((*_268232_c.alloc)._field_Default != nullptr) && _1bc42b4b2_checkScope(_self_, (*(*(_268232_c))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1bc42ac75_checkMatch(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3b1557_Match> _269426_m) {
	{
		auto expr = &((*(_269426_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1483c0d:;
		if (it != expr_end) {
			jule::Ptr<_1bc3b2080_Case> _269515_c = *it;
			{
				if ((_269515_c == nullptr)) {
					return false;;
				};
				jule::I32 _26994_n = (*(_self_))._field_breaked.len();;
				jule::Bool _27004_ok = _1bc42b4b2_checkScope(_self_, (*(_269515_c))._field_Scope);;
				{
					
					if ((_26994_n != (*(_self_))._field_breaked.len())) {
						_case_begin_1c1485759:;
						{
							return false;;
						}
					}
					else if ((!(_27004_ok))) {
						_case_begin_1c14857e2:;
						{
							if ((!((*(_self_))._field_falled))) {
								return false;;
							};
							goto _case_begin_1c1485858;
						}
					}
					else if ((*(_self_))._field_falled) {
						_case_begin_1c1485858:;
						{
							(*(_self_))._field_falled=false;
							if (((*_269515_c.alloc)._field_Next == nullptr)) {
								return false;;
							};
							goto _iter_next_1c1483c0d;
						}
					}
					_match_end_1c14856e3:;
				};
			}
			_iter_next_1c1483c0d:;
			++it;
			goto _iter_begin_1c1483c0d;
		}
		_iter_end_1c1483c0d:;
	};
	return (((*_269426_m.alloc)._field_Default != nullptr) && _1bc42b4b2_checkScope(_self_, (*(*(_269426_m))._field_Default.alloc)._field_Scope));;
}



inline jule::Bool _1bc42b171_checkInfIter(_1bc42a22a_missingRetChecker* _self_, jule::Uintptr _272024_it, jule::Ptr<_1bc3abd27_Scope>* _272042_s) {
	jule::I32 _27213_n = (*(_self_))._field_breaked.len();;
	if (_1bc42b4b2_checkScope(_self_, (*(_272042_s)))) {
		((*(_self_))._field_breaked).mut_slice(0LL, _27213_n);;
		return true;;
	};
	if ((_27213_n != (*(_self_))._field_breaked.len())) {
		{
			auto expr = (*(_self_))._field_breaked.slice(_27213_n);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c14891ca:;
			if (it != expr_end) {
				jule::Uintptr _272711_addr = *it;
				{
					if ((_272024_it == _272711_addr)) {
						((*(_self_))._field_breaked).mut_slice(0LL, _27213_n);;
						return false;;
					};
				}
				_iter_next_1c14891ca:;
				++it;
				goto _iter_begin_1c14891ca;
			}
			_iter_end_1c14891ca:;
		};
		((*(_self_))._field_breaked).mut_slice(0LL, _27213_n);;
	};
	return true;;
}



inline jule::Bool _1bc42b4b2_checkScope(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3abd27_Scope> _273826_s) {
	if ((_273826_s == nullptr)) {
		return false;;
	};
	{
		auto expr = &((*(_273826_s))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c148a73c:;
		if (it != expr_end) {
			jule::Any _274215_st = *it;
			{
				{
					auto &_match_expr{ _274215_st };
					
					if (_match_expr.type == &__jule_any_type46) {
						_case_begin_1c148b4a7:;
						{
							(*(_self_))._field_falled=true;
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type47) {
						_case_begin_1c148b265:;
						{
							jule::Uintptr _27485_addr = (*(_274215_st.unsafe_cast_ptr<_1bc3ae3bd_BreakSt>()))._field_It;;
							if ((_27485_addr != 0LLU)) {
								{ jule::Slice<jule::Uintptr> &__jule_push_dest = (*(_self_))._field_breaked; __jule_push_dest.push(_27485_addr); };
							};
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type38) {
						_case_begin_1c148b52e:;
						{
							return false;;
						}
					}
					else if (_match_expr.type == &__jule_any_type33) {
						_case_begin_1c148b5a6:;
						{
							jule::Ptr<_1bc3acc5c_InfIter> _27569_ii = _274215_st.unsafe_cast_ptr<_1bc3acc5c_InfIter>();;
							if (_1bc42b171_checkInfIter(_self_, static_cast<jule::Uintptr>(_27569_ii), &((*(_27569_ii))._field_Scope))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type35) {
						_case_begin_1c148b62d:;
						{
							jule::Ptr<_1bc3ad213_WhileIter> _27619_wn = _274215_st.unsafe_cast_ptr<_1bc3ad213_WhileIter>();;
							if ((_1bc3ad5a9_IsWhileNext(_27619_wn.ptr()) && ((*_27619_wn.alloc)._field_Expr == nullptr))) {
								if (_1bc42b171_checkInfIter(_self_, static_cast<jule::Uintptr>(_27619_wn), &((*_27619_wn.alloc)._field_Scope))) {
									return true;;
								};
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type48) {
						_case_begin_1c148b6a5:;
						{
							return true;;
						}
					}
					else if (_match_expr.type == &__jule_any_type20) {
						_case_begin_1c148b72c:;
						{
							if (_1bc42b4b2_checkScope(_self_, _274215_st.cast_ptr<_1bc3abd27_Scope>(&__jule_any_type20))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type22) {
						_case_begin_1c148b7a4:;
						{
							{
								auto &_match_expr{ (*(_274215_st.cast_ptr<_1bc48354c_Data>(&__jule_any_type22)))._field_Model };
								
								if (_match_expr.type == &__jule_any_type27 || _match_expr.type == &__jule_any_type21) {
									_case_begin_1c1491721:;
									{
										return true;;
									}
								}
								_match_end_1c1491677:;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type32) {
						_case_begin_1c148b82b:;
						{
							if (_1bc42a934_checkConditional(_self_, _274215_st.cast_ptr<_1bc3ac960_Conditional>(&__jule_any_type32))) {
								return true;;
							};
						}
					}
					else if (_match_expr.type == &__jule_any_type45) {
						_case_begin_1c148b8a3:;
						{
							if (_1bc42ac75_checkMatch(_self_, _274215_st.cast_ptr<_1bc3b1557_Match>(&__jule_any_type45))) {
								return true;;
							};
						}
					}
					_match_end_1c148b375:;
				};
			}
			_iter_next_1c148a73c:;
			++it;
			goto _iter_begin_1c148a73c;
		}
		_iter_end_1c148a73c:;
	};
	return false;;
}



inline jule::Bool _1bc42b803_check(_1bc42a22a_missingRetChecker* _self_, jule::Ptr<_1bc3abd27_Scope> _279321_s) {
	return _1bc42b4b2_checkScope(_self_, _279321_s);;
}







inline jule::Bool _1bc42e11e_IsInitialized(_1bc42dc12_Var* _self_) {
	return ((*(_self_))._field_Value != nullptr);;
}



inline jule::Bool _1bc42e3a5_IsTypeInferred(_1bc42dc12_Var* _self_) {
	return (((*(_self_))._field_TypeSym == nullptr) || ((*((*(_self_))._field_TypeSym))._field_Decl == nullptr));;
}



inline jule::Bool _1bc42e63b_untypedConstant(_1bc42dc12_Var* _self_) {
	return (_1bc42e3a5_IsTypeInferred(_self_) && (*((*((*(_self_))._field_Value))._field_Data))._field_untyped);;
}







inline jule::Bool static__1bc4301ca_Str(jule::Ptr<_1bc2ee055_Fn> _1016_f) {
	if (((((((((((_1016_f == nullptr) || ((*(_1016_f))._field_Owner == nullptr)) || (!(*(_1016_f))._field_Ident.equal("Str", 3))) || (*_1016_f.alloc)._field_Statically) || (*_1016_f.alloc)._field_Unsafety) || _1bc2ee50b_IsVoid(_1016_f)) || ((*_1016_f.alloc)._field_Generics.len() != 0LL)) || ((*_1016_f.alloc)._field_Params.len() != 1LL)) || (*((*_1016_f.alloc)._field_Params[0LL]))._field_Mutable) || _1bc2ece66_IsRef((*(_1016_f))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1bc302113_FnIns> _247_ins = (*(_1016_f))._field_Instances[0LL];;
	jule::Ptr<_1bc4be610_Prim> _253_prim = _1bc4b8b9d_Prim((*(_247_ins))._field_Result.ptr());;
	if ((_253_prim == nullptr)) {
		return false;;
	};
	return _1bc4c2aca_IsStr(_253_prim.ptr());;
}



inline jule::Bool static__1bc43054e_logical(jule::Ptr<_1bc2ee055_Fn>* _3221_f, jule::Str _3229_ident) {
	if (((((((((((((((*(_3221_f)) == nullptr) || ((*((*(_3221_f))))._field_Ident != _3229_ident)) || ((*((*(_3221_f))))._field_Owner == nullptr)) || ((*((*(_3221_f))))._field_Instances.len() == 0LL)) || (*((*(_3221_f))))._field_Statically) || (*((*(_3221_f))))._field_Unsafety) || _1bc2ee50b_IsVoid((*(_3221_f)).ptr())) || ((*((*(_3221_f))))._field_Generics.len() != 0LL)) || ((*((*(_3221_f))))._field_Params.len() != 2LL)) || (*((*((*(_3221_f))))._field_Params[0LL]))._field_Mutable) || _1bc2ece66_IsRef((*((*(_3221_f))))._field_Params[0LL].ptr())) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_3221_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1bc302113_FnIns> _497_ins = (*((*(_3221_f))))._field_Instances[0LL];;
	jule::Ptr<_1bc4be610_Prim> _503_prim = _1bc4b8b9d_Prim((*(_497_ins))._field_Result.ptr());;
	if (((_503_prim == nullptr) || (!(_1bc4c2844_IsBool(_503_prim.ptr()))))) {
		return false;;
	};
	return ((*_497_ins.alloc)._field_Owner == _1bc4ba221_Struct((*((*_497_ins.alloc)._field_Params[1LL]))._field_Type.ptr()));;
}



inline jule::Bool static__1bc430818_Eq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _5815_f) {
	return static__1bc43054e_logical(&(_5815_f), jule::Str::lit("Eq", 2));;
}



inline jule::Bool static__1bc430ad2_Gt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _6315_f) {
	return static__1bc43054e_logical(&(_6315_f), jule::Str::lit("Gt", 2));;
}



inline jule::Bool static__1bc430d9b_GtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _6817_f) {
	return static__1bc43054e_logical(&(_6817_f), jule::Str::lit("GtEq", 4));;
}



inline jule::Bool static__1bc431165_Lt(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _7315_f) {
	return static__1bc43054e_logical(&(_7315_f), jule::Str::lit("Lt", 2));;
}



inline jule::Bool static__1bc43142e_LtEq(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _7817_f) {
	return static__1bc43054e_logical(&(_7817_f), jule::Str::lit("LtEq", 4));;
}



inline jule::Bool static__1bc4317a3_result(jule::Ptr<_1bc2ee055_Fn>* _8220_f, jule::Str _8228_ident) {
	if (((((((((((((((*(_8220_f)) == nullptr) || ((*((*(_8220_f))))._field_Ident != _8228_ident)) || ((*((*(_8220_f))))._field_Owner == nullptr)) || ((*((*(_8220_f))))._field_Instances.len() == 0LL)) || (*((*(_8220_f))))._field_Statically) || (*((*(_8220_f))))._field_Unsafety) || _1bc2ee50b_IsVoid((*(_8220_f)).ptr())) || ((*((*(_8220_f))))._field_Generics.len() != 0LL)) || ((*((*(_8220_f))))._field_Params.len() != 2LL)) || (*((*((*(_8220_f))))._field_Params[0LL]))._field_Mutable) || _1bc2ece66_IsRef((*((*(_8220_f))))._field_Params[0LL].ptr())) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_8220_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	jule::Ptr<_1bc302113_FnIns> _997_ins = (*((*(_8220_f))))._field_Instances[0LL];;
	return (_1bc4ba221_Struct((*(_997_ins))._field_Result.ptr()) == (*_997_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1bc431a6c_Shl(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _10416_f) {
	return static__1bc4317a3_result(&(_10416_f), jule::Str::lit("Shl", 3));;
}



inline jule::Bool static__1bc431d36_Shr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _10916_f) {
	return static__1bc4317a3_result(&(_10916_f), jule::Str::lit("Shr", 3));;
}



inline jule::Bool static__1bc432100_Add(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _11416_f) {
	return static__1bc4317a3_result(&(_11416_f), jule::Str::lit("Add", 3));;
}



inline jule::Bool static__1bc4323b9_Sub(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _11916_f) {
	return static__1bc4317a3_result(&(_11916_f), jule::Str::lit("Sub", 3));;
}



inline jule::Bool static__1bc432683_Div(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _12416_f) {
	return static__1bc4317a3_result(&(_12416_f), jule::Str::lit("Div", 3));;
}



inline jule::Bool static__1bc43294c_Mul(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _12916_f) {
	return static__1bc4317a3_result(&(_12916_f), jule::Str::lit("Mul", 3));;
}



inline jule::Bool static__1bc432c16_Mod(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _13416_f) {
	return static__1bc4317a3_result(&(_13416_f), jule::Str::lit("Mod", 3));;
}



inline jule::Bool static__1bc432ed0_BitAnd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _13919_f) {
	return static__1bc4317a3_result(&(_13919_f), jule::Str::lit("BitAnd", 6));;
}



inline jule::Bool static__1bc433299_BitOr(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _14418_f) {
	return static__1bc4317a3_result(&(_14418_f), jule::Str::lit("BitOr", 5));;
}



inline jule::Bool static__1bc433563_BitXor(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _14919_f) {
	return static__1bc4317a3_result(&(_14919_f), jule::Str::lit("BitXor", 6));;
}



inline jule::Bool static__1bc4338d7_unary(jule::Ptr<_1bc2ee055_Fn>* _15319_f, jule::Str _15327_ident) {
	if (((((((((((((*(_15319_f)) == nullptr) || ((*((*(_15319_f))))._field_Ident != _15327_ident)) || ((*((*(_15319_f))))._field_Owner == nullptr)) || ((*((*(_15319_f))))._field_Instances.len() == 0LL)) || (*((*(_15319_f))))._field_Statically) || (*((*(_15319_f))))._field_Unsafety) || _1bc2ee50b_IsVoid((*(_15319_f)).ptr())) || ((*((*(_15319_f))))._field_Generics.len() != 0LL)) || ((*((*(_15319_f))))._field_Params.len() != 1LL)) || (*((*((*(_15319_f))))._field_Params[0LL]))._field_Mutable) || _1bc2ece66_IsRef((*((*(_15319_f))))._field_Params[0LL].ptr()))) {
		return false;;
	};
	jule::Ptr<_1bc302113_FnIns> _1687_ins = (*((*(_15319_f))))._field_Instances[0LL];;
	return (_1bc4ba221_Struct((*(_1687_ins))._field_Result.ptr()) == (*_1687_ins.alloc)._field_Owner);;
}



inline jule::Bool static__1bc433ba1_Neg(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _17316_f) {
	return static__1bc4338d7_unary(&(_17316_f), jule::Str::lit("Neg", 3));;
}



inline jule::Bool static__1bc433e6a_Pos(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _17816_f) {
	return static__1bc4338d7_unary(&(_17816_f), jule::Str::lit("Pos", 3));;
}



inline jule::Bool static__1bc434234_BitNot(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _18319_f) {
	return static__1bc4338d7_unary(&(_18319_f), jule::Str::lit("BitNot", 6));;
}



inline jule::Bool static__1bc4345a8_assign(jule::Ptr<_1bc2ee055_Fn>* _18720_f, jule::Str _18728_ident) {
	if (((((((((((((((*(_18720_f)) == nullptr) || ((*((*(_18720_f))))._field_Ident != _18728_ident)) || ((*((*(_18720_f))))._field_Owner == nullptr)) || ((*((*(_18720_f))))._field_Instances.len() == 0LL)) || (*((*(_18720_f))))._field_Statically) || (*((*(_18720_f))))._field_Unsafety) || (!(_1bc2ee50b_IsVoid((*(_18720_f)).ptr())))) || ((*((*(_18720_f))))._field_Generics.len() != 0LL)) || ((*((*(_18720_f))))._field_Params.len() != 2LL)) || (!((*((*((*(_18720_f))))._field_Params[0LL]))._field_Mutable))) || _1bc2ece66_IsRef((*((*(_18720_f))))._field_Params[0LL].ptr())) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Mutable) || (*((*((*(_18720_f))))._field_Params[1LL]))._field_Reference)) {
		return false;;
	};
	return true;;
}



inline jule::Bool static__1bc434872_AddAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _20722_f) {
	return static__1bc4345a8_assign(&(_20722_f), jule::Str::lit("AddAssign", 9));;
}



inline jule::Bool static__1bc434b3b_SubAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _21222_f) {
	return static__1bc4345a8_assign(&(_21222_f), jule::Str::lit("SubAssign", 9));;
}



inline jule::Bool static__1bc434e05_DivAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _21722_f) {
	return static__1bc4345a8_assign(&(_21722_f), jule::Str::lit("DivAssign", 9));;
}



inline jule::Bool static__1bc4351be_MulAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _22222_f) {
	return static__1bc4345a8_assign(&(_22222_f), jule::Str::lit("MulAssign", 9));;
}



inline jule::Bool static__1bc435488_ModAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _22722_f) {
	return static__1bc4345a8_assign(&(_22722_f), jule::Str::lit("ModAssign", 9));;
}



inline jule::Bool static__1bc435752_ShlAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _23222_f) {
	return static__1bc4345a8_assign(&(_23222_f), jule::Str::lit("ShlAssign", 9));;
}



inline jule::Bool static__1bc435a1b_ShrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _23722_f) {
	return static__1bc4345a8_assign(&(_23722_f), jule::Str::lit("ShrAssign", 9));;
}



inline jule::Bool static__1bc435cd5_BitOrAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _24224_f) {
	return static__1bc4345a8_assign(&(_24224_f), jule::Str::lit("BitOrAssign", 11));;
}



inline jule::Bool static__1bc43609e_BitAndAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _24725_f) {
	return static__1bc4345a8_assign(&(_24725_f), jule::Str::lit("BitAndAssign", 12));;
}



inline jule::Bool static__1bc436368_BitXorAssign(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn> _25225_f) {
	return static__1bc4345a8_assign(&(_25225_f), jule::Str::lit("BitXorAssign", 12));;
}








inline jule::Bool _1bc46e88a_typeCompatibilityChecker_eq(_1bc46e88a_typeCompatibilityChecker *_self_, _1bc46e88a_typeCompatibilityChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_src == _self_->_field_src) &&
		(_self_->_field_errorToken == _self_->_field_errorToken);
}

inline void _1bc46edb8_pushErr(_1bc46e88a_typeCompatibilityChecker* _self_, jule::Str _10723_fmt, jule::Slice<jule::Any> _10743_args) {
	_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _10723_fmt, _10743_args);
}



inline jule::Bool _1bc47014e_checkTrait(_1bc46e88a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1bc4b762a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc309769_Trait> _1157_trt = _1bc4ba4a7_Trait((*(_self_))._field_dest.ptr());;
	jule::Bool _1167_ref = false;;
	{
		
		if ((_1bc4b8e34_Sptr((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c3595812:;
			{
				_1167_ref=true;
				(*(_self_))._field_src=(*(_1bc4b8e34_Sptr((*(_self_))._field_src.ptr())))._field_Elem;
				if ((_1bc4ba221_Struct((*(_self_))._field_src) == nullptr)) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				goto _case_begin_1c35958ab;
			}
		}
		else if ((_1bc4ba221_Struct((*(_self_))._field_src.ptr()) != nullptr)) {
			_case_begin_1c35958ab:;
			{
				jule::Ptr<_1bc2810c5_StructIns> _1264_s = _1bc4ba221_Struct((*(_self_))._field_src);;
				if ((!(_1bc27e8dc_IsImplements((*(_1264_s))._field_Decl.ptr(), _1157_trt)))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				if (((!(_1167_ref)) && _1bc46d427_traitHasReferenceReceiver(&(_1157_trt)))) {
					_1bc46edb8_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_self_))._field_src) != nullptr)) {
			_case_begin_1c3595933:;
			{
				jule::Ptr<_1bc309769_Trait> _1368_base = _1bc4ba4a7_Trait((*(_self_))._field_src);;
				if ((_1157_trt == _1368_base)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_julec_label_1c0482427:;
				{
					auto expr = &((*(_1368_base))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c04826be:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> _14111_s1 = *it;
						{
							{
								auto expr = &((*(_1157_trt))._field_Implemented);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c048315e:;
								if (it != expr_end) {
									jule::Ptr<_1bc27d26a_Struct> _14212_s2 = *it;
									{
										if ((_14111_s1 == _14212_s2)) {
											goto _iter_next_1c04826be;
										};
									}
									_iter_next_1c048315e:;
									++it;
									goto _iter_begin_1c048315e;
								}
								_iter_end_1c048315e:;
							};
							__jule_func_result = false;
							return __jule_func_result;;
						}
						_iter_next_1c04826be:;
						++it;
						goto _iter_begin_1c04826be;
					}
					_iter_end_1c04826be:;
				};
				{
					auto expr = &((*(_1157_trt))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c0483527:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _14916_m1 = *it;
						{
							jule::Ptr<_1bc2ee055_Fn> _1509_m2 = _1bc30a44b_FindMethod(_1368_base, (*(_14916_m1))._field_Ident);;
							if ((_1509_m2 == nullptr)) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
							jule::Ptr<_1bc302113_FnIns> _1545_m1k = _1bc417415_getTraitCheckFnKind((*(_self_))._field_s, &(_14916_m1));;
							jule::Ptr<_1bc302113_FnIns> _1555_m2k = _1bc417415_getTraitCheckFnKind((*(_self_))._field_s, &(_1509_m2));;
							if ((!(_1bc3030ae_equalTrait(_1545_m1k, &(_1555_m2k))))) {
								__jule_func_result = false;
								return __jule_func_result;;
							};
						}
						_iter_next_1c0483527:;
						++it;
						goto _iter_begin_1c0483527;
					}
					_iter_end_1c0483527:;
				};
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c3595779:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c3595702:;
	};
}



inline jule::Bool _1bc4703d5_checkPtr(_1bc46e88a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1bc4b762a_IsNil((*(_self_))._field_src.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc4c6903_Ptr> _1707_dest = _1bc4b91ba_Ptr((*(_self_))._field_dest.ptr());;
	if (_1bc4c7470_IsUnsafe(_1707_dest.ptr())) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	__jule_func_result = _1bc4b6c34_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1bc47066b_checkPrim(_1bc46e88a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((!((*((*(_self_))._field_dest))._field_Variadic))) {
		jule::Ptr<_1bc4be610_Prim> _1794_prim = _1bc4b8b9d_Prim((*(_self_))._field_dest);;
		if (((_1794_prim != nullptr) && _1bc4c2d61_IsAny(_1794_prim))) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	__jule_func_result = _1bc4b6c34_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
	return __jule_func_result;;
}



inline jule::Bool _1bc470a67_typeEnum(_1bc46e88a_typeCompatibilityChecker* _self_, jule::Ptr<_1bc30d62a_TypeEnum>* _18725_e, jule::Ptr<_1bc4b64e7_Type>* _18744_t2) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_18725_e))))._field_Items);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c04892ec:;
		if (it != expr_end) {
			jule::Ptr<_1bc30d053_TypeEnumItem> _18815_item = *it;
			{
				if (_1bc4b6c34_Equal((*((*(_18815_item))._field_TypeSym))._field_Type, (*(_18744_t2)))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				jule::Ptr<_1bc30d62a_TypeEnum> _1928_ke = _1bc4b96d7_TypeEnum((*((*(_18815_item))._field_TypeSym))._field_Type.ptr());;
				if ((_1928_ke == nullptr)) {
					goto _iter_next_1c04892ec;
				};
				if (_1bc470a67_typeEnum(_self_, &(_1928_ke), _18744_t2)) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c04892ec:;
			++it;
			goto _iter_begin_1c04892ec;
		}
		_iter_end_1c04892ec:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc470ced_checkTypeEnum(_1bc46e88a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if (_1bc4b6c34_Equal((*(_self_))._field_dest, (*(_self_))._field_src)) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc30d62a_TypeEnum> _2077_e = _1bc4b96d7_TypeEnum((*(_self_))._field_dest.ptr());;
	__jule_func_result = _1bc470a67_typeEnum(_self_, &(_2077_e), &((*(_self_))._field_src));
	return __jule_func_result;;
}



inline jule::Bool _1bc471084_check(_1bc46e88a_typeCompatibilityChecker* _self_) {
	jule::Bool __jule_func_result = false;
	if ((_1bc4b91ba_Ptr((*(_self_))._field_dest.ptr()) != nullptr)) {
		__jule_func_result = _1bc4703d5_checkPtr(_self_);
		return __jule_func_result;;
	};
	if (_1bc4b83ea_NilCompatible((*(_self_))._field_dest.ptr())) {
		if (_1bc4b762a_IsNil((*(_self_))._field_src.ptr())) {
			__jule_func_result = true;
			return __jule_func_result;;
		};
	};
	{
		
		if ((_1bc4b8b9d_Prim((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c359bb9d:;
			{
				__jule_func_result = _1bc47066b_checkPrim(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*(_self_))._field_dest.ptr()) != nullptr)) {
			_case_begin_1c359bc36:;
			{
				__jule_func_result = _1bc470ced_checkTypeEnum(_self_);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_self_))._field_dest) != nullptr)) {
			_case_begin_1c359b62b:;
			{
				__jule_func_result = _1bc47014e_checkTrait(_self_);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c359b263:;
			{
				__jule_func_result = _1bc4b6c34_Equal((*(_self_))._field_dest, (*(_self_))._field_src);
				return __jule_func_result;;
			}
		}
		_match_end_1c359a7d4:;
	};
}








inline jule::Bool _1bc471716_assignTypeChecker_eq(_1bc471716_assignTypeChecker *_self_, _1bc471716_assignTypeChecker _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_dest == _self_->_field_dest) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_errorToken == _self_->_field_errorToken) &&
		(_self_->_field_refers == _self_->_field_refers);
}

inline void _1bc471bcd_pushErr(_1bc471716_assignTypeChecker* _self_, jule::Str _24423_fmt, jule::Slice<jule::Any> _24443_args) {
	_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*(_self_))._field_errorToken, _24423_fmt, _24443_args);
}



inline jule::Bool _1bc471e64_checkValidity(_1bc471716_assignTypeChecker* _self_) {
	jule::Bool _2497_valid = true;;
	{
		
		if ((_1bc4b9e8a_Fn((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c048b7b6:;
			{
				jule::Ptr<_1bc302113_FnIns> _2524_f = _1bc4b9e8a_Fn((*((*(_self_))._field_d))._field_Type);;
				{
					
					if (_1bc3035cb_IsBuiltin(_2524_f.ptr())) {
						_case_begin_1c048d125:;
						{
							_1bc471bcd_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("builtin define cannot use as anonymous function", 47)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((*((*(_2524_f))._field_Decl))._field_Binded) {
						_case_begin_1c048d1be:;
						{
							_1bc471bcd_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("binded functions cannot use as anonymous function", 49)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if (((!((*(*(_2524_f))._field_Decl.alloc)._field_Statically)) && _1bc2ee792_IsMethod((*(_2524_f))._field_Decl))) {
						_case_begin_1c048d235:;
						{
							_1bc471bcd_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("non-static methods cannot use as anonymous function", 51)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					else if ((((*(*(_2524_f))._field_Decl.alloc)._field_Generics.len() > 0LL) && ((*_2524_f.alloc)._field_Generics.len() == 0LL))) {
						_case_begin_1c048d29b:;
						{
							_1bc471bcd_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
							_1bc40d263_pushSuggestion((*(_self_))._field_s.ptr(), static_cast<jule::Str>(jule::Str::lit("instantiate generic function to use as anonymous function", 57)), jule::Slice<jule::Any>());
							_2497_valid=false;
						}
					}
					_match_end_1c048d037:;
				};
			}
		}
		else if ((_1bc4ba9c4_Tup((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c048b84e:;
			{
				_1bc471bcd_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("tuples cannot assign to single define in same time", 50)), jule::Slice<jule::Any>());
				_2497_valid=false;
			}
		}
		_match_end_1c048b750:;
	};
	return _2497_valid;;
}



inline jule::Bool _1bc4721ea_checkConst(_1bc471716_assignTypeChecker* _self_) {
	if (((!((*((*(_self_))._field_d))._field_untyped)) || (_1bc4b8b9d_Prim((*(_self_))._field_dest.ptr()) == nullptr))) {
		return false;;
	};
	jule::Str _2813_kind = (*(_1bc4b8b9d_Prim((*(_self_))._field_dest.ptr())))._field_Kind;;
	{
		
		if (_1bc37cc2c_IsFloat(_2813_kind)) {
			_case_begin_1c04949de:;
			{
				if ((!(_1bc46d7e0_floatAssignable(&(_2813_kind), &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else if (_1bc37c8db_IsInt(_2813_kind)) {
			_case_begin_1c0494a77:;
			{
				if ((!(_1bc46e3a1_intAssignable(_2813_kind, &((*(_self_))._field_d))))) {
					return false;;
				};
				(*((*((*(_self_))._field_d))._field_Constant))._field_Kind=_2813_kind;
			}
		}
		else {
			_case_begin_1c0494978:;
			{
				return false;;
			}
		}
		_match_end_1c0494846:;
	};
	return true;;
}



inline jule::Bool _1bc472481_checkCompatibility(_1bc471716_assignTypeChecker* _self_) {
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c359e475:;
			{
				return false;;
			}
		}
		else if ((!(_1bc471e64_checkValidity(_self_)))) {
			_case_begin_1c359e51e:;
			{
				return false;;
			}
		}
		else if (_1bc4721ea_checkConst(_self_)) {
			_case_begin_1c359e585:;
			{
				return true;;
			}
		}
		else if ((_1bc4b9451_Enum((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c359e5eb:;
			{
				jule::Ptr<_1bc4b64e7_Type> _3108_dkind = (*(_self_))._field_dest;;
				if ((_1bc4b9451_Enum((*(_self_))._field_dest.ptr()) != nullptr)) {
					_3108_dkind=(*((*(_1bc4b9451_Enum((*(_self_))._field_dest)))._field_TypeSym))._field_Type;
				};
				jule::Ptr<_1bc4be610_Prim> _3144_prim = _1bc4b8b9d_Prim((*(_self_))._field_dest.ptr());;
				if (((_3144_prim == nullptr) || _1bc4c2d61_IsAny(_3144_prim.ptr()))) {
					goto _match_end_1c359e2ee;
				};
				jule::Ptr<_1bc4b64e7_Type> _3198_dest = (*((*(_1bc4b9451_Enum((*((*(_self_))._field_d))._field_Type)))._field_TypeSym))._field_Type;;
				return _1bc415d4d_checkTypeCompatibility((*(_self_))._field_s, &(_3198_dest), &(_3108_dkind), &((*(_self_))._field_errorToken));;
			}
		}
		_match_end_1c359e2ee:;
	};
	return _1bc416722_checkTypeCompatibility1((*(_self_))._field_s, &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken));;
}



inline jule::Bool _1bc472717_check(_1bc471716_assignTypeChecker* _self_) {
	jule::Bool _3263_ok = _1bc472481_checkCompatibility(_self_);;
	if ((_3263_ok && (!((*((*((*(_self_))._field_d))._field_Type))._field_Variadic)))) {
		_1bc4d3bc9_applyImplicitCast(&((*(_self_))._field_s), &((*(_self_))._field_dest), &((*(_self_))._field_d), &((*(_self_))._field_errorToken), (*(_self_))._field_refers);
	};
	return _3263_ok;;
}







inline jule::Bool _1c04aa2da_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c04ab9d4:;
			{
				jule::Ptr<_1bc4b64e7_Type> _3498_elem = static_cast<jule::Ptr<_1bc4b64e7_Type>>(nullptr);;
				{
					
{
						_case_begin_1c35aacab:;
						{
							_3498_elem=(*(_1bc4b996d_Arr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c35aabe0:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc25ebca_ArrTypeDecl>()))._field_Elem;
				return _1bc474829_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1c04ab95c:;
	};
	return false;;
}

inline jule::Bool _1c35ae573_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c35b0bd4:;
			{
				jule::Ptr<_1bc4b64e7_Type> _3498_elem = static_cast<jule::Ptr<_1bc4b64e7_Type>>(nullptr);;
				{
					
{
						_case_begin_1c110da86:;
						{
							_3498_elem=(*(_1bc4b9c04_Slc((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c110db63:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc25dd3e_SlcTypeDecl>()))._field_Elem;
				return _1bc474829_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1c35b0b5c:;
	};
	return false;;
}

inline jule::Bool _1c04aeb5d_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c04b1335:;
			{
				jule::Ptr<_1bc4b64e7_Type> _3498_elem = static_cast<jule::Ptr<_1bc4b64e7_Type>>(nullptr);;
				{
					
{
						_case_begin_1c35b060c:;
						{
							_3498_elem=(*(_1bc4b91ba_Ptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c35b32be:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc25e438_PtrTypeDecl>()))._field_Elem;
				return _1bc474829_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1c04b12ad:;
	};
	return false;;
}

inline jule::Bool _1c32c6279_annotateConstraintElem(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _34646_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c32c792e:;
			{
				jule::Ptr<_1bc4b64e7_Type> _3498_elem = static_cast<jule::Ptr<_1bc4b64e7_Type>>(nullptr);;
				{
					
{
						_case_begin_1c35b4864:;
						{
							_3498_elem=(*(_1bc4b8e34_Sptr((*(_34646_k)).ptr())))._field_Elem;
						}
					}
					_match_end_1c35b06d9:;
				};
				(*(_self_))._field_c=(*((*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc25d9a9_SptrTypeDecl>()))._field_Elem;
				return _1bc474829_annotateConstraint(_self_, &(_3498_elem));;
			}
		}
		_match_end_1c32c78a7:;
	};
	return false;;
}



inline jule::Bool _1bc473a15_annotateConstraintMap(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _36642_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c049cc4a:;
			{
				jule::Ptr<_1bc4c52a3_Map> _3698_m = _1bc4ba73d_Map((*(_36642_k)).ptr());;
				jule::Ptr<_1bc260428_MapTypeDecl> _3708_m2 = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc260428_MapTypeDecl>();;
				(*(_self_))._field_c=(*(_3708_m2))._field_Key;
				if ((!(_1bc474829_annotateConstraint(_self_, &((*(_3698_m))._field_Key))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				(*(_self_))._field_c=(*_3708_m2.alloc)._field_Val;
				__jule_func_result = _1bc474829_annotateConstraint(_self_, &((*(_3698_m))._field_Val));
				return __jule_func_result;;
			}
		}
		_match_end_1c049cbc3:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc473d56_annotateConstraintTup(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _38142_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c04a1611:;
			{
				jule::Ptr<_1bc25e13b_TupleTypeDecl> _3848_tup = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc25e13b_TupleTypeDecl>();;
				jule::Ptr<_1bc4c4703_Tuple> _3858_tup2 = _1bc4ba9c4_Tup((*(_38142_k)).ptr());;
				{
					auto expr = &((*(_3858_tup2))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c04a3db6:;
					if (it != expr_end) {
						jule::Ptr<_1bc4b64e7_Type> _38616_t2 = *it;
						{
							{
								auto expr = &((*(_3848_tup))._field_Types);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c04a5b98:;
								if (it != expr_end) {
									jule::Ptr<_1bc25c90e_TypeDecl> _38717_t = *it;
									{
										(*(_self_))._field_c=_38717_t;
										if (_1bc474829_annotateConstraint(_self_, &(_38616_t2))) {
											__jule_func_result = true;
											return __jule_func_result;;
										};
									}
									_iter_next_1c04a5b98:;
									++it;
									goto _iter_begin_1c04a5b98;
								}
								_iter_end_1c04a5b98:;
							};
						}
						_iter_next_1c04a3db6:;
						++it;
						goto _iter_begin_1c04a3db6;
					}
					_iter_end_1c04a3db6:;
				};
			}
		}
		_match_end_1c04a1589:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc474197_annotateConstraintFn(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _39841_k) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c35a3952:;
			{
				jule::Ptr<_1bc26e69b_FnDecl> _4018_pf = (*((*(_self_))._field_c))._field_Kind.unsafe_cast_ptr<_1bc26e69b_FnDecl>();;
				jule::Ptr<_1bc302113_FnIns> _4028_f = _1bc4b9e8a_Fn((*(_39841_k)).ptr());;
				{
					auto expr = &((*(_4028_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c35a528e:;
					if (it != expr_end) {
						jule::I32 _4039_i = it - expr->begin();
						jule::Ptr<_1bc300ead_ParamIns> _40316_fp = *it;
						{
							(*(_self_))._field_c=(*((*(_4018_pf))._field_Params[_4039_i]))._field_Kind;
							if (_1bc474829_annotateConstraint(_self_, &((*(_40316_fp))._field_Type))) {
								__jule_func_result = true;
								return __jule_func_result;;
							};
						}
						_iter_next_1c35a528e:;
						++it;
						_4039_i++;
						goto _iter_begin_1c35a528e;
					}
					_iter_end_1c35a528e:;
				};
				if (((*(_4018_pf))._field_Result != nullptr)) {
					(*(_self_))._field_c=(*(*(_4018_pf))._field_Result.alloc)._field_Kind;
					if (_1bc474829_annotateConstraint(_self_, &((*_4028_f.alloc)._field_Result))) {
						__jule_func_result = true;
						return __jule_func_result;;
					};
				};
			}
		}
		_match_end_1c35a38ca:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc4744d8_annotateConstraintIdent(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _41944_k) {
	jule::Ptr<_1bc25d019_IdentTypeDecl> _4207_ident = (*((*(_self_))._field_c))._field_Kind.cast_ptr<_1bc25d019_IdentTypeDecl>(&__jule_any_type78);;
	jule::Ptr<_1bc2810c5_StructIns> _4217_s = _1bc4ba221_Struct((*(_41944_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35a84b2:;
		if (it != expr_end) {
			jule::I32 _4227_i = it - expr->begin();
			jule::Ptr<_1bc269b19_GenericDecl> _42210_g = *it;
			{
				if (((*(_42210_g))._field_Ident == (*(_4207_ident))._field_Ident)) {
					jule::Ptr<_1bc4b4b11_InsGeneric> _4249_fg = (*((*(_self_))._field_f))._field_Generics[_4227_i];;
					if ((_4249_fg != nullptr)) {
						return false;;
					};
					_1bc474b8c_pushGeneric(_self_, _41944_k, _4227_i);
					return true;;
				};
				if ((_4217_s == nullptr)) {
					goto _iter_next_1c35a84b2;
				};
				jule::Ptr<_1bc25c90e_TypeDecl> _4348_c = (*(_self_))._field_c;;
				{
					auto expr = &((*(_4207_ident))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c04a6957:;
					if (it != expr_end) {
						jule::Ptr<_1bc25c90e_TypeDecl> _43516_ig = *it;
						{
							(*(_self_))._field_c=_43516_ig;
							{
								auto expr = &((*(_4217_s))._field_Generics);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c04a7282:;
								if (it != expr_end) {
									jule::Ptr<_1bc4b4b11_InsGeneric> _43717_sg = *it;
									{
										if (_1bc474829_annotateConstraint(_self_, &((*(_43717_sg))._field_Type))) {
											return true;;
										};
									}
									_iter_next_1c04a7282:;
									++it;
									goto _iter_begin_1c04a7282;
								}
								_iter_end_1c04a7282:;
							};
						}
						_iter_next_1c04a6957:;
						++it;
						goto _iter_begin_1c04a6957;
					}
					_iter_end_1c04a6957:;
				};
				(*(_self_))._field_c=_4348_c;
			}
			_iter_next_1c35a84b2:;
			++it;
			_4227_i++;
			goto _iter_begin_1c35a84b2;
		}
		_iter_end_1c35a84b2:;
	};
	return false;;
}



inline jule::Bool _1bc474829_annotateConstraint(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _44839_k) {
	{
		auto &_match_expr{ (*((*(_self_))._field_c))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c04a86e5:;
			{
				return _1bc4744d8_annotateConstraintIdent(_self_, _44839_k);;
			}
		}
		_match_end_1c04a866d:;
	};
	{
		
		if ((_1bc4b996d_Arr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a8c23:;
			{
				return _1c04aa2da_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1bc4b9c04_Slc((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a8c89:;
			{
				return _1c35ae573_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1bc4b91ba_Ptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a8d00:;
			{
				return _1c04aeb5d_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1bc4b8e34_Sptr((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a8d66:;
			{
				return _1c32c6279_annotateConstraintElem(_self_, _44839_k);;
			}
		}
		else if ((_1bc4ba73d_Map((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a8dcc:;
			{
				return _1bc473a15_annotateConstraintMap(_self_, _44839_k);;
			}
		}
		else if ((_1bc4b9e8a_Fn((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a933e:;
			{
				return _1bc474197_annotateConstraintFn(_self_, _44839_k);;
			}
		}
		else if ((_1bc4ba9c4_Tup((*(_44839_k)).ptr()) != nullptr)) {
			_case_begin_1c04a93b6:;
			{
				return _1bc473d56_annotateConstraintTup(_self_, _44839_k);;
			}
		}
		else {
			_case_begin_1c04a8b24:;
			{
				return false;;
			}
		}
		_match_end_1c04a8aad:;
	};
}



inline void _1bc474b8c_pushGeneric(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _47332_k, jule::I32 _47342_i) {
	(*((*(_self_))._field_f))._field_Generics[_47342_i]=jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=(*(_47332_k)), ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)});
	jule::Ptr<_1bc269b19_GenericDecl> _4757_gd = (*((*(*(_self_))._field_f.alloc)._field_Decl))._field_Generics[_47342_i];;
	{
		auto expr = &((*(_self_))._field_ignored);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35b9b66:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b64e7_Type> _47615_ignored = *it;
			{
				if (((*(_4757_gd))._field_Ident == _1bc4b68e3_Str(_47615_ignored.ptr()))) {
					(*_47615_ignored.alloc)._field_Kind=(*((*(_47332_k))))._field_Kind;
				};
			}
			_iter_next_1c35b9b66:;
			++it;
			goto _iter_begin_1c35b9b66;
		}
		_iter_end_1c35b9b66:;
	};
	if ((((*(_4757_gd))._field_Constraint == nullptr) || ((*((*_4757_gd.alloc)._field_Constraint))._field_Mask.len() != 1LL))) {
		return;;
	};
	(*(_self_))._field_c=(*((*(_4757_gd))._field_Constraint))._field_Mask[0LL];
	_1bc474829_annotateConstraint(_self_, _47332_k);
}



inline jule::Bool _1bc474ecd_annotatePrim(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _48840_k) {
	jule::Bool __jule_func_result = false;
	__jule_func_result = _1bc477002_annotateAny(_self_, _48840_k);
	return __jule_func_result;;
}



inline jule::Bool _1bc47531e_annotateArr(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _49239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4c5e30_Arr> _4937_parr = _1bc4b996d_Arr((*((*(_self_))._field_k)).ptr());;
	if ((_4937_parr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc4c5e30_Arr> _4977_arr = _1bc4b996d_Arr((*(_49239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_4937_parr))._field_Elem));
	__jule_func_result = _1bc477343_annotateKind(_self_, &((*(_4977_arr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc475660_annotateSlc(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _50239_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4c3b0e_Slc> _5037_pslc = _1bc4b9c04_Slc((*((*(_self_))._field_k)).ptr());;
	if ((_5037_pslc == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _5077_slc = _1bc4b9c04_Slc((*(_50239_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5037_pslc))._field_Elem));
	__jule_func_result = _1bc477343_annotateKind(_self_, &((*(_5077_slc))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc475a5b_checkMapKey(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _51238_k, jule::Ptr<_1bc4b64e7_Type>* _51254_ck) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4b64e7_Type>* _5137_old = (*(_self_))._field_k;;
	(*(_self_))._field_k=_51238_k;
	__jule_func_result=_1bc477343_annotateKind(_self_, _51254_ck);
	(*(_self_))._field_k=_5137_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc475d9c_annotateMap(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _52039_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4c52a3_Map> _5217_pmap = _1bc4ba73d_Map((*((*(_self_))._field_k)).ptr());;
	if ((_5217_pmap == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc4c52a3_Map> _5257_m = _1bc4ba73d_Map((*(_52039_k)).ptr());;
	__jule_func_result = (_1bc475a5b_checkMapKey(_self_, (&((*(_5217_pmap))._field_Key)), &((*(_5257_m))._field_Key)) && _1bc475a5b_checkMapKey(_self_, (&((*_5217_pmap.alloc)._field_Val)), &((*_5257_m.alloc)._field_Val)));
	return __jule_func_result;;
}



inline jule::Bool _1bc4761dd_annotateFn(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _53038_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc302113_FnIns> _5317_pf = _1bc4b9e8a_Fn((*((*(_self_))._field_k)).ptr());;
	if ((_5317_pf == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc302113_FnIns> _5357_f = _1bc4b9e8a_Fn((*(_53038_k)).ptr());;
	{
		
		if (((*(_5317_pf))._field_Params.len() != (*(_5357_f))._field_Params.len())) {
			_case_begin_1c35c36db:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((_1bc2ee50b_IsVoid((*(_5317_pf))._field_Decl.ptr()) != _1bc2ee50b_IsVoid((*(_5357_f))._field_Decl))) {
			_case_begin_1c35c3774:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c35c3642:;
	};
	__jule_func_result=true;
	jule::Ptr<_1bc4b64e7_Type>* _5447_old = (*(_self_))._field_k;;
	{
		auto expr = &((*(_5357_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35c5622:;
		if (it != expr_end) {
			jule::I32 _5458_i = it - expr->begin();
			jule::Ptr<_1bc300ead_ParamIns> _54515_fp = *it;
			{
				(*(_self_))._field_k=(&((*((*(_5317_pf))._field_Params[_5458_i]))._field_Type));
				__jule_func_result=(_1bc477343_annotateKind(_self_, &((*(_54515_fp))._field_Type)) && __jule_func_result);
			}
			_iter_next_1c35c5622:;
			++it;
			_5458_i++;
			goto _iter_begin_1c35c5622;
		}
		_iter_end_1c35c5622:;
	};
	if ((!(_1bc2ee50b_IsVoid((*(_5317_pf))._field_Decl.ptr())))) {
		(*(_self_))._field_k=(&((*_5317_pf.alloc)._field_Result));
		__jule_func_result=(_1bc477343_annotateKind(_self_, &((*_5357_f.alloc)._field_Result)) && __jule_func_result);
	};
	(*(_self_))._field_k=_5447_old;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc47652e_annotatePtr(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _55939_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4c6903_Ptr> _5607_pptr = _1bc4b91ba_Ptr((*((*(_self_))._field_k)).ptr());;
	if ((_5607_pptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc4c6903_Ptr> _5647_ptr = _1bc4b91ba_Ptr((*(_55939_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5607_pptr))._field_Elem));
	__jule_func_result = _1bc477343_annotateKind(_self_, &((*(_5647_ptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc476870_annotateSptr(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _56940_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4c313b_Sptr> _5707_ssptr = _1bc4b8e34_Sptr((*((*(_self_))._field_k)).ptr());;
	if ((_5707_ssptr == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc4c313b_Sptr> _5747_sptr = _1bc4b8e34_Sptr((*(_56940_k)).ptr());;
	(*(_self_))._field_k=(&((*(_5707_ssptr))._field_Elem));
	__jule_func_result = _1bc477343_annotateKind(_self_, &((*(_5747_sptr))._field_Elem));
	return __jule_func_result;;
}



inline jule::Bool _1bc476bb1_annotateStruct(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _57942_k) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc2810c5_StructIns> _5807_s = _1bc4ba221_Struct((*((*(_self_))._field_k)).ptr());;
	if ((_5807_s == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _5847_s2 = _1bc4ba221_Struct((*(_57942_k)).ptr());;
	if (((*(_5807_s))._field_Generics.len() != (*(_5847_s2))._field_Generics.len())) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto expr = &((*(_5807_s))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32d0e43:;
		if (it != expr_end) {
			jule::I32 _5888_i = it - expr->begin();
			jule::Ptr<_1bc4b4b11_InsGeneric> _58815_g = *it;
			{
				jule::Ptr<_1bc4b4b11_InsGeneric> _5898_g2 = (*(_5847_s2))._field_Generics[_5888_i];;
				if (_1bc4b6c34_Equal((*(_58815_g))._field_Type, (*(_5898_g2))._field_Type)) {
					goto _iter_next_1c32d0e43;
				};
				(*(_self_))._field_k=(&((*(_58815_g))._field_Type));
				if ((!(_1bc477343_annotateKind(_self_, &((*(_5898_g2))._field_Type))))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c32d0e43:;
			++it;
			_5888_i++;
			goto _iter_begin_1c32d0e43;
		}
		_iter_end_1c32d0e43:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc477002_annotateAny(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _60139_k) {
	jule::Bool __jule_func_result = false;
	jule::Str _6023_kind = _1bc4b68e3_Str((*((*(_self_))._field_k)).ptr());;
	{
		auto expr = &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c32d451d:;
		if (it != expr_end) {
			jule::I32 _6037_i = it - expr->begin();
			jule::Ptr<_1bc269b19_GenericDecl> _60310_g = *it;
			{
				if ((_6023_kind != (*(_60310_g))._field_Ident)) {
					goto _iter_next_1c32d451d;
				};
				jule::Ptr<_1bc4b4b11_InsGeneric> _6074_t = (*((*(_self_))._field_f))._field_Generics[_6037_i];;
				{
					
					if ((_6074_t == nullptr) || ((*(_6074_t))._field_Type == nullptr)) {
						_case_begin_1c32d5de3:;
						{
							_1bc474b8c_pushGeneric(_self_, _60139_k, _6037_i);
						}
					}
					else if ((!(_1bc4b6c34_Equal((*(_6074_t))._field_Type, (*(_60139_k)))))) {
						_case_begin_1c32d5e8c:;
						{
							__jule_func_result = false;
							return __jule_func_result;;
						}
					}
					_match_end_1c32d5ca0:;
				};
				(*((*((*(_self_))._field_k))))._field_Kind=(*((*(_60139_k))))._field_Kind;
				__jule_func_result = true;
				return __jule_func_result;;
			}
			_iter_next_1c32d451d:;
			++it;
			_6037_i++;
			goto _iter_begin_1c32d451d;
		}
		_iter_end_1c32d451d:;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc477343_annotateKind(_1bc4730db_dynamicTypeAnnotation* _self_, jule::Ptr<_1bc4b64e7_Type>* _62240_k) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_k == nullptr) || ((*((*(_self_))._field_k)) == nullptr))) {
		return __jule_func_result;;
	};
	{
		
		if (_1bc477002_annotateAny(_self_, _62240_k)) {
			_case_begin_1c35cc4a3:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b8b9d_Prim((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc519:;
			{
				__jule_func_result = _1bc474ecd_annotatePrim(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b996d_Arr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc580:;
			{
				__jule_func_result = _1bc47531e_annotateArr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b9c04_Slc((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc607:;
			{
				__jule_func_result = _1bc475660_annotateSlc(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4ba73d_Map((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc7b1:;
			{
				__jule_func_result = _1bc475d9c_annotateMap(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b9e8a_Fn((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc827:;
			{
				__jule_func_result = _1bc4761dd_annotateFn(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b91ba_Ptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc88d:;
			{
				__jule_func_result = _1bc47652e_annotatePtr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4b8e34_Sptr((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc904:;
			{
				__jule_func_result = _1bc476870_annotateSptr(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else if ((_1bc4ba221_Struct((*(_62240_k)).ptr()) != nullptr)) {
			_case_begin_1c35cc97b:;
			{
				__jule_func_result = _1bc476bb1_annotateStruct(_self_, _62240_k);
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c35cc382:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c35cbe0e:;
	};
}



inline jule::Bool _1bc4775c9_annotate(_1bc4730db_dynamicTypeAnnotation* _self_) {
	jule::Bool __jule_func_result = false;
	(*(_self_))._field_k=(&((*((*(_self_))._field_p))._field_Type));
	__jule_func_result = _1bc477343_annotateKind(_self_, &((*((*(_self_))._field_a))._field_Type));
	return __jule_func_result;;
}







inline void _1bc4784dc_pushErrToken(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc247014_Token> _66728_token, jule::Str _66750_fmt, jule::Slice<jule::Any> _66770_args) {
	_1bc40ce00_pushErr((*((*(_self_))._field_e))._field_s.ptr(), _66728_token, _66750_fmt, _66770_args);
}



inline void _1bc478850_pushErr(_1bc477e48_fnCallArgChecker* _self_, jule::Str _67123_fmt, jule::Slice<jule::Any> _67143_args) {
	_1bc4784dc_pushErrToken(_self_, (*(_self_))._field_errorToken, _67123_fmt, _67143_args);
}



inline jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _1bc478ad6_getParams(_1bc477e48_fnCallArgChecker* _self_) {
	if (((((*((*(_self_))._field_f))._field_Params.len() > 0LL) && ((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl != nullptr)) && _1bc2ecbd0_IsSelf((*((*((*(_self_))._field_f))._field_Params[0LL]))._field_Decl))) {
		return (*(*(_self_))._field_f.alloc)._field_Params.slice(1LL);;
	};
	return (*((*(_self_))._field_f))._field_Params;;
}



inline jule::Bool _1bc478e27_checkCounts(_1bc477e48_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>* _68428_params) {
	jule::Bool __jule_func_result = false;
	jule::I32 _6857_n = (*(_68428_params)).len();;
	if (((_6857_n > 0LL) && _1bc2ecbd0_IsSelf((*((*(_68428_params))[0LL]))._field_Decl.ptr()))) {
		(_6857_n)--;
	};
	jule::I32 _6907_diff = (_6857_n - (*(_self_))._field_args.len());;
	jule::Str _6917_log = static_cast<jule::Str>(jule::Str());;
	{
		
		if ((_6907_diff == 0LL)) {
			_case_begin_1c35d5753:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6857_n > 0LL) && (*((*((*(_68428_params))[(_6857_n - 1LL)]))._field_Decl))._field_Variadic)) {
			_case_begin_1c35d55bb:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (((_6907_diff < 0LL) || (_6907_diff > (*(_68428_params)).len()))) {
			_case_begin_1c35d528b:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63));
			}
		}
		else {
			_case_begin_1c35d5225:;
			{
				_6917_log=static_cast<jule::Str>(jule::Str::lit("missing arguments to call @", 27));
			}
		}
		_match_end_1c35d51ae:;
	};
	_1a95669ea_Builder _7027_err = static__1a9567369_New(32LL);;
	({
		auto except = _1a95679eb_WriteStr(&_7027_err, (*((*((*(_self_))._field_f))._field_Decl))._field_Ident);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:703:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_7027_err, jule::Str::lit("\n       want (", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:704:3"));
		(except.result);
	});
	{
		auto expr = _68428_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3294a83:;
		if (it != expr_end) {
			jule::I32 _7057_i = it - expr->begin();
			jule::Ptr<_1bc300ead_ParamIns> *_70510_p = it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_7027_err, _1bc4b68e3_Str((*((*(_70510_p))))._field_Type.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:706:4"));
					(except.result);
				});
				if ((((*(_68428_params)).len() - _7057_i) > 1LL)) {
					({
						auto except = _1a95679eb_WriteStr(&_7027_err, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:708:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c3294a83:;
			++it;
			_7057_i++;
			goto _iter_begin_1c3294a83;
		}
		_iter_end_1c3294a83:;
	};
	({
		auto except = _1a9567ca4_WriteByte(&_7027_err, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:711:3"));
	});
	_1bc478850_pushErr(_self_, _6917_log, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a956837b_Str(&_7027_err), &__jule_any_type5); __jule_collection; }));
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc4793cd_checkArg(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc300ead_ParamIns>* _71629_p, jule::Ptr<_1bc48354c_Data>* _71648_arg, jule::Ptr<_1bc247014_Token>* _71665_errorToken) {
	jule::Bool __jule_func_result = false;
	if (((*(_self_))._field_dynamicAnnotation && _1bc3043e0_parameterUsesGenerics(_71629_p, &((*((*((*(_self_))._field_f))._field_Decl))._field_Generics)))) {
		__jule_func_result=((!((*((*((*(_71629_p))))._field_Decl))._field_Variadic)) && _1bc481b11_isGoodValueToInfer(_71648_arg));
		if (__jule_func_result) {
			_1bc4730db_dynamicTypeAnnotation _7219_dta = _1bc4730db_dynamicTypeAnnotation{._field_e=(*(_self_))._field_e, ._field_f=(*(_self_))._field_f, ._field_p=(*(_71629_p)), ._field_a=(*(_71648_arg)), ._field_errorToken=(*(_71665_errorToken)), ._field_k=nullptr, ._field_c=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_ignored=(*(_self_))._field_ignored};;
			__jule_func_result=_1bc4775c9_annotate(&_7219_dta);
		};
		if ((!(__jule_func_result))) {
			_1bc4784dc_pushErrToken(_self_, (*(_71665_errorToken)), static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
			__jule_func_result = false;
			return __jule_func_result;;
		};
	};
	if (_1bc419b76_checkValidityForInitExpr((*((*(_self_))._field_e))._field_s, (*((*((*(_71629_p))))._field_Decl))._field_Mutable, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, _71665_errorToken)) {
		__jule_func_result = _1bc4153e1_checkAssignType((*((*(_self_))._field_e))._field_s, (*(*((*(_71629_p))))._field_Decl.alloc)._field_Reference, &((*((*(_71629_p))))._field_Type), _71648_arg, (*(_71665_errorToken)), _1bc488a2a_getOwnerRefers((*(_self_))._field_e));
		return __jule_func_result;;
	};
	__jule_func_result = false;
	return __jule_func_result;;
}



inline jule::Bool _1bc4797c9_push(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc300ead_ParamIns>* _74525_p, jule::Ptr<_1bc261c43_Expr> _74543_arg) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc4b64e7_Type> _7467_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Bool _7473_oldMut = (*(*(_self_))._field_e.alloc)._field_target._field_mutable;;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=(*((*((*(_74525_p))))._field_Decl))._field_Mutable;
	if (((!((*(_self_))._field_dynamicAnnotation)) && (!((*(*((*(_74525_p))))._field_Decl.alloc)._field_Variadic)))) {
		(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_74525_p))))._field_Type;
	} else {
		(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
	};
	jule::Ptr<_1bc48354c_Data> _7557_d = _1bc4a4309_evalExpr((*(_self_))._field_e, _74543_arg);;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7467_old;
	(*(*(_self_))._field_e.alloc)._field_target._field_mutable=_7473_oldMut;
	if ((_7557_d == nullptr)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1bc4793cd_checkArg(_self_, _74525_p, &(_7557_d), &((*(_74543_arg))._field_Token));
	{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_7557_d))._field_Model); };
	return __jule_func_result;;
}



inline jule::Bool _1bc479bc5_pushVariadic(_1bc477e48_fnCallArgChecker* _self_, jule::Ptr<_1bc300ead_ParamIns>* _76933_p, jule::I32 _76951_i) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _7717_variadiced = false;;
	jule::Bool _7723_more = ((_76951_i + 1LL) < (*(_self_))._field_args.len());;
	jule::Ptr<_1bc2e4149_SliceExprModel> _7737_model = jule::new_ptr<_1bc2e4149_SliceExprModel>(_1bc2e4149_SliceExprModel{._field_ElemType=(*((*(_76933_p))))._field_Type, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	jule::Ptr<_1bc4b64e7_Type> _7777_old = (*((*(_self_))._field_e))._field_prefix;;
	jule::Ptr<_1bc4b64e7_Type> _7847_oldKind = (*((*(_76933_p))))._field_Type;;
	(*((*(_76933_p))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>((*(*((*(_76933_p))))._field_Type.alloc));
	(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
	__JULE_DEFER({
		(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
		(*((*(_76933_p))))._field_Type=_7847_oldKind;
	});;
	for (; (_76951_i < (*(_self_))._field_args.len()); (_76951_i)++) {
		{
			jule::Ptr<_1bc261c43_Expr> _7938_arg = (*(_self_))._field_args[_76951_i];;
			{
				auto &_match_expr{ (*(_7938_arg))._field_Kind };
				
				if (_match_expr.type == &__jule_any_type79) {
					_case_begin_1c36c7180:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c3b0e_Slc>(_1bc4c3b0e_Slc{._field_Elem=(*((*(_76933_p))))._field_Type}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24)});
					}
				}
				else {
					_case_begin_1c36c747c:;
					{
						(*(*(_self_))._field_e.alloc)._field_prefix=(*((*(_76933_p))))._field_Type;
					}
				}
				_match_end_1c36c7416:;
			};
			jule::Ptr<_1bc48354c_Data> _8068_d = _1bc4a3b77_eval((*(_self_))._field_e, _7938_arg);;
			if ((_8068_d == nullptr)) {
				__jule_func_result=false;
				goto _iter_next_1c36c6613;
			};
			if ((*((*(_8068_d))._field_Type))._field_Variadic) {
				_7717_variadiced=true;
				(*((*((*(_76933_p))))._field_Type))._field_Variadic=true;
				__jule_func_result=(__jule_func_result && _1bc4793cd_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
				(*(*((*(_76933_p))))._field_Type.alloc)._field_Variadic=false;
				{
					auto &_match_expr{ (*(_8068_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type80) {
						_case_begin_1c36caddc:;
						{
							_7737_model=(*(_8068_d))._field_Model.unsafe_cast_ptr<_1bc2e4149_SliceExprModel>();
							(*(_7737_model))._field_ElemType=(*((*(_76933_p))))._field_Type;
						}
					}
					else {
						_case_begin_1c36cdc03:;
						{
							_7737_model=nullptr;
							{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push((*(_8068_d))._field_Model); };
						}
					}
					_match_end_1c36cdb8c:;
				};
				(_76951_i)++;
				goto _iter_end_1c36c6613;
			};
			__jule_func_result=(__jule_func_result && _1bc4793cd_checkArg(_self_, _76933_p, &(_8068_d), &((*(_7938_arg))._field_Token)));
			(*(_7737_model))._field_Elems=jule::append((*_7737_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8068_d))._field_Model; __jule_collection; }));
		}
	_iter_next_1c36c6613:;
	}
	_iter_end_1c36c6613:;;
	(*(*(_self_))._field_e.alloc)._field_prefix=_7777_old;
	if ((_7717_variadiced && _7723_more)) {
		_1bc4784dc_pushErrToken(_self_, (*((*(_self_))._field_args[_76951_i]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
	};
	if ((_7737_model != nullptr)) {
		{ jule::Slice<jule::Any> &__jule_push_dest = (*(_self_))._field_argModels; __jule_push_dest.push(jule::Any(_7737_model, &__jule_any_type80)); };
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc47a016_checkArgs(_1bc477e48_fnCallArgChecker* _self_, jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>* _85030_params) {
	jule::Bool __jule_func_result = false;
	_1bc484a9d_target _8513_target = (*((*(_self_))._field_e))._field_target;;
	(*(*(_self_))._field_e.alloc)._field_target._field_ignored=false;
	__jule_func_result=true;
	jule::I32 _8557_i = 0LL;;
	if ((((*(_85030_params)).len() > 0LL) && _1bc2ecbd0_IsSelf((*((*(_85030_params))[0LL]))._field_Decl.ptr()))) {
		(_8557_i)++;
	};
	_julec_label_1c36d714b:;
	while ((_8557_i < (*(_85030_params)).len())) {
		{
			jule::Ptr<_1bc300ead_ParamIns> _8628_p = (*(_85030_params))[_8557_i];;
			{
				
				if ((*((*(_8628_p))._field_Decl))._field_Variadic) {
					_case_begin_1c36d8aed:;
					{
						__jule_func_result=(_1bc479bc5_pushVariadic(_self_, &(_8628_p), _8557_i) && __jule_func_result);
						goto _iter_end_1c36d7327;
					}
				}
				else if (((*(_self_))._field_args.len() <= _8557_i)) {
					_case_begin_1c36d8bdb:;
					{
						__jule_func_result=false;
						goto _iter_end_1c36d7327;
					}
				}
				else {
					_case_begin_1c36d8735:;
					{
						__jule_func_result=(_1bc4797c9_push(_self_, &(_8628_p), (*(_self_))._field_args[_8557_i]) && __jule_func_result);
					}
				}
				_match_end_1c36d86ad:;
			};
			(_8557_i)++;
		}
	_iter_next_1c36d7327:;
	}
	_iter_end_1c36d7327:;;
	(*(*(_self_))._field_e.alloc)._field_target=_8513_target;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1bc47a29c_checkDynamicTypeAnnotation(_1bc477e48_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_self_))._field_f))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c36da946:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b4b11_InsGeneric> _88210_g = *it;
			{
				if ((_88210_g == nullptr)) {
					_1bc478850_pushErr(_self_, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
					__jule_func_result = false;
					return __jule_func_result;;
				};
			}
			_iter_next_1c36da946:;
			++it;
			goto _iter_begin_1c36da946;
		}
		_iter_end_1c36da946:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc47a533_check(_1bc477e48_fnCallArgChecker* _self_) {
	jule::Bool __jule_func_result = false;
	jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _8927_params = _1bc478ad6_getParams(_self_);;
	__jule_func_result=_1bc478e27_checkCounts(_self_, &(_8927_params));
	if ((!(__jule_func_result))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	__jule_func_result=_1bc47a016_checkArgs(_self_, &(_8927_params));
	if ((__jule_func_result && (*(_self_))._field_dynamicAnnotation)) {
		__jule_func_result=_1bc47a29c_checkDynamicTypeAnnotation(_self_);
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}







inline void _1bc47b413_pushErr(_1bc47ad80_structLitChecker* _self_, jule::Ptr<_1bc247014_Token> _93023_token, jule::Str _93045_fmt, jule::Slice<jule::Any> _93065_args) {
	_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), _93023_token, _93045_fmt, _93065_args);
}



inline void _1bc47b776_pushSuggestion(_1bc47ad80_structLitChecker* _self_, jule::Str _93530_fmt, jule::Slice<jule::Any> _93550_args) {
	_1bc485d57_pushSuggestion((*(_self_))._field_e.ptr(), _93530_fmt, _93550_args);
}



inline void _1bc47bb94_pushMatch(_1bc47ad80_structLitChecker* _self_, jule::Ptr<_1bc280525_FieldIns>* _93930_f, jule::Ptr<_1bc48354c_Data>* _93949_d, jule::Ptr<_1bc247014_Token>* _93964_errorToken) {
	;
	jule::Bool _9453_mutable = ((*((*(_self_))._field_e))._field_target._field_mutable || ((*((*((*(_93930_f))))._field_Decl))._field_Mutable && ((*((*(_self_))._field_s))._field_Methods.len() > 0LL)));;
	if (_1bc419b76_checkValidityForInitExpr((*(*(_self_))._field_e.alloc)._field_s, _9453_mutable, false, &((*((*(_93930_f))))._field_Type), _93949_d, _93964_errorToken)) {
		_1bc4153e1_checkAssignType((*((*(_self_))._field_e))._field_s, false, &((*((*(_93930_f))))._field_Type), _93949_d, (*(_93964_errorToken)), _1bc488a2a_getOwnerRefers((*(_self_))._field_e));
	};
	{ jule::Slice<jule::Ptr<_1bc2e2697_StructArgExprModel>> &__jule_push_dest = (*(_self_))._field_args; __jule_push_dest.push(jule::new_ptr<_1bc2e2697_StructArgExprModel>(_1bc2e2697_StructArgExprModel{._field_Token=(*(_93964_errorToken)), ._field_Field=(*(_93930_f)), ._field_Expr=(*(_93949_d))})); };
}



inline void _1bc47c007_checkPair(_1bc47ad80_structLitChecker* _self_, jule::Ptr<_1bc266462_FieldExprPair>* _95830_pair, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _95862_exprs) {
	jule::Ptr<_1bc280525_FieldIns> _9607_f = _1bc2824b1_FindField((*(_self_))._field_s.ptr(), (*((*((*(_95830_pair))))._field_Field))._field_Kind);;
	if ((_9607_f == nullptr)) {
		_1bc47b413_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((!(_1bc40d65e_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_9607_f))._field_Decl))._field_Public, (*(*(_9607_f))._field_Decl.alloc)._field_Token)))) {
		_1bc47b413_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		_1bc47b776_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	_julec_label_1c36e6e3b:;
	{
		auto expr = _95862_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c36e7e3c:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _97215_expr = *it;
			{
				{
					auto &_match_expr{ (*(_97215_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1c36e8987:;
						{
							jule::Ptr<_1bc266462_FieldExprPair> _9759_dpair = (*(_97215_expr))._field_Kind.unsafe_cast_ptr<_1bc266462_FieldExprPair>();;
							{
								
								if (((*(_95830_pair)) == _9759_dpair)) {
									_case_begin_1c36e9339:;
									{
										goto _iter_end_1c36e7e3c;
									}
								}
								else if (((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind == (*(*(_9759_dpair))._field_Field.alloc)._field_Kind)) {
									_case_begin_1c36eb1b5:;
									{
										_1bc47b413_pushErr(_self_, (*((*(_95830_pair))))._field_Field, static_cast<jule::Str>(jule::Str::lit("@ already has expression", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_95830_pair))))._field_Field.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
										goto _iter_end_1c36e7e3c;
									}
								}
								_match_end_1c36e92a1:;
							};
						}
					}
					_match_end_1c36e8910:;
				};
			}
			_iter_next_1c36e7e3c:;
			++it;
			goto _iter_begin_1c36e7e3c;
		}
		_iter_end_1c36e7e3c:;
	};
	jule::Ptr<_1bc4b64e7_Type> _9867_prefix = (*((*(_self_))._field_e))._field_prefix;;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_9867_prefix;
	});;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_9607_f))._field_Type;
	jule::Ptr<_1bc48354c_Data> _9907_d = _1bc4a4309_evalExpr((*(_self_))._field_e, (*((*(_95830_pair))))._field_Expr);;
	if ((_9907_d == nullptr)) {
		return;;
	};
	_1bc47bb94_pushMatch(_self_, &(_9607_f), &(_9907_d), &((*((*(_95830_pair))))._field_Field));
}



inline jule::Bool _1bc47c348_readyExprs(_1bc47ad80_structLitChecker* _self_, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _99731_exprs) {
	jule::Bool _9987_ok = true;;
	{
		auto expr = _99731_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c370172b:;
		if (it != expr_end) {
			jule::I32 _9998_i = it - expr->begin();
			jule::Ptr<_1bc261c43_Expr> _99915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_99915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1c37024a7:;
						{
							jule::Ptr<_1bc267a6d_KeyValPair> _10029_pair = (*(_99915_expr))._field_Kind.unsafe_cast_ptr<_1bc267a6d_KeyValPair>();;
							{
								auto &_match_expr{ (*((*(_10029_pair))._field_Key))._field_Kind };
								
								if (_match_expr.type == &__jule_any_type42) {
									_case_begin_1c37053bc:;
									{
										goto _match_end_1c3704e8d;
									}
								}
								else {
									_case_begin_1c3705004:;
									{
										_1bc47b413_pushErr(_self_, (*(_10029_pair))._field_Colon, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
										_9987_ok=false;
										goto _iter_next_1c370172b;
									}
								}
								_match_end_1c3704e8d:;
							};
							(*((*(_99731_exprs))[_9998_i]))._field_Kind=jule::Any(jule::new_ptr<_1bc266462_FieldExprPair>(_1bc266462_FieldExprPair{._field_Field=(*((*(_10029_pair))._field_Key))._field_Token, ._field_Expr=(*_10029_pair.alloc)._field_Val}), &__jule_any_type81);
						}
					}
					_match_end_1c3702430:;
				};
			}
			_iter_next_1c370172b:;
			++it;
			_9998_i++;
			goto _iter_begin_1c370172b;
		}
		_iter_end_1c370172b:;
	};
	return _9987_ok;;
}



inline void _1bc47c601_check(_1bc47ad80_structLitChecker* _self_, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _102126_exprs) {
	if (((*(_102126_exprs)).len() == 0LL)) {
		return;;
	};
	if ((!(_1bc47c348_readyExprs(_self_, _102126_exprs)))) {
		return;;
	};
	jule::Bool _10287_paired = false;;
	{
		auto expr = _102126_exprs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3708678:;
		if (it != expr_end) {
			jule::I32 _10298_i = it - expr->begin();
			jule::Ptr<_1bc261c43_Expr> _102915_expr = *it;
			{
				{
					auto &_match_expr{ (*(_102915_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type81) {
						_case_begin_1c370e5a2:;
						{
							jule::Ptr<_1bc266462_FieldExprPair> _10329_pair = (*(_102915_expr))._field_Kind.unsafe_cast_ptr<_1bc266462_FieldExprPair>();;
							if (((_10298_i > 0LL) && (!(_10287_paired)))) {
								_1bc47b413_pushErr(_self_, (*(_10329_pair))._field_Field, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							_10287_paired=true;
							_1bc47c007_checkPair(_self_, &(_10329_pair), _102126_exprs);
						}
					}
					else {
						_case_begin_1c3709899:;
						{
							if (_10287_paired) {
								_1bc47b413_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument must target to field", 29)), jule::Slice<jule::Any>());
							};
							if ((_10298_i >= (*((*(_self_))._field_s))._field_Fields.len())) {
								_1bc47b413_pushErr(_self_, (*(_102915_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), jule::Slice<jule::Any>());
								goto _iter_next_1c3708678;
							};
							jule::Ptr<_1bc280525_FieldIns> _10479_field = (*((*(_self_))._field_s))._field_Fields[_10298_i];;
							if ((!(_1bc40d65e_isAccessibleDefine((*((*(_self_))._field_e))._field_s.ptr(), (*((*(_10479_field))._field_Decl))._field_Public, (*(*(_10479_field))._field_Decl.alloc)._field_Token)))) {
								_1bc47b413_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("structure cannot instantiating because it has non-public fields", 63)), jule::Slice<jule::Any>());
								_1bc47b776_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use field:expression pairs to instantiate", 41)), jule::Slice<jule::Any>());
								return;;
							};
							jule::Ptr<_1bc4b64e7_Type> _10559_prefix = (*((*(_self_))._field_e))._field_prefix;;
							__JULE_DEFER({
								(*(*(_self_))._field_e.alloc)._field_prefix=_10559_prefix;
							});;
							(*(*(_self_))._field_e.alloc)._field_prefix=(*(_10479_field))._field_Type;
							jule::Ptr<_1bc48354c_Data> _10599_d = _1bc4a4309_evalExpr((*(_self_))._field_e, _102915_expr);;
							if ((_10599_d == nullptr)) {
								goto _iter_next_1c3708678;
							};
							_1bc47bb94_pushMatch(_self_, &(_10479_field), &(_10599_d), &((*(_102915_expr))._field_Token));
						}
					}
					_match_end_1c3709833:;
				};
			}
			_iter_next_1c3708678:;
			++it;
			_10298_i++;
			goto _iter_begin_1c3708678;
		}
		_iter_end_1c3708678:;
	};
	if ((!(_10287_paired))) {
		jule::I32 _10704_n = (*((*(_self_))._field_s))._field_Fields.len();;
		jule::I32 _10718_diff = (_10704_n - (*(_102126_exprs)).len());;
		{
			
			if ((_10718_diff <= 0LL)) {
				_case_begin_1c3712561:;
				{
					return;;
				}
			}
			_match_end_1c3712440:;
		};
		_1a95669ea_Builder _10778_idents = static__1a9567369_New(32LL);;
		for (; (_10718_diff > 0LL); (_10718_diff)--) {
			{
				({
					auto except = _1a95679eb_WriteStr(&_10778_idents, jule::Str::lit(", ", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1079:5"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&_10778_idents, (*((*((*(*(_self_))._field_s.alloc)._field_Fields[(_10704_n - _10718_diff)]))._field_Decl))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1080:5"));
					(except.result);
				});
			}
		_iter_next_1c3712cd1:;
		}
		_iter_end_1c3712cd1:;;
		_1bc47b413_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(__jule_bytesToStr(_1a9568d2c_Buf(&_10778_idents).slice(2LL)), &__jule_any_type5); __jule_collection; }));
	};
}








inline jule::Bool _1bc47cb62_rangeChecker_eq(_1bc47cb62_rangeChecker *_self_, _1bc47cb62_rangeChecker _other_) {
	return 
		(_self_->_field_sc == _other_._field_sc) &&
		(_self_->_field_rang == _self_->_field_rang) &&
		(_self_->_field_Kind == _self_->_field_Kind) &&
		(_self_->_field_d == _self_->_field_d);
}

inline jule::Ptr<_1bc42dc12_Var> _1bc47d17e_buildVar(_1bc47cb62_rangeChecker* _self_, jule::Ptr<_1bc270856_VarDecl>* _109725_decl) {
	jule::Ptr<_1bc42dc12_Var> _10987_v = _1bc3d0ed3_buildVar((*(_109725_decl)));;
	return _10987_v;;
}



inline void _1bc47d37c_setSizeKey(_1bc47cb62_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyA=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("int", 3)))))._field_TypeSym;
}



inline void _1bc47d79a_checkRangeExprValidity(_1bc47cb62_rangeChecker* _self_, jule::Ptr<_1bc48354c_Data>* _111643_d, jule::Ptr<_1bc42dc12_Var>* _111654_key, jule::Ptr<_1bc4b64e7_Type>* _111670_k) {
	jule::Bool _11177__mut = (*((*(_111654_key))))._field_Mutable;;
	if ((_11177__mut && (!(_1bc4b7dcd_Mutable((*(_111670_k)).ptr()))))) {
		_11177__mut=false;
	};
	_1bc419b76_checkValidityForInitExpr((*((*(_self_))._field_sc))._field_s, _11177__mut, (*((*(_111654_key))))._field_Reference, &((*((*((*(_111654_key))))._field_TypeSym))._field_Type), _111643_d, &((*((*(_self_))._field_rang))._field_InToken));
}



inline void _1bc47d998_checkSlice(_1bc47cb62_rangeChecker* _self_) {
	_1bc47d37c_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _11357_slc = _1bc4b9c04_Slc((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_11357_slc))._field_Elem});
	_1bc47d79a_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11357_slc.alloc)._field_Elem));
}



inline void _1bc47db96_checkArray(_1bc47cb62_rangeChecker* _self_) {
	_1bc47d37c_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc4c5e30_Arr> _11487_arr = _1bc4b996d_Arr((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_11487_arr))._field_Elem});
	_1bc47d79a_checkRangeExprValidity(_self_, &((*(_self_))._field_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11487_arr.alloc)._field_Elem));
}



inline void _1bc47dd94_checkMapKeyA(_1bc47cb62_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyA == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyA))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc4c52a3_Map> _11607_m = _1bc4ba73d_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyA=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyA));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyA))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_11607_m))._field_Key});
	jule::Ptr<_1bc48354c_Data> _11647_d = jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc));;
	(*_11647_d.alloc)._field_Type=(*_11607_m.alloc)._field_Key;
	_1bc47d79a_checkRangeExprValidity(_self_, &(_11647_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyA), &((*_11607_m.alloc)._field_Key));
}



inline void _1bc47e092_checkMapKeyB(_1bc47cb62_rangeChecker* _self_) {
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	jule::Ptr<_1bc4c52a3_Map> _11757_m = _1bc4ba73d_Map((*((*(_self_))._field_d))._field_Type.ptr());;
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_11757_m))._field_Val});
	jule::Ptr<_1bc48354c_Data> _11797_d = jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc));;
	(*_11797_d.alloc)._field_Type=(*_11757_m.alloc)._field_Val;
	_1bc47d79a_checkRangeExprValidity(_self_, &(_11797_d), &((*(*(_self_))._field_Kind.alloc)._field_KeyB), &((*_11757_m.alloc)._field_Val));
}



inline void _1bc47e290_checkMap(_1bc47cb62_rangeChecker* _self_) {
	_1bc47dd94_checkMapKeyA(_self_);
	_1bc47e092_checkMapKeyB(_self_);
}



inline void _1bc47e48d_checkStr(_1bc47cb62_rangeChecker* _self_) {
	_1bc47d37c_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
	(*((*(*(_self_))._field_Kind.alloc)._field_KeyB))._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("u8", 2)))))._field_TypeSym;
}



inline void _1bc47e68b_checkComptime(_1bc47cb62_rangeChecker* _self_) {
	_1bc47d37c_setSizeKey(_self_);
	if ((((*((*(_self_))._field_rang))._field_KeyA != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Mutable)) {
		_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyA.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB != nullptr) && (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Mutable)) {
		_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ cannot be mutable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*((*(_self_))._field_rang))._field_KeyB.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	if ((((*((*(_self_))._field_rang))._field_KeyB == nullptr) || _1bc2498eb_IsIgnoreIdent((*((*(*(_self_))._field_rang.alloc)._field_KeyB))._field_Ident))) {
		return;;
	};
	(*((*(_self_))._field_Kind))._field_KeyB=_1bc47d17e_buildVar(_self_, &((*((*(_self_))._field_rang))._field_KeyB));
}



inline jule::Bool _1bc47e922_checkComptimeRange(_1bc47cb62_rangeChecker* _self_) {
	jule::Ptr<_1bc37e437_comptimeRange> _12147_range = _1bc4bc047_comptimeRange((*((*(_self_))._field_d))._field_Type.ptr());;
	{
		auto &_match_expr{ (*(_12147_range))._field_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data0) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data2) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data3) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data4) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data1) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data5) || _match_expr.type_is(true, (const jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data6)) {
			_case_begin_1c32e550c:;
			{
				_1bc47e68b_checkComptime(_self_);
				return true;;
			}
		}
		else {
			_case_begin_1c35e3189:;
			{
				_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c35e3123:;
	};
}



inline jule::Bool _1bc47eba8_check(_1bc47cb62_rangeChecker* _self_) {
	{
		
		if ((*((*((*(_self_))._field_d))._field_Type))._field_Variadic) {
			_case_begin_1c3726399:;
		}
		else if ((_1bc4b9c04_Slc((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3726751:;
			{
				_1bc47d998_checkSlice(_self_);
				return true;;
			}
		}
		else if ((_1bc4b996d_Arr((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1c3726410:;
			{
				_1bc47db96_checkArray(_self_);
				return true;;
			}
		}
		else if ((_1bc4ba73d_Map((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1c3726476:;
			{
				_1bc47e290_checkMap(_self_);
				return true;;
			}
		}
		else if ((_1bc4bc047_comptimeRange((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1c37264dc:;
			{
				return _1bc47e922_checkComptimeRange(_self_);;
			}
		}
		else {
			_case_begin_1c32e6c5b:;
			{
				jule::Ptr<_1bc4be610_Prim> _12474_prim = _1bc4b8b9d_Prim((*((*(_self_))._field_d))._field_Type);;
				if (((_12474_prim != nullptr) && _1bc4c2aca_IsStr(_12474_prim))) {
					_1bc47e48d_checkStr(_self_);
					return true;;
				};
			}
		}
		_match_end_1c32e6b4b:;
	};
	_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*((*(_self_))._field_rang))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range iterations must be have enumerable expression", 51)), jule::Slice<jule::Any>());
	return false;;
}







inline void _1bc480912_prepareTypes(_1bc4804a0_retTypeChecker* _self_) {
	if (((*(_self_))._field_f != nullptr)) {
		(*(_self_))._field_types=_1bc303345_Types((*(_self_))._field_f);
	};
}



inline void _1bc480bba_prepareExprs(_1bc4804a0_retTypeChecker* _self_, jule::Ptr<_1bc261c43_Expr>* _127633_e) {
	if (((*(_127633_e)) == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_127633_e))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c35e4c4b:;
			{
				(*(_self_))._field_exprs=(*((*((*(_127633_e))))._field_Kind.unsafe_cast_ptr<_1bc262837_TupleExpr>()))._field_Expr;
			}
		}
		else {
			_case_begin_1c35e45ca:;
			{
				{ jule::Slice<jule::Ptr<_1bc261c43_Expr>> &__jule_push_dest = (*(_self_))._field_exprs; __jule_push_dest.push((*(_127633_e))); };
			}
		}
		_match_end_1c35e4146:;
	};
}



inline void _1bc480db8_checkExprs(_1bc4804a0_retTypeChecker* _self_) {
	if (((*(_self_))._field_exprs.len() == 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bc48354c_Data>> _12927_datas = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(0LL, (*(_self_))._field_exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc48354c_Data>(nullptr); __jule_collection; });;
	jule::Ptr<_1bc48551b_eval> _12937_eval = _1bc414cc5_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	(*(_12937_eval))._field_target._field_mutable=(*(_self_))._field_mutable;
	{
		auto expr = &((*(_self_))._field_exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35e78a8:;
		if (it != expr_end) {
			jule::I32 _12958_i = it - expr->begin();
			jule::Ptr<_1bc261c43_Expr> _129515_expr = *it;
			{
				if ((_12958_i >= (*(_self_))._field_types.len())) {
					goto _iter_end_1c35e78a8;
				};
				jule::Ptr<_1bc4b64e7_Type> _13008_t = (*(_self_))._field_types[_12958_i];;
				(*_12937_eval.alloc)._field_prefix=_13008_t;
				jule::Ptr<_1bc48354c_Data> _13038_d = _1bc4a4309_evalExpr(_12937_eval, _129515_expr);;
				if ((_13038_d == nullptr)) {
					goto _iter_next_1c35e78a8;
				};
				{ jule::Slice<jule::Ptr<_1bc48354c_Data>> &__jule_push_dest = _12927_datas; __jule_push_dest.push(_13038_d); };
				if ((((*(_self_))._field_mutable && (!((*(_13038_d))._field_Mutable))) && _1bc4b7dcd_Mutable((*_13038_d.alloc)._field_Type.ptr()))) {
					_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("mutable typed return expressions should be mutable", 50)), jule::Slice<jule::Any>());
					return;;
				};
				_1bc471716_assignTypeChecker _13158_ac = _1bc471716_assignTypeChecker{._field_s=(*(*(_self_))._field_sc.alloc)._field_s, ._field_dest=_13008_t, ._field_d=_13038_d, ._field_errorToken=(*(_self_))._field_errorToken, ._field_refers=(*((*(_1bc3b7b02_getHardRoot((*(_self_))._field_sc)))._field_owner))._field_Refers};;
				_1bc472717_check(&_13158_ac);
			}
			_iter_next_1c35e78a8:;
			++it;
			_12958_i++;
			goto _iter_begin_1c35e78a8;
		}
		_iter_end_1c35e78a8:;
	};
	if ((_12927_datas.len() > 1LL)) {
		(*(_self_))._field_model=jule::Any(jule::new_ptr<_1bc2e737d_TupleExprModel>(_1bc2e737d_TupleExprModel{._field_Datas=_12927_datas}), &__jule_any_type84);
	} else if ((_12927_datas.len() == 1LL)) {
		(*(_self_))._field_model=(*(_12927_datas[0LL]))._field_Model;
	};
}



inline jule::Bool _1bc48114e_tryFuncMultiRetForward(_1bc4804a0_retTypeChecker* _self_) {
	jule::Ptr<_1bc48551b_eval> _13377_eval = _1bc414cc5_eval((*((*(_self_))._field_sc))._field_s, jule::Trait((*(_self_))._field_sc, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
	jule::Ptr<_1bc48354c_Data> _13387_d = _1bc4a4309_evalExpr(_13377_eval, (*(_self_))._field_exprs[0LL]);;
	if ((_13387_d == nullptr)) {
		return true;;
	};
	jule::Ptr<_1bc4c4703_Tuple> _13447_tup = _1bc4ba9c4_Tup((*(_13387_d))._field_Type.ptr());;
	if ((_13447_tup == nullptr)) {
		return false;;
	};
	if (((*(_13447_tup))._field_Types.len() != (*(_self_))._field_types.len())) {
		goto _julec_label_1c3434bce;
	};
	(*(_self_))._field_model=(*_13387_d.alloc)._field_Model;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3432c76:;
		if (it != expr_end) {
			jule::I32 _13527_i = it - expr->begin();
			{
				jule::Ptr<_1bc4b64e7_Type> _13538_t1 = (*(_self_))._field_types[_13527_i];;
				jule::Ptr<_1bc4b64e7_Type> _13548_t2 = (*(_13447_tup))._field_Types[_13527_i];;
				if ((!(_1bc415897__checkTypeCompatibility((*((*(_self_))._field_sc))._field_s, &(_13538_t1), &(_13548_t2), (*(_self_))._field_errorToken)))) {
					goto _julec_label_1c3434bce;
				};
			}
			_iter_next_1c3432c76:;
			++it;
			_13527_i++;
			goto _iter_begin_1c3432c76;
		}
		_iter_end_1c3432c76:;
	};
	return true;;
	_julec_label_1c3434bce:;
	_1a95669ea_Builder _13617_wanted = static__1a9567369_New(32LL);;
	{
		auto expr = &((*(_self_))._field_types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c34352d9:;
		if (it != expr_end) {
			jule::I32 _13627_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> _136210_t = *it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_13617_wanted, _1bc4b68e3_Str(_136210_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1363:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13627_i) > 1LL)) {
					({
						auto except = _1a95679eb_WriteStr(&_13617_wanted, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1365:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c34352d9:;
			++it;
			_13627_i++;
			goto _iter_begin_1c34352d9;
		}
		_iter_end_1c34352d9:;
	};
	_1a95669ea_Builder _13687_given = static__1a9567369_New(32LL);;
	{
		auto expr = &((*(_13447_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3437022:;
		if (it != expr_end) {
			jule::I32 _13697_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> _136910_t = *it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_13687_given, _1bc4b68e3_Str(_136910_t.ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1370:4"));
					(except.result);
				});
				if ((((*(_self_))._field_types.len() - _13697_i) > 1LL)) {
					({
						auto except = _1a95679eb_WriteStr(&_13687_given, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type2.jule:1372:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c3437022:;
			++it;
			_13697_i++;
			goto _iter_begin_1c3437022;
		}
		_iter_end_1c3437022:;
	};
	_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("function return forwaring is wrong\n       want (@)\n       have (@)", 66)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1a956837b_Str(&_13617_wanted), &__jule_any_type5); (*it++) = jule::Any(_1a956837b_Str(&_13687_given), &__jule_any_type5); __jule_collection; }));
	return false;;
}



inline jule::Bool _1bc481490_check(_1bc4804a0_retTypeChecker* _self_, jule::Ptr<_1bc261c43_Expr>* _137926_e) {
	_1bc480912_prepareTypes(_self_);
	_1bc480bba_prepareExprs(_self_, _137926_e);
	{
		
		if ((((*(_self_))._field_exprs.len() == 0LL) && ((*(_self_))._field_types.len() > 0LL))) {
			_case_begin_1c343a3ee:;
			{
				if ((!(_1bc3002cb_AnyVar((*((*(_self_))._field_f))._field_Decl.ptr())))) {
					_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("return statements of non-void functions should have return expression", 69)), jule::Slice<jule::Any>());
					return false;;
				};
				return true;;
			}
		}
		else if (((((*(_self_))._field_exprs.len() > 0LL) && ((*(_self_))._field_f != nullptr)) && _1bc2ee50b_IsVoid((*(*(_self_))._field_f.alloc)._field_Decl.ptr()))) {
			_case_begin_1c343a465:;
			{
				_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s.ptr(), (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("void functions is cannot returns any value", 42)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if ((((*(_self_))._field_exprs.len() == 1LL) && ((*(_self_))._field_types.len() > 1LL))) {
			_case_begin_1c343a4cb:;
			{
				{
					auto &_match_expr{ (*((*(_self_))._field_exprs[0LL]))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type85) {
						_case_begin_1c343ee4d:;
						{
							if (_1bc48114e_tryFuncMultiRetForward(_self_)) {
								return true;;
							};
						}
					}
					_match_end_1c343ed93:;
				};
				_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		else if (((*(_self_))._field_exprs.len() < (*(_self_))._field_types.len())) {
			_case_begin_1c343a542:;
			{
				_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("missing return expressions for multi-return", 43)), jule::Slice<jule::Any>());
			}
		}
		else if (((*(_self_))._field_exprs.len() > (*(_self_))._field_types.len())) {
			_case_begin_1c343a5a8:;
			{
				_1bc40ce00_pushErr((*((*(_self_))._field_sc))._field_s, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("overflow return expressions", 27)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c343a29a:;
	};
	_1bc480db8_checkExprs(_self_);
	return true;;
}








inline jule::Bool _1bc48354c_Data_eq(_1bc48354c_Data *_self_, _1bc48354c_Data _other_) {
	return 
		(_self_->_field_untyped == _other_._field_untyped) &&
		(_self_->_field_Type == _self_->_field_Type) &&
		(_self_->_field_Mutable == _self_->_field_Mutable) &&
		(_self_->_field_Reference == _self_->_field_Reference) &&
		(_self_->_field_Lvalue == _self_->_field_Lvalue) &&
		(_self_->_field_IsRune == _self_->_field_IsRune) &&
		(_self_->_field_Model == _self_->_field_Model) &&
		(_self_->_field_Decl == _self_->_field_Decl) &&
		(_self_->_field_Constant == _self_->_field_Constant);
}

inline jule::Bool _1bc48396a_IsNil(_1bc48354c_Data* _self_) {
	return _1bc4b762a_IsNil((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1bc483c01_IsVoid(_1bc48354c_Data* _self_) {
	return _1bc4b78b1_Void((*(_self_))._field_Type.ptr());;
}



inline jule::Bool _1bc483e87_IsConst(_1bc48354c_Data* _self_) {
	return ((*(_self_))._field_Constant != nullptr);;
}



inline jule::Bool _1bc4842c8_GoodOperand(_1bc48354c_Data* _self_, jule::Ptr<_1bc48354c_Data>* _6228_other) {
	if ((_1bc4b96d7_TypeEnum((*((*(_6228_other))))._field_Type.ptr()) != nullptr)) {
		return false;;
	};
	return ((((_1bc4b8b9d_Prim((*((*(_6228_other))))._field_Type.ptr()) == nullptr) || (!(_1bc4c2d61_IsAny(_1bc4b8b9d_Prim((*((*(_6228_other))))._field_Type).ptr())))) && (_1bc4ba4a7_Trait((*((*(_6228_other))))._field_Type) == nullptr)) && (!(_1bc4b762a_IsNil((*(_self_))._field_Type))));;
}








inline jule::Bool _1bc4846c4_Value_eq(_1bc4846c4_Value *_self_, _1bc4846c4_Value _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Data == _self_->_field_Data);
}






inline jule::Bool _1bc484a9d_target_eq(_1bc484a9d_target *_self_, _1bc484a9d_target _other_) {
	return 
		(_self_->_field_ignored == _other_._field_ignored) &&
		(_self_->_field_mutable == _self_->_field_mutable);
}






inline jule::Bool _1bc48551b_eval_eq(_1bc48551b_eval *_self_, _1bc48551b_eval _other_) {
	return 
		(_self_->_field_s == _other_._field_s) &&
		(_self_->_field_lookup == _self_->_field_lookup) &&
		(_self_->_field_prefix == _self_->_field_prefix) &&
		(_self_->_field_unsafety == _self_->_field_unsafety) &&
		(_self_->_field_disBuiltin == _self_->_field_disBuiltin) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_field == _self_->_field_field) &&
		_1bc484a9d_target_eq(&_self_->_field_target, _self_->_field_target);
}

inline void _1bc4859e4_pushErr(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _9723_token, jule::Str _9745_fmt, jule::Slice<jule::Any> _9765_args) {
	_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _9723_token, _9745_fmt, _9765_args);
}



inline void _1bc485d57_pushSuggestion(_1bc48551b_eval* _self_, jule::Str _10230_fmt, jule::Slice<jule::Any> _10250_args) {
	_1bc40d263_pushSuggestion((*(_self_))._field_s.ptr(), _10230_fmt, _10250_args);
}



inline void _1bc486055_allowBuiltin(_1bc48551b_eval* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1bc486253_disallowBuiltin(_1bc48551b_eval* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline jule::Bool _1bc4864d9_isUnsafe(_1bc48551b_eval* _self_) {
	return (*(_self_))._field_unsafety;;
}



inline jule::Bool _1bc486770_isGlobal(_1bc48551b_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4)) {
			_case_begin_1c38331ba:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c38335c7:;
			{
				return false;;
			}
		}
		_match_end_1c3833561:;
	};
}



inline jule::Bool _1bc486ab1_applyNumericPrefix(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _12939_d) {
	if ((((((*(_12939_d)) == nullptr) || (!(_1bc483e87_IsConst((*(_12939_d)).ptr())))) || (_1bc4b8b9d_Prim((*((*(_12939_d))))._field_Type.ptr()) == nullptr)) || ((*(_self_))._field_prefix == nullptr))) {
		return false;;
	};
	jule::Ptr<_1bc4be610_Prim> _1363_prim = _1bc4b8b9d_Prim((*(_self_))._field_prefix.ptr());;
	if ((_1363_prim == nullptr)) {
		return false;;
	};
	{
		
		if (_1bc37cc2c_IsFloat(_1bc4be984_Str(_1363_prim.ptr()))) {
			_case_begin_1c3835c5b:;
			{
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>((*(*(_self_))._field_prefix.alloc));
				_1bac28a91_SetF64((*((*(_12939_d))))._field_Constant.ptr(), _1bac27c16_AsF64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_1bc37c314_IsSigInt(_1bc4be984_Str(_1363_prim.ptr()))) {
			_case_begin_1c3835cc2:;
			{
				if ((!(_1bc46db64_sigAssignable(_1bc4be984_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>((*(*(_self_))._field_prefix.alloc));
				_1bac27ebe_SetI64((*((*(_12939_d))))._field_Constant.ptr(), _1bac276e9_AsI64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		else if (_1bc37c622_IsUnsigInt(_1bc4be984_Str(_1363_prim))) {
			_case_begin_1c3835d38:;
			{
				if ((!(_1bc46e02c_unsigAssignable(_1bc4be984_Str(_1363_prim), _12939_d)))) {
					return false;;
				};
				(*((*(_12939_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>((*(*(_self_))._field_prefix.alloc));
				_1bac28277_SetU64((*((*(_12939_d))))._field_Constant.ptr(), _1bac27980_AsU64((*((*(_12939_d))))._field_Constant));
				(*(*((*(_12939_d))))._field_Constant.alloc)._field_Kind=(*_1363_prim.alloc)._field_Kind;
			}
		}
		_match_end_1c3835b6d:;
	};
	return true;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc486e02_litStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _16419_l) {
	jule::Str _1657_s = jule::Str();;
	if (_1bc248400_IsRawStr((*((*(_16419_l))))._field_Value)) {
		_1657_s=_1bc46bed6_ToRawStr((*((*(_16419_l))))._field_Value);
	} else {
		_1657_s=_1bc46c327_ToStr((*((*(_16419_l))))._field_Value);
	};
	jule::Ptr<_1bac25065_Const> _1717_constant = static__1bac25ce1_NewStr(_1657_s);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc5398ab_primStr, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_1717_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_1717_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc487243_litRune(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _18120_l) {
	jule::I32 _1823_r = _1bc451a48_ToRune((*((*(_18120_l))))._field_Value);;
	jule::Ptr<_1bc48354c_Data> _1837_data = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_1823_r))});;
	if ((_1823_r <= 255LL)) {
		(*(_1837_data))._field_Type=_1bc53b391_primU8;
	} else {
		(*(_1837_data))._field_Type=_1bc53ad30_primI32;
	};
	(*(_1837_data))._field_Model=jule::Any(jule::new_ptr<_1bc2ea9be_RuneExprModel>(_1bc2ea9be_RuneExprModel{._field_Code=_1823_r}), &__jule_any_type86);
	(*_1837_data.alloc)._field_Mutable=true;
	(*_1837_data.alloc)._field_IsRune=true;
	(*_1837_data.alloc)._field_untyped=true;
	return _1837_data;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc487584_litFloat(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _20021_l) {
	jule::F64 _2013_f = ({
		auto except = _1ac586d25_ParseFloat((*((*(_20021_l))))._field_Value, 64LL);
		(except.ok()) ? (except.result) : ({

			jule::MAX_F64;
		});
	});;
	jule::Ptr<_1bac25065_Const> _2027_constant = static__1bac260aa_NewF64(_2013_f);;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c33c_primF64, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_2027_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_2027_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4878c5_litInt(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _21223_l) {
	;
	jule::Str _2157_lit = (*((*(_21223_l))))._field_Value;;
	jule::I32 _2167_base = 0LL;;
	{
		
		if (_1abb2d9c7_HasPrefix(_2157_lit, jule::Str::lit("0x", 2))) {
			_case_begin_1c38412a5:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=16LLU;
			}
		}
		else if (_1abb2d9c7_HasPrefix(_2157_lit, jule::Str::lit("0b", 2))) {
			_case_begin_1c3841393:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=2LLU;
			}
		}
		else if (_1abb2d9c7_HasPrefix(_2157_lit, jule::Str::lit("0o", 2))) {
			_case_begin_1c3840e53:;
			{
				(_2157_lit).mut_slice(2LL);;
				_2167_base=8LLU;
			}
		}
		else if (((_2157_lit[0LL] == '0') && (_2157_lit.len() > 1LL))) {
			_case_begin_1c3840eb9:;
			{
				(_2157_lit).mut_slice(1LL);;
				_2167_base=8LLU;
			}
		}
		else {
			_case_begin_1c3840ddc:;
			{
				_2167_base=10LLU;
			}
		}
		_match_end_1c3840d65:;
	};
	jule::Ptr<_1bc48354c_Data> _2367_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	jule::Bool _2387_ok = true;;
	jule::I64 _2393_sig = ({
		auto except = _1ac58066a_ParseInt(_2157_lit, _2167_base, 64LL);
		(except.ok()) ? (except.result) : ({
			_2387_ok=false;

			0LL;
		});
	});;
	if (_2387_ok) {
		(*_2367_d.alloc)._field_Constant=static__1bac25494_NewI64(_2393_sig);
		(*_2367_d.alloc)._field_Type=_1bc53a58d_primInt;
	} else {
		jule::U64 _2474_unsig = ({
			auto except = _1ac5801b4_ParseUint(_2157_lit, _2167_base, 64LL);
			(except.ok()) ? (except.result) : ({
				_1bc4859e4_pushErr(_self_, (*((*(_21223_l))))._field_Token, static_cast<jule::Str>(jule::Str::lit("arithmetic value overflow: this value too big", 45)), jule::Slice<jule::Any>());
				_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("floating-point literals may solve your problem", 46)), jule::Slice<jule::Any>());

				jule::MAX_U64;
			});
		});;
		(*_2367_d.alloc)._field_Constant=static__1bac2575d_NewU64(_2474_unsig);
		(*_2367_d.alloc)._field_Type=_1bc53a1c5_primUint;
	};
	(*_2367_d.alloc)._field_Model=jule::Any((*_2367_d.alloc)._field_Constant, &__jule_any_type15);
	(*_2367_d.alloc)._field_untyped=true;
	if ((!(_1bc486ab1_applyNumericPrefix(_self_, &(_2367_d))))) {
		_1bc4ad368_fitBitsize(&(_2367_d));
	};
	return _2367_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc487c16_litNum(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr>* _26723_l) {
	{
		
		if (_1bc24909e_IsFloat((*((*(_26723_l))))._field_Value)) {
			_case_begin_1c14c0c7d:;
			{
				return _1bc487584_litFloat(_self_, _26723_l);;
			}
		}
		else {
			_case_begin_1c14c0c17:;
			{
				return _1bc4878c5_litInt(_self_, _26723_l);;
			}
		}
		_match_end_1c14c0b07:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc488057_evalLit(_1bc48551b_eval* _self_, jule::Ptr<_1bc262bcd_LitExpr> _27623_lit) {
	{
		
		if (_1bc248169_IsStr((*(_27623_lit))._field_Value)) {
			_case_begin_1c14c1e9e:;
			{
				return _1bc486e02_litStr(_self_, &(_27623_lit));;
			}
		}
		else if (_1bc2486b9_IsRune((*(_27623_lit))._field_Value)) {
			_case_begin_1c14c2015:;
			{
				return _1bc487243_litRune(_self_, &(_27623_lit));;
			}
		}
		else if (_1bc249368_IsNum((*_27623_lit.alloc)._field_Value)) {
			_case_begin_1c14c207b:;
			{
				return _1bc487c16_litNum(_self_, &(_27623_lit));;
			}
		}
		else {
			_case_begin_1c14c1894:;
			{
				return nullptr;;
			}
		}
		_match_end_1c14c1784:;
	};
}



inline jule::Any _1bc488398_findBuiltins(_1bc48551b_eval* _self_, jule::Str* _28929_ident) {
	if (_1bc4071e6_IsPub((*(_28929_ident)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data2)) {
				_case_begin_1c36057c8:;
				{
					jule::Any _2939_def = _1bc4ad137_findBuiltinsImport(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_1bc3dcb9e_ImportInfo>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data2));;
					if ((_2939_def != nullptr)) {
						return _2939_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4)) {
				_case_begin_1c3605520:;
				{
					jule::Any _2989_def = _1bc4add91_findBuiltinsSema(_28929_ident, (*(_self_))._field_lookup.cast_ptr<_1bc409eeb_sema>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));;
					if ((_2989_def != nullptr)) {
						return _2989_def;;
					};
				}
			}
			else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
				_case_begin_1c360583e:;
				{
					jule::Any _3039_def = _1bc4add91_findBuiltinsSema(_28929_ident, (*((*(_self_))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)))._field_s);;
					if ((_3039_def != nullptr)) {
						return _3039_def;;
					};
				}
			}
			_match_end_1c360571d:;
		};
		return nullptr;;
	};
	if ((*(_self_))._field_disBuiltin) {
		return nullptr;;
	};
	return _1bc53cb78_findBuiltinDef(_28929_ident);;
}



inline jule::Any _1bc488794_getDef(_1bc48551b_eval* _self_, jule::Str* _31623_ident, jule::Bool _31635_binded) {
	jule::Ptr<_1bc42dc12_Var> _3217_v = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d4a32_FindVar((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3217_v != nullptr)) {
		return jule::Any(_3217_v, &__jule_any_type7);;
	};
	jule::Ptr<_1bc4b5705_TypeAlias> _3267_ta = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d4e2d_FindTypeAlias((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3267_ta != nullptr)) {
		return jule::Any(_3267_ta, &__jule_any_type8);;
	};
	if ((!(_31635_binded))) {
		jule::Ptr<_1bc30be20_Enum> _3328_enm = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d5da7_FindEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3328_enm != nullptr)) {
			return jule::Any(_3328_enm, &__jule_any_type12);;
		};
		jule::Ptr<_1bc30d62a_TypeEnum> _3378_tenm = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d61e8_FindTypeEnum((*(_self_))._field_lookup.data, (*(_31623_ident)));;
		if ((_3378_tenm != nullptr)) {
			return jule::Any(_3378_tenm, &__jule_any_type13);;
		};
	};
	jule::Ptr<_1bc2ee055_Fn> _3437_f = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d5725_FindFn((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3437_f != nullptr)) {
		return jule::Any(_3437_f, &__jule_any_type10);;
	};
	jule::Ptr<_1bc27d26a_Struct> _3487_s = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d5329_FindStruct((*(_self_))._field_lookup.data, (*(_31623_ident)), _31635_binded);;
	if ((_3487_s != nullptr)) {
		return jule::Any(_3487_s, &__jule_any_type9);;
	};
	return _1bc488398_findBuiltins(_self_, _31623_ident);;
}



inline jule::Ptr<_1bc3cab26_ReferenceStack> _1bc488a2a_getOwnerRefers(_1bc48551b_eval* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
			_case_begin_1c14c86ae:;
			{
				return _1bc3b7d88_getOwnerRefers((*(_self_))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
			}
		}
		else {
			_case_begin_1c14c7009:;
			{
				if ((((*(_self_))._field_owner != nullptr) && ((*(*(_self_))._field_owner.alloc)._field_Scope == nullptr))) {
					return (*(*(_self_))._field_owner.alloc)._field_Refers;;
				};
				if (((*(_self_))._field_field != nullptr)) {
					return (*((*(*(_self_))._field_field.alloc)._field_Owner))._field_Refers;;
				};
			}
		}
		_match_end_1c14c6e93:;
	};
	return nullptr;;
}



inline void _1c14d8c96_pushReference(_1bc48551b_eval* _self_, jule::Ptr<_1bc2810c5_StructIns>* _37437_ref) {
	jule::Ptr<_1bc3cab26_ReferenceStack> _3757_refers = _1bc488a2a_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1c14db11c_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1bc3cb97e_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type64));
	};
}

inline void _1c14e4c91_pushReference(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns>* _37437_ref) {
	jule::Ptr<_1bc3cab26_ReferenceStack> _3757_refers = _1bc488a2a_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1c14e7348_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1bc3cb97e_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type65));
	};
}

inline void _1c1505cc4_pushReference(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _37437_ref) {
	jule::Ptr<_1bc3cab26_ReferenceStack> _3757_refers = _1bc488a2a_getOwnerRefers(_self_);;
	if (((_3757_refers != nullptr) && (!(_1c398a355_Exist(_3757_refers, (*(_37437_ref))))))) {
		_1bc3cb97e_Push(_3757_refers, jule::Any((*(_37437_ref)), &__jule_any_type7));
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc489124__evalEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30be20_Enum> _38125_enm) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_38125_enm, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc489520_evalEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30be20_Enum> _39028_enm, jule::Ptr<_1bc247014_Token> _39040_errorToken) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_39028_enm))._field_Public, (*_39028_enm.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, _39040_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39028_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bc489124__evalEnum(_self_, _39028_enm);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc489861__evalTypeEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30d62a_TypeEnum> _39929_enm) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_39929_enm, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc489c5c_evalTypeEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc30d62a_TypeEnum> _40832_enm, jule::Ptr<_1bc247014_Token> _40848_errorToken) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_40832_enm))._field_Public, (*_40832_enm.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, _40848_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_40832_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bc489861__evalTypeEnum(_self_, _40832_enm);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48a09d__evalStruct(_1bc48551b_eval* _self_, jule::Ptr<_1bc2810c5_StructIns> _41727_s) {
	jule::Ptr<_1bc48354c_Data> _4187_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_41727_s, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_41727_s, &__jule_any_type64), ._field_Decl=true, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	if ((((*(_41727_s))._field_Decl != nullptr) && (*(*(_41727_s))._field_Decl.alloc)._field_Binded)) {
		(*((*(_4187_d))._field_Type))._field_BindIdent=(*(*(_41727_s))._field_Decl.alloc)._field_Ident;
	};
	return _4187_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48a499_evalStruct(_1bc48551b_eval* _self_, jule::Ptr<_1bc27d26a_Struct> _43130_s, jule::Ptr<_1bc247014_Token> _43146_errorToken) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_43130_s))._field_Public, (*_43130_s.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, _43146_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_43130_s.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc48ab4d_checkDeprecated(_self_, &((*(_43130_s))._field_Directives), _43146_errorToken);
	jule::Ptr<_1bc2810c5_StructIns> _4407_ins = _1bc27d710_instance(_43130_s);;
	if (((*_43130_s.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1bc2810c5_StructIns> _4478_exist = _1bc27da1d_appendInstance(_43130_s, &(_4407_ins));;
		if ((_4478_exist != nullptr)) {
			_4407_ins=_4478_exist;
		} else {
			if ((!(_1bc426a62_precheckStructIns((*(_self_))._field_s, &(_4407_ins), _43146_errorToken)))) {
				return nullptr;;
			};
		};
	};
	_1c14d8c96_pushReference(_self_, &(_4407_ins));
	return _1bc48a09d__evalStruct(_self_, _4407_ins);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48a7da_evalFnIns(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns> _46125_f) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_46125_f, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_46125_f, &__jule_any_type65), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline void _1bc48ab4d_checkDeprecated(_1bc48551b_eval* _self_, jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _47036_directives, jule::Ptr<_1bc247014_Token> _47067_tok) {
	if (_1bc4864d9_isUnsafe(_self_)) {
		return;;
	};
	jule::Ptr<_1bc25bd2b_Directive> _4753_d = _1bc4acc6e_findDirective(_47036_directives, static_cast<jule::Str>(jule::Str::lit("deprecated", 10)));;
	if ((_4753_d != nullptr)) {
		if (((*_4753_d.alloc)._field_Args.len() == 0LL)) {
			_1bc4859e4_pushErr(_self_, _47067_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("this code is deprecated", 23), &__jule_any_type5); __jule_collection; }));
		} else {
			_1bc4859e4_pushErr(_self_, _47067_tok, static_cast<jule::Str>(jule::Str::lit("deprecated usage: @", 19)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_4753_d.alloc)._field_Args[0LL]))._field_Kind, &__jule_any_type5); __jule_collection; }));
		};
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule for deprecated codes or replace to successor", 60)), jule::Slice<jule::Any>());
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc48b049_evalFn(_1bc48551b_eval* _self_, jule::Ptr<_1bc2ee055_Fn> _48626_f, jule::Ptr<_1bc247014_Token> _48634_errorToken) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_48626_f))._field_Public, (*_48626_f.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, _48634_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_48626_f.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc48ab4d_checkDeprecated(_self_, &((*(_48626_f))._field_Directives), _48634_errorToken);
	jule::Ptr<_1bc302113_FnIns> _4957_ins = _1bc3007e8_instance(_48626_f);;
	if (((*_48626_f.alloc)._field_Generics.len() == 0LL)) {
		jule::Ptr<_1bc302113_FnIns> _5028_exist = _1bc300b06_appendInstance(_48626_f, &(_4957_ins));;
		if ((_5028_exist != nullptr)) {
			_4957_ins=_5028_exist;
		};
	};
	_1c14e4c91_pushReference(_self_, &(_4957_ins));
	return _1bc48a7da_evalFnIns(_self_, _4957_ins);;
}



inline void _1bc48b467_pushIllegalCycleError(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _51138_v1, jule::Ptr<_1bc42dc12_Var>* _51149_v2, _1a95669ea_Builder* _51164_message) {
	;
	jule::Str _5133_refersTo = _1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_51138_v1))))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_51149_v2))))._field_Ident, &__jule_any_type5); __jule_collection; }));;
	jule::Slice<jule::U8> _5143_buf = _1a9568d2c_Buf(_51164_message);;
	({
		auto except = _1a95679eb_WriteStr(_51164_message, _1abb2d60e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:515:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_51164_message, _5133_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:516:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_51164_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:517:3"));
	});
	({
		auto except = _1a95676aa_Write(_51164_message, _5143_buf);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/eval.jule:518:3"));
		(except.result);
	});
}



inline jule::Bool _1bc48b863_checkCrossCycle(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _52132_v, _1a95669ea_Builder* _52146_message) {
	{
		auto expr = &((*((*(_52132_v))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3325251:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> *_52210_d = it;
			{
				if (((*(_52210_d)) == (*(_self_))._field_owner)) {
					_1bc48b467_pushIllegalCycleError(_self_, _52132_v, _52210_d, _52146_message);
					return false;;
				};
				if ((!(_1bc48b863_checkCrossCycle(_self_, _52210_d, _52146_message)))) {
					_1bc48b467_pushIllegalCycleError(_self_, _52132_v, _52210_d, _52146_message);
					return false;;
				};
			}
			_iter_next_1c3325251:;
			++it;
			goto _iter_begin_1c3325251;
		}
		_iter_end_1c3325251:;
	};
	return true;;
}



inline jule::Bool _1bc48bc5e_checkIllegalCycles(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var>* _53839_v, jule::Ptr<_1bc247014_Token> _53848_declToken) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_owner == nullptr) || ((*((*(_self_))._field_owner))._field_Scope != nullptr))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if (((*(_self_))._field_owner == (*(_53839_v)))) {
		_1bc4859e4_pushErr(_self_, (*((*(_self_))._field_owner))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_owner.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a95669ea_Builder _5517_message = static__1a9567369_New(32LL);;
	if ((!(_1bc48b863_checkCrossCycle(_self_, _53839_v, &(_5517_message))))) {
		jule::Str _5548_errMsg = _1a956837b_Str(&_5517_message);;
		_1a9568579_Clear(&_5517_message);
		_1bc48b467_pushIllegalCycleError(_self_, &((*(_self_))._field_owner), _53839_v, &(_5517_message));
		_5548_errMsg+=_1a956837b_Str(&_5517_message);
		_1bc4859e4_pushErr(_self_, _53848_declToken, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_5548_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	(*((*(_self_))._field_owner))._field_Depends=jule::append((*(*(_self_))._field_owner.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_53839_v)); __jule_collection; }));
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48c15a_evalVar(_1bc48551b_eval* _self_, jule::Ptr<_1bc42dc12_Var> _56627_v, jule::Ptr<_1bc247014_Token> _56636_errorToken) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_56627_v))._field_Public, (*_56627_v.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, _56636_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56627_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc48ab4d_checkDeprecated(_self_, &((*(_56627_v))._field_Directives), _56636_errorToken);
	if (((*_56627_v.alloc)._field_Token == nullptr)) {
		goto _julec_label_1c398c3e0;
	};
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4)) {
			_case_begin_1c14ee6b3:;
			{
				jule::Bool _5834_ok = _1bc48bc5e_checkIllegalCycles(_self_, &(_56627_v), _56636_errorToken);;
				if ((!(_5834_ok))) {
					return nullptr;;
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
			_case_begin_1c14ee086:;
			{
				jule::Ptr<_1bc3b448e_scopeChecker> _5888_s = (*(_self_))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1);;
				jule::Ptr<_1bc3b448e_scopeChecker> _5898_root = _1bc3b786b_getRoot(_5888_s);;
				if ((((((*_56627_v.alloc)._field_Scope != nullptr) && (!((*_56627_v.alloc)._field_Constant))) && ((*(_5898_root))._field_captured != nullptr)) && _1bc4b3a99_isVarCaptured(_5898_root, _5888_s, _56627_v))) {
					_1bc3b75d5_pushCaptured(_5898_root, &(_56627_v));
				};
				if (((!((*_56627_v.alloc)._field_Reference)) || _1bc4864d9_isUnsafe(_self_))) {
					goto _match_end_1c14ee4c6;
				};
				while ((((*_5888_s.alloc)._field_owner == nullptr) && ((*_5888_s.alloc)._field_parent != nullptr))) {
					{
						_5888_s=(*_5888_s.alloc)._field_parent;
					}
				_iter_next_1c1503387:;
				}
				_iter_end_1c1503387:;;
				if (((((*_5888_s.alloc)._field_owner != nullptr) && (*(*(_5888_s))._field_owner.alloc)._field_Anon) && ((*_56627_v.alloc)._field_Scope != (*(*(_5888_s))._field_owner.alloc)._field_Scope))) {
					_1bc4859e4_pushErr(_self_, _56636_errorToken, static_cast<jule::Str>(jule::Str::lit("anonymous functions cannot access to reference definition @ of parent scope", 75)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_56627_v.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
			}
		}
		_match_end_1c14ee4c6:;
	};
	if (((*_56627_v.alloc)._field_Scope == nullptr)) {
		_1c1505cc4_pushReference(_self_, &(_56627_v));
	};
	if (((((!((*_56627_v.alloc)._field_Used)) && (!((*_56627_v.alloc)._field_Binded))) && ((*_56627_v.alloc)._field_Scope == nullptr)) && (((*_56627_v.alloc)._field_Value == nullptr) || ((*((*_56627_v.alloc)._field_Value))._field_Data == nullptr)))) {
		jule::Ptr<_1bc305358_SymTab> _6228_varfile = _1bc3d9edc_findVarFileInPackage(&((*((*(_self_))._field_s))._field_files), &(_56627_v));;
		jule::Ptr<_1bc305358_SymTab> _6238_file = _1bc40c729_getCurrentFile((*(_self_))._field_s);;
		_1bc40c9d2_setCurrentFile((*(_self_))._field_s, _6228_varfile);
		_1bc424e5b_checkVar((*(_self_))._field_s, &(_56627_v), jule::Trait((*(_self_))._field_s, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4));
		_1bc40c9d2_setCurrentFile((*(_self_))._field_s, _6238_file);
	};
	(*_56627_v.alloc)._field_Used=true;
	if ((((*_56627_v.alloc)._field_TypeSym == nullptr) || ((*((*_56627_v.alloc)._field_TypeSym))._field_Type == nullptr))) {
		return nullptr;;
	};
	_julec_label_1c398c3e0:;
	jule::Ptr<_1bc48354c_Data> _6427_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=(*((*_56627_v.alloc)._field_TypeSym))._field_Type, ._field_Mutable=(*_56627_v.alloc)._field_Mutable, ._field_Reference=(*_56627_v.alloc)._field_Reference, ._field_Lvalue=(!((*_56627_v.alloc)._field_Constant)), ._field_IsRune=false, ._field_Model=jule::Any(_56627_v, &__jule_any_type7), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	if ((((*_56627_v.alloc)._field_Value != nullptr) && ((*(*(_56627_v))._field_Value.alloc)._field_Data != nullptr))) {
		if (((!((*_56627_v.alloc)._field_Binded)) && _1bc42e11e_IsInitialized(_56627_v))) {
			(*(_6427_d))._field_IsRune=(*(*((*(_56627_v))._field_Value))._field_Data.alloc)._field_IsRune;
		};
		if (((*_56627_v.alloc)._field_Constant && ((*(*((*(_56627_v))._field_Value))._field_Data.alloc)._field_Constant != nullptr))) {
			(*(_6427_d))._field_Constant=jule::new_ptr<_1bac25065_Const>((*(*((*((*(_56627_v))._field_Value))._field_Data))._field_Constant.alloc));
			(*_6427_d.alloc)._field_Model=jule::Any((*_6427_d.alloc)._field_Constant, &__jule_any_type15);
			if (_1bc42e63b_untypedConstant(_56627_v)) {
				_1bc486ab1_applyNumericPrefix(_self_, &(_6427_d));
				(*_6427_d.alloc)._field_untyped=true;
			};
		};
	};
	return _6427_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48c556_evalTypeAlias(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b5705_TypeAlias> _66633_ta, jule::Ptr<_1bc247014_Token> _66649_errorToken) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_66633_ta))._field_Public, (*_66633_ta.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, _66649_errorToken, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_66633_ta.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_66633_ta))._field_Used=true;
	jule::Trait _6757_kind = (*((*((*_66633_ta.alloc)._field_TypeSym))._field_Type))._field_Kind;;
	jule::Ptr<_1bc48354c_Data> _67611_d = nullptr;;
	{
		auto &_match_expr{ _6757_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)) {
			_case_begin_1c3997b04:;
			{
				_67611_d=_1bc48a09d__evalStruct(_self_, _6757_kind.cast_ptr<_1bc2810c5_StructIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3)) {
			_case_begin_1c399a8c6:;
			{
				_67611_d=_1bc489124__evalEnum(_self_, _6757_kind.cast_ptr<_1bc30be20_Enum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4)) {
			_case_begin_1c399b575:;
			{
				_67611_d=_1bc489861__evalTypeEnum(_self_, _6757_kind.cast_ptr<_1bc30d62a_TypeEnum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4));
			}
		}
		else {
			_case_begin_1c3996509:;
			{
				_67611_d=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_66633_ta))._field_TypeSym))._field_Type.alloc)._field_Kind}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});
				if ((*_66633_ta.alloc)._field_Binded) {
					(*((*(_67611_d))._field_Type))._field_BindIdent=(*_66633_ta.alloc)._field_Ident;
				} else {
					(*((*(_67611_d))._field_Type))._field_BindIdent=(*(*((*(_66633_ta))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
				};
				(*(_67611_d))._field_Model=jule::Any((*_67611_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		_match_end_1c3996383:;
	};
	(*((*(_67611_d))._field_Type))._field_Generic=(*_66633_ta.alloc)._field_Generic;
	return _67611_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48c952_evalDef(_1bc48551b_eval* _self_, jule::Any* _70528_def, jule::Ptr<_1bc247014_Token> _70542_ident) {
	{
		auto &_match_expr{ (*(_70528_def)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c399e688:;
			{
				return _1bc48c15a_evalVar(_self_, (*(_70528_def)).cast_ptr<_1bc42dc12_Var>(&__jule_any_type7), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type12) {
			_case_begin_1c399e457:;
			{
				return _1bc489520_evalEnum(_self_, (*(_70528_def)).cast_ptr<_1bc30be20_Enum>(&__jule_any_type12), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type13) {
			_case_begin_1c399e6ee:;
			{
				return _1bc489c5c_evalTypeEnum(_self_, (*(_70528_def)).cast_ptr<_1bc30d62a_TypeEnum>(&__jule_any_type13), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c399e765:;
			{
				return _1bc48a499_evalStruct(_self_, (*(_70528_def)).cast_ptr<_1bc27d26a_Struct>(&__jule_any_type9), _70542_ident);;
			}
		}
		else if (_match_expr.type == &__jule_any_type10) {
			_case_begin_1c399e7cb:;
			{
				jule::Ptr<_1bc2ee055_Fn> _7168_f = (*(_70528_def)).cast_ptr<_1bc2ee055_Fn>(&__jule_any_type10);;
				if ((!(*(_7168_f))._field_Ident.equal("init", 4))) {
					return _1bc48b049_evalFn(_self_, _7168_f, _70542_ident);;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c399e853:;
			{
				return _1bc48a7da_evalFnIns(_self_, (*(_70528_def)).cast_ptr<_1bc302113_FnIns>(&__jule_any_type65));;
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c399e8ca:;
			{
				return _1bc48c556_evalTypeAlias(_self_, (*(_70528_def)).cast_ptr<_1bc4b5705_TypeAlias>(&__jule_any_type8), _70542_ident);;
			}
		}
		_match_end_1c399e589:;
	};
	_1bc4859e4_pushErr(_self_, _70542_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_70542_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48cc93_evalIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc26355d_IdentExpr> _72929_ident) {
	jule::Any _7307_def = _1bc488794_getDef(_self_, &((*(_72929_ident))._field_Ident), (*_72929_ident.alloc)._field_Binded);;
	return _1bc48c952_evalDef(_self_, &(_7307_def), (*_72929_ident.alloc)._field_Token);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48d0d4_evalUnary(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc263d00_UnaryExpr> _73430_u) {
	_1bc4a478d_unaryEval _7357_unary = static__1bc4a4c11_new(_self_);;
	return _1bc4a6141_eval(&_7357_unary, _73430_u);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48d425_evalVariadic(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2641c9_VariadicExpr> _73933_v) {
	if (((*(_73933_v))._field_Expr == nullptr)) {
		_1bc4859e4_pushErr(_self_.ptr(), (*_73933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc4b64e7_Type> _7457_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_7457_prefix;
	});;
	jule::Ptr<_1bc48354c_Data> _7497_d = _1bc4a4309_evalExpr(_self_, (*(_73933_v))._field_Expr);;
	if ((_7497_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc4b8917_Variadicable((*(_7497_d))._field_Type.ptr())))) {
		_1bc4859e4_pushErr(_self_, (*_73933_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_7497_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1bc4b366a_makeVariadic(&(_7497_d), (*(_1bc4b9c04_Slc((*(_7497_d))._field_Type.ptr())))._field_Elem);
	return _7497_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48d766_evalUnsafe(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2630a7_UnsafeExpr> _76131_u) {
	jule::Bool _7623_unsafety = (*(_self_))._field_unsafety;;
	(*_self_.alloc)._field_unsafety=true;
	jule::Ptr<_1bc48354c_Data> _7647_d = _1bc4a4309_evalExpr(_self_, (*(_76131_u))._field_Expr);;
	(*_self_.alloc)._field_unsafety=_7623_unsafety;
	return _7647_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48daa7_evalArr(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268299_SliceExpr> _76928_s) {
	jule::Ptr<_1bc4c5e30_Arr> _7717_pt = _1bc4b996d_Arr((*(_self_))._field_prefix.ptr());;
	jule::Ptr<_1bc4c5e30_Arr> _7737_arr = jule::new_ptr<_1bc4c5e30_Arr>(_1bc4c5e30_Arr{._field_Auto=false, ._field_N=0LL, ._field_Elem=(*(_7717_pt))._field_Elem});;
	jule::Bool _7797_filled = false;;
	if (((*(_76928_s))._field_Exprs.len() == 2LL)) {
		{
			auto &_match_expr{ (*((*(_76928_s))._field_Exprs[1LL]))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type79) {
				_case_begin_1c344ea73:;
				{
					if (((*((*((*(_76928_s))._field_Exprs[1LL]))._field_Kind.unsafe_cast_ptr<_1bc2641c9_VariadicExpr>()))._field_Expr != nullptr)) {
						goto _match_end_1c344e9b8;
					};
					if ((*_7717_pt.alloc)._field_Auto) {
						_1bc4859e4_pushErr(_self_, (*_76928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("auto-sized arrays cannot filled", 31)), jule::Slice<jule::Any>());
						return nullptr;;
					};
					_7797_filled=true;
					((*(_76928_s))._field_Exprs).mut_slice(0LL, 1LL);;
				}
			}
			_match_end_1c344e9b8:;
		};
	};
	(*(_7737_arr))._field_N=(*(_76928_s))._field_Exprs.len();
	if ((!((*_7717_pt.alloc)._field_Auto))) {
		if (((*_7737_arr.alloc)._field_N > (*_7717_pt.alloc)._field_N)) {
			_1bc4859e4_pushErr(_self_, (*_76928_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else if (((*_7737_arr.alloc)._field_N < (*_7717_pt.alloc)._field_N)) {
			(*_7737_arr.alloc)._field_N=(*_7717_pt.alloc)._field_N;
		};
	};
	jule::Ptr<_1bc2e7081_ArrayExprModel> _8087_model = jule::new_ptr<_1bc2e7081_ArrayExprModel>(_1bc2e7081_ArrayExprModel{._field_Kind=_7737_arr, ._field_Elems=jule::Slice<jule::Any>(nullptr)});;
	if (_7797_filled) {
		(*(_8087_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 2LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	} else {
		(*(_8087_model))._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*_76928_s.alloc)._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
	};
	jule::Ptr<_1bc4b64e7_Type> _8177_prefix = (*_self_.alloc)._field_prefix;;
	(*_self_.alloc)._field_prefix=(*_7737_arr.alloc)._field_Elem;
	{
		auto expr = &((*_76928_s.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3456abe:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _81915_elem = *it;
			{
				jule::Ptr<_1bc48354c_Data> _8208_d = _1bc4a4309_evalExpr(_self_, _81915_elem);;
				if ((_8208_d == nullptr)) {
					goto _iter_next_1c3456abe;
				};
				;
				if (_1bc419b76_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_7737_arr.alloc)._field_Elem), &(_8208_d), &((*(_81915_elem))._field_Token))) {
					_1bc4153e1_checkAssignType((*(_self_))._field_s, false, &((*_7737_arr.alloc)._field_Elem), &(_8208_d), (*_81915_elem.alloc)._field_Token, _1bc488a2a_getOwnerRefers(_self_));
				};
				(*(_8087_model))._field_Elems=jule::append((*_8087_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8208_d))._field_Model; __jule_collection; }));
			}
			_iter_next_1c3456abe:;
			++it;
			goto _iter_begin_1c3456abe;
		}
		_iter_end_1c3456abe:;
	};
	(*_self_.alloc)._field_prefix=_8177_prefix;
	if (_7797_filled) {
		(*(_8087_model))._field_Elems=jule::append((*_8087_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = nullptr; __jule_collection; }));
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_7737_arr, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8087_model, &__jule_any_type88), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48e05d_evalExpSlc(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268299_SliceExpr> _84631_s, jule::Ptr<_1bc4b64e7_Type> _84655_t, jule::Any _84669_first) {
	jule::Ptr<_1bc4c3b0e_Slc> _8477_slc = jule::new_ptr<_1bc4c3b0e_Slc>(_1bc4c3b0e_Slc{._field_Elem=_84655_t});;
	jule::I32 _8517_i = 0LL;;
	jule::Ptr<_1bc2e4149_SliceExprModel> _8527_model = jule::new_ptr<_1bc2e4149_SliceExprModel>(_1bc2e4149_SliceExprModel{._field_ElemType=_84655_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, (*(_84631_s))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	if ((_84669_first != nullptr)) {
		(*(_8527_model))._field_Elems=jule::append((*_8527_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _84669_first; __jule_collection; }));
		_8517_i=1LL;
	};
	jule::Ptr<_1bc4b64e7_Type> _8617_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=(*(_8477_slc))._field_Elem;
	{
		auto expr = (*_84631_s.alloc)._field_Exprs.slice(_8517_i);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c3462ab9:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _86315_elem = *it;
			{
				jule::Ptr<_1bc48354c_Data> _8648_d = _1bc4a4309_evalExpr(_self_, _86315_elem);;
				if ((_8648_d != nullptr)) {
					;
					if (_1bc419b76_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*_8477_slc.alloc)._field_Elem), &(_8648_d), &((*(_86315_elem))._field_Token))) {
						_1bc4153e1_checkAssignType((*(_self_))._field_s, false, &((*_8477_slc.alloc)._field_Elem), &(_8648_d), (*_86315_elem.alloc)._field_Token, _1bc488a2a_getOwnerRefers(_self_));
					};
					(*(_8527_model))._field_Elems=jule::append((*_8527_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_8648_d))._field_Model; __jule_collection; }));
				};
			}
			_iter_next_1c3462ab9:;
			++it;
			goto _iter_begin_1c3462ab9;
		}
		_iter_end_1c3462ab9:;
	};
	(*_self_.alloc)._field_prefix=_8617_prefix;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_8477_slc, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8527_model, &__jule_any_type80), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc48e39e_evalSliceExpr(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268299_SliceExpr> _88434_s) {
	if (((*(_self_))._field_prefix != nullptr)) {
		{
			
			if ((_1bc4b996d_Arr((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1c332b356:;
				{
					return _1bc48daa7_evalArr(_self_, _88434_s);;
				}
			}
			else if ((_1bc4b9c04_Slc((*(_self_))._field_prefix) != nullptr)) {
				_case_begin_1c332b400:;
				{
					jule::Ptr<_1bc4c3b0e_Slc> _8909_pt = _1bc4b9c04_Slc((*(_self_))._field_prefix);;
					return _1bc48e05d_evalExpSlc(_self_, _88434_s, (*(_8909_pt))._field_Elem, nullptr);;
				}
			}
			_match_end_1c332b268:;
		};
	};
	jule::Ptr<_1bc4b64e7_Type> _8957_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	if (((*(_88434_s))._field_Exprs.len() == 0LL)) {
		_1bc4859e4_pushErr(_self_, (*_88434_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("dynamic type annotation failed", 30)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc261c43_Expr> _9037_firstExpr = (*(_88434_s))._field_Exprs[0LL];;
	jule::Ptr<_1bc48354c_Data> _9047_firstElem = _1bc4a4309_evalExpr(_self_, _9037_firstExpr);;
	if ((_9047_firstElem == nullptr)) {
		return nullptr;;
	};
	;
	_1bc419b76_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_9047_firstElem))._field_Type), &(_9047_firstElem), &((*(_9037_firstExpr))._field_Token));
	jule::Ptr<_1bc48354c_Data> _9147_d = _1bc48e05d_evalExpSlc(_self_, _88434_s, (*_9047_firstElem.alloc)._field_Type, (*_9047_firstElem.alloc)._field_Model);;
	(*_self_.alloc)._field_prefix=_8957_prefix;
	return _9147_d;;
}



inline jule::Bool _1bc48e79a_checkIntegerIndexingByData(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _92047_d, jule::Ptr<_1bc247014_Token> _92061_token) {
	jule::Str _9213_errKey = _1bc4b104c_checkDataForIntegerIndexing(&((*(_self_))._field_s), _92047_d, &(_92061_token), _1bc488a2a_getOwnerRefers(_self_));;
	{
		auto &_match_expr{ _9213_errKey };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str())) {
			_case_begin_1c37399a6:;
			{
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30))) {
			_case_begin_1c3739687:;
			{
				_1bc4859e4_pushErr(_self_, _92061_token, _9213_errKey, ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_92047_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
			}
		}
		else {
			_case_begin_1c3738ed3:;
			{
				_1bc4859e4_pushErr(_self_, _92061_token, _9213_errKey, jule::Slice<jule::Any>());
			}
		}
		_match_end_1c3739621:;
	};
	return false;;
}



inline void _1bc48ebb8_indexingPtr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _93332_d, jule::Ptr<_1bc48354c_Data>* _93347_index, jule::Ptr<_1bc268c06_IndexingExpr>* _93366_i) {
	_1bc48e79a_checkIntegerIndexingByData(_self_, _93347_index, (*((*(_93366_i))))._field_Token);
	(*((*(_93332_d))))._field_Lvalue=true;
	jule::Ptr<_1bc4c6903_Ptr> _9377_ptr = _1bc4b91ba_Ptr((*((*(_93332_d))))._field_Type.ptr());;
	{
		
		if (_1bc4c7470_IsUnsafe(_9377_ptr.ptr())) {
			_case_begin_1c373c877:;
			{
				_1bc4859e4_pushErr(_self_, (*((*(_93366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe pointers are not supports indexing", 41)), jule::Slice<jule::Any>());
				return;;
			}
		}
		else if ((!(_1bc4864d9_isUnsafe(_self_)))) {
			_case_begin_1c373c910:;
			{
				_1bc4859e4_pushErr(_self_, (*((*(_93366_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c373c7cd:;
	};
	(*((*(_93332_d))))._field_Type=(*(_9377_ptr))._field_Elem;
}



inline void _1bc4900d6_indexingArr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _94932_d, jule::Ptr<_1bc48354c_Data>* _94947_index, jule::Ptr<_1bc268c06_IndexingExpr>* _94966_i) {
	jule::Ptr<_1bc4c5e30_Arr> _9507_arr = _1bc4b996d_Arr((*((*(_94932_d))))._field_Type.ptr());;
	(*((*(_94932_d))))._field_Type=(*(_9507_arr))._field_Elem;
	_1bc48e79a_checkIntegerIndexingByData(_self_, _94947_index, (*((*(_94966_i))))._field_Token);
	(*((*(_94932_d))))._field_Lvalue=true;
	if ((_1bc483e87_IsConst((*(_94947_index)).ptr()) && (_1bac27c16_AsF64((*((*(_94947_index))))._field_Constant.ptr()) >= static_cast<jule::F64>((*_9507_arr.alloc)._field_N)))) {
		_1bc4859e4_pushErr(_self_, (*((*(_94966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
	};
}



inline void _1bc490504_indexingSlc(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _95932_d, jule::Ptr<_1bc48354c_Data>* _95947_index, jule::Ptr<_1bc268c06_IndexingExpr>* _95966_i) {
	jule::Ptr<_1bc4c3b0e_Slc> _9607_slc = _1bc4b9c04_Slc((*((*(_95932_d))))._field_Type.ptr());;
	(*((*(_95932_d))))._field_Type=(*(_9607_slc))._field_Elem;
	_1bc48e79a_checkIntegerIndexingByData(_self_, _95947_index, (*((*(_95966_i))))._field_Token);
	(*((*(_95932_d))))._field_Lvalue=true;
	if ((!(_1bc483e87_IsConst((*(_95947_index)).ptr())))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_95932_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c3745099:;
			{
				jule::Ptr<_1bc2e4149_SliceExprModel> _9718_m = (*((*(_95932_d))))._field_Model.unsafe_cast_ptr<_1bc2e4149_SliceExprModel>();;
				jule::F64 _9724_indx = _1bac27c16_AsF64((*((*(_95947_index))))._field_Constant.ptr());;
				if ((_9724_indx >= static_cast<jule::F64>((*(_9718_m))._field_Elems.len()))) {
					_1bc4859e4_pushErr(_self_, (*((*(_95966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
				} else {
					(*((*(_95932_d))))._field_Model=(*(_9718_m))._field_Elems[static_cast<jule::I32>(static_cast<jule::U64>(_9724_indx))];
					(*((*(_95932_d))))._field_Decl=true;
				};
			}
		}
		_match_end_1c3745033:;
	};
}



inline void _1bc490922_indexingMap(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _98232_d, jule::Ptr<_1bc48354c_Data>* _98247_index, jule::Ptr<_1bc268c06_IndexingExpr>* _98266_i) {
	(*((*(_98232_d))))._field_Lvalue=true;
	if (((*(_98247_index)) == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc4c52a3_Map> _9877_m = _1bc4ba73d_Map((*((*(_98232_d))))._field_Type.ptr());;
	_1bc471716_assignTypeChecker _9887_atc = _1bc471716_assignTypeChecker{._field_s=(*(_self_))._field_s, ._field_dest=(*(_9877_m))._field_Key, ._field_d=(*(_98247_index)), ._field_errorToken=(*((*(_98266_i))))._field_Token, ._field_refers=_1bc488a2a_getOwnerRefers(_self_)};;
	_1bc472717_check(&_9887_atc);
	(*((*(_98232_d))))._field_Type=(*_9877_m.alloc)._field_Val;
}



inline void _1bc490d40_indexingStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _99932_d, jule::Ptr<_1bc48354c_Data>* _99947_index, jule::Ptr<_1bc268c06_IndexingExpr>* _99966_i) {
	(*((*(_99932_d))))._field_Type=_1bc53b391_primU8;
	(*((*(_99932_d))))._field_Mutable=false;
	(*((*(_99932_d))))._field_Lvalue=true;
	if (((*(_99947_index)) == nullptr)) {
		return;;
	};
	_1bc48e79a_checkIntegerIndexingByData(_self_, _99947_index, (*((*(_99966_i))))._field_Token);
	if ((!(_1bc483e87_IsConst((*(_99947_index)).ptr())))) {
		(*((*(_99932_d))))._field_Constant=nullptr;
		(*((*(_99932_d))))._field_untyped=false;
		return;;
	};
	if (_1bc483e87_IsConst((*(_99932_d)).ptr())) {
		jule::I64 _10174_j = _1bac276e9_AsI64((*((*(_99947_index))))._field_Constant.ptr());;
		jule::Str _10184_s = _1bac271cc_ReadStr((*((*(_99932_d))))._field_Constant);;
		if ((static_cast<jule::I32>(_10174_j) >= _10184_s.len())) {
			_1bc4859e4_pushErr(_self_, (*((*(_99966_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		} else {
			_1bac28277_SetU64((*((*(_99932_d))))._field_Constant, static_cast<jule::U64>(_10184_s[static_cast<jule::I32>(_10174_j)]));
		};
	};
}



inline void _1bc49125d_comptimeRange(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _102734_d, jule::Ptr<_1bc48354c_Data>* _102749_index, jule::Ptr<_1bc268c06_IndexingExpr>* _102768_i) {
	if (((*(_102749_index)) == nullptr)) {
		(*(_102734_d))=nullptr;
		return;;
	};
	if ((!(_1bc48e79a_checkIntegerIndexingByData(_self_, _102749_index, (*((*((*(_102768_i))))._field_Index))._field_Token)))) {
		(*(_102734_d))=nullptr;
		return;;
	};
	if ((!(_1bc483e87_IsConst((*(_102749_index)).ptr())))) {
		(*(_102734_d))=nullptr;
		_1bc4859e4_pushErr(_self_, (*((*((*(_102768_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return;;
	};
	jule::I32 _10423_j = static_cast<jule::I32>(_1bac276e9_AsI64((*((*(_102749_index))))._field_Constant.ptr()));;
	jule::Ptr<_1bc37e437_comptimeRange> _10437_ci = _1bc4bc047_comptimeRange((*((*(_102734_d))))._field_Type.ptr());;
	if ((_10423_j >= ((_1bc37e217_comptimeRangeKindMptrData*)(*(_10437_ci))._field_kind.safe_type())->_1bc37e0b3_len((*(_10437_ci))._field_kind.data))) {
		(*(_102734_d))=nullptr;
		_1bc4859e4_pushErr(_self_, (*((*((*(_102768_i))))._field_Index))._field_Token, static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31)), jule::Slice<jule::Any>());
		return;;
	};
	((_1bc37e217_comptimeRangeKindMptrData*)(*(_10437_ci))._field_kind.safe_type())->_1bc37d59b_index((*(_10437_ci))._field_kind.data, _102734_d, _10423_j);
}



inline void _1bc49167b_toIndexing(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _105231_d, jule::Ptr<_1bc48354c_Data>* _105246_index, jule::Ptr<_1bc268c06_IndexingExpr>* _105265_i) {
	{
		
		if ((_1bc4b91ba_Ptr((*((*(_105231_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3756a4a:;
			{
				_1bc48ebb8_indexingPtr(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_1bc4b996d_Arr((*((*(_105231_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3756ae4:;
			{
				_1bc4900d6_indexingArr(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_1bc4b9c04_Slc((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_1c3756b5a:;
			{
				_1bc490504_indexingSlc(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_1bc4ba73d_Map((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_1c3756bc1:;
			{
				_1bc490922_indexingMap(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_1c3756c37:;
			{
				jule::Ptr<_1bc4be610_Prim> _10674_prim = _1bc4b8b9d_Prim((*((*(_105231_d))))._field_Type);;
				{
					
					if (_1bc4c2aca_IsStr(_10674_prim.ptr())) {
						_case_begin_1c375b17b:;
						{
							_1bc490d40_indexingStr(_self_, _105231_d, _105246_index, _105265_i);
							return;;
						}
					}
					_match_end_1c375b0c1:;
				};
			}
		}
		else if ((_1bc4bc047_comptimeRange((*((*(_105231_d))))._field_Type) != nullptr)) {
			_case_begin_1c3756cae:;
			{
				_1bc49125d_comptimeRange(_self_, _105231_d, _105246_index, _105265_i);
				return;;
			}
		}
		_match_end_1c37568d5:;
	};
	_1bc4859e4_pushErr(_self_, (*((*(_105265_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support indexing", 30)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_105231_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Bool _1bc491b32_pushGenericsFromExprSubIdent(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc264d56_SubIdentExpr>* _108050_sexpr, jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>* _10818_generics, jule::Ptr<_1bc261c43_Expr>* _108141_expr) {
	jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> _10827_t = jule::new_ptr<_1bc25d2d3_SubIdentTypeDecl>(_1bc25d2d3_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>>(nullptr)});;
	if ((!(_1bc4b20c5_pushSubIdentFromExpr(jule::Any((*(_108050_sexpr)), &__jule_any_type89), &(_10827_t))))) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*(_108141_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*(_10818_generics)); __jule_push_dest.push(jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Kind=jule::Any(_10827_t, &__jule_any_type90)})); };
	return true;;
}



inline jule::Bool _1bc49202d_pushGenericsFromData(jule::Ptr<_1bc48551b_eval> _self_, jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>* _109142_generics, jule::Ptr<_1bc261c43_Expr>* _109175_expr) {
	{
		auto &_match_expr{ (*((*(_109175_expr))))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c3763051:;
			{
				jule::Ptr<_1bc263d00_UnaryExpr> _10948_u = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_1bc263d00_UnaryExpr>();;
				{
					auto &_match_expr{ (*((*(_10948_u))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(62LLU)) {
						_case_begin_1c3767ac2:;
						{
							jule::Ptr<_1bc25e438_PtrTypeDecl> _10979_kind = jule::new_ptr<_1bc25e438_PtrTypeDecl>(_1bc25e438_PtrTypeDecl{._field_Elem=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _10989__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25c90e_TypeDecl>(nullptr); __jule_collection; });;
							_1bc49202d_pushGenericsFromData(_self_, &(_10989__generics), &((*(_10948_u))._field_Expr));
							(*_10979_kind.alloc)._field_Elem=_10989__generics[0LL];
							{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*((*(_109175_expr))))._field_Token, ._field_Kind=jule::Any(_10979_kind, &__jule_any_type74)})); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(65LLU)) {
						_case_begin_1c3767b38:;
						{
							jule::Ptr<_1bc25d9a9_SptrTypeDecl> _11069_kind = jule::new_ptr<_1bc25d9a9_SptrTypeDecl>(_1bc25d9a9_SptrTypeDecl{._field_Elem=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr)});;
							jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _11079__generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25c90e_TypeDecl>(nullptr); __jule_collection; });;
							_1bc49202d_pushGenericsFromData(_self_, &(_11079__generics), &((*(_10948_u))._field_Expr));
							(*_11069_kind.alloc)._field_Elem=_11079__generics[0LL];
							{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*((*(_109175_expr))))._field_Token, ._field_Kind=jule::Any(_11069_kind, &__jule_any_type75)})); };
						}
					}
					else {
						_case_begin_1c37637c1:;
						{
							_1bc4859e4_pushErr(_self_, (*_10948_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
							return false;;
						}
					}
					_match_end_1c3765a37:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c37630b7:;
			{
				{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push((*((*(_109175_expr))))._field_Kind.cast_ptr<_1bc25c90e_TypeDecl>(&__jule_any_type92)); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c376312d:;
			{
				jule::Ptr<_1bc264d56_SubIdentExpr> _11218_sexpr = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_1bc264d56_SubIdentExpr>();;
				return _1bc491b32_pushGenericsFromExprSubIdent(_self_, &(_11218_sexpr), _109142_generics, _109175_expr);;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c3761082:;
			{
				jule::Ptr<_1bc26355d_IdentExpr> _11248_ident = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_1bc26355d_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*_11248_ident.alloc)._field_Token, ._field_Ident=(*_11248_ident.alloc)._field_Ident, ._field_Binded=(*(_11248_ident))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)}), &__jule_any_type78)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c37610e8:;
			{
				{
					auto expr = &((*((*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_1bc262837_TupleExpr>()))._field_Expr);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c37724b1:;
					if (it != expr_end) {
						jule::Ptr<_1bc261c43_Expr> _113316_texpr = *it;
						{
							if ((!(_1bc49202d_pushGenericsFromData(_self_, _109142_generics, &(_113316_texpr))))) {
								return false;;
							};
						}
						_iter_next_1c37724b1:;
						++it;
						goto _iter_begin_1c37724b1;
					}
					_iter_end_1c37724b1:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c376115e:;
			{
				jule::Ptr<_1bc26497c_NamespaceExpr> _11398_ns = (*((*(_109175_expr))))._field_Kind.unsafe_cast_ptr<_1bc26497c_NamespaceExpr>();;
				jule::Ptr<_1bc25d019_IdentTypeDecl> _11408_decl = jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*(_11398_ns))._field_Ident, ._field_Ident=(*((*_11398_ns.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)});;
				{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*(_109142_generics)); __jule_push_dest.push(jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*(_11408_decl))._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1bc25d6ac_NamespaceTypeDecl>(_1bc25d6ac_NamespaceTypeDecl{._field_Namespace=(*_11398_ns.alloc)._field_Namespace, ._field_Kind=jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*_11408_decl.alloc)._field_Token, ._field_Kind=jule::Any(_11408_decl, &__jule_any_type78)})}), &__jule_any_type94)})); };
			}
		}
		else {
			_case_begin_1c376101b:;
			{
				_1bc4859e4_pushErr(_self_, (*((*(_109175_expr))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return false;;
			}
		}
		_match_end_1c3760ea5:;
	};
	return true;;
}



inline void _1bc492391_evalIdentDeclFromIndexing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc48354c_Data>* _116147_d, jule::Ptr<_1bc268c06_IndexingExpr>* _116162_i) {
	jule::Ptr<_1bc2810c5_StructIns> _11627_s = _1bc4ba221_Struct((*((*(_116147_d))))._field_Type.ptr());;
	if ((_11627_s == nullptr)) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*((*(_116162_i))))._field_Expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_116147_d))))._field_Type), &__jule_any_type5); __jule_collection; }));
		(*(_116147_d))=nullptr;
		return;;
	};
	jule::Ptr<_1bc25d019_IdentTypeDecl> _116911_decl = nullptr;;
	{
		auto &_match_expr{ (*((*((*(_116162_i))))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c377e04a:;
			{
				jule::Ptr<_1bc26355d_IdentExpr> _11728_expr = (*((*((*(_116162_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1bc26355d_IdentExpr>();;
				_116911_decl=jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*_11728_expr.alloc)._field_Token, ._field_Ident=(*_11728_expr.alloc)._field_Ident, ._field_Binded=(*(_11728_expr))._field_Binded, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)});
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c378047a:;
			{
				jule::Ptr<_1bc26497c_NamespaceExpr> _11798_expr = (*((*((*(_116162_i))))._field_Expr))._field_Kind.unsafe_cast_ptr<_1bc26497c_NamespaceExpr>();;
				_116911_decl=jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*(_11798_expr))._field_Ident, ._field_Ident=(*((*_11798_expr.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)});
			}
		}
		else {
			_case_begin_1c377e4bd:;
			{
				_1bc4859e4_pushErr(_self_.ptr(), (*((*(_116162_i))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				(*(_116147_d))=nullptr;
				return;;
			}
		}
		_match_end_1c377e457:;
	};
	if ((!(_1bc49202d_pushGenericsFromData(_self_, &((*(_116911_decl))._field_Generics), &((*((*(_116162_i))))._field_Index))))) {
		(*(_116147_d))=nullptr;
		return;;
	};
	_11627_s=({ auto _wrap_copy = _1bc498d8c_typeChecker(_self_.ptr()); _1bc4ccc7d_fromStruct(&_wrap_copy, &(_116911_decl), &((*(_11627_s))._field_Decl)); });
	if ((_11627_s == nullptr)) {
		(*(_116147_d))=nullptr;
		return;;
	};
	(*(*((*(_116147_d))))._field_Type.alloc)._field_Kind=jule::Trait(_11627_s, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0);
}



inline __jule_tuple_bool__jule_tuple_bool _1bc492847_checkGenericFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc302113_FnIns>* _120436_f, jule::Ptr<_1bc247014_Token>* _120452_et, jule::Any* _120476_model) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc302113_FnIns> _12057_old = (*(_120436_f));;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc425951_checkGenericFn((*(_self_))._field_s, _120436_f, _120452_et);
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if ((__jule_func_result.__jule_result_arg0 && __jule_func_result.__jule_result_arg1)) {
		_1bc4b1c51_updateModelToGenericIns(_120476_model, _120436_f);
		_1c3787284_updateRefer(_1bc488a2a_getOwnerRefers(_self_.ptr()), &(_12057_old), _120436_f);
	};
	return __jule_func_result;;
}



inline void _1bc492baa_evalFnGenericFromIndexing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc48354c_Data>* _122047_d, jule::Ptr<_1bc268c06_IndexingExpr>* _122062_i) {
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _12217_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(0LL, 8LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25c90e_TypeDecl>(nullptr); __jule_collection; });;
	if ((!(_1bc49202d_pushGenericsFromData(_self_, &(_12217_generics), &((*((*(_122062_i))))._field_Index))))) {
		(*(_122047_d))=nullptr;
		return;;
	};
	jule::Ptr<_1bc302113_FnIns> _12277_f = _1bc4b9e8a_Fn((*((*(_122047_d))))._field_Type.ptr());;
	jule::I32 _12287_genericsLen = 0LL;;
	if (((*(_12277_f))._field_Decl != nullptr)) {
		_12287_genericsLen=(*(*(_12277_f))._field_Decl.alloc)._field_Generics.len();
	};
	if ((!(_1bc40e42e_checkGenericQuantity((*(_self_))._field_s.ptr(), _12287_genericsLen, _12217_generics.len(), (*((*((*(_122062_i))))._field_Expr))._field_Token)))) {
		(*(_122047_d))=nullptr;
		return;;
	};
	(*(_12277_f))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(0LL, (*((*_12277_f.alloc)._field_Decl))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b4b11_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &(_12217_generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0994ae3:;
		if (it != expr_end) {
			jule::Ptr<_1bc25c90e_TypeDecl> _123915_g = *it;
			{
				jule::Ptr<_1bc48354c_Data> _12408_k = _1bc4991cd_evalType(_self_.ptr(), _123915_g);;
				if ((_12408_k == nullptr)) {
					(*(_122047_d))=nullptr;
					return;;
				};
				(*_12277_f.alloc)._field_Generics=jule::append((*_12277_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=(*(_12408_k))._field_Type, ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1c0994ae3:;
			++it;
			goto _iter_begin_1c0994ae3;
		}
		_iter_end_1c0994ae3:;
	};
	if (_1bc3035cb_IsBuiltin(_12277_f)) {
		return;;
	};
	jule::Bool _12523_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc492847_checkGenericFn(_self_, &(_12277_f), &((*((*((*(_122062_i))))._field_Expr))._field_Token), &((*((*(_122047_d))))._field_Model));
		_12523_ok = __jule_assign_result.__jule_result_arg0;
	});
	if (_12523_ok) {
		(*(*((*(_122047_d))))._field_Type.alloc)._field_Kind=jule::Trait(_12277_f, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1);
	} else {
		(*(_122047_d))=nullptr;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc492eeb_evalIndexing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc268c06_IndexingExpr> _126033_i) {
	jule::Ptr<_1bc4b64e7_Type> _12617_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_12617_prefix;
	});;
	jule::Ptr<_1bc48354c_Data> _12657_d = _1bc4a34e5_evalExprKind(_self_, (*((*(_126033_i))._field_Expr))._field_Kind);;
	if ((_12657_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_12657_d))._field_Decl) {
		_1bc492391_evalIdentDeclFromIndexing(_self_, &(_12657_d), &(_126033_i));
		return _12657_d;;
	};
	if ((_1bc4b9e8a_Fn((*(_12657_d))._field_Type.ptr()) != nullptr)) {
		_1bc492baa_evalFnGenericFromIndexing(_self_, &(_12657_d), &(_126033_i));
		return _12657_d;;
	};
	_1bc48354c_Data _12817_oldData = (*(_12657_d));;
	jule::Ptr<_1bc48354c_Data> _12837_index = _1bc4a4309_evalExpr(_self_, (*(_126033_i))._field_Index);;
	if ((_12837_index == nullptr)) {
		return nullptr;;
	};
	_1bc3c6e1e_makeComptimeRange(&(_12657_d));
	(*(_12657_d))._field_Decl=false;
	_1bc49167b_toIndexing(_self_, &(_12657_d), &(_12837_index), &(_126033_i));
	if ((_12657_d == nullptr)) {
		return nullptr;;
	};
	if (_1bc483e87_IsConst(_12657_d)) {
		(*_12657_d.alloc)._field_Decl=false;
		(*_12657_d.alloc)._field_Model=jule::Any((*_12657_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_12657_d.alloc)._field_Decl) {
		(*_12657_d.alloc)._field_Decl=false;
	} else {
		(*_12657_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e4600_IndexingExprModel>(_1bc2e4600_IndexingExprModel{._field_Token=(*(_126033_i))._field_Token, ._field_Expr=jule::new_ptr<_1bc48354c_Data>(_12817_oldData), ._field_Index=_12837_index}), &__jule_any_type43);
	};
	return _12657_d;;
}



inline __jule_tuple_x_1bc48354c_Data__jule_tuple_x_1bc48354c_Data _1bc49333c_evalSlicingExprs(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc269366_SlicingExpr>* _132038_s) {
	__jule_tuple_x_1bc48354c_Data__jule_tuple_x_1bc48354c_Data __jule_func_result;
	jule::Ptr<_1bc4b64e7_Type> _13217_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_13217_prefix;
	});;
	jule::Ptr<_1bc48354c_Data> _132511_l = nullptr;;
	jule::Ptr<_1bc48354c_Data> _132611_r = nullptr;;
	if (((*((*(_132038_s))))._field_Start != nullptr)) {
		_132511_l=_1bc4a4309_evalExpr(_self_, (*((*(_132038_s))))._field_Start);
		if ((_132511_l != nullptr)) {
			_1bc48e79a_checkIntegerIndexingByData(_self_, &(_132511_l), (*((*(_132038_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	} else {
		_132511_l=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc53a58d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac25494_NewI64(0LL)});
		(*((*(_132511_l))._field_Constant))._field_Kind=static_cast<jule::Str>(jule::Str::lit("int", 3));
		(*_132511_l.alloc)._field_Model=jule::Any((*_132511_l.alloc)._field_Constant, &__jule_any_type15);
	};
	if (((*((*(_132038_s))))._field_To != nullptr)) {
		_132611_r=_1bc4a4309_evalExpr(_self_, (*((*(_132038_s))))._field_To);
		if ((_132611_r != nullptr)) {
			_1bc48e79a_checkIntegerIndexingByData(_self_, &(_132611_r), (*((*(_132038_s))))._field_Token);
		} else {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = nullptr;
			return __jule_func_result;;
		};
	};
	__jule_func_result.__jule_result_arg0 = _132511_l;
	__jule_func_result.__jule_result_arg1 = _132611_r;
	return __jule_func_result;;
}



inline void _1bc4935e5_slicingArr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _135627_d) {
	jule::Ptr<_1bc4b64e7_Type> _13577_elemType = (*(_1bc4b996d_Arr((*((*(_135627_d))))._field_Type.ptr())))._field_Elem;;
	(*((*(_135627_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c3b0e_Slc>(_1bc4c3b0e_Slc{._field_Elem=_13577_elemType}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24)});
	(*((*(_135627_d))))._field_Lvalue=false;
	(*((*(_135627_d))))._field_Mutable=((*((*(_135627_d))))._field_Mutable || (!(_1bc4b7dcd_Mutable(_13577_elemType.ptr()))));
}



inline void _1bc493a13_slicingStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _137127_d, jule::Ptr<_1bc48354c_Data>* _137138_l, jule::Ptr<_1bc48354c_Data>* _137149_r) {
	(*((*(_137127_d))))._field_Lvalue=false;
	(*((*(_137127_d))))._field_Mutable=true;
	if ((!(_1bc483e87_IsConst((*(_137127_d)).ptr())))) {
		return;;
	};
	if ((((*(_137138_l)) == nullptr) || ((*(_137149_r)) == nullptr))) {
		(*((*(_137127_d))))._field_Constant=nullptr;
		(*((*(_137127_d))))._field_untyped=false;
		return;;
	};
	if ((_1bc483e87_IsConst((*(_137138_l)).ptr()) && _1bc483e87_IsConst((*(_137149_r)).ptr()))) {
		jule::I64 _13854_left = _1bac276e9_AsI64((*((*(_137138_l))))._field_Constant.ptr());;
		if ((_13854_left < 0LL)) {
			return;;
		};
		jule::Str _13904_s = _1bac271cc_ReadStr((*((*(_137127_d))))._field_Constant);;
		jule::I64 _13918_right = static_cast<jule::I64>(0LL);;
		if (((*(_137149_r)) == nullptr)) {
			_13918_right=static_cast<jule::I64>(_13904_s.len());
		} else {
			_13918_right=_1bac276e9_AsI64((*((*(_137149_r))))._field_Constant);
		};
		if ((_13854_left > _13918_right)) {
			return;;
		};
		_1bac287d8_SetStr((*((*(_137127_d))))._field_Constant, _13904_s.slice(static_cast<jule::I32>(_13854_left), static_cast<jule::I32>(_13918_right)));
		(*((*(_137127_d))))._field_Decl=true;
	} else {
		(*((*(_137127_d))))._field_Constant=nullptr;
		(*((*(_137127_d))))._field_untyped=false;
	};
}



inline void _1bc493edb_checkSlicing(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _140933_d, jule::Ptr<_1bc48354c_Data>* _140944_l, jule::Ptr<_1bc48354c_Data>* _140955_r, jule::Ptr<_1bc269366_SlicingExpr>* _140966_s) {
	{
		
		if ((_1bc4b996d_Arr((*((*(_140933_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3471bb6:;
			{
				_1bc4935e5_slicingArr(_self_, _140933_d);
				return;;
			}
		}
		else if ((_1bc4b9c04_Slc((*((*(_140933_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c346cb6d:;
			{
				return;;
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_140933_d))))._field_Type) != nullptr)) {
			_case_begin_1c34721a0:;
			{
				jule::Ptr<_1bc4be610_Prim> _14174_prim = _1bc4b8b9d_Prim((*((*(_140933_d))))._field_Type);;
				{
					
					if (_1bc4c2aca_IsStr(_14174_prim.ptr())) {
						_case_begin_1c378b068:;
						{
							_1bc493a13_slicingStr(_self_, _140933_d, _140944_l, _140955_r);
							return;;
						}
					}
					_match_end_1c378aead:;
				};
			}
		}
		_match_end_1c384ca75:;
	};
	_1bc4859e4_pushErr(_self_, (*((*(_140966_s))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not support slicing", 29)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_140933_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline jule::Ptr<_1bc48354c_Data> _1bc49432c_evalSlicing(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc269366_SlicingExpr> _142832_s) {
	jule::Ptr<_1bc48354c_Data> _14297_d = _1bc4a4309_evalExpr(_self_, (*(_142832_s))._field_Expr);;
	if ((_14297_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc48354c_Data> _14347_l;
	jule::Ptr<_1bc48354c_Data> _143414_r;
	({
		__jule_tuple_x_1bc48354c_Data__jule_tuple_x_1bc48354c_Data __jule_assign_result = _1bc49333c_evalSlicingExprs(_self_, &(_142832_s));
		_14347_l = __jule_assign_result.__jule_result_arg0;
		_143414_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_14347_l == nullptr)) {
		return _14297_d;;
	};
	(*(_14297_d))._field_Decl=false;
	_1bc493edb_checkSlicing(_self_, &(_14297_d), &(_14347_l), &(_143414_r), &(_142832_s));
	if (_1bc483e87_IsConst(_14297_d)) {
		(*_14297_d.alloc)._field_Decl=false;
		(*_14297_d.alloc)._field_Model=jule::Any((*_14297_d.alloc)._field_Constant, &__jule_any_type15);
	} else if ((*_14297_d.alloc)._field_Decl) {
		(*_14297_d.alloc)._field_Decl=false;
	} else {
		jule::Ptr<_1bc2e58dc_SlicingExprModel> _14528_model = jule::new_ptr<_1bc2e58dc_SlicingExprModel>(_1bc2e58dc_SlicingExprModel{._field_Token=(*_142832_s.alloc)._field_Token, ._field_Expr=(*_14297_d.alloc)._field_Model, ._field_Left=(*(_14347_l))._field_Model, ._field_Right=jule::Any(nullptr)});;
		if ((_143414_r != nullptr)) {
			(*(_14528_model))._field_Right=(*_143414_r.alloc)._field_Model;
		};
		(*_14297_d.alloc)._field_Model=jule::Any(_14528_model, &__jule_any_type95);
	};
	return _14297_d;;
}



inline void _1bc49474a_castPtr(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _146527_t, jule::Ptr<_1bc48354c_Data> _146541_d, jule::Ptr<_1bc247014_Token> _146551_errorToken) {
	(*(_146541_d))._field_Constant=nullptr;
	(*_146541_d.alloc)._field_untyped=false;
	jule::Ptr<_1bc4c313b_Sptr> _14683_sptr = _1bc4b8e34_Sptr((*_146541_d.alloc)._field_Type.ptr());;
	if ((_14683_sptr != nullptr)) {
		if ((!(_1bc4b6c34_Equal((*(_1bc4b91ba_Ptr(_146527_t.ptr())))._field_Elem, (*_14683_sptr.alloc)._field_Elem)))) {
			_1bc4859e4_pushErr(_self_, _146551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_146541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_146527_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((!(_1bc4864d9_isUnsafe(_self_)))) {
		_1bc4859e4_pushErr(_self_, _146551_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _14813_prim = _1bc4b8b9d_Prim((*(_146541_d))._field_Type);;
	if (((_1bc4b91ba_Ptr((*(_146541_d))._field_Type) == nullptr) && ((_14813_prim == nullptr) || (!(_1bc37c8db_IsInt(_1bc4be984_Str(_14813_prim.ptr()))))))) {
		_1bc4859e4_pushErr(_self_, _146551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_146541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_146527_t.ptr()), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1bc494b68_castStruct(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _148730_t, jule::Ptr<_1bc48354c_Data> _148744_d, jule::Ptr<_1bc247014_Token> _148754_errorToken) {
	(*(_148744_d))._field_Constant=nullptr;
	(*_148744_d.alloc)._field_untyped=false;
	jule::Ptr<_1bc309769_Trait> _14907_tr = _1bc4ba4a7_Trait((*_148744_d.alloc)._field_Type.ptr());;
	if ((_14907_tr == nullptr)) {
		_1bc4859e4_pushErr(_self_, _148754_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_148744_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_148730_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _14967_s = _1bc4ba221_Struct(_148730_t.ptr());;
	_1c14d8c96_pushReference(_self_, &(_14967_s));
	if ((!(_1bc27e8dc_IsImplements((*(_14967_s))._field_Decl.ptr(), _14907_tr)))) {
		_1bc4859e4_pushErr(_self_, _148754_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_148744_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_148730_t), &__jule_any_type5); __jule_collection; }));
	};
}



inline void _1bc495086_castRef(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _150427_t, jule::Ptr<_1bc48354c_Data> _150441_d, jule::Ptr<_1bc247014_Token> _150451_errorToken) {
	(*(_150441_d))._field_Constant=nullptr;
	(*_150441_d.alloc)._field_untyped=false;
	jule::Ptr<_1bc4c313b_Sptr> _15077_sptr = _1bc4b8e34_Sptr(_150427_t.ptr());;
	jule::Ptr<_1bc4c6903_Ptr> _15097_ptr = _1bc4b91ba_Ptr((*_150441_d.alloc)._field_Type.ptr());;
	if (((_15097_ptr != nullptr) && _1bc4b6c34_Equal((*(_15077_sptr))._field_Elem, (*_15097_ptr.alloc)._field_Elem))) {
		if ((!(_1bc4864d9_isUnsafe(_self_)))) {
			_1bc4859e4_pushErr(_self_, _150451_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if ((_1bc4ba221_Struct((*(_15077_sptr))._field_Elem.ptr()) != nullptr)) {
		_1bc494b68_castStruct(_self_, (*_15077_sptr.alloc)._field_Elem, _150441_d, _150451_errorToken);
		return;;
	};
	_1bc4859e4_pushErr(_self_, _150451_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_150441_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_150427_t), &__jule_any_type5); __jule_collection; }));
}



inline void _1bc4954a4_castSlc(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _152727_t, jule::Ptr<_1bc48354c_Data> _152741_d, jule::Ptr<_1bc247014_Token> _152751_errorToken) {
	jule::Ptr<_1bac25065_Const> _15283_c = (*(_152741_d))._field_Constant;;
	(*_152741_d.alloc)._field_Constant=nullptr;
	(*_152741_d.alloc)._field_untyped=false;
	if ((_1bc4b9451_Enum((*_152741_d.alloc)._field_Type.ptr()) != nullptr)) {
		if (((_1bc4b8b9d_Prim((*((*(_1bc4b9451_Enum((*(_152741_d))._field_Type)))._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*((*(_1bc4b9451_Enum((*(_152741_d))._field_Type.ptr())))._field_TypeSym))._field_Type).ptr()))))) {
			_1bc4859e4_pushErr(_self_, _152751_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_152741_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_152727_t.ptr()), &__jule_any_type5); __jule_collection; }));
			return;;
		};
	} else if (((_1bc4b8b9d_Prim((*_152741_d.alloc)._field_Type.ptr()) == nullptr) || (!(_1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*(_152741_d))._field_Type).ptr()))))) {
		_1bc4859e4_pushErr(_self_, _152751_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_152741_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_152727_t.ptr()), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	_152727_t=(*(_1bc4b9c04_Slc(_152727_t.ptr())))._field_Elem;
	jule::Ptr<_1bc4be610_Prim> _15433_prim = _1bc4b8b9d_Prim(_152727_t);;
	if (((_15433_prim == nullptr) || ((!(_1bc4c103a_IsU8(_15433_prim.ptr()))) && (!(_1bc4c0a1d_IsI32(_15433_prim)))))) {
		_1bc4859e4_pushErr(_self_, _152751_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*_152741_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_152727_t), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	if ((_15283_c != nullptr)) {
		{
			
			if (_1bc4c103a_IsU8(_15433_prim.ptr())) {
				_case_begin_1c362a666:;
				{
					jule::Str _15535_s = _1bac271cc_ReadStr(_15283_c);;
					jule::Ptr<_1bc2e4149_SliceExprModel> _15549_model = jule::new_ptr<_1bc2e4149_SliceExprModel>(_1bc2e4149_SliceExprModel{._field_ElemType=_152727_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15535_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15535_s);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c362b0d4:;
						if (it != expr_end) {
							jule::U8 *_155812_b = it;
							{
								jule::Ptr<_1bac25065_Const> _155910_bc = static__1bac2575d_NewU64(static_cast<jule::U64>((*(_155812_b))));;
								(*(_155910_bc))._field_Kind=(*_15433_prim.alloc)._field_Kind;
								(*(_15549_model))._field_Elems=jule::append((*_15549_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_155910_bc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1c362b0d4:;
							++it;
							goto _iter_begin_1c362b0d4;
						}
						_iter_end_1c362b0d4:;
					};
					(*_152741_d.alloc)._field_Model=jule::Any(_15549_model, &__jule_any_type80);
					(*_152741_d.alloc)._field_Decl=true;
				}
			}
			else if (_1bc4c0a1d_IsI32(_15433_prim.ptr())) {
				_case_begin_1c362a710:;
				{
					jule::Slice<jule::I32> _15665_runes = __jule_strToRunes(_1bac271cc_ReadStr(_15283_c));;
					jule::Ptr<_1bc2e4149_SliceExprModel> _15679_model = jule::new_ptr<_1bc2e4149_SliceExprModel>(_1bc2e4149_SliceExprModel{._field_ElemType=_152727_t, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, _15665_runes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
					{
						auto expr = &(_15665_runes);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c362e648:;
						if (it != expr_end) {
							jule::I32 *_157112_r = it;
							{
								jule::Ptr<_1bac25065_Const> _157210_rc = static__1bac25494_NewI64(static_cast<jule::I64>((*(_157112_r))));;
								(*(_157210_rc))._field_Kind=(*_15433_prim.alloc)._field_Kind;
								(*(_15679_model))._field_Elems=jule::append((*_15679_model.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_157210_rc, &__jule_any_type15); __jule_collection; }));
							}
							_iter_next_1c362e648:;
							++it;
							goto _iter_begin_1c362e648;
						}
						_iter_end_1c362e648:;
					};
					(*_152741_d.alloc)._field_Model=jule::Any(_15679_model, &__jule_any_type80);
					(*_152741_d.alloc)._field_Decl=true;
				}
			}
			_match_end_1c362a578:;
		};
	};
}



inline void _1bc495817_castStr(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _158227_d, jule::Ptr<_1bc247014_Token> _158237_errorToken) {
	if ((_1bc4b9451_Enum((*(_158227_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc30be20_Enum> _15848_e = _1bc4b9451_Enum((*(_158227_d))._field_Type);;
		if (((_1bc4b8b9d_Prim((*((*(_15848_e))._field_TypeSym))._field_Type.ptr()) != nullptr) && _1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*((*(_15848_e))._field_TypeSym))._field_Type).ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1bac25065_Const> _15903_c = (*(_158227_d))._field_Constant;;
	(*_158227_d.alloc)._field_Constant=nullptr;
	(*_158227_d.alloc)._field_untyped=false;
	if ((_1bc4b8b9d_Prim((*_158227_d.alloc)._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc4be610_Prim> _15944_prim = _1bc4b8b9d_Prim((*(_158227_d))._field_Type);;
		if (((!(_1bc4c103a_IsU8(_15944_prim.ptr()))) && (!(_1bc4c0a1d_IsI32(_15944_prim))))) {
			_1bc4859e4_pushErr(_self_, _158237_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1bc4b68e3_Str((*(_158227_d))._field_Type), &__jule_any_type5); __jule_collection; }));
			return;;
		};
		if ((_15903_c != nullptr)) {
			{
				
				if (_1bc4c103a_IsU8(_15944_prim.ptr())) {
					_case_begin_1c3854928:;
					{
						(*_158227_d.alloc)._field_Constant=static__1bac25ce1_NewStr(__jule_strFromByte(static_cast<jule::U8>(_1bac27980_AsU64(_15903_c))));
						(*_158227_d.alloc)._field_Model=jule::Any((*_158227_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158227_d.alloc)._field_Decl=true;
					}
				}
				else if (_1bc4c0a1d_IsI32(_15944_prim.ptr())) {
					_case_begin_1c38549c2:;
					{
						(*_158227_d.alloc)._field_Constant=static__1bac25ce1_NewStr(__jule_strFromRune(static_cast<jule::I32>(_1bac276e9_AsI64(_15903_c))));
						(*_158227_d.alloc)._field_Model=jule::Any((*_158227_d.alloc)._field_Constant, &__jule_any_type15);
						(*_158227_d.alloc)._field_Decl=true;
					}
				}
				_match_end_1c3854807:;
			};
		};
		return;;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _16157_s = _1bc4b9c04_Slc((*_158227_d.alloc)._field_Type.ptr());;
	if ((_16157_s == nullptr)) {
		_1bc4859e4_pushErr(_self_, _158237_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1bc4b68e3_Str((*(_158227_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
	jule::Ptr<_1bc4b64e7_Type> _16217_t = (*(_16157_s))._field_Elem;;
	jule::Ptr<_1bc4be610_Prim> _16223_prim = _1bc4b8b9d_Prim(_16217_t.ptr());;
	if (((_16223_prim == nullptr) || ((!(_1bc4c103a_IsU8(_16223_prim.ptr()))) && (!(_1bc4c0a1d_IsI32(_16223_prim)))))) {
		_1bc4859e4_pushErr(_self_, _158237_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1bc4b68e3_Str((*(_158227_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return;;
	};
}



inline void _1bc495c35_castInt(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _162927_t, jule::Ptr<_1bc48354c_Data> _162941_d, jule::Ptr<_1bc247014_Token> _162951_errorToken) {
	if (_1bc483e87_IsConst(_162941_d.ptr())) {
		jule::Ptr<_1bc4be610_Prim> _16314_prim = _1bc4b8b9d_Prim(_162927_t.ptr());;
		{
			
			if (_1bc37c314_IsSigInt((*(_16314_prim))._field_Kind)) {
				_case_begin_1c3336a59:;
				{
					_1bac27ebe_SetI64((*_162941_d.alloc)._field_Constant.ptr(), _1bac276e9_AsI64((*(_162941_d))._field_Constant));
				}
			}
			else if (_1bc37c622_IsUnsigInt((*(_16314_prim))._field_Kind)) {
				_case_begin_1c3336b03:;
				{
					_1bac28277_SetU64((*_162941_d.alloc)._field_Constant.ptr(), _1bac27980_AsU64((*(_162941_d))._field_Constant));
				}
			}
			_match_end_1c33369c1:;
		};
	} else {
		(*(_162941_d))._field_Constant=nullptr;
		(*_162941_d.alloc)._field_untyped=false;
	};
	if ((_1bc4b9451_Enum((*(_162941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc30be20_Enum> _16444_e = _1bc4b9451_Enum((*(_162941_d))._field_Type);;
		if (_1bc37ceb3_IsNum(_1bc4b68e3_Str((*((*(_16444_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	if ((_1bc4b8e34_Sptr((*(_162941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc4be610_Prim> _16514_prim = _1bc4b8b9d_Prim(_162927_t.ptr());;
		if ((!(_1bc4c25ad_IsUintptr(_16514_prim.ptr())))) {
			_1bc4859e4_pushErr(_self_, _162951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_162941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_162927_t), &__jule_any_type5); __jule_collection; }));
		};
		return;;
	};
	if ((_1bc4b91ba_Ptr((*(_162941_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc4be610_Prim> _16584_prim = _1bc4b8b9d_Prim(_162927_t.ptr());;
		if (_1bc4c25ad_IsUintptr(_16584_prim.ptr())) {
		} else if ((!(_1bc4864d9_isUnsafe(_self_)))) {
			_1bc4859e4_pushErr(_self_, _162951_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
		};
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _16673_prim = _1bc4b8b9d_Prim((*(_162941_d))._field_Type.ptr());;
	if (((_16673_prim != nullptr) && _1bc37ceb3_IsNum(_1bc4be984_Str(_16673_prim)))) {
		return;;
	};
	_1bc4859e4_pushErr(_self_, _162951_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_162941_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_162927_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1bc496153_castNum(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _167527_t, jule::Ptr<_1bc48354c_Data> _167541_d, jule::Ptr<_1bc247014_Token> _167551_errorToken) {
	if (_1bc483e87_IsConst(_167541_d.ptr())) {
		jule::Ptr<_1bc4be610_Prim> _16774_prim = _1bc4b8b9d_Prim(_167527_t.ptr());;
		{
			
			if (_1bc37cc2c_IsFloat((*(_16774_prim))._field_Kind)) {
				_case_begin_1c333be49:;
				{
					_1bac28a91_SetF64((*_167541_d.alloc)._field_Constant.ptr(), _1bac27c16_AsF64((*(_167541_d))._field_Constant));
				}
			}
			else if (_1bc37c314_IsSigInt((*(_16774_prim))._field_Kind)) {
				_case_begin_1c333beb0:;
				{
					_1bac27ebe_SetI64((*_167541_d.alloc)._field_Constant.ptr(), _1bac276e9_AsI64((*(_167541_d))._field_Constant));
				}
			}
			else if (_1bc37c622_IsUnsigInt((*_16774_prim.alloc)._field_Kind)) {
				_case_begin_1c333c026:;
				{
					_1bac28277_SetU64((*(_167541_d))._field_Constant, _1bac27980_AsU64((*(_167541_d))._field_Constant));
				}
			}
			_match_end_1c333bce5:;
		};
	} else {
		(*(_167541_d))._field_Constant=nullptr;
		(*_167541_d.alloc)._field_untyped=false;
	};
	if ((_1bc4b9451_Enum((*(_167541_d))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc30be20_Enum> _16924_e = _1bc4b9451_Enum((*(_167541_d))._field_Type);;
		if (_1bc37ceb3_IsNum(_1bc4b68e3_Str((*((*(_16924_e))._field_TypeSym))._field_Type.ptr()))) {
			return;;
		};
	};
	jule::Ptr<_1bc4be610_Prim> _16983_prim = _1bc4b8b9d_Prim((*(_167541_d))._field_Type.ptr());;
	if (((_16983_prim != nullptr) && _1bc37ceb3_IsNum(_1bc4be984_Str(_16983_prim)))) {
		return;;
	};
	_1bc4859e4_pushErr(_self_, _167551_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_167541_d))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_167527_t.ptr()), &__jule_any_type5); __jule_collection; }));
}



inline void _1bc496571_castPrim(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _170628_t, jule::Ptr<_1bc48354c_Data> _170642_d, jule::Ptr<_1bc247014_Token> _170652_errorToken) {
	jule::Ptr<_1bc4be610_Prim> _17073_prim = _1bc4b8b9d_Prim(_170628_t.ptr());;
	{
		
		if (_1bc4c2d61_IsAny(_17073_prim.ptr())) {
			_case_begin_1c3342e83:;
			{
				__jule_panic_s(jule::Str::lit("sema: castPrim: any case should be unreachable in this routine", 62) + jule::Str("\nlocation: std/jule/sema/eval.jule:1710:4"));;
			}
		}
		else if (_1bc4c2aca_IsStr(_17073_prim.ptr())) {
			_case_begin_1c3342ee9:;
			{
				_1bc495817_castStr(_self_, _170642_d, _170652_errorToken);
			}
		}
		else if (_1bc37c8db_IsInt(_1bc4be984_Str(_17073_prim))) {
			_case_begin_1c3343060:;
			{
				_1bc495c35_castInt(_self_, _170628_t, _170642_d, _170652_errorToken);
			}
		}
		else if (_1bc37ceb3_IsNum(_1bc4be984_Str(_17073_prim))) {
			_case_begin_1c33430c6:;
			{
				_1bc496153_castNum(_self_, _170628_t, _170642_d, _170652_errorToken);
			}
		}
		else {
			_case_begin_1c0e99ee9:;
			{
				_1bc4859e4_pushErr(_self_, _170652_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str(_170628_t), &__jule_any_type5); __jule_collection; }));
			}
		}
		_match_end_1c0e99e72:;
	};
}



inline void _1bc4968d4_castConstant(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type>* _172233_t, jule::Ptr<_1bc48354c_Data>* _172248_d) {
	if ((((*(_172248_d)) == nullptr) || (!(_1bc483e87_IsConst((*(_172248_d)).ptr()))))) {
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _17263_prim = _1bc4b8b9d_Prim((*(_172233_t)).ptr());;
	_1bc4b1a75_castConstByType(&((*(_17263_prim))._field_Kind), _172248_d);
	(*((*(_172248_d))))._field_Model=jule::Any((*((*(_172248_d))))._field_Constant, &__jule_any_type15);
}



inline void _1bc496d02_castTypeEnum(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type>* _173133_t, jule::Ptr<_1bc48354c_Data>* _173148_d, jule::Ptr<_1bc247014_Token>* _173163_errorToken) {
	jule::I32 _17323_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1bc415d4d_checkTypeCompatibility((*(_self_))._field_s, &((*((*(_173148_d))))._field_Type), _173133_t, _173163_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17323_n);;
		_1bc4859e4_pushErr(_self_, (*(_173163_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_173148_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_173133_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_173148_d))))._field_Constant=nullptr;
	(*((*(_173148_d))))._field_untyped=false;
}



inline void _1bc497220_castTypeEnumT(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type>* _174134_t, jule::Ptr<_1bc48354c_Data>* _174149_d, jule::Ptr<_1bc247014_Token>* _174164_errorToken) {
	jule::I32 _17423_n = (*((*(_self_))._field_s))._field_errors.len();;
	if ((!(_1bc415d4d_checkTypeCompatibility((*(_self_))._field_s, _174134_t, &((*((*(_174149_d))))._field_Type), _174164_errorToken)))) {
		((*((*(_self_))._field_s))._field_errors).mut_slice(0LL, _17423_n);;
		_1bc4859e4_pushErr(_self_, (*(_174164_errorToken)), static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_174149_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_174134_t)).ptr()), &__jule_any_type5); __jule_collection; }));
	};
	(*((*(_174149_d))))._field_Constant=nullptr;
	(*((*(_174149_d))))._field_untyped=false;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4976c6_evalCastByTypeNData(_1bc48551b_eval* _self_, jule::Ptr<_1bc4b64e7_Type> _175139_t, jule::Ptr<_1bc48354c_Data> _175153_d, jule::Ptr<_1bc247014_Token> _175167_errorToken) {
	if (((_175153_d != nullptr) && (*_175153_d.alloc)._field_Decl)) {
		_1bc4859e4_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		
		if (_1bc48396a_IsNil(_175153_d.ptr())) {
			_case_begin_1c3863063:;
			{
				if ((!(_1bc4b83ea_NilCompatible(_175139_t.ptr())))) {
					_1bc4859e4_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting to type @", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<nil>", 5), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_175139_t), &__jule_any_type5); __jule_collection; }));
				};
				(*_175153_d.alloc)._field_Constant=nullptr;
				(*_175153_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1bc4b8b9d_Prim((*(_175153_d))._field_Type.ptr()) != nullptr) && _1bc4c2d61_IsAny(_1bc4b8b9d_Prim((*(_175153_d))._field_Type).ptr()))) {
			_case_begin_1c3862d10:;
			{
				if ((_1bc4b96d7_TypeEnum(_175139_t.ptr()) != nullptr)) {
					_1bc4859e4_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("type enum cannot casted from any type", 37)), jule::Slice<jule::Any>());
				};
				(*_175153_d.alloc)._field_Constant=nullptr;
				(*_175153_d.alloc)._field_untyped=false;
			}
		}
		else if (((_1bc4b8b9d_Prim(_175139_t) != nullptr) && _1bc4c2d61_IsAny(_1bc4b8b9d_Prim(_175139_t).ptr()))) {
			_case_begin_1c3862d76:;
			{
				(*_175153_d.alloc)._field_Constant=nullptr;
				(*_175153_d.alloc)._field_untyped=false;
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*(_175153_d))._field_Type) != nullptr)) {
			_case_begin_1c3862ddc:;
			{
				_1bc496d02_castTypeEnum(_self_, &(_175139_t), &(_175153_d), &(_175167_errorToken));
			}
		}
		else if ((_1bc4b96d7_TypeEnum(_175139_t) != nullptr)) {
			_case_begin_1c3862e53:;
			{
				_1bc497220_castTypeEnumT(_self_, &(_175139_t), &(_175153_d), &(_175167_errorToken));
			}
		}
		else if ((_1bc4b91ba_Ptr(_175139_t) != nullptr)) {
			_case_begin_1c3863c34:;
			{
				_1bc49474a_castPtr(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_1bc4b8e34_Sptr(_175139_t) != nullptr)) {
			_case_begin_1c3863c9a:;
			{
				_1bc495086_castRef(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_1bc4b9c04_Slc(_175139_t) != nullptr)) {
			_case_begin_1c3863d11:;
			{
				_1bc4954a4_castSlc(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_1bc4ba221_Struct(_175139_t) != nullptr)) {
			_case_begin_1c3863d77:;
			{
				_1bc494b68_castStruct(_self_, _175139_t, _175153_d, _175167_errorToken);
			}
		}
		else if ((_1bc4b8b9d_Prim(_175139_t) != nullptr)) {
			_case_begin_1c3863ddd:;
			{
				_1bc496571_castPrim(_self_, _175139_t, _175153_d, _175167_errorToken);
				_1bc4968d4_castConstant(_self_, &(_175139_t), &(_175153_d));
			}
		}
		else {
			_case_begin_1c3862bcd:;
			{
				_1bc4859e4_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("type @ not supports casting", 27)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str(_175139_t), &__jule_any_type5); __jule_collection; }));
				_175153_d=nullptr;
			}
		}
		_match_end_1c3862b67:;
	};
	if ((_175153_d == nullptr)) {
		return nullptr;;
	};
	if ((_1bc4b7394_Binded(_175139_t.ptr()) || _1bc4b7394_Binded((*(_175153_d))._field_Type.ptr()))) {
		if ((!(_1bc4864d9_isUnsafe(_self_)))) {
			_1bc4859e4_pushErr(_self_, _175167_errorToken, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
			_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("casting binded types require using Unsafe Jule, use Unsafe Jule with unsafe {} scope", 84)), jule::Slice<jule::Any>());
		};
	};
	(*(_175153_d))._field_Mutable=((*_175153_d.alloc)._field_Mutable || (!(_1bc4b7dcd_Mutable((*_175153_d.alloc)._field_Type.ptr()))));
	if (((!((*_175153_d.alloc)._field_Decl)) && ((_1bc4b9451_Enum((*(_175153_d))._field_Type) == nullptr) || (!(_1bc4b6c34_Equal((*((*(_1bc4b9451_Enum((*(_175153_d))._field_Type)))._field_TypeSym))._field_Type, _175139_t)))))) {
		_1bc4b0854_applyCastKind(&((*(_self_))._field_s), &(_175153_d), &(_175139_t), &(_175167_errorToken), _1bc488a2a_getOwnerRefers(_self_));
		(*((*(_175153_d))._field_Model.cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96)))._field_Token=_175167_errorToken;
	} else {
		(*_175153_d.alloc)._field_Type=_175139_t;
	};
	(*_175153_d.alloc)._field_Decl=false;
	(*_175153_d.alloc)._field_Lvalue=false;
	(*_175153_d.alloc)._field_untyped=false;
	if (_1bc483e87_IsConst(_175153_d)) {
		(*((*_175153_d.alloc)._field_Constant))._field_Kind=(*(_1bc4b8b9d_Prim(_175139_t.ptr())))._field_Kind;
	};
	return _175153_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc497b7c_evalCastT(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc4b64e7_Type>* _183631_t, jule::Ptr<_1bc261c43_Expr>* _183646_e, jule::Ptr<_1bc247014_Token>* _183666_et) {
	jule::Ptr<_1bc4b64e7_Type> _18377_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_18377_prefix;
	});;
	if ((_1bc4b9c04_Slc((*(_183631_t)).ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_183646_e))))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type97) {
				_case_begin_1c3647243:;
				{
					(*_self_.alloc)._field_prefix=(*(_183631_t));
				}
			}
			_match_end_1c36471bb:;
		};
	};
	jule::Ptr<_1bc48354c_Data> _18467_d = _1bc4a4309_evalExpr(_self_, (*(_183646_e)));;
	if (((_18467_d == nullptr) || ((*_self_.alloc)._field_prefix != nullptr))) {
		return _18467_d;;
	};
	return _1bc4976c6_evalCastByTypeNData(_self_, (*(_183631_t)), _18467_d, (*(_183666_et)));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc497ebd_evalCast(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2645a3_CastExpr> _185329_c) {
	jule::Ptr<_1bc4bdc08_TypeSym> _18547_t = _1bc3cc4da_buildType((*(_185329_c))._field_Kind);;
	jule::Bool _18553_ok = _1bc412ee3_checkTypeSym((*(_self_))._field_s, &(_18547_t), (*_self_.alloc)._field_lookup);;
	if ((!(_18553_ok))) {
		return nullptr;;
	};
	return _1bc497b7c_evalCastT(_self_, &((*(_18547_t))._field_Type), &((*_185329_c.alloc)._field_Expr), &((*((*_185329_c.alloc)._field_Kind))._field_Token));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49830e_evalNamespace(_1bc48551b_eval* _self_, jule::Ptr<_1bc26497c_NamespaceExpr> _186233_s) {
	jule::Ptr<_1bc3dcb9e_ImportInfo> _18637_imp = _1bc4b3e1d_findNamespace((*(_self_))._field_lookup, (*((*(_186233_s))._field_Namespace))._field_Kind);;
	if ((_18637_imp == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*_186233_s.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_186233_s))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Trait _18697_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_18637_imp, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data2);
	;
	_1bc486253_disallowBuiltin(_self_);
	jule::Any _18747_def = _1bc488794_getDef(_self_, &((*((*_186233_s.alloc)._field_Ident))._field_Kind), false);;
	_1bc486055_allowBuiltin(_self_);
	(*(_self_))._field_lookup=_18697_lookup;
	jule::Ptr<_1bc48354c_Data> _18777_d = _1bc48c952_evalDef(_self_, &(_18747_def), (*_186233_s.alloc)._field_Ident);;
	return _18777_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4987b5_evalStructLitExplicit(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc2810c5_StructIns> _188142_s, jule::Slice<jule::Ptr<_1bc261c43_Expr>> _18827_exprs, jule::Ptr<_1bc247014_Token> _188232_errorToken) {
	jule::Bool _18833_ok = _1bc40e42e_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_188142_s))._field_Decl))._field_Generics.len(), (*_188142_s.alloc)._field_Generics.len(), _188232_errorToken);;
	if ((!(_18833_ok))) {
		return nullptr;;
	};
	if ((((*_self_.alloc)._field_field != nullptr) && ((*((*(*(_self_))._field_field.alloc)._field_Decl))._field_Owner == (*_188142_s.alloc)._field_Decl))) {
		_1bc4859e4_pushErr(_self_, _188232_errorToken, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_188142_s))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
	};
	_1c14d8c96_pushReference(_self_, &(_188142_s));
	_1bc48ab4d_checkDeprecated(_self_, &((*(*(_188142_s))._field_Decl.alloc)._field_Directives), _188232_errorToken);
	_1bc47ad80_structLitChecker _18967_slc = _1bc47ad80_structLitChecker{._field_e=_self_, ._field_errorToken=_188232_errorToken, ._field_s=_188142_s, ._field_args=jule::Slice<jule::Ptr<_1bc2e2697_StructArgExprModel>>(nullptr)};;
	_1bc47c601_check(&_18967_slc, &(_18827_exprs));
	jule::Ptr<_1bc48354c_Data> _19037_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_188142_s, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)}), ._field_Mutable=(*(_self_))._field_target._field_mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1bc2e2a3d_StructLitExprModel>(_1bc2e2a3d_StructLitExprModel{._field_Strct=_188142_s, ._field_Args=_18967_slc._field_args}), &__jule_any_type98), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	if ((*(*(_188142_s))._field_Decl.alloc)._field_Binded) {
		(*((*(_19037_d))._field_Type))._field_BindIdent=(*(*(_188142_s))._field_Decl.alloc)._field_Ident;
	};
	return _19037_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc498b06_evalStructLit(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc266c8c_StructLit> _191934_lit) {
	jule::Ptr<_1bc4bdc08_TypeSym> _19207_t = _1bc3cc4da_buildType((*(_191934_lit))._field_Kind);;
	jule::Bool _19213_ok = _1bc412ee3_checkTypeSym((*(_self_))._field_s, &(_19207_t), (*_self_.alloc)._field_lookup);;
	if ((!(_19213_ok))) {
		return nullptr;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _19267_s = _1bc4ba221_Struct((*(_19207_t))._field_Type.ptr());;
	if ((_19267_s == nullptr)) {
		if ((_1bc4b8e34_Sptr((*(_19207_t))._field_Type) != nullptr)) {
			_19267_s=_1bc4ba221_Struct((*(_1bc4b8e34_Sptr((*(_19207_t))._field_Type)))._field_Elem.ptr());
			if ((_19267_s != nullptr)) {
				goto _julec_label_1c38868d3;
			};
		};
		_1bc4859e4_pushErr(_self_, (*((*_191934_lit.alloc)._field_Kind))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c38868d3:;
	jule::Ptr<_1bc48354c_Data> _19397_d = _1bc4987b5_evalStructLitExplicit(_self_, _19267_s, (*_191934_lit.alloc)._field_Exprs, (*((*_191934_lit.alloc)._field_Kind))._field_Token);;
	if ((_1bc4b8e34_Sptr((*(_19207_t))._field_Type) != nullptr)) {
		jule::Ptr<_1bc2e2a3d_StructLitExprModel> _19418_model = (*(_19397_d))._field_Model.cast_ptr<_1bc2e2a3d_StructLitExprModel>(&__jule_any_type98);;
		_1bc4ad698_makeStructLitAlloc(&(_19397_d), &(_19418_model));
	};
	return _19397_d;;
}



inline _1bc4c88e4_typeChecker _1bc498d8c_typeChecker(_1bc48551b_eval* _self_) {
	return _1bc411c8e_typeChecker((*(_self_))._field_s, (*(_self_))._field_lookup, nullptr, nullptr);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4991cd_evalType(_1bc48551b_eval* _self_, jule::Ptr<_1bc25c90e_TypeDecl> _195128_t) {
	jule::Ptr<_1bc4bdc08_TypeSym> _19527_tk = _1bc3cc4da_buildType(_195128_t);;
	jule::Bool _19533_ok = _1bc412ee3_checkTypeSym((*(_self_))._field_s, &(_19527_tk), (*(_self_))._field_lookup);;
	if ((!(_19533_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=(*(_19527_tk))._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any((*_19527_tk.alloc)._field_Type, &__jule_any_type87), ._field_Decl=true, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline void _1bc499541_callTypeFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr>* _196432_fc, jule::Ptr<_1bc48354c_Data>* _196459_d) {
	if (((*((*(_196432_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*(_196432_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
	} else if (((*((*(_196432_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*((*(_196432_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_196459_d))))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	} else if ((*((*(_196432_fc))))._field_IsCo) {
		_1bc4859e4_pushErr(_self_, (*((*(_196432_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls are not allowed for type-cast calls", 52)), jule::Slice<jule::Any>());
		(*(_196459_d))=nullptr;
		return;;
	} else if (((*((*(_196432_fc))))._field_Exception != nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_196432_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals are not supported for type-cast call", 49)), jule::Slice<jule::Any>());
		(*(_196459_d))=nullptr;
		return;;
	};
	if (((*((*(_196432_fc))))._field_Args.len() > 0LL)) {
		jule::Ptr<_1bc261c43_Expr> _19808_arg = (*((*(_196432_fc))))._field_Args[0LL];;
		(*(_196459_d))=_1bc497b7c_evalCastT(_self_, &((*((*(_196459_d))))._field_Type), &(_19808_arg), &((*(_19808_arg))._field_Token));
		return;;
	};
	if (((*(_196459_d)) != nullptr)) {
		(*((*(_196459_d))))._field_Decl=false;
	};
}



inline void _1bc4998a4_callBuiltinFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr>* _199035_fc, jule::Ptr<_1bc48354c_Data>* _199062_d) {
	if ((!(_1bc265d24_Unhandled((*(_199035_fc)).ptr())))) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*(_199035_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	(*(_199062_d))=(*(_1bc4b9e8a_Fn((*((*(_199062_d))))._field_Type.ptr())))._field_caller(&(_self_), _199035_fc, _199062_d);
	if (((*(_199062_d)) == nullptr)) {
		return;;
	};
	(*((*(_199062_d))))._field_Mutable=true;
}



inline void _1bc499c17_checkFnOfConcurrentCall(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns>* _200240_f, jule::Ptr<_1bc247014_Token> _200251_errorToken) {
	if (_1bc4864d9_isUnsafe(_self_)) {
		return;;
	};
	{
		auto expr = &((*((*(_200240_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3895925:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> *_200610_p = it;
			{
				if (_1bc2ecbd0_IsSelf((*((*(_200610_p))))._field_Decl.ptr())) {
					if ((!(_1bc2ece66_IsRef((*((*(_200610_p))))._field_Decl)))) {
						_1bc4859e4_pushErr(_self_, _200251_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with methods which is has \"self\" receiver parameter", 97)), jule::Slice<jule::Any>());
						_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"&self\" receiver parameter instead, or Unsafe Jule with unsafe {} scope to make concurrent call", 99)), jule::Slice<jule::Any>());
					};
				};
				if ((*((*((*(_200610_p))))._field_Decl))._field_Reference) {
					_1bc4859e4_pushErr(_self_, _200251_errorToken, static_cast<jule::Str>(jule::Str::lit("Safe Jule not allows to make concurrent calls with functions which is has reference parameter(s)", 96)), jule::Slice<jule::Any>());
					_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use Unsafe Jule with unsafe {} scope to make concurrent call", 60)), jule::Slice<jule::Any>());
					return;;
				};
			}
			_iter_next_1c3895925:;
			++it;
			goto _iter_begin_1c3895925;
		}
		_iter_end_1c3895925:;
	};
}



inline void _1bc49a135_processExceptionalHandler(_1bc48551b_eval* _self_, jule::Ptr<_1bc302113_FnIns>* _202146_f, jule::Ptr<_1bc26596c_FnCallExpr>* _202162_fc, jule::Ptr<_1bc48354c_Data>* _202189_d) {
	jule::Bool _20223_resultNeeded = ((!((*(_self_))._field_target._field_ignored)) && (!(_1bc2ee50b_IsVoid((*((*(_202146_f))))._field_Decl.ptr()))));;
	jule::Ptr<_1bc3b448e_scopeChecker> _202311_csc = nullptr;;
	jule::Ptr<_1bc3abd27_Scope> _202411_ch = nullptr;;
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _20267_model = (*((*(_202189_d))))._field_Model.cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31);;
	jule::Ptr<_1bc3b448e_scopeChecker> _20307_sc = (*(_self_))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1);;
	_202311_csc=_1bc3c689c_newChildChecker(_20307_sc);
	if (_20223_resultNeeded) {
		(*(_202311_csc))._field_result=jule::new_ptr<_1bc3b349e_result>(_1bc3b349e_result{._field_func=(*(_202146_f)), ._field_mutable=(*(_self_))._field_target._field_mutable});
	};
	_202411_ch=_1bc3b9b48_getChild(_20307_sc);
	(*((*((*(_202162_fc))))._field_Exception))._field_Parent=(*_20307_sc.alloc)._field_tree;
	(*((*(_202311_csc))._field_table))._field_Vars=jule::append((*(*(_202311_csc))._field_table.alloc)._field_Vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc4ada1c_buildErrorVar(&(_202411_ch), _202162_fc); __jule_collection; }));
	_1bc3ba066_checkChildSsc(_20307_sc, &((*((*(_202162_fc))))._field_Exception), &(_202411_ch), &(_202311_csc));
	(*(_20267_model))._field_Assigned=_20223_resultNeeded;
	(*_20267_model.alloc)._field_Except=_202411_ch;
	if ((_20223_resultNeeded && ((*(_202311_csc))._field_result != nullptr))) {
		_1bc4859e4_pushErr(_self_, (*((*(_202162_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptional returns an expression, therefore else block should return expression", 80)), jule::Slice<jule::Any>());
	};
}



inline void _1bc49a498_callFn(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr>* _204828_fc, jule::Ptr<_1bc48354c_Data>* _204855_d) {
	jule::Ptr<_1bc302113_FnIns> _20497_f = _1bc4b9e8a_Fn((*((*(_204855_d))))._field_Type.ptr());;
	if (_1bc3035cb_IsBuiltin(_20497_f.ptr())) {
		_1bc4998a4_callBuiltinFn(_self_, _204828_fc, _204855_d);
		return;;
	};
	if (((!(_1bc2ee792_IsMethod((*(_20497_f))._field_Decl.ptr()))) && _1bc4d2a63_hasDirective(&((*(*(_20497_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you cannot call test functions", 30)), jule::Slice<jule::Any>());
		(*(_204855_d))=nullptr;
		return;;
	};
	if (((((!((*((*(_204855_d))))._field_Mutable)) && _1bc2ee792_IsMethod((*(_20497_f))._field_Decl.ptr())) && (!((*(*(_20497_f))._field_Decl.alloc)._field_Statically))) && (*((*(*(_20497_f))._field_Decl.alloc)._field_Params[0LL]))._field_Mutable)) {
		if ((*(_self_))._field_target._field_mutable) {
			_1bc4859e4_pushErr(_self_, (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		} else {
			jule::Ptr<_1bc2e2a3d_StructLitExprModel> _20695_lit = _1bc4b2bec_isLitBased(&((*((*(_204855_d))))._field_Model));;
			if ((_20695_lit == nullptr)) {
				_1bc4859e4_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
			} else {
				_1bc47a896_checkMutRiskOfStructLit(&((*(_self_))._field_s), &(_20695_lit));
			};
		};
	} else if (((!(_1bc4864d9_isUnsafe(_self_.ptr()))) && (*((*(_20497_f))._field_Decl))._field_Unsafety)) {
		_1bc4859e4_pushErr(_self_, (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	jule::Bool _20817_dynamicAnnotation = ((((*((*(_20497_f))._field_Decl))._field_Generics.len() > 0LL) && ((*_20497_f.alloc)._field_Generics.len() == 0LL)) && ((*_20497_f.alloc)._field_Params.len() > 0LL));;
	if (_20817_dynamicAnnotation) {
		(*_20497_f.alloc)._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc((*(*(_20497_f))._field_Decl.alloc)._field_Generics.len(), (*(*(_20497_f))._field_Decl.alloc)._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b4b11_InsGeneric>(nullptr); __jule_collection; });
	} else if (((*_20497_f.alloc)._field_Generics.len() != (*(*(_20497_f))._field_Decl.alloc)._field_Generics.len())) {
		_1bc40e42e_checkGenericQuantity((*(_self_))._field_s.ptr(), (*(*(_20497_f))._field_Decl.alloc)._field_Generics.len(), (*_20497_f.alloc)._field_Generics.len(), (*((*(_204828_fc))))._field_Token);
		(*(_204855_d))=nullptr;
		return;;
	};
	jule::Ptr<_1bc409eeb_sema> _20907_old = (*(_self_))._field_s;;
	if (((*(*(_20497_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		(*_self_.alloc)._field_s=(*(*((*(_20497_f))._field_Decl))._field_Owner.alloc)._field_sema;
	};
	__JULE_DEFER({
		if ((_20907_old != (*_self_.alloc)._field_s)) {
			(*(_20907_old))._field_errors=jule::append((*_20907_old.alloc)._field_errors,(*((*_self_.alloc)._field_s))._field_errors);
			(*(*(_self_))._field_s.alloc)._field_errors=nullptr;
		};
		(*_self_.alloc)._field_s=_20907_old;
	});;
	_1bc477e48_fnCallArgChecker _21037_fcac = _1bc477e48_fnCallArgChecker{._field_e=_self_, ._field_args=(*((*(_204828_fc))))._field_Args, ._field_errorToken=(*((*(_204828_fc))))._field_Token, ._field_f=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_dynamicAnnotation=_20817_dynamicAnnotation, ._field_argModels=jule::Slice<jule::Any>(nullptr), ._field_ignored=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)};;
	if ((!(_20817_dynamicAnnotation))) {
		if ((!((*_20497_f.alloc)._field_reloaded))) {
			jule::Bool _21125_ok = _1bc418c63_reloadFnInsTypes((*(_self_))._field_s, _20497_f);;
			(*_20497_f.alloc)._field_reloaded=true;
			if ((!(_21125_ok))) {
				(*(_204855_d))=nullptr;
				return;;
			};
		};
		jule::Ptr<_1bc302113_FnIns> _21198_existInstance = _1bc300b06_appendInstance((*(_20497_f))._field_Decl, &(_20497_f));;
		if ((_21198_existInstance != nullptr)) {
			_20497_f=_21198_existInstance;
		};
	} else if ((!(_1bc4170c4_buildFnNonGenericTypes((*(_self_))._field_s, _20497_f, &(_21037_fcac._field_ignored))))) {
		(*(_204855_d))=nullptr;
		return;;
	};
	_21037_fcac._field_f=_20497_f;
	jule::Bool _21307_ok = false;;
	if (((*(*(_20497_f))._field_Decl.alloc)._field_Owner != nullptr)) {
		std::swap(_20907_old, (*(_self_))._field_s);
		_21307_ok=_1bc47a533_check(&_21037_fcac);
		std::swap(_20907_old, (*(_self_))._field_s);
	} else {
		_21307_ok=_1bc47a533_check(&_21037_fcac);
	};
	if (_20817_dynamicAnnotation) {
		if ((!(_21307_ok))) {
			(*(_204855_d))=nullptr;
			return;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc492847_checkGenericFn(_self_, &(_20497_f), &((*((*(_204828_fc))))._field_Token), &((*((*(_204855_d))))._field_Model));
			_21307_ok = __jule_assign_result.__jule_result_arg0;
		});
		if ((!(_21307_ok))) {
			(*(_204855_d))=nullptr;
			return;;
		};
	};
	jule::Any _21517_callModel = (*((*(_204855_d))))._field_Model;;
	if (_1bc2ee50b_IsVoid((*(_20497_f))._field_Decl)) {
		(*(_204855_d))=_1bc4b0a63_buildVoidData();
	} else {
		(*((*(_204855_d))))._field_Type=(*_20497_f.alloc)._field_Result;
		(*((*(_204855_d))))._field_Lvalue=false;
	};
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _21607_model = jule::new_ptr<_1bc2e3c70_FnCallExprModel>(_1bc2e3c70_FnCallExprModel{._field_Token=(*((*(_204828_fc))))._field_Token, ._field_Func=_20497_f, ._field_IsCo=(*((*(_204828_fc))))._field_IsCo, ._field_Expr=_21517_callModel, ._field_Args=_21037_fcac._field_argModels, ._field_Except=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Assigned=false});;
	(*((*(_204855_d))))._field_Model=jule::Any(_21607_model, &__jule_any_type31);
	(*((*(_204855_d))))._field_Mutable=true;
	if ((*(*(_20497_f))._field_Decl.alloc)._field_Exceptional) {
		if ((*((*(_204828_fc))))._field_IsCo) {
			_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("concurrent calls not supports exceptionals", 42)), jule::Slice<jule::Any>());
			_1bc40d263_pushSuggestion((*(_self_))._field_s, static_cast<jule::Str>(jule::Str::lit("handle exceptional in a separate function or anonymous function", 63)), jule::Slice<jule::Any>());
		};
		{
			
			if (_1bc265d24_Unhandled((*(_204828_fc)).ptr())) {
				_case_begin_1c365883c:;
				{
					_1bc4859e4_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("exceptionals must be handled", 28)), jule::Slice<jule::Any>());
					_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use \"!\" operator after exceptional to handle it", 47)), jule::Slice<jule::Any>());
				}
			}
			else if (_1bc2660aa_Ignored((*(_204828_fc)).ptr())) {
				_case_begin_1c365851d:;
				{
					goto _match_end_1c3657022;
				}
			}
			else {
				_case_begin_1c3657088:;
				{
					_1bc49a135_processExceptionalHandler(_self_.ptr(), &(_20497_f), _204828_fc, _204855_d);
				}
			}
			_match_end_1c3657022:;
		};
	} else if ((!(_1bc265d24_Unhandled((*(_204828_fc)).ptr())))) {
		_1bc4859e4_pushErr(_self_.ptr(), (*((*(_204828_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("non-exceptionals cannot handled like exceptionals", 49)), jule::Slice<jule::Any>());
	};
	if ((*((*(_204828_fc))))._field_IsCo) {
		(*((*(_21607_model))._field_Func))._field_AsAnon=true;
		(*(*(_21607_model))._field_Func.alloc)._field_CalledCo=true;
		_1bc499c17_checkFnOfConcurrentCall(_self_.ptr(), &((*_21607_model.alloc)._field_Func), (*((*(_204828_fc))))._field_Token);
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49a7d9_evalFnCall(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26596c_FnCallExpr> _219731_fc) {
	jule::Ptr<_1bc4b64e7_Type> _21987_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_21987_prefix;
	});;
	{
		auto &_match_expr{ (*((*(_219731_fc))._field_Expr))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c365e14a:;
			{
				if (((*((*((*(_219731_fc))._field_Expr))._field_Token))._field_Kind == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
					return _1bc53dc56_builtinCallerError(&(_self_), &(_219731_fc));;
				};
			}
		}
		_match_end_1c365e0c3:;
	};
	jule::Ptr<_1bc48354c_Data> _22117_d = _1bc4a34e5_evalExprKind(_self_, (*((*(_219731_fc))._field_Expr))._field_Kind);;
	if ((_22117_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_22117_d))._field_Decl) {
		_1bc499541_callTypeFn(_self_, &(_219731_fc), &(_22117_d));
		return _22117_d;;
	};
	if ((_1bc4b9e8a_Fn((*(_22117_d))._field_Type.ptr()) == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*_219731_fc.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("attempting to call a non-function", 33)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc49a498_callFn(_self_, &(_219731_fc), &(_22117_d));
	return _22117_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49abd5_evalEnumStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc30be20_Enum> _223034_enm, jule::Ptr<_1bc247014_Token> _223050_ident) {
	jule::Ptr<_1bc30b3b4_EnumItem> _22317_item = _1bc30ca47_FindItem(_223034_enm.ptr(), (*(_223050_ident))._field_Kind);;
	if ((_22317_item == nullptr)) {
		_1bc4859e4_pushErr(_self_, _223050_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_223034_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_223050_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _1bc4b2933_evalEnumStatic(&((*(_self_))._field_s), &(_223034_enm), &(_22317_item), &(_223050_ident), _1bc488a2a_getOwnerRefers(_self_));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49b0d1_evalTypeEnumStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc30d62a_TypeEnum> _223838_enm, jule::Ptr<_1bc247014_Token> _223854_ident) {
	jule::Ptr<_1bc30d053_TypeEnumItem> _22397_item = _1bc30e21e_FindItem(_223838_enm.ptr(), (*(_223854_ident))._field_Kind);;
	if ((_22397_item == nullptr)) {
		_1bc4859e4_pushErr(_self_, _223854_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_223838_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_223854_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if ((_1bc4b9451_Enum((*((*(_22397_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3667e9a:;
			{
				return _1bc489124__evalEnum(_self_, _1bc4b9451_Enum((*((*(_22397_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*((*(_22397_item))._field_TypeSym))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c36660ec:;
			{
				return _1bc489861__evalTypeEnum(_self_, _1bc4b96d7_TypeEnum((*((*(_22397_item))._field_TypeSym))._field_Type));;
			}
		}
		else if ((_1bc4ba221_Struct((*((*(_22397_item))._field_TypeSym))._field_Type) != nullptr)) {
			_case_begin_1c3666163:;
			{
				return _1bc48a09d__evalStruct(_self_, _1bc4ba221_Struct((*((*(_22397_item))._field_TypeSym))._field_Type));;
			}
		}
		else {
			_case_begin_1c3666086:;
			{
				jule::Ptr<_1bc48354c_Data> _22528_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=(*(*(_22397_item))._field_TypeSym.alloc)._field_Type, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=true, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
				(*(_22528_d))._field_Model=jule::Any((*_22528_d.alloc)._field_Type, &__jule_any_type87);
				return _22528_d;;
			}
		}
		_match_end_1c3666251:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49b4cc_evalStructStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc2810c5_StructIns> _226136_s, jule::Ptr<_1bc247014_Token> _226151_ident) {
	jule::Ptr<_1bc48354c_Data> _22627_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	;
	jule::Ptr<_1bc2ee055_Fn> _22667_method = _1bc282170_FindMethod(_226136_s.ptr(), (*(_226151_ident))._field_Kind, true);;
	if ((_22667_method != nullptr)) {
		if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*_22667_method.alloc)._field_Public, (*_22667_method.alloc)._field_Token)))) {
			_1bc4859e4_pushErr(_self_, _226151_ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_226151_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		jule::Ptr<_1bc302113_FnIns> _22738_ins = _1bc3007e8_instance(_22667_method);;
		(*(_22738_ins))._field_Owner=_226136_s;
		_1c14e4c91_pushReference(_self_, &(_22738_ins));
		(*_22627_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e6ba7_StructStaticIdentExprModel>(_1bc2e6ba7_StructStaticIdentExprModel{._field_Structure=_226136_s, ._field_Expr=(*_22627_d.alloc)._field_Model, ._field_Method=_22738_ins}), &__jule_any_type99);
		(*_22627_d.alloc)._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_22738_ins, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)});
		return _22627_d;;
	};
	jule::Ptr<_1bc42dc12_Var> _22877_sttc = _1bc282802_FindStatic(_226136_s, (*_226151_ident.alloc)._field_Kind);;
	if ((_22877_sttc != nullptr)) {
		return _1bc48c15a_evalVar(_self_, _22877_sttc, _226151_ident);;
	};
	_1bc4859e4_pushErr(_self_, _226151_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_226136_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_226151_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49b983_evalTraitSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _229637_d, jule::Ptr<_1bc309769_Trait> _229651_trt, jule::Ptr<_1bc247014_Token> _229668_ident) {
	jule::Ptr<_1bc2ee055_Fn> _22977_f = _1bc30a44b_FindMethod(_229651_trt.ptr(), (*(_229668_ident))._field_Kind);;
	if ((_22977_f == nullptr)) {
		_1bc4859e4_pushErr(_self_, _229668_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_229651_trt.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_229668_ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc3007e8_instance(_22977_f), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)}), ._field_Mutable=(*(_229637_d))._field_Mutable, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1bc2e5e70_TraitSubIdentExprModel>(_1bc2e5e70_TraitSubIdentExprModel{._field_Token=_229668_ident, ._field_Expr=(*_229637_d.alloc)._field_Model, ._field_Method=_22977_f, ._field_Trt=_229651_trt}), &__jule_any_type100), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49bee4_evalStructSubIdentField(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _231844_d, jule::Ptr<_1bc2810c5_StructIns>* _231859_s, jule::Ptr<_1bc247014_Token>* _231879_tok, jule::Ptr<_1bc280525_FieldIns>* _2318104_f) {
	jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _23197_model = jule::new_ptr<_1bc2e6811_StructSubIdentExprModel>(_1bc2e6811_StructSubIdentExprModel{._field_Token=(*(_231879_tok)), ._field_Expr=jule::new_ptr<_1bc48354c_Data>((*((*(_231844_d))))), ._field_Method=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Field=(*(_2318104_f)), ._field_Owner=(*(_231859_s))});;
	(*((*(_231844_d))))._field_Model=jule::Any(_23197_model, &__jule_any_type101);
	(*((*(_231844_d))))._field_Type=(*((*(_2318104_f))))._field_Type;
	(*((*(_231844_d))))._field_Lvalue=true;
	if (((*((*((*(_2318104_f))))._field_Decl))._field_Mutable && (!((*((*(_231844_d))))._field_Mutable)))) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
				_case_begin_1c3348395:;
				{
					jule::Ptr<_1bc3b448e_scopeChecker> _23345_scope = _1bc3b7b02_getHardRoot((*(_self_))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1));;
					(*((*(_231844_d))))._field_Mutable=(((*(_23345_scope))._field_owner != nullptr) && ((*(*(_23345_scope))._field_owner.alloc)._field_Owner == (*(_231859_s))));
				}
			}
			_match_end_1c334832e:;
		};
	};
	return (*(_231844_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49c610_evalStructSubIdentMethod(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _234345_d, jule::Ptr<_1bc2810c5_StructIns>* _234360_s, jule::Ptr<_1bc247014_Token>* _234380_tok, jule::Ptr<_1bc2ee055_Fn>* _2343105_m, jule::Bool _2343113_ref) {
	if ((_1bc2ece66_IsRef((*((*(_2343105_m))))._field_Params[0LL].ptr()) && (!(_2343113_ref)))) {
		_1bc4859e4_pushErr(_self_, (*(_234380_tok)), static_cast<jule::Str>(jule::Str::lit("reference method cannot use with non-reference instance", 55)), jule::Slice<jule::Any>());
	};
	_1bc48ab4d_checkDeprecated(_self_, &((*((*(_2343105_m))))._field_Directives), (*(_234380_tok)));
	jule::Ptr<_1bc302113_FnIns> _23507_ins = _1bc3007e8_instance((*(_2343105_m)));;
	(*(_23507_ins))._field_Owner=(*(_234360_s));
	_1c14e4c91_pushReference(_self_, &(_23507_ins));
	jule::Ptr<_1bc48354c_Data> _23537_model = jule::new_ptr<_1bc48354c_Data>((*((*(_234345_d)))));;
	(*((*(_234345_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e6811_StructSubIdentExprModel>(_1bc2e6811_StructSubIdentExprModel{._field_Token=(*(_234380_tok)), ._field_Expr=_23537_model, ._field_Method=_23507_ins, ._field_Field=jule::Ptr<_1bc280525_FieldIns>(nullptr), ._field_Owner=(*(_234360_s))}), &__jule_any_type101);
	(*((*(_234345_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_23507_ins, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)});
	return (*(_234345_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49cb71_evalStructSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _236438_d, jule::Ptr<_1bc2810c5_StructIns> _236452_s, jule::Ptr<_1bc264d56_SubIdentExpr> _236471_si, jule::Bool _236495_ref) {
	jule::Ptr<_1bc280525_FieldIns> _23657_f = _1bc2824b1_FindField(_236452_s.ptr(), (*((*(_236471_si))._field_Ident))._field_Kind);;
	if ((_23657_f != nullptr)) {
		if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*_23657_f.alloc)._field_Decl))._field_Public, (*(*(_23657_f))._field_Decl.alloc)._field_Token)))) {
			_1bc4859e4_pushErr(_self_, (*_236471_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_23657_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
			_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
		};
		return _1bc49bee4_evalStructSubIdentField(_self_, &(_236438_d), &(_236452_s), &((*_236471_si.alloc)._field_Ident), &(_23657_f));;
	};
	;
	jule::Ptr<_1bc2ee055_Fn> _23757_m = _1bc282170_FindMethod(_236452_s.ptr(), (*((*_236471_si.alloc)._field_Ident))._field_Kind, false);;
	if ((_23757_m == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*_236471_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*_236452_s.alloc)._field_Decl))._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*(*(_236471_si))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*(_23757_m))._field_Public, (*_23757_m.alloc)._field_Token)))) {
		_1bc4859e4_pushErr(_self_, (*_236471_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("inaccessible identifier: @ is private", 37)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_23757_m.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
		_1bc485d57_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("make public with capital letter identifier to access", 52)), jule::Slice<jule::Any>());
	};
	return _1bc49c610_evalStructSubIdentMethod(_self_, &(_236438_d), &(_236452_s), &((*_236471_si.alloc)._field_Ident), &(_23757_m), _236495_ref);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc49ceb2_evalIntTypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _238833_ident) {
	;
	{
		auto &_match_expr{ (*(_238833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c3358938:;
			{
				jule::Ptr<_1bac25065_Const> _23928_c = static__1bac25494_NewI64(_1bc37a851_MaxI(jule::Str::lit("int", 3)));;
				(*(_23928_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a58d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_23928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_23928_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c335954e:;
			{
				jule::Ptr<_1bac25065_Const> _24018_c = static__1bac25494_NewI64(static_cast<jule::I64>(_1bc37ae5b_Min(jule::Str::lit("int", 3))));;
				(*(_24018_c))._field_Kind=jule::Str::lit("int", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a58d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24018_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24018_c});;
			}
		}
		else {
			_case_begin_1c3355d64:;
			{
				_1bc4859e4_pushErr(_self_, _238833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("int", 3), &__jule_any_type5); (*it++) = jule::Any((*(_238833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c335855e:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49d303_evalUintTypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _241534_ident) {
	;
	{
		auto &_match_expr{ (*(_241534_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c335cac4:;
			{
				jule::Ptr<_1bac25065_Const> _24198_c = static__1bac2575d_NewU64(_1bc37ab1a_MaxU(jule::Str::lit("uint", 4)));;
				(*(_24198_c))._field_Kind=jule::Str::lit("uint", 4);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a1c5_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24198_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24198_c});;
			}
		}
		else {
			_case_begin_1c335b96e:;
			{
				_1bc4859e4_pushErr(_self_, _241534_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("uint", 4), &__jule_any_type5); (*it++) = jule::Any((*(_241534_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c335c6ea:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49d644_evalI8TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _243332_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_243332_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c378e2ad:;
			{
				jule::Ptr<_1bac25065_Const> _24398_c = static__1bac25494_NewI64(127LL);;
				(*(_24398_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a7d0_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24398_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24398_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c378edc4:;
			{
				jule::Ptr<_1bac25065_Const> _24488_c = static__1bac25494_NewI64(-128LL);;
				(*(_24488_c))._field_Kind=jule::Str::lit("i8", 2);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53a7d0_primI8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24488_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24488_c});;
			}
		}
		else {
			_case_begin_1c378dbe7:;
			{
				_1bc4859e4_pushErr(_self_, _243332_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_243332_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c378ddd4:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49d985_evalI16TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _246233_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_246233_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c3793a65:;
			{
				jule::Ptr<_1bac25065_Const> _24688_c = static__1bac25494_NewI64(32767LL);;
				(*(_24688_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53aa77_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24688_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24688_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c379467b:;
			{
				jule::Ptr<_1bac25065_Const> _24778_c = static__1bac25494_NewI64(-32768LL);;
				(*(_24778_c))._field_Kind=jule::Str::lit("i16", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53aa77_primI16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24778_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24778_c});;
			}
		}
		else {
			_case_begin_1c379349e:;
			{
				_1bc4859e4_pushErr(_self_, _246233_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_246233_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c379368b:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49dcc6_evalI32TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _249133_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_249133_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c38a1b73:;
			{
				jule::Ptr<_1bac25065_Const> _24978_c = static__1bac25494_NewI64(2147483647LL);;
				(*(_24978_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53ad30_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_24978_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_24978_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c38a722d:;
			{
				jule::Ptr<_1bac25065_Const> _25068_c = static__1bac25494_NewI64(-2147483648LL);;
				(*(_25068_c))._field_Kind=jule::Str::lit("i32", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53ad30_primI32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25068_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25068_c});;
			}
		}
		else {
			_case_begin_1c3797c34:;
			{
				_1bc4859e4_pushErr(_self_, _249133_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_249133_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3797e21:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49e117_evalI64TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _252033_ident) {
	;
	;
	;
	{
		auto &_match_expr{ (*(_252033_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c347a0a9:;
			{
				jule::Ptr<_1bac25065_Const> _25268_c = static__1bac25494_NewI64(jule::MAX_I64);;
				(*(_25268_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53b0d8_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25268_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25268_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c347abc0:;
			{
				jule::Ptr<_1bac25065_Const> _25358_c = static__1bac25494_NewI64(jule::MIN_I64);;
				(*(_25358_c))._field_Kind=jule::Str::lit("i64", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53b0d8_primI64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25358_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25358_c});;
			}
		}
		else {
			_case_begin_1c347975c:;
			{
				_1bc4859e4_pushErr(_self_, _252033_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("i64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_252033_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3479be1:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49e458_evalU8TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _254932_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_254932_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c347e4cb:;
			{
				jule::Ptr<_1bac25065_Const> _25548_c = static__1bac2575d_NewU64(255LLU);;
				(*(_25548_c))._field_Kind=jule::Str::lit("u8", 2);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53b391_primU8, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25548_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25548_c});;
			}
		}
		else {
			_case_begin_1c347ce36:;
			{
				_1bc4859e4_pushErr(_self_, _254932_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u8", 2), &__jule_any_type5); (*it++) = jule::Any((*(_254932_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c347e069:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49e799_evalU16TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _256833_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_256833_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c348248a:;
			{
				jule::Ptr<_1bac25065_Const> _25738_c = static__1bac2575d_NewU64(65535LLU);;
				(*(_25738_c))._field_Kind=jule::Str::lit("u16", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53b649_primU16, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25738_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25738_c});;
			}
		}
		else {
			_case_begin_1c3481ce7:;
			{
				_1bc4859e4_pushErr(_self_, _256833_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u16", 3), &__jule_any_type5); (*it++) = jule::Any((*(_256833_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3482028:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49eada_evalU32TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _258733_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_258733_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c3485449:;
			{
				jule::Ptr<_1bac25065_Const> _25928_c = static__1bac2575d_NewU64(4294967295LLU);;
				(*(_25928_c))._field_Kind=jule::Str::lit("u32", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53b902_primU32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_25928_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_25928_c});;
			}
		}
		else {
			_case_begin_1c3484ca6:;
			{
				_1bc4859e4_pushErr(_self_, _258733_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u32", 3), &__jule_any_type5); (*it++) = jule::Any((*(_258733_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3484ed7:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc49ee2b_evalU64TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _260633_ident) {
	;
	;
	{
		auto &_match_expr{ (*(_260633_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c3488408:;
			{
				jule::Ptr<_1bac25065_Const> _26118_c = static__1bac2575d_NewU64(jule::MAX_U64);;
				(*(_26118_c))._field_Kind=jule::Str::lit("u64", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53bddb_primU64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26118_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26118_c});;
			}
		}
		else {
			_case_begin_1c3487c65:;
			{
				_1bc4859e4_pushErr(_self_, _260633_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("u64", 3), &__jule_any_type5); (*it++) = jule::Any((*(_260633_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3487e96:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a026c_evalF32TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _262533_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_262533_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c348ba8d:;
			{
				jule::Ptr<_1bac25065_Const> _26328_c = static__1bac260aa_NewF64(340282346638528860000000000000000000000.0);;
				(*(_26328_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c12d_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26328_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26328_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c348c6a4:;
			{
				jule::Ptr<_1bac25065_Const> _26418_c = static__1bac260aa_NewF64(-340282346638528860000000000000000000000.0);;
				(*(_26418_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c12d_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26418_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26418_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c348c71a:;
			{
				jule::Ptr<_1bac25065_Const> _26508_c = static__1bac260aa_NewF64(0.000000000000000000000000000000000000000000001401298464324817);;
				(*(_26508_c))._field_Kind=jule::Str::lit("f32", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c12d_primF32, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26508_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26508_c});;
			}
		}
		else {
			_case_begin_1c348b32e:;
			{
				_1bc4859e4_pushErr(_self_, _262533_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f32", 3), &__jule_any_type18); (*it++) = jule::Any((*(_262533_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c348b6b4:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a05ad_evalF64TypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc247014_Token> _266433_ident) {
	;
	;
	;
	;
	{
		auto &_match_expr{ (*(_266433_ident))._field_Kind };
		
		if (_match_expr == jule::Str::lit("Max", 3)) {
			_case_begin_1c36774c6:;
			{
				jule::Ptr<_1bac25065_Const> _26718_c = static__1bac260aa_NewF64(jule::MAX_F64);;
				(*(_26718_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c33c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26718_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26718_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("Min", 3)) {
			_case_begin_1c365b2ac:;
			{
				jule::Ptr<_1bac25065_Const> _26808_c = static__1bac260aa_NewF64(jule::MIN_F64);;
				(*(_26808_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c33c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26808_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26808_c});;
			}
		}
		else if (_match_expr == jule::Str::lit("SmallestNonZero", 15)) {
			_case_begin_1c3677592:;
			{
				jule::Ptr<_1bac25065_Const> _26898_c = static__1bac260aa_NewF64(0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005);;
				(*(_26898_c))._field_Kind=jule::Str::lit("f64", 3);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=true, ._field_Type=_1bc53c33c_primF64, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_26898_c, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_26898_c});;
			}
		}
		else {
			_case_begin_1c349209e:;
			{
				_1bc4859e4_pushErr(_self_, _266433_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("f64", 3), &__jule_any_type18); (*it++) = jule::Any((*(_266433_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3492434:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a09a9_evalPrimStatic(_1bc48551b_eval* _self_, jule::Str _270330_kind, jule::Ptr<_1bc247014_Token> _270341_ident) {
	{
		auto &_match_expr{ _270330_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1c3677916:;
			{
				return _1bc49ceb2_evalIntTypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4))) {
			_case_begin_1c36776d5:;
			{
				return _1bc49d303_evalUintTypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1c36777e5:;
			{
				return _1bc49d644_evalI8TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1c367785b:;
			{
				return _1bc49d985_evalI16TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1c3677e00:;
			{
				return _1bc49dcc6_evalI32TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1c3677e66:;
			{
				return _1bc49e117_evalI64TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1c3677ecc:;
			{
				return _1bc49e458_evalU8TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1c3678043:;
			{
				return _1bc49e799_evalU16TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1c36780a9:;
			{
				return _1bc49eada_evalU32TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1c3678120:;
			{
				return _1bc49ee2b_evalU64TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1c3678186:;
			{
				return _1bc4a026c_evalF32TypeStatic(_self_, _270341_ident);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1c36781ec:;
			{
				return _1bc4a05ad_evalF64TypeStatic(_self_, _270341_ident);;
			}
		}
		else {
			_case_begin_1c379951b:;
			{
				_1bc4859e4_pushErr(_self_, _270341_ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_270330_kind, &__jule_any_type5); (*it++) = jule::Any((*(_270341_ident))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3799593:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a0da5_evalTypeStatic(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _273534_d, jule::Ptr<_1bc264d56_SubIdentExpr> _273548_si) {
	{
		
		if ((_1bc4b8b9d_Prim((*(_273534_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c38b04ab:;
			{
				return _1bc4a09a9_evalPrimStatic(_self_, _1bc4be984_Str(_1bc4b8b9d_Prim((*(_273534_d))._field_Type).ptr()), (*(_273548_si))._field_Ident);;
			}
		}
		else if ((_1bc4b9451_Enum((*(_273534_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c38b1446:;
			{
				return _1bc49abd5_evalEnumStatic(_self_, _1bc4b9451_Enum((*(_273534_d))._field_Type), (*(_273548_si))._field_Ident);;
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*(_273534_d))._field_Type) != nullptr)) {
			_case_begin_1c38b14ac:;
			{
				return _1bc49b0d1_evalTypeEnumStatic(_self_, _1bc4b96d7_TypeEnum((*(_273534_d))._field_Type), (*_273548_si.alloc)._field_Ident);;
			}
		}
		else if ((_1bc4ba221_Struct((*(_273534_d))._field_Type) != nullptr)) {
			_case_begin_1c38b0148:;
			{
				return _1bc49b4cc_evalStructStatic(_self_, _1bc4ba221_Struct((*(_273534_d))._field_Type), (*_273548_si.alloc)._field_Ident);;
			}
		}
		else {
			_case_begin_1c38b00d2:;
			{
				_1bc4859e4_pushErr(_self_, (*_273548_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("type @ is not supports sub-defines", 34)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_273534_d))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c38b0005:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1c0d34a65_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc38e337_comptimeTypeInfo>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc395162_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39a489c_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc37ee93_comptimeStructField>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc3813d4_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39a9165_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc3863d9_comptimeEnumField>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc38741d_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39ad972_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc389200_comptimeParam>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc38aa4d_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39b346b_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc3831b6_comptimeStatic>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc384607_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39b7be0_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc39543c_comptimeValue>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc397dbd_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39bc464_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc399b17_comptimeFile>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc39b465_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}

inline jule::Ptr<_1bc48354c_Data> _1c39c1c71_comptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc39da2d_comptimeDecl>* _275154_ct, jule::Ptr<_1bc48354c_Data>* _275174_d, jule::Ptr<_1bc264d56_SubIdentExpr>* _275185_si) {
	jule::Ptr<_1bc48354c_Data> _27527_cd = _1bc3a2889_subIdent((*(_275154_ct)), &((*((*((*(_275185_si))))._field_Ident))._field_Kind));;
	if ((_27527_cd == nullptr)) {
		_1bc4859e4_pushErr(_self_, (*((*(_275185_si))))._field_Ident, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_275174_d))))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any((*(*((*(_275185_si))))._field_Ident.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
	};
	return _27527_cd;;
}



inline __jule_tuple_x_1bc48354c_Data__jule_tuple_bool _1bc4a1757_tryComptimeObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data>* _275943_d, jule::Ptr<_1bc264d56_SubIdentExpr> _275957_si) {
	__jule_tuple_x_1bc48354c_Data__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if ((_1bc4bc564_comptimeTypeInfo((*((*(_275943_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0d32bea:;
			{
				jule::Ptr<_1bc38e337_comptimeTypeInfo> _27628_ct = _1bc4bc564_comptimeTypeInfo((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c0d34a65_comptimeObjSubIdent(_self_, &(_27628_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bb277_comptimeStructField((*((*(_275943_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0d32e5e:;
			{
				jule::Ptr<_1bc37ee93_comptimeStructField> _27658_ct = _1bc4bb277_comptimeStructField((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39a489c_comptimeObjSubIdent(_self_, &(_27658_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bb794_comptimeEnumField((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_1c0d32ec5:;
			{
				jule::Ptr<_1bc3863d9_comptimeEnumField> _27688_ct = _1bc4bb794_comptimeEnumField((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39a9165_comptimeObjSubIdent(_self_, &(_27688_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bbcb1_comptimeParam((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_1c0d3303b:;
			{
				jule::Ptr<_1bc389200_comptimeParam> _27718_ct = _1bc4bbcb1_comptimeParam((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39ad972_comptimeObjSubIdent(_self_, &(_27718_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bca81_comptimeStatic((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_1c0d330a2:;
			{
				jule::Ptr<_1bc3831b6_comptimeStatic> _27748_ct = _1bc4bca81_comptimeStatic((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39b346b_comptimeObjSubIdent(_self_, &(_27748_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bcd17_comptimeValue((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_1c0d33118:;
			{
				jule::Ptr<_1bc39543c_comptimeValue> _27778_ct = _1bc4bcd17_comptimeValue((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39b7be0_comptimeObjSubIdent(_self_, &(_27778_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bd5ba_comptimeFile((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_1c0d3317e:;
			{
				jule::Ptr<_1bc399b17_comptimeFile> _27808_ct = _1bc4bd5ba_comptimeFile((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39bc464_comptimeObjSubIdent(_self_, &(_27808_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if ((_1bc4bd09d_comptimeDecl((*((*(_275943_d))))._field_Type) != nullptr)) {
			_case_begin_1c0d33206:;
			{
				jule::Ptr<_1bc39da2d_comptimeDecl> _27838_ct = _1bc4bd09d_comptimeDecl((*((*(_275943_d))))._field_Type);;
				__jule_func_result.__jule_result_arg0 = _1c39c1c71_comptimeObjSubIdent(_self_, &(_27838_ct), _275943_d, &(_275957_si));
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c38b633b:;
			{
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		_match_end_1c38b6281:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a1b53_evalObjSubIdent(_1bc48551b_eval* _self_, jule::Ptr<_1bc48354c_Data> _279035_d, jule::Ptr<_1bc264d56_SubIdentExpr> _279049_si) {
	if (_1bc2498eb_IsIgnoreIdent((*((*(_279049_si))._field_Ident))._field_Kind)) {
		_1bc4859e4_pushErr(_self_, (*_279049_si.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	{
		jule::Ptr<_1bc48354c_Data> _27968_compData;
		jule::Bool _279618_ok;
		({
			__jule_tuple_x_1bc48354c_Data__jule_tuple_bool __jule_assign_result = _1bc4a1757_tryComptimeObjSubIdent(_self_, &(_279035_d), _279049_si);
			_27968_compData = __jule_assign_result.__jule_result_arg0;
			_279618_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_279618_ok) {
			return _27968_compData;;
		};
	};
	jule::Ptr<_1bc4b64e7_Type> _28017_kind = (*(_279035_d))._field_Type;;
	{
		
		if ((_1bc4b91ba_Ptr((*_279035_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c39c6957:;
			{
				jule::Ptr<_1bc4c6903_Ptr> _28044_ptr = _1bc4b91ba_Ptr((*(_279035_d))._field_Type);;
				if (_1bc4c7470_IsUnsafe(_28044_ptr.ptr())) {
					goto _match_end_1c39c68d0;
				};
				if ((!(_1bc4864d9_isUnsafe(_self_)))) {
					_1bc4859e4_pushErr(_self_, (*(_279049_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				_28017_kind=(*(_1bc4b91ba_Ptr((*(_279035_d))._field_Type)))._field_Elem;
				_1bc4b2ed8_makeImplicitDeref(&(_279035_d), (*(_279049_si))._field_Ident);
			}
		}
		else if ((_1bc4b8e34_Sptr((*_279035_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c39c6a01:;
			{
				_28017_kind=(*(_1bc4b8e34_Sptr((*(_279035_d))._field_Type)))._field_Elem;
				_1bc4b2ed8_makeImplicitDeref(&(_279035_d), (*(_279049_si))._field_Ident);
			}
		}
		_match_end_1c39c68d0:;
	};
	{
		
		if ((_1bc4ba4a7_Trait((*(_279035_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c39c7a24:;
			{
				return _1bc49b983_evalTraitSubIdent(_self_, _279035_d, _1bc4ba4a7_Trait((*(_279035_d))._field_Type), (*(_279049_si))._field_Ident);;
			}
		}
		else if ((_1bc4ba221_Struct(_28017_kind.ptr()) != nullptr)) {
			_case_begin_1c39cad46:;
			{
				jule::Ptr<_1bc2810c5_StructIns> _28224_s = _1bc4ba221_Struct(_28017_kind);;
				if (_1bc4ae534_isInstancedStruct(_28224_s)) {
					jule::Bool _28249_usedReferenceElem = (_1bc4b8e34_Sptr((*(_279035_d))._field_Type.ptr()) != nullptr);;
					return _1bc49cb71_evalStructSubIdent(_self_, _279035_d, _1bc4ba221_Struct(_28017_kind), _279049_si, _28249_usedReferenceElem);;
				};
			}
		}
		_match_end_1c39cacd0:;
	};
	_1bc4859e4_pushErr(_self_, (*(_279049_si))._field_Ident, static_cast<jule::Str>(jule::Str::lit("object @ is not supports sub-defines", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_279035_d))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a1e94_evalSubIdent(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc264d56_SubIdentExpr> _283233_si) {
	jule::Ptr<_1bc4b64e7_Type> _28337_prefix = (*(_self_))._field_prefix;;
	(*_self_.alloc)._field_prefix=nullptr;
	__JULE_DEFER({
		(*_self_.alloc)._field_prefix=_28337_prefix;
	});;
	jule::Ptr<_1bc48354c_Data> _28367_d = _1bc4a34e5_evalExprKind(_self_, (*((*(_283233_si))._field_Expr))._field_Kind);;
	if ((_28367_d == nullptr)) {
		return nullptr;;
	};
	if ((*(_28367_d))._field_Decl) {
		return _1bc4a0da5_evalTypeStatic(_self_, _28367_d, _283233_si);;
	};
	return _1bc4a1b53_evalObjSubIdent(_self_, _28367_d, _283233_si);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a22d5_evalTuple(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc262837_TupleExpr> _284630_tup) {
	jule::Ptr<_1bc4c4703_Tuple> _28477_tupT = jule::new_ptr<_1bc4c4703_Tuple>(_1bc4c4703_Tuple{._field_Types=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)});;
	(*_28477_tupT.alloc)._field_Types=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(0LL, (*(_284630_tup))._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b64e7_Type>(nullptr); __jule_collection; });
	jule::Ptr<_1bc2e737d_TupleExprModel> _28507_model = jule::new_ptr<_1bc2e737d_TupleExprModel>(_1bc2e737d_TupleExprModel{._field_Datas=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(0LL, (*_284630_tup.alloc)._field_Expr.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc48354c_Data>(nullptr); __jule_collection; })});;
	jule::Bool _28547_ok = true;;
	{
		auto expr = &((*_284630_tup.alloc)._field_Expr);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c39d5d84:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _285515_expr = *it;
			{
				jule::Ptr<_1bc48354c_Data> _28568_d = _1bc4a4309_evalExpr(_self_, _285515_expr);;
				if ((_28568_d == nullptr)) {
					_28547_ok=false;
					goto _iter_next_1c39d5d84;
				};
				(*_28477_tupT.alloc)._field_Types=jule::append((*_28477_tupT.alloc)._field_Types,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_28568_d))._field_Type; __jule_collection; }));
				(*(_28507_model))._field_Datas=jule::append((*_28507_model.alloc)._field_Datas,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _28568_d; __jule_collection; }));
			}
			_iter_next_1c39d5d84:;
			++it;
			goto _iter_begin_1c39d5d84;
		}
		_iter_end_1c39d5d84:;
	};
	if ((!(_28547_ok))) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_28477_tupT, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data25)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28507_model, &__jule_any_type84), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a26d1_evalMap(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc4c52a3_Map> _287528_m, jule::Ptr<_1bc267243_BraceLit> _287541_lit) {
	jule::Ptr<_1bc2e5359_MapExprModel> _28767_model = jule::new_ptr<_1bc2e5359_MapExprModel>(_1bc2e5359_MapExprModel{._field_Kind=_287528_m, ._field_Entries=jule::Slice<jule::Ptr<_1bc2e4e80_KeyValPairExprModel>>(nullptr)});;
	{
		auto expr = &((*(_287541_lit))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c110ec52:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _288015_expr = *it;
			{
				{
					auto &_match_expr{ (*(_288015_expr))._field_Kind };
					
					if (_match_expr.type == &__jule_any_type82) {
						_case_begin_1c111046c:;
						{
							goto _match_end_1c1110747;
						}
					}
					else {
						_case_begin_1c11107ad:;
						{
							_1bc4859e4_pushErr(_self_.ptr(), (*(_287541_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							return nullptr;;
						}
					}
					_match_end_1c1110747:;
				};
				jule::Ptr<_1bc267a6d_KeyValPair> _28908_pair = (*(_288015_expr))._field_Kind.cast_ptr<_1bc267a6d_KeyValPair>(&__jule_any_type82);;
				jule::Ptr<_1bc48354c_Data> _28928_key = _1bc4a4309_evalExpr(_self_, (*(_28908_pair))._field_Key);;
				if ((_28928_key == nullptr)) {
					return nullptr;;
				};
				jule::Ptr<_1bc48354c_Data> _28978_val = _1bc4a4309_evalExpr(_self_, (*_28908_pair.alloc)._field_Val);;
				if ((_28978_val == nullptr)) {
					return nullptr;;
				};
				;
				if (_1bc419b76_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_287528_m))._field_Key), &(_28928_key), &((*((*_28908_pair.alloc)._field_Key))._field_Token))) {
					_1bc4153e1_checkAssignType((*(_self_))._field_s, false, &((*_287528_m.alloc)._field_Key), &(_28928_key), (*(*(_28908_pair))._field_Key.alloc)._field_Token, _1bc488a2a_getOwnerRefers(_self_));
				};
				if (_1bc419b76_checkValidityForInitExpr((*_self_.alloc)._field_s, (*_self_.alloc)._field_target._field_mutable, false, &((*(_287528_m))._field_Val), &(_28978_val), &((*((*_28908_pair.alloc)._field_Val))._field_Token))) {
					_1bc4153e1_checkAssignType((*(_self_))._field_s, false, &((*_287528_m.alloc)._field_Val), &(_28978_val), (*(*(_28908_pair))._field_Val.alloc)._field_Token, _1bc488a2a_getOwnerRefers(_self_));
				};
				(*(_28767_model))._field_Entries=jule::append((*_28767_model.alloc)._field_Entries,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2e4e80_KeyValPairExprModel>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc2e4e80_KeyValPairExprModel>(_1bc2e4e80_KeyValPairExprModel{._field_Key=(*(_28928_key))._field_Model, ._field_Val=(*(_28978_val))._field_Model}); __jule_collection; }));
			}
			_iter_next_1c110ec52:;
			++it;
			goto _iter_begin_1c110ec52;
		}
		_iter_end_1c110ec52:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_287528_m, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data26)}), ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_28767_model, &__jule_any_type102), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a2a22_evalBraceLit(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc267243_BraceLit> _292333_lit) {
	{
		
		if (((*(_self_))._field_prefix == nullptr)) {
			_case_begin_1c38ba609:;
			{
				_1bc4859e4_pushErr(_self_, (*(_292333_lit))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1bc4ba73d_Map((*(_self_))._field_prefix.ptr()) != nullptr)) {
			_case_begin_1c38b87c2:;
			{
				return _1bc4a26d1_evalMap(_self_, _1bc4ba73d_Map((*(_self_))._field_prefix), _292333_lit);;
			}
		}
		else if ((_1bc4ba221_Struct((*(_self_))._field_prefix) != nullptr)) {
			_case_begin_1c38b8838:;
			{
				return _1bc4987b5_evalStructLitExplicit(_self_, _1bc4ba221_Struct((*(_self_))._field_prefix), (*(_292333_lit))._field_Exprs, (*_292333_lit.alloc)._field_Token);;
			}
		}
		else {
			_case_begin_1c38b855d:;
			{
				_1bc4859e4_pushErr(_self_, (*_292333_lit.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c38b92a6:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a2d63_evalAnonFunc(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26e69b_FnDecl> _293833_decl) {
	_1bc4c88e4_typeChecker _29397_tc = _1bc4c88e4_typeChecker{._field_s=(*(_self_))._field_s, ._field_rootLookup=(*_self_.alloc)._field_lookup, ._field_lookup=(*_self_.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false};;
	jule::Ptr<_1bc302113_FnIns> _29447_ins = _1bc4d0a0b_buildFunc(&_29397_tc, _293833_decl);;
	if ((_29447_ins == nullptr)) {
		return nullptr;;
	};
	(*(_29447_ins))._field_AsAnon=true;
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _29497_captured = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc42dc12_Var>(nullptr); __jule_collection; });;
	{
		auto &_match_expr{ (*(_self_))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
			_case_begin_1c38c04cc:;
			{
				jule::Ptr<_1bc3b448e_scopeChecker> _29528_sc = (*_self_.alloc)._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1);;
				jule::Ptr<_1bc3b448e_scopeChecker> _29538_scc = _1bc3c689c_newChildChecker(_29528_sc);;
				(*(_29538_scc))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1bc3b30c5_scopeLabel>>>(nullptr);
				(*_29538_scc.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>>(nullptr);
				(*_29538_scc.alloc)._field_owner=_29447_ins;
				(*_29538_scc.alloc)._field_childIndex=0LL;
				(*_29538_scc.alloc)._field_it=0LLU;
				(*_29538_scc.alloc)._field_cse=0LLU;
				(*_29538_scc.alloc)._field_captured=((jule::Ptr<jule::Slice<jule::Ptr<_1bc42dc12_Var>>>)((&(_29497_captured))));
				_1bc42814b_checkFnInsSc((*_self_.alloc)._field_s.ptr(), &(_29447_ins), &(_29538_scc));
			}
		}
		else {
			_case_begin_1c38c10d2:;
			{
				_1bc428767_checkFnIns((*_self_.alloc)._field_s, &(_29447_ins));
			}
		}
		_match_end_1c38c106b:;
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_29447_ins, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(jule::new_ptr<_1bc2e4aa6_AnonFnExprModel>(_1bc2e4aa6_AnonFnExprModel{._field_Captured=_29497_captured, ._field_Func=_29447_ins, ._field_Global=_1bc486770_isGlobal(_self_)}), &__jule_any_type103), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a31a4_evalBinary(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc26530c_BinaryExpr> _297631_op) {
	_1bc4a6729_binaryEval _29777_bs = static__1bc4a6d12_newPlain(_self_);;
	if (((*(_self_))._field_prefix != nullptr)) {
		jule::Ptr<_1bc4be610_Prim> _29804_prim = _1bc4b8b9d_Prim((*(_self_))._field_prefix);;
		if (((_29804_prim == nullptr) || (!(_1bc37ceb3_IsNum(_1bc4be984_Str(_29804_prim.ptr())))))) {
			jule::Ptr<_1bc4b64e7_Type> _29829_prefix = (*_self_.alloc)._field_prefix;;
			(*_self_.alloc)._field_prefix=nullptr;
			__JULE_DEFER({
				(*_self_.alloc)._field_prefix=_29829_prefix;
			});;
			return _1bc4ac873_eval(&_29777_bs, &(_297631_op));;
		};
	};
	return _1bc4ac873_eval(&_29777_bs, &(_297631_op));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a34e5_evalExprKind(jule::Ptr<_1bc48551b_eval> _self_, jule::Any _299133_kind) {
	{
		auto &_match_expr{ _299133_kind };
		
		if (_match_expr.type == &__jule_any_type104) {
			_case_begin_1c379cb18:;
			{
				jule::Ptr<_1bc26200c_RangeExpr> _29948_e = _299133_kind.unsafe_cast_ptr<_1bc26200c_RangeExpr>();;
				return _1bc4a34e5_evalExprKind(_self_, (*((*(_29948_e))._field_Expr))._field_Kind);;
			}
		}
		else if (_match_expr.type == &__jule_any_type105) {
			_case_begin_1c379cd5a:;
			{
				return _1bc488057_evalLit(_self_.ptr(), _299133_kind.cast_ptr<_1bc262bcd_LitExpr>(&__jule_any_type105));;
			}
		}
		else if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c379cdc1:;
			{
				return _1bc48cc93_evalIdent(_self_, _299133_kind.cast_ptr<_1bc26355d_IdentExpr>(&__jule_any_type42));;
			}
		}
		else if (_match_expr.type == &__jule_any_type91) {
			_case_begin_1c379ce37:;
			{
				return _1bc48d0d4_evalUnary(_self_, _299133_kind.cast_ptr<_1bc263d00_UnaryExpr>(&__jule_any_type91));;
			}
		}
		else if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c379ce9d:;
			{
				return _1bc48d425_evalVariadic(_self_, _299133_kind.cast_ptr<_1bc2641c9_VariadicExpr>(&__jule_any_type79));;
			}
		}
		else if (_match_expr.type == &__jule_any_type106) {
			_case_begin_1c379d014:;
			{
				return _1bc48d766_evalUnsafe(_self_, _299133_kind.cast_ptr<_1bc2630a7_UnsafeExpr>(&__jule_any_type106));;
			}
		}
		else if (_match_expr.type == &__jule_any_type97) {
			_case_begin_1c379d07a:;
			{
				return _1bc48e39e_evalSliceExpr(_self_, _299133_kind.cast_ptr<_1bc268299_SliceExpr>(&__jule_any_type97));;
			}
		}
		else if (_match_expr.type == &__jule_any_type107) {
			_case_begin_1c09ca7c7:;
			{
				return _1bc492eeb_evalIndexing(_self_, _299133_kind.cast_ptr<_1bc268c06_IndexingExpr>(&__jule_any_type107));;
			}
		}
		else if (_match_expr.type == &__jule_any_type108) {
			_case_begin_1c09ca83d:;
			{
				return _1bc49432c_evalSlicing(_self_, _299133_kind.cast_ptr<_1bc269366_SlicingExpr>(&__jule_any_type108));;
			}
		}
		else if (_match_expr.type == &__jule_any_type109) {
			_case_begin_1c3366d42:;
			{
				return _1bc497ebd_evalCast(_self_, _299133_kind.cast_ptr<_1bc2645a3_CastExpr>(&__jule_any_type109));;
			}
		}
		else if (_match_expr.type == &__jule_any_type93) {
			_case_begin_1c3366da8:;
			{
				return _1bc49830e_evalNamespace(_self_, _299133_kind.cast_ptr<_1bc26497c_NamespaceExpr>(&__jule_any_type93));;
			}
		}
		else if (_match_expr.type == &__jule_any_type110) {
			_case_begin_1c3367b01:;
			{
				return _1bc498b06_evalStructLit(_self_, _299133_kind.cast_ptr<_1bc266c8c_StructLit>(&__jule_any_type110));;
			}
		}
		else if (_match_expr.type == &__jule_any_type92) {
			_case_begin_1c3367b67:;
			{
				return _1bc4991cd_evalType(_self_, _299133_kind.cast_ptr<_1bc25c90e_TypeDecl>(&__jule_any_type92));;
			}
		}
		else if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c3367bcd:;
			{
				return _1bc49a7d9_evalFnCall(_self_, _299133_kind.cast_ptr<_1bc26596c_FnCallExpr>(&__jule_any_type85));;
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c3367c44:;
			{
				return _1bc4a1e94_evalSubIdent(_self_, _299133_kind.cast_ptr<_1bc264d56_SubIdentExpr>(&__jule_any_type89));;
			}
		}
		else if (_match_expr.type == &__jule_any_type83) {
			_case_begin_1c3367caa:;
			{
				return _1bc4a22d5_evalTuple(_self_, _299133_kind.cast_ptr<_1bc262837_TupleExpr>(&__jule_any_type83));;
			}
		}
		else if (_match_expr.type == &__jule_any_type111) {
			_case_begin_1c3367d21:;
			{
				return _1bc4a2a22_evalBraceLit(_self_, _299133_kind.cast_ptr<_1bc267243_BraceLit>(&__jule_any_type111));;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c3367d87:;
			{
				return _1bc4a2d63_evalAnonFunc(_self_, _299133_kind.cast_ptr<_1bc26e69b_FnDecl>(&__jule_any_type68));;
			}
		}
		else if (_match_expr.type == &__jule_any_type112) {
			_case_begin_1c3367edb:;
			{
				return _1bc4a31a4_evalBinary(_self_, _299133_kind.cast_ptr<_1bc26530c_BinaryExpr>(&__jule_any_type112));;
			}
		}
		else {
			_case_begin_1c379cce4:;
			{
				return nullptr;;
			}
		}
		_match_end_1c379cc7d:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a3836_eval1(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _303926_expr) {
	jule::Ptr<_1bc48354c_Data> _30407_d = _1bc4a34e5_evalExprKind(_self_, (*(_303926_expr))._field_Kind);;
	if (((_30407_d == nullptr) || ((*(_30407_d))._field_Type == nullptr))) {
		return nullptr;;
	};
	{
		
		if ((_1bc4b9e8a_Fn((*(_30407_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c38d1b4d:;
			{
				jule::Ptr<_1bc302113_FnIns> _30488_f = _1bc4b9e8a_Fn((*(_30407_d))._field_Type);;
				if (_1bc3035cb_IsBuiltin(_30488_f.ptr())) {
					_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_303926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("built-in functions should be invoked", 36)), jule::Slice<jule::Any>());
					goto _match_end_1c38d12e0;
				};
				jule::I32 _30534_required = (*((*(_30488_f))._field_Decl))._field_Generics.len();;
				jule::I32 _30544_given = (*_30488_f.alloc)._field_Generics.len();;
				if ((!(_1bc40e42e_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30534_required, _30544_given, (*_303926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
				if (((!((*(*(_30488_f))._field_Decl.alloc)._field_Statically)) && _1bc2ee792_IsMethod((*(_30488_f))._field_Decl))) {
					_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_303926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("methods should be invoked", 25)), jule::Slice<jule::Any>());
				} else if ((_1bc4acc6e_findDirective(&((*(*(_30488_f))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6))) != nullptr)) {
					_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*_303926_expr.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("define @ is exported for backend so you cannot use as anonymous function", 72)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_30488_f))._field_Decl.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				} else {
					(*_30488_f.alloc)._field_AsAnon=true;
				};
			}
		}
		else if ((*(_30407_d))._field_Decl) {
			_case_begin_1c38d1bb4:;
			{
				jule::Ptr<_1bc2810c5_StructIns> _30678_s = _1bc4ba221_Struct((*_30407_d.alloc)._field_Type.ptr());;
				if ((_30678_s == nullptr)) {
					goto _match_end_1c38d12e0;
				};
				jule::I32 _30714_required = (*((*(_30678_s))._field_Decl))._field_Generics.len();;
				jule::I32 _30724_given = (*_30678_s.alloc)._field_Generics.len();;
				if ((!(_1bc40e42e_checkGenericQuantity((*_self_.alloc)._field_s.ptr(), _30714_required, _30724_given, (*_303926_expr.alloc)._field_Token)))) {
					return nullptr;;
				};
			}
		}
		_match_end_1c38d12e0:;
	};
	return _30407_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a3b77_eval(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _308425_expr) {
	jule::Ptr<_1bc48354c_Data> _30857_d = _1bc4a3836_eval1(_self_, _308425_expr);;
	if ((_30857_d == nullptr)) {
		return nullptr;;
	};
	if (((((*_self_.alloc)._field_owner == nullptr) || (!((*((*_self_.alloc)._field_owner))._field_Constant))) && _1bc4bac5a_comptime((*(_30857_d))._field_Type.ptr()))) {
		_1bc40ce00_pushErr((*_self_.alloc)._field_s.ptr(), (*(_308425_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("compile-time evaluations cannot used as expression", 50)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _30857_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a3eb8_evalExpr1(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _309930_expr) {
	jule::Ptr<_1bc48354c_Data> _31007_d = _1bc4a3836_eval1(_self_, _309930_expr);;
	{
		
		if ((_31007_d == nullptr)) {
			_case_begin_1c38dee03:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31007_d))._field_Decl) {
			_case_begin_1c38dee9c:;
			{
				_1bc4859e4_pushErr(_self_, (*(_309930_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c38ded7b:;
			{
				return _31007_d;;
			}
		}
		_match_end_1c38ded04:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a4309_evalExpr(jule::Ptr<_1bc48551b_eval> _self_, jule::Ptr<_1bc261c43_Expr> _311529_expr) {
	jule::Ptr<_1bc48354c_Data> _31167_d = _1bc4a3b77_eval(_self_, _311529_expr);;
	{
		
		if ((_31167_d == nullptr)) {
			_case_begin_1c38e1e6b:;
			{
				return nullptr;;
			}
		}
		else if ((*(_31167_d))._field_Decl) {
			_case_begin_1c38e2015:;
			{
				_1bc4859e4_pushErr(_self_, (*(_311529_expr))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else {
			_case_begin_1c38e1de4:;
			{
				return _31167_d;;
			}
		}
		_match_end_1c38e1d6c:;
	};
}








inline jule::Bool _1bc4a478d_unaryEval_eq(_1bc4a478d_unaryEval *_self_, _1bc4a478d_unaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_d == _self_->_field_d) &&
		(_self_->_field_u == _self_->_field_u);
}

inline _1bc4a478d_unaryEval static__1bc4a4c11_new(jule::Ptr<_1bc48551b_eval> _313620_e) {
	return _1bc4a478d_unaryEval{._field_e=_313620_e, ._field_d=jule::Ptr<_1bc48354c_Data>(nullptr), ._field_u=jule::Ptr<_1bc263d00_UnaryExpr>(nullptr)};;
}



inline void _1bc4a4e0e_minus(_1bc4a478d_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1c38e3d2a:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c38e4215:;
			{
				if ((!(_1bc37ceb3_IsNum(_1bc4b68e3_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1bc4ba221_Struct((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1c38e39c8:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Neg == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c38e3962:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c38e3896:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1bc483e87_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bac29a5e_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c38e81e7:;
				{
					_1bac28a91_SetF64((*((*(_self_))._field_d))._field_Constant, (-(_1bac27463_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bac29025_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c38e82d5:;
				{
					_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1bac26929_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bac292ab_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_1c38e7d95:;
				{
					_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, (-(_1bac276e9_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1c38e7d1d:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.minus, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3174:5"));;
				}
			}
			_match_end_1c38e7c41:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1bc4a510c_plus(_1bc4a478d_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1c38ed87e:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c38edc69:;
			{
				if ((!(_1bc37ceb3_IsNum(_1bc4b68e3_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1bc4ba221_Struct((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1c38ed52c:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_Pos == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c38ed4b6:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c38ed3a6:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1bc483e87_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bac29a5e_IsF64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c3903147:;
				{
					_1bac28a91_SetF64((*((*(_self_))._field_d))._field_Constant, (+(_1bac27463_ReadF64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bac29025_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c3903235:;
				{
					_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1bac26929_ReadI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else if (_1bac292ab_IsU64((*((*(_self_))._field_d))._field_Constant)) {
				_case_begin_1c3902ce5:;
				{
					_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, (+(_1bac276e9_AsI64((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1c3902c6d:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.plus, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3219:5"));;
				}
			}
			_match_end_1c3902b91:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1bc4a530a_caret(_1bc4a478d_unaryEval* _self_) {
	{
		
		if (((*((*(_self_))._field_d))._field_Type == nullptr)) {
			_case_begin_1c3907d94:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_self_))._field_d))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c390827e:;
			{
				if ((!(_1bc37c8db_IsInt(_1bc4b68e3_Str((*((*(_self_))._field_d))._field_Type))))) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else if ((_1bc4ba221_Struct((*((*(_self_))._field_d))._field_Type) != nullptr)) {
			_case_begin_1c3907a42:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_d))._field_Type)))._field_Operators._field_BitNot == nullptr)) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
			}
		}
		else {
			_case_begin_1c39079cb:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c39078bb:;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1bc483e87_IsConst((*(_self_))._field_d)) {
		jule::I32 _32604_sz = _1bc37486c_BitSizeOf((*(_1bc4b8b9d_Prim((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Kind);;
		{
			
			if (_1bac29025_IsI64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c390d064:;
				{
					{
						auto &_match_expr{ _32604_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1c390e142:;
							{
								_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I8>(_1bac26929_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1c390dc35:;
							{
								_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I16>(_1bac26929_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1c390dc9b:;
							{
								_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::I64>((~(static_cast<jule::I32>(_1bac26929_ReadI64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1c390dd12:;
							{
								_1bac27ebe_SetI64((*((*(_self_))._field_d))._field_Constant, (~(_1bac26929_ReadI64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1c390da6a:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3273:6"));;
							}
						}
						_match_end_1c390dae2:;
					};
				}
			}
			else if (_1bac292ab_IsU64((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c390d141:;
				{
					{
						auto &_match_expr{ _32604_sz };
						
						if (_match_expr == 8LL) {
							_case_begin_1c36825be:;
							{
								_1bac28277_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U8>(_1bac26bb0_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 16LL) {
							_case_begin_1c36827cd:;
							{
								_1bac28277_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U16>(_1bac26bb0_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 32LL) {
							_case_begin_1c3682844:;
							{
								_1bac28277_SetU64((*((*(_self_))._field_d))._field_Constant, static_cast<jule::U64>((~(static_cast<jule::U32>(_1bac26bb0_ReadU64((*((*(_self_))._field_d))._field_Constant))))));
							}
						}
						else if (_match_expr == 64LL) {
							_case_begin_1c36828aa:;
							{
								_1bac28277_SetU64((*((*(_self_))._field_d))._field_Constant, (~(_1bac26bb0_ReadU64((*((*(_self_))._field_d))._field_Constant))));
							}
						}
						else {
							_case_begin_1c3681aeb:;
							{
								__jule_panic_s(jule::Str::lit("sema: unimplemented bitsize for unaryEval.caret, this panic call should be unreachable", 86) + jule::Str("\nlocation: std/jule/sema/eval.jule:3286:6"));;
							}
						}
						_match_end_1c3682118:;
					};
				}
			}
			else {
				_case_begin_1c390cbce:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.caret, this panic call should be unreachable", 92) + jule::Str("\nlocation: std/jule/sema/eval.jule:3289:5"));;
				}
			}
			_match_end_1c390cb68:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1bc4a5508_excl(_1bc4a478d_unaryEval* _self_) {
	jule::Ptr<_1bc4be610_Prim> _33033_t = _1bc4b8b9d_Prim((*((*(_self_))._field_d))._field_Type.ptr());;
	if (((_33033_t == nullptr) || (!(_1bc4c2844_IsBool(_33033_t.ptr()))))) {
		(*(_self_))._field_d=nullptr;
		return;;
	};
	(*((*(_self_))._field_d))._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
	if (_1bc483e87_IsConst((*(_self_))._field_d)) {
		{
			
			if (_1bac29542_IsBool((*(*(_self_))._field_d.alloc)._field_Constant.ptr())) {
				_case_begin_1c3915973:;
				{
					_1bac28530_SetBool((*((*(_self_))._field_d))._field_Constant, (!(_1bac26e46_ReadBool((*((*(_self_))._field_d))._field_Constant))));
				}
			}
			else {
				_case_begin_1c39155aa:;
				{
					__jule_panic_s(jule::Str::lit("sema: unimplemented constant type for unaryEval.excl, this panic call should be unreachable", 91) + jule::Str("\nlocation: std/jule/sema/eval.jule:3317:5"));;
				}
			}
			_match_end_1c39154cd:;
		};
		return;;
	};
	(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
}



inline void _1bc4a5706_star(_1bc4a478d_unaryEval* _self_) {
	(*((*(_self_))._field_d))._field_Model=jule::Any(jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
	{
		
		if ((_1bc4b91ba_Ptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c39192e5:;
			{
				if ((!(_1bc4864d9_isUnsafe((*(_self_))._field_e.ptr())))) {
					_1bc4859e4_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1bc4c6903_Ptr> _33428_t = _1bc4b91ba_Ptr((*((*(_self_))._field_d))._field_Type);;
				if (_1bc4c7470_IsUnsafe(_33428_t.ptr())) {
					(*(_self_))._field_d=nullptr;
					return;;
				};
				(*((*(_self_))._field_d))._field_Type=(*(_33428_t))._field_Elem;
				(*(*(_self_))._field_d.alloc)._field_Mutable=true;
			}
		}
		else if ((_1bc4b8e34_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c391936c:;
			{
				(*(*(_self_))._field_d.alloc)._field_Type=(*(_1bc4b8e34_Sptr((*(*(_self_))._field_d.alloc)._field_Type.ptr())))._field_Elem;
			}
		}
		else {
			_case_begin_1c3918e3d:;
			{
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c3917e2b:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=true;
}



inline void _1bc4a5904_amper(_1bc4a478d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c3922ab2:;
			{
				jule::Ptr<_1bc2e2a3d_StructLitExprModel> _33648_lit = (*((*(_self_))._field_d))._field_Model.unsafe_cast_ptr<_1bc2e2a3d_StructLitExprModel>();;
				_1bc4ad698_makeStructLitAlloc(&((*(_self_))._field_d), &(_33648_lit));
			}
		}
		else {
			_case_begin_1c391eecc:;
			{
				{
					
					if (_1bc4d2d2c_canGetPtr(&((*(_self_))._field_d))) {
						_case_begin_1c39208c3:;
						{
							(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c6903_Ptr>(_1bc4c6903_Ptr{._field_Elem=(*(*(_self_))._field_d.alloc)._field_Type}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28)});
							(*(*(_self_))._field_d.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*(*(_self_))._field_d.alloc)), ._field_Op=(*((*(_self_))._field_u))._field_Op}), &__jule_any_type113);
						}
					}
					else {
						_case_begin_1c391eac0:;
						{
							(*(_self_))._field_d=nullptr;
							return;;
						}
					}
					_match_end_1c3920472:;
				};
			}
		}
		_match_end_1c391ee66:;
	};
	(*((*(_self_))._field_d))._field_Constant=nullptr;
	(*(*(_self_))._field_d.alloc)._field_untyped=false;
	(*(*(_self_))._field_d.alloc)._field_Lvalue=false;
	(*(*(_self_))._field_d.alloc)._field_Mutable=true;
}



inline void _1bc4a5b02_typeDecl(_1bc4a478d_unaryEval* _self_) {
	_1bc4c88e4_typeChecker _33897_tc = _1bc4c88e4_typeChecker{._field_s=(*((*(_self_))._field_e))._field_s, ._field_rootLookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_lookup=(*(*(_self_))._field_e.alloc)._field_lookup, ._field_referencer=jule::Ptr<_1bc4c7904_referencer>(nullptr), ._field_refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_errorToken=(*((*(_self_))._field_u))._field_Op, ._field_ignoreGenerics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_ignoredGenerics=nullptr, ._field_useGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_cycleRisk=true, ._field_disBuiltin=false, ._field_selection=false, ._field_ownerAlias=jule::Ptr<_1bc4b5705_TypeAlias>(nullptr), ._field_bannedGenerics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_inscatch=false};;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c09cbe38:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4ce224_buildPtrFromType(&_33897_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c33742b1:;
			{
				(*((*(_self_))._field_d))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4cda92_buildSptrFromType(&_33897_tc, &((*(*(_self_))._field_d.alloc)._field_Type)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)});
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Type, &__jule_any_type87);
			}
		}
		else {
			_case_begin_1c3925be7:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e, (*(*(_self_))._field_u.alloc)._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(*(_self_))._field_d.alloc)._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				(*(_self_))._field_d=nullptr;
				return;;
			}
		}
		_match_end_1c3926236:;
	};
	(*((*(_self_))._field_d))._field_Decl=true;
}



inline void _1bc4a5d00_evalData(_1bc4a478d_unaryEval* _self_) {
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c3378c00:;
			{
				jule::Ptr<_1bc4b64e7_Type> _34148_prefix = (*((*(_self_))._field_e))._field_prefix;;
				(*(*(_self_))._field_e.alloc)._field_prefix=nullptr;
				(*(_self_))._field_d=_1bc4a3b77_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
				(*(*(_self_))._field_e.alloc)._field_prefix=_34148_prefix;
			}
		}
		else {
			_case_begin_1c337820a:;
			{
				(*(_self_))._field_d=_1bc4a3b77_eval((*(_self_))._field_e, (*((*(_self_))._field_u))._field_Expr);
			}
		}
		_match_end_1c33787d2:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a6141_eval(_1bc4a478d_unaryEval* _self_, jule::Ptr<_1bc263d00_UnaryExpr> _342324_u) {
	(*(_self_))._field_u=_342324_u;
	_1bc4a5d00_evalData(_self_);
	if (((*(_self_))._field_d == nullptr)) {
		return nullptr;;
	};
	if ((*((*(_self_))._field_d))._field_Decl) {
		_1bc4a5b02_typeDecl(_self_);
		return (*(_self_))._field_d;;
	};
	jule::Ptr<_1bc4b64e7_Type> _34343_kind = (*((*(_self_))._field_d))._field_Type;;
	{
		auto &_match_expr{ (*((*((*(_self_))._field_u))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c337d3b9:;
			{
				_1bc4a4e0e_minus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c337d430:;
			{
				_1bc4a510c_plus(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c337d496:;
			{
				_1bc4a530a_caret(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1c337d50c:;
			{
				_1bc4a5508_excl(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c337d573:;
			{
				_1bc4a5706_star(_self_);
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c337d5d9:;
			{
				_1bc4a5904_amper(_self_);
			}
		}
		else {
			_case_begin_1c337cd7a:;
			{
				(*(_self_))._field_d=nullptr;
			}
		}
		_match_end_1c337d342:;
	};
	{
		
		if (((*(_self_))._field_d == nullptr)) {
			_case_begin_1c36891ca:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*((*(_self_))._field_u))._field_Op, static_cast<jule::Str>(jule::Str::lit("unary operator @ is not defined for type @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(*(_self_))._field_u.alloc)._field_Op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str(_34343_kind.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if (_1bc483e87_IsConst((*(_self_))._field_d.ptr())) {
			_case_begin_1c368a71a:;
			{
				(*(*(_self_))._field_d.alloc)._field_Model=jule::Any((*(*(_self_))._field_d.alloc)._field_Constant, &__jule_any_type15);
			}
		}
		_match_end_1c368a1dc:;
	};
	return (*(_self_))._field_d;;
}








inline jule::Bool _1bc4a6729_binaryEval_eq(_1bc4a6729_binaryEval *_self_, _1bc4a6729_binaryEval _other_) {
	return 
		(_self_->_field_e == _other_._field_e) &&
		(_self_->_field_l == _self_->_field_l) &&
		(_self_->_field_r == _self_->_field_r) &&
		(_self_->_field_op == _self_->_field_op);
}

inline _1bc4a6729_binaryEval static__1bc4a6d12_newPlain(jule::Ptr<_1bc48551b_eval> _347125_e) {
	return _1bc4a6729_binaryEval{._field_e=_347125_e, ._field_l=jule::Ptr<_1bc48354c_Data>(nullptr), ._field_r=jule::Ptr<_1bc48354c_Data>(nullptr), ._field_op=jule::Ptr<_1bc247014_Token>(nullptr)};;
}



inline _1bc4a6729_binaryEval static__1bc4a7186_new(jule::Ptr<_1bc48551b_eval> _347720_e, jule::Ptr<_1bc247014_Token> _347734_op) {
	return _1bc4a6729_binaryEval{._field_e=_347720_e, ._field_l=jule::Ptr<_1bc48354c_Data>(nullptr), ._field_r=jule::Ptr<_1bc48354c_Data>(nullptr), ._field_op=_347734_op};;
}



inline jule::Bool _1bc4a741c_checkTypeCompatibility(_1bc4a6729_binaryEval* _self_) {
	return _1bc416722_checkTypeCompatibility1((*((*(_self_))._field_e))._field_s, &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));;
}



inline jule::Bool _1bc4a76a3_checkStructCommonOperatorCompatibility(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc302113_FnIns> _349111_overload = nullptr;;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c3380eb0:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shl;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c3380b5d:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Shr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c3380bc4:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Add;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c3380c3a:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Sub;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c3380ca1:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Div;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c3380d17:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Mul;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c3380d7d:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Mod;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c33825bb:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_BitAnd;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1c3382632:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_BitOr;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c3382698:;
			{
				_349111_overload=(*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_BitXor;
			}
		}
		else {
			_case_begin_1c33806eb:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return false;;
			}
		}
		_match_end_1c3380ad6:;
	};
	if ((_349111_overload == nullptr)) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
		return false;;
	};
	jule::Ptr<_1bc300ead_ParamIns> _35237_p = (*(_349111_overload))._field_Params[1LL];;
	return _1bc4153e1_checkAssignType((*((*(_self_))._field_e))._field_s, (*((*(_35237_p))._field_Decl))._field_Reference, &((*_35237_p.alloc)._field_Type), &((*(_self_))._field_r), (*(_self_))._field_op, _1bc488a2a_getOwnerRefers((*(_self_))._field_e));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a7939_evalComptimeTypeInfo(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _35287_r = _1bc4bc564_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_35287_r == nullptr)) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("comptimeTypeInfo", 16), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc38e337_comptimeTypeInfo> _35337_l = _1bc4bc564_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type);;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c339193d:;
			{
				jule::Ptr<_1bac25065_Const> _35368_constant = static__1bac25a27_NewBool(_1bc4b6c34_Equal((*(_35337_l))._field_base, (*(_35287_r))._field_base));;
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35368_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35368_constant});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c3392dd4:;
			{
				jule::Ptr<_1bac25065_Const> _35438_constant = static__1bac25a27_NewBool((!(_1bc4b6c34_Equal((*(_35337_l))._field_base, (*(_35287_r))._field_base))));;
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_35438_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_35438_constant});;
			}
		}
		else {
			_case_begin_1c338e74e:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3391564:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a7bc0_evalNil(_1bc4a6729_binaryEval* _self_) {
	if ((!(_1bc4b83ea_NilCompatible((*((*(_self_))._field_r))._field_Type.ptr())))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c33979aa:;
			{
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c3395c94:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("nil", 3), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c33975d1:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a7e56_evalEnum(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc30be20_Enum> _35747_enm = _1bc4b9451_Enum((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c3399ddb:;
			{
				jule::Ptr<_1bc4b64e7_Type> _35788_rkind = (*((*(_self_))._field_r))._field_Type;;
				if ((_1bc4b9451_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
					_35788_rkind=(*((*(_1bc4b9451_Enum((*((*(_self_))._field_r))._field_Type)))._field_TypeSym))._field_Type;
				};
				if ((!(_1bc415d4d_checkTypeCompatibility((*((*(_self_))._field_e))._field_s, &((*((*(_35747_enm))._field_TypeSym))._field_Type), &(_35788_rkind), &((*(_self_))._field_op))))) {
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		_match_end_1c3399d64:;
	};
	if (((_1bc4b9451_Enum((*((*(_self_))._field_r))._field_Type) == nullptr) || (_35747_enm != _1bc4b9451_Enum((*((*(_self_))._field_r))._field_Type)))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_35747_enm))._field_Ident, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c3498869:;
			{
				if ((!(_1bc37ceb3_IsNum(_1bc4b68e3_Str((*((*(_35747_enm))._field_TypeSym))._field_Type.ptr()))))) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c34999ad:;
			{
				jule::Ptr<_1bc30b3b4_EnumItem> _36084_first = (*(_35747_enm))._field_Items[0LL];;
				{
					
					if (_1bac29025_IsI64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c349d4c8:;
						{
							if ((_1bac26929_ReadI64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant) == 0LL)) {
								goto _julec_label_1c34a2ae8;
							};
							goto _julec_label_1c34a18b6;
						}
					}
					else if (_1bac292ab_IsU64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant.ptr())) {
						_case_begin_1c349d5b6:;
						{
							if ((_1bac26bb0_ReadU64((*((*((*(_36084_first))._field_Value))._field_Data))._field_Constant) == 0LLU)) {
								goto _julec_label_1c34a2ae8;
							};
							goto _julec_label_1c34a18b6;
						}
					}
					else {
						_case_begin_1c349d110:;
						{
							__jule_panic_s(jule::Str::lit("sema: unimplemented enum type, this panic call should be unreachable", 68) + jule::Str("\nlocation: std/jule/sema/eval.jule:3621:5"));;
						}
					}
					_match_end_1c349d088:;
				};
				_julec_label_1c34a18b6:;
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("the @ enum type is not supports @ operator", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				_1bc485d57_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("define default enum field (the first one is default) with zero value to use & operator", 86)), jule::Slice<jule::Any>());
				_julec_label_1c34a2ae8:;
				goto _case_begin_1c3499a24;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c3499a24:;
			{
				if (((_1bc4b8b9d_Prim((*((*_35747_enm.alloc)._field_TypeSym))._field_Type.ptr()) == nullptr) || (!(_1bc37c8db_IsInt(_1bc4be984_Str(_1bc4b8b9d_Prim((*((*(_35747_enm))._field_TypeSym))._field_Type).ptr())))))) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c3495c51:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_35747_enm.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34984b2:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a81dc_evalTypeEnum(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc30d62a_TypeEnum> _36417_enm = _1bc4b96d7_TypeEnum((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c34a703c:;
			{
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c34a636b:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc30d99e_Str(_36417_enm.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34a6aca:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a8473_evalSptr(_1bc4a6729_binaryEval* _self_) {
	if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c34a955b:;
			{
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c34a847d:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34a9182:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a8709_evalPtr(_1bc4a6729_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c34ab937:;
			{
				if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c34acd9a:;
			{
				if ((_1bc4b91ba_Ptr((*((*(_self_))._field_l))._field_Type.ptr()) == nullptr)) {
					std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				};
				if (_1bc4c7470_IsUnsafe(_1bc4b91ba_Ptr((*((*(_self_))._field_l))._field_Type.ptr()).ptr())) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
				if ((!(_1bc4ae831_isPtrArithmeticCompatible(&((*(_self_))._field_l), &((*(_self_))._field_r))))) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is incompatible to use for pointer arithmetic", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c34ab030:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34aae53:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a8990_evalArr(_1bc4a6729_binaryEval* _self_) {
	if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c34b4b60:;
			{
				if (((*((*((*((*(_self_))._field_e))._field_s))._field_meta))._field_runtime != nullptr)) {
					jule::Ptr<_1bc302113_FnIns> _37189_f = _1bc300562_instanceForce(_1bb4732c9_runtimeFindFn(&((*(*((*((*(_self_))._field_e))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("arrayCmp", 8))));;
					(*(_37189_f))._field_Generics=jule::append((*_37189_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=(*(_1bc4b996d_Arr((*((*(_self_))._field_l))._field_Type.ptr())))._field_Elem, ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); __jule_collection; }));
					jule::Bool _37205_ok;
					({
						__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc425951_checkGenericFn((*((*(_self_))._field_e))._field_s, &(_37189_f), &((*(_self_))._field_op));
						_37205_ok = __jule_assign_result.__jule_result_arg0;
					});
					if ((!(_37205_ok))) {
						__jule_panic_s(jule::Str::lit("sema: arrayCmp evaluation failed, this is an implementation mistake", 67) + jule::Str("\nlocation: std/jule/sema/eval.jule:3722:6"));;
					};
					_1c14e4c91_pushReference((*(_self_))._field_e, &(_37189_f));
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c34ae7e7:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34b4786:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a8c26_evalStruct(_1bc4a6729_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c34b6535:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_Gt == nullptr)) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c34b65bd:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type.ptr())))._field_Operators._field_GtEq == nullptr)) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1c34bac98:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_Lt == nullptr)) {
					_1bc4859e4_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c34bad0e:;
			{
				if (((*(_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type)))._field_Operators._field_LtEq == nullptr)) {
					_1bc4859e4_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_op.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c34bad75:;
			{
				if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
					return nullptr;;
				};
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		_match_end_1c34b6458:;
	};
	if ((!(_1bc4a76a3_checkStructCommonOperatorCompatibility(_self_)))) {
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a8eac_evalTrait(_1bc4a6729_binaryEval* _self_) {
	if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c34c7513:;
			{
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c34c68b9:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34c7139:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a9243_evalAny(_1bc4a6729_binaryEval* _self_) {
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c34c98de:;
			{
				_1bc4d3bc9_applyImplicitCast(&((*((*(_self_))._field_e))._field_s), &((*((*(_self_))._field_l))._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op), _1bc488a2a_getOwnerRefers((*(_self_))._field_e));
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c34c8ed7:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("any", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34c8e0a:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a94c9_evalBool(_1bc4a6729_binaryEval* _self_) {
	if ((!(_1bc4a741c_checkTypeCompatibility(_self_)))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(54LLU) || _match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c34cca79:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c34cac20:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type.ptr()), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34cc6a0:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4a9760_evalStr(_1bc4a6729_binaryEval* _self_) {
	jule::Str _38347_rk = _1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type.ptr());;
	if ((_38347_rk != static_cast<jule::Str>(jule::Str::lit("str", 3)))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_38347_rk, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c34d1d14:;
			{
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c34d1c26:;
			{
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		else {
			_case_begin_1c34d07d5:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c34d186e:;
	};
}



inline void _1bc4a995d_setTypeToGreater(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc4be610_Prim> _38593_lp = _1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	jule::Ptr<_1bc4be610_Prim> _38603_rp = _1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type);;
	if (((*(*(_self_))._field_l.alloc)._field_untyped && (!((*((*(_self_))._field_r))._field_untyped)))) {
		(*(*(_self_))._field_l.alloc)._field_Type=(*(*(_self_))._field_r.alloc)._field_Type;
		(*((*(*(_self_))._field_l.alloc)._field_Constant))._field_Kind=(*(_38603_rp))._field_Kind;
		(*(*(_self_))._field_l.alloc)._field_untyped=false;
	} else if (((!((*(*(_self_))._field_l.alloc)._field_untyped)) && (*((*(_self_))._field_r))._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*((*(*(_self_))._field_r.alloc)._field_Constant))._field_Kind=(*(_38593_lp))._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	} else if (((*(*(_self_))._field_l.alloc)._field_untyped && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		(*(*(_self_))._field_r.alloc)._field_Type=(*(*(_self_))._field_l.alloc)._field_Type;
		(*(*((*(_self_))._field_r))._field_Constant.alloc)._field_Kind=(*_38593_lp.alloc)._field_Kind;
		(*(*(_self_))._field_r.alloc)._field_untyped=false;
	};
}



inline void _1bc4a9c16_checkModData(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _387633_d) {
	if ((!(_1bc483e87_IsConst((*(_387633_d)).ptr())))) {
		if (((_1bc4b8b9d_Prim((*((*(_387633_d))))._field_Type.ptr()) == nullptr) || (!(_1bc37c8db_IsInt((*(_1bc4b8b9d_Prim((*((*(_387633_d))))._field_Type)))._field_Kind))))) {
			_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
		};
		return;;
	};
	{
		
		if (_1bc46db64_sigAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), _387633_d)) {
			_case_begin_1c34dd35e:;
			{
				_1bac27ebe_SetI64((*((*(_387633_d))))._field_Constant.ptr(), _1bac276e9_AsI64((*((*(_387633_d))))._field_Constant));
			}
		}
		else if (_1bc46e02c_unsigAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), _387633_d)) {
			_case_begin_1c34dd040:;
			{
				_1bac28277_SetU64((*((*(_387633_d))))._field_Constant.ptr(), _1bac27980_AsU64((*((*(_387633_d))))._field_Constant));
			}
		}
		else {
			_case_begin_1c34dcec9:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("module operator must be used with integer type", 46)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c34dce63:;
	};
}



inline void _1bc4a9e14_mod(_1bc4a6729_binaryEval* _self_) {
	_1bc4a9c16_checkModData(_self_, &((*(_self_))._field_l));
	_1bc4a9c16_checkModData(_self_, &((*(_self_))._field_r));
}



inline jule::Bool _1bc4aa310_numbersAreCompatibile(_1bc4a6729_binaryEval* _self_, jule::Str* _389834_lk, jule::Str* _389844_rk) {
	if ((!(_1bc37ceb3_IsNum((*(_389844_rk)))))) {
		return false;;
	};
	if ((_1bc483e87_IsConst((*(_self_))._field_l.ptr()) && (*(*(_self_))._field_l.alloc)._field_untyped)) {
		return true;;
	};
	if (((*(_389834_lk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
		if ((_1bc483e87_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1bc46d7e0_floatAssignable(_389834_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389844_rk)) == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
	};
	if (((*(_389834_lk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)))) {
		if ((_1bc483e87_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
			return _1bc46d7e0_floatAssignable(_389834_lk, &((*(_self_))._field_r));;
		};
		return ((*(_389844_rk)) == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
	};
	if ((_1bc483e87_IsConst((*(_self_))._field_r.ptr()) && (*(*(_self_))._field_r.alloc)._field_untyped)) {
		return _1bc46e3a1_intAssignable((*(_389834_lk)), &((*(_self_))._field_r));;
	};
	return ((*(_389834_lk)) == (*(_389844_rk)));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4aa596_shift(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc4be610_Prim> _39263_lk = _1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	if ((_39263_lk == nullptr)) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc4be610_Prim> _39313_rk = _1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type);;
	if ((_39313_rk == nullptr)) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1bc37ceb3_IsNum((*(_39263_lk))._field_Kind))) || (!(_1bc37ceb3_IsNum((*(_39313_rk))._field_Kind))))) {
		_1bc41626b_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	if ((!(_1bc37c8db_IsInt((*(_39263_lk))._field_Kind)))) {
		if (((!(_1bc483e87_IsConst((*(_self_))._field_l))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_39263_lk.alloc)._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*(_39313_rk))._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1bc46e3a1_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_l))) {
			_1bac27ebe_SetI64((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), _1bac276e9_AsI64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1bc53b0d8_primI64;
		} else if (_1bc46e3a1_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_l))) {
			_1bac28277_SetU64((*((*(_self_))._field_l))._field_Constant, _1bac27980_AsU64((*((*(_self_))._field_l))._field_Constant));
			(*(*(_self_))._field_l.alloc)._field_Type=_1bc53bddb_primU64;
		};
	};
	if ((!(_1bc37c8db_IsInt((*(_39313_rk))._field_Kind)))) {
		if (((!(_1bc483e87_IsConst((*(_self_))._field_r.ptr()))) || (!((*(*(_self_))._field_l.alloc)._field_untyped)))) {
			_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(_39263_lk))._field_Kind, &__jule_any_type5); (*it++) = jule::Any((*_39313_rk.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		} else if (_1bc46e3a1_intAssignable(static_cast<jule::Str>(jule::Str::lit("i64", 3)), &((*(_self_))._field_r))) {
			_1bac27ebe_SetI64((*((*(_self_))._field_r))._field_Constant.ptr(), _1bac276e9_AsI64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1bc53b0d8_primI64;
		} else if (_1bc46e3a1_intAssignable(static_cast<jule::Str>(jule::Str::lit("u64", 3)), &((*(_self_))._field_r))) {
			_1bac28277_SetU64((*((*(_self_))._field_r))._field_Constant, _1bac27980_AsU64((*((*(_self_))._field_r))._field_Constant));
			(*(*(_self_))._field_r.alloc)._field_Type=_1bc53bddb_primU64;
		};
	};
	if ((!(_1bc4ae15a_isOkForShifting(&((*(_self_))._field_r))))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("bit shifting value is must be unsigned", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return (*(_self_))._field_l;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4aa82c_evalFloat(_1bc4a6729_binaryEval* _self_) {
	jule::Str _39813_lk = (*(_1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _39823_rk = (*(_1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1bc4aa310_numbersAreCompatibile(_self_, &(_39813_lk), &(_39823_rk))))) {
		_1bc41626b_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c35095bc:;
			{
				_1bc4a995d_setTypeToGreater(_self_);
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		_match_end_1c3509545:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c350b091:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4006:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c350be3d:;
			{
				_1bc4a995d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c350bea4:;
			{
				_1bc4a995d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c350a535:;
			{
				if ((!(_1bc37c8db_IsInt(_39823_rk)))) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_39813_lk, &__jule_any_type5); (*it++) = jule::Any(_39823_rk, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1bc4a9e14_mod(_self_);
				_1bc4a995d_setTypeToGreater(_self_);
				return (*(_self_))._field_r;;
			}
		}
		else {
			_case_begin_1c35096aa:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for floating-point type(s)", 52)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c350a4be:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4aaab3_evalInt(_1bc4a6729_binaryEval* _self_) {
	jule::Str _40303_lk = (*(_1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type.ptr())))._field_Kind;;
	jule::Str _40313_rk = (*(_1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type)))._field_Kind;;
	if ((!(_1bc4aa310_numbersAreCompatibile(_self_, &(_40303_lk), &(_40313_rk))))) {
		_1bc41626b_pushCompatiblityError((*((*(_self_))._field_e))._field_s.ptr(), &((*(*(_self_))._field_l.alloc)._field_Type), &((*(_self_))._field_r), &((*(_self_))._field_op));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU) || _match_expr == static_cast<jule::U32>(52LLU) || _match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c3512e11:;
			{
				return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539b64_primBool, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
			}
		}
		_match_end_1c3512d89:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c35146e8:;
			{
				__jule_panic_s(jule::Str::lit("sema: binary shifting operator handling failed", 46) + jule::Str("\nlocation: std/jule/sema/eval.jule:4055:4"));;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(65LLU) || _match_expr == static_cast<jule::U32>(66LLU) || _match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c3515595:;
			{
				_1bc4a995d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c351560b:;
			{
				_1bc4a995d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c3513d13:;
			{
				_1bc4a9e14_mod(_self_);
				_1bc4a995d_setTypeToGreater(_self_);
				return (*(_self_))._field_l;;
			}
		}
		else {
			_case_begin_1c3512eee:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for integer type(s)", 45)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c35142db:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4aad49_evalPrim(_1bc4a6729_binaryEval* _self_) {
	jule::Ptr<_1bc4be610_Prim> _40783_prim = _1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type.ptr());;
	{
		
		if (_1bc4c2844_IsBool(_40783_prim.ptr())) {
			_case_begin_1c35188b7:;
			{
				return _1bc4a94c9_evalBool(_self_);;
			}
		}
		else if (_1bc4c2aca_IsStr(_40783_prim.ptr())) {
			_case_begin_1c3518961:;
			{
				return _1bc4a9760_evalStr(_self_);;
			}
		}
		_match_end_1c351882e:;
	};
	if ((_1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type) == nullptr)) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4be984_Str(_40783_prim.ptr()), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		
		if (_1bc37cc2c_IsFloat((*(_40783_prim))._field_Kind)) {
			_case_begin_1c351b7ee:;
			{
				return _1bc4aa82c_evalFloat(_self_);;
			}
		}
		else if (_1bc37c8db_IsInt((*(_40783_prim))._field_Kind)) {
			_case_begin_1c351b887:;
			{
				return _1bc4aaab3_evalInt(_self_);;
			}
		}
		else {
			_case_begin_1c351b788:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3519aa5:;
	};
}



inline jule::Bool _1bc4ab0d0_checkSpecialCases(_1bc4a6729_binaryEval* _self_) {
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	jule::Bool _41033_comparing = (((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(50LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(51LLU)));;
	if ((!(_41033_comparing))) {
		return __jule_func_result;;
	};
	if (((!(_1bc4b7b47_Comparable((*((*(_self_))._field_l))._field_Type.ptr()))) && (!(_1bc4b762a_IsNil((*((*(_self_))._field_r))._field_Type))))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	} else if (((!(_1bc4b7b47_Comparable((*((*(_self_))._field_r))._field_Type.ptr()))) && (!(_1bc4b762a_IsNil((*((*(_self_))._field_l))._field_Type))))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("type @ is not comparable", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_r))._field_Type), &__jule_any_type5); __jule_collection; }));
		__jule_func_result=false;
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4ab366_evalOp(_1bc4a6729_binaryEval* _self_) {
	jule::Bool _41183_ok = _1bc4ab0d0_checkSpecialCases(_self_);;
	if ((!(_41183_ok))) {
		return nullptr;;
	};
	if ((_1bc4ba221_Struct((*((*(_self_))._field_l))._field_Type.ptr()) != nullptr)) {
		return _1bc4a8c26_evalStruct(_self_);;
	};
	if ((((*((*(_self_))._field_op))._field_Id == static_cast<jule::U32>(56LLU)) || ((*(*(_self_))._field_op.alloc)._field_Id == static_cast<jule::U32>(57LLU)))) {
		return _1bc4aa596_shift(_self_);;
	};
	{
		
		if (_1bc4b78b1_Void((*((*(_self_))._field_l))._field_Type.ptr())) {
			_case_begin_1c379d6c9:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("void", 4), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		else if ((_1bc4bc564_comptimeTypeInfo((*((*(_self_))._field_r))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c379d8b6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c379d740;
			}
		}
		else if ((_1bc4bc564_comptimeTypeInfo((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c379d740:;
			{
				return _1bc4a7939_evalComptimeTypeInfo(_self_);;
			}
		}
		else if (((_1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type) != nullptr) && _1bc4c2d61_IsAny(_1bc4b8b9d_Prim((*((*(_self_))._field_r))._field_Type).ptr()))) {
			_case_begin_1c379d7a6:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c379ed5c;
			}
		}
		else if (_1bc4b762a_IsNil((*((*(_self_))._field_r))._field_Type)) {
			_case_begin_1c379ed5c:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c379edc3;
			}
		}
		else if (_1bc4b762a_IsNil((*((*(_self_))._field_l))._field_Type)) {
			_case_begin_1c379edc3:;
			{
				return _1bc4a7bc0_evalNil(_self_);;
			}
		}
		else if (((_1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type) != nullptr) && _1bc4c2d61_IsAny(_1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type).ptr()))) {
			_case_begin_1c379eec2:;
			{
				return _1bc4a9243_evalAny(_self_);;
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1c37a0038:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c37a009e;
			}
		}
		else if ((_1bc4b96d7_TypeEnum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a009e:;
			{
				return _1bc4a81dc_evalTypeEnum(_self_);;
			}
		}
		else if ((_1bc4b9451_Enum((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1c37a0115:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c37a017b;
			}
		}
		else if ((_1bc4b9451_Enum((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a017b:;
			{
				return _1bc4a7e56_evalEnum(_self_);;
			}
		}
		else if ((_1bc4b8e34_Sptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1c37a01e2:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c37a0258;
			}
		}
		else if ((_1bc4b8e34_Sptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a0258:;
			{
				return _1bc4a8473_evalSptr(_self_);;
			}
		}
		else if ((_1bc4b91ba_Ptr((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1c37a02be:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c37a0335;
			}
		}
		else if ((_1bc4b91ba_Ptr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a0335:;
			{
				return _1bc4a8709_evalPtr(_self_);;
			}
		}
		else if ((_1bc4b996d_Arr((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a039b:;
			{
				return _1bc4a8990_evalArr(_self_);;
			}
		}
		else if ((_1bc4ba4a7_Trait((*((*(_self_))._field_r))._field_Type) != nullptr)) {
			_case_begin_1c37a0467:;
			{
				std::swap((*(_self_))._field_l, (*(_self_))._field_r);
				goto _case_begin_1c37a04cd;
			}
		}
		else if ((_1bc4ba4a7_Trait((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a04cd:;
			{
				return _1bc4a8eac_evalTrait(_self_);;
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_self_))._field_l))._field_Type) != nullptr)) {
			_case_begin_1c37a0544:;
			{
				return _1bc4aad49_evalPrim(_self_);;
			}
		}
		else {
			_case_begin_1c379d4ed:;
			{
				_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("operator @ is not defined for type @", 36)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_self_))._field_op))._field_Kind, &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_self_))._field_l))._field_Type), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c379d487:;
	};
}



inline void _1bc4ab61e_evalConst(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _418830_d) {
	{
		
		if (((*(_418830_d)) == nullptr) || ((*((*(_self_))._field_l))._field_Model == nullptr) || ((*((*(_self_))._field_r))._field_Model == nullptr)) {
			_case_begin_1c37b1610:;
			{
				return;;
			}
		}
		else if ((!(_1bc483e87_IsConst((*(_self_))._field_l.ptr()))) || (!(_1bc483e87_IsConst((*(_self_))._field_r.ptr())))) {
			_case_begin_1c37b1e3a:;
			{
				(*((*(_418830_d))))._field_Constant=nullptr;
				(*((*(_418830_d))))._field_untyped=false;
				return;;
			}
		}
		_match_end_1c37b1d08:;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c339e165:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bc2dae76_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c339e5a5:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool((!(_1bc2dae76_Eq((*((*(_self_))._field_l))._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c339e61b:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bac2a7b8_Or((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c339e682:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bac2a477_And((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c339e6e8:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bc2db949_Gt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1c339e770:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bc2db2b7_Lt((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c339e7e7:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bc2dbc8a_GtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c339e86e:;
			{
				(*((*(_418830_d))))._field_Constant=static__1bac25a27_NewBool(_1bc2db608_LtEq((*(*(_self_))._field_l.alloc)._field_Constant.ptr(), (*((*((*(_self_))._field_r))._field_Constant))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c339e8e6:;
			{
				_1bc2dc0cb_Add((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c339e96d:;
			{
				_1bc2dc41c_Sub((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c339e9e5:;
			{
				_1bc2dc75d_Mul((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c339ea6c:;
			{
				jule::Bool _42284_ok = _1bc2dca9e_Div((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42284_ok)) && (_1bac27c16_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
				jule::Ptr<_1bc4be610_Prim> _42338_prim = _1bc4b8b9d_Prim((*((*(_418830_d))))._field_Type.ptr());;
				{
					
					if (_1bc37c314_IsSigInt((*(_42338_prim))._field_Kind)) {
						_case_begin_1c352d9cb:;
						{
							_1bac27ebe_SetI64((*((*(_418830_d))))._field_Constant, _1bac276e9_AsI64((*((*(_418830_d))))._field_Constant));
						}
					}
					else if (_1bc37c622_IsUnsigInt((*(_42338_prim))._field_Kind)) {
						_case_begin_1c352da75:;
						{
							_1bac28277_SetU64((*((*(_418830_d))))._field_Constant, _1bac27980_AsU64((*((*(_418830_d))))._field_Constant));
						}
					}
					_match_end_1c352d954:;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c339eae4:;
			{
				jule::Bool _42414_ok = _1bc2dcde0_Mod((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));;
				if (((!(_42414_ok)) && (_1bac27c16_AsF64((*((*(_self_))._field_r))._field_Constant) == 0LL))) {
					_1bc4859e4_pushErr((*(_self_))._field_e, (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("divide by zero", 14)), jule::Slice<jule::Any>());
				};
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1c339eb6b:;
			{
				_1bc2dd572_BitwiseOr((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c339ebe3:;
			{
				_1bc2dd231_BitwiseAnd((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c339ec6a:;
			{
				_1bc2dd8b3_Xor((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c339ece2:;
			{
				_1bc2ddc04_Lshift((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c339ed69:;
			{
				_1bc2de045_Rshift((*((*(_self_))._field_l))._field_Constant, (*((*((*(_self_))._field_r))._field_Constant)));
				(*((*(_418830_d))))._field_Constant=(*(*(_self_))._field_l.alloc)._field_Constant;
			}
		}
		_match_end_1c339e396:;
	};
	(*((*(_418830_d))))._field_Model=jule::Any((*((*(_418830_d))))._field_Constant, &__jule_any_type15);
	_1bc4b1558_applyCastModelByEnum(&((*((*(_self_))._field_e))._field_s), _418830_d, _1bc4b9451_Enum((*((*(_418830_d))))._field_Type.ptr()), &((*(_self_))._field_op), _1bc488a2a_getOwnerRefers((*(_self_))._field_e));
}



inline void _1bc4ab8c7_checkData(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _426630_d) {
	jule::Ptr<_1bc302113_FnIns> _42673_f = _1bc4b9e8a_Fn((*((*(_426630_d))))._field_Type.ptr());;
	if ((((_42673_f != nullptr) && ((*_42673_f.alloc)._field_Decl != nullptr)) && _1bc2ee792_IsMethod((*(_42673_f))._field_Decl))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*(_self_))._field_op, static_cast<jule::Str>(jule::Str::lit("invalid expression used for binary operation", 44)), jule::Slice<jule::Any>());
	};
}



inline void _1bc4abac5_checkDatas(_1bc4a6729_binaryEval* _self_) {
	_1bc4ab8c7_checkData(_self_, &((*(_self_))._field_l));
	_1bc4ab8c7_checkData(_self_, &((*(_self_))._field_r));
}



inline void _1bc4abd7d_setModel(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _427829_d) {
	if (_1bc483e87_IsConst((*(_427829_d)).ptr())) {
		if (((_1bc483e87_IsConst((*(_self_))._field_l.ptr()) && _1bc483e87_IsConst((*(_self_))._field_r.ptr())) || (((*(*(_self_))._field_l.alloc)._field_Model == nullptr) && ((*(*(_self_))._field_r.alloc)._field_Model == nullptr)))) {
			return;;
		};
	};
	jule::Ptr<_1bc48354c_Data> _42897_l;
	jule::Ptr<_1bc48354c_Data> _428914_r;
	({
		jule::Ptr<_1bc48354c_Data> ___jule_assign_arg = (*(_self_))._field_l;
		jule::Ptr<_1bc48354c_Data> _1___jule_assign_arg = (*(_self_))._field_r;
		_42897_l = ___jule_assign_arg;
		_428914_r = _1___jule_assign_arg;
	});
	if ((!(_1bc4842c8_GoodOperand(_42897_l.ptr(), &(_428914_r))))) {
		std::swap(_42897_l, _428914_r);
	};
	(*((*(_427829_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e1c90_BinaryExprModel>(_1bc2e1c90_BinaryExprModel{._field_Left=jule::new_ptr<_1bc2e1795_OperandExprModel>(_1bc2e1795_OperandExprModel{._field_Type=(*(_42897_l))._field_Type, ._field_Model=(*_42897_l.alloc)._field_Model}), ._field_Right=jule::new_ptr<_1bc2e1795_OperandExprModel>(_1bc2e1795_OperandExprModel{._field_Type=(*(_428914_r))._field_Type, ._field_Model=(*_428914_r.alloc)._field_Model}), ._field_Op=(*(_self_))._field_op}), &__jule_any_type114);
}



inline void _1bc4ac136_postEval(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _430729_d) {
	(*((*(_430729_d))))._field_Lvalue=false;
	_1bc4abd7d_setModel(_self_, _430729_d);
}



inline jule::Ptr<_1bc48354c_Data> _1bc4ac532_solveExplicit(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc48354c_Data>* _431234_l, jule::Ptr<_1bc48354c_Data>* _431249_r) {
	({
		jule::Ptr<_1bc48354c_Data> ___jule_assign_arg = (*(_431234_l));
		jule::Ptr<_1bc48354c_Data> _1___jule_assign_arg = (*(_431249_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1bc4abac5_checkDatas(_self_);
	jule::Ptr<_1bc48354c_Data> _43177_d = _1bc4ab366_evalOp(_self_);;
	({
		jule::Ptr<_1bc48354c_Data> ___jule_assign_arg = (*(_431234_l));
		jule::Ptr<_1bc48354c_Data> _1___jule_assign_arg = (*(_431249_r));
		(*(_self_))._field_l = ___jule_assign_arg;
		(*(_self_))._field_r = _1___jule_assign_arg;
	});
	_1bc4ab61e_evalConst(_self_, &(_43177_d));
	if ((_43177_d != nullptr)) {
		(*_43177_d.alloc)._field_Mutable=true;
		_1bc4ac136_postEval(_self_, &(_43177_d));
	};
	return _43177_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc4ac873_eval(_1bc4a6729_binaryEval* _self_, jule::Ptr<_1bc26530c_BinaryExpr>* _433225_op) {
	if (((*((*((*(_433225_op))))._field_Op))._field_Id == static_cast<jule::U32>(71LLU))) {
		_1bc4859e4_pushErr((*(_self_))._field_e.ptr(), (*((*(_433225_op))))._field_Op, static_cast<jule::Str>(jule::Str::lit("assignments not available for expressions", 41)), jule::Slice<jule::Any>());
		_1bc485d57_pushSuggestion((*(_self_))._field_e, static_cast<jule::Str>(jule::Str::lit("use clear imperative approach, comes relevant assignment statement before the expression", 88)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc48354c_Data> _43397_l = _1bc4a3eb8_evalExpr1((*(_self_))._field_e, (*((*(_433225_op))))._field_Left);;
	if (((_43397_l == nullptr) || ((*(_43397_l))._field_Type == nullptr))) {
		return nullptr;;
	};
	jule::Ptr<_1bc4b64e7_Type> _43447_prefix = (*(*(_self_))._field_e.alloc)._field_prefix;;
	(*(*(_self_))._field_e.alloc)._field_prefix=(*(_43397_l))._field_Type;
	__JULE_DEFER({
		(*(*(_self_))._field_e.alloc)._field_prefix=_43447_prefix;
	});;
	jule::Ptr<_1bc48354c_Data> _43477_r = _1bc4a3eb8_evalExpr1((*(_self_))._field_e, (*((*(_433225_op))))._field_Right);;
	if (((_43477_r == nullptr) || ((*(_43477_r))._field_Type == nullptr))) {
		return nullptr;;
	};
	(*(_self_))._field_op=(*((*(_433225_op))))._field_Op;
	jule::Ptr<_1bc48354c_Data> _43547_d = _1bc4ac532_solveExplicit(_self_, &(_43397_l), &(_43477_r));;
	if ((((_43547_d != nullptr) && (*_43397_l.alloc)._field_IsRune) && (*(_43477_r))._field_IsRune)) {
		(*_43547_d.alloc)._field_IsRune=true;
	};
	return _43547_d;;
}
















inline jule::Bool _1bc4b64e7_Type_eq(_1bc4b64e7_Type *_self_, _1bc4b64e7_Type _other_) {
	return 
		(_self_->_field_BindIdent == _other_._field_BindIdent) &&
		(_self_->_field_Generic == _self_->_field_Generic) &&
		(_self_->_field_Variadic == _self_->_field_Variadic) &&
		(_self_->_field_Kind == _self_->_field_Kind);
}

inline jule::Str _1bc4b68e3_Str(_1bc4b64e7_Type* _self_) {
	if (_1bc4b762a_IsNil(_self_)) {
		return jule::Str::lit("nil", 3);;
	};
	_1a95669ea_Builder _567_kind = static__1a9567369_New(16LL);;
	if ((*(_self_))._field_Variadic) {
		({
			auto except = _1a95679eb_WriteStr(&_567_kind, jule::Str::lit("...", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:59:4"));
			(except.result);
		});
	};
	if (_1bc4b7394_Binded(_self_)) {
		({
			auto except = _1a95679eb_WriteStr(&_567_kind, jule::Str::lit("cpp.", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:63:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&_567_kind, (*(_self_))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:64:4"));
			(except.result);
		});
	} else {
		({
			auto except = _1a95679eb_WriteStr(&_567_kind, ((_1bc4b6041_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1bc4b5a9b_Str((*(_self_))._field_Kind.data));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:66:4"));
			(except.result);
		});
	};
	return _1a956837b_Str(&_567_kind);;
}



inline jule::Bool _1bc4b6c34_Equal(jule::Ptr<_1bc4b64e7_Type> _self_, jule::Ptr<_1bc4b64e7_Type> _7218_other) {
	if (_1bc4b762a_IsNil(_self_.ptr())) {
		return _1bc4b762a_IsNil(_7218_other.ptr());;
	};
	if ((_1bc4b7394_Binded(_self_.ptr()) || _1bc4b7394_Binded(_7218_other.ptr()))) {
		return ((_1bc4b7394_Binded(_self_) == _1bc4b7394_Binded(_7218_other)) && ((*_self_.alloc)._field_BindIdent == (*_7218_other.alloc)._field_BindIdent));;
	};
	return ((_1bc4b6041_KindMptrData*)(*(_self_))._field_Kind.safe_type())->_1bc4b5ddc_Equal((*(_self_))._field_Kind.data, _7218_other);;
}



inline jule::Bool _1bc4b7394_Binded(_1bc4b64e7_Type* _self_) {
	return ((*(_self_))._field_BindIdent.len() != 0LL);;
}



inline jule::Bool _1bc4b762a_IsNil(_1bc4b64e7_Type* _self_) {
	return ((*(_self_))._field_Kind == nullptr);;
}



inline jule::Bool _1bc4b78b1_Void(_1bc4b64e7_Type* _self_) {
	jule::Ptr<_1bc4be610_Prim> _923_prim = _1bc4b8b9d_Prim(_self_);;
	return ((_923_prim != nullptr) && (*(_923_prim))._field_Kind.equal("void", 4));;
}



inline jule::Bool _1bc4b7b47_Comparable(_1bc4b64e7_Type* _self_) {
	{
		_1bc4b64e7_Type* _998__self = _self_;;
		if ((_1bc4ba221_Struct(_998__self) != nullptr)) {
			return (*(_1bc4ba221_Struct(_998__self)))._field_Comparable;;
		};
		if ((_1bc4b996d_Arr(_998__self) != nullptr)) {
			return _1bc4b7b47_Comparable((*(_1bc4b996d_Arr(_998__self)))._field_Elem.ptr());;
		};
		return (((_1bc4ba73d_Map(_998__self) == nullptr) && (_1bc4b9c04_Slc(_998__self) == nullptr)) && (_1bc4b9e8a_Fn(_998__self) == nullptr));;
	};
}



inline jule::Bool _1bc4b7dcd_Mutable(_1bc4b64e7_Type* _self_) {
	{
		_1bc4b64e7_Type* _1138__self = _self_;;
		if ((_1bc4ba221_Struct(_1138__self) != nullptr)) {
			return (*(_1bc4ba221_Struct(_1138__self)))._field_Mutable;;
		};
		if ((_1bc4ba4a7_Trait(_1138__self) != nullptr)) {
			return true;;
		};
		if ((_1bc4b8b9d_Prim(_1138__self) != nullptr)) {
			jule::Ptr<_1bc4be610_Prim> _1215_p = _1bc4b8b9d_Prim(_1138__self);;
			return _1bc4c2d61_IsAny(_1215_p.ptr());;
		};
		if ((_1bc4b996d_Arr(_1138__self) != nullptr)) {
			return _1bc4b7dcd_Mutable((*(_1bc4b996d_Arr(_1138__self)))._field_Elem.ptr());;
		};
		return (((_1bc4b9c04_Slc(_1138__self) != nullptr) || (_1bc4b91ba_Ptr(_1138__self) != nullptr)) || (_1bc4b8e34_Sptr(_1138__self) != nullptr));;
	};
}



inline jule::Bool _1bc4b8164_Ordered(_1bc4b64e7_Type* _self_) {
	{
		_1bc4b64e7_Type* _1368__self = _self_;;
		jule::Ptr<_1bc4be610_Prim> _1374_prim = _1bc4b8b9d_Prim(_1368__self);;
		if ((_1374_prim != nullptr)) {
			return (_1bc37ceb3_IsNum((*_1374_prim.alloc)._field_Kind) || _1bc4c2aca_IsStr(_1374_prim));;
		};
		if ((_1bc4b91ba_Ptr(_1368__self) != nullptr)) {
			return true;;
		};
		jule::Ptr<_1bc2810c5_StructIns> _1444_s = _1bc4ba221_Struct(_1368__self);;
		if ((_1444_s != nullptr)) {
			return (((((*_1444_s.alloc)._field_Operators._field_Gt != nullptr) && ((*_1444_s.alloc)._field_Operators._field_GtEq != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_Lt != nullptr)) && ((*_1444_s.alloc)._field_Operators._field_LtEq != nullptr));;
		};
		jule::Ptr<_1bc30be20_Enum> _1514_enm = _1bc4b9451_Enum(_1368__self);;
		if ((_1514_enm != nullptr)) {
			return _1bc37ceb3_IsNum(_1bc4b68e3_Str((*((*_1514_enm.alloc)._field_TypeSym))._field_Type.ptr()));;
		};
		return false;;
	};
}



inline jule::Bool _1bc4b83ea_NilCompatible(_1bc4b64e7_Type* _self_) {
	{
		_1bc4b64e7_Type* _1628__self = _self_;;
		jule::Ptr<_1bc4be610_Prim> _1644_prim = _1bc4b8b9d_Prim(_1628__self);;
		if (((_1644_prim != nullptr) && _1bc4c2d61_IsAny(_1644_prim))) {
			return true;;
		};
		return (((((((_1bc4b762a_IsNil(_1628__self) || (_1bc4b9e8a_Fn(_1628__self) != nullptr)) || (_1bc4b8e34_Sptr(_1628__self) != nullptr)) || (_1bc4b91ba_Ptr(_1628__self) != nullptr)) || (_1bc4ba4a7_Trait(_1628__self) != nullptr)) || (_1bc4b9c04_Slc(_1628__self) != nullptr)) || (_1bc4ba73d_Map(_1628__self) != nullptr)) || (_1bc4b96d7_TypeEnum(_1628__self) != nullptr));;
	};
}



inline jule::Bool _1bc4b8681_GC(_1bc4b64e7_Type* _self_) {
	{
		_1bc4b64e7_Type* _1838__self = _self_;;
		jule::Ptr<_1bc4be610_Prim> _1844_prim = _1bc4b8b9d_Prim(_1838__self);;
		if ((_1844_prim != nullptr)) {
			return (_1bc4c2d61_IsAny(_1844_prim) || _1bc4c2aca_IsStr(_1844_prim));;
		};
		return ((((_1bc4b8e34_Sptr(_1838__self) != nullptr) || (_1bc4b9c04_Slc(_1838__self) != nullptr)) || (_1bc4ba4a7_Trait(_1838__self) != nullptr)) || (_1bc4b96d7_TypeEnum(_1838__self) != nullptr));;
	};
}



inline jule::Bool _1bc4b8917_Variadicable(_1bc4b64e7_Type* _self_) {
	{
		_1bc4b64e7_Type* _1968__self = _self_;;
		return (_1bc4b9c04_Slc(_1968__self) != nullptr);;
	};
}



inline jule::Ptr<_1bc4be610_Prim> _1bc4b8b9d_Prim(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)) {
			_case_begin_1c3932374:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4be610_Prim>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22);;
			}
		}
		else {
			_case_begin_1c39319a0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3931939:;
	};
}



inline jule::Ptr<_1bc4c313b_Sptr> _1bc4b8e34_Sptr(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)) {
			_case_begin_1c33abded:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4c313b_Sptr>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23);;
			}
		}
		else {
			_case_begin_1c33a5c4e:;
			{
				return nullptr;;
			}
		}
		_match_end_1c33a5bd8:;
	};
}



inline jule::Ptr<_1bc4c6903_Ptr> _1bc4b91ba_Ptr(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28)) {
			_case_begin_1c33ad0ec:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4c6903_Ptr>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28);;
			}
		}
		else {
			_case_begin_1c33ace43:;
			{
				return nullptr;;
			}
		}
		_match_end_1c33acdcc:;
	};
}



inline jule::Ptr<_1bc30be20_Enum> _1bc4b9451_Enum(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3)) {
			_case_begin_1c33add78:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc30be20_Enum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3);;
			}
		}
		else {
			_case_begin_1c33adbbe:;
			{
				return nullptr;;
			}
		}
		_match_end_1c33adb58:;
	};
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc4b96d7_TypeEnum(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4)) {
			_case_begin_1c3933254:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc30d62a_TypeEnum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4);;
			}
		}
		else {
			_case_begin_1c39314b6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3931450:;
	};
}



inline jule::Ptr<_1bc4c5e30_Arr> _1bc4b996d_Arr(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27)) {
			_case_begin_1c3933d9d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4c5e30_Arr>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27);;
			}
		}
		else {
			_case_begin_1c3933be4:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3933b7d:;
	};
}



inline jule::Ptr<_1bc4c3b0e_Slc> _1bc4b9c04_Slc(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24)) {
			_case_begin_1c3934b29:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4c3b0e_Slc>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24);;
			}
		}
		else {
			_case_begin_1c3934970:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3934909:;
	};
}



inline jule::Ptr<_1bc302113_FnIns> _1bc4b9e8a_Fn(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)) {
			_case_begin_1c39358a5:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc302113_FnIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1);;
			}
		}
		else {
			_case_begin_1c39356eb:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3935685:;
	};
}



inline jule::Ptr<_1bc2810c5_StructIns> _1bc4ba221_Struct(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)) {
			_case_begin_1c3936631:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc2810c5_StructIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0);;
			}
		}
		else {
			_case_begin_1c3936477:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3936411:;
	};
}



inline jule::Ptr<_1bc309769_Trait> _1bc4ba4a7_Trait(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data2)) {
			_case_begin_1c393718c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc309769_Trait>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data2);;
			}
		}
		else {
			_case_begin_1c39373e0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3937379:;
	};
}



inline jule::Ptr<_1bc4c52a3_Map> _1bc4ba73d_Map(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data26)) {
			_case_begin_1c3938116:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4c52a3_Map>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data26);;
			}
		}
		else {
			_case_begin_1c3937e5c:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3937de6:;
	};
}



inline jule::Ptr<_1bc4c4703_Tuple> _1bc4ba9c4_Tup(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data25)) {
			_case_begin_1c3938d92:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc4c4703_Tuple>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data25);;
			}
		}
		else {
			_case_begin_1c3938bd8:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3938b72:;
	};
}



inline jule::Bool _1bc4bac5a_comptime(_1bc4b64e7_Type* _self_) {
	return (((((((((((((((_1bc4bc2cd_comptimeTypeInfos(_self_) != nullptr) || (_1bc4bc564_comptimeTypeInfo(_self_) != nullptr)) || (_1bc4baee1_comptimeStructFields(_self_) != nullptr)) || (_1bc4bb277_comptimeStructField(_self_) != nullptr)) || (_1bc4bb50d_comptimeEnumFields(_self_) != nullptr)) || (_1bc4bb794_comptimeEnumField(_self_) != nullptr)) || (_1bc4bc7ea_comptimeStatics(_self_) != nullptr)) || (_1bc4bca81_comptimeStatic(_self_) != nullptr)) || (_1bc4bba2a_comptimeParams(_self_) != nullptr)) || (_1bc4bbcb1_comptimeParam(_self_) != nullptr)) || (_1bc4bcd17_comptimeValue(_self_) != nullptr)) || (_1bc4bd851_comptimeFiles(_self_) != nullptr)) || (_1bc4bd5ba_comptimeFile(_self_) != nullptr)) || (_1bc4bd09d_comptimeDecl(_self_) != nullptr)) || (_1bc4bd334_comptimeDecls(_self_) != nullptr));;
}



inline jule::Ptr<_1bc381736_comptimeStructFields> _1bc4baee1_comptimeStructFields(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data7)) {
			_case_begin_1c1260941:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc381736_comptimeStructFields>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data7);;
			}
		}
		else {
			_case_begin_1c1260ba5:;
			{
				return nullptr;;
			}
		}
		_match_end_1c1260b3e:;
	};
}



inline jule::Ptr<_1bc37ee93_comptimeStructField> _1bc4bb277_comptimeStructField(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data6)) {
			_case_begin_1c39d8d54:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc37ee93_comptimeStructField>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data6);;
			}
		}
		else {
			_case_begin_1c39db86d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c39db807:;
	};
}



inline jule::Ptr<_1bc3876e8_comptimeEnumFields> _1bc4bb50d_comptimeEnumFields(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data11)) {
			_case_begin_1c39dc660:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc3876e8_comptimeEnumFields>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data11);;
			}
		}
		else {
			_case_begin_1c39dc4a6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c39dc440:;
	};
}



inline jule::Ptr<_1bc3863d9_comptimeEnumField> _1bc4bb794_comptimeEnumField(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data10)) {
			_case_begin_1c393a7bc:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc3863d9_comptimeEnumField>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data10);;
			}
		}
		else {
			_case_begin_1c12620b3:;
			{
				return nullptr;;
			}
		}
		_match_end_1c126204c:;
	};
}



inline jule::Ptr<_1bc38b059_comptimeParams> _1bc4bba2a_comptimeParams(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data13)) {
			_case_begin_1c393b46b:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc38b059_comptimeParams>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data13);;
			}
		}
		else {
			_case_begin_1c393b6e1:;
			{
				return nullptr;;
			}
		}
		_match_end_1c393b67a:;
	};
}



inline jule::Ptr<_1bc389200_comptimeParam> _1bc4bbcb1_comptimeParam(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data12)) {
			_case_begin_1c393c082:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc389200_comptimeParam>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data12);;
			}
		}
		else {
			_case_begin_1c393bdc8:;
			{
				return nullptr;;
			}
		}
		_match_end_1c393bd62:;
	};
}



inline jule::Ptr<_1bc37e437_comptimeRange> _1bc4bc047_comptimeRange(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)) {
			_case_begin_1c393cd0d:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc37e437_comptimeRange>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5);;
			}
		}
		else {
			_case_begin_1c393cb54:;
			{
				return nullptr;;
			}
		}
		_match_end_1c393cadd:;
	};
}



inline jule::Ptr<_1bc38c8b8_comptimeTypeInfos> _1bc4bc2cd_comptimeTypeInfos(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data14)) {
			_case_begin_1c393da89:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc38c8b8_comptimeTypeInfos>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data14);;
			}
		}
		else {
			_case_begin_1c393d8d0:;
			{
				return nullptr;;
			}
		}
		_match_end_1c393d869:;
	};
}



inline jule::Ptr<_1bc38e337_comptimeTypeInfo> _1bc4bc564_comptimeTypeInfo(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data15)) {
			_case_begin_1c393e815:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc38e337_comptimeTypeInfo>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data15);;
			}
		}
		else {
			_case_begin_1c393e65b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c393e5e5:;
	};
}



inline jule::Ptr<_1bc38496a_comptimeStatics> _1bc4bc7ea_comptimeStatics(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data9)) {
			_case_begin_1c3940591:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc38496a_comptimeStatics>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data9);;
			}
		}
		else {
			_case_begin_1c39403d7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3940371:;
	};
}



inline jule::Ptr<_1bc3831b6_comptimeStatic> _1bc4bca81_comptimeStatic(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data8)) {
			_case_begin_1c394131c:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc3831b6_comptimeStatic>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data8);;
			}
		}
		else {
			_case_begin_1c3941163:;
			{
				return nullptr;;
			}
		}
		_match_end_1c39410ec:;
	};
}



inline jule::Ptr<_1bc39543c_comptimeValue> _1bc4bcd17_comptimeValue(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data16)) {
			_case_begin_1c3942098:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc39543c_comptimeValue>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data16);;
			}
		}
		else {
			_case_begin_1c3941dde:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3941d78:;
	};
}



inline jule::Ptr<_1bc39da2d_comptimeDecl> _1bc4bd09d_comptimeDecl(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20)) {
			_case_begin_1c3942d24:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc39da2d_comptimeDecl>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data20);;
			}
		}
		else {
			_case_begin_1c3942b6a:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3942b04:;
	};
}



inline jule::Ptr<_1bc39b740_comptimeDecls> _1bc4bd334_comptimeDecls(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data19)) {
			_case_begin_1c3943aa0:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc39b740_comptimeDecls>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data19);;
			}
		}
		else {
			_case_begin_1c39438e6:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3943880:;
	};
}



inline jule::Ptr<_1bc399b17_comptimeFile> _1bc4bd5ba_comptimeFile(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data18)) {
			_case_begin_1c369eb91:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc399b17_comptimeFile>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data18);;
			}
		}
		else {
			_case_begin_1c369ee27:;
			{
				return nullptr;;
			}
		}
		_match_end_1c369edb1:;
	};
}



inline jule::Ptr<_1bc398198_comptimeFiles> _1bc4bd851_comptimeFiles(_1bc4b64e7_Type* _self_) {
	{
		auto &_match_expr{ (*(_self_))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data17)) {
			_case_begin_1c36a0851:;
			{
				return (*(_self_))._field_Kind.cast_ptr<_1bc398198_comptimeFiles>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data17);;
			}
		}
		else {
			_case_begin_1c36a06ca:;
			{
				return nullptr;;
			}
		}
		_match_end_1c36a0664:;
	};
}








inline jule::Bool _1bc4bdc08_TypeSym_eq(_1bc4bdc08_TypeSym *_self_, _1bc4bdc08_TypeSym _other_) {
	return 
		(_self_->_field_Decl == _other_._field_Decl) &&
		(_self_->_field_Type == _self_->_field_Type);
}

inline jule::Bool _1bc4be0b0_checked(_1bc4bdc08_TypeSym* _self_) {
	return ((*(_self_))._field_Type != nullptr);;
}








inline jule::Bool _1bc4be610_Prim_eq(_1bc4be610_Prim *_self_, _1bc4be610_Prim _other_) {
	return 
		(_self_->_field_Kind == _other_._field_Kind);
}

inline jule::Str _1bc4be984_Str(_1bc4be610_Prim* _self_) {
	return (*(_self_))._field_Kind;;
}



inline jule::Bool _1bc4becc5_Equal(jule::Ptr<_1bc4be610_Prim> _self_, jule::Ptr<_1bc4b64e7_Type> _51418_other) {
	jule::Ptr<_1bc4be610_Prim> _5153_prim = _1bc4b8b9d_Prim(_51418_other.ptr());;
	if ((_5153_prim == nullptr)) {
		return false;;
	};
	return ((*(_self_))._field_Kind == (*(_5153_prim))._field_Kind);;
}



inline jule::Bool _1bc4c026a_IsConstraint(_1bc4be610_Prim* _self_) {
	return ((((!(_1bc4c2aca_IsStr(_self_))) && (!(_1bc4c2d61_IsAny(_self_)))) && (!(_1bc4c2844_IsBool(_self_)))) && (!(_1bc37ceb3_IsNum((*(_self_))._field_Kind))));;
}



inline jule::Bool _1bc4c0501_IsI8(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i8", 2)));;
}



inline jule::Bool _1bc4c0787_IsI16(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i16", 3)));;
}



inline jule::Bool _1bc4c0a1d_IsI32(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i32", 3)));;
}



inline jule::Bool _1bc4c0ca4_IsI64(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("i64", 3)));;
}



inline jule::Bool _1bc4c103a_IsU8(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u8", 2)));;
}



inline jule::Bool _1bc4c12c1_IsU16(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u16", 3)));;
}



inline jule::Bool _1bc4c1557_IsU32(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u32", 3)));;
}



inline jule::Bool _1bc4c17dd_IsU64(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("u64", 3)));;
}



inline jule::Bool _1bc4c1a74_IsF32(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)));;
}



inline jule::Bool _1bc4c1d0a_IsF64(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("f64", 3)));;
}



inline jule::Bool _1bc4c2091_IsInt(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("int", 3)));;
}



inline jule::Bool _1bc4c2327_IsUint(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uint", 4)));;
}



inline jule::Bool _1bc4c25ad_IsUintptr(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("uintptr", 7)));;
}



inline jule::Bool _1bc4c2844_IsBool(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("bool", 4)));;
}



inline jule::Bool _1bc4c2aca_IsStr(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("str", 3)));;
}



inline jule::Bool _1bc4c2d61_IsAny(_1bc4be610_Prim* _self_) {
	return ((*(_self_))._field_Kind == static_cast<jule::Str>(jule::Str::lit("any", 3)));;
}








inline jule::Bool _1bc4c313b_Sptr_eq(_1bc4c313b_Sptr *_self_, _1bc4c313b_Sptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1bc4c34e3_Str(_1bc4c313b_Sptr* _self_) {
	return (jule::Str::lit("&", 1) + _1bc4b68e3_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1bc4c3834_Equal(jule::Ptr<_1bc4c313b_Sptr> _self_, jule::Ptr<_1bc4b64e7_Type> _59118_other) {
	jule::Ptr<_1bc4c313b_Sptr> _5923_sptr = _1bc4b8e34_Sptr(_59118_other.ptr());;
	if ((_5923_sptr == nullptr)) {
		return false;;
	};
	return _1bc4b6c34_Equal((*(_self_))._field_Elem, (*(_5923_sptr))._field_Elem);;
}








inline jule::Bool _1bc4c3b0e_Slc_eq(_1bc4c3b0e_Slc *_self_, _1bc4c3b0e_Slc _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1bc4c40c6_Str(_1bc4c3b0e_Slc* _self_) {
	return (jule::Str::lit("[]", 2) + _1bc4b68e3_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1bc4c4417_Equal(jule::Ptr<_1bc4c3b0e_Slc> _self_, jule::Ptr<_1bc4b64e7_Type> _61018_other) {
	jule::Ptr<_1bc4c3b0e_Slc> _6113_slc = _1bc4b9c04_Slc(_61018_other.ptr());;
	if ((_6113_slc == nullptr)) {
		return false;;
	};
	return _1bc4b6c34_Equal((*(_self_))._field_Elem, (*(_6113_slc))._field_Elem);;
}







inline jule::Str _1bc4c4aaa_Str(_1bc4c4703_Tuple* _self_) {
	_1a95669ea_Builder _6277_s = static__1a9567369_New(16LL);;
	({
		auto except = _1a9567ca4_WriteByte(&_6277_s, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:628:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&_6277_s, _1bc4b68e3_Str((*(_self_))._field_Types[0LL].ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:629:3"));
		(except.result);
	});
	{
		auto expr = (*(_self_))._field_Types.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c33b1452:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b64e7_Type> *_63010_t = it;
			{
				({
					auto except = _1a9567ca4_WriteByte(&_6277_s, ',');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:631:4"));
				});
				({
					auto except = _1a95679eb_WriteStr(&_6277_s, _1bc4b68e3_Str((*(_63010_t)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:632:4"));
					(except.result);
				});
			}
			_iter_next_1c33b1452:;
			++it;
			goto _iter_begin_1c33b1452;
		}
		_iter_end_1c33b1452:;
	};
	({
		auto except = _1a9567ca4_WriteByte(&_6277_s, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:634:3"));
	});
	return _1a956837b_Str(&_6277_s);;
}



inline jule::Bool _1bc4c4deb_Equal(jule::Ptr<_1bc4c4703_Tuple> _self_, jule::Ptr<_1bc4b64e7_Type> _63918_other) {
	jule::Ptr<_1bc4c4703_Tuple> _6403_tup = _1bc4ba9c4_Tup(_63918_other.ptr());;
	if ((_6403_tup == nullptr)) {
		return false;;
	};
	if (((*(_self_))._field_Types.len() != (*(_6403_tup))._field_Types.len())) {
		return false;;
	};
	jule::I32 _6477_i = 0LL;;
	for (; (_6477_i < (*(_self_))._field_Types.len()); (_6477_i)++) {
		{
			if ((!(_1bc4b6c34_Equal((*(_self_))._field_Types[_6477_i], (*(_6403_tup))._field_Types[_6477_i])))) {
				return false;;
			};
		}
	_iter_next_1c3555d44:;
	}
	_iter_end_1c3555d44:;;
	return true;;
}








inline jule::Bool _1bc4c52a3_Map_eq(_1bc4c52a3_Map *_self_, _1bc4c52a3_Map _other_) {
	return 
		(_self_->_field_Key == _other_._field_Key) &&
		(_self_->_field_Val == _self_->_field_Val);
}

inline jule::Str _1bc4c565a_Str(_1bc4c52a3_Map* _self_) {
	_1a95669ea_Builder _6677_s = static__1a9567369_New(16LL);;
	({
		auto except = _1a95679eb_WriteStr(&_6677_s, jule::Str::lit("map[", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:668:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_6677_s, _1bc4b68e3_Str((*(_self_))._field_Key.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:669:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&_6677_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:670:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&_6677_s, _1bc4b68e3_Str((*(_self_))._field_Val.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:671:3"));
		(except.result);
	});
	return _1a956837b_Str(&_6677_s);;
}



inline jule::Bool _1bc4c599b_Equal(jule::Ptr<_1bc4c52a3_Map> _self_, jule::Ptr<_1bc4b64e7_Type> _67618_other) {
	jule::Ptr<_1bc4c52a3_Map> _6773_m = _1bc4ba73d_Map(_67618_other.ptr());;
	if ((_6773_m == nullptr)) {
		return false;;
	};
	return (_1bc4b6c34_Equal((*(_self_))._field_Key, (*(_6773_m))._field_Key) && _1bc4b6c34_Equal((*_self_.alloc)._field_Val, (*_6773_m.alloc)._field_Val));;
}








inline jule::Bool _1bc4c5e30_Arr_eq(_1bc4c5e30_Arr *_self_, _1bc4c5e30_Arr _other_) {
	return 
		(_self_->_field_Auto == _other_._field_Auto) &&
		(_self_->_field_N == _self_->_field_N) &&
		(_self_->_field_Elem == _self_->_field_Elem);
}

inline jule::Str _1bc4c62d7_Str(_1bc4c5e30_Arr* _self_) {
	_1a95669ea_Builder _6957_s = static__1a9567369_New(16LL);;
	({
		auto except = _1a9567ca4_WriteByte(&_6957_s, '[');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:696:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&_6957_s, _1ac596ac1_Itoa((*(_self_))._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:697:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&_6957_s, ']');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:698:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&_6957_s, _1bc4b68e3_Str((*(_self_))._field_Elem.ptr()));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:699:3"));
		(except.result);
	});
	return _1a956837b_Str(&_6957_s);;
}



inline jule::Bool _1bc4c6628_Equal(jule::Ptr<_1bc4c5e30_Arr> _self_, jule::Ptr<_1bc4b64e7_Type> _70418_other) {
	jule::Ptr<_1bc4c5e30_Arr> _7053_arr = _1bc4b996d_Arr(_70418_other.ptr());;
	if ((_7053_arr == nullptr)) {
		return false;;
	};
	return (((*(_self_))._field_N == (*(_7053_arr))._field_N) && _1bc4b6c34_Equal((*_self_.alloc)._field_Elem, (*_7053_arr.alloc)._field_Elem));;
}








inline jule::Bool _1bc4c6903_Ptr_eq(_1bc4c6903_Ptr *_self_, _1bc4c6903_Ptr _other_) {
	return 
		(_self_->_field_Elem == _other_._field_Elem);
}

inline jule::Str _1bc4c6caa_Str(_1bc4c6903_Ptr* _self_) {
	if (_1bc4c7470_IsUnsafe(_self_)) {
		return jule::Str::lit("*unsafe", 7);;
	};
	return (jule::Str::lit("*", 1) + _1bc4b68e3_Str((*(_self_))._field_Elem.ptr()));;
}



inline jule::Bool _1bc4c70eb_Equal(jule::Ptr<_1bc4c6903_Ptr> _self_, jule::Ptr<_1bc4b64e7_Type> _72818_other) {
	jule::Ptr<_1bc4c6903_Ptr> _7293_ptr = _1bc4b91ba_Ptr(_72818_other.ptr());;
	{
		
		if ((_7293_ptr == nullptr)) {
			_case_begin_1c3557e67:;
			{
				return false;;
			}
		}
		else if (_1bc4c7470_IsUnsafe(_self_.ptr())) {
			_case_begin_1c35314c3:;
			{
				return _1bc4c7470_IsUnsafe(_7293_ptr.ptr());;
			}
		}
		else if (_1bc4c7470_IsUnsafe(_7293_ptr)) {
			_case_begin_1c3531539:;
			{
				return _1bc4c7470_IsUnsafe(_self_);;
			}
		}
		else {
			_case_begin_1c35575b5:;
			{
				return _1bc4b6c34_Equal((*_self_.alloc)._field_Elem, (*_7293_ptr.alloc)._field_Elem);;
			}
		}
		_match_end_1c355754e:;
	};
}



inline jule::Bool _1bc4c7470_IsUnsafe(_1bc4c6903_Ptr* _self_) {
	return ((*(_self_))._field_Elem == nullptr);;
}








inline jule::Bool _1bc4c7904_referencer_eq(_1bc4c7904_referencer *_self_, _1bc4c7904_referencer _other_) {
	return 
		(_self_->_field_ident == _other_._field_ident) &&
		(_self_->_field_owner == _self_->_field_owner) &&
		(_self_->_field_refs == _self_->_field_refs);
}





inline void _1bc4c9175_pushErr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc247014_Token> _82023_token, jule::Str _82045_fmt, jule::Slice<jule::Any> _82065_args) {
	_1bc40ce00_pushErr((*(_self_))._field_s.ptr(), _82023_token, _82045_fmt, _82065_args);
}



inline void _1bc4c9373_allowBuiltin(_1bc4c88e4_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=false;
}



inline void _1bc4c9571_disallowBuiltin(_1bc4c88e4_typeChecker* _self_) {
	(*(_self_))._field_disBuiltin=true;
}



inline void _1c355cc80_pushReference(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc2810c5_StructIns>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c14db11c_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1bc3cb97e_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type64));
}

inline void _1c3560777_pushReference(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc309769_Trait>* _83237_t) {
	if (((*(_self_))._field_refers == nullptr)) {
		return;;
	};
	if (_1c5e16812_Exist((*(_self_))._field_refers.ptr(), (*(_83237_t)))) {
		return;;
	};
	_1bc3cb97e_Push((*(_self_))._field_refers.ptr(), jule::Any((*(_83237_t)), &__jule_any_type11));
}



inline void _1bc4c9ad2_pushReferenceByKind(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc4b64e7_Type>* _84240_k) {
	{
		
		if ((_1bc4ba221_Struct((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1c355b894:;
			{
				jule::Ptr<_1bc2810c5_StructIns> _8458_t = _1bc4ba221_Struct((*(_84240_k)).ptr());;
				_1c355cc80_pushReference(_self_, &(_8458_t));
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_84240_k)).ptr()) != nullptr)) {
			_case_begin_1c355b93d:;
			{
				jule::Ptr<_1bc309769_Trait> _8488_t = _1bc4ba4a7_Trait((*(_84240_k)).ptr());;
				_1c3560777_pushReference(_self_, &(_8488_t));
			}
		}
		_match_end_1c355b773:;
	};
}



inline void _1bc4ca000_pushCycleError(_1bc4c88e4_typeChecker* _self_, jule::Any _85326_def1, jule::Any _85337_def2, _1a95669ea_Builder* _85353_message) {
	;
	jule::Fn<jule::Str,jule::Any*> _8553_getIdent = jule::__new_closure<jule::Str,jule::Any*>((void*)__jule_anon1c5e18b44, nullptr, nullptr);;
	jule::Str _8653_m = _1a956837b_Str(_85353_message);;
	jule::Str _8663_def1Ident = _8553_getIdent(&(_85326_def1));;
	jule::Str _8673_def2Ident = _8553_getIdent(&(_85337_def2));;
	jule::Str _8683_refersTo = _1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("@ refers to @", 13)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_8663_def1Ident, &__jule_any_type5); (*it++) = jule::Any(_8673_def2Ident, &__jule_any_type5); __jule_collection; }));;
	({
		auto except = _1a95679eb_WriteStr(_85353_message, _1abb2d60e_Repeat(jule::Str::lit(" ", 1), 7LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:869:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_85353_message, _8683_refersTo);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:870:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_85353_message, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:871:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_85353_message, _8653_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/type.jule:872:3"));
		(except.result);
	});
}



inline jule::Bool _1bc4ca3eb_checkCrossCycle(_1bc4c88e4_typeChecker* _self_, jule::Any _87527_decl, _1a95669ea_Builder* _87543_message) {
	{
		auto &_match_expr{ _87527_decl };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c5e1d20e:;
			{
				jule::Ptr<_1bc4b5705_TypeAlias> _8784_ta = _87527_decl.unsafe_cast_ptr<_1bc4b5705_TypeAlias>();;
				{
					auto expr = &((*(_8784_ta))._field_Refers);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5e1e1cc:;
					if (it != expr_end) {
						jule::Any *_87911_d = it;
						{
							{
								
								if (((*(_87911_d)) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1c5e1ea6d:;
									{
										_1bc4ca000_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								else if ((!(_1bc4ca3eb_checkCrossCycle(_self_, (*(_87911_d)), _87543_message)))) {
									_case_begin_1c5e1eb06:;
									{
										_1bc4ca000_pushCycleError(_self_, jule::Any(_8784_ta, &__jule_any_type8), (*(_87911_d)), _87543_message);
										return false;;
									}
								}
								_match_end_1c5e1e95d:;
							};
						}
						_iter_next_1c5e1e1cc:;
						++it;
						goto _iter_begin_1c5e1e1cc;
					}
					_iter_end_1c5e1e1cc:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c5e1d066:;
			{
				jule::Ptr<_1bc27d26a_Struct> _8904_s = _87527_decl.unsafe_cast_ptr<_1bc27d26a_Struct>();;
				{
					auto expr = &((*(_8904_s))._field_Depends);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5e21575:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> *_89111_d = it;
						{
							{
								
								if ((jule::Any((*(_89111_d)), &__jule_any_type9) == (*((*(_self_))._field_referencer))._field_owner)) {
									_case_begin_1c5e21e16:;
									{
										_1bc4ca000_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								else if ((!(_1bc4ca3eb_checkCrossCycle(_self_, jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message)))) {
									_case_begin_1c5e21e9e:;
									{
										_1bc4ca000_pushCycleError(_self_, jule::Any(_8904_s, &__jule_any_type9), jule::Any((*(_89111_d)), &__jule_any_type9), _87543_message);
										return false;;
									}
								}
								_match_end_1c5e21d06:;
							};
						}
						_iter_next_1c5e21575:;
						++it;
						goto _iter_begin_1c5e21575;
					}
					_iter_end_1c5e21575:;
				};
			}
		}
		_match_end_1c5e1d198:;
	};
	return true;;
}



inline jule::Bool _1bc4ca7e7_checkIllegalCycles(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _90935_ident, jule::Any _90967_decl) {
	jule::Bool __jule_func_result = false;
	if ((((*(_self_))._field_referencer == nullptr) || (!((*(_self_))._field_cycleRisk)))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _90967_decl };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c5e2437a:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1bc27d26a_Struct>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c5e24204:;
			{
				if ((*(_90967_decl.unsafe_cast_ptr<_1bc4b5705_TypeAlias>()))._field_Binded) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c5e21ab4:;
	};
	if ((_90967_decl == (*((*(_self_))._field_referencer))._field_owner)) {
		_1bc4c9175_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cycle in declaration, @ refers to itself", 48)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_self_))._field_referencer.alloc)._field_ident, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1a95669ea_Builder _9327_message = static__1a9567369_New(32LL);;
	if ((!(_1bc4ca3eb_checkCrossCycle(_self_, _90967_decl, &(_9327_message))))) {
		jule::Str _9358_errMsg = _1a956837b_Str(&_9327_message);;
		_1a9568579_Clear(&_9327_message);
		_1bc4ca000_pushCycleError(_self_, (*((*(_self_))._field_referencer))._field_owner, _90967_decl, &(_9327_message));
		_9358_errMsg+=_1a956837b_Str(&_9327_message);
		_1bc4c9175_pushErr(_self_, (*((*(_90935_ident))))._field_Token, static_cast<jule::Str>(jule::Str::lit("illegal cross cycle in declarations;\n@", 38)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_9358_errMsg, &__jule_any_type5); __jule_collection; }));
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c5e2925e:;
			{
				{
					(*((*((*(_self_))._field_referencer))._field_refs))=jule::append((*((*(*(_self_))._field_referencer.alloc)._field_refs)),({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl; __jule_collection; }));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c5e2779b:;
			{
				{
					auto &_match_expr{ _90967_decl };
					
					if (_match_expr.type == &__jule_any_type9) {
						_case_begin_1c5e29a23:;
						{
							jule::Ptr<_1bc27d26a_Struct> _9519_s = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1bc27d26a_Struct>();;
							(*(_9519_s))._field_Depends=jule::append((*_9519_s.alloc)._field_Depends,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27d26a_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _90967_decl.cast_ptr<_1bc27d26a_Struct>(&__jule_any_type9); __jule_collection; }));
						}
					}
					_match_end_1c5e2987a:;
				};
			}
		}
		_match_end_1c5e291c6:;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Trait _1bc4cabe3_fromTypeAlias(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _95930_decl, jule::Ptr<_1bc4b5705_TypeAlias>* _95962_ta) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_95962_ta))))._field_Public, (*((*(_95962_ta))))._field_Token)))) {
		_1bc4c9175_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_95962_ta))))._field_Used=true;
	if (((*((*(_95930_decl))))._field_Generics.len() > 0LL)) {
		_1bc4c9175_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!((*(_self_))._field_inscatch)) && ((*(_self_))._field_bannedGenerics != nullptr))) {
		(*(_self_))._field_inscatch=true;
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5e301aa:;
			if (it != expr_end) {
				jule::Ptr<_1bc4b5705_TypeAlias> _97611_bg = *it;
				{
					if (((_97611_bg == (*(_95962_ta))) || (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type != nullptr) && _1bc4b6c34_Equal((*((*((*(_95962_ta))))._field_TypeSym))._field_Type, (*(*(_97611_bg))._field_TypeSym.alloc)._field_Type)))) {
						(*(_self_))._field_inscatch=false;
						goto _iter_end_1c5e301aa;
					};
				}
				_iter_next_1c5e301aa:;
				++it;
				goto _iter_begin_1c5e301aa;
			}
			_iter_end_1c5e301aa:;
		};
	};
	if ((*(_self_))._field_inscatch) {
		{
			auto expr = &((*(_self_))._field_bannedGenerics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c5e324a9:;
			if (it != expr_end) {
				jule::Ptr<_1bc4b5705_TypeAlias> _98711_bg = *it;
				{
					if ((_98711_bg == (*(_95962_ta)))) {
						_1bc4c9175_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					{
						auto expr = &((*((*(_95962_ta))))._field_Generics);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c5e32e49:;
						if (it != expr_end) {
							jule::Ptr<_1bc4b5705_TypeAlias> _99212_dg = *it;
							{
								if ((_98711_bg == _99212_dg)) {
									_1bc4c9175_pushErr(_self_, (*((*(_95930_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type declaration causes initiation cycle", 40)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_95930_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
									return nullptr;;
								};
							}
							_iter_next_1c5e32e49:;
							++it;
							goto _iter_begin_1c5e32e49;
						}
						_iter_end_1c5e32e49:;
					};
				}
				_iter_next_1c5e324a9:;
				++it;
				goto _iter_begin_1c5e324a9;
			}
			_iter_end_1c5e324a9:;
		};
	};
	if (((*((*((*(_95962_ta))))._field_TypeSym))._field_Type == nullptr)) {
		jule::Bool _10034_ok = _1bc41a072_checkTypeAliasDeclKind((*(_self_))._field_s, _95962_ta, (*(_self_))._field_lookup);;
		if ((!(_10034_ok))) {
			return nullptr;;
		};
	};
	{
		auto &_match_expr{ (*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)) {
			_case_begin_1c5e365e0:;
			{
				jule::Bool _10114_ok = _1bc4ca7e7_checkIllegalCycles(_self_, _95930_decl, jule::Any((*((*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind.cast_ptr<_1bc2810c5_StructIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)))._field_Decl, &__jule_any_type9));;
				if ((!(_10114_ok))) {
					return nullptr;;
				};
			}
		}
		_match_end_1c5e36568:;
	};
	if (((*((*(_95962_ta))))._field_Generic && ((*(_self_))._field_ownerAlias != nullptr))) {
		(*(*(_self_))._field_ownerAlias.alloc)._field_Generics=jule::append((*(*(_self_))._field_ownerAlias.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_95962_ta)); __jule_collection; }));
	};
	jule::Ptr<_1bc4b64e7_Type> _10237_tk = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=(*((*(_95962_ta))))._field_Generic, ._field_Variadic=false, ._field_Kind=(*((*((*((*(_95962_ta))))._field_TypeSym))._field_Type))._field_Kind});;
	_1bc4c9ad2_pushReferenceByKind(_self_, &(_10237_tk));
	if ((*((*(_95962_ta))))._field_Binded) {
		(*(_10237_tk))._field_BindIdent=(*((*(_95962_ta))))._field_Ident;
	} else {
		(*(_10237_tk))._field_BindIdent=(*(*((*((*(_95962_ta))))._field_TypeSym))._field_Type.alloc)._field_BindIdent;
	};
	return jule::Trait(_10237_tk, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data21);;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc4cb0de_fromEnum(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _103625_decl, jule::Ptr<_1bc30be20_Enum>* _103657_e) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_103657_e))))._field_Public, (*((*(_103657_e))))._field_Token)))) {
		_1bc4c9175_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_103625_decl))))._field_Generics.len() > 0LL)) {
		_1bc4c9175_pushErr(_self_, (*((*(_103625_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_103625_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_103657_e));;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc4cb4da_fromTypeEnum(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _104829_decl, jule::Ptr<_1bc30d62a_TypeEnum>* _104861_e) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_104861_e))))._field_Public, (*((*(_104861_e))))._field_Token)))) {
		_1bc4c9175_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_104829_decl))))._field_Generics.len() > 0LL)) {
		_1bc4c9175_pushErr(_self_, (*((*(_104829_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_104829_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return (*(_104861_e));;
}



inline jule::Ptr<_1bc309769_Trait> _1bc4cb8d6_fromTrait(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _106026_decl, jule::Ptr<_1bc309769_Trait>* _106058_t) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_106058_t))))._field_Public, (*((*(_106058_t))))._field_Token)))) {
		_1bc4c9175_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_106026_decl))))._field_Generics.len() > 0LL)) {
		_1bc4c9175_pushErr(_self_, (*((*(_106026_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_106026_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1c3560777_pushReference(_self_, _106058_t);
	return (*(_106058_t));;
}



inline jule::Bool _1bc4cbcd2_checkStructIns(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc2810c5_StructIns>* _107335_ins, jule::Ptr<_1bc247014_Token>* _107357_errorToken) {
	jule::Bool __jule_func_result = false;
	if ((*((*(_107335_ins))))._field_Checked) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	(*((*(_107335_ins))))._field_Checked=true;
	if ((((*(_self_))._field_referencer != nullptr) && (jule::Any((*((*(_107335_ins))))._field_Decl, &__jule_any_type9) == (*(*(_self_))._field_referencer.alloc)._field_owner))) {
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1bc426a62_precheckStructIns((*(_self_))._field_s, _107335_ins, (*(_107357_errorToken)))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (((*((*(_107335_ins))))._field_Generics.len() > 0LL)) {
		_1bc427579_checkStructInsOperators((*(_self_))._field_s, (*(_107335_ins)));
		_1bc426d1a_checkStructIns((*(_self_))._field_s, _107335_ins);
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bc4cc08a_appendUsedStructReference(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc27d26a_Struct>* _109446_s) {
	if (((*(_self_))._field_referencer == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_self_))._field_referencer))._field_owner };
		
		if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c39ea591:;
			{
				jule::Ptr<_1bc27d26a_Struct> _11008_refS = (*((*(_self_))._field_referencer))._field_owner.unsafe_cast_ptr<_1bc27d26a_Struct>();;
				if ((!(_1bc27ec2d_IsUses(_11008_refS.ptr(), (*(_109446_s)))))) {
					(*_11008_refS.alloc)._field_Uses=jule::append((*_11008_refS.alloc)._field_Uses,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27d26a_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_109446_s)); __jule_collection; }));
				};
			}
		}
		_match_end_1c39ea52a:;
	};
}



inline jule::Ptr<_1bc2810c5_StructIns> _1bc4cc486_buildStructInstance(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _110740_decl, jule::Ptr<_1bc27d26a_Struct>* _110772_s) {
	jule::Ptr<_1bc4c7904_referencer> _11097_referencer = (*(_self_))._field_referencer;;
	(*(_self_))._field_referencer=nullptr;
	jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> _11117_bannedGenerics = (*(_self_))._field_bannedGenerics;;
	if (((*(_self_))._field_bannedGenerics == nullptr)) {
		{
			auto &_match_expr{ (*(_self_))._field_lookup };
			
			if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
				_case_begin_1c39ed5e9:;
				{
					jule::Ptr<_1bc3b448e_scopeChecker> _11189_sc = (*(_self_))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1);;
					jule::Ptr<_1bc3b448e_scopeChecker> _11199_hard = _1bc3b7b02_getHardRoot(_11189_sc);;
					if ((((*((*(_11199_hard))._field_owner))._field_Owner == nullptr) || ((*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Decl != (*(_110772_s))))) {
						goto _match_end_1c39ed583;
					};
					jule::I32 _11235_n = ((*((*(_11199_hard))._field_owner))._field_Generics.len() + (*((*(*(_11199_hard))._field_owner.alloc)._field_Owner))._field_Generics.len());;
					(*(_self_))._field_bannedGenerics=(*((*_11199_hard.alloc)._field_table))._field_TypeAliases.slice(0LL, _11235_n);
				}
			}
			_match_end_1c39ed583:;
		};
	} else {
		(*(_self_))._field_inscatch=true;
	};
	jule::Trait _11337_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=(*(_self_))._field_rootLookup;
	jule::Ptr<_1bc2810c5_StructIns> _11377_ins = _1bc27d710_instance((*(_110772_s)));;
	(*(_11377_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(0LL, (*((*(_110740_decl))))._field_Generics.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b4b11_InsGeneric>(nullptr); __jule_collection; });
	{
		auto expr = &((*((*(_110740_decl))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c33b3553:;
		if (it != expr_end) {
			jule::Ptr<_1bc25c90e_TypeDecl> _113915_g = *it;
			{
				jule::Ptr<_1bc4b64e7_Type> _11408_kind = _1bc4d118d_build(_self_, &((*(_113915_g))._field_Kind));;
				if ((_11408_kind == nullptr)) {
					return nullptr;;
				};
				(*_11377_ins.alloc)._field_Generics=jule::append((*_11377_ins.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=_11408_kind, ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); __jule_collection; }));
			}
			_iter_next_1c33b3553:;
			++it;
			goto _iter_begin_1c33b3553;
		}
		_iter_end_1c33b3553:;
	};
	(*(_self_))._field_lookup=_11337_lookup;
	(*(_self_))._field_bannedGenerics=_11117_bannedGenerics;
	(*(_self_))._field_referencer=_11097_referencer;
	return _11377_ins;;
}



inline jule::Ptr<_1bc2810c5_StructIns> _1bc4cc882_fromStructIns(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc2810c5_StructIns>* _115534_ins, jule::Ptr<_1bc247014_Token> _115555_token) {
	jule::Ptr<_1bc2810c5_StructIns> _11567_existInstance = _1bc27da1d_appendInstance((*((*(_115534_ins))))._field_Decl.ptr(), _115534_ins);;
	if ((_11567_existInstance != nullptr)) {
		if ((!(_1bc417d72_checkConstraintsStruct((*(_self_))._field_s, _115534_ins, &(_115555_token), _11567_existInstance)))) {
			return nullptr;;
		};
		_1c355cc80_pushReference(_self_, &(_11567_existInstance));
		return _11567_existInstance;;
	};
	if ((!(_1bc4cbcd2_checkStructIns(_self_, _115534_ins, &(_115555_token))))) {
		return nullptr;;
	};
	_1c355cc80_pushReference(_self_, _115534_ins);
	return (*(_115534_ins));;
}



inline jule::Ptr<_1bc2810c5_StructIns> _1bc4ccc7d_fromStruct(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _117331_decl, jule::Ptr<_1bc27d26a_Struct>* _117363_s) {
	if ((!(_1bc40d65e_isAccessibleDefine((*(_self_))._field_s.ptr(), (*((*(_117363_s))))._field_Public, (*((*(_117363_s))))._field_Token)))) {
		_1bc4c9175_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_117331_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if ((*(_self_))._field_selection) {
		if (((*((*(_117331_decl))))._field_Generics.len() > 0LL)) {
			_1bc4c9175_pushErr(_self_, (*((*(_117331_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("generics are not allowed in this scope", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		return jule::new_ptr<_1bc2810c5_StructIns>(_1bc2810c5_StructIns{._field_Checked=false, ._field_Decl=(*(_117363_s)), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Fields=jule::Slice<jule::Ptr<_1bc280525_FieldIns>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1bc2ee055_Fn>>(nullptr), ._field_Mutable=false, ._field_Comparable=false, ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Operators=_1bc27c357_Operators{._field_Eq=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Gt=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_GtEq=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Lt=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_LtEq=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Shl=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Shr=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Add=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Sub=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Div=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Mul=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Mod=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitAnd=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitOr=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitXor=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Neg=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Pos=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitNot=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_AddAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_SubAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_DivAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_MulAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_ModAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_ShlAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_ShrAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitOrAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitAndAssign=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_BitXorAssign=jule::Ptr<_1bc302113_FnIns>(nullptr)}});;
	};
	jule::Bool _11917_ok = _1bc4ca7e7_checkIllegalCycles(_self_, _117331_decl, jule::Any((*(_117363_s)), &__jule_any_type9));;
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	_1bc4cc08a_appendUsedStructReference(_self_, _117363_s);
	jule::Ptr<_1bc2810c5_StructIns> _11977_ins = _1bc4cc486_buildStructInstance(_self_, _117331_decl, _117363_s);;
	if ((_11977_ins == nullptr)) {
		return nullptr;;
	};
	_11917_ok=_1bc40e42e_checkGenericQuantity((*(_self_))._field_s.ptr(), (*((*(_11977_ins))._field_Decl))._field_Generics.len(), (*_11977_ins.alloc)._field_Generics.len(), (*((*(_117331_decl))))._field_Token);
	if ((!(_11917_ok))) {
		return nullptr;;
	};
	return _1bc4cc882_fromStructIns(_self_, &(_11977_ins), (*((*(_117331_decl))))._field_Token);;
}



inline jule::Trait _1bc4cd0be_getDef(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl>* _121727_decl) {
	{
		auto expr = &((*(_self_))._field_ignoreGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c394b514:;
		if (it != expr_end) {
			jule::Ptr<_1bc269b19_GenericDecl> _121810_g = *it;
			{
				if (((*(_121810_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					return jule::Trait(_1bc4d3404_buildPrimType((*_121810_g.alloc)._field_Ident), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22);;
				};
			}
			_iter_next_1c394b514:;
			++it;
			goto _iter_begin_1c394b514;
		}
		_iter_end_1c394b514:;
	};
	{
		auto expr = &((*(_self_))._field_useGenerics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c39e953a:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b5705_TypeAlias> _122415_g = *it;
			{
				if (((*(_122415_g))._field_Ident == (*((*(_121727_decl))))._field_Ident)) {
					if (((*((*(_121727_decl))))._field_Generics.len() > 0LL)) {
						_1bc4c9175_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("type not supports generics", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
						return nullptr;;
					};
					jule::Ptr<_1bc2810c5_StructIns> _12309_st = _1bc4ba221_Struct((*((*_122415_g.alloc)._field_TypeSym))._field_Type.ptr());;
					if ((_12309_st != nullptr)) {
						jule::Bool _12326_ok = _1bc4ca7e7_checkIllegalCycles(_self_, _121727_decl, jule::Any((*_12309_st.alloc)._field_Decl, &__jule_any_type9));;
						if ((!(_12326_ok))) {
							return nullptr;;
						};
					};
					return (*(*((*(_122415_g))._field_TypeSym))._field_Type.alloc)._field_Kind;;
				};
			}
			_iter_next_1c39e953a:;
			++it;
			goto _iter_begin_1c39e953a;
		}
		_iter_end_1c39e953a:;
	};
	if ((!((*((*(_121727_decl))))._field_Binded))) {
		jule::Ptr<_1bc30be20_Enum> _12428_e = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d5da7_FindEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12428_e != nullptr)) {
			return jule::Trait(_1bc4cb0de_fromEnum(_self_, _121727_decl, &(_12428_e)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3);;
		};
		jule::Ptr<_1bc30d62a_TypeEnum> _12478_te = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d61e8_FindTypeEnum((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12478_te != nullptr)) {
			return jule::Trait(_1bc4cb4da_fromTypeEnum(_self_, _121727_decl, &(_12478_te)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4);;
		};
		jule::Ptr<_1bc309769_Trait> _12528_t = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d5a66_FindTrait((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident);;
		if ((_12528_t != nullptr)) {
			return jule::Trait(_1bc4cb8d6_fromTrait(_self_, _121727_decl, &(_12528_t)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data2);;
		};
	} else if ((*(_self_))._field_selection) {
		_1bc4c9175_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("binded definitions are not allowed in this scope", 48)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc27d26a_Struct> _12617_s = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d5329_FindStruct((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if ((_12617_s != nullptr)) {
		return jule::Trait(_1bc4ccc7d_fromStruct(_self_, _121727_decl, &(_12617_s)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0);;
	};
	jule::Ptr<_1bc4b5705_TypeAlias> _12667_ta = ((_1bc4d634c_LookupMptrData*)(*(_self_))._field_lookup.safe_type())->_1bc4d4e2d_FindTypeAlias((*(_self_))._field_lookup.data, (*((*(_121727_decl))))._field_Ident, (*((*(_121727_decl))))._field_Binded);;
	if (((_12667_ta == nullptr) && (!((*(_self_))._field_disBuiltin)))) {
		_12667_ta=_1bc53c8e2_findBuiltinTypeAlias((*((*(_121727_decl))))._field_Ident);
	};
	if ((_12667_ta != nullptr)) {
		return _1bc4cabe3_fromTypeAlias(_self_, _121727_decl, &(_12667_ta));;
	};
	_1bc4c9175_pushErr(_self_, (*((*(_121727_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: @", 23)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*((*(_121727_decl))))._field_Ident, &__jule_any_type5); __jule_collection; }));
	return nullptr;;
}



inline jule::Trait _1bc4cd410_buildIdent(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d019_IdentTypeDecl> _127830_decl) {
	return _1bc4cd0be_getDef(_self_, &(_127830_decl));;
}



inline jule::Trait _1bc4cd751_buildSubIdent(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> _128233_decl) {
	jule::Trait _12837_ident = _1bc4cd410_buildIdent(_self_, (*(_128233_decl))._field_Idents[0LL]);;
	if ((_12837_ident == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _12837_ident };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4)) {
			_case_begin_1c5e48305:;
			{
				goto _match_end_1c5e48866;
			}
		}
		else {
			_case_begin_1c5e483d2:;
			{
				_1bc4c9175_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5e48866:;
	};
	jule::Ptr<_1bc30d62a_TypeEnum> _12947_t = _12837_ident.cast_ptr<_1bc30d62a_TypeEnum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4);;
	jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>> _12957_idents = (*_128233_decl.alloc)._field_Idents.slice(1LL);;
	{
		auto expr = &(_12957_idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c5e4a0a4:;
		if (it != expr_end) {
			jule::I32 _12967_i = it - expr->begin();
			jule::Ptr<_1bc25d019_IdentTypeDecl> _129610_id = *it;
			{
				jule::Ptr<_1bc30d053_TypeEnumItem> _12978_item = _1bc30e21e_FindItem(_12947_t.ptr(), (*(_129610_id))._field_Ident);;
				if ((_12978_item == nullptr)) {
					_1bc4c9175_pushErr(_self_, (*_129610_id.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("undefined identifier: type @ has no field or method @", 53)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_12947_t.alloc)._field_Ident, &__jule_any_type5); (*it++) = jule::Any((*_129610_id.alloc)._field_Ident, &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				if (((_12957_idents.len() - _12967_i) == 1LL)) {
					_1bc4c9ad2_pushReferenceByKind(_self_, &((*((*(_12978_item))._field_TypeSym))._field_Type));
					return jule::Trait((*(*(_12978_item))._field_TypeSym.alloc)._field_Type, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data21);;
				};
				_12947_t=_1bc4b96d7_TypeEnum((*((*(_12978_item))._field_TypeSym))._field_Type.ptr());
				if ((_12947_t == nullptr)) {
					_1bc4c9175_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				};
			}
			_iter_next_1c5e4a0a4:;
			++it;
			_12967_i++;
			goto _iter_begin_1c5e4a0a4;
		}
		_iter_end_1c5e4a0a4:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc4c313b_Sptr> _1bc4cda92_buildSptrFromType(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc4b64e7_Type>* _131638_elem) {
	{
		
		if (((*(_131638_elem)) == nullptr)) {
			_case_begin_1c5e4a857:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc4b996d_Arr((*(_131638_elem)).ptr()) != nullptr) && (*(_1bc4b996d_Arr((*(_131638_elem)).ptr())))._field_Auto)) {
			_case_begin_1c5e4eb14:;
			{
				_1bc4c9175_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5e4e1eb:;
	};
	return jule::new_ptr<_1bc4c313b_Sptr>(_1bc4c313b_Sptr{._field_Elem=(*(_131638_elem))});;
}



inline jule::Ptr<_1bc4c313b_Sptr> _1bc4cddd3_buildSptr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d9a9_SptrTypeDecl> _133029_decl) {
	jule::Bool _13313_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13313_cycleRisk;
	});;
	jule::Ptr<_1bc4b64e7_Type> _13357_elem = _1bc4d14ce_checkDecl(_self_, &((*(_133029_decl))._field_Elem));;
	return _1bc4cda92_buildSptrFromType(_self_, &(_13357_elem));;
}



inline jule::Ptr<_1bc4c6903_Ptr> _1bc4ce224_buildPtrFromType(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc4b64e7_Type>* _133937_elem) {
	{
		
		if (((*(_133937_elem)) == nullptr)) {
			_case_begin_1c5e53233:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc4b996d_Arr((*(_133937_elem)).ptr()) != nullptr) && (*(_1bc4b996d_Arr((*(_133937_elem)).ptr())))._field_Auto)) {
			_case_begin_1c5e532cc:;
			{
				_1bc4c9175_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return jule::new_ptr<_1bc4c6903_Ptr>(_1bc4c6903_Ptr{._field_Elem=jule::Ptr<_1bc4b64e7_Type>(nullptr)});;
			}
		}
		_match_end_1c5e53112:;
	};
	return jule::new_ptr<_1bc4c6903_Ptr>(_1bc4c6903_Ptr{._field_Elem=(*(_133937_elem))});;
}



inline jule::Ptr<_1bc4c6903_Ptr> _1bc4ce565_buildPtr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25e438_PtrTypeDecl> _135428_decl) {
	jule::Bool _13553_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13553_cycleRisk;
	});;
	jule::Ptr<_1bc4b64e7_Type> _13597_elem = static_cast<jule::Ptr<_1bc4b64e7_Type>>(nullptr);;
	if ((!(_1bc25e7ce_IsUnsafe(_135428_decl.ptr())))) {
		_13597_elem=_1bc4d14ce_checkDecl(_self_, &((*_135428_decl.alloc)._field_Elem));
		return _1bc4ce224_buildPtrFromType(_self_, &(_13597_elem));;
	};
	return jule::new_ptr<_1bc4c6903_Ptr>(_1bc4c6903_Ptr{._field_Elem=_13597_elem});;
}



inline jule::Ptr<_1bc4c3b0e_Slc> _1bc4ce8a6_buildSlc(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25dd3e_SlcTypeDecl> _137128_decl) {
	jule::Bool _13723_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_13723_cycleRisk;
	});;
	jule::Ptr<_1bc4b64e7_Type> _13767_elem = _1bc4d14ce_checkDecl(_self_, &((*(_137128_decl))._field_Elem));;
	{
		
		if ((_13767_elem == nullptr)) {
			_case_begin_1c37b987c:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc4b996d_Arr(_13767_elem.ptr()) != nullptr) && (*(_1bc4b996d_Arr(_13767_elem)))._field_Auto)) {
			_case_begin_1c37b98e3:;
			{
				_1bc4c9175_pushErr(_self_, (*((*_137128_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c37b9816:;
	};
	return jule::new_ptr<_1bc4c3b0e_Slc>(_1bc4c3b0e_Slc{._field_Elem=_13767_elem});;
}



inline jule::Ptr<_1bc4c5e30_Arr> _1bc4cebe7_buildArr(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25ebca_ArrTypeDecl> _139228_decl) {
	jule::I32 _13937_n = 0LL;;
	if ((!(_1bc260071_AutoSized(_139228_decl.ptr())))) {
		jule::Ptr<_1bc48354c_Data> _13968_size = _1bc4a4309_evalExpr(_1bc414cc5_eval((*(_self_))._field_s, (*(_self_))._field_lookup), (*_139228_decl.alloc)._field_Size);;
		if ((_13968_size == nullptr)) {
			return nullptr;;
		};
		if ((!(_1bc483e87_IsConst(_13968_size.ptr())))) {
			_1bc4c9175_pushErr(_self_, (*((*_139228_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
			return nullptr;;
		} else if (((_1bc4b8b9d_Prim((*(_13968_size))._field_Type.ptr()) == nullptr) || (!(_1bc37c8db_IsInt((*(_1bc4b8b9d_Prim((*(_13968_size))._field_Type)))._field_Kind))))) {
			_1bc4c9175_pushErr(_self_, (*((*_139228_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be integer", 26)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		_13937_n=static_cast<jule::I32>(_1bac276e9_AsI64((*(_13968_size))._field_Constant.ptr()));
		if ((_13937_n < 0LL)) {
			_1bc4c9175_pushErr(_self_, (*((*_139228_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array size must be positive integer", 35)), jule::Slice<jule::Any>());
			return nullptr;;
		} else {
			jule::I64 _14145_max = _1bc37a851_MaxI(static_cast<jule::Str>(jule::Str::lit("int", 3)));;
			if (((_1bc37385a_BitSize != 64LL) && (static_cast<jule::I64>(_13937_n) > _14145_max))) {
				_1bc4c9175_pushErr(_self_, (*((*_139228_decl.alloc)._field_Size))._field_Token, static_cast<jule::Str>(jule::Str::lit("array with size @ overflows limit (@) of the system", 51)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b238e_constoa(&((*_13968_size.alloc)._field_Constant)), &__jule_any_type5); (*it++) = jule::Any(_1ac596807_FmtInt(_14145_max, 10LL), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			};
		};
	};
	jule::Ptr<_1bc4b64e7_Type> _14237_elem = _1bc4d14ce_checkDecl(_self_, &((*(_139228_decl))._field_Elem));;
	{
		
		if ((_14237_elem == nullptr)) {
			_case_begin_1c37c4c61:;
			{
				return nullptr;;
			}
		}
		else if (((_1bc4b996d_Arr(_14237_elem.ptr()) != nullptr) && (*(_1bc4b996d_Arr(_14237_elem)))._field_Auto)) {
			_case_begin_1c37c4d0a:;
			{
				_1bc4c9175_pushErr(_self_, (*((*_139228_decl.alloc)._field_Elem))._field_Token, static_cast<jule::Str>(jule::Str::lit("array must have explicit size", 29)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c37c4bd9:;
	};
	return jule::new_ptr<_1bc4c5e30_Arr>(_1bc4c5e30_Arr{._field_Auto=_1bc260071_AutoSized(_139228_decl), ._field_N=_13937_n, ._field_Elem=_14237_elem});;
}



inline jule::Ptr<_1bc4c52a3_Map> _1bc4d0038_buildMap(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc260428_MapTypeDecl> _144128_decl) {
	jule::Bool _14423_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_14423_cycleRisk;
	});;
	jule::Ptr<_1bc4b64e7_Type> _14467_key = _1bc4d14ce_checkDecl(_self_, &((*(_144128_decl))._field_Key));;
	if ((_14467_key == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc4b64e7_Type> _14517_val = _1bc4d14ce_checkDecl(_self_, &((*_144128_decl.alloc)._field_Val));;
	if ((_14517_val == nullptr)) {
		return nullptr;;
	};
	if ((_1bc4b9451_Enum(_14517_val.ptr()) != nullptr)) {
		_1bc4c9175_pushErr(_self_, (*((*_144128_decl.alloc)._field_Val))._field_Token, static_cast<jule::Str>(jule::Str::lit("maps do not support enums as map key type", 41)), jule::Slice<jule::Any>());
	};
	if (((*((*((*(_self_))._field_s))._field_meta))._field_runtime != nullptr)) {
		jule::Ptr<_1bc27d26a_Struct> _14608_s = _1bb473829_runtimeFindStruct(&((*(*((*(_self_))._field_s))._field_meta.alloc)._field_runtime), static_cast<jule::Str>(jule::Str::lit("_Map", 4)));;
		_1bc4cc08a_appendUsedStructReference(_self_, &(_14608_s));
		jule::Ptr<_1bc2810c5_StructIns> _14628_ins = _1bc27d710_instance(_14608_s);;
		(*(_14628_ins))._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=_14467_key, ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=_14517_val, ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); __jule_collection; });
		_1bc4cc882_fromStructIns(_self_, &(_14628_ins), (*((*_144128_decl.alloc)._field_Key))._field_Token);
	};
	return jule::new_ptr<_1bc4c52a3_Map>(_1bc4c52a3_Map{._field_Key=_14467_key, ._field_Val=_14517_val});;
}



inline jule::Ptr<_1bc4c4703_Tuple> _1bc4d0379_buildTuple(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25e13b_TupleTypeDecl> _147330_decl) {
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _14747_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(0LL, (*(_147330_decl))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b64e7_Type>(nullptr); __jule_collection; });;
	{
		auto expr = &((*_147330_decl.alloc)._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c37ce0ab:;
		if (it != expr_end) {
			jule::Ptr<_1bc25c90e_TypeDecl> _147515_t = *it;
			{
				jule::Ptr<_1bc4b64e7_Type> _14768_kind = _1bc4d14ce_checkDecl(_self_, &(_147515_t));;
				if ((_14768_kind == nullptr)) {
					return nullptr;;
				};
				{ jule::Slice<jule::Ptr<_1bc4b64e7_Type>> &__jule_push_dest = _14747_types; __jule_push_dest.push(_14768_kind); };
			}
			_iter_next_1c37ce0ab:;
			++it;
			goto _iter_begin_1c37ce0ab;
		}
		_iter_end_1c37ce0ab:;
	};
	return jule::new_ptr<_1bc4c4703_Tuple>(_1bc4c4703_Tuple{._field_Types=_14747_types});;
}



inline jule::Bool _1bc4d06ba_checkFuncTypes(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc302113_FnIns>* _148635_f) {
	jule::Bool __jule_func_result = false;
	{
		auto expr = &((*((*(_148635_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c37d0b18:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> _148715_p = *it;
			{
				(*(_148715_p))._field_Type=_1bc4d118d_build(_self_, &((*((*((*((*_148715_p.alloc)._field_Decl))._field_TypeSym))._field_Decl))._field_Kind));
				__jule_func_result=((*_148715_p.alloc)._field_Type != nullptr);
				if ((!(__jule_func_result))) {
					__jule_func_result = false;
					return __jule_func_result;;
				};
				_1bc418922_checkFnParamKind((*(_self_))._field_s, &(_148715_p));
			}
			_iter_next_1c37d0b18:;
			++it;
			goto _iter_begin_1c37d0b18;
		}
		_iter_end_1c37d0b18:;
	};
	if ((!(_1bc2ee50b_IsVoid((*((*(_148635_f))))._field_Decl.ptr())))) {
		(*((*(_148635_f))))._field_Result=_1bc4d118d_build(_self_, &((*((*((*((*(*((*(_148635_f))))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl))._field_Kind));
		__jule_func_result = ((*((*(_148635_f))))._field_Result != nullptr);
		return __jule_func_result;;
	};
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc302113_FnIns> _1bc4d0a0b_buildFunc(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc26e69b_FnDecl> _150429_decl) {
	jule::Bool _15053_cycleRisk = (*(_self_))._field_cycleRisk;;
	(*(_self_))._field_cycleRisk=false;
	__JULE_DEFER({
		(*(_self_))._field_cycleRisk=_15053_cycleRisk;
	});;
	if (((*(_150429_decl))._field_Generics.len() > 0LL)) {
		_1bc4c9175_pushErr(_self_, (*_150429_decl.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("genericed functions cannot use as anonymous function", 52)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc2ee055_Fn> _15147_f = _1bc3ce102_buildFunc(_150429_decl);;
	jule::I32 _15163_n = (*((*(_self_))._field_s))._field_errors.len();;
	_1bc422c17_checkAnonFuncDecl((*(_self_))._field_s, &(_15147_f));
	if ((_15163_n != (*(*(_self_))._field_s.alloc)._field_errors.len())) {
		return nullptr;;
	};
	jule::Ptr<_1bc302113_FnIns> _15227_ins = _1bc300562_instanceForce(_15147_f);;
	(*(_15227_ins))._field_Anon=true;
	(*_15227_ins.alloc)._field_AsAnon=true;
	jule::Bool _15263_ok = _1bc4d06ba_checkFuncTypes(_self_, &(_15227_ins));;
	if ((!(_15263_ok))) {
		return nullptr;;
	};
	return _15227_ins;;
}



inline jule::Trait _1bc4d0d4c_buildNamespace(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25d6ac_NamespaceTypeDecl> _153434_ns) {
	jule::Ptr<_1bc3dcb9e_ImportInfo> _15357_imp = _1bc4b3e1d_findNamespace((*(_self_))._field_lookup, (*((*(_153434_ns))._field_Namespace))._field_Kind);;
	if (((_15357_imp == nullptr) || (!(_1bc3e0146_isLookupable(_15357_imp.ptr()))))) {
		_1bc4c9175_pushErr(_self_, (*_153434_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("undefined namespace: @", 22)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*(*(_153434_ns))._field_Namespace.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	_1bc4c9571_disallowBuiltin(_self_);
	jule::Trait _15427_lookup = (*(_self_))._field_lookup;;
	(*(_self_))._field_lookup=jule::Trait(_15357_imp, (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data2);
	jule::Ptr<_1bc4b64e7_Type> _15447_kind = _1bc4d14ce_checkDecl(_self_, &((*_153434_ns.alloc)._field_Kind));;
	(*(_self_))._field_lookup=_15427_lookup;
	_1bc4c9373_allowBuiltin(_self_);
	return jule::Trait(_15447_kind, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data21);;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc4d118d_build(_1bc4c88e4_typeChecker* _self_, jule::Any* _155026_declKind) {
	jule::Trait _155111_kind = nullptr;;
	{
		auto &_match_expr{ (*(_155026_declKind)) };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c5e5b36d:;
			{
				jule::Trait _15548_t = _1bc4cd410_buildIdent(_self_, (*(_155026_declKind)).cast_ptr<_1bc25d019_IdentTypeDecl>(&__jule_any_type78));;
				if ((_15548_t != nullptr)) {
					_155111_kind=_15548_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c5e5a7ce:;
			{
				jule::Trait _15598_t = _1bc4cd751_buildSubIdent(_self_, (*(_155026_declKind)).cast_ptr<_1bc25d2d3_SubIdentTypeDecl>(&__jule_any_type90));;
				if ((_15598_t != nullptr)) {
					_155111_kind=_15598_t;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type75) {
			_case_begin_1c5e5a845:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc4c313b_Sptr> _15658_t = _1bc4cddd3_buildSptr(_self_, (*(_155026_declKind)).cast_ptr<_1bc25d9a9_SptrTypeDecl>(&__jule_any_type75));;
				if ((_15658_t != nullptr)) {
					_155111_kind=jule::Trait(_15658_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type74) {
			_case_begin_1c5e5a8ab:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc4c6903_Ptr> _15718_t = _1bc4ce565_buildPtr(_self_, (*(_155026_declKind)).cast_ptr<_1bc25e438_PtrTypeDecl>(&__jule_any_type74));;
				if ((_15718_t != nullptr)) {
					_155111_kind=jule::Trait(_15718_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type73) {
			_case_begin_1c5e5a922:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc4c3b0e_Slc> _15778_t = _1bc4ce8a6_buildSlc(_self_, (*(_155026_declKind)).cast_ptr<_1bc25dd3e_SlcTypeDecl>(&__jule_any_type73));;
				if ((_15778_t != nullptr)) {
					_155111_kind=jule::Trait(_15778_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type72) {
			_case_begin_1c5e5a988:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc4c5e30_Arr> _15838_t = _1bc4cebe7_buildArr(_self_, (*(_155026_declKind)).cast_ptr<_1bc25ebca_ArrTypeDecl>(&__jule_any_type72));;
				if ((_15838_t != nullptr)) {
					_155111_kind=jule::Trait(_15838_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type76) {
			_case_begin_1c5e5a9ee:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc4c52a3_Map> _15898_t = _1bc4d0038_buildMap(_self_, (*(_155026_declKind)).cast_ptr<_1bc260428_MapTypeDecl>(&__jule_any_type76));;
				if ((_15898_t != nullptr)) {
					_155111_kind=jule::Trait(_15898_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data26);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type77) {
			_case_begin_1c5e5b47d:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc4c4703_Tuple> _15958_t = _1bc4d0379_buildTuple(_self_, (*(_155026_declKind)).cast_ptr<_1bc25e13b_TupleTypeDecl>(&__jule_any_type77));;
				if ((_15958_t != nullptr)) {
					_155111_kind=jule::Trait(_15958_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data25);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c5e5b4e4:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Ptr<_1bc302113_FnIns> _16018_t = _1bc4d0a0b_buildFunc(_self_, (*(_155026_declKind)).cast_ptr<_1bc26e69b_FnDecl>(&__jule_any_type68));;
				if ((_16018_t != nullptr)) {
					_155111_kind=jule::Trait(_16018_t, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1);
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type94) {
			_case_begin_1c5e5b55a:;
			{
				(*(_self_))._field_inscatch=true;
				jule::Trait _16078_t = _1bc4d0d4c_buildNamespace(_self_, (*(_155026_declKind)).cast_ptr<_1bc25d6ac_NamespaceTypeDecl>(&__jule_any_type94));;
				if ((_16078_t != nullptr)) {
					_155111_kind=_16078_t;
				};
			}
		}
		else {
			_case_begin_1c5e5a768:;
			{
				_1bc4c9175_pushErr(_self_, (*(_self_))._field_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c5e5a702:;
	};
	if ((_155111_kind == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _155111_kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data21)) {
			_case_begin_1c5e69b84:;
			{
				return _155111_kind.cast_ptr<_1bc4b64e7_Type>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data21);;
			}
		}
		else {
			_case_begin_1c5e6709e:;
			{
				jule::Ptr<_1bc4b64e7_Type> _16228_tk = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=_155111_kind});;
				{
					auto &_match_expr{ _155111_kind };
					
					if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)) {
						_case_begin_1c5e67ee5:;
						{
							if (((*(_self_))._field_ignoredGenerics != nullptr)) {
								{
									{ jule::Slice<jule::Ptr<_1bc4b64e7_Type>> *__jule_push_dest = (*(_self_))._field_ignoredGenerics; __jule_push_dest->push(_16228_tk); };
								};
							};
						}
					}
					else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)) {
						_case_begin_1c5e67d6e:;
						{
							jule::Ptr<_1bc2810c5_StructIns> _16295_s = _155111_kind.cast_ptr<_1bc2810c5_StructIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0);;
							if ((((*(_16295_s))._field_Decl != nullptr) && (*(*(_16295_s))._field_Decl.alloc)._field_Binded)) {
								(*(_16228_tk))._field_BindIdent=(*(*(_16295_s))._field_Decl.alloc)._field_Ident;
							};
						}
					}
					_match_end_1c5e67e7e:;
				};
				return _16228_tk;;
			}
		}
		_match_end_1c5e66554:;
	};
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc4d14ce_checkDecl(_1bc4c88e4_typeChecker* _self_, jule::Ptr<_1bc25c90e_TypeDecl>* _163830_decl) {
	jule::Ptr<_1bc247014_Token> _16407_errorToken = (*(_self_))._field_errorToken;;
	(*(_self_))._field_errorToken=(*((*(_163830_decl))))._field_Token;
	jule::Ptr<_1bc4b64e7_Type> _16437_kind = _1bc4d118d_build(_self_, &((*((*(_163830_decl))))._field_Kind));;
	(*(_self_))._field_errorToken=_16407_errorToken;
	return _16437_kind;;
}








inline jule::Bool _1bc4d19a7_identTypeLookup_eq(_1bc4d19a7_identTypeLookup *_self_, _1bc4d19a7_identTypeLookup _other_) { return true; }

inline jule::Bool static__1bc4d1e2a_prim(jule::Str* _166518_ident, jule::Ptr<_1bc4be610_Prim> _166530_t) {
	return ((*(_166530_t))._field_Kind == (*(_166518_ident)));;
}



inline jule::Bool static__1bc4d229e_exist(jule::Str* _166919_ident, jule::Ptr<_1bc4b64e7_Type>* _166936_k) {
	{
		
		if ((_1bc4b8b9d_Prim((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6e9d0:;
			{
				return static__1bc4d1e2a_prim(_166919_ident, _1bc4b8b9d_Prim((*(_166936_k)).ptr()));;
			}
		}
		else if ((_1bc4b8e34_Sptr((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6ea57:;
			{
				jule::Ptr<_1bc4c313b_Sptr> _16748_sptr = _1bc4b8e34_Sptr((*(_166936_k)).ptr());;
				return static__1bc4d229e_exist(_166919_ident, &((*(_16748_sptr))._field_Elem));;
			}
		}
		else if ((_1bc4b91ba_Ptr((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6eace:;
			{
				jule::Ptr<_1bc4c6903_Ptr> _16778_ptr = _1bc4b91ba_Ptr((*(_166936_k)).ptr());;
				return static__1bc4d229e_exist(_166919_ident, &((*(_16778_ptr))._field_Elem));;
			}
		}
		else if ((_1bc4b9c04_Slc((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6eb56:;
			{
				jule::Ptr<_1bc4c3b0e_Slc> _16808_slc = _1bc4b9c04_Slc((*(_166936_k)).ptr());;
				return static__1bc4d229e_exist(_166919_ident, &((*(_16808_slc))._field_Elem));;
			}
		}
		else if ((_1bc4b996d_Arr((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6ed32:;
			{
				jule::Ptr<_1bc4c5e30_Arr> _16838_arr = _1bc4b996d_Arr((*(_166936_k)).ptr());;
				return static__1bc4d229e_exist(_166919_ident, &((*(_16838_arr))._field_Elem));;
			}
		}
		else if ((_1bc4ba73d_Map((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6ed98:;
			{
				jule::Ptr<_1bc4c52a3_Map> _16868_m = _1bc4ba73d_Map((*(_166936_k)).ptr());;
				return (static__1bc4d229e_exist(_166919_ident, &((*(_16868_m))._field_Key)) || static__1bc4d229e_exist(_166919_ident, &((*_16868_m.alloc)._field_Val)));;
			}
		}
		else if ((_1bc4ba221_Struct((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6ee0e:;
			{
				jule::Ptr<_1bc2810c5_StructIns> _16908_s = _1bc4ba221_Struct((*(_166936_k)).ptr());;
				{
					auto expr = &((*(_16908_s))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5e772e0:;
					if (it != expr_end) {
						jule::Ptr<_1bc4b4b11_InsGeneric> _169116_g = *it;
						{
							if (static__1bc4d229e_exist(_166919_ident, &((*(_169116_g))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1c5e772e0:;
						++it;
						goto _iter_begin_1c5e772e0;
					}
					_iter_end_1c5e772e0:;
				};
				return false;;
			}
		}
		else if ((_1bc4b9e8a_Fn((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6ee75:;
			{
				jule::Ptr<_1bc302113_FnIns> _16988_f = _1bc4b9e8a_Fn((*(_166936_k)).ptr());;
				{
					auto expr = &((*(_16988_f))._field_Params);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5e78bc6:;
					if (it != expr_end) {
						jule::Ptr<_1bc300ead_ParamIns> _169916_p = *it;
						{
							if (_1bc2ecbd0_IsSelf((*(_169916_p))._field_Decl.ptr())) {
								goto _iter_next_1c5e78bc6;
							};
							if (static__1bc4d229e_exist(_166919_ident, &((*(_169916_p))._field_Type))) {
								return true;;
							};
						}
						_iter_next_1c5e78bc6:;
						++it;
						goto _iter_begin_1c5e78bc6;
					}
					_iter_end_1c5e78bc6:;
				};
				if (((*_16988_f.alloc)._field_Result != nullptr)) {
					return static__1bc4d229e_exist(_166919_ident, &((*_16988_f.alloc)._field_Result));;
				};
				return false;;
			}
		}
		else if ((_1bc4ba9c4_Tup((*(_166936_k)).ptr()) != nullptr)) {
			_case_begin_1c5e6eeec:;
			{
				jule::Ptr<_1bc4c4703_Tuple> _17128_tup = _1bc4ba9c4_Tup((*(_166936_k)).ptr());;
				{
					auto expr = &((*(_17128_tup))._field_Types);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c5e7b547:;
					if (it != expr_end) {
						jule::Ptr<_1bc4b64e7_Type> _171316_t = *it;
						{
							if (static__1bc4d229e_exist(_166919_ident, &(_171316_t))) {
								return true;;
							};
						}
						_iter_next_1c5e7b547:;
						++it;
						goto _iter_begin_1c5e7b547;
					}
					_iter_end_1c5e7b547:;
				};
				return false;;
			}
		}
		else {
			_case_begin_1c5e6e8ae:;
			{
				return false;;
			}
		}
		_match_end_1c5e6e79e:;
	};
}















inline void _1bcd87c31_stop(_1bcd8757c_scopeParser* _self_) {
	(*(_self_))._field_pos=-1LL;
}



inline jule::Bool _1bcd87eb7_stopped(_1bcd8757c_scopeParser* _self_) {
	return ((*(_self_))._field_pos == -1LL);;
}



inline jule::Bool _1bcd8824d_finished(_1bcd8757c_scopeParser* _self_) {
	return ((*(_self_))._field_pos >= (*(_self_))._field_stmts.len());;
}



inline jule::Bool _1bcd884d4_isLastSt(_1bcd8757c_scopeParser* _self_) {
	return (((*(_self_))._field_pos + 1LL) >= (*(_self_))._field_stmts.len());;
}



inline void _1bcd88847_pushErr(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc247014_Token> _15423_token, jule::Str _15445_fmt) {
	_1bcda626b_pushErr((*(_self_))._field_p.ptr(), _15423_token, _15445_fmt, jule::Slice<jule::Any>());
}



inline void _1bcd88baa_pushSuggestion(_1bcd8757c_scopeParser* _self_, jule::Str _15930_fmt, jule::Slice<jule::Any> _15950_args) {
	_1bcda65ce_pushSuggestion((*(_self_))._field_p.ptr(), _15930_fmt, _15950_args);
}



inline void _1bcd88e63_insertAsNext(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _16333_tokens) {
	(*(_self_))._field_stmts=jule::append((*(_self_))._field_stmts.slice(0LL, ((*(_self_))._field_pos + 1LL)),(*(_self_))._field_stmts.slice((*(_self_))._field_pos));
	(*(_self_))._field_stmts[((*(_self_))._field_pos + 1LL)]=jule::new_ptr<_1bcd86bdb_stmt>(_1bcd86bdb_stmt{._field_tokens=(*(_16333_tokens)), ._field_terminated=false});
}



inline jule::Ptr<_1bcd86bdb_stmt> _1bcd891e9_next(_1bcd8757c_scopeParser* _self_) {
	((*(_self_))._field_pos)++;
	return (*(_self_))._field_stmts[(*(_self_))._field_pos];;
}



inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd895e5_buildScope(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _17331_tokens, jule::Ptr<_1bc247014_Token> _17360_end) {
	jule::Ptr<_1bc26ca0c_ScopeTree> _1747_s = _1bcd85965_newScope();;
	(*(_1747_s))._field_Parent=(*(_self_))._field_s;
	(*_1747_s.alloc)._field_End=_17360_end;
	_1bcd8757c_scopeParser _1777_ssp = _1bcd8757c_scopeParser{._field_p=(*(_self_))._field_p, ._field_s=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1bcd86bdb_stmt>>(nullptr), ._field_pos=0};;
	_1bcd94468_build(&_1777_ssp, _17331_tokens, &(_1747_s));
	return _1747_s;;
}



inline jule::Ptr<_1bc270856_VarDecl> _1bcd89936_buildVarSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _18431_tokens) {
	jule::Ptr<_1bc270856_VarDecl> _1857_v = _1bcda903d_buildVar((*(_self_))._field_p, (*(_18431_tokens)));;
	if ((_1857_v != nullptr)) {
		(*_1857_v.alloc)._field_Scope=(*(_self_))._field_s;
	};
	return _1857_v;;
}



inline jule::Ptr<_1bc270c30_RetSt> _1bcd89c77_buildRetSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _19230_tokens) {
	jule::Ptr<_1bc270c30_RetSt> _1937_st = jule::new_ptr<_1bc270c30_RetSt>(_1bc270c30_RetSt{._field_Token=_19230_tokens[0LL], ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	if ((_19230_tokens.len() > 1LL)) {
		(_19230_tokens).mut_slice(1LL);;
		(*(_1937_st))._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, &(_19230_tokens));
	};
	return _1937_st;;
}



inline jule::Ptr<_1bc2714a0_Iter> _1bcd8a0b8_buildWhileNextIter(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _20339_s) {
	jule::Ptr<_1bc2714a0_Iter> _2047_it = jule::new_ptr<_1bc2714a0_Iter>(_1bc2714a0_Iter{._field_Comptime=false, ._field_Token=(*((*(_20339_s))))._field_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr)});;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _2077_tokens = (*((*(_20339_s))))._field_tokens.slice(1LL);;
	jule::Ptr<_1bc271cca_WhileKind> _2087_kind = jule::new_ptr<_1bc271cca_WhileKind>(_1bc271cca_WhileKind{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if ((_2077_tokens.len() > 0LL)) {
		(*_2087_kind.alloc)._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, &(_2077_tokens));
	};
	if (_1bcd884d4_isLastSt(_self_)) {
		_1bcd88847_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	_2077_tokens=(*(_1bcd891e9_next(_self_)))._field_tokens;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _2207_stTokens = _1bcda0bb1_getBlockExpr(&(_2077_tokens));;
	if ((_2207_stTokens.len() > 0LL)) {
		jule::Ptr<_1bcd86bdb_stmt> _2228_stmt = jule::new_ptr<_1bcd86bdb_stmt>(_1bcd86bdb_stmt{._field_tokens=_2207_stTokens, ._field_terminated=(*((*(_20339_s))))._field_terminated});;
		(*_2087_kind.alloc)._field_NextToken=_2207_stTokens[0LL];
		(*_2087_kind.alloc)._field_Next=_1bcd94105_buildSt(_self_, &(_2228_stmt));
	};
	jule::I32 _2307_i = _2207_stTokens.len();;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _2317_blockTokens = _1bcda3e39_range(&(_2307_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_2077_tokens));;
	if ((_2317_blockTokens == nullptr)) {
		_1bcd87c31_stop(_self_);
		_1bcd88847_pushErr(_self_, (*(_2047_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_2307_i < _2077_tokens.len())) {
		_1bcd88847_pushErr(_self_, _2077_tokens[_2307_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_2047_it))._field_Scope=_1bcd895e5_buildScope(_self_, &(_2317_blockTokens), _2077_tokens[(_2307_i - 1LL)]);
	(*_2047_it.alloc)._field_Kind=jule::Any(_2087_kind, &__jule_any_type34);
	return _2047_it;;
}



inline jule::Ptr<_1bc271cca_WhileKind> _1bcd8a409_buildWhileIterKind(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _24839_tokens) {
	return jule::new_ptr<_1bc271cca_WhileKind>(_1bc271cca_WhileKind{._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, _24839_tokens), ._field_Next=jule::Any(nullptr), ._field_NextToken=jule::Ptr<_1bc247014_Token>(nullptr)});;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcd8a74a_getRangeKindKeysTokens(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _25443_toks) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _2557_vars;
	jule::Slice<_1a9575ca1_Log> _25513_errs;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(_25443_toks, static_cast<jule::U32>(5LLU), true);
		_2557_vars = __jule_assign_result.__jule_result_arg0;
		_25513_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_25513_errs);
	return _2557_vars;;
}



inline jule::Ptr<_1bc270856_VarDecl> _1bcd8aa8b_buildRangeKindKey(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _26038_tokens) {
	if (((*(_26038_tokens)).len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1bc270856_VarDecl> _2647_key = jule::new_ptr<_1bc270856_VarDecl>(_1bc270856_VarDecl{._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Token=(*(_26038_tokens))[0LL], ._field_Setter=(*(_26038_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	if (((*((*(_2647_key))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_2647_key.alloc)._field_Mutable=true;
		if (((*(_26038_tokens)).len() == 1LL)) {
			_1bcd88847_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(*_2647_key.alloc)._field_Token=(*(_26038_tokens))[1LL];
	} else if (((*(_26038_tokens)).len() > 1LL)) {
		_1bcd88847_pushErr(_self_, (*(_26038_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	if (((*((*(_2647_key))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcd88847_pushErr(_self_, (*_2647_key.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*(_2647_key))._field_Ident=(*((*_2647_key.alloc)._field_Token))._field_Kind;
	return _2647_key;;
}



inline jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _1bcd8adcc_buildRangeKindKeys(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _28639_parts) {
	jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _28711_keys = nullptr;;
	{
		auto expr = _28639_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6345889:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _28815_tokens = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc270856_VarDecl>> &__jule_push_dest = _28711_keys; __jule_push_dest.push(_1bcd8aa8b_buildRangeKindKey(_self_, &(_28815_tokens))); };
			}
			_iter_next_1c6345889:;
			++it;
			goto _iter_begin_1c6345889;
		}
		_iter_end_1c6345889:;
	};
	return _28711_keys;;
}



inline void _1bcd8b240_setupRangeKindKeysPlain(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc2726d2_RangeKind>* _29444_rng, jule::Slice<jule::Ptr<_1bc247014_Token>>* _29471_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _2957_keyTokens = _1bcd8a74a_getRangeKindKeysTokens(_self_, _29471_tokens);;
	if ((_2957_keyTokens.len() == 0LL)) {
		return;;
	};
	if ((_2957_keyTokens.len() > 2LL)) {
		_1bcd88847_pushErr(_self_, (*((*(_29444_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("range variables can be maximum two", 34)));
	};
	jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _3027_keys = _1bcd8adcc_buildRangeKindKeys(_self_, &(_2957_keyTokens));;
	(*((*(_29444_rng))))._field_KeyA=_3027_keys[0LL];
	if ((_3027_keys.len() > 1LL)) {
		(*((*(_29444_rng))))._field_KeyB=_3027_keys[1LL];
	};
}



inline void _1bcd8b5a3_setupRangeKindKeysExplicit(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc2726d2_RangeKind>* _30947_rng, jule::Slice<jule::Ptr<_1bc247014_Token>>* _30974_tokens) {
	jule::I32 _3107_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3117_rang = _1bcda3e39_range(&(_3107_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _30974_tokens);;
	if ((_3107_i < (*(_30974_tokens)).len())) {
		_1bcd88847_pushErr(_self_, (*((*(_30947_rng))))._field_InToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	_1bcd8b240_setupRangeKindKeysPlain(_self_, _30947_rng, &(_3117_rang));
}



inline void _1bcd8b916_setupRangeKindKeys(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bc2726d2_RangeKind>* _31839_rng, jule::Slice<jule::Ptr<_1bc247014_Token>>* _31866_tokens) {
	if (((*((*(_31866_tokens))[0LL]))._field_Id == static_cast<jule::U32>(74LLU))) {
		_1bcd8b5a3_setupRangeKindKeysExplicit(_self_, _31839_rng, _31866_tokens);
		return;;
	};
	_1bcd8b240_setupRangeKindKeysPlain(_self_, _31839_rng, _31866_tokens);
}



inline jule::Ptr<_1bc2726d2_RangeKind> _1bcd8bdbc_buildRangeIterKind(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _32639_varTokens, jule::Slice<jule::Ptr<_1bc247014_Token>>* _3278_exprTokens, jule::Ptr<_1bc247014_Token>* _32742_inToken) {
	jule::Ptr<_1bc2726d2_RangeKind> _3287_rng = jule::new_ptr<_1bc2726d2_RangeKind>(_1bc2726d2_RangeKind{._field_InToken=(*(_32742_inToken)), ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_KeyA=jule::Ptr<_1bc270856_VarDecl>(nullptr), ._field_KeyB=jule::Ptr<_1bc270856_VarDecl>(nullptr)});;
	if (((*(_3278_exprTokens)).len() == 0LL)) {
		_1bcd88847_pushErr(_self_, (*(_3287_rng))._field_InToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return _3287_rng;;
	};
	(*(_3287_rng))._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, _3278_exprTokens);
	if (((*(_32639_varTokens)).len() > 0LL)) {
		_1bcd8b916_setupRangeKindKeys(_self_, &(_3287_rng), _32639_varTokens);
	};
	return _3287_rng;;
}



inline jule::Any _1bcd8c2b8_buildCommonIterKind(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _34240_tokens, jule::Ptr<_1bc247014_Token>* _34266_errTok) {
	jule::I32 _3437_braceN = 0LL;;
	{
		auto expr = _34240_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6350a5e:;
		if (it != expr_end) {
			jule::I32 _3448_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _34415_tok = *it;
			{
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c63514bb:;
						{
							(_3437_braceN)++;
							goto _iter_next_1c6350a5e;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c63518a6:;
						{
							(_3437_braceN)--;
						}
					}
					_match_end_1c63517a7:;
				};
				if ((_3437_braceN != 0LL)) {
					goto _iter_next_1c6350a5e;
				};
				{
					auto &_match_expr{ (*(_34415_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(12LLU)) {
						_case_begin_1c6352973:;
						{
							jule::Slice<jule::Ptr<_1bc247014_Token>> _3619_declTokens = (*(_34240_tokens)).slice(0LL, _3448_i);;
							jule::Slice<jule::Ptr<_1bc247014_Token>> _3629_exprTokens = (*(_34240_tokens)).slice((_3448_i + 1LL));;
							return jule::Any(_1bcd8bdbc_buildRangeIterKind(_self_, &(_3619_declTokens), &(_3629_exprTokens), &(_34415_tok)), &__jule_any_type36);;
						}
					}
					_match_end_1c63530c2:;
				};
			}
			_iter_next_1c6350a5e:;
			++it;
			_3448_i++;
			goto _iter_begin_1c6350a5e;
		}
		_iter_end_1c6350a5e:;
	};
	return jule::Any(_1bcd8a409_buildWhileIterKind(_self_, _34240_tokens), &__jule_any_type34);;
}



inline jule::Ptr<_1bc2714a0_Iter> _1bcd8c609_buildCommonIter(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _36935_tokens) {
	jule::Ptr<_1bc2714a0_Iter> _3707_it = jule::new_ptr<_1bc2714a0_Iter>(_1bc2714a0_Iter{._field_Comptime=false, ._field_Token=_36935_tokens[0LL], ._field_Kind=jule::Any(nullptr), ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr)});;
	(_36935_tokens).mut_slice(1LL);;
	if ((_36935_tokens.len() == 0LL)) {
		_1bcd87c31_stop(_self_);
		_1bcd88847_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3807_exprTokens = _1bcda0bb1_getBlockExpr(&(_36935_tokens));;
	if ((_3807_exprTokens.len() > 0LL)) {
		(*(_3707_it))._field_Kind=_1bcd8c2b8_buildCommonIterKind(_self_, &(_3807_exprTokens), &((*_3707_it.alloc)._field_Token));
	};
	jule::I32 _3847_i = _3807_exprTokens.len();;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3857_scopeTokens = _1bcda3e39_range(&(_3847_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_36935_tokens));;
	if ((_3857_scopeTokens == nullptr)) {
		_1bcd87c31_stop(_self_);
		_1bcd88847_pushErr(_self_, (*(_3707_it))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_3847_i < _36935_tokens.len())) {
		_1bcd88847_pushErr(_self_, _36935_tokens[_3847_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_3707_it))._field_Scope=_1bcd895e5_buildScope(_self_, &(_3857_scopeTokens), _36935_tokens[(_3847_i - 1LL)]);
	return _3707_it;;
}



inline jule::Ptr<_1bc2714a0_Iter> _1bcd8c94a_buildIterSt(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _39932_st) {
	if ((*((*(_39932_st))))._field_terminated) {
		return _1bcd8a0b8_buildWhileNextIter(_self_, _39932_st);;
	};
	return _1bcd8c609_buildCommonIter(_self_, (*((*(_39932_st))))._field_tokens);;
}



inline jule::Ptr<_1bc272aab_BreakSt> _1bcd8cc8b_buildBreakSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _40633_tokens) {
	jule::Ptr<_1bc272aab_BreakSt> _4077_brk = jule::new_ptr<_1bc272aab_BreakSt>(_1bc272aab_BreakSt{._field_Token=(*(_40633_tokens))[0LL], ._field_Label=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if (((*(_40633_tokens)).len() > 1LL)) {
		if (((*((*(_40633_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1bcd88847_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4077_brk))._field_Label=(*(_40633_tokens))[1LL];
			if (((*(_40633_tokens)).len() > 2LL)) {
				_1bcd88847_pushErr(_self_, (*(_40633_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4077_brk;;
}



inline jule::Ptr<_1bc272e85_ContSt> _1bcd8d0cc_buildContSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _42432_tokens) {
	jule::Ptr<_1bc272e85_ContSt> _4257_cont = jule::new_ptr<_1bc272e85_ContSt>(_1bc272e85_ContSt{._field_Token=(*(_42432_tokens))[0LL], ._field_Label=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if (((*(_42432_tokens)).len() > 1LL)) {
		if (((*((*(_42432_tokens))[1LL]))._field_Id != static_cast<jule::U32>(1LLU))) {
			_1bcd88847_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write a label identifier because label expected", 47)), jule::Slice<jule::Any>());
		} else {
			(*(_4257_cont))._field_Label=(*(_42432_tokens))[1LL];
			if (((*(_42432_tokens)).len() > 2LL)) {
				_1bcd88847_pushErr(_self_, (*(_42432_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
	};
	return _4257_cont;;
}



inline jule::Ptr<_1bc27343b_If> _1bcd8d41d_buildIf(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _44228_tokens) {
	jule::Ptr<_1bc27343b_If> _4437_model = jule::new_ptr<_1bc27343b_If>(_1bc27343b_If{._field_Token=(*(_44228_tokens))[0LL], ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr)});;
	((*(_44228_tokens))).mut_slice(1LL);;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _4477_exprTokens = _1bcda0bb1_getBlockExpr(_44228_tokens);;
	jule::I32 _4487_i = 0LL;;
	if ((_4477_exprTokens.len() == 0LL)) {
		_1bcd88847_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	} else {
		_4487_i=_4477_exprTokens.len();
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _4547_scopeTokens = _1bcda3e39_range(&(_4487_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _44228_tokens);;
	if ((_4547_scopeTokens == nullptr)) {
		_1bcd87c31_stop(_self_);
		_1bcd88847_pushErr(_self_, (*(_4437_model))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc247014_Token> _4617_end = (*(_44228_tokens))[(_4487_i - 1LL)];;
	if ((_4487_i < (*(_44228_tokens)).len())) {
		if (((*((*(_44228_tokens))[_4487_i]))._field_Id == static_cast<jule::U32>(14LLU))) {
			((*(_44228_tokens))).mut_slice(_4487_i);;
		} else {
			_1bcd88847_pushErr(_self_, (*(_44228_tokens))[_4487_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			(*(_44228_tokens))=nullptr;
		};
	};
	(*(_4437_model))._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, &(_4477_exprTokens));
	(*_4437_model.alloc)._field_Scope=_1bcd895e5_buildScope(_self_, &(_4547_scopeTokens), _4617_end);
	return _4437_model;;
}



inline jule::Ptr<_1bc273815_Else> _1bcd8d75e_buildElse(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _47530_tokens) {
	jule::Ptr<_1bc273815_Else> _4767_els = jule::new_ptr<_1bc273815_Else>(_1bc273815_Else{._field_Token=(*(_47530_tokens))[0LL], ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr)});;
	((*(_47530_tokens))).mut_slice(1LL);;
	jule::I32 _4807_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _4817_scopeTokens = _1bcda3e39_range(&(_4807_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _47530_tokens);;
	if ((_4817_scopeTokens == nullptr)) {
		if ((_4807_i < (*(_47530_tokens)).len())) {
			_1bcd88847_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("else's cannot have any expression", 33)));
		} else {
			_1bcd87c31_stop(_self_);
			_1bcd88847_pushErr(_self_, (*(_4767_els))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
			_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		};
		return nullptr;;
	};
	if ((_4807_i < (*(_47530_tokens)).len())) {
		_1bcd88847_pushErr(_self_, (*(_47530_tokens))[_4807_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_4767_els))._field_Scope=_1bcd895e5_buildScope(_self_, &(_4817_scopeTokens), (*(_47530_tokens))[(_4807_i - 1LL)]);
	return _4767_els;;
}



inline jule::Ptr<_1bc273cbb_Conditional> _1bcd8daa0_buildIfElseChain(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _49936_tokens) {
	jule::Ptr<_1bc273cbb_Conditional> _5007_chain = jule::new_ptr<_1bc273cbb_Conditional>(_1bc273cbb_Conditional{._field_Head=_1bcd8d41d_buildIf(_self_, &(_49936_tokens)), ._field_Tail=jule::Slice<jule::Ptr<_1bc27343b_If>>(nullptr), ._field_Default=jule::Ptr<_1bc273815_Else>(nullptr)});;
	if (((*(_5007_chain))._field_Head == nullptr)) {
		return nullptr;;
	};
	while ((_49936_tokens.len() != 0LL)) {
		{
			if (((*(_49936_tokens[0LL]))._field_Id != static_cast<jule::U32>(14LLU))) {
				goto _iter_end_1c636e83b;
			};
			if (((_49936_tokens.len() > 1LL) && ((*(_49936_tokens[1LL]))._field_Id == static_cast<jule::U32>(13LLU)))) {
				(_49936_tokens).mut_slice(1LL);;
				jule::Ptr<_1bc27343b_If> _5129_elif = _1bcd8d41d_buildIf(_self_, &(_49936_tokens));;
				(*(_5007_chain))._field_Tail=jule::append((*_5007_chain.alloc)._field_Tail,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27343b_If>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5129_elif; __jule_collection; }));
				goto _iter_next_1c636e83b;
			};
			(*(_5007_chain))._field_Default=_1bcd8d75e_buildElse(_self_, &(_49936_tokens));
			goto _iter_end_1c636e83b;
		}
	_iter_next_1c636e83b:;
	}
	_iter_end_1c636e83b:;;
	return _5007_chain;;
}



inline jule::Ptr<_1bc261c43_Expr> _1bcd8dde1_buildCoCallSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _52233_tokens) {
	jule::Ptr<_1bc247014_Token> _5233_token = _52233_tokens[0LL];;
	(_52233_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc261c43_Expr> _5257_e = _1bcda6920_buildExpr((*(_self_))._field_p, &(_52233_tokens));;
	if ((_5257_e == nullptr)) {
		return _5257_e;;
	};
	{
		auto &_match_expr{ (*(_5257_e))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c637392d:;
			{
				(*((*(_5257_e))._field_Kind.unsafe_cast_ptr<_1bc26596c_FnCallExpr>()))._field_IsCo=true;
			}
		}
		else {
			_case_begin_1c6374005:;
			{
				_1bcd88847_pushErr(_self_, _5233_token, static_cast<jule::Str>(jule::Str::lit("statement must have function call expression", 44)));
			}
		}
		_match_end_1c6373e8e:;
	};
	return _5257_e;;
}



inline jule::Ptr<_1bc26a3bc_GotoSt> _1bcd8e232_buildGotoSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _53832_tokens) {
	jule::Ptr<_1bc26a3bc_GotoSt> _5397_gt = jule::new_ptr<_1bc26a3bc_GotoSt>(_1bc26a3bc_GotoSt{._field_Token=(*(_53832_tokens))[0LL], ._field_Label=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if (((*(_53832_tokens)).len() == 1LL)) {
		_1bcd88847_pushErr(_self_, (*(_5397_gt))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing label identifier for goto statement", 43)));
		return nullptr;;
	} else if (((*(_53832_tokens)).len() > 2LL)) {
		_1bcd88847_pushErr(_self_, (*(_53832_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1bc247014_Token> _5487_identToken = (*(_53832_tokens))[1LL];;
	if (((*(_5487_identToken))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcd88847_pushErr(_self_, _5487_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return _5397_gt;;
	};
	(*(_5397_gt))._field_Label=_5487_identToken;
	return _5397_gt;;
}



inline jule::Ptr<_1bc26a6b9_FallSt> _1bcd8e573_buildFallSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _55832_tokens) {
	jule::Ptr<_1bc26a6b9_FallSt> _5597_fll = jule::new_ptr<_1bc26a6b9_FallSt>(_1bc26a6b9_FallSt{._field_Token=(*(_55832_tokens))[0LL]});;
	if (((*(_55832_tokens)).len() > 1LL)) {
		_1bcd88847_pushErr(_self_, (*(_55832_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return _5597_fll;;
}



inline jule::Ptr<_1bc274508_TypeAliasDecl> _1bcd8e8b4_buildTypeAliasSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _56837_tokens) {
	jule::Ptr<_1bc274508_TypeAliasDecl> _5697_tad = _1bcda81b3_buildTypeAliasDecl((*(_self_))._field_p, _56837_tokens);;
	(*(_5697_tad))._field_Scope=(*(_self_))._field_s;
	return _5697_tad;;
}



inline void _1bcd8ed8c_pushCaseExpr(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _57432_tokens, jule::Ptr<_1bc247014_Token> _57461_token, jule::Bool _5753_typeMatch, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _57525_exprs) {
	if ((_57432_tokens.len() == 0LL)) {
		return;;
	};
	if (_5753_typeMatch) {
		jule::I32 _5808_i = 0LL;;
		jule::Ptr<_1bc25c90e_TypeDecl> _5818_t;
		jule::Bool _58111_ok;
		({
			__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, &(_57432_tokens), (&(_5808_i)), true);
			_5818_t = __jule_assign_result.__jule_result_arg0;
			_58111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_58111_ok) {
			{ jule::Slice<jule::Ptr<_1bc261c43_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(jule::new_ptr<_1bc261c43_Expr>(_1bc261c43_Expr{._field_Token=_57432_tokens[0LL], ._field_End=_57432_tokens[(_57432_tokens.len() - 1LL)], ._field_Kind=jule::Any(_5818_t, &__jule_any_type92)})); };
			if ((_5808_i < _57432_tokens.len())) {
				_1bcd88847_pushErr(_self_, _57432_tokens[_5808_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			};
		};
		return;;
	};
	{ jule::Slice<jule::Ptr<_1bc261c43_Expr>> &__jule_push_dest = (*(_57525_exprs)); __jule_push_dest.push(_1bcda6920_buildExpr((*(_self_))._field_p, &(_57432_tokens))); };
}



inline __jule_tuple_sx_1bc261c43_Expr__jule_tuple_bool _1bcd90343_buildCaseExprs(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _59735_tokens, jule::Ptr<_1bc247014_Token>* _59765_colon, jule::Bool _59787_typeMatch) {
	__jule_tuple_sx_1bc261c43_Expr__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _5987_exprs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc261c43_Expr>(nullptr); __jule_collection; });;
	jule::I32 _5997_braceN = 0LL;;
	jule::I32 _6007_j = 0LL;;
	{
		auto expr = _59735_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c638094b:;
		if (it != expr_end) {
			jule::I32 _6018_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _60115_tok = *it;
			{
				{
					auto &_match_expr{ (*(_60115_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c6382244:;
						{
							(_5997_braceN)++;
							goto _iter_next_1c638094b;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1c638262e:;
						{
							(_5997_braceN)--;
							goto _iter_next_1c638094b;
						}
					}
					_match_end_1c6382530:;
				};
				if ((_5997_braceN != 0LL)) {
					goto _iter_next_1c638094b;
				};
				{
					
					if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(66LLU))) {
						_case_begin_1c6383ce5:;
						{
							jule::Slice<jule::Ptr<_1bc247014_Token>> _6205_exprTokens = (*(_59735_tokens)).slice(_6007_j, _6018_i);;
							if ((_6205_exprTokens.len() == 0LL)) {
								_1bcd88847_pushErr(_self_, _60115_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
							} else {
								_1bcd8ed8c_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							};
							_6007_j=(_6018_i + 1LL);
						}
					}
					else if (((*(_60115_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
						_case_begin_1c6383d5b:;
						{
							(*(_59765_colon))=_60115_tok;
							_1bcd8ed8c_pushCaseExpr(_self_, (*(_59735_tokens)).slice(_6007_j, _6018_i), _60115_tok, _59787_typeMatch, &(_5987_exprs));
							((*(_59735_tokens))).mut_slice((_6018_i + 1LL));;
							__jule_func_result.__jule_result_arg0 = _5987_exprs;
							__jule_func_result.__jule_result_arg1 = (((_6018_i - _6007_j) == 0LL) || (_5987_exprs.len() != 0LL));
							return __jule_func_result;;
						}
					}
					_match_end_1c63837ea:;
				};
			}
			_iter_next_1c638094b:;
			++it;
			_6018_i++;
			goto _iter_begin_1c638094b;
		}
		_iter_end_1c638094b:;
	};
	_1bcd88847_pushErr(_self_, (*(_59735_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	(*(_59735_tokens))=nullptr;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd90684_buildCaseScope(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _63935_tokens) {
	jule::I32 _6407_n = 0LL;;
	for (;;) {
		{
			jule::I32 _6428_i = 0LL;;
			jule::Slice<jule::Ptr<_1bc247014_Token>> _6438_next;
			({
				__jule_tuple_sx_1bc247014_Token__jule_tuple_bool __jule_assign_result = _1bcd868ab_skipSt(&(_6428_i), (*(_63935_tokens)).slice(_6407_n));
				_6438_next = __jule_assign_result.__jule_result_arg0;
			});
			if ((_6438_next.len() == 0LL)) {
				goto _iter_end_1c6387a52;
			};
			jule::Ptr<_1bc247014_Token> _6474_tok = _6438_next[0LL];;
			if (((*(_6474_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_6407_n+=_6428_i;
				goto _iter_next_1c6387a52;
			};
			jule::Slice<jule::Ptr<_1bc247014_Token>> _6528_scopeTokens = (*(_63935_tokens)).slice(0LL, _6407_n);;
			jule::Ptr<_1bc26ca0c_ScopeTree> _6538_scope = _1bcd895e5_buildScope(_self_, &(_6528_scopeTokens), (*(_63935_tokens))[_6407_n]);;
			((*(_63935_tokens))).mut_slice(_6407_n);;
			return _6538_scope;;
		}
	_iter_next_1c6387a52:;
	}
	_iter_end_1c6387a52:;;
	jule::Ptr<_1bc247014_Token> _65711_end;;
	if (((*(_63935_tokens)).len() > 0LL)) {
		_65711_end=(*(_63935_tokens))[((*(_63935_tokens)).len() - 1LL)];
	};
	jule::Ptr<_1bc26ca0c_ScopeTree> _6617_scope = _1bcd895e5_buildScope(_self_, _63935_tokens, _65711_end);;
	(*(_63935_tokens))=nullptr;
	return _6617_scope;;
}



inline __jule_tuple_x_1bc2749ae_Case__jule_tuple_bool _1bcd90a80_buildCase(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _66630_tokens, jule::Bool _66655_typeMatch) {
	__jule_tuple_x_1bc2749ae_Case__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc2749ae_Case> _6677_c = jule::new_ptr<_1bc2749ae_Case>(_1bc2749ae_Case{._field_Token=(*(_66630_tokens))[0LL], ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Exprs=jule::Slice<jule::Ptr<_1bc261c43_Expr>>(nullptr)});;
	((*(_66630_tokens))).mut_slice(1LL);;
	jule::Ptr<_1bc247014_Token> _67111_colon = nullptr;;
	if (((*(_66630_tokens)).len() == 0LL)) {
		_1bcd88847_pushErr(_self_, (*(_6677_c))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Bool _67612_ok;
	({
		__jule_tuple_sx_1bc261c43_Expr__jule_tuple_bool __jule_assign_result = _1bcd90343_buildCaseExprs(_self_, _66630_tokens, &(_67111_colon), _66655_typeMatch);
		(*(_6677_c))._field_Exprs = __jule_assign_result.__jule_result_arg0;
		_67612_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_6677_c))._field_Scope=_1bcd90684_buildCaseScope(_self_, _66630_tokens);
	if (((*((*_6677_c.alloc)._field_Scope))._field_End == nullptr)) {
		(*(*(_6677_c))._field_Scope.alloc)._field_End=_67111_colon;
	};
	jule::Bool _6813_isDefault = (_67612_ok && ((*_6677_c.alloc)._field_Exprs.len() == 0LL));;
	__jule_func_result.__jule_result_arg0 = _6677_c;
	__jule_func_result.__jule_result_arg1 = _6813_isDefault;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1bc2749ae_Case__jule_tuple_x_1bc273815_Else _1bcd90e7b_buildCases(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _68530_tokens, jule::Bool _68555_typeMatch) {
	__jule_tuple_sx_1bc2749ae_Case__jule_tuple_x_1bc273815_Else __jule_func_result;
	jule::Slice<jule::Ptr<_1bc2749ae_Case>> _68611_cases = nullptr;;
	jule::Ptr<_1bc273815_Else> _68711_def = nullptr;;
	jule::Bool _6887_defNotLast = false;;
	while ((_68530_tokens.len() > 0LL)) {
		{
			jule::Ptr<_1bc247014_Token> _6908_tok = _68530_tokens[0LL];;
			if (((*(_6908_tok))._field_Id != static_cast<jule::U32>(66LLU))) {
				_1bcd88847_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				goto _iter_end_1c6391ece;
			};
			jule::Ptr<_1bc2749ae_Case> _6958_c;
			jule::Bool _69511_isDefault;
			({
				__jule_tuple_x_1bc2749ae_Case__jule_tuple_bool __jule_assign_result = _1bcd90a80_buildCase(_self_, &(_68530_tokens), _68555_typeMatch);
				_6958_c = __jule_assign_result.__jule_result_arg0;
				_69511_isDefault = __jule_assign_result.__jule_result_arg1;
			});
			if (_69511_isDefault) {
				(*(_6958_c))._field_Token=_6908_tok;
				if ((_68711_def == nullptr)) {
					_68711_def=jule::new_ptr<_1bc273815_Else>(_1bc273815_Else{._field_Token=(*_6958_c.alloc)._field_Token, ._field_Scope=(*_6958_c.alloc)._field_Scope});
				} else {
					_1bcd88847_pushErr(_self_, _6908_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
			} else {
				_6887_defNotLast=(_6887_defNotLast || (_68711_def != nullptr));
				{ jule::Slice<jule::Ptr<_1bc2749ae_Case>> &__jule_push_dest = _68611_cases; __jule_push_dest.push(_6958_c); };
			};
		}
	_iter_next_1c6391ece:;
	}
	_iter_end_1c6391ece:;;
	if (_6887_defNotLast) {
		_1bcd88847_pushErr(_self_, (*(_68711_def))._field_Token, static_cast<jule::Str>(jule::Str::lit("default case should be last case", 32)));
	};
	__jule_func_result.__jule_result_arg0 = _68611_cases;
	__jule_func_result.__jule_result_arg1 = _68711_def;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc2752c8_MatchCase> _1bcd912bc_buildMatchCase(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _71934_tokens) {
	jule::Ptr<_1bc2752c8_MatchCase> _7207_m = jule::new_ptr<_1bc2752c8_MatchCase>(_1bc2752c8_MatchCase{._field_Comptime=false, ._field_Token=_71934_tokens[0LL], ._field_End=jule::Ptr<_1bc247014_Token>(nullptr), ._field_TypeMatch=false, ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Cases=jule::Slice<jule::Ptr<_1bc2749ae_Case>>(nullptr), ._field_Default=jule::Ptr<_1bc273815_Else>(nullptr)});;
	(_71934_tokens).mut_slice(1LL);;
	if (((_71934_tokens.len() > 0LL) && ((*(_71934_tokens[0LL]))._field_Id == static_cast<jule::U32>(7LLU)))) {
		(*(_7207_m))._field_TypeMatch=true;
		(_71934_tokens).mut_slice(1LL);;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7307_exprTokens = _1bcda0bb1_getBlockExpr(&(_71934_tokens));;
	if ((_7307_exprTokens.len() > 0LL)) {
		(*(_7207_m))._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, &(_7307_exprTokens));
	} else if ((*(_7207_m))._field_TypeMatch) {
		_1bcd88847_pushErr(_self_, (*_7207_m.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
	};
	jule::I32 _7377_i = _7307_exprTokens.len();;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7387_blockToks = _1bcda3e39_range(&(_7377_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_71934_tokens));;
	if ((_7387_blockToks == nullptr)) {
		_1bcd87c31_stop(_self_);
		_1bcd88847_pushErr(_self_, (*(_7207_m))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)));
		_1bcd88baa_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_7377_i < _71934_tokens.len())) {
		_1bcd88847_pushErr(_self_, _71934_tokens[_7377_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*(_7207_m))._field_End=_71934_tokens[(_7377_i - 1LL)];
	({
		__jule_tuple_sx_1bc2749ae_Case__jule_tuple_x_1bc273815_Else __jule_assign_result = _1bcd90e7b_buildCases(_self_, _7387_blockToks, (*_7207_m.alloc)._field_TypeMatch);
		(*_7207_m.alloc)._field_Cases = __jule_assign_result.__jule_result_arg0;
		(*_7207_m.alloc)._field_Default = __jule_assign_result.__jule_result_arg1;
	});
	return _7207_m;;
}



inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd9160d_buildScopeSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _75232_tokens) {
	jule::Bool _7537_isUnsafe = false;;
	jule::Bool _7547_isDeferred = false;;
	jule::Ptr<_1bc247014_Token> _7557_token = _75232_tokens[0LL];;
	if (((*(_7557_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		_7537_isUnsafe=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1bcd88847_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
		_7557_token=_75232_tokens[0LL];
		if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
			_7547_isDeferred=true;
			(_75232_tokens).mut_slice(1LL);;
			if ((_75232_tokens.len() == 0LL)) {
				_1bcd88847_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				return nullptr;;
			};
		};
	} else if (((*(_7557_token))._field_Id == static_cast<jule::U32>(33LLU))) {
		_7547_isDeferred=true;
		(_75232_tokens).mut_slice(1LL);;
		if ((_75232_tokens.len() == 0LL)) {
			_1bcd88847_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
			return nullptr;;
		};
	};
	jule::I32 _7817_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7827_scopeTokens = _1bcda3e39_range(&(_7817_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_75232_tokens));;
	if ((_7827_scopeTokens == nullptr)) {
		_1bcd88847_pushErr(_self_, _7557_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	} else if ((_7817_i < _75232_tokens.len())) {
		_1bcd88847_pushErr(_self_, _75232_tokens[_7817_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	jule::Ptr<_1bc26ca0c_ScopeTree> _7897_scope = _1bcd895e5_buildScope(_self_, &(_7827_scopeTokens), _75232_tokens[(_7817_i - 1LL)]);;
	(*(_7897_scope))._field_Unsafety=_7537_isUnsafe;
	(*_7897_scope.alloc)._field_Deferred=_7547_isDeferred;
	return _7897_scope;;
}



inline jule::Ptr<_1bc269ee3_LabelSt> _1bcd9194e_buildLabelSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _79533_tokens) {
	jule::Ptr<_1bc269ee3_LabelSt> _7967_lbl = jule::new_ptr<_1bc269ee3_LabelSt>(_1bc269ee3_LabelSt{._field_Token=(*(_79533_tokens))[0LL], ._field_Ident=(*((*(_79533_tokens))[0LL]))._field_Kind});;
	if (((*(_79533_tokens)).len() > 2LL)) {
		((*(_79533_tokens))).mut_slice(2LL);;
		_1bcd88e63_insertAsNext(_self_, _79533_tokens);
	};
	return _7967_lbl;;
}



inline __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool _1bcd91c90_buildIdSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _81030_tokens) {
	__jule_tuple__1bc26c06c_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if (((*(_81030_tokens)).len() == 1LL)) {
		return __jule_func_result;;
	};
	jule::Ptr<_1bc247014_Token> _8157_token = (*(_81030_tokens))[1LL];;
	{
		auto &_match_expr{ (*(_8157_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1c63a8ab7:;
			{
				__jule_func_result.__jule_result_arg0 = jule::Any(_1bcd9194e_buildLabelSt(_self_, _81030_tokens), &__jule_any_type56);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c63a9326:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1bcda2597_assignInfo> _1bcd920d1_buildAssignInfo(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _82436_tokens) {
	jule::Ptr<_1bcda2597_assignInfo> _8257_info = jule::new_ptr<_1bcda2597_assignInfo>(_1bcda2597_assignInfo{._field_l=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr), ._field_r=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr), ._field_setter=jule::Ptr<_1bc247014_Token>(nullptr), ._field_ok=true});;
	jule::I32 _8287_braceN = 0LL;;
	{
		auto expr = _82436_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63aaa31:;
		if (it != expr_end) {
			jule::I32 _8298_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _82915_token = *it;
			{
				{
					auto &_match_expr{ (*(_82915_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c63ab5d1:;
						{
							(_8287_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c63ab977:;
						{
							(_8287_braceN)--;
						}
					}
					_match_end_1c63ab878:;
				};
				{
					
					if ((_8287_braceN > 0LL)) {
						_case_begin_1c63aba54:;
						{
							goto _iter_next_1c63aaa31;
						}
					}
					else if (((!(_1bc24c129_IsAssignOp((*(_82915_token))._field_Id))) && ((*_82915_token.alloc)._field_Id != static_cast<jule::U32>(38LLU)))) {
						_case_begin_1c63acadd:;
						{
							goto _iter_next_1c63aaa31;
						}
					}
					_match_end_1c63aca77:;
				};
				(*(_8257_info))._field_l=(*(_82436_tokens)).slice(0LL, _8298_i);
				if (((*_8257_info.alloc)._field_l.len() == 0LL)) {
					(*_8257_info.alloc)._field_ok=false;
				};
				(*_8257_info.alloc)._field_setter=_82915_token;
				if (((_8298_i + 1LL) >= (*(_82436_tokens)).len())) {
					(*_8257_info.alloc)._field_r=nullptr;
					(*_8257_info.alloc)._field_ok=_1bc24bd60_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id);
					goto _iter_end_1c63aaa31;
				};
				(*_8257_info.alloc)._field_r=(*(_82436_tokens)).slice((_8298_i + 1LL));
				if (_1bc24bd60_IsPostfixOp((*((*_8257_info.alloc)._field_setter))._field_Id)) {
					if (((*_8257_info.alloc)._field_r.len() > 0LL)) {
						_1bcd88847_pushErr(_self_, (*(_8257_info))._field_r[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						(*_8257_info.alloc)._field_r=nullptr;
					};
				};
				goto _iter_end_1c63aaa31;
			}
			_iter_next_1c63aaa31:;
			++it;
			_8298_i++;
			goto _iter_begin_1c63aaa31;
		}
		_iter_end_1c63aaa31:;
	};
	return _8257_info;;
}



inline jule::Ptr<_1bc26ad29_AssignLeft> _1bcd92422_buildAssignL(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _86933_tokens) {
	jule::Ptr<_1bc26ad29_AssignLeft> _8707_l = jule::new_ptr<_1bc26ad29_AssignLeft>(_1bc26ad29_AssignLeft{._field_Token=(*(_86933_tokens))[0LL], ._field_Mutable=false, ._field_Reference=false, ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	if (((*((*(_86933_tokens))[0LL]))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*(_8707_l))._field_Ident=(*((*_8707_l.alloc)._field_Token))._field_Kind;
	};
	(*(_8707_l))._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, _86933_tokens);
	return _8707_l;;
}



inline jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>> _1bcd92763_buildAssignLs(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _88034_parts) {
	jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>> _88111_lefts = nullptr;;
	{
		auto expr = _88034_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63b5420:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _88215_part = *it;
			{
				jule::Ptr<_1bc26ad29_AssignLeft> _8838_l = _1bcd92422_buildAssignL(_self_, &(_88215_part));;
				{ jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>> &__jule_push_dest = _88111_lefts; __jule_push_dest.push(_8838_l); };
			}
			_iter_next_1c63b5420:;
			++it;
			goto _iter_begin_1c63b5420;
		}
		_iter_end_1c63b5420:;
	};
	return _88111_lefts;;
}



inline __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool _1bcd92aa4_buildPlainAssign(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _88937_tokens) {
	__jule_tuple__1bc26c06c_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bcda2597_assignInfo> _8907_info = _1bcd920d1_buildAssignInfo(_self_, _88937_tokens);;
	if ((!((*(_8907_info))._field_ok))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc26b3ac_AssignSt> _8957_assign = jule::new_ptr<_1bc26b3ac_AssignSt>(_1bc26b3ac_AssignSt{._field_Declarative=false, ._field_Setter=(*(_8907_info))._field_setter, ._field_Left=jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	if (((*((*_8907_info.alloc)._field_setter))._field_Id == static_cast<jule::U32>(38LLU))) {
		(*(_8957_assign))._field_Declarative=true;
		(*_8957_assign.alloc)._field_Right=_1bcda6920_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
		jule::Bool _9034_ok = _1bcd92ea0_buildDeclAssign1(_self_, &((*_8907_info.alloc)._field_l), &(_8957_assign));;
		if ((!(_9034_ok))) {
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		if (((*(_8957_assign))._field_Left.len() > 1LL)) {
			__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
			__jule_func_result.__jule_result_arg1 = true;
			return __jule_func_result;;
		};
		jule::Ptr<_1bc26ad29_AssignLeft> _9128_left = (*(_8957_assign))._field_Left[0LL];;
		{
			auto &_match_expr{ (*((*(_9128_left))._field_Expr))._field_Kind };
			
			if (_match_expr.type == &__jule_any_type42) {
				_case_begin_1c63bb26c:;
				{
					jule::Ptr<_1bc270856_VarDecl> _9159_decl = jule::new_ptr<_1bc270856_VarDecl>(_1bc270856_VarDecl{._field_Scope=(*(_self_))._field_s, ._field_Token=(*(_9128_left))._field_Token, ._field_Setter=(*_8957_assign.alloc)._field_Setter, ._field_Ident=(*_9128_left.alloc)._field_Ident, ._field_Binded=false, ._field_Public=false, ._field_Mutable=(*_9128_left.alloc)._field_Mutable, ._field_Constant=false, ._field_Statically=false, ._field_Reference=(*_9128_left.alloc)._field_Reference, ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Expr=(*_8957_assign.alloc)._field_Right});;
					__jule_func_result.__jule_result_arg0 = jule::Any(_9159_decl, &__jule_any_type50);
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				}
			}
			_match_end_1c63bb206:;
		};
		__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _9297_parts;
	jule::Slice<_1a9575ca1_Log> _92914_errs;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(&((*_8907_info.alloc)._field_l), static_cast<jule::U32>(5LLU), true);
		_9297_parts = __jule_assign_result.__jule_result_arg0;
		_92914_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_92914_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_92914_errs);
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(*(_8957_assign))._field_Left=_1bcd92763_buildAssignLs(_self_, &(_9297_parts));
	if (((*_8907_info.alloc)._field_r != nullptr)) {
		(*_8957_assign.alloc)._field_Right=_1bcda6920_buildExpr((*(_self_))._field_p, &((*_8907_info.alloc)._field_r));
	};
	__jule_func_result.__jule_result_arg0 = jule::Any(_8957_assign, &__jule_any_type58);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Bool _1bcd92ea0_buildDeclAssign1(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _94337_lefts, jule::Ptr<_1bc26b3ac_AssignSt>* _94366_assign) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _9457_parts;
	jule::Slice<_1a9575ca1_Log> _94514_errs;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(_94337_lefts, static_cast<jule::U32>(5LLU), true);
		_9457_parts = __jule_assign_result.__jule_result_arg0;
		_94514_errs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_94514_errs.len() > 0LL)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_94514_errs);
		return false;;
	};
	{
		auto expr = &(_9457_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c63c2d67:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _95115_part = *it;
			{
				jule::Bool _9528_isMut = false;;
				jule::Bool _9538_isRef = false;;
				jule::Ptr<_1bc247014_Token> _9554_token = _95115_part[0LL];;
				if (((*(_9554_token))._field_Id == static_cast<jule::U32>(32LLU))) {
					_9528_isMut=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1bcd88847_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if (((*(_95115_part[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
					_9538_isRef=true;
					(_95115_part).mut_slice(1LL);;
					if ((_95115_part.len() == 0LL)) {
						_1bcd88847_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
						return false;;
					};
				};
				if ((((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(_95115_part[0LL]))._field_Id != static_cast<jule::U32>(74LLU)))) {
					_1bcd88847_pushErr(_self_, _9554_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
					return false;;
				};
				jule::Ptr<_1bc26ad29_AssignLeft> _9798_l = _1bcd92422_buildAssignL(_self_, &(_95115_part));;
				if (((*(_9798_l))._field_Expr == nullptr)) {
					return false;;
				};
				(*(_9798_l))._field_Mutable=_9528_isMut;
				(*_9798_l.alloc)._field_Reference=_9538_isRef;
				{ jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>> &__jule_push_dest = (*((*(_94366_assign))))._field_Left; __jule_push_dest.push(_9798_l); };
			}
			_iter_next_1c63c2d67:;
			++it;
			goto _iter_begin_1c63c2d67;
		}
		_iter_end_1c63c2d67:;
	};
	return true;;
}



inline __jule_tuple_x_1bc26b3ac_AssignSt__jule_tuple_bool _1bcd932e1_buildDeclAssign(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _99135_tokens) {
	__jule_tuple_x_1bc26b3ac_AssignSt__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_99135_tokens.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	(_99135_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc247014_Token> _9977_token = _99135_tokens[0LL];;
	if (((*(_9977_token))._field_Id != static_cast<jule::U32>(74LLU))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc26b3ac_AssignSt> _10027_assign = jule::new_ptr<_1bc26b3ac_AssignSt>(_1bc26b3ac_AssignSt{._field_Declarative=true, ._field_Setter=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Left=jule::Slice<jule::Ptr<_1bc26ad29_AssignLeft>>(nullptr), ._field_Right=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	jule::I32 _10067_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _10077_rang = _1bcda3e39_range(&(_10067_i), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_99135_tokens));;
	if ((_10077_rang == nullptr)) {
		_1bcd88847_pushErr(_self_, _9977_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	} else if (((_10067_i + 1LL) < _99135_tokens.len())) {
		(*(_10027_assign))._field_Setter=_99135_tokens[_10067_i];
		if (((*((*_10027_assign.alloc)._field_Setter))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1bcd88847_pushErr(_self_, (*_10027_assign.alloc)._field_Setter, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		};
		(_10067_i)++;
		jule::Slice<jule::Ptr<_1bc247014_Token>> _10178_exprTokens = _99135_tokens.slice(_10067_i);;
		(*_10027_assign.alloc)._field_Right=_1bcda6920_buildExpr((*(_self_))._field_p, &(_10178_exprTokens));
	};
	jule::Bool _10213_ok = _1bcd92ea0_buildDeclAssign1(_self_, &(_10077_rang), &(_10027_assign));;
	__jule_func_result.__jule_result_arg0 = _10027_assign;
	__jule_func_result.__jule_result_arg1 = _10213_ok;
	return __jule_func_result;;
}



inline __jule_tuple__1bc26c06c_StmtData__jule_tuple_bool _1bcd93632_buildAssignSt(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _102534_tokens) {
	__jule_tuple__1bc26c06c_StmtData__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = jule::Any(nullptr);
	__jule_func_result.__jule_result_arg1 = false;
	if ((!(_1bcda294e_checkAssignTokens(_102534_tokens)))) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ (*((*(_102534_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1c5ee238d:;
			{
				({
					__jule_tuple_x_1bc26b3ac_AssignSt__jule_tuple_bool __jule_assign_result = _1bcd932e1_buildDeclAssign(_self_, (*(_102534_tokens)));
					__jule_func_result.__jule_result_arg0 = jule::Any(__jule_assign_result.__jule_result_arg0, &__jule_any_type58);
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c5ee1a30:;
			{
				({
					__jule_tuple__1bc26c06c_StmtData__jule_tuple_bool __jule_assign_result = _1bcd92aa4_buildPlainAssign(_self_, _102534_tokens);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c5ee1e92:;
	};
	return __jule_func_result;;
}



inline jule::Ptr<_1bc262617_UseExpr> _1bcd93973_buildUseExpr(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _103833_tokens) {
	if (((*(_103833_tokens)).len() == 1LL)) {
		_1bcd88847_pushErr(_self_, (*(_103833_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)));
		return nullptr;;
	};
	jule::Ptr<_1bc262617_UseExpr> _10437_ue = jule::new_ptr<_1bc262617_UseExpr>(_1bc262617_UseExpr{._field_Token=(*(_103833_tokens))[0LL], ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	((*(_103833_tokens))).mut_slice(1LL);;
	(*(_10437_ue))._field_Expr=_1bcda6920_buildExpr((*(_self_))._field_p, _103833_tokens);
	return _10437_ue;;
}



inline jule::Any _1bcd93cb4_buildConstSt(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _105133_st) {
	if (((*((*(_105133_st))))._field_tokens.len() == 1LL)) {
		_1bcd88847_pushErr(_self_, (*((*(_105133_st))))._field_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_105133_st))))._field_tokens[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1c5ee6eec:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1bc2714a0_Iter> _10598_iter = _1bcd8c94a_buildIterSt(_self_, _105133_st);;
				if ((_10598_iter != nullptr)) {
					(*_10598_iter.alloc)._field_Comptime=true;
				};
				return jule::Any(_10598_iter, &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1c5ee6cdd:;
			{
				((*((*(_105133_st))))._field_tokens).mut_slice(1LL);;
				jule::Ptr<_1bc2752c8_MatchCase> _10668_mt = _1bcd912bc_buildMatchCase(_self_, (*((*(_105133_st))))._field_tokens);;
				if ((_10668_mt != nullptr)) {
					(*_10668_mt.alloc)._field_Comptime=true;
				};
				return jule::Any(_10668_mt, &__jule_any_type59);;
			}
		}
		else {
			_case_begin_1c5ee611c:;
			{
				return jule::Any(_1bcd89936_buildVarSt(_self_, &((*((*(_105133_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		_match_end_1c5ee6837:;
	};
}



inline jule::Any _1bcd94105_buildSt(_1bcd8757c_scopeParser* _self_, jule::Ptr<_1bcd86bdb_stmt>* _107628_st) {
	jule::Ptr<_1bc247014_Token> _10777_token = (*((*(_107628_st))))._field_tokens[0LL];;
	if (((*(_10777_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		jule::Any _10798_s;
		jule::Bool _107911_ok;
		({
			__jule_tuple__1bc26c06c_StmtData__jule_tuple_bool __jule_assign_result = _1bcd91c90_buildIdSt(_self_, &((*((*(_107628_st))))._field_tokens));
			_10798_s = __jule_assign_result.__jule_result_arg0;
			_107911_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_107911_ok) {
			return _10798_s;;
		};
	};
	jule::Any _10857_s;
	jule::Bool _108510_ok;
	({
		__jule_tuple__1bc26c06c_StmtData__jule_tuple_bool __jule_assign_result = _1bcd93632_buildAssignSt(_self_, &((*((*(_107628_st))))._field_tokens));
		_10857_s = __jule_assign_result.__jule_result_arg0;
		_108510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if (_108510_ok) {
		return _10857_s;;
	};
	{
		auto &_match_expr{ (*(_10777_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1c5eece37:;
			{
				return jule::Any(_1bcd93973_buildUseExpr(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type63);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1c5eecd38:;
			{
				return _1bcd93cb4_buildConstSt(_self_, _107628_st);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(32LLU)) {
			_case_begin_1c5eed18a:;
			{
				return jule::Any(_1bcd89936_buildVarSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(2LLU)) {
			_case_begin_1c5eed201:;
			{
				return jule::Any(_1bcd89c77_buildRetSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type62);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(9LLU)) {
			_case_begin_1c5eed267:;
			{
				return jule::Any(_1bcd8c94a_buildIterSt(_self_, _107628_st), &__jule_any_type54);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(10LLU)) {
			_case_begin_1c5eed2cd:;
			{
				return jule::Any(_1bcd8cc8b_buildBreakSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type61);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(11LLU)) {
			_case_begin_1c5eed344:;
			{
				return jule::Any(_1bcd8d0cc_buildContSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type55);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(13LLU)) {
			_case_begin_1c5eed3bb:;
			{
				return jule::Any(_1bcd8daa0_buildIfElseChain(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type53);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(22LLU)) {
			_case_begin_1c5eed443:;
			{
				return jule::Any(_1bcd8dde1_buildCoCallSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type52);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(18LLU)) {
			_case_begin_1c5eed4ba:;
			{
				return jule::Any(_1bcd8e232_buildGotoSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type57);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(28LLU)) {
			_case_begin_1c5eed542:;
			{
				return jule::Any(_1bcd8e573_buildFallSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type60);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c5eed5b9:;
			{
				return jule::Any(_1bcd8e8b4_buildTypeAliasSt(_self_, &((*((*(_107628_st))))._field_tokens)), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(23LLU)) {
			_case_begin_1c5eed641:;
			{
				return jule::Any(_1bcd912bc_buildMatchCase(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type59);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c5eed6b8:;
			{
				if (((*((*(_107628_st))))._field_tokens.len() < 1LL)) {
					goto _match_end_1c5eecb6d;
				};
				if ((((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(33LLU)) || ((*((*((*(_107628_st))))._field_tokens[1LL]))._field_Id == static_cast<jule::U32>(72LLU)))) {
					return jule::Any(_1bcd9160d_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(33LLU)) {
			_case_begin_1c5eed740:;
			{
				return jule::Any(_1bcd9160d_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1c5eed7b7:;
			{
				return jule::Any(_1bcd9160d_buildScopeSt(_self_, (*((*(_107628_st))))._field_tokens), &__jule_any_type49);;
			}
		}
		_match_end_1c5eecb6d:;
	};
	jule::Ptr<_1bc261c43_Expr> _11327_expr = _1bcda6920_buildExpr((*(_self_))._field_p, &((*((*(_107628_st))))._field_tokens));;
	if ((_11327_expr != nullptr)) {
		return jule::Any(_11327_expr, &__jule_any_type52);;
	};
	_1bcd88847_pushErr(_self_, _10777_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline void _1bcd94468_build(_1bcd8757c_scopeParser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _114026_tokens, jule::Ptr<_1bc26ca0c_ScopeTree>* _114056_s) {
	if (((*(_114056_s)) == nullptr)) {
		return;;
	};
	(*(_self_))._field_stmts=_1bcd87093_splitStmts(_114026_tokens);
	(*(_self_))._field_pos=-1LL;
	(*(_self_))._field_s=(*(_114056_s));
	while (((!(_1bcd884d4_isLastSt(_self_))) && (!(_1bcd8824d_finished(_self_))))) {
		{
			jule::Ptr<_1bcd86bdb_stmt> _11488_st = _1bcd891e9_next(_self_);;
			jule::Any _11498_data = _1bcd94105_buildSt(_self_, &(_11488_st));;
			if ((_11498_data != nullptr)) {
				(*((*(_self_))._field_s))._field_Stmts=jule::append((*(*(_self_))._field_s.alloc)._field_Stmts,({ auto __jule_collection = jule::Slice<_1bc26c39c_Stmt>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bc26c39c_Stmt{._field_Token=(*(_11488_st))._field_tokens[0LL], ._field_End=(*_11488_st.alloc)._field_tokens[((*_11488_st.alloc)._field_tokens.len() - 1LL)], ._field_Data=_11498_data}; __jule_collection; }));
			};
			if (_1bcd87eb7_stopped(_self_)) {
				goto _iter_end_1c600ab48;
			};
		}
	_iter_next_1c600ab48:;
	}
	_iter_end_1c600ab48:;;
}








inline jule::Bool _1bcd94ea2_exprBuilder_eq(_1bcd94ea2_exprBuilder *_self_, _1bcd94ea2_exprBuilder _other_) {
	return 
		(_self_->_field_p == _other_._field_p);
}

inline void _1bcd956ab_pushErr(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token> _1423_token, jule::Str _1445_fmt, jule::Slice<jule::Any> _1465_args) {
	_1bcda626b_pushErr((*(_self_))._field_p.ptr(), _1423_token, _1445_fmt, _1465_args);
}



inline void _1bcd95a1e_pushSuggestion(_1bcd94ea2_exprBuilder* _self_, jule::Str _1930_fmt, jule::Slice<jule::Any> _1950_args) {
	_1bcda65ce_pushSuggestion((*(_self_))._field_p.ptr(), _1930_fmt, _1950_args);
}



inline jule::Ptr<_1bc262837_TupleExpr> _1bcd95d60_buildTuple(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _2331_parts) {
	jule::Ptr<_1bc262837_TupleExpr> _247_tuple = jule::new_ptr<_1bc262837_TupleExpr>(_1bc262837_TupleExpr{._field_Expr=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(0LL, (*(_2331_parts)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc261c43_Expr>(nullptr); __jule_collection; })});;
	{
		auto expr = _2331_parts;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6031058:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _2715_part = *it;
			{
				(*(_247_tuple))._field_Expr=jule::append((*_247_tuple.alloc)._field_Expr,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bcda0254_buildFromTokens(_self_, _2715_part); __jule_collection; }));
			}
			_iter_next_1c6031058:;
			++it;
			goto _iter_begin_1c6031058;
		}
		_iter_end_1c6031058:;
	};
	return _247_tuple;;
}



inline jule::Ptr<_1bc262bcd_LitExpr> _1bcd961a1_buildLit(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token> _3324_token) {
	return jule::new_ptr<_1bc262bcd_LitExpr>(_1bc262bcd_LitExpr{._field_Token=_3324_token, ._field_Value=(*(_3324_token))._field_Kind});;
}



inline jule::Any _1bcd96833_buildSingle(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token> _4431_token) {
	{
		auto &_match_expr{ (*(_4431_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(4LLU)) {
			_case_begin_1c60332d0:;
			{
				return jule::Any(_1bcd961a1_buildLit(_self_, _4431_token), &__jule_any_type105);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(39LLU)) {
			_case_begin_1c6033357:;
			{
				return jule::Any(jule::new_ptr<_1bc2641c9_VariadicExpr>(_1bc2641c9_VariadicExpr{._field_Token=_4431_token, ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)}), &__jule_any_type79);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(24LLU) || _match_expr == static_cast<jule::U32>(36LLU)) {
			_case_begin_1c60333bd:;
			{
				return jule::Any(_1bcda160c_buildIdentExpr(&(_4431_token)), &__jule_any_type42);;
			}
		}
		_match_end_1c6033214:;
	};
	_1bcd956ab_pushErr(_self_, _4431_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1bc26355d_IdentExpr> _1bcd96b74_buildBindIdent(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _6135_tokens) {
	if (((*((*(_6135_tokens))[0LL]))._field_Id != static_cast<jule::U32>(27LLU))) {
		return nullptr;;
	} else if (((*((*(_6135_tokens))[1LL]))._field_Id != static_cast<jule::U32>(17LLU))) {
		_1bcd956ab_pushErr(_self_, (*(_6135_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("use dot (.) to access binded defines", 36)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc247014_Token> _697_token = (*(_6135_tokens))[2LL];;
	if (((*(_697_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcd956ab_pushErr(_self_, (*(_6135_tokens))[2LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc26355d_IdentExpr> _757_expr = _1bcda160c_buildIdentExpr(&(_697_token));;
	(*(_757_expr))._field_Binded=true;
	return _757_expr;;
}



inline jule::Ptr<_1bc263d00_UnaryExpr> _1bcd96eb5_buildUnary(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _8030_tokens) {
	jule::Ptr<_1bc247014_Token> _817_op = _8030_tokens[0LL];;
	if ((_8030_tokens.len() == 1LL)) {
		_1bcd956ab_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("missing expression for unary operator", 37)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((!(_1bc247751_IsUnaryOp((*(_817_op))._field_Id)))) {
		_1bcd956ab_pushErr(_self_, _817_op, static_cast<jule::Str>(jule::Str::lit("invalid unary operator: @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_817_op.alloc)._field_Kind, &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(_8030_tokens).mut_slice(1LL);;
	return jule::new_ptr<_1bc263d00_UnaryExpr>(_1bc263d00_UnaryExpr{._field_Op=_817_op, ._field_Expr=_1bcda0254_buildFromTokens(_self_, _8030_tokens)});;
}



inline jule::Ptr<_1bc264d56_SubIdentExpr> _1bcd97306_buildObjSubIdent(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _10136_tokens) {
	jule::I32 _1027_i = (_10136_tokens.len() - 1LL);;
	jule::Ptr<_1bc247014_Token> _1037_identToken = _10136_tokens[_1027_i];;
	(_1027_i)--;
	(_10136_tokens).mut_slice(0LL, _1027_i);;
	if ((_10136_tokens.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, _1037_identToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc264d56_SubIdentExpr>(_1bc264d56_SubIdentExpr{._field_Expr=_1bcda0254_buildFromTokens(_self_, _10136_tokens), ._field_Ident=_1037_identToken});;
}



inline jule::Ptr<_1bc26497c_NamespaceExpr> _1bcd97647_buildNamespace(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _11635_tokens) {
	jule::Ptr<_1bc26497c_NamespaceExpr> _1177_ns = jule::new_ptr<_1bc26497c_NamespaceExpr>(_1bc26497c_NamespaceExpr{._field_Namespace=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if (((*(_11635_tokens)).len() > 3LL)) {
		_1bcd956ab_pushErr(_self_, (*(_11635_tokens))[3LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_1177_ns.alloc)._field_Namespace=(*(_11635_tokens))[0LL];
	if ((((*((*_1177_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_1177_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1bcd956ab_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	if (((*(_11635_tokens)).len() < 2LL)) {
		_1bcd956ab_pushErr(_self_, (*_1177_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_11635_tokens))[1LL]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1bcd956ab_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_11635_tokens)).len() < 3LL)) {
		_1bcd956ab_pushErr(_self_, (*(_11635_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_1177_ns.alloc)._field_Ident=(*(_11635_tokens))[2LL];
	if (((*((*_1177_ns.alloc)._field_Ident))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcd956ab_pushErr(_self_, (*_1177_ns.alloc)._field_Ident, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1177_ns;;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcd97988_buildType(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _15030_tokens) {
	jule::I32 _1517_i = 0LL;;
	jule::Ptr<_1bc25c90e_TypeDecl> _1527_t;
	jule::Bool _15210_ok;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, _15030_tokens, (&(_1517_i)), false);
		_1527_t = __jule_assign_result.__jule_result_arg0;
		_15210_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_15210_ok))) {
		_1bcd956ab_pushErr(_self_, (*(_15030_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_1517_i < (*(_15030_tokens)).len())) {
		_1bcd956ab_pushErr(_self_, (*(_15030_tokens))[_1517_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	return _1527_t;;
}



inline jule::Any _1bcd97cc9_buildSubIdent(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _16434_tokens) {
	jule::I32 _1653_i = ((*(_16434_tokens)).len() - 2LL);;
	jule::Ptr<_1bc247014_Token> _1663_token = (*(_16434_tokens))[_1653_i];;
	{
		auto &_match_expr{ (*(_1663_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(17LLU)) {
			_case_begin_1c604a9ac:;
			{
				return jule::Any(_1bcd97306_buildObjSubIdent(_self_, (*(_16434_tokens))), &__jule_any_type89);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(19LLU)) {
			_case_begin_1c604b0d9:;
			{
				return jule::Any(_1bcd97647_buildNamespace(_self_, _16434_tokens), &__jule_any_type93);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1c604b150:;
			{
				return jule::Any(_1bcd97988_buildType(_self_, _16434_tokens), &__jule_any_type92);;
			}
		}
		_match_end_1c604aeb8:;
	};
	if (_1bcda1ca0_isAnonFnHead(_16434_tokens)) {
		return jule::Any(_1bcd97988_buildType(_self_, _16434_tokens), &__jule_any_type92);;
	};
	_1bcd956ab_pushErr(_self_, _1663_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Ptr<_1bc2641c9_VariadicExpr> _1bcd9811a_buildVariadic(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _18633_tokens) {
	jule::Ptr<_1bc247014_Token> _1877_token = _18633_tokens[(_18633_tokens.len() - 1LL)];;
	(_18633_tokens).mut_slice(0LL, (_18633_tokens.len() - 1LL));;
	return jule::new_ptr<_1bc2641c9_VariadicExpr>(_1bc2641c9_VariadicExpr{._field_Token=_1877_token, ._field_Expr=_1bcda0254_buildFromTokens(_self_, _18633_tokens)});;
}



inline jule::Ptr<_1bc26200c_RangeExpr> _1bcd9845b_buildBetweenParentheses(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _19543_tokens) {
	if ((_19543_tokens.len() == 2LL)) {
		_1bcd956ab_pushErr(_self_, _19543_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("empty parentheses are not valid expression, must include an expression in range", 79)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_19543_tokens).mut_slice(1LL, (_19543_tokens.len() - 1LL));;
	return jule::new_ptr<_1bc26200c_RangeExpr>(_1bc26200c_RangeExpr{._field_Expr=_1bcda0254_buildFromTokens(_self_, _19543_tokens)});;
}



inline jule::Ptr<_1bc2645a3_CastExpr> _1bcd9879c_tryBuildCast(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _20733_tokens) {
	jule::I32 _2087_rangeN = 0LL;;
	{
		auto expr = _20733_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6051a90:;
		if (it != expr_end) {
			jule::I32 _2097_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _20910_token = *it;
			{
				{
					auto &_match_expr{ (*(_20910_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c605262e:;
						{
							(_2087_rangeN)++;
							goto _iter_next_1c6051a90;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c6052a19:;
						{
							(_2087_rangeN)--;
						}
					}
					_match_end_1c605291a:;
				};
				if ((_2087_rangeN > 0LL)) {
					goto _iter_next_1c6051a90;
				} else if (((_2097_i + 1LL) == (*(_20733_tokens)).len())) {
					return nullptr;;
				};
				jule::Slice<jule::Ptr<_1bc247014_Token>> _2288_typeTokens = (*(_20733_tokens)).slice(0LL, (_2097_i + 1LL));;
				jule::Slice<jule::Ptr<_1bc247014_Token>> _2298_exprTokens = (*(_20733_tokens)).slice((_2097_i + 1LL));;
				if ((_2298_exprTokens.len() == 0LL)) {
					return nullptr;;
				};
				jule::Ptr<_1bc247014_Token> _2364_tok = _2298_exprTokens[0LL];;
				if (((*(_2364_tok))._field_Id != static_cast<jule::U32>(74LLU))) {
					return nullptr;;
				};
				jule::Ptr<_1bc2645a3_CastExpr> _2418_cast = jule::new_ptr<_1bc2645a3_CastExpr>(_1bc2645a3_CastExpr{._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
				if ((_2298_exprTokens.len() == 2LL)) {
					_1bcd956ab_pushErr(_self_, _2298_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
					_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("give an expression for casting", 30)), jule::Slice<jule::Any>());
				};
				if ((_2288_typeTokens.len() == 2LL)) {
					_1bcd956ab_pushErr(_self_, _2288_typeTokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("type declaration expected for casting", 37)), jule::Slice<jule::Any>());
				} else {
					(_2288_typeTokens).mut_slice(1LL, (_2288_typeTokens.len() - 1LL));;
					jule::I32 _2559_typeIndex = 0LL;;
					jule::Ptr<_1bc25c90e_TypeDecl> _2569_t;
					jule::Bool _25612_ok;
					({
						__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, &(_2288_typeTokens), (&(_2559_typeIndex)), true);
						_2569_t = __jule_assign_result.__jule_result_arg0;
						_25612_ok = __jule_assign_result.__jule_result_arg1;
					});
					if ((_25612_ok && (_2559_typeIndex < _2288_typeTokens.len()))) {
						_1bcd956ab_pushErr(_self_, _2288_typeTokens[_2559_typeIndex], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					} else if ((!(_25612_ok))) {
						return _2418_cast;;
					};
					(*(_2418_cast))._field_Kind=_2569_t;
					if ((_2298_exprTokens.len() > 2LL)) {
						jule::I32 _26610_j = 0LL;;
						_1bcda3e39_range(&(_26610_j), static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), &(_2298_exprTokens));
						if ((_26610_j < _2298_exprTokens.len())) {
							return nullptr;;
						};
						(_2298_exprTokens).mut_slice(0LL, _26610_j);;
						(*_2418_cast.alloc)._field_Expr=_1bcda0254_buildFromTokens(_self_, _2298_exprTokens);
					};
				};
				return _2418_cast;;
			}
			_iter_next_1c6051a90:;
			++it;
			_2097_i++;
			goto _iter_begin_1c6051a90;
		}
		_iter_end_1c6051a90:;
	};
	return nullptr;;
}



inline void _1bcd98bba_pushArg(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc261c43_Expr>>* _28128_args, jule::Slice<jule::Ptr<_1bc247014_Token>> _28152_tokens, jule::Ptr<_1bc247014_Token> _28177_errToken) {
	if ((_28152_tokens.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, _28177_errToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Ptr<_1bc261c43_Expr>> &__jule_push_dest = (*(_28128_args)); __jule_push_dest.push(_1bcda0254_buildFromTokens(_self_, _28152_tokens)); };
}



inline jule::Slice<jule::Ptr<_1bc261c43_Expr>> _1bcd9900b_buildArgs(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _29029_tokens) {
	if ((_29029_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _29611_args = nullptr;;
	jule::I32 _2977_last = 0LL;;
	jule::I32 _2987_rangeN = 0LL;;
	(_29029_tokens).mut_slice(1LL, (_29029_tokens.len() - 1LL));;
	{
		auto expr = &(_29029_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c606063c:;
		if (it != expr_end) {
			jule::I32 _3007_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _30010_token = *it;
			{
				{
					auto &_match_expr{ (*(_30010_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c60613a7:;
						{
							(_2987_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c6061792:;
						{
							(_2987_rangeN)--;
						}
					}
					_match_end_1c6061693:;
				};
				if (((_2987_rangeN > 0LL) || ((*(_30010_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1c606063c;
				};
				_1bcd98bba_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last, _3007_i), _30010_token);
				_2977_last=(_3007_i + 1LL);
			}
			_iter_next_1c606063c:;
			++it;
			_3007_i++;
			goto _iter_begin_1c606063c;
		}
		_iter_end_1c606063c:;
	};
	if ((_2977_last < _29029_tokens.len())) {
		if ((_2977_last == 0LL)) {
			if ((_29029_tokens.len() > 0LL)) {
				_1bcd98bba_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[_2977_last]);
			};
		} else {
			_1bcd98bba_pushArg(_self_, &(_29611_args), _29029_tokens.slice(_2977_last), _29029_tokens[(_2977_last - 1LL)]);
		};
	};
	return _29611_args;;
}



inline jule::Ptr<_1bc26596c_FnCallExpr> _1bcd99803_buildFnCall(_1bcd94ea2_exprBuilder* _self_, jule::Ptr<_1bc247014_Token>* _35632_token, jule::Slice<jule::Ptr<_1bc247014_Token>>* _35659_expr, jule::Slice<jule::Ptr<_1bc247014_Token>>* _35687_args) {
	return jule::new_ptr<_1bc26596c_FnCallExpr>(_1bc26596c_FnCallExpr{._field_Token=(*(_35632_token)), ._field_Expr=_1bcda0254_buildFromTokens(_self_, (*(_35659_expr))), ._field_Args=_1bcd9900b_buildArgs(_self_, (*(_35687_args))), ._field_Exception=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_IsCo=false});;
}



inline jule::Any _1bcd99b44_buildParenthesesRange(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _36442_tokens) {
	jule::Ptr<_1bc247014_Token> _3657_token = (*(_36442_tokens))[0LL];;
	if (((*(_3657_token))._field_Id == static_cast<jule::U32>(74LLU))) {
		jule::Ptr<_1bc2645a3_CastExpr> _3678_expr = _1bcd9879c_tryBuildCast(_self_, _36442_tokens);;
		if ((_3678_expr != nullptr)) {
			return jule::Any(_3678_expr, &__jule_any_type109);;
		};
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3727_exprTokens;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _37223_argsTokens;
	({
		__jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token __jule_assign_result = _1bcda4203_rangeLast(_36442_tokens);
		_3727_exprTokens = __jule_assign_result.__jule_result_arg0;
		_37223_argsTokens = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3727_exprTokens.len() == 0LL)) {
		return jule::Any(_1bcd9845b_buildBetweenParentheses(_self_, _37223_argsTokens), &__jule_any_type104);;
	};
	if (_1bcda1ca0_isAnonFnHead(&(_3727_exprTokens))) {
		return jule::Any(_1bcd97988_buildType(_self_, _36442_tokens), &__jule_any_type92);;
	};
	return jule::Any(_1bcd99803_buildFnCall(_self_, &(_3657_token), &(_3727_exprTokens), &(_37223_argsTokens)), &__jule_any_type85);;
}



inline jule::Ptr<_1bc2630a7_UnsafeExpr> _1bcd99e85_buildUnsafeExpr(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _38635_tokens) {
	jule::Ptr<_1bc247014_Token> _3877_token = _38635_tokens[0LL];;
	(_38635_tokens).mut_slice(1LL);;
	jule::I32 _3897_i = 0LL;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3907_rangeTokens = _1bcda3e39_range(&(_3897_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_38635_tokens));;
	if ((_3907_rangeTokens.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, _38635_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc2630a7_UnsafeExpr>(_1bc2630a7_UnsafeExpr{._field_Token=_3877_token, ._field_Expr=_1bcda0254_buildFromTokens(_self_, _3907_rangeTokens)});;
}



inline jule::Ptr<_1bc26e69b_FnDecl> _1bcd9a2c6_buildAnonFn(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _40132_tokens) {
	jule::Ptr<_1bc26e69b_FnDecl> _4027_f = _1bcdac409_buildFn((*(_self_))._field_p, _40132_tokens, false, false);;
	if ((!(_1bc26ea42_IsAnon(_4027_f.ptr())))) {
		_1bcd956ab_pushErr(_self_, (*_4027_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("anonymous function expected, remove identifier of function", 58)), jule::Slice<jule::Any>());
	};
	return _4027_f;;
}



inline jule::Any _1bcd9a617_buildUnsafe(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _41032_tokens) {
	{
		auto &_match_expr{ (*((*(_41032_tokens))[1LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c3a6d834:;
			{
				return jule::Any(_1bcd9a2c6_buildAnonFn(_self_, _41032_tokens), &__jule_any_type68);;
			}
		}
		else {
			_case_begin_1c3a6cbb8:;
			{
				return jule::Any(_1bcd99e85_buildUnsafeExpr(_self_, (*(_41032_tokens))), &__jule_any_type106);;
			}
		}
		_match_end_1c3a6d119:;
	};
}



inline void _1bcd9aa35_pushRangeLitPart(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _42036_part, jule::Ptr<_1bc247014_Token> _4213_errorToken, jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>* _42135_parts) {
	if ((_42036_part.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, _4213_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("an expression expected", 22)), jule::Slice<jule::Any>());
		return;;
	};
	{ jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> &__jule_push_dest = (*(_42135_parts)); __jule_push_dest.push(_42036_part); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcd9ad76_getBraceRangeLitExprParts(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _43145_tokens) {
	if ((_43145_tokens.len() < 2LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _43711_parts = nullptr;;
	jule::I32 _4397_last = 0LL;;
	jule::I32 _4407_rangeN = 0LL;;
	(_43145_tokens).mut_slice(1LL, (_43145_tokens.len() - 1LL));;
	{
		auto expr = &(_43145_tokens);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3a720da:;
		if (it != expr_end) {
			jule::I32 _4427_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _44210_token = *it;
			{
				{
					auto &_match_expr{ (*(_44210_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c3a72d55:;
						{
							(_4407_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c3a73240:;
						{
							(_4407_rangeN)--;
						}
					}
					_match_end_1c3a73141:;
				};
				if (((_4407_rangeN > 0LL) || ((*(_44210_token))._field_Id != static_cast<jule::U32>(5LLU)))) {
					goto _iter_next_1c3a720da;
				};
				_1bcd9aa35_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last, _4427_i), _44210_token, &(_43711_parts));
				_4397_last=(_4427_i + 1LL);
			}
			_iter_next_1c3a720da:;
			++it;
			_4427_i++;
			goto _iter_begin_1c3a720da;
		}
		_iter_end_1c3a720da:;
	};
	if ((_4397_last < _43145_tokens.len())) {
		if ((_4397_last == 0LL)) {
			if ((_43145_tokens.len() > 0LL)) {
				_1bcd9aa35_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[_4397_last], &(_43711_parts));
			};
		} else {
			_1bcd9aa35_pushRangeLitPart(_self_, _43145_tokens.slice(_4397_last), _43145_tokens[(_4397_last - 1LL)], &(_43711_parts));
		};
	};
	return _43711_parts;;
}



inline jule::Ptr<_1bc266462_FieldExprPair> _1bcd9b1b7_buildFieldExprPair(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _47338_tokens) {
	if (((_47338_tokens.len() - 2LL) == 0LL)) {
		_1bcd956ab_pushErr(_self_, _47338_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc266462_FieldExprPair> _4787_pair = jule::new_ptr<_1bc266462_FieldExprPair>(_1bc266462_FieldExprPair{._field_Field=_47338_tokens[0LL], ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	(_47338_tokens).mut_slice(2LL);;
	(*(_4787_pair))._field_Expr=_1bcda0254_buildFromTokens(_self_, _47338_tokens);
	return _4787_pair;;
}



inline jule::Ptr<_1bc261c43_Expr> _1bcd9b508_buildStructLitExpr(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _48639_tokens) {
	jule::Ptr<_1bc247014_Token> _4877_token = (*(_48639_tokens))[0LL];;
	if ((((*(_4877_token))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_48639_tokens)).len() > 1LL))) {
		_4877_token=(*(_48639_tokens))[1LL];
		if (((*(_4877_token))._field_Id == static_cast<jule::U32>(8LLU))) {
			return jule::new_ptr<_1bc261c43_Expr>(_1bc261c43_Expr{._field_Token=_4877_token, ._field_End=(*(_48639_tokens))[((*(_48639_tokens)).len() - 1LL)], ._field_Kind=jule::Any(_1bcd9b1b7_buildFieldExprPair(_self_, (*(_48639_tokens))), &__jule_any_type81)});;
		};
	};
	return _1bcda0254_buildFromTokens(_self_, (*(_48639_tokens)));;
}



inline jule::Slice<jule::Ptr<_1bc261c43_Expr>> _1bcd9b849_buildStructLitExprs(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _50140_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _5027_parts = _1bcd9ad76_getBraceRangeLitExprParts(_self_, (*(_50140_tokens)));;
	if ((_5027_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc261c43_Expr>> _5077_pairs = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(0LL, _5027_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc261c43_Expr>(nullptr); __jule_collection; });;
	{
		auto expr = &(_5027_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3a7ba0c:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _50815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc261c43_Expr>> &__jule_push_dest = _5077_pairs; __jule_push_dest.push(_1bcd9b508_buildStructLitExpr(_self_, &(_50815_part))); };
			}
			_iter_next_1c3a7ba0c:;
			++it;
			goto _iter_begin_1c3a7ba0c;
		}
		_iter_end_1c3a7ba0c:;
	};
	return _5077_pairs;;
}



inline jule::Ptr<_1bc266c8c_StructLit> _1bcd9bb8a_buildTypedStructLiteral(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _51443_tokens) {
	jule::I32 _5157_i = 0LL;;
	jule::Ptr<_1bc25c90e_TypeDecl> _5167_t;
	jule::Bool _51610_ok;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, &(_51443_tokens), (&(_5157_i)), true);
		_5167_t = __jule_assign_result.__jule_result_arg0;
		_51610_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_51610_ok))) {
		return nullptr;;
	} else if ((_5157_i >= _51443_tokens.len())) {
		_1bcd956ab_pushErr(_self_, _51443_tokens[_5157_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_51443_tokens).mut_slice(_5157_i);;
	jule::Ptr<_1bc247014_Token> _5253_token = _51443_tokens[0LL];;
	if (((*(_5253_token))._field_Id != static_cast<jule::U32>(72LLU))) {
		_1bcd956ab_pushErr(_self_, _5253_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc266c8c_StructLit>(_1bc266c8c_StructLit{._field_End=_51443_tokens[(_51443_tokens.len() - 1LL)], ._field_Kind=_5167_t, ._field_Exprs=_1bcd9b849_buildStructLitExprs(_self_, &(_51443_tokens))});;
}



inline jule::Ptr<_1bc261c43_Expr> _1bcd9becb_buildBraceLitPart(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _53838_tokens) {
	jule::Slice<jule::Ptr<_1bc247014_Token>> _5397_l;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _53914_r;
	({
		__jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token __jule_assign_result = _1bcda1079_splitDelim(_53838_tokens, static_cast<jule::U32>(8LLU));
		_5397_l = __jule_assign_result.__jule_result_arg0;
		_53914_r = __jule_assign_result.__jule_result_arg1;
	});
	if ((_5397_l != nullptr)) {
		return jule::new_ptr<_1bc261c43_Expr>(_1bc261c43_Expr{._field_Token=(*(_53838_tokens))[0LL], ._field_End=(*(_53838_tokens))[((*(_53838_tokens)).len() - 1LL)], ._field_Kind=jule::Any(jule::new_ptr<_1bc267a6d_KeyValPair>(_1bc267a6d_KeyValPair{._field_Key=_1bcda0254_buildFromTokens(_self_, _5397_l), ._field_Val=_1bcda0254_buildFromTokens(_self_, _53914_r), ._field_Colon=(*(_53838_tokens))[_5397_l.len()]}), &__jule_any_type82)});;
	};
	return _1bcda0254_buildFromTokens(_self_, (*(_53838_tokens)));;
}



inline jule::Ptr<_1bc267243_BraceLit> _1bcd9c31c_buildBraceLit(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _55534_tokens) {
	jule::Ptr<_1bc267243_BraceLit> _5567_lit = jule::new_ptr<_1bc267243_BraceLit>(_1bc267243_BraceLit{._field_Token=(*(_55534_tokens))[0LL], ._field_End=(*(_55534_tokens))[((*(_55534_tokens)).len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1bc261c43_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _5617_parts = _1bcd9ad76_getBraceRangeLitExprParts(_self_, (*(_55534_tokens)));;
	if ((_5617_parts == nullptr)) {
		return _5567_lit;;
	};
	(*(_5567_lit))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(0LL, _5617_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc261c43_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_5617_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3a86770:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _56715_part = *it;
			{
				(*_5567_lit.alloc)._field_Exprs=jule::append((*_5567_lit.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bcd9becb_buildBraceLitPart(_self_, &(_56715_part)); __jule_collection; }));
			}
			_iter_next_1c3a86770:;
			++it;
			goto _iter_begin_1c3a86770;
		}
		_iter_end_1c3a86770:;
	};
	return _5567_lit;;
}



inline jule::Any _1bcd9c65d_buildBraceRange(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _57436_tokens) {
	jule::Slice<jule::Ptr<_1bc247014_Token>> _5757_exprTokens;
	jule::I32 _57519_rangeN;
	({
		__jule_tuple_sx_1bc247014_Token__jule_tuple_int __jule_assign_result = _1bcda18c6_getRangeExprTokens(_57436_tokens);
		_5757_exprTokens = __jule_assign_result.__jule_result_arg0;
		_57519_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	{
		
		if ((_5757_exprTokens.len() == 0LL)) {
			_case_begin_1c3a86bd2:;
			{
				return jule::Any(_1bcd9c31c_buildBraceLit(_self_, _57436_tokens), &__jule_any_type111);;
			}
		}
		else if ((_57519_rangeN > 0LL)) {
			_case_begin_1c3a88255:;
			{
				_1bcd956ab_pushErr(_self_, (*(_57436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c3a8819a:;
	};
	jule::Ptr<_1bc247014_Token> _5863_elseToken = _5757_exprTokens[(_5757_exprTokens.len() - 1LL)];;
	if (((*(_5757_exprTokens[(_5757_exprTokens.len() - 1LL)]))._field_Id == static_cast<jule::U32>(14LLU))) {
		(_5757_exprTokens).mut_slice(0LL, (_5757_exprTokens.len() - 1LL));;
		jule::Any _5898_d = _1bcd9eac2_build(_self_, &(_5757_exprTokens));;
		if ((_5898_d == nullptr)) {
			return nullptr;;
		};
		{
			auto &_match_expr{ _5898_d };
			
			if (_match_expr.type == &__jule_any_type85) {
				_case_begin_1c3a8bb93:;
				{
					((*(_57436_tokens))).mut_slice((_5757_exprTokens.len() + 1LL));;
					jule::I32 _5969_i = 0LL;;
					jule::Slice<jule::Ptr<_1bc247014_Token>> _5979_rangeTokens = _1bcda3e39_range(&(_5969_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _57436_tokens);;
					jule::Ptr<_1bc26596c_FnCallExpr> _5989_model = _5898_d.unsafe_cast_ptr<_1bc26596c_FnCallExpr>();;
					if (_1bc2660aa_Ignored(_5989_model.ptr())) {
						_1bcd956ab_pushErr(_self_, _5863_elseToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
						_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("just ignore exceptional or handle it but you cannot do both at same time", 72)), jule::Slice<jule::Any>());
					};
					(*(_5989_model))._field_Exception=_1bcda7415_buildScope((*(_self_))._field_p, &(_5979_rangeTokens), (*(_57436_tokens))[(_5969_i - 1LL)]);
					return _5898_d;;
				}
			}
			else {
				_case_begin_1c3a8ac08:;
				{
					_1bcd956ab_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			_match_end_1c3a8b148:;
		};
	};
	{
		auto &_match_expr{ (*(_5757_exprTokens[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c3a912d5:;
			{
				return _1bcd9a617_buildUnsafe(_self_, _57436_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c3a9134b:;
			{
				return jule::Any(_1bcd9a2c6_buildAnonFn(_self_, _57436_tokens), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(1LLU) || _match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c3a913b2:;
			{
				return jule::Any(_1bcd9bb8a_buildTypedStructLiteral(_self_, (*(_57436_tokens))), &__jule_any_type110);;
			}
		}
		else {
			_case_begin_1c3a8b302:;
			{
				_1bcd956ab_pushErr(_self_, _5757_exprTokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c3a90625:;
	};
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcd9c99e_getEnumerableParts(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _62638_tokens) {
	(_62638_tokens).mut_slice(1LL, (_62638_tokens.len() - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _6287_parts;
	jule::Slice<_1a9575ca1_Log> _62814_errors;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(&(_62638_tokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errors = __jule_assign_result.__jule_result_arg1;
	});
	(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_62814_errors);
	return _6287_parts;;
}



inline jule::Ptr<_1bc268299_SliceExpr> _1bcd9cce0_buildSlice(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _63330_tokens) {
	jule::Ptr<_1bc268299_SliceExpr> _6347_slc = jule::new_ptr<_1bc268299_SliceExpr>(_1bc268299_SliceExpr{._field_Token=_63330_tokens[0LL], ._field_End=_63330_tokens[(_63330_tokens.len() - 1LL)], ._field_Exprs=jule::Slice<jule::Ptr<_1bc261c43_Expr>>(nullptr)});;
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _6397_parts = _1bcd9c99e_getEnumerableParts(_self_, _63330_tokens);;
	if ((_6397_parts.len() == 0LL)) {
		return _6347_slc;;
	};
	(*(_6347_slc))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(0LL, _6397_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc261c43_Expr>(nullptr); __jule_collection; });
	{
		auto expr = &(_6397_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3a961ec:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _64515_p = *it;
			{
				if ((_64515_p.len() == 0LL)) {
					goto _iter_next_1c3a961ec;
				};
				(*_6347_slc.alloc)._field_Exprs=jule::append((*_6347_slc.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc261c43_Expr>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bcda0254_buildFromTokens(_self_, _64515_p); __jule_collection; }));
			}
			_iter_next_1c3a961ec:;
			++it;
			goto _iter_begin_1c3a961ec;
		}
		_iter_end_1c3a961ec:;
	};
	return _6347_slc;;
}



inline jule::Ptr<_1bc268c06_IndexingExpr> _1bcd9d296_buildIndexing(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _65533_exprTokens, jule::Slice<jule::Ptr<_1bc247014_Token>> _6567_tokens, jule::Ptr<_1bc247014_Token> _65636_errorToken) {
	jule::Ptr<_1bc247014_Token> _6577_end = _6567_tokens[(_6567_tokens.len() - 1LL)];;
	(_6567_tokens).mut_slice(1LL, (_6567_tokens.len() - 1LL));;
	if ((_6567_tokens.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, _65636_errorToken, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc261c43_Expr> _6637_expr = _1bcda0254_buildFromTokens(_self_, _65533_exprTokens);;
	if ((_6637_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc261c43_Expr> _6677_index = _1bcda0254_buildFromTokens(_self_, _6567_tokens);;
	if ((_6677_index == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc268c06_IndexingExpr>(_1bc268c06_IndexingExpr{._field_Token=_65636_errorToken, ._field_End=_6577_end, ._field_Expr=_6637_expr, ._field_Index=_6677_index});;
}



inline jule::Ptr<_1bc269366_SlicingExpr> _1bcd9d8b2_buildSlicing(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _67933_exprTokens, jule::Slice<jule::Ptr<_1bc247014_Token>>* _67967_start, jule::Slice<jule::Ptr<_1bc247014_Token>>* _6808_to, jule::Ptr<_1bc247014_Token>* _68034_errorToken, jule::Ptr<_1bc247014_Token> _68065_end) {
	jule::Ptr<_1bc269366_SlicingExpr> _6817_slc = jule::new_ptr<_1bc269366_SlicingExpr>(_1bc269366_SlicingExpr{._field_Token=(*(_68034_errorToken)), ._field_End=_68065_end, ._field_Expr=_1bcda0254_buildFromTokens(_self_, (*(_67933_exprTokens))), ._field_Start=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_To=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	if (((*(_67967_start)).len() > 0LL)) {
		(*(_6817_slc))._field_Start=_1bcda0254_buildFromTokens(_self_, (*(_67967_start)));
	};
	if (((*(_6808_to)).len() > 0LL)) {
		(*(_6817_slc))._field_To=_1bcda0254_buildFromTokens(_self_, (*(_6808_to)));
	};
	return _6817_slc;;
}



inline jule::Any _1bcd9dc03_buildBracketRange(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _69537_tokens) {
	jule::Ptr<_1bc247014_Token> _6967_errorToken = _69537_tokens[0LL];;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _6977_exprTokens;
	jule::I32 _69719_rangeN;
	({
		__jule_tuple_sx_1bc247014_Token__jule_tuple_int __jule_assign_result = _1bcda18c6_getRangeExprTokens(&(_69537_tokens));
		_6977_exprTokens = __jule_assign_result.__jule_result_arg0;
		_69719_rangeN = __jule_assign_result.__jule_result_arg1;
	});
	if ((_6977_exprTokens.len() == 0LL)) {
		return jule::Any(_1bcd9cce0_buildSlice(_self_, _69537_tokens), &__jule_any_type97);;
	} else if ((_69719_rangeN > 0LL)) {
		_1bcd956ab_pushErr(_self_, _6967_errorToken, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_69537_tokens).mut_slice(_6977_exprTokens.len());;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7127_splitTokens = _69537_tokens.slice(1LL, (_69537_tokens.len() - 1LL));;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7137_start;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _71318_to;
	({
		__jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token __jule_assign_result = _1bcda1079_splitDelim(&(_7127_splitTokens), static_cast<jule::U32>(8LLU));
		_7137_start = __jule_assign_result.__jule_result_arg0;
		_71318_to = __jule_assign_result.__jule_result_arg1;
	});
	if (((_7137_start != nullptr) || (_71318_to != nullptr))) {
		return jule::Any(_1bcd9d8b2_buildSlicing(_self_, &(_6977_exprTokens), &(_7137_start), &(_71318_to), &(_6967_errorToken), _69537_tokens[(_69537_tokens.len() - 1LL)]), &__jule_any_type108);;
	};
	return jule::Any(_1bcd9d296_buildIndexing(_self_, _6977_exprTokens, _69537_tokens, _6967_errorToken), &__jule_any_type107);;
}



inline jule::Any _1bcd9e044_buildExclRight(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _72035_tokens) {
	jule::Ptr<_1bc247014_Token> _7213_token = (*(_72035_tokens))[((*(_72035_tokens)).len() - 1LL)];;
	((*(_72035_tokens))).mut_slice(0LL, ((*(_72035_tokens)).len() - 1LL));;
	jule::Any _7237_d = _1bcd9eac2_build(_self_, _72035_tokens);;
	if ((_7237_d == nullptr)) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _7237_d };
		
		if (_match_expr.type == &__jule_any_type85) {
			_case_begin_1c3aa3d20:;
			{
				(*(_7237_d.unsafe_cast_ptr<_1bc26596c_FnCallExpr>()))._field_Exception=jule::new_ptr<_1bc26ca0c_ScopeTree>(_1bc26ca0c_ScopeTree{._field_Parent=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=true, ._field_Stmts=jule::Slice<_1bc26c39c_Stmt>(nullptr), ._field_End=jule::Ptr<_1bc247014_Token>(nullptr)});
				return _7237_d;;
			}
		}
		_match_end_1c3aa420a:;
	};
	_1bcd956ab_pushErr(_self_, _7213_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1bcd9e385_buildData(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _73830_tokens) {
	{
		auto _match_expr{ (*(_73830_tokens)).len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c3aa5948:;
			{
				return nullptr;;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c3aa59ae:;
			{
				return _1bcd96833_buildSingle(_self_, (*(_73830_tokens))[0LL]);;
			}
		}
		else if (_match_expr == 3LL) {
			_case_begin_1c3aa5a25:;
			{
				if (((*((*(_73830_tokens))[0LL]))._field_Id == static_cast<jule::U32>(27LLU))) {
					return jule::Any(_1bcd96b74_buildBindIdent(_self_, _73830_tokens), &__jule_any_type42);;
				};
			}
		}
		_match_end_1c3aa5816:;
	};
	jule::Ptr<_1bc247014_Token> _7507_token = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
	if (((*(_7507_token))._field_Id == static_cast<jule::U32>(39LLU))) {
		return jule::Any(_1bcd9811a_buildVariadic(_self_, (*(_73830_tokens))), &__jule_any_type79);;
	};
	_7507_token=(*(_73830_tokens))[0LL];
	if (_1bc247751_IsUnaryOp((*(_7507_token))._field_Id)) {
		if (((*(_73830_tokens)).len() > 1LL)) {
			_7507_token=(*(_73830_tokens))[1LL];
			if (((*(_7507_token))._field_Id == static_cast<jule::U32>(31LLU))) {
				return jule::Any(_1bcd97988_buildType(_self_, _73830_tokens), &__jule_any_type92);;
			};
		};
		return jule::Any(_1bcd96eb5_buildUnary(_self_, (*(_73830_tokens))), &__jule_any_type91);;
	};
	if (((*(_73830_tokens)).len() >= 3LL)) {
		{
			auto &_match_expr{ (*(_7507_token))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
				_case_begin_1c33ce074:;
				{
					if (((*(_73830_tokens)).len() > 3LL)) {
						jule::Ptr<_1bc247014_Token> _7766_t = (*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];;
						if (((*(_7766_t))._field_Id == static_cast<jule::U32>(75LLU))) {
							goto _match_end_1c33cdea8;
						};
					};
					jule::Ptr<_1bc247014_Token> _7825_next = (*(_73830_tokens))[1LL];;
					if (((*(_7825_next))._field_Id != static_cast<jule::U32>(77LLU))) {
						goto _match_end_1c33cdea8;
					};
					return jule::Any(_1bcd97988_buildType(_self_, _73830_tokens), &__jule_any_type92);;
				}
			}
			_match_end_1c33cdea8:;
		};
	};
	_7507_token=(*(_73830_tokens))[((*(_73830_tokens)).len() - 1LL)];
	{
		auto &_match_expr{ (*(_7507_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1c6068227:;
			{
				return _1bcd97cc9_buildSubIdent(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(68LLU)) {
			_case_begin_1c60682c1:;
			{
				return _1bcd9e044_buildExclRight(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1c6068337:;
			{
				return _1bcd99b44_buildParenthesesRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1c606839d:;
			{
				return _1bcd9c65d_buildBraceRange(_self_, _73830_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1c6068414:;
			{
				return _1bcd9dc03_buildBracketRange(_self_, (*(_73830_tokens)));;
			}
		}
		_match_end_1c60681b1:;
	};
	_1bcd956ab_pushErr(_self_, _7507_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return nullptr;;
}



inline jule::Any _1bcd9e781_buildBinary(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _80732_tokens, jule::I32 _80757_i) {
	jule::Ptr<_1bc247014_Token> _8087_op = (*(_80732_tokens))[_80757_i];;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _8097_leftTokens = (*(_80732_tokens)).slice(0LL, _80757_i);;
	if ((_1bcda05d9_isTypeOp(&((*(_8087_op))._field_Id)) && _1bcda08e7_isTypeRange(&(_8097_leftTokens)))) {
		return jule::Any(_1bcd97988_buildType(_self_, _80732_tokens), &__jule_any_type92);;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _8147_rightTokens = (*(_80732_tokens)).slice((_80757_i + 1LL));;
	if ((_8097_leftTokens.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("left operand expected for binary operator", 41)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_8147_rightTokens.len() == 0LL)) {
		_1bcd956ab_pushErr(_self_, (*(_80732_tokens))[_80757_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcd95a1e_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("right operand expected for binary operator", 42)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::Any(jule::new_ptr<_1bc26530c_BinaryExpr>(_1bc26530c_BinaryExpr{._field_Left=_1bcda0254_buildFromTokens(_self_, _8097_leftTokens), ._field_Right=_1bcda0254_buildFromTokens(_self_, _8147_rightTokens), ._field_Op=_8087_op}), &__jule_any_type112);;
}



inline jule::Any _1bcd9eac2_build(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _83226_tokens) {
	if (((*((*(_83226_tokens))[0LL]))._field_Id == static_cast<jule::U32>(37LLU))) {
		return jule::Any(_1bcd97988_buildType(_self_, _83226_tokens), &__jule_any_type92);;
	};
	jule::I32 _8363_i = _1bcda1343_findLowestPrecOp(_83226_tokens);;
	if ((_8363_i == -1LL)) {
		return _1bcd9e385_buildData(_self_, _83226_tokens);;
	};
	return _1bcd9e781_buildBinary(_self_, _83226_tokens, _8363_i);;
}



inline jule::Any _1bcd9ee13_buildKind(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _84330_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _8447_parts;
	jule::Slice<_1a9575ca1_Log> _84414_errors;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(_84330_tokens, static_cast<jule::U32>(5LLU), true);
		_8447_parts = __jule_assign_result.__jule_result_arg0;
		_84414_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_84414_errors != nullptr)) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_84414_errors);
		return nullptr;;
	} else if ((_8447_parts.len() > 1LL)) {
		return jule::Any(_1bcd95d60_buildTuple(_self_, &(_8447_parts)), &__jule_any_type83);;
	};
	return _1bcd9eac2_build(_self_, _84330_tokens);;
}



inline jule::Ptr<_1bc261c43_Expr> _1bcda0254_buildFromTokens(_1bcd94ea2_exprBuilder* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _85435_tokens) {
	if ((_85435_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Any _8587_kind = _1bcd9ee13_buildKind(_self_, &(_85435_tokens));;
	if ((_8587_kind == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc261c43_Expr>(_1bc261c43_Expr{._field_Token=_85435_tokens[0LL], ._field_End=_85435_tokens[(_85435_tokens.len() - 1LL)], ._field_Kind=_8587_kind});;
}











inline void _1bcda5ab7_stop(_1bcda5787_parser* _self_) {
	(*(_self_))._field_ast=nullptr;
}



inline jule::Bool _1bcda5d4d_stopped(_1bcda5787_parser* _self_) {
	return ((*(_self_))._field_ast == nullptr);;
}



inline void _1bcda626b_pushErr(_1bcda5787_parser* _self_, jule::Ptr<_1bc247014_Token> _16923_token, jule::Str _16945_fmt, jule::Slice<jule::Any> _16965_args) {
	{ jule::Slice<_1a9575ca1_Log> &__jule_push_dest = (*(_self_))._field_errors; __jule_push_dest.push(_1bcda4d6e_compilerErr(&(_16923_token), &(_16945_fmt), _16965_args)); };
}



inline void _1bcda65ce_pushSuggestion(_1bcda5787_parser* _self_, jule::Str _17430_fmt, jule::Slice<jule::Any> _17450_args) {
	{
		_1bcda5215_pushSuggestion((&((*(_self_))._field_errors[((*(_self_))._field_errors.len() - 1LL)])), _17430_fmt, _17450_args);
	};
}



inline jule::Ptr<_1bc261c43_Expr> _1bcda6920_buildExpr(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _17831_tokens) {
	return _1bcda0254_buildFromTokens((*(_self_))._field_ep.ptr(), (*(_17831_tokens)));;
}



inline jule::Ptr<_1bc25bd2b_Directive> _1bcda6c61_buildDirective(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _18234_tokens) {
	if ((_18234_tokens.len() == 1LL)) {
		_1bcda626b_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*(_18234_tokens[1LL]))._field_Column != ((*(_18234_tokens[0LL]))._field_Column + 1LL))) {
		_1bcda626b_pushErr(_self_, _18234_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return jule::new_ptr<_1bc25bd2b_Directive>(_1bc25bd2b_Directive{._field_Tag=_18234_tokens[1LL], ._field_Args=_18234_tokens.slice(2LL)});;
}



inline void _1bcda7019_pushDirective(_1bcda5787_parser* _self_, jule::Ptr<_1bc25bd2b_Directive> _19733_d) {
	if ((_19733_d == nullptr)) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_directives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64bccca:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _20210_pd = *it;
			{
				if (((*((*(_19733_d))._field_Tag))._field_Kind == (*(*(_20210_pd))._field_Tag.alloc)._field_Kind)) {
					return;;
				};
			}
			_iter_next_1c64bccca:;
			++it;
			goto _iter_begin_1c64bccca;
		}
		_iter_end_1c64bccca:;
	};
	{ jule::Slice<jule::Ptr<_1bc25bd2b_Directive>> &__jule_push_dest = (*(_self_))._field_directives; __jule_push_dest.push(_19733_d); };
}



inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcda7415_buildScope(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _21032_tokens, jule::Ptr<_1bc247014_Token> _21061_end) {
	jule::Ptr<_1bc26ca0c_ScopeTree> _2117_s = _1bcd85965_newScope();;
	(*(_2117_s))._field_End=_21061_end;
	_1bcd8757c_scopeParser _2137_sp = _1bcd8757c_scopeParser{._field_p=_self_, ._field_s=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_stmts=jule::Slice<jule::Ptr<_1bcd86bdb_stmt>>(nullptr), ._field_pos=0};;
	_1bcd94468_build(&_2137_sp, _21032_tokens, &(_2117_s));
	return _2117_s;;
}



inline __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool _1bcda78bb__buildType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _22039_tokens, jule::I32* _2217_i, jule::Bool _22116_err) {
	__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	_1bcdb6941_typeBuilder _2227_tb = _1bcdb6941_typeBuilder{._field_p=_self_, ._field_tokens=(*(_22039_tokens)), ._field_i=_2217_i, ._field_err=_22116_err};;
	__jule_func_result = std::move(_1bcdb9955_build(&_2227_tb));
return __jule_func_result;;
}



inline __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool _1bcda7d72_buildType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _23238_tokens, jule::I32* _2337_i, jule::Bool _23316_err) {
	__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc247014_Token> _2343_token = (*(_23238_tokens))[(*(_2337_i))];;
	jule::Ptr<_1bc25c90e_TypeDecl> _2357_t;
	jule::Bool _23510_ok;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda78bb__buildType(_self_, _23238_tokens, _2337_i, _23316_err);
		_2357_t = __jule_assign_result.__jule_result_arg0;
		_23510_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((_23316_err && (!(_23510_ok)))) {
		_1bcda626b_pushErr(_self_.ptr(), _2343_token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
	};
	__jule_func_result.__jule_result_arg0 = _2357_t;
	__jule_func_result.__jule_result_arg1 = _23510_ok;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc274508_TypeAliasDecl> _1bcda81b3_buildTypeAliasDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _24240_tokens) {
	jule::I32 _2437_i = 1LL;;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc274508_TypeAliasDecl> _2487_tad = jule::new_ptr<_1bc274508_TypeAliasDecl>(_1bc274508_TypeAliasDecl{._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Token=(*(_24240_tokens))[1LL], ._field_Ident=(*((*(_24240_tokens))[1LL]))._field_Kind, ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr)});;
	jule::Ptr<_1bc247014_Token> _2527_token = (*(_24240_tokens))[_2437_i];;
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), _2527_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	_2527_token=(*(_24240_tokens))[_2437_i];
	if (((*(_2527_token))._field_Id != static_cast<jule::U32>(8LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\"", 18)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	(_2437_i)++;
	if ((_2437_i >= (*(_24240_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_24240_tokens))[(_2437_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return _2487_tad;;
	};
	jule::Ptr<_1bc25c90e_TypeDecl> _2737_t;
	jule::Bool _27310_ok;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, _24240_tokens, (&(_2437_i)), true);
		_2737_t = __jule_assign_result.__jule_result_arg0;
		_27310_ok = __jule_assign_result.__jule_result_arg1;
	});
	(*(_2487_tad))._field_Kind=_2737_t;
	if ((_27310_ok && (_2437_i < (*(_24240_tokens)).len()))) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_24240_tokens))[_2437_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_2487_tad.alloc)._field_Public=_1bc4071e6_IsPub((*_2487_tad.alloc)._field_Ident);
	return _2487_tad;;
}



inline void _1bcda8526_buildVarTypeAndExpr(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc270856_VarDecl>* _28241_v, jule::Slice<jule::Ptr<_1bc247014_Token>>* _28264_tokens) {
	jule::I32 _2837_i = 0LL;;
	jule::Ptr<_1bc247014_Token> _2847_tok = (*(_28264_tokens))[_2837_i];;
	if (((*(_2847_tok))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_2837_i)++;
		if (((_2837_i >= (*(_28264_tokens)).len()) || ((*((*(_28264_tokens))[_2837_i]))._field_Id == static_cast<jule::U32>(71LLU)))) {
			_1bcda626b_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
			return;;
		};
		jule::Ptr<_1bc25c90e_TypeDecl> _2918_t;
		jule::Bool _29111_ok;
		({
			__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, _28264_tokens, (&(_2837_i)), true);
			_2918_t = __jule_assign_result.__jule_result_arg0;
			_29111_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_29111_ok) {
			(*((*(_28241_v))))._field_Kind=_2918_t;
			if ((_2837_i >= (*(_28264_tokens)).len())) {
				return;;
			};
			_2847_tok=(*(_28264_tokens))[_2837_i];
		};
	};
	if (((*(_2847_tok))._field_Id != static_cast<jule::U32>(71LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Setter=_2847_tok;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3077_exprTokens = (*(_28264_tokens)).slice((_2837_i + 1LL));;
	if ((_3077_exprTokens.len() == 0LL)) {
		_1bcda626b_pushErr(_self_.ptr(), _2847_tok, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_28241_v))))._field_Expr=_1bcda6920_buildExpr(_self_, &(_3077_exprTokens));
}



inline void _1bcda8889_buildVarCommon(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc270856_VarDecl>* _31536_v, jule::Slice<jule::Ptr<_1bc247014_Token>> _31558_tokens) {
	(*((*(_31536_v))))._field_Token=_31558_tokens[0LL];
	if (((*((*((*(_31536_v))))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*((*(_31536_v))))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_31536_v))))._field_Ident=(*((*((*(_31536_v))))._field_Token))._field_Kind;
	(*((*(_31536_v))))._field_Public=_1bc4071e6_IsPub((*((*(_31536_v))))._field_Ident);
	(*((*(_31536_v))))._field_Kind=nullptr;
	if ((_31558_tokens.len() > 1LL)) {
		(_31558_tokens).mut_slice(1LL);;
		_1bcda8526_buildVarTypeAndExpr(_self_, _31536_v, &(_31558_tokens));
	};
}



inline void _1bcda8bec_buildVarBegin(_1bcda5787_parser* _self_, jule::Ptr<_1bc270856_VarDecl>* _33134_v, jule::Slice<jule::Ptr<_1bc247014_Token>>* _33157_tokens) {
	jule::Ptr<_1bc247014_Token> _3323_tok = (*(_33157_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_3323_tok))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1c64d3ab0:;
			{
				(*((*(_33134_v))))._field_Statically=true;
				goto _case_begin_1c64d376e;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1c64d376e:;
			{
				if (((*(_33157_tokens)).len() == 1LL)) {
					(*(_33157_tokens))=nullptr;
					_1bcda626b_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					return;;
				};
				((*(_33157_tokens))).mut_slice(1LL);;
				if (((*((*(_33157_tokens))[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
					(*((*(_33134_v))))._field_Mutable=true;
					((*(_33157_tokens))).mut_slice(1LL);;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU)) {
			_case_begin_1c64d37d5:;
			{
				(*((*(_33134_v))))._field_Constant=true;
				((*(_33157_tokens))).mut_slice(1LL);;
			}
		}
		else {
			_case_begin_1c64d3461:;
			{
				(*(_33157_tokens))=nullptr;
				_1bcda626b_pushErr(_self_, _3323_tok, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c64d3708:;
	};
}



inline jule::Ptr<_1bc270856_VarDecl> _1bcda903d_buildVar(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _35929_tokens) {
	jule::Ptr<_1bc270856_VarDecl> _3607_v = jule::new_ptr<_1bc270856_VarDecl>(_1bc270856_VarDecl{._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Token=_35929_tokens[0LL], ._field_Setter=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Public=false, ._field_Mutable=false, ._field_Constant=false, ._field_Statically=false, ._field_Reference=false, ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	_1bcda8bec_buildVarBegin(_self_.ptr(), &(_3607_v), &(_35929_tokens));
	if ((_35929_tokens.len() == 0LL)) {
		return nullptr;;
	};
	if (((*(_35929_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		(*(_3607_v))._field_Reference=true;
		if ((_35929_tokens.len() == 1LL)) {
			return nullptr;;
		};
		(_35929_tokens).mut_slice(1LL);;
	};
	_1bcda8889_buildVarCommon(_self_, &(_3607_v), _35929_tokens);
	return _3607_v;;
}



inline jule::Ptr<_1bc269b19_GenericDecl> _1bcda937e_buildGeneric(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _37834_tokens) {
	jule::Ptr<_1bc269b19_GenericDecl> _3797_g = jule::new_ptr<_1bc269b19_GenericDecl>(_1bc269b19_GenericDecl{._field_Token=(*(_37834_tokens))[0LL], ._field_Ident=jule::Str(), ._field_Constraint=jule::Ptr<_1bc269663_Constraint>(nullptr)});;
	if (((*((*(_3797_g))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*_3797_g.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_3797_g))._field_Ident=(*((*_3797_g.alloc)._field_Token))._field_Kind;
	if (((*(_37834_tokens)).len() > 1LL)) {
		if (((*((*(_37834_tokens))[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
			_1bcda626b_pushErr(_self_.ptr(), (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		if (((*(_37834_tokens)).len() == 2LL)) {
			_1bcda626b_pushErr(_self_.ptr(), (*(_37834_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		jule::Slice<jule::Ptr<_1bc247014_Token>> _3968_constraintTokens = (*(_37834_tokens)).slice(2LL);;
		jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _3978_parts;
		jule::Slice<_1a9575ca1_Log> _39715_errors;
		({
			__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(&(_3968_constraintTokens), static_cast<jule::U32>(66LLU), true);
			_3978_parts = __jule_assign_result.__jule_result_arg0;
			_39715_errors = __jule_assign_result.__jule_result_arg1;
		});
		if ((_39715_errors.len() > 0LL)) {
			(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_39715_errors);
			return nullptr;;
		};
		(*_3797_g.alloc)._field_Constraint=jule::new_ptr<_1bc269663_Constraint>(_1bc269663_Constraint{._field_Mask=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(0LL, _3978_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25c90e_TypeDecl>(nullptr); __jule_collection; })});
		{
			auto expr = &(_3978_parts);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c64e1a02:;
			if (it != expr_end) {
				jule::Slice<jule::Ptr<_1bc247014_Token>> _40316_part = *it;
				{
					jule::I32 _4049_i = 0LL;;
					jule::Ptr<_1bc25c90e_TypeDecl> _4059_kind;
					({
						__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_40316_part), (&(_4049_i)), true);
						_4059_kind = __jule_assign_result.__jule_result_arg0;
					});
					(*((*_3797_g.alloc)._field_Constraint))._field_Mask=jule::append((*(*(_3797_g))._field_Constraint.alloc)._field_Mask,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _4059_kind; __jule_collection; }));
					if ((_4049_i < _40316_part.len())) {
						_1bcda626b_pushErr(_self_.ptr(), _40316_part[_4049_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
					};
				}
				_iter_next_1c64e1a02:;
				++it;
				goto _iter_begin_1c64e1a02;
			}
			_iter_end_1c64e1a02:;
		};
	};
	return _3797_g;;
}



inline jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _1bcda977a_buildGenerics(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _41535_tokens, jule::Ptr<_1bc247014_Token>* _41561_errorToken) {
	if (((*(_41535_tokens)).len() == 0LL)) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_41561_errorToken)), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _4217_parts;
	jule::Slice<_1a9575ca1_Log> _42114_errors;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(_41535_tokens, static_cast<jule::U32>(5LLU), true);
		_4217_parts = __jule_assign_result.__jule_result_arg0;
		_42114_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((_42114_errors.len() > 0LL)) {
		(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_42114_errors);
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> _4277_generics = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>::alloc(0LL, _4217_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc269b19_GenericDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_4217_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c33d8215:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _42815_part = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>> &__jule_push_dest = _4277_generics; __jule_push_dest.push(_1bcda937e_buildGeneric(_self_, &(_42815_part))); };
			}
			_iter_next_1c33d8215:;
			++it;
			goto _iter_begin_1c33d8215;
		}
		_iter_end_1c33d8215:;
	};
	return _4277_generics;;
}



inline jule::Ptr<_1bc26d249_ParamDecl> _1bcda9abb_buildSelfParam(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _43534_tokens) {
	if ((_43534_tokens.len() == 0LL)) {
		return nullptr;;
	};
	jule::Ptr<_1bc26d249_ParamDecl> _4407_param = jule::new_ptr<_1bc26d249_ParamDecl>(_1bc26d249_ParamDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_4407_param.alloc)._field_Mutable=true;
		if ((_43534_tokens.len() == 1LL)) {
			_1bcda626b_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	_1a95669ea_Builder _4527_ident = static__1a9567369_New(5LL);;
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(65LLU))) {
		({
			auto except = _1a95679eb_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("&", 1)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:455:4"));
			(except.result);
		});
		if ((_43534_tokens.len() == 1LL)) {
			_1bcda626b_pushErr(_self_, _43534_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_43534_tokens).mut_slice(1LL);;
	};
	if (((*(_43534_tokens[0LL]))._field_Id == static_cast<jule::U32>(24LLU))) {
		({
			auto except = _1a95679eb_WriteStr(&_4527_ident, static_cast<jule::Str>(jule::Str::lit("self", 4)));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/parser/parser.jule:464:4"));
			(except.result);
		});
		(*_4407_param.alloc)._field_Token=_43534_tokens[0LL];
		if ((_43534_tokens.len() != 1LL)) {
			_1bcda626b_pushErr(_self_, _43534_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	};
	(*_4407_param.alloc)._field_Ident=_1a956837b_Str(&_4527_ident);
	return _4407_param;;
}



inline void _1bcda9ed9_paramTypeBegin(_1bcda5787_parser* _self_, jule::Ptr<_1bc26d249_ParamDecl>* _47535_param, jule::I32* _47564_i, jule::Slice<jule::Ptr<_1bc247014_Token>>* _47573_tokens) {
	for (; ((*(_47564_i)) < (*(_47573_tokens)).len()); ((*(_47564_i)))++) {
		{
			jule::Ptr<_1bc247014_Token> _4774_token = (*(_47573_tokens))[(*(_47564_i))];;
			if (((*(_4774_token))._field_Id != static_cast<jule::U32>(39LLU))) {
				return;;
			};
			if ((*((*(_47535_param))))._field_Variadic) {
				_1bcda626b_pushErr(_self_, _4774_token, static_cast<jule::Str>(jule::Str::lit("define is already variadic", 26)), jule::Slice<jule::Any>());
				goto _iter_next_1c60a8ab4;
			};
			(*((*(_47535_param))))._field_Variadic=true;
		}
	_iter_next_1c60a8ab4:;
	}
	_iter_end_1c60a8ab4:;;
}



inline void _1bcdaa34c_buildParamType(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc26d249_ParamDecl>* _49036_param, jule::Slice<jule::Ptr<_1bc247014_Token>>* _49065_tokens) {
	jule::I32 _4917_i = 0LL;;
	_1bcda9ed9_paramTypeBegin(_self_.ptr(), _49036_param, &(_4917_i), _49065_tokens);
	if ((_4917_i >= (*(_49065_tokens)).len())) {
		return;;
	};
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, _49065_tokens, (&(_4917_i)), true);
		(*((*(_49036_param))))._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_4917_i < (*(_49065_tokens)).len())) {
		_1bcda626b_pushErr(_self_, (*(_49065_tokens))[_4917_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
}



inline void _1bcdaa6b0_buildParamBody(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc26d249_ParamDecl>* _50336_param, jule::Slice<jule::Ptr<_1bc247014_Token>> _50364_tokens) {
	jule::Ptr<_1bc247014_Token> _5047_tok = _50364_tokens[0LL];;
	if ((_50364_tokens.len() == 1LL)) {
		(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
		return;;
	} else if ((_50364_tokens.len() < 3LL)) {
		_1bcda626b_pushErr(_self_.ptr(), _5047_tok, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_50364_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU))) {
		(*((*(_50336_param))))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1bcdaa34c_buildParamType(_self_, _50336_param, &(_50364_tokens));
		return;;
	};
	(*((*(_50336_param))))._field_Ident=(*(_5047_tok))._field_Kind;
	(_50364_tokens).mut_slice(2LL);;
	_1bcdaa34c_buildParamType(_self_, _50336_param, &(_50364_tokens));
}



inline jule::Ptr<_1bc26d249_ParamDecl> _1bcdaaa01_buildParam(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _52331_tokens) {
	jule::Ptr<_1bc26d249_ParamDecl> _5247_param = jule::new_ptr<_1bc26d249_ParamDecl>(_1bc26d249_ParamDecl{._field_Token=_52331_tokens[0LL], ._field_Mutable=false, ._field_Variadic=false, ._field_Reference=false, ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Ident=jule::Str()});;
	if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U32>(32LLU))) {
		(*_5247_param.alloc)._field_Mutable=true;
		if ((_52331_tokens.len() == 1LL)) {
			_1bcda626b_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_52331_tokens).mut_slice(1LL);;
		(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
	};
	if ((_52331_tokens.len() >= 3LL)) {
		if (((*((*(_5247_param))._field_Token))._field_Id == static_cast<jule::U32>(65LLU))) {
			if ((_52331_tokens.len() == 1LL)) {
				_1bcda626b_pushErr(_self_.ptr(), _52331_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			};
			if ((((*(_52331_tokens[1LL]))._field_Id == static_cast<jule::U32>(1LLU)) && ((*(_52331_tokens[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
				(*_5247_param.alloc)._field_Reference=true;
				(_52331_tokens).mut_slice(1LL);;
				(*_5247_param.alloc)._field_Token=_52331_tokens[0LL];
			};
		};
	};
	if (((*((*(_5247_param))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		(*_5247_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
		_1bcdaa34c_buildParamType(_self_, &(_5247_param), &(_52331_tokens));
	} else {
		_1bcdaa6b0_buildParamBody(_self_, &(_5247_param), _52331_tokens);
	};
	return _5247_param;;
}



inline void _1bcdaaca9_checkParams(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>>* _56632_params) {
	{
		auto expr = _56632_params;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64ed69b:;
		if (it != expr_end) {
			jule::Ptr<_1bc26d249_ParamDecl> _56715_param = *it;
			{
				if ((_1bc26d601_IsSelf(_56715_param.ptr()) || ((*_56715_param.alloc)._field_Kind != nullptr))) {
					goto _iter_next_1c64ed69b;
				};
				if (((*(_56715_param))._field_Token == nullptr)) {
					_1bcda626b_pushErr(_self_, (*_56715_param.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
				} else {
					(*(_56715_param))._field_Kind=jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Kind=jule::Any(jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*_56715_param.alloc)._field_Token, ._field_Ident=(*((*_56715_param.alloc)._field_Token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)}), &__jule_any_type78)});
					(*_56715_param.alloc)._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
				};
			}
			_iter_next_1c64ed69b:;
			++it;
			goto _iter_begin_1c64ed69b;
		}
		_iter_end_1c64ed69b:;
	};
}



inline jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>> _1bcdab1a5_buildParams(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _58633_tokens, jule::Bool _58658_method) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _5877_parts;
	jule::Slice<_1a9575ca1_Log> _58714_errs;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(_58633_tokens, static_cast<jule::U32>(5LLU), true);
		_5877_parts = __jule_assign_result.__jule_result_arg0;
		_58714_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_58714_errs);
	if ((_5877_parts.len() == 0LL)) {
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>> _59311_params = nullptr;;
	if ((_58658_method && (_5877_parts.len() > 0LL))) {
		jule::Ptr<_1bc26d249_ParamDecl> _5958_param = _1bcda9abb_buildSelfParam(_self_, _5877_parts[0LL]);;
		if (((_5958_param != nullptr) && _1bc26d601_IsSelf(_5958_param))) {
			{ jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_5958_param); };
			(_5877_parts).mut_slice(1LL);;
		};
	};
	{
		auto expr = &(_5877_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6505274:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _60215_part = *it;
			{
				if ((_60215_part.len() == 0LL)) {
					goto _iter_next_1c6505274;
				};
				jule::Ptr<_1bc26d249_ParamDecl> _6068_param = _1bcdaaa01_buildParam(_self_, _60215_part);;
				if ((_6068_param != nullptr)) {
					{ jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>> &__jule_push_dest = _59311_params; __jule_push_dest.push(_6068_param); };
				};
			}
			_iter_next_1c6505274:;
			++it;
			goto _iter_begin_1c6505274;
		}
		_iter_end_1c6505274:;
	};
	_1bcdaaca9_checkParams(_self_, &(_59311_params));
	return _59311_params;;
}



inline __jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool _1bcdab5a1_buildMultiRetType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _61639_tokens, jule::I32* _61669_i) {
	__jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1bc260802_RetTypeDecl>(_1bc260802_RetTypeDecl{._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr)});
	((*(_61669_i)))++;
	if (((*(_61669_i)) >= (*(_61639_tokens)).len())) {
		((*(_61669_i)))--;
		({
			__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, _61639_tokens, (&((*(_61669_i)))), false);
			(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
		});
		return __jule_func_result;;
	};
	((*(_61669_i)))--;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _6267_rangeTokens = _1bcda3e39_range(_61669_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _61639_tokens);;
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _6287_parts;
	jule::Slice<_1a9575ca1_Log> _62814_errs;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(&(_6267_rangeTokens), static_cast<jule::U32>(5LLU), true);
		_6287_parts = __jule_assign_result.__jule_result_arg0;
		_62814_errs = __jule_assign_result.__jule_result_arg1;
	});
	(*(_self_))._field_errors=jule::append((*_self_.alloc)._field_errors,_62814_errs);
	if ((_6287_parts.len() == 0LL)) {
		return __jule_func_result;;
	};
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _6347_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25c90e_TypeDecl>(nullptr); __jule_collection; });;
	(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc247014_Token>>::alloc(0LL, _6287_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc247014_Token>(nullptr); __jule_collection; });
	{
		auto expr = &(_6287_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c650b379:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _63615_part = *it;
			{
				if ((_63615_part.len() == 0LL)) {
					goto _iter_next_1c650b379;
				};
				jule::Ptr<_1bc247014_Token> _6408_token = _63615_part[0LL];;
				jule::I32 _6418_offset = 0LL;;
				if ((_63615_part.len() > 1LL)) {
					_6408_token=_63615_part[1LL];
					if (((*(_6408_token))._field_Id == static_cast<jule::U32>(8LLU))) {
						_6418_offset=2LL;
						if ((_63615_part.len() < 3LL)) {
							_1bcda626b_pushErr(_self_, _6408_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							goto _iter_next_1c650b379;
						};
					};
				};
				_6408_token=_63615_part[0LL];
				if ((_6418_offset != 2LL)) {
					jule::Ptr<_1bc247014_Token> _6579_newToken = jule::new_ptr<_1bc247014_Token>((*(_6408_token)));;
					(*_6579_newToken.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc247014_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6579_newToken; __jule_collection; }));
				} else {
					(*__jule_func_result.__jule_result_arg0.alloc)._field_Idents=jule::append((*__jule_func_result.__jule_result_arg0.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc247014_Token>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6408_token; __jule_collection; }));
				};
				jule::Ptr<_1bc25c90e_TypeDecl> _6648_tk;
				({
					__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_63615_part), (&(_6418_offset)), true);
					_6648_tk = __jule_assign_result.__jule_result_arg0;
				});
				if ((_6418_offset < _63615_part.len())) {
					_1bcda626b_pushErr(_self_, _63615_part[_6418_offset], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = _6347_types; __jule_push_dest.push(_6648_tk); };
			}
			_iter_next_1c650b379:;
			++it;
			goto _iter_begin_1c650b379;
		}
		_iter_end_1c650b379:;
	};
	if ((_6347_types.len() > 1LL)) {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*(_61639_tokens))[0LL], ._field_Kind=jule::Any(jule::new_ptr<_1bc25e13b_TupleTypeDecl>(_1bc25e13b_TupleTypeDecl{._field_Types=_6347_types}), &__jule_any_type77)});
	} else {
		(*__jule_func_result.__jule_result_arg0.alloc)._field_Kind=_6347_types[0LL];
	};
	__jule_func_result.__jule_result_arg1=true;
	return __jule_func_result;;
}



inline __jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool _1bcdab99c_buildRetType(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _68734_tokens, jule::I32* _68764_i) {
	__jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=jule::new_ptr<_1bc260802_RetTypeDecl>(_1bc260802_RetTypeDecl{._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Idents=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr)});
	if (((*(_68764_i)) >= (*(_68734_tokens)).len())) {
		return __jule_func_result;;
	};
	jule::Ptr<_1bc247014_Token> _6937_token = (*(_68734_tokens))[(*(_68764_i))];;
	{
		auto &_match_expr{ (*(_6937_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1c63c3e9a:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(71LLU)) {
			_case_begin_1c63c4011:;
			{
				return __jule_func_result;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(8LLU)) {
			_case_begin_1c63c4077:;
			{
				if ((((*(_68764_i)) + 1LL) >= (*(_68734_tokens)).len())) {
					_1bcda626b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
					return __jule_func_result;;
				};
				((*(_68764_i)))++;
				_6937_token=(*(_68734_tokens))[(*(_68764_i))];
				{
					auto &_match_expr{ (*(_6937_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c63c7278:;
						{
							({
								__jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1bcdab5a1_buildMultiRetType(_self_, _68734_tokens, _68764_i);
								__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
								__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
							});
							return __jule_func_result;;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c63c77a6:;
						{
							_1bcda626b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
							return __jule_func_result;;
						}
					}
					_match_end_1c63c770c:;
				};
				({
					__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, _68734_tokens, (&((*(_68764_i)))), true);
					(*(__jule_func_result.__jule_result_arg0))._field_Kind = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
				return __jule_func_result;;
			}
		}
		_match_end_1c63c3e34:;
	};
	((*(_68764_i)))++;
	_1bcda626b_pushErr(_self_.ptr(), _6937_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	return __jule_func_result;;
}



inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdabe53_buildFnPrototype(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _72638_tokens, jule::I32* _72668_i, jule::Bool _72676_method) {
	jule::Ptr<_1bc26e69b_FnDecl> _7277_f = jule::new_ptr<_1bc26e69b_FnDecl>(_1bc26e69b_FnDecl{._field_Token=(*(_72638_tokens))[(*(_72668_i))], ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr), ._field_Result=jule::Ptr<_1bc260802_RetTypeDecl>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>>(nullptr)});;
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U32>(34LLU))) {
		(*_7277_f.alloc)._field_Statically=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1bcda626b_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	if (((*((*(_7277_f))._field_Token))._field_Id == static_cast<jule::U32>(31LLU))) {
		(*_7277_f.alloc)._field_Unsafety=true;
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1bcda626b_pushErr(_self_.ptr(), (*_7277_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*_7277_f.alloc)._field_Token=(*(_72638_tokens))[(*(_72668_i))];
	};
	((*(_72668_i)))++;
	if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_7277_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc247014_Token> _7603_tok = (*(_72638_tokens))[(*(_72668_i))];;
	if (((*(_7603_tok))._field_Id == static_cast<jule::U32>(1LLU))) {
		((*(_72668_i)))++;
		if (((*(_72668_i)) >= (*(_72638_tokens)).len())) {
			_1bcda626b_pushErr(_self_.ptr(), (*(_7277_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*(_7277_f))._field_Ident=(*_7603_tok.alloc)._field_Kind;
	} else {
		(*(_7277_f))._field_Ident=static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11));
	};
	jule::Ptr<_1bc247014_Token> _7723_errorToken = (*(_72638_tokens))[(*(_72668_i))];;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7737_genericsTokens = _1bcda3e39_range(_72668_i, static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _72638_tokens);;
	if ((_7737_genericsTokens != nullptr)) {
		(*(_7277_f))._field_Generics=_1bcda977a_buildGenerics(_self_, &(_7737_genericsTokens), &(_7723_errorToken));
	};
	if (((*((*(_72638_tokens))[(*(_72668_i))]))._field_Id != static_cast<jule::U32>(74LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_72638_tokens))[(*(_72668_i))], static_cast<jule::Str>(jule::Str::lit("missing function parentheses", 28)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _7837_paramsToks = _1bcda3e39_range(_72668_i, static_cast<jule::U32>(74LLU), static_cast<jule::U32>(75LLU), _72638_tokens);;
	if ((_7837_paramsToks.len() > 0LL)) {
		(*(_7277_f))._field_Params=_1bcdab1a5_buildParams(_self_, &(_7837_paramsToks), _72676_method);
	};
	if (((*(_72668_i)) < (*(_72638_tokens)).len())) {
		jule::Ptr<_1bc247014_Token> _7894_token = (*(_72638_tokens))[(*(_72668_i))];;
		if (((*(_7894_token))._field_Id == static_cast<jule::U32>(68LLU))) {
			(*(_7277_f))._field_Exceptional=true;
			((*(_72668_i)))++;
		};
	};
	(*(_7277_f))._field_Public=_1bc4071e6_IsPub((*_7277_f.alloc)._field_Ident);
	({
		__jule_tuple_x_1bc260802_RetTypeDecl__jule_tuple_bool __jule_assign_result = _1bcdab99c_buildRetType(_self_, _72638_tokens, _72668_i);
		(*_7277_f.alloc)._field_Result = __jule_assign_result.__jule_result_arg0;
	});
	return _7277_f;;
}



inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdac409_buildFn(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _80329_tokens, jule::Bool _80354_method, jule::Bool _80368_prototype) {
	jule::I32 _8047_i = 0LL;;
	jule::Ptr<_1bc26e69b_FnDecl> _8057_f = _1bcdabe53_buildFnPrototype(_self_, _80329_tokens, &(_8047_i), _80354_method);;
	if (_80368_prototype) {
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1bcda626b_pushErr(_self_, (*(_80329_tokens))[(_8047_i + 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
		return _8057_f;;
	} else if ((_8057_f == nullptr)) {
		return _8057_f;;
	};
	if ((_8047_i >= (*(_80329_tokens)).len())) {
		_1bcda5ab7_stop(_self_);
		_1bcda626b_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _8217_blockTokens = _1bcda3e39_range(&(_8047_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _80329_tokens);;
	if ((_8217_blockTokens != nullptr)) {
		(*(_8057_f))._field_Scope=_1bcda7415_buildScope(_self_, &(_8217_blockTokens), (*(_80329_tokens))[(_8047_i - 1LL)]);
		(*((*_8057_f.alloc)._field_Scope))._field_Unsafety=(*_8057_f.alloc)._field_Unsafety;
		if ((_8047_i < (*(_80329_tokens)).len())) {
			_1bcda626b_pushErr(_self_, (*(_80329_tokens))[_8047_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		};
	} else {
		_1bcda5ab7_stop(_self_);
		_1bcda626b_pushErr(_self_, (*(_8057_f))._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _8057_f;;
}



inline void _1bcdac76c_buildBindUseDecl(_1bcda5787_parser* _self_, jule::Ptr<_1bc27585b_UseDecl>* _83737_decl, jule::Slice<jule::Ptr<_1bc247014_Token>>* _83763_tokens) {
	if (((*(_83763_tokens)).len() > 1LL)) {
		_1bcda626b_pushErr(_self_, (*(_83763_tokens))[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc247014_Token> _8417_token = (*(_83763_tokens))[0LL];;
	if (((((*(_8417_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1bc248169_IsStr((*_8417_token.alloc)._field_Kind)))) || _1bc248400_IsRawStr((*_8417_token.alloc)._field_Kind))) {
		_1bcda626b_pushErr(_self_, _8417_token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return;;
	};
	(*((*(_83737_decl))))._field_Binded=true;
	(*((*(_83737_decl))))._field_Path=_8417_token;
}



inline void _1bcdacad0_parseUseDecl(_1bcda5787_parser* _self_, jule::Ptr<_1bc27585b_UseDecl>* _85033_decl, jule::Slice<jule::Ptr<_1bc247014_Token>> _85058_tokens) {
	if ((*((*(_85033_decl))))._field_Binded) {
		_1bcdac76c_buildBindUseDecl(_self_, _85033_decl, &(_85058_tokens));
		return;;
	};
	jule::Ptr<_1bc247014_Token> _8567_token = _85058_tokens[0LL];;
	if ((((((*(_8567_token))._field_Id != static_cast<jule::U32>(1LLU)) && ((*_8567_token.alloc)._field_Id != static_cast<jule::U32>(4LLU))) && (!(_1bc248169_IsStr((*_8567_token.alloc)._field_Kind)))) || _1bc248400_IsRawStr((*_8567_token.alloc)._field_Kind))) {
		_1bcda626b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return;;
	};
	if (((*(_8567_token))._field_Id == static_cast<jule::U32>(1LLU))) {
		(*((*(_85033_decl))))._field_Alias=_8567_token;
		(_85058_tokens).mut_slice(1LL);;
		if ((_85058_tokens.len() == 0LL)) {
			_1bcda626b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
		_8567_token=_85058_tokens[0LL];
		if ((((*(_8567_token))._field_Id != static_cast<jule::U32>(4LLU)) || (!(_1bc248169_IsStr((*_8567_token.alloc)._field_Kind))))) {
			_1bcda626b_pushErr(_self_, _8567_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return;;
		};
	};
	(*((*(_85033_decl))))._field_Path=_8567_token;
}



inline jule::Ptr<_1bc27585b_UseDecl> _1bcdacecb_buildUseDecl(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _88032_tokens, jule::Bool _88057_binded) {
	jule::Ptr<_1bc27585b_UseDecl> _8817_decl = jule::new_ptr<_1bc27585b_UseDecl>(_1bc27585b_UseDecl{._field_Token=_88032_tokens[0LL], ._field_Path=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Alias=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Binded=_88057_binded});;
	if ((_88032_tokens.len() < 2LL)) {
		_1bcda626b_pushErr(_self_, (*(_8817_decl))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing path of use statement", 29)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_88032_tokens).mut_slice(1LL);;
	_1bcdacad0_parseUseDecl(_self_, &(_8817_decl), _88032_tokens);
	return _8817_decl;;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdad3c7_buildTypeEnumItemKind(jule::Ptr<_1bcda5787_parser> _self_, jule::I32* _89443_i, jule::Slice<jule::Ptr<_1bc247014_Token>>* _89456_tokens) {
	jule::I32 _8957_braceN = 0LL;;
	jule::I32 _8963_exprStart = (*(_89443_i));;
	for (; ((*(_89443_i)) < (*(_89456_tokens)).len()); ((*(_89443_i)))++) {
		{
			jule::Ptr<_1bc247014_Token> _8984_t = (*(_89456_tokens))[(*(_89443_i))];;
			{
				auto &_match_expr{ (*(_8984_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c63e5a5a:;
					{
						(_8957_braceN)++;
						goto _iter_next_1c63e4edd;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c63e5d8a:;
					{
						(_8957_braceN)--;
					}
				}
				_match_end_1c63e5ad2:;
			};
			if ((_8957_braceN > 0LL)) {
				goto _iter_next_1c63e4edd;
			};
			if ((((*(_8984_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_89443_i)) + 1LL) >= (*(_89456_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1bc247014_Token>> _91413_kindTokens = nullptr;;
				if (((*_8984_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart, (*(_89443_i)));
				} else {
					_91413_kindTokens=(*(_89456_tokens)).slice(_8963_exprStart);
				};
				jule::I32 _9209_j = 0LL;;
				jule::Ptr<_1bc25c90e_TypeDecl> _9219_kind;
				({
					__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_91413_kindTokens), (&(_9209_j)), true);
					_9219_kind = __jule_assign_result.__jule_result_arg0;
				});
				if ((_9209_j < _91413_kindTokens.len())) {
					_1bcda626b_pushErr(_self_.ptr(), _91413_kindTokens[_9209_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				};
				return _9219_kind;;
			};
		}
	_iter_next_1c63e4edd:;
	}
	_iter_end_1c63e4edd:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>> _1bcdad718_buildTypeEnumItems(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _93140_tokens) {
	jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>> _9327_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc2771ed_TypeEnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _9337_i = 0LL;;
	for (; (_9337_i < (*(_93140_tokens)).len()); (_9337_i)++) {
		{
			jule::Ptr<_1bc247014_Token> _9358_t = (*(_93140_tokens))[_9337_i];;
			jule::Ptr<_1bc2771ed_TypeEnumItemDecl> _9368_item = jule::new_ptr<_1bc2771ed_TypeEnumItemDecl>(_1bc2771ed_TypeEnumItemDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr)});;
			(*_9368_item.alloc)._field_Token=_9358_t;
			if ((((*((*_9368_item.alloc)._field_Token))._field_Id == static_cast<jule::U32>(1LLU)) && (((*(_93140_tokens)).len() - _9337_i) > 2LL))) {
				_9358_t=(*(_93140_tokens))[(_9337_i + 1LL)];
				if (((*(_9358_t))._field_Id == static_cast<jule::U32>(8LLU))) {
					(*_9368_item.alloc)._field_Ident=(*(*(_9368_item))._field_Token.alloc)._field_Kind;
					_9337_i+=2LL;
					if (((_9337_i >= (*(_93140_tokens)).len()) || ((*((*(_93140_tokens))[_9337_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
						_1bcda626b_pushErr(_self_.ptr(), _9358_t, static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
						goto _iter_next_1c63ead90;
					};
				};
			};
			(*_9368_item.alloc)._field_Kind=_1bcdad3c7_buildTypeEnumItemKind(_self_, &(_9337_i), _93140_tokens);
			{ jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>> &__jule_push_dest = _9327_items; __jule_push_dest.push(_9368_item); };
		}
	_iter_next_1c63ead90:;
	}
	_iter_end_1c63ead90:;;
	return _9327_items;;
}



inline jule::Ptr<_1bc27785d_TypeEnumDecl> _1bcdada59_buildTypeEnumDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _95539_tokens) {
	jule::I32 _9567_i = 1LL;;
	jule::Ptr<_1bc27785d_TypeEnumDecl> _9577_e = jule::new_ptr<_1bc27785d_TypeEnumDecl>(_1bc27785d_TypeEnumDecl{._field_Token=(*(_95539_tokens))[_9567_i], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Items=jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if (((*((*(_9577_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_9577_e))._field_Ident=(*((*_9577_e.alloc)._field_Token))._field_Kind;
	_9567_i+=3LL;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _9677_itemTokens = _1bcda3e39_range(&(_9567_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _95539_tokens);;
	if ((_9677_itemTokens == nullptr)) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, (*_9577_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _9577_e;;
	} else if ((_9567_i < (*(_95539_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_95539_tokens))[_9567_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_9577_e.alloc)._field_Public=_1bc4071e6_IsPub((*_9577_e.alloc)._field_Ident);
	(*_9577_e.alloc)._field_End=(*(_95539_tokens))[(_9567_i - 1LL)];
	(*_9577_e.alloc)._field_Items=_1bcdad718_buildTypeEnumItems(_self_, &(_9677_itemTokens));
	return _9577_e;;
}



inline jule::Ptr<_1bc261c43_Expr> _1bcdade55_buildEnumItemExpr(jule::Ptr<_1bcda5787_parser> _self_, jule::I32* _98239_i, jule::Slice<jule::Ptr<_1bc247014_Token>>* _98252_tokens) {
	jule::I32 _9837_braceN = 0LL;;
	jule::I32 _9843_exprStart = (*(_98239_i));;
	for (; ((*(_98239_i)) < (*(_98252_tokens)).len()); ((*(_98239_i)))++) {
		{
			jule::Ptr<_1bc247014_Token> _9864_t = (*(_98252_tokens))[(*(_98239_i))];;
			{
				auto &_match_expr{ (*(_9864_t))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c6409277:;
					{
						(_9837_braceN)++;
						goto _iter_next_1c640870a;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c64095a7:;
					{
						(_9837_braceN)--;
					}
				}
				_match_end_1c64092ee:;
			};
			if ((_9837_braceN > 0LL)) {
				goto _iter_next_1c640870a;
			};
			if ((((*(_9864_t))._field_Id == static_cast<jule::U32>(5LLU)) || (((*(_98239_i)) + 1LL) >= (*(_98252_tokens)).len()))) {
				jule::Slice<jule::Ptr<_1bc247014_Token>> _100213_exprTokens = nullptr;;
				if (((*_9864_t.alloc)._field_Id == static_cast<jule::U32>(5LLU))) {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart, (*(_98239_i)));
				} else {
					_100213_exprTokens=(*(_98252_tokens)).slice(_9843_exprStart);
				};
				return _1bcda6920_buildExpr(_self_, &(_100213_exprTokens));;
			};
		}
	_iter_next_1c640870a:;
	}
	_iter_end_1c640870a:;;
	return nullptr;;
}



inline jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>> _1bcdae296_buildEnumItems(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _101436_tokens) {
	jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>> _10157_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>>::alloc(0LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc275d12_EnumItemDecl>(nullptr); __jule_collection; });;
	jule::I32 _10167_i = 0LL;;
	for (; (_10167_i < (*(_101436_tokens)).len()); (_10167_i)++) {
		{
			jule::Ptr<_1bc247014_Token> _10188_t = (*(_101436_tokens))[_10167_i];;
			jule::Ptr<_1bc275d12_EnumItemDecl> _10198_item = jule::new_ptr<_1bc275d12_EnumItemDecl>(_1bc275d12_EnumItemDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
			(*_10198_item.alloc)._field_Token=_10188_t;
			if (((*((*_10198_item.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
				_1bcda626b_pushErr(_self_.ptr(), (*_10198_item.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
			};
			(*_10198_item.alloc)._field_Ident=(*((*_10198_item.alloc)._field_Token))._field_Kind;
			if ((((_10167_i + 1LL) >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[(_10167_i + 1LL)]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				if (((_10167_i + 1LL) < (*(_101436_tokens)).len())) {
					(_10167_i)++;
				};
				{ jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
				goto _iter_next_1c640d16b;
			};
			(_10167_i)++;
			_10188_t=(*(_101436_tokens))[_10167_i];
			(_10167_i)++;
			if (((*(_10188_t))._field_Id != static_cast<jule::U32>(8LLU))) {
				_1bcda626b_pushErr(_self_.ptr(), _10188_t, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected colon \":\" for assignment", 33)), jule::Slice<jule::Any>());
				goto _iter_next_1c640d16b;
			};
			if (((_10167_i >= (*(_101436_tokens)).len()) || ((*((*(_101436_tokens))[_10167_i]))._field_Id == static_cast<jule::U32>(5LLU)))) {
				_1bcda626b_pushErr(_self_.ptr(), _10188_t, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
				goto _iter_next_1c640d16b;
			};
			(*_10198_item.alloc)._field_Expr=_1bcdade55_buildEnumItemExpr(_self_, &(_10167_i), _101436_tokens);
			{ jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>> &__jule_push_dest = _10157_items; __jule_push_dest.push(_10198_item); };
		}
	_iter_next_1c640d16b:;
	}
	_iter_end_1c640d16b:;;
	return _10157_items;;
}



inline jule::Ptr<_1bc2768c3_EnumDecl> _1bcdae5d7_buildEnumDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _105135_tokens) {
	if (((*(_105135_tokens)).len() < 3LL)) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_105135_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc2768c3_EnumDecl> _10567_e = jule::new_ptr<_1bc2768c3_EnumDecl>(_1bc2768c3_EnumDecl{._field_Token=(*(_105135_tokens))[1LL], ._field_Public=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Items=jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>>(nullptr), ._field_End=jule::Ptr<_1bc247014_Token>(nullptr)});;
	if (((*((*(_10567_e))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_10567_e))._field_Ident=(*((*_10567_e.alloc)._field_Token))._field_Kind;
	jule::I32 _10647_i = 2LL;;
	if (((*((*(_105135_tokens))[_10647_i]))._field_Id == static_cast<jule::U32>(8LLU))) {
		(_10647_i)++;
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1bcda626b_pushErr(_self_.ptr(), (*(_105135_tokens))[(_10647_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
		({
			__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, _105135_tokens, (&(_10647_i)), true);
			(*_10567_e.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
		});
		if ((_10647_i >= (*(_105135_tokens)).len())) {
			_1bcda5ab7_stop(_self_.ptr());
			_1bcda626b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
			_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
			return _10567_e;;
		};
	} else {
		(*_10567_e.alloc)._field_Kind=nullptr;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _10817_itemTokens = _1bcda3e39_range(&(_10647_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _105135_tokens);;
	if ((_10817_itemTokens == nullptr)) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, (*_10567_e.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _10567_e;;
	} else if ((_10647_i < (*(_105135_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_105135_tokens))[_10647_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_10567_e.alloc)._field_Public=_1bc4071e6_IsPub((*_10567_e.alloc)._field_Ident);
	(*_10567_e.alloc)._field_End=(*(_105135_tokens))[(_10647_i - 1LL)];
	(*_10567_e.alloc)._field_Items=_1bcdae296_buildEnumItems(_self_, &(_10817_itemTokens));
	return _10567_e;;
}



inline jule::Any _1bcdae928_buildNodeEnumDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _109639_tokens) {
	if ((((*(_109639_tokens)).len() > 3LL) && ((*((*(_109639_tokens))[2LL]))._field_Id == static_cast<jule::U32>(8LLU)))) {
		if (((*((*(_109639_tokens))[3LL]))._field_Id == static_cast<jule::U32>(7LLU))) {
			return jule::Any(_1bcdada59_buildTypeEnumDecl(_self_, _109639_tokens), &__jule_any_type71);;
		};
	};
	return jule::Any(_1bcdae5d7_buildEnumDecl(_self_, _109639_tokens), &__jule_any_type70);;
}



inline jule::Ptr<_1bc277b27_FieldDecl> _1bcdaec69_buildField(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _110531_tokens) {
	jule::Ptr<_1bc277b27_FieldDecl> _11067_f = jule::new_ptr<_1bc277b27_FieldDecl>(_1bc277b27_FieldDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Public=false, ._field_Mutable=false, ._field_Ident=jule::Str(), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Default=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	(*_11067_f.alloc)._field_Mutable=((*(_110531_tokens[0LL]))._field_Id == static_cast<jule::U32>(32LLU));
	if ((*_11067_f.alloc)._field_Mutable) {
		if ((_110531_tokens.len() == 1LL)) {
			_1bcda626b_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(1LL);;
	};
	(*_11067_f.alloc)._field_Token=_110531_tokens[0LL];
	if (((*((*_11067_f.alloc)._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*_11067_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_11067_f.alloc)._field_Ident=(*((*_11067_f.alloc)._field_Token))._field_Kind;
	if ((_110531_tokens.len() == 1LL)) {
		_1bcda626b_pushErr(_self_.ptr(), _110531_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if (((_110531_tokens.len() < 3LL) || ((*(_110531_tokens[1LL]))._field_Id != static_cast<jule::U32>(8LLU)))) {
		_1bcda626b_pushErr(_self_.ptr(), _110531_tokens[1LL], static_cast<jule::Str>(jule::Str::lit("type missing", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_110531_tokens).mut_slice(2LL);;
	jule::I32 _11347_i = 0LL;;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_110531_tokens), (&(_11347_i)), true);
		(*_11067_f.alloc)._field_Kind = __jule_assign_result.__jule_result_arg0;
	});
	if ((_11347_i < _110531_tokens.len())) {
		jule::Ptr<_1bc247014_Token> _11374_token = _110531_tokens[_11347_i];;
		if (((*(_11374_token))._field_Id != static_cast<jule::U32>(71LLU))) {
			_1bcda626b_pushErr(_self_.ptr(), _110531_tokens[_11347_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_11347_i)++;
		if ((_11347_i >= _110531_tokens.len())) {
			_1bcda626b_pushErr(_self_.ptr(), _11374_token, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_110531_tokens).mut_slice(_11347_i);;
		(*_11067_f.alloc)._field_Default=_1bcda6920_buildExpr(_self_, &(_110531_tokens));
	};
	(*_11067_f.alloc)._field_Public=_1bc4071e6_IsPub((*_11067_f.alloc)._field_Ident);
	return _11067_f;;
}



inline jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>> _1bcdb00aa_buildStructDeclFields(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _115442_tokens) {
	jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>> _115511_fields = nullptr;;
	jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _11567_stmts = _1bcd87093_splitStmts(&(_115442_tokens));;
	{
		auto expr = &(_11567_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6430028:;
		if (it != expr_end) {
			jule::Ptr<_1bcd86bdb_stmt> _115715_stmt = *it;
			{
				_115442_tokens=(*(_115715_stmt))._field_tokens;
				jule::Ptr<_1bc277b27_FieldDecl> _11598_f = _1bcdaec69_buildField(_self_, _115442_tokens);;
				{ jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>> &__jule_push_dest = _115511_fields; __jule_push_dest.push(_11598_f); };
			}
			_iter_next_1c6430028:;
			++it;
			goto _iter_begin_1c6430028;
		}
		_iter_end_1c6430028:;
	};
	return _115511_fields;;
}



inline jule::Ptr<_1bc27851d_StructDecl> _1bcdb03eb_buildStructDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _116537_tokens) {
	if (((*(_116537_tokens)).len() < 3LL)) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_116537_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _11717_i = 1LL;;
	jule::Ptr<_1bc27851d_StructDecl> _11727_s = jule::new_ptr<_1bc27851d_StructDecl>(_1bc27851d_StructDecl{._field_Token=(*(_116537_tokens))[_11717_i], ._field_End=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Fields=jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>>(nullptr), ._field_Public=false, ._field_Binded=false, ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>(nullptr)});;
	if (((*((*(_11727_s))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(_11717_i)++;
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	(*(_11727_s))._field_Ident=(*((*_11727_s.alloc)._field_Token))._field_Kind;
	jule::Ptr<_1bc247014_Token> _11863_errorToken = (*(_116537_tokens))[_11717_i];;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _11877_genericsTokens = _1bcda3e39_range(&(_11717_i), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), _116537_tokens);;
	if ((_11877_genericsTokens != nullptr)) {
		(*_11727_s.alloc)._field_Generics=_1bcda977a_buildGenerics(_self_, &(_11877_genericsTokens), &(_11863_errorToken));
	};
	if ((_11717_i >= (*(_116537_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_116537_tokens))[(_11717_i - 1LL)], static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _11977_bodyTokens = _1bcda3e39_range(&(_11717_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _116537_tokens);;
	if ((_11977_bodyTokens == nullptr)) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, (*_11727_s.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return _11727_s;;
	};
	if ((_11717_i < (*(_116537_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_116537_tokens))[_11717_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_11727_s.alloc)._field_Public=_1bc4071e6_IsPub((*_11727_s.alloc)._field_Ident);
	(*_11727_s.alloc)._field_Fields=_1bcdb00aa_buildStructDeclFields(_self_, _11977_bodyTokens);
	(*_11727_s.alloc)._field_End=(*(_116537_tokens))[(_11717_i - 1LL)];
	return _11727_s;;
}



inline void _1bcdb06a4_checkMethodReceiver(_1bcda5787_parser* _self_, jule::Ptr<_1bc26e69b_FnDecl>* _121336_f) {
	if ((*((*(_121336_f))))._field_Statically) {
		if ((((*((*(_121336_f))))._field_Params.len() > 0LL) && _1bc26d601_IsSelf((*((*(_121336_f))))._field_Params[0LL].ptr()))) {
			_1bcda626b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("static functions cannot have receiver parameter", 47)), jule::Slice<jule::Any>());
		};
		return;;
	};
	if (((*((*(_121336_f))))._field_Params.len() == 0LL)) {
		_1bcda626b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
	jule::Ptr<_1bc26d249_ParamDecl> _12253_param = (*((*(_121336_f))))._field_Params[0LL];;
	if ((!(_1bc26d601_IsSelf(_12253_param.ptr())))) {
		_1bcda626b_pushErr(_self_, (*((*(_121336_f))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing receiver parameter", 26)), jule::Slice<jule::Any>());
		return;;
	};
}



inline void _1bcdb0a17_buildTraitBody(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc278c5a_TraitDecl>* _123236_t, jule::Slice<jule::Ptr<_1bc247014_Token>> _123260_tokens) {
	jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _12337_stmts = _1bcd87093_splitStmts(&(_123260_tokens));;
	{
		auto expr = &(_12337_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6441930:;
		if (it != expr_end) {
			jule::Ptr<_1bcd86bdb_stmt> _123415_stmt = *it;
			{
				_123260_tokens=(*(_123415_stmt))._field_tokens;
				if ((_123260_tokens.len() == 0LL)) {
					goto _iter_next_1c6441930;
				};
				{
					auto &_match_expr{ (*(_123260_tokens[0LL]))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(29LLU)) {
						_case_begin_1c6445637:;
						{
							jule::Ptr<_1bc26e69b_FnDecl> _12419_f = _1bcdac409_buildFn(_self_, &(_123260_tokens), true, true);;
							if ((_12419_f == nullptr)) {
								goto _match_end_1c6442c83;
							};
							_1bcdb06a4_checkMethodReceiver(_self_, &(_12419_f));
							if (((*(_12419_f))._field_Generics.len() > 0LL)) {
								_1bcda626b_pushErr(_self_, (*_12419_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("trait methods cannot have generics", 34)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Methods; __jule_push_dest.push(_12419_f); };
						}
					}
					else {
						_case_begin_1c6442579:;
						{
							jule::I32 _12519_i = 0LL;;
							jule::Ptr<_1bc25c90e_TypeDecl> _12529_ti;
							jule::Bool _125213_ok;
							({
								__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_123260_tokens), (&(_12519_i)), true);
								_12529_ti = __jule_assign_result.__jule_result_arg0;
								_125213_ok = __jule_assign_result.__jule_result_arg1;
							});
							if ((!(_125213_ok))) {
								goto _match_end_1c6442c83;
							};
							if ((_12519_i < _123260_tokens.len())) {
								_1bcda626b_pushErr(_self_.ptr(), _123260_tokens[_12519_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							};
							{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = (*((*(_123236_t))))._field_Inherits; __jule_push_dest.push(_12529_ti); };
						}
					}
					_match_end_1c6442c83:;
				};
			}
			_iter_next_1c6441930:;
			++it;
			goto _iter_begin_1c6441930;
		}
		_iter_end_1c6441930:;
	};
}



inline jule::Ptr<_1bc278c5a_TraitDecl> _1bcdb0d58_buildTraitDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _126436_tokens) {
	if (((*(_126436_tokens)).len() < 3LL)) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_126436_tokens))[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc278c5a_TraitDecl> _12697_t = jule::new_ptr<_1bc278c5a_TraitDecl>(_1bc278c5a_TraitDecl{._field_Token=(*(_126436_tokens))[1LL], ._field_End=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Public=false, ._field_Inherits=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>>(nullptr)});;
	if (((*((*(_12697_t))._field_Token))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	(*(_12697_t))._field_Ident=(*((*_12697_t.alloc)._field_Token))._field_Kind;
	jule::I32 _12777_i = 2LL;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _12787_bodyTokens = _1bcda3e39_range(&(_12777_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), _126436_tokens);;
	if ((_12787_bodyTokens == nullptr)) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, (*_12697_t.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_12777_i < (*(_126436_tokens)).len())) {
		_1bcda626b_pushErr(_self_.ptr(), (*(_126436_tokens))[_12777_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*_12697_t.alloc)._field_Public=_1bc4071e6_IsPub((*_12697_t.alloc)._field_Ident);
	_1bcdb0a17_buildTraitBody(_self_, &(_12697_t), _12787_bodyTokens);
	(*_12697_t.alloc)._field_End=(*(_126436_tokens))[(_12777_i - 1LL)];
	return _12697_t;;
}



inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdb1199_buildBindFn(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _129432_tokens) {
	(_129432_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc26e69b_FnDecl> _12967_f = _1bcdac409_buildFn(_self_, &(_129432_tokens), false, true);;
	if ((_12967_f != nullptr)) {
		(*_12967_f.alloc)._field_Public=false;
		(*_12967_f.alloc)._field_Binded=true;
	};
	return _12967_f;;
}



inline jule::Ptr<_1bc270856_VarDecl> _1bcdb14da_buildBindVar(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _130433_tokens) {
	(_130433_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc270856_VarDecl> _13067_v = _1bcda903d_buildVar(_self_, _130433_tokens);;
	if ((_13067_v != nullptr)) {
		(*_13067_v.alloc)._field_Public=false;
		(*_13067_v.alloc)._field_Binded=true;
		if (((*_13067_v.alloc)._field_Expr != nullptr)) {
			_1bcda626b_pushErr(_self_, (*_13067_v.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("binded variables cannot have expression", 39)), jule::Slice<jule::Any>());
		};
	};
	return _13067_v;;
}



inline jule::Ptr<_1bc27851d_StructDecl> _1bcdb182b_buildBindStruct(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _131736_tokens) {
	(_131736_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc27851d_StructDecl> _13197_s = _1bcdb03eb_buildStructDecl(_self_, &(_131736_tokens));;
	if ((_13197_s != nullptr)) {
		(*_13197_s.alloc)._field_Public=false;
		{
			auto expr = &((*_13197_s.alloc)._field_Fields);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c645513b:;
			if (it != expr_end) {
				jule::Ptr<_1bc277b27_FieldDecl> _132216_f = *it;
				{
					(*(_132216_f))._field_Public=true;
				}
				_iter_next_1c645513b:;
				++it;
				goto _iter_begin_1c645513b;
			}
			_iter_end_1c645513b:;
		};
		(*_13197_s.alloc)._field_Binded=true;
	};
	return _13197_s;;
}



inline jule::Ptr<_1bc274508_TypeAliasDecl> _1bcdb1b6c_buildBindTypeAlias(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _133139_tokens) {
	(_133139_tokens).mut_slice(1LL);;
	jule::Ptr<_1bc274508_TypeAliasDecl> _13337_t = _1bcda81b3_buildTypeAliasDecl(_self_, &(_133139_tokens));;
	if ((_13337_t != nullptr)) {
		(*_13337_t.alloc)._field_Public=false;
		(*_13337_t.alloc)._field_Binded=true;
	};
	return _13337_t;;
}



inline jule::Ptr<_1bc27585b_UseDecl> _1bcdb1ead_buildBindUse(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _134133_tokens) {
	if ((_134133_tokens.len() == 1LL)) {
		_1bcda626b_pushErr(_self_.ptr(), _134133_tokens[0LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_134133_tokens).mut_slice(1LL);;
	;
	return _1bcdacecb_buildUseDecl(_self_.ptr(), _134133_tokens, true);;
}



inline jule::Any _1bcdb22ee_buildBind(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _135231_tokens) {
	jule::Ptr<_1bc247014_Token> _13537_token = (*(_135231_tokens))[0LL];;
	if (((*(_135231_tokens)).len() == 1LL)) {
		_1bcda626b_pushErr(_self_.ptr(), _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_13537_token=(*(_135231_tokens))[1LL];
	{
		auto &_match_expr{ (*(_13537_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c645b1ec:;
			{
				return jule::Any(_1bcdb1199_buildBindFn(_self_, (*(_135231_tokens))), &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(30LLU)) {
			_case_begin_1c645ad56:;
			{
				return jule::Any(_1bcdb14da_buildBindVar(_self_, (*(_135231_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1c645adbc:;
			{
				return jule::Any(_1bcdb182b_buildBindStruct(_self_, (*(_135231_tokens))), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c645ae33:;
			{
				return jule::Any(_1bcdb1b6c_buildBindTypeAlias(_self_, (*(_135231_tokens))), &__jule_any_type51);;
			}
		}
		else {
			_case_begin_1c645a806:;
			{
				_1bcda626b_pushErr(_self_, _13537_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c645ace0:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc26e69b_FnDecl> _1bcdb2640_getMethod(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _137631_tokens) {
	jule::I32 _13777_i = 0LL;;
	jule::Ptr<_1bc247014_Token> _13787_token = (*(_137631_tokens))[_13777_i];;
	if (((*(_13787_token))._field_Id == static_cast<jule::U32>(34LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1bcda626b_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*(_13787_token))._field_Id == static_cast<jule::U32>(31LLU))) {
		if (((_13777_i + 1LL) >= (*(_137631_tokens)).len())) {
			_1bcda626b_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(_13777_i)++;
		_13787_token=(*(_137631_tokens))[_13777_i];
	};
	if (((*(_13787_token))._field_Id != static_cast<jule::U32>(29LLU))) {
		_1bcda626b_pushErr(_self_.ptr(), _13787_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _1bcdac409_buildFn(_self_, _137631_tokens, true, false);;
}



inline void _1bcdb29a3_parseImplBody(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc2793ba_Impl>* _140535_ipl, jule::Slice<jule::Ptr<_1bc247014_Token>>* _140557_tokens) {
	jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _14067_stmts = _1bcd87093_splitStmts(_140557_tokens);;
	{
		auto expr = &(_14067_stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c646415b:;
		if (it != expr_end) {
			jule::Ptr<_1bcd86bdb_stmt> _140715_stmt = *it;
			{
				(*(_140557_tokens))=(*(_140715_stmt))._field_tokens;
				jule::Ptr<_1bc247014_Token> _14098_token = (*(_140557_tokens))[0LL];;
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(35LLU)) {
						_case_begin_1c64651e5:;
						{
							_1bcda7019_pushDirective(_self_.ptr(), _1bcda6c61_buildDirective(_self_, (*(_140557_tokens))));
							goto _iter_next_1c646415b;
						}
					}
					_match_end_1c6465437:;
				};
				{
					auto &_match_expr{ (*(_14098_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(6LLU)) {
						_case_begin_1c6466a43:;
						{
							jule::Ptr<_1bc270856_VarDecl> _14189_v = _1bcda903d_buildVar(_self_, (*(_140557_tokens)));;
							if ((_14189_v != nullptr)) {
								{ jule::Slice<jule::Ptr<_1bc270856_VarDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Statics; __jule_push_dest.push(_14189_v); };
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(34LLU) || _match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1c646667a:;
						{
							jule::Ptr<_1bc26e69b_FnDecl> _14259_f = _1bcdb2640_getMethod(_self_, _140557_tokens);;
							if ((_14259_f != nullptr)) {
								_1bcdb06a4_checkMethodReceiver(_self_, &(_14259_f));
								_1bcdb33dd_applyFnMeta(_self_, &(_14259_f));
								{ jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>> &__jule_push_dest = (*((*(_140535_ipl))))._field_Methods; __jule_push_dest.push(_14259_f); };
							};
						}
					}
					else {
						_case_begin_1c646558b:;
						{
							_1bcda626b_pushErr(_self_, _14098_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
							goto _iter_next_1c646415b;
						}
					}
					_match_end_1c6465a53:;
				};
			}
			_iter_next_1c646415b:;
			++it;
			goto _iter_begin_1c646415b;
		}
		_iter_end_1c646415b:;
	};
}



inline jule::Ptr<_1bc2793ba_Impl> _1bcdb2ce4_buildImpl(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _143830_tokens) {
	jule::Ptr<_1bc247014_Token> _14397_token = _143830_tokens[0LL];;
	if ((_143830_tokens.len() < 2LL)) {
		_1bcda626b_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::I32 _14457_i = 1LL;;
	jule::Ptr<_1bc25c90e_TypeDecl> _14477_base;
	jule::Bool _144717_ok;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		_14477_base = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1bcda626b_pushErr(_self_.ptr(), _14397_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc2793ba_Impl> _14567_ipl = jule::new_ptr<_1bc2793ba_Impl>(_1bc2793ba_Impl{._field_End=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Base=_14477_base, ._field_Dest=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Methods=jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1bc270856_VarDecl>>(nullptr)});;
	_14397_token=_143830_tokens[_14457_i];
	if (((*(_14397_token))._field_Id != static_cast<jule::U32>(9LLU))) {
		if (((*_14397_token.alloc)._field_Id == static_cast<jule::U32>(72LLU))) {
			std::swap((*(_14567_ipl))._field_Base, (*_14567_ipl.alloc)._field_Dest);
			goto _julec_label_1c647339b;
		};
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(_14457_i)++;
	if ((_14457_i >= _143830_tokens.len())) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType(_self_, &(_143830_tokens), (&(_14457_i)), true);
		(*(_14567_ipl))._field_Dest = __jule_assign_result.__jule_result_arg0;
		_144717_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_144717_ok))) {
		return nullptr;;
	};
	if ((_14457_i >= _143830_tokens.len())) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_julec_label_1c647339b:;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _14947_bodyTokens = _1bcda3e39_range(&(_14457_i), static_cast<jule::U32>(72LLU), static_cast<jule::U32>(73LLU), &(_143830_tokens));;
	if ((_14947_bodyTokens == nullptr)) {
		_1bcda5ab7_stop(_self_.ptr());
		_1bcda626b_pushErr(_self_, _14397_token, static_cast<jule::Str>(jule::Str::lit("body is not exist", 17)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected a body, bodies should start in same line with their definition and declared with braces \"{ }\"", 102)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if ((_14457_i < _143830_tokens.len())) {
		_1bcda626b_pushErr(_self_.ptr(), _143830_tokens[_14457_i], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
	};
	(*(_14567_ipl))._field_End=_143830_tokens[(_14457_i - 1LL)];
	_1bcdb29a3_parseImplBody(_self_, &(_14567_ipl), &(_14947_bodyTokens));
	return _14567_ipl;;
}



inline jule::Any _1bcdb3135_buildNodeData(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _150935_tokens) {
	jule::Ptr<_1bc247014_Token> _15107_token = (*(_150935_tokens))[0LL];;
	{
		auto &_match_expr{ (*(_15107_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(29LLU) || _match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c6478549:;
			{
				jule::Ptr<_1bc26e69b_FnDecl> _15148_f = _1bcdac409_buildFn(_self_, _150935_tokens, false, false);;
				if ((_15148_f != nullptr)) {
					(*_15148_f.alloc)._field_Global=true;
				};
				return jule::Any(_15148_f, &__jule_any_type68);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(30LLU) || _match_expr == static_cast<jule::U32>(6LLU) || _match_expr == static_cast<jule::U32>(32LLU) || _match_expr == static_cast<jule::U32>(34LLU)) {
			_case_begin_1c6478c53:;
			{
				return jule::Any(_1bcda903d_buildVar(_self_, (*(_150935_tokens))), &__jule_any_type50);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(7LLU)) {
			_case_begin_1c6478cb9:;
			{
				return jule::Any(_1bcda81b3_buildTypeAliasDecl(_self_, _150935_tokens), &__jule_any_type51);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(20LLU)) {
			_case_begin_1c647815e:;
			{
				return _1bcdae928_buildNodeEnumDecl(_self_, _150935_tokens);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(21LLU)) {
			_case_begin_1c64781c5:;
			{
				return jule::Any(_1bcdb03eb_buildStructDecl(_self_, _150935_tokens), &__jule_any_type67);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(25LLU)) {
			_case_begin_1c647823b:;
			{
				return jule::Any(_1bcdb0d58_buildTraitDecl(_self_, _150935_tokens), &__jule_any_type69);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(26LLU)) {
			_case_begin_1c64782a2:;
			{
				return jule::Any(_1bcdb2ce4_buildImpl(_self_, (*(_150935_tokens))), &__jule_any_type66);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c6478318:;
			{
				return _1bcdb22ee_buildBind(_self_, _150935_tokens);;
			}
		}
		else {
			_case_begin_1c6477d62:;
			{
				_1bcda626b_pushErr(_self_, _15107_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c64780e8:;
	};
}



inline void _1bcdb33dd_applyFnMeta(_1bcda5787_parser* _self_, jule::Ptr<_1bc26e69b_FnDecl>* _154232_f) {
	(*((*(_154232_f))))._field_Directives=(*(_self_))._field_directives;
	(*(_self_))._field_directives=nullptr;
}



inline void _1bcdb3696_applyMeta(_1bcda5787_parser* _self_, _1bc25b90d_Node* _154730_node) {
	{
		auto &_match_expr{ (*(_154730_node))._field_Data };
		
		if (_match_expr.type == &__jule_any_type50) {
			_case_begin_1c6480045:;
			{
				jule::Ptr<_1bc270856_VarDecl> _15508_v = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1bc270856_VarDecl>();;
				if ((_15508_v == nullptr)) {
					return;;
				};
				(*(_15508_v))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		else if (_match_expr.type == &__jule_any_type68) {
			_case_begin_1c647ec9d:;
			{
				jule::Ptr<_1bc26e69b_FnDecl> _15578_f = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1bc26e69b_FnDecl>();;
				if ((_15578_f == nullptr)) {
					return;;
				};
				_1bcdb33dd_applyFnMeta(_self_, &(_15578_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type67) {
			_case_begin_1c64800de:;
			{
				jule::Ptr<_1bc27851d_StructDecl> _15638_sd = (*(_154730_node))._field_Data.unsafe_cast_ptr<_1bc27851d_StructDecl>();;
				if ((_15638_sd == nullptr)) {
					return;;
				};
				(*(_15638_sd))._field_Directives=(*(_self_))._field_directives;
				(*(_self_))._field_directives=nullptr;
			}
		}
		_match_end_1c647eeac:;
	};
}



inline void _1bcdb394e_pushUseDecl(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc27585b_UseDecl>* _157233_decl) {
	(*((*(_self_))._field_ast))._field_UseDecls=jule::append((*(*(_self_))._field_ast.alloc)._field_UseDecls,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27585b_UseDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_157233_decl)); __jule_collection; }));
	if (((*(*(_self_))._field_ast.alloc)._field_Nodes.len() > 0LL)) {
		_1bcda626b_pushErr(_self_, (*((*(_157233_decl))))._field_Token, static_cast<jule::Str>(jule::Str::lit("use declarations must declared top of source code", 49)), jule::Slice<jule::Any>());
		_1bcda65ce_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("move this use declaration to top of source file", 47)), jule::Slice<jule::Any>());
	};
}



inline jule::Bool _1bcdb3c90_pushMetaNodes(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _158035_tokens) {
	{
		auto &_match_expr{ (*((*(_158035_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(16LLU)) {
			_case_begin_1c64866ab:;
			{
				;
				jule::Ptr<_1bc27585b_UseDecl> _15848_decl = _1bcdacecb_buildUseDecl(_self_.ptr(), (*(_158035_tokens)), false);;
				_1bcdb394e_pushUseDecl(_self_, &(_15848_decl));
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c6486733:;
			{
				if ((((*(_158035_tokens)).len() > 1LL) && ((*((*(_158035_tokens))[1LL]))._field_Id == static_cast<jule::U32>(16LLU)))) {
					jule::Ptr<_1bc27585b_UseDecl> _15899_decl = _1bcdb1ead_buildBindUse(_self_, (*(_158035_tokens)));;
					_1bcdb394e_pushUseDecl(_self_, &(_15899_decl));
					return true;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(35LLU)) {
			_case_begin_1c6486799:;
			{
				_1bcda7019_pushDirective(_self_, _1bcda6c61_buildDirective(_self_, (*(_158035_tokens))));
				return true;;
			}
		}
		_match_end_1c648659b:;
	};
	return false;;
}



inline _1bc25b90d_Node _1bcdb40d1_parseNode(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _160031_st) {
	_1bc25b90d_Node _16017_node = _1bc25b90d_Node{._field_Token=(*(_160031_st))[0LL], ._field_Data=jule::Any(nullptr)};;
	if (_1bcdb3c90_pushMetaNodes(_self_, _160031_st)) {
		return _16017_node;;
	};
	jule::Any _16097_data = _1bcdb3135_buildNodeData(_self_, _160031_st);;
	if ((_16097_data == nullptr)) {
		return _16017_node;;
	};
	_16017_node._field_Data=_16097_data;
	_1bcdb3696_applyMeta(_self_, &(_16017_node));
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1bcda626b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
	(*_self_.alloc)._field_directives=nullptr;
	return _16017_node;;
}



inline void _1bcdb4389_appendNode(jule::Ptr<_1bcda5787_parser> _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _162432_st) {
	if (((*(_162432_st)).len() == 0LL)) {
		return;;
	};
	_1bc25b90d_Node _16287_node = _1bcdb40d1_parseNode(_self_, _162432_st);;
	if (((_16287_node._field_Data != nullptr) && (!(_1bcda5d4d_stopped(_self_))))) {
		(*((*_self_.alloc)._field_ast))._field_Nodes=jule::append((*(*(_self_))._field_ast.alloc)._field_Nodes,({ auto __jule_collection = jule::Slice<_1bc25b90d_Node>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16287_node; __jule_collection; }));
	};
}



inline void _1bcdb4862_removeRange(_1bcda5787_parser* _self_, jule::I32 _163427_i, jule::U32 _163435_id, jule::Slice<jule::Ptr<_1bc247014_Token>>* _163451_tokens, jule::Slice<jule::I32>* _163481_ranges) {
	jule::U32 _16353_close = _1bcda4940_getCloseOfBrace(_163435_id);;
	for (; (_163427_i >= 0LL); (_163427_i)--) {
		{
			jule::Ptr<_1bc247014_Token> _16374_tok = (*(_163451_tokens))[(*(_163481_ranges))[_163427_i]];;
			if (((*(_16374_tok))._field_Id != _16353_close)) {
				goto _iter_next_1c660231b;
			};
			(*(_163481_ranges))=jule::append((*(_163481_ranges)).slice(0LL, _163427_i),(*(_163481_ranges)).slice((_163427_i + 1LL)));
			goto _iter_end_1c660231b;
		}
	_iter_next_1c660231b:;
	}
	_iter_end_1c660231b:;;
}



inline void _1bcdb4c80_pushWrongOrderCloseErr(_1bcda5787_parser* _self_, jule::Ptr<_1bc247014_Token>* _164639_t, jule::Slice<jule::Ptr<_1bc247014_Token>>* _164658_tokens, jule::Slice<jule::I32>* _164684_ranges) {
	{
		auto &_match_expr{ (*((*(_164658_tokens))[(*(_164684_ranges))[((*(_164684_ranges)).len() - 1LL)]]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(74LLU)) {
			_case_begin_1c660472a:;
			{
				_1bcda626b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected parentheses close", 30)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(72LLU)) {
			_case_begin_1c66047a2:;
			{
				_1bcda626b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected brace close", 24)), jule::Slice<jule::Any>());
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1c6604818:;
			{
				_1bcda626b_pushErr(_self_, (*(_164639_t)), static_cast<jule::Str>(jule::Str::lit("was expected bracket close", 26)), jule::Slice<jule::Any>());
			}
		}
		_match_end_1c660461a:;
	};
}



inline void _1bcdb5258_pushRangeClose(_1bcda5787_parser* _self_, jule::Ptr<_1bc247014_Token> _165730_t, jule::U32 _165748_left, jule::Slice<jule::Ptr<_1bc247014_Token>>* _165766_tokens, jule::Slice<jule::I32>* _165796_ranges) {
	jule::I32 _16583_n = (*(_165796_ranges)).len();;
	if ((_16583_n == 0LL)) {
		{
			auto &_match_expr{ (*(_165730_t))._field_Id };
			
			if (_match_expr == static_cast<jule::U32>(77LLU)) {
				_case_begin_1c660782c:;
				{
					_1bcda626b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed brackets", 21)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(73LLU)) {
				_case_begin_1c66078a4:;
				{
					_1bcda626b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed braces", 19)), jule::Slice<jule::Any>());
				}
			}
			else if (_match_expr == static_cast<jule::U32>(75LLU)) {
				_case_begin_1c660791a:;
				{
					_1bcda626b_pushErr(_self_, _165730_t, static_cast<jule::Str>(jule::Str::lit("extra closed parentheses", 24)), jule::Slice<jule::Any>());
				}
			}
			_match_end_1c6607761:;
		};
		return;;
	} else if (((*((*(_165766_tokens))[(*(_165796_ranges))[(_16583_n - 1LL)]]))._field_Id != _165748_left)) {
		_1bcdb4c80_pushWrongOrderCloseErr(_self_, &(_165730_t), _165766_tokens, _165796_ranges);
	};
	_1bcdb4862_removeRange(_self_, (_16583_n - 1LL), (*(_165730_t))._field_Id, _165766_tokens, _165796_ranges);
}



inline void _1bcdb5511_checkRanges(_1bcda5787_parser* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>>* _167528_tokens) {
	jule::Slice<jule::I32> _167611_ranges = nullptr;;
	{
		auto expr = _167528_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c660abe8:;
		if (it != expr_end) {
			jule::I32 _16787_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> *_167810_token = it;
			{
				{
					auto &_match_expr{ (*((*(_167810_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c660bb2d:;
						{
							{ jule::Slice<jule::I32> &__jule_push_dest = _167611_ranges; __jule_push_dest.push(_16787_i); };
						}
					}
					else if (_match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c660bbb6:;
						{
							_1bcdb5258_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(74LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU)) {
						_case_begin_1c660bc2c:;
						{
							_1bcdb5258_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(72LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1c660bc93:;
						{
							_1bcdb5258_pushRangeClose(_self_, (*(_167810_token)), static_cast<jule::U32>(76LLU), _167528_tokens, &(_167611_ranges));
						}
					}
					_match_end_1c660ba62:;
				};
			}
			_iter_next_1c660abe8:;
			++it;
			_16787_i++;
			goto _iter_begin_1c660abe8;
		}
		_iter_end_1c660abe8:;
	};
	{
		auto expr = &(_167611_ranges);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c660ddc7:;
		if (it != expr_end) {
			jule::I32 _169310_i = *it;
			{
				jule::Ptr<_1bc247014_Token> _16944_token = (*(_167528_tokens))[_169310_i];;
				{
					auto &_match_expr{ (*(_16944_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c660eb53:;
						{
							_1bcda626b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c660ebb9:;
						{
							_1bcda626b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("brace waiting to close", 22)), jule::Slice<jule::Any>());
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c660ec30:;
						{
							_1bcda626b_pushErr(_self_, _16944_token, static_cast<jule::Str>(jule::Str::lit("bracket are waiting to close", 28)), jule::Slice<jule::Any>());
						}
					}
					_match_end_1c660e8bc:;
				};
			}
			_iter_next_1c660ddc7:;
			++it;
			goto _iter_begin_1c660ddc7;
		}
		_iter_end_1c660ddc7:;
	};
}



inline void _1bcdb57b9_parse(jule::Ptr<_1bcda5787_parser> _self_, jule::Ptr<_1bc24cab9_Fileset>* _170627_f) {
	(*(_self_))._field_ast=jule::new_ptr<_1bc25aa50_AST>(_1bc25aa50_AST{._field_File=(*(_170627_f)), ._field_TopDirectives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_UseDecls=jule::Slice<jule::Ptr<_1bc27585b_UseDecl>>(nullptr), ._field_Nodes=jule::Slice<_1bc25b90d_Node>(nullptr)});
	(*_self_.alloc)._field_ep=jule::new_ptr<_1bcd94ea2_exprBuilder>(_1bcd94ea2_exprBuilder{._field_p=_self_});
	_1bcdb5511_checkRanges(_self_, &((*((*(_170627_f))))._field_Tokens));
	if (((*_self_.alloc)._field_errors.len() > 0LL)) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _17197_stmts = _1bcd87093_splitStmts(&((*((*(_170627_f))))._field_Tokens));;
	jule::I32 _17227_i = 0LL;;
	for (; (_17227_i < _17197_stmts.len()); (_17227_i)++) {
		{
			jule::Ptr<_1bcd86bdb_stmt> _17248_stmt = _17197_stmts[_17227_i];;
			if (((*(_17248_stmt))._field_tokens.len() < 2LL)) {
				return;;
			};
			if (((*((*(_17248_stmt))._field_tokens[0LL]))._field_Id != static_cast<jule::U32>(35LLU))) {
				goto _iter_end_1c66139ae;
			};
			if ((!(_1a9577b4e_IsTopDirective((*((*(_17248_stmt))._field_tokens[1LL]))._field_Kind)))) {
				goto _iter_end_1c66139ae;
			};
			(*((*_self_.alloc)._field_ast))._field_TopDirectives=jule::append((*(*(_self_))._field_ast.alloc)._field_TopDirectives,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bcda6c61_buildDirective(_self_, (*(_17248_stmt))._field_tokens); __jule_collection; }));
		}
	_iter_next_1c66139ae:;
	}
	_iter_end_1c66139ae:;;
	(*_self_.alloc)._field_errors=nullptr;
	for (; ((_17227_i < _17197_stmts.len()) && (!(_1bcda5d4d_stopped(_self_)))); (_17227_i)++) {
		{
			jule::Ptr<_1bcd86bdb_stmt> _17418_stmt = _17197_stmts[_17227_i];;
			_1bcdb4389_appendNode(_self_, &((*(_17418_stmt))._field_tokens));
		}
	_iter_next_1c66169b2:;
	}
	_iter_end_1c66169b2:;;
	if (((*_self_.alloc)._field_directives.len() != 0LL)) {
		_1bcda626b_pushErr(_self_, (*((*_self_.alloc)._field_directives[0LL]))._field_Tag, static_cast<jule::Str>(jule::Str::lit("this directive is out of scope, put it where it will be useful or delete it", 75)), jule::Slice<jule::Any>());
	};
}







inline void _1bcdb7018_pushErr(_1bcdb6941_typeBuilder* _self_, jule::Ptr<_1bc247014_Token> _3123_token, jule::Str _3145_fmt) {
	if ((*(_self_))._field_err) {
		_1bcda626b_pushErr((*(_self_))._field_p.ptr(), _3123_token, _3145_fmt, jule::Slice<jule::Any>());
	};
}



inline void _1bcdb737b_pushSuggestion(_1bcdb6941_typeBuilder* _self_, jule::Str _3830_fmt, jule::Slice<jule::Any> _3850_args) {
	if ((*(_self_))._field_err) {
		_1bcda65ce_pushSuggestion((*(_self_))._field_p.ptr(), _3830_fmt, _3850_args);
	};
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb7612_buildNamespace(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc25c90e_TypeDecl> _457_t = jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))], ._field_Kind=jule::Any(nullptr)});;
	jule::Ptr<_1bc25d6ac_NamespaceTypeDecl> _487_ns = jule::new_ptr<_1bc25d6ac_NamespaceTypeDecl>(_1bc25d6ac_NamespaceTypeDecl{._field_Namespace=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Kind=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr)});;
	(*_487_ns.alloc)._field_Namespace=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if ((((*((*_487_ns.alloc)._field_Namespace))._field_Id != static_cast<jule::U32>(1LLU)) && ((*(*(_487_ns))._field_Namespace.alloc)._field_Id != static_cast<jule::U32>(31LLU)))) {
		_1bcdb7018_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bcdb737b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1bcdb7018_pushErr(_self_, (*_487_ns.alloc)._field_Namespace, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bcdb737b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(19LLU))) {
		_1bcdb7018_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bcdb737b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("expected double colon \"::\"", 26)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*(_self_))._field_tokens.len() <= (*((*(_self_))._field_i)))) {
		_1bcdb7018_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		_1bcdb737b_pushSuggestion(_self_, static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*_487_ns.alloc)._field_Kind=_1bcdb7db5_buildIdent(_self_);
	(*(_457_t))._field_Kind=jule::Any(_487_ns, &__jule_any_type94);
	return _457_t;;
}



inline jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _1bcdb7898_buildGenerics(_1bcdb6941_typeBuilder* _self_) {
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		return nullptr;;
	};
	jule::Ptr<_1bc247014_Token> _803_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if (((*(_803_token))._field_Id != static_cast<jule::U32>(76LLU))) {
		return nullptr;;
	};
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _857_parts = _1bcdb7b2e_identGenerics(_self_);;
	if ((_857_parts.len() == 0LL)) {
		_1bcdb7018_pushErr(_self_, _803_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> _917_types = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>::alloc(0LL, _857_parts.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25c90e_TypeDecl>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6522e95:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _9215_part = *it;
			{
				jule::I32 _938_j = 0LL;;
				jule::Ptr<_1bc25c90e_TypeDecl> _948_t;
				({
					__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, &(_9215_part), (&(_938_j)), true);
					_948_t = __jule_assign_result.__jule_result_arg0;
				});
				if ((_938_j < _9215_part.len())) {
					_1bcdb7018_pushErr(_self_, _9215_part[_938_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
				};
				{ jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>> &__jule_push_dest = _917_types; __jule_push_dest.push(_948_t); };
			}
			_iter_next_1c6522e95:;
			++it;
			goto _iter_begin_1c6522e95;
		}
		_iter_end_1c6522e95:;
	};
	return _917_types;;
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bcdb7b2e_identGenerics(_1bcdb6941_typeBuilder* _self_) {
	jule::I32 _1043_first = (*((*(_self_))._field_i));;
	jule::I32 _1057_rangeN = 0LL;;
	for (; ((*((*(_self_))._field_i)) < (*(_self_))._field_tokens.len()); ((*((*(_self_))._field_i)))++) {
		{
			jule::Ptr<_1bc247014_Token> _1074_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
			{
				auto &_match_expr{ (*(_1074_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(76LLU)) {
					_case_begin_1c652752c:;
					{
						(_1057_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1c652785c:;
					{
						(_1057_rangeN)--;
					}
				}
				_match_end_1c65275a4:;
			};
			if ((_1057_rangeN == 0LL)) {
				((*((*(_self_))._field_i)))++;
				goto _iter_end_1c65266c4;
			};
		}
	_iter_next_1c65266c4:;
	}
	_iter_end_1c65266c4:;;
	jule::Slice<jule::Ptr<_1bc247014_Token>> _1197_tokens = (*(_self_))._field_tokens.slice((_1043_first + 1LL), ((*((*(_self_))._field_i)) - 1LL));;
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1207_parts;
	jule::Slice<_1a9575ca1_Log> _12014_errors;
	({
		__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcda46a9_parts(&(_1197_tokens), static_cast<jule::U32>(5LLU), true);
		_1207_parts = __jule_assign_result.__jule_result_arg0;
		_12014_errors = __jule_assign_result.__jule_result_arg1;
	});
	if ((*(_self_))._field_err) {
		(*((*(_self_))._field_p))._field_errors=jule::append((*(*(_self_))._field_p.alloc)._field_errors,_12014_errors);
	};
	return _1207_parts;;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb7db5_buildIdent(_1bcdb6941_typeBuilder* _self_) {
	jule::Bool _1287_next = (((*((*(_self_))._field_i)) + 1LL) < (*(_self_))._field_tokens.len());;
	if ((_1287_next && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return _1bcdb7612_buildNamespace(_self_);;
	};
	jule::Ptr<_1bc247014_Token> _1327_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1bc25d019_IdentTypeDecl> _1337_it = jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=_1327_token, ._field_Ident=(*(_1327_token))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)});;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1bc25c90e_TypeDecl> _1397_itd = jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1337_it, &__jule_any_type78)});;
	if (((!(_1287_next)) || ((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		(*(_1337_it))._field_Generics=_1bcdb7898_buildGenerics(_self_);
		return _1397_itd;;
	};
	if ((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) == 1LL)) {
		_1bcdb7018_pushErr(_self_, _1327_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id != static_cast<jule::U32>(1LLU))) {
		_1bcdb7018_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return _1397_itd;;
	};
	jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> _1567_sit = jule::new_ptr<_1bc25d2d3_SubIdentTypeDecl>(_1bc25d2d3_SubIdentTypeDecl{._field_Idents=jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>>(nullptr)});;
	(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1337_it; __jule_collection; }));
	jule::Ptr<_1bc25c90e_TypeDecl> _1587_ident = _1bcdb7db5_buildIdent(_self_);;
	{
		auto &_match_expr{ (*(_1587_ident))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type78) {
			_case_begin_1c65334d3:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_1587_ident))._field_Kind.cast_ptr<_1bc25d019_IdentTypeDecl>(&__jule_any_type78); __jule_collection; }));
			}
		}
		else if (_match_expr.type == &__jule_any_type90) {
			_case_begin_1c652c8d9:;
			{
				(*_1567_sit.alloc)._field_Idents=jule::append((*_1567_sit.alloc)._field_Idents,(*((*(_1587_ident))._field_Kind.unsafe_cast_ptr<_1bc25d2d3_SubIdentTypeDecl>()))._field_Idents);
			}
		}
		_match_end_1c653345b:;
	};
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_1327_token, ._field_Kind=jule::Any(_1567_sit, &__jule_any_type90)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb814b_buildCppLink(_1bcdb6941_typeBuilder* _self_) {
	if (((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len()) || ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id != static_cast<jule::U32>(17LLU)))) {
		_1bcdb7018_pushErr(_self_, (*(_self_))._field_tokens[(*((*(_self_))._field_i))], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	(*((*(_self_))._field_i))+=2LL;
	jule::Ptr<_1bc25c90e_TypeDecl> _1777_t = _1bcdb7db5_buildIdent(_self_);;
	(*((*(_1777_t))._field_Kind.cast_ptr<_1bc25d019_IdentTypeDecl>(&__jule_any_type78)))._field_Binded=true;
	return _1777_t;;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb83d2_buildFn(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _1837_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	jule::Ptr<_1bc26e69b_FnDecl> _1847_f = _1bcdabe53_buildFnPrototype((*(_self_))._field_p, &((*(_self_))._field_tokens), &((*((*(_self_))._field_i))), false);;
	if ((_1847_f == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc26ea42_IsAnon(_1847_f.ptr())))) {
		_1bcdb7018_pushErr(_self_, (*_1847_f.alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_1837_token, ._field_Kind=jule::Any(_1847_f, &__jule_any_type68)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb8668_buildPtr(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _1987_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1bcdb7018_pushErr(_self_, _1987_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_tokens[(*((*(_self_))._field_i))]))._field_Id == static_cast<jule::U32>(31LLU))) {
		((*((*(_self_))._field_i)))++;
		return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc25e438_PtrTypeDecl>(_1bc25e438_PtrTypeDecl{._field_Elem=nullptr}), &__jule_any_type74)});;
	};
	jule::Ptr<_1bc25c90e_TypeDecl> _2157_elem = _1bcdb96be_step(_self_);;
	if ((_2157_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_1987_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc25e438_PtrTypeDecl>(_1bc25e438_PtrTypeDecl{._field_Elem=_2157_elem}), &__jule_any_type74)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb88ee_buildSptr(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _2297_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 1LL) >= (*(_self_))._field_tokens.len())) {
		_1bcdb7018_pushErr(_self_, _2297_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1bc25c90e_TypeDecl> _2367_elem = _1bcdb96be_step(_self_);;
	if ((_2367_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_2297_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc25d9a9_SptrTypeDecl>(_1bc25d9a9_SptrTypeDecl{._field_Elem=_2367_elem}), &__jule_any_type75)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb8b85_buildSlc(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _2507_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	jule::Ptr<_1bc25c90e_TypeDecl> _2527_elem = _1bcdb96be_step(_self_);;
	if ((_2527_elem == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_2507_token, ._field_Kind=jule::Any(jule::new_ptr<_1bc25dd3e_SlcTypeDecl>(_1bc25dd3e_SlcTypeDecl{._field_Elem=_2527_elem}), &__jule_any_type73)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb8e1b_buildArr(_1bcdb6941_typeBuilder* _self_) {
	jule::Slice<jule::Ptr<_1bc247014_Token>> _2657_exprTokens = _1bcda3e39_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bcdb7018_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1bc25c90e_TypeDecl> _2717_elem = _1bcdb96be_step(_self_);;
	if ((_2717_elem == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc25ebca_ArrTypeDecl> _2767_arrt = jule::new_ptr<_1bc25ebca_ArrTypeDecl>(_1bc25ebca_ArrTypeDecl{._field_Elem=_2717_elem, ._field_Size=jule::Ptr<_1bc261c43_Expr>(nullptr)});;
	jule::Ptr<_1bc247014_Token> _2807_token = _2657_exprTokens[0LL];;
	if (((_2657_exprTokens.len() == 1LL) && ((*(_2807_token))._field_Id == static_cast<jule::U32>(39LLU)))) {
	} else {
		(*(_2767_arrt))._field_Size=_1bcda6920_buildExpr((*(_self_))._field_p, &(_2657_exprTokens));
	};
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_2807_token, ._field_Kind=jule::Any(_2767_arrt, &__jule_any_type72)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb91a2_buildMap(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _2947_mapToken = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	((*((*(_self_))._field_i)))++;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bcdb7018_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Slice<jule::Ptr<_1bc247014_Token>> _3027_keyTokens = _1bcda3e39_range(&((*((*(_self_))._field_i))), static_cast<jule::U32>(76LLU), static_cast<jule::U32>(77LLU), &((*(_self_))._field_tokens));;
	if (((*((*(_self_))._field_i)) >= (*(_self_))._field_tokens.len())) {
		_1bcdb7018_pushErr(_self_, (*(_self_))._field_tokens[((*((*(_self_))._field_i)) - 1LL)], static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	} else if ((_3027_keyTokens.len() == 0LL)) {
		_1bcdb7018_pushErr(_self_, _2947_mapToken, static_cast<jule::Str>(jule::Str::lit("type missing", 12)));
		return nullptr;;
	};
	jule::Ptr<_1bc260428_MapTypeDecl> _3117_mapt = jule::new_ptr<_1bc260428_MapTypeDecl>(_1bc260428_MapTypeDecl{._field_Key=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Val=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr)});;
	jule::I32 _3127_j = 0LL;;
	jule::Ptr<_1bc25c90e_TypeDecl> _3137_keyt;
	jule::Bool _31317_ok;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, &(_3027_keyTokens), (&(_3127_j)), (*(_self_))._field_err);
		_3137_keyt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	} else if ((_3127_j < _3027_keyTokens.len())) {
		_1bcdb7018_pushErr(_self_, _3027_keyTokens[_3127_j], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	};
	(*_3117_mapt.alloc)._field_Key=_3137_keyt;
	jule::Ptr<_1bc25c90e_TypeDecl> _3217_valt;
	({
		__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_assign_result = _1bcda7d72_buildType((*(_self_))._field_p, &((*(_self_))._field_tokens), (*(_self_))._field_i, (*(_self_))._field_err);
		_3217_valt = __jule_assign_result.__jule_result_arg0;
		_31317_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_31317_ok))) {
		return nullptr;;
	};
	(*_3117_mapt.alloc)._field_Val=_3217_valt;
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=_2947_mapToken, ._field_Kind=jule::Any(_3117_mapt, &__jule_any_type76)});;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb9438_buildEnumerable(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _3337_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	if ((((*((*(_self_))._field_i)) + 2LL) >= (*(_self_))._field_tokens.len())) {
		_1bcdb7018_pushErr(_self_, _3337_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
		return nullptr;;
	};
	((*((*(_self_))._field_i)))++;
	_3337_token=(*(_self_))._field_tokens[(*((*(_self_))._field_i))];
	if (((*(_3337_token))._field_Id == static_cast<jule::U32>(77LLU))) {
		return _1bcdb8b85_buildSlc(_self_);;
	};
	((*((*(_self_))._field_i)))--;
	return _1bcdb8e1b_buildArr(_self_);;
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb96be_step(_1bcdb6941_typeBuilder* _self_) {
	jule::Ptr<_1bc247014_Token> _3483_token = (*(_self_))._field_tokens[(*((*(_self_))._field_i))];;
	{
		auto &_match_expr{ (*(_3483_token))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(1LLU)) {
			_case_begin_1c6553b1e:;
			{
				return _1bcdb7db5_buildIdent(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(27LLU)) {
			_case_begin_1c6554009:;
			{
				return _1bcdb814b_buildCppLink(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c6554070:;
			{
				if (((((*(_self_))._field_tokens.len() - (*((*(_self_))._field_i))) > 1LL) && ((*((*(_self_))._field_tokens[((*((*(_self_))._field_i)) + 1LL)]))._field_Id == static_cast<jule::U32>(29LLU)))) {
					((*((*(_self_))._field_i)))++;
					jule::Ptr<_1bc25c90e_TypeDecl> _3589_f = _1bcdb83d2_buildFn(_self_);;
					if ((_3589_f != nullptr)) {
						(*((*_3589_f.alloc)._field_Kind.cast_ptr<_1bc26e69b_FnDecl>(&__jule_any_type68)))._field_Unsafety=true;
					};
					return _3589_f;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c65540d6:;
			{
				return _1bcdb83d2_buildFn(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c655414c:;
			{
				return _1bcdb8668_buildPtr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c65541c4:;
			{
				return _1bcdb88ee_buildSptr(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c655424b:;
			{
				return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Kind=jule::Any(jule::new_ptr<_1bc25d9a9_SptrTypeDecl>(_1bc25d9a9_SptrTypeDecl{._field_Elem=_1bcdb88ee_buildSptr(_self_)}), &__jule_any_type75)});;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(76LLU)) {
			_case_begin_1c65542c3:;
			{
				return _1bcdb9438_buildEnumerable(_self_);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(37LLU)) {
			_case_begin_1c655434a:;
			{
				return _1bcdb91a2_buildMap(_self_);;
			}
		}
		_match_end_1c6553b96:;
	};
	((*((*(_self_))._field_i)))++;
	_1bcdb7018_pushErr(_self_, _3483_token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)));
	return nullptr;;
}



inline __jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool _1bcdb9955_build(_1bcdb6941_typeBuilder* _self_) {
	__jule_tuple_x_1bc25c90e_TypeDecl__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc25c90e_TypeDecl> _3897_root = _1bcdb96be_step(_self_);;
	if ((_3897_root == nullptr)) {
		__jule_func_result.__jule_result_arg0 = _1bcdb617c_buildVoidType();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _3897_root;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}








inline jule::Bool _1bc5e4c52_CompileInfo_eq(_1bc5e4c52_CompileInfo *_self_, _1bc5e4c52_CompileInfo _other_) {
	return 
		(_self_->_field_Prod == _other_._field_Prod) &&
		(_self_->_field_Test == _self_->_field_Test) &&
		(_self_->_field_Compiler == _self_->_field_Compiler) &&
		(_self_->_field_CppStd == _self_->_field_CppStd);
}





inline void _1bc5e6a23_pushErr(_1bc5e6490_directiveEval* _self_, jule::Ptr<_1bc247014_Token> _2123_t, jule::Str _2141_fmt, jule::Slice<jule::Any> _2161_args) {
	{ jule::Slice<_1a9575ca1_Log> &__jule_push_dest = (*(_self_))._field_logs; __jule_push_dest.push(_1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*(_2123_t))._field_Row, ._field_Column=(*_2123_t.alloc)._field_Column, ._field_Path=(*((*_2123_t.alloc)._field_File))._field_Path, ._field_Text=_1a9576213_Logf(_2141_fmt, _2161_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}); };
}



inline jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1bc5e6e1e_splitOperans(_1bc5e6490_directiveEval* _self_, jule::U32 _3328_op, jule::Slice<jule::Ptr<_1bc247014_Token>>* _3348_tokens) {
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _347_parts = ({ auto __jule_collection = jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>>::alloc(0LL, 10LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr); __jule_collection; });;
	jule::I32 _357_i = 0LL;;
	jule::I32 _367_rangeN = 0LL;;
	jule::I32 _377_last = 0LL;;
	for (; (_357_i < ((*(_3348_tokens)).len() - 1LL)); (_357_i)++) {
		{
			jule::Ptr<_1bc247014_Token> _394_b = (*(_3348_tokens))[_357_i];;
			{
				auto &_match_expr{ (*(_394_b))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c6577e2e:;
					{
						(_367_rangeN)++;
						goto _iter_next_1c65774a0;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c657825e:;
					{
						(_367_rangeN)--;
					}
				}
				_match_end_1c6577ea6:;
			};
			if (((_367_rangeN > 0LL) || ((*(_394_b))._field_Id != _3328_op))) {
				goto _iter_next_1c65774a0;
			};
			{ jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last, _357_i)); };
			_377_last=(_357_i + 1LL);
		}
	_iter_next_1c65774a0:;
	}
	_iter_end_1c65774a0:;;
	if ((_377_last < (*(_3348_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> &__jule_push_dest = _347_parts; __jule_push_dest.push((*(_3348_tokens)).slice(_377_last)); };
	} else {
		_1bc5e6a23_pushErr(_self_, (*(_3348_tokens))[(_377_last - 1LL)], static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	return _347_parts;;
}



inline jule::Bool _1bc5e7260_evalDirectiveIdent(_1bc5e6490_directiveEval* _self_, jule::Str _6430_ident) {
	return (_1bc5e599a_findVar((*(_self_))._field_vars, _6430_ident) >= 0LL);;
}



inline jule::Bool _1bc5e75a1_evalDirectivePart(_1bc5e6490_directiveEval* _self_, jule::Slice<jule::Ptr<_1bc247014_Token>> _7037_part) {
	jule::Bool _713_logicalNot = ((*(_7037_part[0LL]))._field_Id == static_cast<jule::U32>(68LLU));;
	if (_713_logicalNot) {
		(_7037_part).mut_slice(1LL);;
	};
	if ((_7037_part.len() > 1LL)) {
		_1bc5e6a23_pushErr(_self_, _7037_part[1LL], static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _817_result = _1bc5e7260_evalDirectiveIdent(_self_, (*(_7037_part[0LL]))._field_Kind);;
	if (_713_logicalNot) {
		_817_result=(!(_817_result));
	};
	return _817_result;;
}



inline jule::Bool _1bc5e7837_eval(_1bc5e6490_directiveEval* _self_) {
	if (((*((*(_self_))._field_d))._field_Args.len() == 0LL)) {
		_1bc5e6a23_pushErr(_self_, (*(*(_self_))._field_d.alloc)._field_Tag, static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());
		return false;;
	};
	jule::Bool _947_result = false;;
	jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _967_logicalOrParts = _1bc5e6e1e_splitOperans(_self_, static_cast<jule::U32>(55LLU), &((*((*(_self_))._field_d))._field_Args));;
	if ((_967_logicalOrParts == nullptr)) {
		return false;;
	};
	{
		auto expr = &(_967_logicalOrParts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6580e26:;
		if (it != expr_end) {
			jule::Slice<jule::Ptr<_1bc247014_Token>> _10115_part = *it;
			{
				jule::Bool _1028_and = true;;
				jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> _1038_logicalAndParts = _1bc5e6e1e_splitOperans(_self_, static_cast<jule::U32>(54LLU), &(_10115_part));;
				if ((_1038_logicalAndParts == nullptr)) {
					return false;;
				};
				{
					auto expr = &(_1038_logicalAndParts);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c65829d8:;
					if (it != expr_end) {
						jule::Slice<jule::Ptr<_1bc247014_Token>> _10816_andPart = *it;
						{
							jule::Ptr<_1bc247014_Token> _1095_first = _10816_andPart[0LL];;
							if (((*(_1095_first))._field_Id == static_cast<jule::U32>(74LLU))) {
								jule::Ptr<_1bc247014_Token> _1116_end = _10816_andPart[(_10816_andPart.len() - 1LL)];;
								if (((*(_1116_end))._field_Id != static_cast<jule::U32>(75LLU))) {
									_1bc5e6a23_pushErr(_self_, _1095_first, static_cast<jule::Str>(jule::Str::lit("parentheses waiting to close", 28)), jule::Slice<jule::Any>());
									return false;;
								};
								(_10816_andPart).mut_slice(1LL, (_10816_andPart.len() - 1LL));;
							};
							_1028_and=(_1028_and && _1bc5e75a1_evalDirectivePart(_self_, _10816_andPart));
						}
						_iter_next_1c65829d8:;
						++it;
						goto _iter_begin_1c65829d8;
					}
					_iter_end_1c65829d8:;
				};
				_947_result=(_947_result || _1028_and);
			}
			_iter_next_1c6580e26:;
			++it;
			goto _iter_begin_1c6580e26;
		}
		_iter_end_1c6580e26:;
	};
	return _947_result;;
}







inline jule::Bool _1bc5e3cc8_isPassFileAnnotation(_1bcdbaa44_Importer* _self_, jule::Str _5136_p) {
	_5136_p=_1abb3aa7d_Base(_5136_p);
	jule::I32 _533_n = _5136_p.len();;
	(_5136_p).mut_slice(0LL, (_533_n - _1abb3a4ea_Ext(_5136_p).len()));;
	if (_1abb2dd4b_HasSuffix(_5136_p, jule::Str::lit("_test", 5))) {
		if ((_1bc5e599a_findVar((*(_self_))._field_vars, jule::Str::lit("test", 4)) == -1LL)) {
			return false;;
		};
		(_5136_p).mut_slice(0LL, (_5136_p.len() - 5LL));;
	};
	jule::Str _687_a1 = jule::Str();;
	jule::Str _717_a2 = jule::Str();;
	jule::I32 _747_i = _1abb316cd_FindLastByte(_5136_p, '_');;
	if ((_747_i == -1LL)) {
		jule::Bool _778_ok;
		jule::Bool _7716_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5cd796_checkOs(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_7716_exist) {
			return _778_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5c8b04_checkArch(_5136_p);
			_778_ok = __jule_assign_result.__jule_result_arg0;
			_7716_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_7716_exist)) || _778_ok);;
	};
	if (((_747_i + 1LL) >= _533_n)) {
		return true;;
	};
	_687_a1=_5136_p.slice((_747_i + 1LL));
	(_5136_p).mut_slice(0LL, _747_i);;
	_747_i=_1abb316cd_FindLastByte(_5136_p, '_');
	if ((_747_i != -1LL)) {
		_717_a2=_5136_p.slice((_747_i + 1LL));
	};
	if ((_717_a2).empty()) {
		jule::Bool _988_ok;
		jule::Bool _9816_exist;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5cd796_checkOs(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		if (_9816_exist) {
			return _988_ok;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5c8b04_checkArch(_687_a1);
			_988_ok = __jule_assign_result.__jule_result_arg0;
			_9816_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_9816_exist)) || _988_ok);;
	};
	jule::Bool _1067_ok;
	jule::Bool _10615_exist;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5c8b04_checkArch(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	if (_10615_exist) {
		if ((!(_1067_ok))) {
			return false;;
		};
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5cd796_checkOs(_717_a2);
			_1067_ok = __jule_assign_result.__jule_result_arg0;
			_10615_exist = __jule_assign_result.__jule_result_arg1;
		});
		return ((!(_10615_exist)) || _1067_ok);;
	};
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc5cd796_checkOs(_687_a1);
		_1067_ok = __jule_assign_result.__jule_result_arg0;
		_10615_exist = __jule_assign_result.__jule_result_arg1;
	});
	return ((!(_10615_exist)) || _1067_ok);;
}



inline jule::Ptr<_1bcdbaa44_Importer> static__1bcdbae73_New(_1bc5e4c52_CompileInfo _4516_info) {
	jule::Ptr<_1bcdbaa44_Importer> _467_imp = jule::new_ptr<_1bcdbaa44_Importer>(_1bcdbaa44_Importer{._field_mods=({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1abb3dc7e_PathStdlib; __jule_collection; }), ._field_mod=jule::Str(), ._field_pkgs=jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>>(nullptr), ._field_vars=jule::Slice<jule::Str>(nullptr)});;
	_1bc5e55d2_initVars(&((*(_467_imp))._field_vars), &(_4516_info));
	return _467_imp;;
}



inline jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _1bcdbb209_AllPackages(_1bcdbaa44_Importer* _self_) {
	return (*(_self_))._field_pkgs;;
}



inline void _1bcdbb649_SetModPath(_1bcdbaa44_Importer* _self_, jule::Str _6226_path) {
	(*(_self_))._field_mod=_6226_path;
}



inline jule::Str _1bcdbb8d0_GetModPath(_1bcdbaa44_Importer* _self_) {
	return (*(_self_))._field_mod;;
}



inline jule::Str _1bcdbbc21_ModById(_1bcdbaa44_Importer* _self_, jule::I32 _7019_id) {
	return (*(_self_))._field_mods[_7019_id];;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bcdbc062_GetImport(_1bcdbaa44_Importer* _self_, jule::Str _7425_path) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c659183d:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _7515_p = *it;
			{
				if (_1abb37d33_EqualFold((*(_7515_p))._field_Path, _7425_path)) {
					return _7515_p;;
				};
			}
			_iter_next_1c659183d:;
			++it;
			goto _iter_begin_1c659183d;
		}
		_iter_end_1c659183d:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log _1bcdbc45d_ImportPackage(_1bcdbaa44_Importer* _self_, jule::Str _8429_path, jule::Bool _8440_updateMod) {
	__jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	jule::Slice<_1a9c2b05a_Dir> _857_dirents = ({
		auto except = static__1abb3d168_Read(_8429_path);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = nullptr;
			__jule_func_result.__jule_result_arg1 = ({ auto __jule_collection = jule::Slice<_1a9575ca1_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bcdba55a_flatCompilerErr((jule::Str::lit("cannot read package directory: ", 31) + _8429_path)); __jule_collection; });
			return __jule_func_result;;
		} jule::Slice<_1a9c2b05a_Dir>(nullptr);});
	});;
	if (_8440_updateMod) {
		jule::Str _904_newMod = _1bc40668a_FindModuleFileDeep(_8429_path);;
		if ((_904_newMod != (*(_self_))._field_mod)) {
			(*(_self_))._field_mod=_904_newMod;
			jule::Slice<_1a9575ca1_Log> _939_errs = _1bc406954_CheckModuleFile(&((*(_self_))._field_mod));;
			if ((_939_errs.len() != 0LL)) {
				__jule_func_result.__jule_result_arg0 = nullptr;
				__jule_func_result.__jule_result_arg1 = _939_errs;
				return __jule_func_result;;
			};
		};
	};
	jule::Slice<jule::Ptr<_1bc25aa50_AST>> _1007_asts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc25aa50_AST>>::alloc(0LL, _857_dirents.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc25aa50_AST>(nullptr); __jule_collection; });;
	{
		auto expr = &(_857_dirents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6593aa4:;
		if (it != expr_end) {
			_1a9c2b05a_Dir _10110_dirent = *it;
			{
				if ((_1a9cc4378_IsDir(&_10110_dirent._field_Stat) || (!(_1abb2dd4b_HasSuffix(_10110_dirent._field_Name, jule::Str::lit(".jule", 5)))))) {
					goto _iter_next_1c6593aa4;
				};
				jule::Str _1074__path = _1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _8429_path; (*it++) = _10110_dirent._field_Name; __jule_collection; }));;
				jule::Ptr<_1bc24cab9_Fileset> _1088_file = static__1bc24ce4e_New(_1074__path);;
				{
					_1bc24d4b0_FillMut(_1088_file.ptr(), _1bcdba24c_readBuff((*_1088_file.alloc)._field_Path));
				};
				jule::Slice<_1a9575ca1_Log> _1108_errors = _1bc25a5ee_Lex(_1088_file, static_cast<jule::I32>(0LL));;
				if ((_1108_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _1108_errors;
					return __jule_func_result;;
				};
				jule::Ptr<_1bcd36e55_FileInfo> _1158_finfo = _1bcd39c6b_ParseFile(_1088_file);;
				if (((*(_1158_finfo))._field_Errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = (*_1158_finfo.alloc)._field_Errors;
					return __jule_func_result;;
				};
				if ((!(_1bc5e3cc8_isPassFileAnnotation(_self_, _10110_dirent._field_Name)))) {
					goto _iter_next_1c6593aa4;
				};
				jule::Bool _1254_r;
				jule::Slice<_1a9575ca1_Log> _12511_logs;
				({
					__jule_tuple_bool__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcdbcb45_isPassBuildDirectives(_self_, &((*(_1158_finfo))._field_Ast));
					_1254_r = __jule_assign_result.__jule_result_arg0;
					_12511_logs = __jule_assign_result.__jule_result_arg1;
				});
				if ((_12511_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _12511_logs;
					return __jule_func_result;;
				};
				if ((!(_1254_r))) {
					goto _iter_next_1c6593aa4;
				};
				{ jule::Slice<jule::Ptr<_1bc25aa50_AST>> &__jule_push_dest = _1007_asts; __jule_push_dest.push((*(_1158_finfo))._field_Ast); };
			}
			_iter_next_1c6593aa4:;
			++it;
			goto _iter_begin_1c6593aa4;
		}
		_iter_end_1c6593aa4:;
	};
	__jule_func_result.__jule_result_arg0 = _1007_asts;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1bcdbc716_Imported(_1bcdbaa44_Importer* _self_, jule::Ptr<_1bc3dcb9e_ImportInfo> _14128_imp) {
	{
		auto expr = &((*(_self_))._field_pkgs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6595b83:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _14310_p = *it;
			{
				if ((((*(_14310_p))._field_Binded == (*(_14128_imp))._field_Binded) && _1abb37d33_EqualFold((*_14310_p.alloc)._field_Path, (*_14128_imp.alloc)._field_Path))) {
					return;;
				};
			}
			_iter_next_1c6595b83:;
			++it;
			goto _iter_begin_1c6595b83;
		}
		_iter_end_1c6595b83:;
	};
	if (((*(_self_))._field_mod.len() != 0LL)) {
		{
			auto expr = &((*(_self_))._field_mods);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c659c63a:;
			if (it != expr_end) {
				jule::I32 _1518_i = it - expr->begin();
				jule::Str _15111_mod = *it;
				{
					if (((*(_self_))._field_mod == _15111_mod)) {
						(*(_14128_imp))._field_ModId=_1518_i;
						goto _julec_label_1c659e76e;
					};
				}
				_iter_next_1c659c63a:;
				++it;
				_1518_i++;
				goto _iter_begin_1c659c63a;
			}
			_iter_end_1c659c63a:;
		};
		(*(_14128_imp))._field_ModId=(*(_self_))._field_mods.len();
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_mods; __jule_push_dest.push((*(_self_))._field_mod); };
		_julec_label_1c659e76e:;
	};
	{ jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> &__jule_push_dest = (*(_self_))._field_pkgs; __jule_push_dest.push(_14128_imp); };
}



inline __jule_tuple_bool__jule_tuple_s_1a9575ca1_Log _1bcdbcb45_isPassBuildDirectives(_1bcdbaa44_Importer* _self_, jule::Ptr<_1bc25aa50_AST>* _16842_file) {
	__jule_tuple_bool__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	{
		auto expr = &((*((*(_16842_file))))._field_TopDirectives);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c659ec8b:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _16915_td = *it;
			{
				if (((*((*(_16915_td))._field_Tag))._field_Kind != static_cast<jule::Str>(jule::Str::lit("build", 5)))) {
					goto _iter_next_1c659ec8b;
				};
				_1bc5e6490_directiveEval _1738_de = _1bc5e6490_directiveEval{._field_logs=jule::Slice<_1a9575ca1_Log>(nullptr), ._field_d=_16915_td, ._field_vars=(*(_self_))._field_vars};;
				jule::Bool _1774_result = _1bc5e7837_eval(&_1738_de);;
				if ((_1738_de._field_logs.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = _1738_de._field_logs;
					return __jule_func_result;;
				};
				if ((!(_1774_result))) {
					__jule_func_result.__jule_result_arg0 = false;
					__jule_func_result.__jule_result_arg1 = nullptr;
					return __jule_func_result;;
				};
			}
			_iter_next_1c659ec8b:;
			++it;
			goto _iter_begin_1c659ec8b;
		}
		_iter_end_1c659ec8b:;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}








inline jule::Bool _1bc547c82_anyData_eq(_1bc547c82_anyData *_self_, _1bc547c82_anyData _other_) {
	return 
		(_self_->_field_dataPtr == _other_._field_dataPtr) &&
		(_self_->_field_typePtr == _self_->_field_typePtr);
}





inline jule::Ptr<_1bcdc1b5a_ExprInspector> static__1bcdc1e8a_New(void) {
	return jule::new_ptr<_1bcdc1b5a_ExprInspector>(_1bcdc1b5a_ExprInspector{._field_SkipChild=false, ._field_handler=jule::Fn<void,jule::Any*>(nullptr)});;
}



inline void _1bcdc2243_args(_1bcdc1b5a_ExprInspector* _self_, jule::Slice<jule::Any> _2224_args) {
	{
		auto expr = &(_2224_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67729db:;
		if (it != expr_end) {
			jule::Any _2315_arg = *it;
			{
				_1bcdc24eb_inspect(_self_, &(_2315_arg));
			}
			_iter_next_1c67729db:;
			++it;
			goto _iter_begin_1c67729db;
		}
		_iter_end_1c67729db:;
	};
}



inline void _1bcdc24eb_inspect(_1bcdc1b5a_ExprInspector* _self_, jule::Any* _2828_m) {
	(*(_self_))._field_SkipChild=false;
	(*(_self_))._field_handler(_2828_m);
	if ((*(_self_))._field_SkipChild) {
		return;;
	};
	{
		auto &_match_expr{ (*(_2828_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c6773d61:;
			{
				jule::Ptr<_1bc2e1c90_BinaryExprModel> _368_b = (*(_2828_m)).cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114);;
				_1bcdc24eb_inspect(_self_, &((*((*(_368_b))._field_Left))._field_Model));
				_1bcdc24eb_inspect(_self_, &((*((*_368_b.alloc)._field_Right))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6773ed7:;
			{
				jule::Ptr<_1bc2e2169_UnaryExprModel> _408_u = (*(_2828_m)).cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113);;
				_1bcdc24eb_inspect(_self_, &((*((*(_408_u))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c6773dc7:;
			{
				jule::Ptr<_1bc2e2a3d_StructLitExprModel> _438_lit = (*(_2828_m)).cast_ptr<_1bc2e2a3d_StructLitExprModel>(&__jule_any_type98);;
				{
					auto expr = &((*(_438_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c677831b:;
					if (it != expr_end) {
						jule::Ptr<_1bc2e2697_StructArgExprModel> _4416_arg = *it;
						{
							_1bcdc24eb_inspect(_self_, &((*((*(_4416_arg))._field_Expr))._field_Model));
						}
						_iter_next_1c677831b:;
						++it;
						goto _iter_begin_1c677831b;
					}
					_iter_end_1c677831b:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c67742a1:;
			{
				jule::Ptr<_1bc2e2a3d_StructLitExprModel> _488_lit = (*((*(_2828_m)).cast_ptr<_1bc2e2d3a_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
				{
					auto expr = &((*(_488_lit))._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6779a04:;
					if (it != expr_end) {
						jule::Ptr<_1bc2e2697_StructArgExprModel> _4916_arg = *it;
						{
							_1bcdc24eb_inspect(_self_, &((*(*(_4916_arg))._field_Expr.alloc)._field_Model));
						}
						_iter_next_1c6779a04:;
						++it;
						goto _iter_begin_1c6779a04;
					}
					_iter_end_1c6779a04:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c6774317:;
			{
				jule::Ptr<_1bc2e33bd_CastingExprModel> _538_c = (*(_2828_m)).cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96);;
				_1bcdc24eb_inspect(_self_, &((*((*(_538_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c677437d:;
			{
				jule::Ptr<_1bc2e3c70_FnCallExprModel> _568_fc = (*(_2828_m)).cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31);;
				_1bcdc24eb_inspect(_self_, &((*(_568_fc))._field_Expr));
				_1bcdc2243_args(_self_, (*_568_fc.alloc)._field_Args);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c67743e4:;
			{
				jule::Ptr<_1bc2e4149_SliceExprModel> _608_s = (*(_2828_m)).cast_ptr<_1bc2e4149_SliceExprModel>(&__jule_any_type80);;
				_1bcdc2243_args(_self_, (*(_608_s))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c677445a:;
			{
				jule::Ptr<_1bc2e7081_ArrayExprModel> _638_a = (*(_2828_m)).cast_ptr<_1bc2e7081_ArrayExprModel>(&__jule_any_type88);;
				_1bcdc2243_args(_self_, (*(_638_a))._field_Elems);
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c67744d2:;
			{
				jule::Ptr<_1bc2e4600_IndexingExprModel> _668_i = (*(_2828_m)).cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43);;
				_1bcdc24eb_inspect(_self_, &((*((*(_668_i))._field_Expr))._field_Model));
				_1bcdc24eb_inspect(_self_, &((*((*_668_i.alloc)._field_Index))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c6774559:;
			{
				jule::Ptr<_1bc2e5359_MapExprModel> _708_mp = (*(_2828_m)).cast_ptr<_1bc2e5359_MapExprModel>(&__jule_any_type102);;
				{
					auto expr = &((*(_708_mp))._field_Entries);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6781038:;
					if (it != expr_end) {
						jule::Ptr<_1bc2e4e80_KeyValPairExprModel> _7116_entry = *it;
						{
							_1bcdc24eb_inspect(_self_, &((*(_7116_entry))._field_Key));
							_1bcdc24eb_inspect(_self_, &((*_7116_entry.alloc)._field_Val));
						}
						_iter_next_1c6781038:;
						++it;
						goto _iter_begin_1c6781038;
					}
					_iter_end_1c6781038:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c67745d1:;
			{
				jule::Ptr<_1bc2e58dc_SlicingExprModel> _768_s = (*(_2828_m)).cast_ptr<_1bc2e58dc_SlicingExprModel>(&__jule_any_type95);;
				_1bcdc24eb_inspect(_self_, &((*(_768_s))._field_Expr));
				_1bcdc24eb_inspect(_self_, &((*_768_s.alloc)._field_Left));
				if (((*_768_s.alloc)._field_Right != nullptr)) {
					_1bcdc24eb_inspect(_self_, &((*_768_s.alloc)._field_Right));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c6774658:;
			{
				jule::Ptr<_1bc2e5e70_TraitSubIdentExprModel> _838_t = (*(_2828_m)).cast_ptr<_1bc2e5e70_TraitSubIdentExprModel>(&__jule_any_type100);;
				_1bcdc24eb_inspect(_self_, &((*(_838_t))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c67746d0:;
			{
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _868_s = (*(_2828_m)).cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				_1bcdc24eb_inspect(_self_, &((*((*(_868_s))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c6774757:;
			{
				jule::Ptr<_1bc2e737d_TupleExprModel> _898_t = (*(_2828_m)).cast_ptr<_1bc2e737d_TupleExprModel>(&__jule_any_type84);;
				{
					auto expr = &((*(_898_t))._field_Datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6785b0e:;
					if (it != expr_end) {
						jule::Ptr<_1bc48354c_Data> _9016_d = *it;
						{
							_1bcdc24eb_inspect(_self_, &((*(_9016_d))._field_Model));
						}
						_iter_next_1c6785b0e:;
						++it;
						goto _iter_begin_1c6785b0e;
					}
					_iter_end_1c6785b0e:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c67747ce:;
			{
				jule::Ptr<_1bc2e7d51_BuiltinNewCallExprModel> _948_b = (*(_2828_m)).cast_ptr<_1bc2e7d51_BuiltinNewCallExprModel>(&__jule_any_type116);;
				if (((*(_948_b))._field_Init != nullptr)) {
					_1bcdc24eb_inspect(_self_, &((*_948_b.alloc)._field_Init));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c6774856:;
			{
				jule::Ptr<_1bc2e767a_BuiltinPrintCallExprModel> _998_c = (*(_2828_m)).cast_ptr<_1bc2e767a_BuiltinPrintCallExprModel>(&__jule_any_type25);;
				_1bcdc24eb_inspect(_self_, &((*((*(_998_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c67748cd:;
			{
				jule::Ptr<_1bc2e7977_BuiltinPrintlnCallExprModel> _1028_c = (*(_2828_m)).cast_ptr<_1bc2e7977_BuiltinPrintlnCallExprModel>(&__jule_any_type26);;
				_1bcdc24eb_inspect(_self_, &((*((*(_1028_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c6774955:;
			{
				jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> _1058_c = (*(_2828_m)).cast_ptr<_1bc2e822a_BuiltinPanicCallExprModel>(&__jule_any_type27);;
				_1bcdc24eb_inspect(_self_, &((*(_1058_c))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c67749cc:;
			{
				jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _1088_c = (*(_2828_m)).cast_ptr<_1bc2e9d31_BuiltinErrorCallExprModel>(&__jule_any_type21);;
				_1bcdc24eb_inspect(_self_, &((*((*(_1088_c))._field_Err))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c6774a54:;
			{
				jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> _1118_b = (*(_2828_m)).cast_ptr<_1bc2e86d1_BuiltinMakeCallExprModel>(&__jule_any_type117);;
				if (((*(_1118_b))._field_Len != nullptr)) {
					_1bcdc24eb_inspect(_self_, &((*_1118_b.alloc)._field_Len));
				};
				if (((*(_1118_b))._field_Cap != nullptr)) {
					_1bcdc24eb_inspect(_self_, &((*_1118_b.alloc)._field_Cap));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c6774acb:;
			{
				jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> _1198_b = (*(_2828_m)).cast_ptr<_1bc2e8aaa_BuiltinAppendCallExprModel>(&__jule_any_type24);;
				_1bcdc24eb_inspect(_self_, &((*(_1198_b))._field_Dest));
				_1bcdc24eb_inspect(_self_, &((*_1198_b.alloc)._field_Elements));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c6774b53:;
			{
				jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _1238_l = (*(_2828_m)).cast_ptr<_1bc2e8da7_BuiltinLenCallExprModel>(&__jule_any_type118);;
				_1bcdc24eb_inspect(_self_, &((*((*(_1238_l))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c6774bca:;
			{
				jule::Ptr<_1bc2e91a4_BuiltinCapCallExprModel> _1268_c = (*(_2828_m)).cast_ptr<_1bc2e91a4_BuiltinCapCallExprModel>(&__jule_any_type119);;
				_1bcdc24eb_inspect(_self_, &((*((*(_1268_c))._field_Expr))._field_Model));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c6774c52:;
			{
				jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> _1298_b = (*(_2828_m)).cast_ptr<_1bc2e957d_BuiltinDeleteCallExprModel>(&__jule_any_type29);;
				_1bcdc24eb_inspect(_self_, &((*((*(_1298_b))._field_Dest))._field_Model));
				if (((*_1298_b.alloc)._field_Key != nullptr)) {
					_1bcdc24eb_inspect(_self_, &((*(*(_1298_b))._field_Key.alloc)._field_Model));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c6774cc9:;
			{
				jule::Ptr<_1bc2ea12d_SizeofExprModel> _1358_s = (*(_2828_m)).cast_ptr<_1bc2ea12d_SizeofExprModel>(&__jule_any_type120);;
				_1bcdc24eb_inspect(_self_, &((*(_1358_s))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c6774d51:;
			{
				jule::Ptr<_1bc2ea7d2_AlignofExprModel> _1388_a = (*(_2828_m)).cast_ptr<_1bc2ea7d2_AlignofExprModel>(&__jule_any_type121);;
				_1bcdc24eb_inspect(_self_, &((*(_1388_a))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c6774dc8:;
			{
				jule::Ptr<_1bc2eb140_FreeExprModel> _1418_f = (*(_2828_m)).cast_ptr<_1bc2eb140_FreeExprModel>(&__jule_any_type30);;
				_1bcdc24eb_inspect(_self_, &((*(_1418_f))._field_Expr));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c6774e50:;
			{
				jule::Ptr<_1bc2ead43_BackendEmitExprModel> _1448_e = (*(_2828_m)).cast_ptr<_1bc2ead43_BackendEmitExprModel>(&__jule_any_type23);;
				_1bcdc2243_args(_self_, (*(_1448_e))._field_Exprs);
			}
		}
		_match_end_1c6773cea:;
	};
}



inline void _1bcdc285e_Inspect(_1bcdc1b5a_ExprInspector* _self_, jule::Any* _15228_m, jule::Fn<void,jule::Any*> _15248_f) {
	(*(_self_))._field_handler=_15248_f;
	_1bcdc24eb_inspect(_self_, _15228_m);
}








inline jule::Bool _1bcdc90c4_MetaStrBuilder_eq(_1bcdc90c4_MetaStrBuilder *_self_, _1bcdc90c4_MetaStrBuilder _other_) {
	return 
		(_self_->_field_Write == _other_._field_Write) &&
		(_self_->_field_WriteByte == _self_->_field_WriteByte) &&
		(_self_->_field_WriteRune == _self_->_field_WriteRune) &&
		(_self_->_field_WriteStr == _self_->_field_WriteStr);
}






inline jule::Bool _1bcdc9c95_MetaRuntime_eq(_1bcdc9c95_MetaRuntime *_self_, _1bcdc9c95_MetaRuntime _other_) {
	return 
		(_self_->_field_ToStr == _other_._field_ToStr) &&
		(_self_->_field_ArrayCmp == _self_->_field_ArrayCmp) &&
		(_self_->_field_RCAdd == _self_->_field_RCAdd) &&
		(_self_->_field_RCLoad == _self_->_field_RCLoad) &&
		(_self_->_field_RCDrop == _self_->_field_RCDrop) &&
		(_self_->_field_RCAddAtomic == _self_->_field_RCAddAtomic) &&
		(_self_->_field_RCLoadAtomic == _self_->_field_RCLoadAtomic) &&
		(_self_->_field_RCDropAtomic == _self_->_field_RCDropAtomic) &&
		(_self_->_field_RuneCount == _self_->_field_RuneCount) &&
		(_self_->_field_Map == _self_->_field_Map) &&
		(_self_->_field_MapIterator == _self_->_field_MapIterator);
}






inline jule::Bool _1bcdca768_MetaMathCmplx_eq(_1bcdca768_MetaMathCmplx *_self_, _1bcdca768_MetaMathCmplx _other_) {
	return 
		(_self_->_field_Cmplx == _other_._field_Cmplx) &&
		(_self_->_field_CmplxAdd == _self_->_field_CmplxAdd) &&
		(_self_->_field_CmplxSub == _self_->_field_CmplxSub) &&
		(_self_->_field_CmplxMul == _self_->_field_CmplxMul) &&
		(_self_->_field_CmplxDiv == _self_->_field_CmplxDiv) &&
		(_self_->_field_CmplxAddZ == _self_->_field_CmplxAddZ) &&
		(_self_->_field_CmplxSubZ == _self_->_field_CmplxSubZ) &&
		(_self_->_field_CmplxMulZ == _self_->_field_CmplxMulZ) &&
		(_self_->_field_CmplxDivZ == _self_->_field_CmplxDivZ);
}






inline jule::Bool _1bcdcad73_Meta_eq(_1bcdcad73_Meta *_self_, _1bcdcad73_Meta _other_) {
	return 
		(_self_->_field_Runtime == _other_._field_Runtime) &&
		(_self_->_field_StrBuilder == _self_->_field_StrBuilder) &&
		(_self_->_field_MathCmplx == _self_->_field_MathCmplx) &&
		(_self_->_field_EntryPoint == _self_->_field_EntryPoint);
}

inline jule::Ptr<_1bcdcad73_Meta> static__1bcdcb24c_Collect(jule::Ptr<_1bcdbd492_IR> _7124_ir) {
	jule::Ptr<_1bcdcad73_Meta> _727_meta = jule::new_ptr<_1bcdcad73_Meta>(_1bcdcad73_Meta{._field_Runtime=jule::Ptr<_1bcdc9c95_MetaRuntime>(nullptr), ._field_StrBuilder=jule::Ptr<_1bcdc90c4_MetaStrBuilder>(nullptr), ._field_MathCmplx=jule::Ptr<_1bcdca768_MetaMathCmplx>(nullptr), ._field_EntryPoint=jule::Ptr<_1bc2ee055_Fn>(nullptr)});;
	(*_727_meta.alloc)._field_Runtime=static__1bcdcb516_CollectRuntime(&(_7124_ir));
	(*_727_meta.alloc)._field_StrBuilder=static__1bcdcb7d0_CollectStrBuilder(&(_7124_ir));
	(*_727_meta.alloc)._field_MathCmplx=static__1bcdcba99_CollectMathCmplx(&(_7124_ir));
	return _727_meta;;
}



inline jule::Ptr<_1bcdc9c95_MetaRuntime> static__1bcdcb516_CollectRuntime(jule::Ptr<_1bcdbd492_IR>* _8032_ir) {
	jule::Ptr<_1bc3dcb9e_ImportInfo> _817_p = _1bcdc7996_SelectImport((*((*(_8032_ir))))._field_Used, jule::Str::lit("std/runtime", 11));;
	if ((_817_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bcdc9c95_MetaRuntime> _857_meta = jule::new_ptr<_1bcdc9c95_MetaRuntime>(_1bcdc9c95_MetaRuntime{._field_ToStr=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_ArrayCmp=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_RCAdd=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_RCLoad=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_RCDrop=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_RCAddAtomic=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_RCLoadAtomic=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_RCDropAtomic=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_RuneCount=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Map=jule::Ptr<_1bc27d26a_Struct>(nullptr), ._field_MapIterator=jule::Ptr<_1bc27d26a_Struct>(nullptr)});;
	(*_857_meta.alloc)._field_ToStr=_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("toStr", 5));
	(*_857_meta.alloc)._field_ArrayCmp=_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("arrayCmp", 8));
	(*_857_meta.alloc)._field_RCAdd=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAdd", 6))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoad=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoad", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDrop=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDrop", 7))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCAddAtomic=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCAddAtomic", 12))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCLoadAtomic=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCLoadAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RCDropAtomic=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("_RCDropAtomic", 13))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_RuneCount=(*(_1bc546d80_RuntimeFindFn(&(_817_p), jule::Str::lit("runeCount", 9))))._field_Instances[0LL];
	(*_857_meta.alloc)._field_Map=_1bc547248_RuntimeFindStruct(&(_817_p), jule::Str::lit("_Map", 4));
	(*_857_meta.alloc)._field_MapIterator=_1bc547248_RuntimeFindStruct(&(_817_p), jule::Str::lit("mapIterator", 11));
	return _857_meta;;
}



inline jule::Ptr<_1bcdc90c4_MetaStrBuilder> static__1bcdcb7d0_CollectStrBuilder(jule::Ptr<_1bcdbd492_IR>* _10635_ir) {
	;
	;
	jule::Ptr<_1bc3dcb9e_ImportInfo> _1097_p = _1bcdc7996_SelectImport((*((*(_10635_ir))))._field_Used, jule::Str::lit("std/strings", 11));;
	if ((_1097_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _1137_b = _1bc4ba221_Struct((*((*(_1bc3dd9b3_FindTypeAlias(_1097_p.ptr(), jule::Str::lit("Builder", 7), false)))._field_TypeSym))._field_Type.ptr());;
	jule::Ptr<_1bcdc90c4_MetaStrBuilder> _1147_meta = jule::new_ptr<_1bcdc90c4_MetaStrBuilder>(_1bcdc90c4_MetaStrBuilder{._field_Write=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_WriteByte=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_WriteRune=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_WriteStr=jule::Ptr<_1bc302113_FnIns>(nullptr)});;
	;
	{
		(*_1147_meta.alloc)._field_Write=(*(_1bc282170_FindMethod(_1137_b.ptr(), jule::Str::lit("Write", 5), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteByte=(*(_1bc282170_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteByte", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteRune=(*(_1bc282170_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteRune", 9), false)))._field_Instances[0LL];
	};
	{
		(*_1147_meta.alloc)._field_WriteStr=(*(_1bc282170_FindMethod(_1137_b.ptr(), jule::Str::lit("WriteStr", 8), false)))._field_Instances[0LL];
	};
	return _1147_meta;;
}



inline jule::Ptr<_1bcdca768_MetaMathCmplx> static__1bcdcba99_CollectMathCmplx(jule::Ptr<_1bcdbd492_IR>* _12334_ir) {
	jule::Ptr<_1bc3dcb9e_ImportInfo> _1247_p = _1bcdc7996_SelectImport((*((*(_12334_ir))))._field_Used, jule::Str::lit("std/math/cmplx", 14));;
	if ((_1247_p == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bcdca768_MetaMathCmplx> _1287_meta = jule::new_ptr<_1bcdca768_MetaMathCmplx>(_1bcdca768_MetaMathCmplx{._field_Cmplx=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_CmplxAdd=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxSub=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxMul=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxDiv=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxAddZ=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxSubZ=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxMulZ=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_CmplxDivZ=jule::Ptr<_1bc302113_FnIns>(nullptr)});;
	;
	(*_1287_meta.alloc)._field_Cmplx=(*(_1bc547248_RuntimeFindStruct(&(_1247_p), jule::Str::lit("Cmplx", 5))))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAdd=(*(_1bc282170_FindMethod((*_1287_meta.alloc)._field_Cmplx.ptr(), jule::Str::lit("Add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSub=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMul=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDiv=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("Div", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxAddZ=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("add", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxSubZ=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("sub", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxMulZ=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("mul", 3), false)))._field_Instances[0LL];
	(*_1287_meta.alloc)._field_CmplxDivZ=(*(_1bc282170_FindMethod((*(_1287_meta))._field_Cmplx.ptr(), jule::Str::lit("div", 3), false)))._field_Instances[0LL];
	return _1287_meta;;
}















inline jule::Ptr<_1bdc1ae37_ObjectDeadCode> static__1bdc1b421_new(jule::Ptr<_1bcdbd492_IR>* _2621_ir) {
	return jule::new_ptr<_1bdc1ae37_ObjectDeadCode>(_1bdc1ae37_ObjectDeadCode{._field_live=_1bdc1ab29_liveTable{._field_vars=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr), ._field_fns=jule::Slice<jule::Ptr<_1bc302113_FnIns>>(nullptr), ._field_structs=jule::Slice<jule::Ptr<_1bc2810c5_StructIns>>(nullptr), ._field_traits=jule::Slice<jule::Ptr<_1bc309769_Trait>>(nullptr)}, ._field_ir=(*(_2621_ir))});;
}



inline jule::Bool _1c68c713a_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc2810c5_StructIns>* _3227_t) {
	jule::Slice<jule::Ptr<_1bc2810c5_StructIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c68c8d2e:;
			{
				_3311_live=(*(_self_))._field_live._field_structs;
			}
		}
		_match_end_1c68c8bec:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68c8c63:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c68c8c63:;
			++it;
			_447_i++;
			goto _iter_begin_1c68c8c63;
		}
		_iter_end_1c68c8c63:;
	};
	return false;;
}

inline jule::Bool _1c68cdd89_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc302113_FnIns>* _3227_t) {
	jule::Slice<jule::Ptr<_1bc302113_FnIns>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c68d09c3:;
			{
				_3311_live=(*(_self_))._field_live._field_fns;
			}
		}
		_match_end_1c68d0907:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68d096d:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c68d096d:;
			++it;
			_447_i++;
			goto _iter_begin_1c68d096d;
		}
		_iter_end_1c68d096d:;
	};
	return false;;
}

inline jule::Bool _1c111a9b6_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc309769_Trait>* _3227_t) {
	jule::Slice<jule::Ptr<_1bc309769_Trait>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c111c765:;
			{
				_3311_live=(*(_self_))._field_live._field_traits;
			}
		}
		_match_end_1c111c5bc:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6210479:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c6210479:;
			++it;
			_447_i++;
			goto _iter_begin_1c6210479;
		}
		_iter_end_1c6210479:;
	};
	return false;;
}

inline jule::Bool _1c621a5b6_isLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc42dc12_Var>* _3227_t) {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _3311_live = nullptr;;
	{
		
{
			_case_begin_1c621bed0:;
			{
				_3311_live=(*(_self_))._field_live._field_vars;
			}
		}
		_match_end_1c621c134:;
	};
	{
		auto expr = &(_3311_live);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c621cb6d:;
		if (it != expr_end) {
			jule::I32 _447_i = it - expr->begin();
			{
				if ((_3311_live[_447_i] == (*(_3227_t)))) {
					return true;;
				};
			}
			_iter_next_1c621cb6d:;
			++it;
			_447_i++;
			goto _iter_begin_1c621cb6d;
		}
		_iter_end_1c621cb6d:;
	};
	return false;;
}



inline void _1c68c7ab9_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc2810c5_StructIns> _5232_t) {
	{
		
{
			_case_begin_1c68cb1c7:;
			{
				(*(_self_))._field_live._field_structs=jule::append((*_self_.alloc)._field_live._field_structs,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2810c5_StructIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c68ca66b:;
	};
}

inline void _1c68d0077_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc302113_FnIns> _5232_t) {
	{
		
{
			_case_begin_1c68d34dc:;
			{
				(*(_self_))._field_live._field_fns=jule::append((*_self_.alloc)._field_live._field_fns,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc302113_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c68d28e8:;
	};
}

inline void _1c621258b_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc309769_Trait> _5232_t) {
	{
		
{
			_case_begin_1c6213bb9:;
			{
				(*(_self_))._field_live._field_traits=jule::append((*_self_.alloc)._field_live._field_traits,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc309769_Trait>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c6212ca6:;
	};
}

inline void _1c621dab4_pushLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc42dc12_Var> _5232_t) {
	{
		
{
			_case_begin_1c621e763:;
			{
				(*(_self_))._field_live._field_vars=jule::append((*_self_.alloc)._field_live._field_vars,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _5232_t; __jule_collection; }));
			}
		}
		_match_end_1c621d256:;
	};
}



inline void _1bdc1bcc3_pushStructAsLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc2810c5_StructIns>* _6538_s) {
	if (_1c68c713a_isLive(_self_, _6538_s)) {
		return;;
	};
	_1c68c7ab9_pushLive(_self_, (*(_6538_s)));
	_1bdc1c07b_setReferencesAsLive(_self_, &((*((*(_6538_s))))._field_Refers));
	jule::Bool _713_allLive = _1bdc1e424_isAllMethodsLive((*((*(_6538_s))))._field_Decl);;
	{
		auto expr = &((*((*(_6538_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c68c6b51:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _7215_m = *it;
			{
				{
					auto expr = &((*(_7215_m))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c68cccde:;
					if (it != expr_end) {
						jule::Ptr<_1bc302113_FnIns> _7316_ins = *it;
						{
							if (_1c68cdd89_isLive(_self_, &(_7316_ins))) {
								goto _iter_next_1c68cccde;
							};
							if (_713_allLive) {
								_1c68d0077_pushLive(_self_, _7316_ins);
								_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								goto _iter_next_1c68cccde;
							};
							if (_1bcdc44cb_IsTraitMethod(_6538_s, &(_7316_ins))) {
								_1c68d0077_pushLive(_self_, _7316_ins);
								_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
							};
							;
							;
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Eq)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Gt)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_GtEq)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Lt)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_LtEq)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shl)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Shr)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Add)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Sub)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Div)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mul)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Mod)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAnd)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOr)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXor)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Neg)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_Pos)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitNot)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_AddAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_SubAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_DivAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_MulAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ModAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShlAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_ShrAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitOrAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitAndAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							{
								if ((_7316_ins == (*((*(_6538_s))))._field_Operators._field_BitXorAssign)) {
									_1c68d0077_pushLive(_self_, _7316_ins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_7316_ins))._field_Refers));
								};
							};
							;
							jule::Ptr<_1bc2ee055_Fn> _1119__str = _1bc282170_FindMethod((*(_6538_s)).ptr(), jule::Str::lit("Str", 3), false);;
							if (((_1119__str != nullptr) && static__1bc4301ca_Str(_1119__str))) {
								jule::Ptr<_1bc302113_FnIns> _11310_fins = (*_1119__str.alloc)._field_Instances[0LL];;
								_1c68d0077_pushLive(_self_, _11310_fins);
								_1bdc1c07b_setReferencesAsLive(_self_, &((*(_11310_fins))._field_Refers));
							};
						}
						_iter_next_1c68cccde:;
						++it;
						goto _iter_begin_1c68cccde;
					}
					_iter_end_1c68cccde:;
				};
			}
			_iter_next_1c68c6b51:;
			++it;
			goto _iter_begin_1c68c6b51;
		}
		_iter_end_1c68c6b51:;
	};
}



inline void _1bdc1c07b_setReferencesAsLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3cab26_ReferenceStack>* _12141_rs) {
	if (((*(_12141_rs)) == nullptr)) {
		return;;
	};
	jule::I32 _1257_i = 0LL;;
	for (; (_1257_i < _1bc3cb385_Len((*(_12141_rs)).ptr())); (_1257_i)++) {
		{
			jule::Any _1278_ref = _1bc3cb6c6_At((*(_12141_rs)).ptr(), _1257_i);;
			{
				auto &_match_expr{ _1278_ref };
				
				if (_match_expr.type == &__jule_any_type11) {
					_case_begin_1c1119685:;
					{
						jule::Ptr<_1bc309769_Trait> _1309_t = _1278_ref.unsafe_cast_ptr<_1bc309769_Trait>();;
						if (_1c111a9b6_isLive(_self_, &(_1309_t))) {
							goto _iter_next_1c111499e;
						};
						_1c621258b_pushLive(_self_, _1309_t);
						{
							auto expr = &((*(_1309_t))._field_Methods);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c6212d1c:;
							if (it != expr_end) {
								jule::Ptr<_1bc2ee055_Fn> _13517_ins = *it;
								{
									{
										auto expr = &((*(_13517_ins))._field_Instances);
										auto it = expr->begin();
										auto expr_end = expr->end();
										_iter_begin_1c62140e8:;
										if (it != expr_end) {
											jule::Ptr<_1bc302113_FnIns> _13618_mins = *it;
											{
												if (_1c68cdd89_isLive(_self_, &(_13618_mins))) {
													goto _iter_next_1c62140e8;
												};
												_1c68d0077_pushLive(_self_, _13618_mins);
												_1bdc1c07b_setReferencesAsLive(_self_, &((*(_13618_mins))._field_Refers));
											}
											_iter_next_1c62140e8:;
											++it;
											goto _iter_begin_1c62140e8;
										}
										_iter_end_1c62140e8:;
									};
								}
								_iter_next_1c6212d1c:;
								++it;
								goto _iter_begin_1c6212d1c;
							}
							_iter_end_1c6212d1c:;
						};
					}
				}
				else if (_match_expr.type == &__jule_any_type65) {
					_case_begin_1c11194ba:;
					{
						jule::Ptr<_1bc302113_FnIns> _1459_f = _1278_ref.unsafe_cast_ptr<_1bc302113_FnIns>();;
						if (_1c68cdd89_isLive(_self_, &(_1459_f))) {
							goto _match_end_1c1119542;
						};
						if ((((*(_1459_f))._field_Owner != nullptr) && (!((*((*_1459_f.alloc)._field_Decl))._field_Statically)))) {
							if ((!(_1c68c713a_isLive(_self_, &((*_1459_f.alloc)._field_Owner))))) {
								_1c68c7ab9_pushLive(_self_, (*_1459_f.alloc)._field_Owner);
								_1bdc1c07b_setReferencesAsLive(_self_, &((*(*(_1459_f))._field_Owner.alloc)._field_Refers));
							};
						};
						_1c68d0077_pushLive(_self_, _1459_f);
						_1bdc1c07b_setReferencesAsLive(_self_, &((*(_1459_f))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type7) {
					_case_begin_1c11196eb:;
					{
						jule::Ptr<_1bc42dc12_Var> _1589_v = _1278_ref.unsafe_cast_ptr<_1bc42dc12_Var>();;
						if (_1c621a5b6_isLive(_self_, &(_1589_v))) {
							goto _match_end_1c1119542;
						};
						_1c621dab4_pushLive(_self_, _1589_v);
						_1bdc1c07b_setReferencesAsLive(_self_, &((*(_1589_v))._field_Refers));
					}
				}
				else if (_match_expr.type == &__jule_any_type64) {
					_case_begin_1c1119762:;
					{
						jule::Ptr<_1bc2810c5_StructIns> _1659_s = _1278_ref.unsafe_cast_ptr<_1bc2810c5_StructIns>();;
						_1bdc1bcc3_pushStructAsLive(_self_, &(_1659_s));
					}
				}
				_match_end_1c1119542:;
			};
		}
	_iter_next_1c111499e:;
	}
	_iter_end_1c111499e:;;
}



inline void _1bdc1c334_inits(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3e0421_Package>* _17127_pkg) {
	{
		auto expr = &((*((*(_17127_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62218db:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _17215_file = *it;
			{
				{
					auto expr = &((*(_17215_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6222403:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _17316_f = *it;
						{
							if ((*(_17316_f))._field_Ident.equal("init", 4)) {
								jule::Ptr<_1bc302113_FnIns> _17510_ins = (*(_17316_f))._field_Instances[0LL];;
								if ((!(_1c68cdd89_isLive(_self_, &(_17510_ins))))) {
									_1c68d0077_pushLive(_self_, _17510_ins);
								};
								_1bdc1c07b_setReferencesAsLive(_self_, &((*(_17510_ins))._field_Refers));
							};
						}
						_iter_next_1c6222403:;
						++it;
						goto _iter_begin_1c6222403;
					}
					_iter_end_1c6222403:;
				};
			}
			_iter_next_1c62218db:;
			++it;
			goto _iter_begin_1c62218db;
		}
		_iter_end_1c62218db:;
	};
}



inline void _1bdc1c5dc_collectLivePackage(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3e0421_Package>* _18540_pkg) {
	_1bdc1c334_inits(_self_, _18540_pkg);
	_1bcdc1143_IterFiles(_18540_pkg, jule::__new_closure<void,jule::Ptr<_1bc305358_SymTab>*>((void*)__jule_anon_1c6622a67, jule::Ptr<__jule_anon_1c6622a67_ctx>::make(__jule_anon_1c6622a67_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6622a67_ctx_handler));
	if (_1abb454c2_Test) {
		if ((((*((*(_18540_pkg))))._field_Files.len() > 0LL) && _1bcdc4850_IsStdPackage((*((*((*((*(_18540_pkg))))._field_Files[0LL]))._field_File))._field_Path, jule::Str::lit("testing", 7)))) {
			;
			jule::Ptr<_1bc27d26a_Struct> _2159_s = _1bc3e15dc_FindStruct((*(_18540_pkg)).ptr(), jule::Str::lit("T", 1), false);;
			jule::Ptr<_1bc2810c5_StructIns> _2169_ins = (*(_2159_s))._field_Instances[0LL];;
			_1bdc1bcc3_pushStructAsLive(_self_, &(_2169_ins));
			{
				auto expr = &((*(_2169_ins))._field_Methods);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c6221ea2:;
				if (it != expr_end) {
					jule::Ptr<_1bc2ee055_Fn> _21817_m = *it;
					{
						{
							auto expr = &((*(_21817_m))._field_Instances);
							auto it = expr->begin();
							auto expr_end = expr->end();
							_iter_begin_1c622500a:;
							if (it != expr_end) {
								jule::Ptr<_1bc302113_FnIns> _21918_mins = *it;
								{
									if (_1c68cdd89_isLive(_self_, &(_21918_mins))) {
										goto _iter_next_1c622500a;
									};
									_1c68d0077_pushLive(_self_, _21918_mins);
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_21918_mins))._field_Refers));
								}
								_iter_next_1c622500a:;
								++it;
								goto _iter_begin_1c622500a;
							}
							_iter_end_1c622500a:;
						};
					}
					_iter_next_1c6221ea2:;
					++it;
					goto _iter_begin_1c6221ea2;
				}
				_iter_end_1c6221ea2:;
			};
		};
		{
			auto expr = &((*((*(_18540_pkg))))._field_Files);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c662884d:;
			if (it != expr_end) {
				jule::Ptr<_1bc305358_SymTab> _22816_file = *it;
				{
					{
						auto expr = &((*(_22816_file))._field_Funcs);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6629c7d:;
						if (it != expr_end) {
							jule::Ptr<_1bc2ee055_Fn> _22917_f = *it;
							{
								if (_1bcdc5aa4_HasDirective(&((*(_22917_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
									jule::Ptr<_1bc302113_FnIns> _23111_ins = (*_22917_f.alloc)._field_Instances[0LL];;
									if ((!(_1c68cdd89_isLive(_self_, &(_23111_ins))))) {
										_1c68d0077_pushLive(_self_, _23111_ins);
									};
									_1bdc1c07b_setReferencesAsLive(_self_, &((*(_23111_ins))._field_Refers));
								};
							}
							_iter_next_1c6629c7d:;
							++it;
							goto _iter_begin_1c6629c7d;
						}
						_iter_end_1c6629c7d:;
					};
				}
				_iter_next_1c662884d:;
				++it;
				goto _iter_begin_1c662884d;
			}
			_iter_end_1c662884d:;
		};
	};
}



inline void _1bdc1c7da_collectLive(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c662b851:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _24315_used = *it;
			{
				if ((!((*(_24315_used))._field_Binded))) {
					_1bdc1c5dc_collectLivePackage(_self_, &((*_24315_used.alloc)._field_Package));
				};
			}
			_iter_next_1c662b851:;
			++it;
			goto _iter_begin_1c662b851;
		}
		_iter_end_1c662b851:;
	};
	_1bdc1c5dc_collectLivePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	jule::Ptr<_1bc2ee055_Fn> _2517_main = _1bc3e19d8_FindFn((*(*(_self_))._field_ir.alloc)._field_Main.ptr(), jule::Str::lit("main", 4), false);;
	if ((_2517_main != nullptr)) {
		jule::Ptr<_1bc302113_FnIns> _2538_ins = (*_2517_main.alloc)._field_Instances[0LL];;
		if ((!(_1c68cdd89_isLive(_self_, &(_2538_ins))))) {
			_1c68d0077_pushLive(_self_, _2538_ins);
		};
		_1bdc1c07b_setReferencesAsLive(_self_, &((*(_2538_ins))._field_Refers));
	};
}



inline void _1bdc1ca93_removeDeadGlobals(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _26139_vars) {
	jule::I32 _2627_i = 0LL;;
	while ((_2627_i < (*(_26139_vars)).len())) {
		{
			jule::Ptr<_1bc42dc12_Var> _2644_v = (*(_26139_vars))[_2627_i];;
			if (_1c621a5b6_isLive(_self_, &(_2644_v))) {
				(_2627_i)++;
				goto _iter_next_1c6631a10;
			};
			(*(_26139_vars))=jule::append((*(_26139_vars)).slice(0LL, _2627_i),(*(_26139_vars)).slice((_2627_i + 1LL)));
		}
	_iter_next_1c6631a10:;
	}
	_iter_end_1c6631a10:;;
}



inline void _1bdc1cd4b_removeDeadFns(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc2ee055_Fn>>* _27335_funcs) {
	jule::I32 _2747_i = 0LL;;
	while ((_2747_i < (*(_27335_funcs)).len())) {
		{
			jule::Ptr<_1bc2ee055_Fn> _2768_f = (*(_27335_funcs))[_2747_i];;
			jule::I32 _2778_j = 0LL;;
			while ((_2778_j < (*(_2768_f))._field_Instances.len())) {
				{
					jule::Ptr<_1bc302113_FnIns> _2795_ins = (*(_2768_f))._field_Instances[_2778_j];;
					if (_1c68cdd89_isLive(_self_, &(_2795_ins))) {
						(_2778_j)++;
						goto _iter_next_1c66343b4;
					};
					(*_2768_f.alloc)._field_Instances=jule::append((*_2768_f.alloc)._field_Instances.slice(0LL, _2778_j),(*_2768_f.alloc)._field_Instances.slice((_2778_j + 1LL)));
				}
			_iter_next_1c66343b4:;
			}
			_iter_end_1c66343b4:;;
			if (((*_2768_f.alloc)._field_Instances.len() == 0LL)) {
				(*(_27335_funcs))=jule::append((*(_27335_funcs)).slice(0LL, _2747_i),(*(_27335_funcs)).slice((_2747_i + 1LL)));
				goto _iter_next_1c663356c;
			};
			(_2747_i)++;
		}
	_iter_next_1c663356c:;
	}
	_iter_end_1c663356c:;;
}



inline void _1bdc1d104_removeDeadStructs(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc27d26a_Struct>>* _29439_structs) {
	jule::I32 _2957_i = 0LL;;
	while ((_2957_i < (*(_29439_structs)).len())) {
		{
			jule::Ptr<_1bc27d26a_Struct> _2978_s = (*(_29439_structs))[_2957_i];;
			jule::I32 _2988_j = 0LL;;
			while ((_2988_j < (*(_2978_s))._field_Instances.len())) {
				{
					jule::Ptr<_1bc2810c5_StructIns> _3009_ins = (*(_2978_s))._field_Instances[_2988_j];;
					_1bdc1cd4b_removeDeadFns(_self_, &((*(_3009_ins))._field_Methods));
					if ((((*_3009_ins.alloc)._field_Methods.len() != 0LL) || _1c68c713a_isLive(_self_, &(_3009_ins)))) {
						(_2988_j)++;
						goto _iter_next_1c6637e67;
					};
					(*_2978_s.alloc)._field_Instances=jule::append((*_2978_s.alloc)._field_Instances.slice(0LL, _2988_j),(*_2978_s.alloc)._field_Instances.slice((_2988_j + 1LL)));
				}
			_iter_next_1c6637e67:;
			}
			_iter_end_1c6637e67:;;
			if (((*_2978_s.alloc)._field_Instances.len() == 0LL)) {
				(*(_29439_structs))=jule::append((*(_29439_structs)).slice(0LL, _2957_i),(*(_29439_structs)).slice((_2957_i + 1LL)));
				goto _iter_next_1c6637120;
			};
			(_2957_i)++;
		}
	_iter_next_1c6637120:;
	}
	_iter_end_1c6637120:;;
}



inline void _1bdc1d3ac_removeDeadTraits(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Slice<jule::Ptr<_1bc309769_Trait>>* _31638_traits) {
	jule::I32 _3177_i = 0LL;;
	while ((_3177_i < (*(_31638_traits)).len())) {
		{
			jule::Ptr<_1bc309769_Trait> _3198_t = (*(_31638_traits))[_3177_i];;
			if ((!(_1c111a9b6_isLive(_self_, &(_3198_t))))) {
				(*(_31638_traits))=jule::append((*(_31638_traits)).slice(0LL, _3177_i),(*(_31638_traits)).slice((_3177_i + 1LL)));
				goto _iter_next_1c663b850;
			};
			jule::I32 _3248_j = 0LL;;
			while ((_3248_j < (*(_3198_t))._field_Implemented.len())) {
				{
					jule::Ptr<_1bc27d26a_Struct> _3265_s = (*(_3198_t))._field_Implemented[_3248_j];;
					if (((*(_3265_s))._field_Instances.len() > 0LL)) {
						(_3248_j)++;
						goto _iter_next_1c663c29b;
					};
					(*_3198_t.alloc)._field_Implemented=jule::append((*_3198_t.alloc)._field_Implemented.slice(0LL, _3248_j),(*_3198_t.alloc)._field_Implemented.slice((_3248_j + 1LL)));
				}
			_iter_next_1c663c29b:;
			}
			_iter_end_1c663c29b:;;
			(_3177_i)++;
		}
	_iter_next_1c663b850:;
	}
	_iter_end_1c663b850:;;
}



inline void _1bdc1d665_removeDeadsFile(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc305358_SymTab>* _33737_file) {
	_1bdc1cd4b_removeDeadFns(_self_, &((*((*(_33737_file))))._field_Funcs));
	_1bdc1d104_removeDeadStructs(_self_, &((*((*(_33737_file))))._field_Structs));
	_1bdc1d3ac_removeDeadTraits(_self_, &((*((*(_33737_file))))._field_Traits));
	_1bdc1ca93_removeDeadGlobals(_self_, &((*((*(_33737_file))))._field_Vars));
}



inline void _1bdc1d91d_removeDeadsPackage(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_, jule::Ptr<_1bc3e0421_Package>* _34440_pkg) {
	{
		auto expr = &((*((*(_34440_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6641d83:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _34515_file = *it;
			{
				_1bdc1d665_removeDeadsFile(_self_, &(_34515_file));
			}
			_iter_next_1c6641d83:;
			++it;
			goto _iter_begin_1c6641d83;
		}
		_iter_end_1c6641d83:;
	};
}



inline void _1bdc1db1b_removeDeads(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6642c0d:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _35115_used = *it;
			{
				if ((!((*(_35115_used))._field_Binded))) {
					_1bdc1d91d_removeDeadsPackage(_self_, &((*_35115_used.alloc)._field_Package));
				};
			}
			_iter_next_1c6642c0d:;
			++it;
			goto _iter_begin_1c6642c0d;
		}
		_iter_end_1c6642c0d:;
	};
	_1bdc1d91d_removeDeadsPackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
}



inline void _1bdc1dd19_elimanate(jule::Ptr<_1bdc1ae37_ObjectDeadCode> _self_) {
	_1bdc1c7da_collectLive(_self_);
	_1bdc1db1b_removeDeads(_self_);
}








inline jule::Bool _1bdc2005c_scopeDeadCode_eq(_1bdc2005c_scopeDeadCode *_self_, _1bdc2005c_scopeDeadCode _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_s == _self_->_field_s) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_labels == _self_->_field_labels) &&
		(_self_->_field_gotos == _self_->_field_gotos) &&
		(_self_->_field_except == _self_->_field_except);
}

inline void _1bdc20579_optimizeChild(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3abd27_Scope>* _1935_s) {
	jule::Ptr<_1bdc2005c_scopeDeadCode> _207_sdc = jule::new_ptr<_1bdc2005c_scopeDeadCode>(_1bdc2005c_scopeDeadCode{._field_parent=_self_, ._field_s=(*(_1935_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1bdc22e94_optimizeStmts(_207_sdc);
	};
}



inline void _1bdc20832_optimizeBodyChildExceptional(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3abd27_Scope>* _2950_s) {
	jule::Ptr<_1bdc2005c_scopeDeadCode> _307_sdc = jule::new_ptr<_1bdc2005c_scopeDeadCode>(_1bdc2005c_scopeDeadCode{._field_parent=jule::Ptr<_1bdc2005c_scopeDeadCode>(nullptr), ._field_s=(*(_2950_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=true});;
	{
		_1bdc22e94_optimizeStmts(_307_sdc);
	};
}



inline void _1bdc20ada_optimizeBodyChild(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3abd27_Scope>* _3939_s) {
	jule::Ptr<_1bdc2005c_scopeDeadCode> _407_sdc = jule::new_ptr<_1bdc2005c_scopeDeadCode>(_1bdc2005c_scopeDeadCode{._field_parent=jule::Ptr<_1bdc2005c_scopeDeadCode>(nullptr), ._field_s=(*(_3939_s)), ._field_i=0, ._field_labels=(*(_self_))._field_labels, ._field_gotos=(*_self_.alloc)._field_gotos, ._field_except=false});;
	{
		_1bdc22e94_optimizeStmts(_407_sdc);
	};
}



inline void _1bdc20d93_optimizeExprModel(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Any* _4839_model) {
	_1bdc245e4_exprDeadCode _493_edc = static__1bdc24a12_new(&(_self_));;
	_1bdc24cba_optimize(&_493_edc, _4839_model);
}



inline void _1bdc21091_eliminateFollowed(_1bdc2005c_scopeDeadCode* _self_) {
	if (((*((*(_self_))._field_gotos)).len() != 0LL)) {
		return;;
	};
	{
		((*((*(_self_))._field_s))._field_Stmts).mut_slice(0LL, ((*(_self_))._field_i + 1LL));;
	};
	jule::Ptr<_1bdc2005c_scopeDeadCode> _607_parent = (*(_self_))._field_parent;;
	while ((_607_parent != nullptr)) {
		{
			{
				((*((*(_607_parent))._field_s))._field_Stmts).mut_slice(0LL, ((*(_607_parent))._field_i + 1LL));;
			};
			_607_parent=(*(_607_parent))._field_parent;
		}
	_iter_next_1c6652d72:;
	}
	_iter_end_1c6652d72:;;
}



inline void _1bdc21349_pushGoto(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3aeed4_GotoSt> _6929_gt) {
	jule::I32 _707_i = 0LL;;
	for (; (_707_i < (*((*(_self_))._field_labels)).len()); (_707_i)++) {
		{
			if (((*(_6929_gt))._field_Ident == (*((*((*(_self_))._field_labels))[_707_i]))._field_Ident)) {
				return;;
			};
		}
	_iter_next_1c6226c10:;
	}
	_iter_end_1c6226c10:;;
	(*((*_self_.alloc)._field_gotos))=jule::append((*(*(_self_))._field_gotos.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _6929_gt; __jule_collection; }));
}



inline void _1bdc21602_pushLabel(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3ae874_Label> _7930_l) {
	jule::I32 _807_i = 0LL;;
	while ((_807_i < (*((*(_self_))._field_gotos)).len())) {
		{
			if (((*(_7930_l))._field_Ident == (*((*((*(_self_))._field_gotos))[_807_i]))._field_Ident)) {
				jule::copy((*((*(_self_))._field_gotos)).slice(_807_i), (*((*(_self_))._field_gotos)).slice((_807_i + 1LL)));
				((*((*(_self_))._field_gotos))).mut_slice(0LL, ((*((*(_self_))._field_gotos)).len() - 1LL));;
				goto _iter_next_1c6796b53;
			};
			(_807_i)++;
		}
	_iter_next_1c6796b53:;
	}
	_iter_end_1c6796b53:;;
	(*((*_self_.alloc)._field_labels))=jule::append((*(*(_self_))._field_labels.alloc),({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3ae874_Label>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7930_l; __jule_collection; }));
}



inline void _1bdc218aa_optimizeRangeIter(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3adb5e_RangeIter> _9238_it) {
	_1bdc20d93_optimizeExprModel(_self_, &((*((*(_9238_it))._field_Expr))._field_Model));
	_1bdc20ada_optimizeBodyChild(_self_, &((*_9238_it.alloc)._field_Scope));
}



inline void _1bdc21b63_optimizeWhileIter(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3ad213_WhileIter> _9738_it) {
	_1bdc20d93_optimizeExprModel(_self_, &((*(_9738_it))._field_Expr));
	if (((*_9738_it.alloc)._field_Next != nullptr)) {
		_1bdc22c96_optimizeStmt(_self_, (*_9738_it.alloc)._field_Next);
	};
	_1bdc20ada_optimizeBodyChild(_self_, &((*_9738_it.alloc)._field_Scope));
}



inline void _1bdc21e1b_optimizeInfIter(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3acc5c_InfIter> _10536_it) {
	_1bdc20ada_optimizeBodyChild(_self_, &((*(_10536_it))._field_Scope));
}



inline void _1bdc221c4_optimizeConditional(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3ac960_Conditional> _10940_c) {
	{
		auto expr = &((*(_10940_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c679d918:;
		if (it != expr_end) {
			jule::Ptr<_1bc3ac245_If> _11015_case = *it;
			{
				if ((_11015_case != nullptr)) {
					_1bdc20d93_optimizeExprModel(_self_, &((*_11015_case.alloc)._field_Expr));
					_1bdc20ada_optimizeBodyChild(_self_, &((*_11015_case.alloc)._field_Scope));
				};
			}
			_iter_next_1c679d918:;
			++it;
			goto _iter_begin_1c679d918;
		}
		_iter_end_1c679d918:;
	};
	if (((*_10940_c.alloc)._field_Default != nullptr)) {
		if (((*_10940_c.alloc)._field_Elifs.len() == 0LL)) {
			_1bdc20579_optimizeChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		} else {
			_1bdc20ada_optimizeBodyChild(_self_, &((*(*(_10940_c))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1bdc2247c_optimizeMatch(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3b1557_Match> _12734_m) {
	{
		auto expr = &((*(_12734_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c1263b64:;
		if (it != expr_end) {
			jule::Ptr<_1bc3b2080_Case> _12815_case = *it;
			{
				{
					auto expr = &((*(_12815_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c126467b:;
					if (it != expr_end) {
						jule::Ptr<_1bc48354c_Data> _12916_expr = *it;
						{
							_1bdc20d93_optimizeExprModel(_self_, &((*(_12916_expr))._field_Model));
						}
						_iter_next_1c126467b:;
						++it;
						goto _iter_begin_1c126467b;
					}
					_iter_end_1c126467b:;
				};
				_1bdc20ada_optimizeBodyChild(_self_, &((*_12815_case.alloc)._field_Scope));
			}
			_iter_next_1c1263b64:;
			++it;
			goto _iter_begin_1c1263b64;
		}
		_iter_end_1c1263b64:;
	};
	if (((*_12734_m.alloc)._field_Default != nullptr)) {
		if (((*_12734_m.alloc)._field_Cases.len() == 0LL)) {
			_1bdc20579_optimizeChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		} else {
			_1bdc20ada_optimizeBodyChild(_self_, &((*(*(_12734_m))._field_Default.alloc)._field_Scope));
		};
	};
}



inline void _1bdc22735_optimizeAssign(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3b0864_Assign> _14535_assign) {
	_1bdc20d93_optimizeExprModel(_self_, &((*((*(_14535_assign))._field_Left))._field_Model));
	_1bdc20d93_optimizeExprModel(_self_, &((*((*_14535_assign.alloc)._field_Right))._field_Model));
}



inline void _1bdc229dd_optimizeMultiAssign(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign> _15040_assign) {
	{
		auto expr = &((*(_15040_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c622b1dc:;
		if (it != expr_end) {
			jule::Ptr<_1bc48354c_Data> _15115_l = *it;
			{
				if ((_15115_l != nullptr)) {
					_1bdc20d93_optimizeExprModel(_self_, &((*_15115_l.alloc)._field_Model));
				};
			}
			_iter_next_1c622b1dc:;
			++it;
			goto _iter_begin_1c622b1dc;
		}
		_iter_end_1c622b1dc:;
	};
	_1bdc20d93_optimizeExprModel(_self_, &((*_15040_assign.alloc)._field_Right));
}



inline void _1bdc22c96_optimizeStmt(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_, jule::Any _15933_st) {
	{
		auto &_match_expr{ _15933_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c665621b:;
			{
				jule::Ptr<_1bc3abd27_Scope> _1628_scope = _15933_st.unsafe_cast_ptr<_1bc3abd27_Scope>();;
				if ((*(_1628_scope))._field_Deferred) {
					_1bdc23291_eliminateDeadCodeOfScope(_1628_scope);
				} else {
					_1bdc20579_optimizeChild(_self_, &(_1628_scope));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c6655e85:;
			{
				_1bdc218aa_optimizeRangeIter(_self_, _15933_st.cast_ptr<_1bc3adb5e_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c6656293:;
			{
				_1bdc21b63_optimizeWhileIter(_self_, _15933_st.cast_ptr<_1bc3ad213_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c665631a:;
			{
				_1bdc21e1b_optimizeInfIter(_self_, _15933_st.cast_ptr<_1bc3acc5c_InfIter>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c6656392:;
			{
				_1bdc221c4_optimizeConditional(_self_, _15933_st.cast_ptr<_1bc3ac960_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c6656419:;
			{
				_1bdc2247c_optimizeMatch(_self_, _15933_st.cast_ptr<_1bc3b1557_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c6656491:;
			{
				_1bdc22735_optimizeAssign(_self_, _15933_st.cast_ptr<_1bc3b0864_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c6656518:;
			{
				_1bdc229dd_optimizeMultiAssign(_self_, _15933_st.cast_ptr<_1bc3b0d1a_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6656590:;
			{
				jule::Ptr<_1bc48354c_Data> _1838_d = _15933_st.unsafe_cast_ptr<_1bc48354c_Data>();;
				if ((*_self_.alloc)._field_except) {
					goto _match_end_1c66560b7;
				};
				{
					auto &_match_expr{ (*(_1838_d))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21 || _match_expr.type == &__jule_any_type27) {
						_case_begin_1c665c057:;
						{
							_1bdc21091_eliminateFollowed(_self_);
						}
					}
					else {
						_case_begin_1c665c6c8:;
						{
							_1bdc20d93_optimizeExprModel(_self_, &((*(_1838_d))._field_Model));
						}
					}
					_match_end_1c665c662:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c6656617:;
			{
				_1bdc21091_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c665668e:;
			{
				_1bdc21349_pushGoto(_self_, _15933_st.cast_ptr<_1bc3aeed4_GotoSt>(&__jule_any_type39));
				_1bdc21091_eliminateFollowed(_self_);
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6656716:;
			{
				_1bdc21602_pushLabel(_self_, _15933_st.cast_ptr<_1bc3ae874_Label>(&__jule_any_type19));
			}
		}
		_match_end_1c66560b7:;
	};
}



inline void _1bdc22e94_optimizeStmts(jule::Ptr<_1bdc2005c_scopeDeadCode> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_s))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1bdc22c96_optimizeStmt(_self_, (*(*(_self_))._field_s.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c666038a:;
	}
	_iter_end_1c666038a:;;
}








inline jule::Bool _1bdc245e4_exprDeadCode_eq(_1bdc245e4_exprDeadCode *_self_, _1bdc245e4_exprDeadCode _other_) {
	return 
		(_self_->_field_s == _other_._field_s);
}

inline _1bdc245e4_exprDeadCode static__1bdc24a12_new(jule::Ptr<_1bdc2005c_scopeDeadCode>* _1421_s) {
	return _1bdc245e4_exprDeadCode{._field_s=(*(_1421_s))};;
}



inline void _1bdc24cba_optimize(_1bdc245e4_exprDeadCode* _self_, jule::Any* _2025_model) {
	jule::Ptr<_1bcdc1b5a_ExprInspector> _217_inspector = static__1bcdc1e8a_New();;
	_1bcdc285e_Inspect(_217_inspector.ptr(), _2025_model, jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1c6663008, jule::Ptr<__jule_anon_1c6663008_ctx>::make(__jule_anon_1c6663008_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6663008_ctx_handler));
}








inline jule::Bool _1bdad9bc4_ExceptionalForwardingExprModel_eq(_1bdad9bc4_ExceptionalForwardingExprModel *_self_, _1bdad9bc4_ExceptionalForwardingExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr);
}






inline jule::Bool _1bdad9e38_FnCallIgnoreExceptionalExprModel_eq(_1bdad9e38_FnCallIgnoreExceptionalExprModel *_self_, _1bdad9e38_FnCallIgnoreExceptionalExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}










inline jule::Bool _1bdada653_SwapExprModel_eq(_1bdada653_SwapExprModel *_self_, _1bdada653_SwapExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bdadaa2c_EmptyCompareExprModel_eq(_1bdadaa2c_EmptyCompareExprModel *_self_, _1bdadaa2c_EmptyCompareExprModel _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Neg == _self_->_field_Neg);
}






inline jule::Bool _1bdadad29_RefExprModel_eq(_1bdadad29_RefExprModel *_self_, _1bdadad29_RefExprModel _other_) {
	return 
		(_self_->_field_Var == _other_._field_Var);
}






inline jule::Bool _1bdadb2d0_StrCompExprModel_eq(_1bdadb2d0_StrCompExprModel *_self_, _1bdadb2d0_StrCompExprModel _other_) {
	return 
		(_self_->_field_Left == _other_._field_Left) &&
		(_self_->_field_Right == _self_->_field_Right) &&
		(_self_->_field_NotEq == _self_->_field_NotEq);
}






inline jule::Bool _1bdadb8eb_MutSlicingExprModel_eq(_1bdadb8eb_MutSlicingExprModel *_self_, _1bdadb8eb_MutSlicingExprModel _other_) {
	return 
		(_self_->_field_Token == _other_._field_Token) &&
		(_self_->_field_Expr == _self_->_field_Expr) &&
		(_self_->_field_Left == _self_->_field_Left) &&
		(_self_->_field_Right == _self_->_field_Right);
}






inline jule::Bool _1bdadbbe8_UnsafeBinaryExprModel_eq(_1bdadbbe8_UnsafeBinaryExprModel *_self_, _1bdadbbe8_UnsafeBinaryExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1bdadbee5_UnsafeIndexingExprModel_eq(_1bdadbee5_UnsafeIndexingExprModel *_self_, _1bdadbee5_UnsafeIndexingExprModel _other_) {
	return 
		(_self_->_field_Node == _other_._field_Node);
}






inline jule::Bool _1bdadc3be_PushToSliceExprModel_eq(_1bdadc3be_PushToSliceExprModel *_self_, _1bdadc3be_PushToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Elems == _self_->_field_Elems);
}






inline jule::Bool _1bdadc798_AppendToSliceExprModel_eq(_1bdadc798_AppendToSliceExprModel *_self_, _1bdadc798_AppendToSliceExprModel _other_) {
	return 
		(_self_->_field_Dest == _other_._field_Dest) &&
		(_self_->_field_Slice == _self_->_field_Slice);
}






inline jule::Bool _1bdadcb72_StrRuneIter_eq(_1bdadcb72_StrRuneIter *_self_, _1bdadcb72_StrRuneIter _other_) {
	return 
		(_self_->_field_Expr == _other_._field_Expr) &&
		(_self_->_field_Base == _self_->_field_Base);
}






inline jule::Bool _1bdadce6e_UnsafeDerefExprModel_eq(_1bdadce6e_UnsafeDerefExprModel *_self_, _1bdadce6e_UnsafeDerefExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bdadd26b_UnsafeCastingExprModel_eq(_1bdadd26b_UnsafeCastingExprModel *_self_, _1bdadd26b_UnsafeCastingExprModel _other_) {
	return 
		(_self_->_field_Base == _other_._field_Base);
}






inline jule::Bool _1bdade008_nilVar_eq(_1bdade008_nilVar *_self_, _1bdade008_nilVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_safe == _self_->_field_safe);
}





inline void _1bdade7de_pushVar(_1bdade349_nils* _self_, jule::Uintptr _2323_var, jule::Bool _2337_safe) {
	if (((!(_1bdb09276_Access)) || (_2323_var == 0LLU))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67ba2c5:;
		if (it != expr_end) {
			jule::I32 _287_i = it - expr->begin();
			{
				_1bdade008_nilVar *_299_v = &((*(_self_))._field_vars[_287_i]);;
				if (((*(_299_v))._field_var == _2323_var)) {
					(*(_299_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1c67ba2c5:;
			++it;
			_287_i++;
			goto _iter_begin_1c67ba2c5;
		}
		_iter_end_1c67ba2c5:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67bb804:;
		if (it != expr_end) {
			jule::I32 _367_i = it - expr->begin();
			{
				_1bdade008_nilVar *_379_v = &((*(_self_))._field_vars[_367_i]);;
				if (((*(_379_v))._field_var == 0LLU)) {
					(*(_379_v))._field_var=_2323_var;
					(*(_379_v))._field_safe=_2337_safe;
					return;;
				};
			}
			_iter_next_1c67bb804:;
			++it;
			_367_i++;
			goto _iter_begin_1c67bb804;
		}
		_iter_end_1c67bb804:;
	};
	{ jule::Slice<_1bdade008_nilVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1bdade008_nilVar{._field_var=_2323_var, ._field_safe=_2337_safe}); };
}



inline jule::Bool _1bdadeb30_removeVar(_1bdade349_nils* _self_, jule::Uintptr _4825_var) {
	if ((_4825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c67bd95a:;
			if (it != expr_end) {
				jule::I32 _508_i = it - expr->begin();
				{
					_1bdade008_nilVar *_5110_v = &((*(_self_))._field_vars[_508_i]);;
					if (((*(_5110_v))._field_var == _4825_var)) {
						(*(_5110_v))._field_var=0LLU;
						(*(_5110_v))._field_safe=false;
						return true;;
					};
				}
				_iter_next_1c67bd95a:;
				++it;
				_508_i++;
				goto _iter_begin_1c67bd95a;
			}
			_iter_end_1c67bd95a:;
		};
	};
	return false;;
}



inline jule::Bool _1bdadee71_isSafe(_1bdade349_nils* _self_, jule::Uintptr _6322_var) {
	if ((_6322_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c67c07e7:;
			if (it != expr_end) {
				_1bdade008_nilVar _6511_v = *it;
				{
					if ((_6511_v._field_var == _6322_var)) {
						return _6511_v._field_safe;;
					};
				}
				_iter_next_1c67c07e7:;
				++it;
				goto _iter_begin_1c67c07e7;
			}
			_iter_end_1c67c07e7:;
		};
	};
	return false;;
}








inline jule::Bool _1bdae1e40_scopeOptimizer_eq(_1bdae1e40_scopeOptimizer *_self_, _1bdae1e40_scopeOptimizer _other_) {
	return 
		(_self_->_field_parent == _other_._field_parent) &&
		(_self_->_field_i == _self_->_field_i) &&
		(_self_->_field_scope == _self_->_field_scope) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Ptr<_1bdae1e40_scopeOptimizer> static__1bdae2506_new(jule::Ptr<_1bc3abd27_Scope> _2320_scope) {
	jule::Ptr<_1bdae1e40_scopeOptimizer> _247_sc = jule::new_ptr<_1bdae1e40_scopeOptimizer>(_1bdae1e40_scopeOptimizer{._field_parent=jule::Ptr<_1bdae1e40_scopeOptimizer>(nullptr), ._field_i=0, ._field_scope=_2320_scope, ._field_data=jule::new_ptr<_1bdb035c2_data>(_1bdb035c2_data{._field_boundary=jule::new_ptr<_1bdb0587c_boundary>(_1bdb0587c_boundary{._field_vars=jule::Slice<_1bdb0553b_boundaryVar>(nullptr)}), ._field_nils=jule::new_ptr<_1bdade349_nils>(_1bdade349_nils{._field_vars=jule::Slice<_1bdade008_nilVar>(nullptr)}), ._field_dynamic=jule::new_ptr<_1bdb006e0_dynamic>(_1bdb006e0_dynamic{._field_vars=jule::Slice<_1bdb0039e_dynamicVar>(nullptr)}), ._field_flags=0LL})});;
	return _247_sc;;
}



inline void _1bdae27ae_setCurrentStmt(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Any _3535_stmt) {
	(*((*(_self_))._field_scope))._field_Stmts[(*_self_.alloc)._field_i]=(*(((jule::Any*)((&(_3535_stmt))))));
}



inline void _1bdae29ac_removeCurrent(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_) {
	(*((*(_self_))._field_scope))._field_Stmts=jule::append((*(*(_self_))._field_scope.alloc)._field_Stmts.slice(0LL, (*_self_.alloc)._field_i),(*(*(_self_))._field_scope.alloc)._field_Stmts.slice(((*_self_.alloc)._field_i + 1LL)));
}



inline jule::Bool _1bdae2c43_isLastStmt(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_) {
	jule::Ptr<_1bdae1e40_scopeOptimizer> _457_r = _self_;;
	for (; (_457_r != nullptr); _457_r=(*(_457_r))._field_parent) {
		{
			if ((((*((*_457_r.alloc)._field_scope))._field_Stmts.len() - (*_457_r.alloc)._field_i) != 1LL)) {
				return false;;
			};
		}
	_iter_next_1c67cca02:;
	}
	_iter_end_1c67cca02:;;
	return true;;
}



inline jule::Bool _1bdae2ec9_isIter(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_) {
	jule::Ptr<_1bdae1e40_scopeOptimizer> _557_r = (*(_self_))._field_parent;;
	for (; (_557_r != nullptr); _557_r=(*(_557_r))._field_parent) {
		{
			{
				auto &_match_expr{ (*((*(_557_r))._field_scope))._field_Stmts[(*(_557_r))._field_i] };
				
				if (_match_expr.type == &__jule_any_type37 || _match_expr.type == &__jule_any_type35 || _match_expr.type == &__jule_any_type33) {
					_case_begin_1c67d0351:;
					{
						return true;;
					}
				}
				_match_end_1c67d02a7:;
			};
		}
	_iter_next_1c67cde32:;
	}
	_iter_end_1c67cde32:;;
	return false;;
}



inline void _1bdae3282_optimizeData(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc48354c_Data> _6733_d) {
	{
		auto &_match_expr{ (*(_6733_d))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c67d153e:;
			{
				jule::Ptr<_1bc2e3c70_FnCallExprModel> _708_m = (*(_6733_d))._field_Model.unsafe_cast_ptr<_1bc2e3c70_FnCallExprModel>();;
				if (_1abb45d85_Production) {
					if (((!(_1bc3035cb_IsBuiltin((*(_708_m))._field_Func.ptr()))) && _1bcdc4850_IsStdPackage((*((*((*((*(*(_708_m))._field_Func.alloc)._field_Decl))._field_Token))._field_File))._field_Path, jule::Str::lit("debug", 5)))) {
						_1bdae27ae_setCurrentStmt(_self_, nullptr);
						return;;
					};
				};
				static__1bdae982c_optimizeData(&((*(_6733_d))._field_Model), &((*(_self_))._field_data), _self_);
				if (((((((_1bdb0a6ea_Exceptional && (*((*((*(_708_m))._field_Func))._field_Decl))._field_Exceptional) && ((*_708_m.alloc)._field_Except != nullptr)) && ((*(*(_708_m))._field_Except.alloc)._field_Stmts.len() == 1LL)) && _1bcdc35da_IsForwarded(&((*_708_m.alloc)._field_Except))) && _1bdae2c43_isLastStmt(_self_)) && (!(_1bdae2ec9_isIter(_self_))))) {
					_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bdad9bc4_ExceptionalForwardingExprModel>(_1bdad9bc4_ExceptionalForwardingExprModel{._field_Expr=_708_m}), &__jule_any_type122));
				};
				return;;
			}
		}
		_match_end_1c67d14b7:;
	};
	jule::I32 _943_dataFlags = (*((*(_self_))._field_data))._field_flags;;
	(*(*(_self_))._field_data.alloc)._field_flags|=static_cast<jule::I32>(1LL);
	static__1bdae982c_optimizeData(&((*(_6733_d))._field_Model), &((*_self_.alloc)._field_data), _self_);
	(*((*_self_.alloc)._field_data))._field_flags=_943_dataFlags;
}



inline void _1bdae353a_optimizeVar(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc42dc12_Var> _10032_v) {
	if (((*(_10032_v))._field_Value != nullptr)) {
		if (((((*((*(_self_))._field_data))._field_nils != nullptr) && _1bdae09aa_isNilValidType((*((*_10032_v.alloc)._field_TypeSym))._field_Type)) && _1bdae06e1_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model))) {
			;
			_1bdade7de_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _1bdae0ceb_getNilVar(jule::Any(_10032_v, &__jule_any_type7)), true);
		};
		if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
			jule::Ptr<_1bc4b64e7_Type> _1099_kind = _1bdb01eb6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_10032_v.alloc)._field_TypeSym))._field_Type, (*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model);;
			if ((_1099_kind != nullptr)) {
				if (_1bdb01a87_isDynamicValidType((*(*(_10032_v))._field_TypeSym.alloc)._field_Type)) {
					_1bdb00b85_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _1bdb02307_getDynamicVar(jule::Any(_10032_v, &__jule_any_type7)), _1099_kind);
				};
			};
		};
		static__1bdae982c_optimizeData(&((*((*(*(_10032_v))._field_Value.alloc)._field_Data))._field_Model), &((*(_self_))._field_data), _self_);
	};
}



inline void _1bdae37e3_optimizeConditional(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3ac960_Conditional> _12140_c) {
	_1bdb035c2_data _1257_alive = _1bdb035c2_data{._field_boundary=jule::Ptr<_1bdb0587c_boundary>(nullptr), ._field_nils=jule::Ptr<_1bdade349_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bdb006e0_dynamic>(nullptr), ._field_flags=0LL};;
	_1bdb0467d_loadCheckpoint(&_1257_alive, _1bdb0413e_getCheckpoint((*(_self_))._field_data.ptr()));
	_1bdb02eea_dataCheckpoint _1297_checkpoint = _1bdb0413e_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_12140_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67e1d24:;
		if (it != expr_end) {
			jule::Ptr<_1bc3ac245_If> _13115_elif = *it;
			{
				static__1bdae982c_optimizeData(&((*(_13115_elif))._field_Expr), &((*_self_.alloc)._field_data), _self_);
				_1bdae67b3_optimizeChild(_self_, (*_13115_elif.alloc)._field_Scope);
				_1bdb03da8_removeDeads(&_1257_alive, &((*_self_.alloc)._field_data));
				_1bdb0467d_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _1297_checkpoint);
			}
			_iter_next_1c67e1d24:;
			++it;
			goto _iter_begin_1c67e1d24;
		}
		_iter_end_1c67e1d24:;
	};
	if (((*_12140_c.alloc)._field_Default != nullptr)) {
		_1bdae67b3_optimizeChild(_self_, (*(*(_12140_c))._field_Default.alloc)._field_Scope);
		_1bdb03da8_removeDeads(&_1257_alive, &((*_self_.alloc)._field_data));
	};
	_1bdb0467d_loadCheckpoint((*(_self_))._field_data, _1bdb043c5_getMutCheckpoint(&_1257_alive));
	if ((!(_1bdb09ba0_Cond))) {
		return;;
	};
	jule::Bool _1487_constCase = false;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67e5a81:;
		if (it != expr_end) {
			jule::I32 _1518_i = it - expr->begin();
			jule::Ptr<_1bc3ac245_If> _15115_elif = *it;
			{
				if ((!(_1bdae70ee_isConstantValidConditionalCase(&(_15115_elif))))) {
					goto _iter_next_1c67e5a81;
				};
				_1487_constCase=true;
				((*(_12140_c))._field_Elifs).mut_slice(0LL, _1518_i);;
				(*_12140_c.alloc)._field_Default=jule::new_ptr<_1bc3ac542_Else>(_1bc3ac542_Else{._field_Scope=(*(_15115_elif))._field_Scope});
				goto _iter_end_1c67e5a81;
			}
			_iter_next_1c67e5a81:;
			++it;
			_1518_i++;
			goto _iter_begin_1c67e5a81;
		}
		_iter_end_1c67e5a81:;
	};
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1bc3ac245_If>* _1687_i = (&((*_12140_c.alloc)._field_Elifs[0LL]));;
	jule::Ptr<_1bc3ac245_If>* _1693_end = (&((*_12140_c.alloc)._field_Elifs[((*_12140_c.alloc)._field_Elifs.len() - 1LL)]));;
	for (; (_1687_i <= _1693_end); (_1687_i)++) {
		{
			{
				if (_1bdae7a17_isUnreachableConditionalCase(&((*(_1687_i))))) {
					(*(_1687_i))=nullptr;
				};
			};
		}
	_iter_next_1c67e918e:;
	}
	_iter_end_1c67e918e:;;
	if (((*_12140_c.alloc)._field_Elifs.len() == 0LL)) {
		return;;
	};
	if ((!(_1487_constCase))) {
		return;;
	};
	jule::I32 _1877_only = -1LL;;
	{
		auto expr = &((*_12140_c.alloc)._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67eac62:;
		if (it != expr_end) {
			jule::I32 _1887_j = it - expr->begin();
			jule::Ptr<_1bc3ac245_If> _18810_elif = *it;
			{
				if ((_18810_elif != nullptr)) {
					if ((_1877_only != -1LL)) {
						return;;
					};
					_1877_only=_1887_j;
				};
			}
			_iter_next_1c67eac62:;
			++it;
			_1887_j++;
			goto _iter_begin_1c67eac62;
		}
		_iter_end_1c67eac62:;
	};
	if ((_1877_only != -1LL)) {
		_1bdae27ae_setCurrentStmt(_self_, jule::Any((*((*_12140_c.alloc)._field_Elifs[_1877_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _1bdae3c11_buildDefaultConstantTrueCase(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b2080_Case> _20449_case, jule::I32* _20473_i, jule::Ptr<_1bc3b1557_Match>* _20486_m) {
	(*(_20449_case))._field_Exprs=nullptr;
	jule::I32 _2063_start = (*(_20473_i));;
	_julec_label_1c67ed858:;
	for (;;) {
		{
			if (((*((*_20449_case.alloc)._field_Scope))._field_Stmts.len() == 0LL)) {
				goto _iter_end_1c67ed803;
			};
			jule::Any *_2129_stmt = &((*((*_20449_case.alloc)._field_Scope))._field_Stmts[((*(*(_20449_case))._field_Scope.alloc)._field_Stmts.len() - 1LL)]);;
			{
				auto &_match_expr{ (*(_2129_stmt)) };
				
				if (_match_expr.type == &__jule_any_type46) {
					_case_begin_1c0e9de76:;
					{
						((*(_20473_i)))++;
						if (((*(_20473_i)) >= (*((*(_20486_m))))._field_Cases.len())) {
							(*(_2129_stmt))=jule::Any((*((*((*(_20486_m))))._field_Default))._field_Scope, &__jule_any_type20);
							goto _iter_end_1c67ed803;
						};
						_20449_case=(*((*(_20486_m))))._field_Cases[(*(_20473_i))];
						(*(_2129_stmt))=jule::Any((*(_20449_case))._field_Scope, &__jule_any_type20);
					}
				}
				else {
					_case_begin_1c0e9e064:;
					{
						goto _iter_end_1c67ed803;
					}
				}
				_match_end_1c0e9ddaa:;
			};
		}
	_iter_next_1c67ed803:;
	}
	_iter_end_1c67ed803:;;
	(*((*(_20486_m))))._field_Default=(*((*(_20486_m))))._field_Cases[_2063_start];
	((*((*(_20486_m))))._field_Cases).mut_slice(0LL, _2063_start);;
}



inline void _1bdae3eb9_optimizeMatch(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b1557_Match> _23034_m) {
	jule::Uintptr _2317_var = 0LLU;;
	if ((_1bdb0ac5b_Dynamic && (*(_23034_m))._field_TypeMatch)) {
		_2317_var=_1bdb02307_getDynamicVar((*((*_23034_m.alloc)._field_Expr))._field_Model);
	};
	_1bdb035c2_data _2397_alive = _1bdb035c2_data{._field_boundary=jule::Ptr<_1bdb0587c_boundary>(nullptr), ._field_nils=jule::Ptr<_1bdade349_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bdb006e0_dynamic>(nullptr), ._field_flags=0LL};;
	_1bdb0467d_loadCheckpoint(&_2397_alive, _1bdb0413e_getCheckpoint((*(_self_))._field_data.ptr()));
	_1bdb02eea_dataCheckpoint _2437_checkpoint = _1bdb0413e_getCheckpoint((*(_self_))._field_data);;
	{
		auto expr = &((*(_23034_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67eea68:;
		if (it != expr_end) {
			jule::Ptr<_1bc3b2080_Case> _24515_case = *it;
			{
				{
					auto expr = &((*(_24515_case))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6800508:;
					if (it != expr_end) {
						jule::Ptr<_1bc48354c_Data> _24616_expr = *it;
						{
							static__1bdae982c_optimizeData(&((*(_24616_expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
						}
						_iter_next_1c6800508:;
						++it;
						goto _iter_begin_1c6800508;
					}
					_iter_end_1c6800508:;
				};
				if ((((*_24515_case.alloc)._field_Exprs.len() == 1LL) && ((*((*_self_.alloc)._field_data))._field_dynamic != nullptr))) {
					jule::Ptr<_1bc4b64e7_Type> _2519_kind = _1bdb01eb6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_24515_case))._field_Exprs[0LL]))._field_Type, nullptr);;
					if ((_2519_kind != nullptr)) {
						_1bdb00b85_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _2317_var, _2519_kind);
					} else {
						_1bdb00ec6_removeVar((*(*(_self_))._field_data.alloc)._field_dynamic.ptr(), _2317_var);
					};
				};
				_1bdae67b3_optimizeChild(_self_, (*_24515_case.alloc)._field_Scope);
				_1bdb03da8_removeDeads(&_2397_alive, &((*_self_.alloc)._field_data));
				_1bdb0467d_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _2437_checkpoint);
			}
			_iter_next_1c67eea68:;
			++it;
			goto _iter_begin_1c67eea68;
		}
		_iter_end_1c67eea68:;
	};
	if (((*_23034_m.alloc)._field_Default != nullptr)) {
		_1bdae67b3_optimizeChild(_self_, (*(*(_23034_m))._field_Default.alloc)._field_Scope);
		_1bdb03da8_removeDeads(&_2397_alive, &((*_self_.alloc)._field_data));
	};
	_1bdb0467d_loadCheckpoint((*(_self_))._field_data, _1bdb043c5_getMutCheckpoint(&_2397_alive));
	if ((!(_1bdb09ba0_Cond))) {
		return;;
	};
	jule::Bool _2737_constCase = false;;
	{
		auto expr = &((*(_23034_m))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c680706a:;
		if (it != expr_end) {
			jule::I32 _27612_i = it - expr->begin();
			jule::Ptr<_1bc3b2080_Case> _27619_case = *it;
			{
				if ((!(_1bdae76c6_isConstantValidMatchCase(&(_27619_case))))) {
					goto _iter_next_1c680706a;
				};
				_2737_constCase=true;
				_1bdae3c11_buildDefaultConstantTrueCase(_self_, _27619_case, &(_27612_i), &(_23034_m));
				goto _iter_end_1c680706a;
			}
			_iter_next_1c680706a:;
			++it;
			_27612_i++;
			goto _iter_begin_1c680706a;
		}
		_iter_end_1c680706a:;
	};
	if (((*_23034_m.alloc)._field_Cases.len() == 0LL)) {
		return;;
	};
	jule::Ptr<_1bc3b2080_Case>* _2907_i = (&((*_23034_m.alloc)._field_Cases[0LL]));;
	jule::Ptr<_1bc3b2080_Case>* _2913_end = (&((*_23034_m.alloc)._field_Cases[((*_23034_m.alloc)._field_Cases.len() - 1LL)]));;
	for (; (_2907_i <= _2913_end); (_2907_i)++) {
		{
			{
				if (_1bdae7c9d_isUnreachableMatchCase(&((*(_2907_i))))) {
					(*(_2907_i))=nullptr;
				};
			};
		}
	_iter_next_1c6809c3d:;
	}
	_iter_end_1c6809c3d:;;
	if ((!(_2737_constCase))) {
		return;;
	};
	jule::I32 _3057_only = -1LL;;
	{
		auto expr = &((*_23034_m.alloc)._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c680b14b:;
		if (it != expr_end) {
			jule::I32 _3067_j = it - expr->begin();
			jule::Ptr<_1bc3b2080_Case> _30610_case = *it;
			{
				if ((_30610_case != nullptr)) {
					if ((_3057_only != -1LL)) {
						return;;
					};
					_3057_only=_3067_j;
				};
			}
			_iter_next_1c680b14b:;
			++it;
			_3067_j++;
			goto _iter_begin_1c680b14b;
		}
		_iter_end_1c680b14b:;
	};
	if ((_3057_only != -1LL)) {
		_1bdae27ae_setCurrentStmt(_self_, jule::Any((*((*_23034_m.alloc)._field_Cases[_3057_only]))._field_Scope, &__jule_any_type20));
	};
}



inline void _1bdae4272_optimizeRangeIter(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3adb5e_RangeIter> _32238_it) {
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && ((*(_32238_it))._field_KeyA != nullptr))) {
		_1bdb05d22_pushVar((*((*(_self_))._field_data))._field_boundary, _1bdb07cad_getBoundaryVar((*((*_32238_it.alloc)._field_Expr))._field_Model), jule::Any((*_32238_it.alloc)._field_KeyA, &__jule_any_type7));
	};
	_1bdae6a6b_optimizeChildHard(_self_, (*(_32238_it))._field_Scope);
	if (_1bdb0a9a3_Iter) {
		{
			auto &_match_expr{ (*((*(_32238_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type96) {
				_case_begin_1c6811030:;
				{
					jule::Ptr<_1bc2e33bd_CastingExprModel> _3349_cem = (*((*(_32238_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc2e33bd_CastingExprModel>();;
					jule::Ptr<_1bc4be610_Prim> _3355_eprim = _1bc4b8b9d_Prim((*(_3349_cem))._field_ExprType.ptr());;
					if (((_3355_eprim == nullptr) || (!(_1bc4c2aca_IsStr(_3355_eprim.ptr()))))) {
						goto _match_end_1c6810e97;
					};
					jule::Ptr<_1bc4c3b0e_Slc> _3399_s = _1bc4b9c04_Slc((*_3349_cem.alloc)._field_Type.ptr());;
					if ((_3399_s == nullptr)) {
						goto _match_end_1c6810e97;
					};
					jule::Ptr<_1bc4be610_Prim> _3435_prim = _1bc4b8b9d_Prim((*(_3399_s))._field_Elem.ptr());;
					if ((_3435_prim == nullptr)) {
						goto _match_end_1c6810e97;
					};
					{
						
						if (_1bc4c103a_IsU8(_3435_prim.ptr())) {
							_case_begin_1c68149b2:;
							{
								(*_32238_it.alloc)._field_Expr=(*_3349_cem.alloc)._field_Expr;
							}
						}
						else if (_1bc4c0a1d_IsI32(_3435_prim.ptr())) {
							_case_begin_1c6814b8d:;
							{
								static__1bdae982c_optimizeData(&((*((*_3349_cem.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
								_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bdadcb72_StrRuneIter>(_1bdadcb72_StrRuneIter{._field_Expr=(*_3349_cem.alloc)._field_Expr, ._field_Base=_32238_it}), &__jule_any_type123));
								return;;
							}
						}
						_match_end_1c68147c5:;
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type80) {
				_case_begin_1c680d8ce:;
				{
					jule::Ptr<_1bc2e4149_SliceExprModel> _3649_slc = (*((*(_32238_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc2e4149_SliceExprModel>();;
					jule::Ptr<_1bc4c5e30_Arr> _3659_arr = jule::new_ptr<_1bc4c5e30_Arr>(_1bc4c5e30_Arr{._field_Auto=false, ._field_N=(*(_3649_slc))._field_Elems.len(), ._field_Elem=(*_3649_slc.alloc)._field_ElemType});;
					(*((*((*_32238_it.alloc)._field_Expr))._field_Type))._field_Kind=jule::Trait(_3659_arr, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27);
					(*(*(_32238_it))._field_Expr.alloc)._field_Model=jule::Any(jule::new_ptr<_1bc2e7081_ArrayExprModel>(_1bc2e7081_ArrayExprModel{._field_Kind=_3659_arr, ._field_Elems=(*_3649_slc.alloc)._field_Elems}), &__jule_any_type88);
				}
			}
			_match_end_1c6810e97:;
		};
	};
	static__1bdae982c_optimizeData(&((*((*_32238_it.alloc)._field_Expr))._field_Model), &((*_self_.alloc)._field_data), _self_);
}



inline void _1bdae452a_optimizeWhileIter(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3ad213_WhileIter> _37938_it) {
	static__1bdae982c_optimizeData(&((*(_37938_it))._field_Expr), &((*(_self_))._field_data), _self_);
	_1bdae650a_optimizeStmt(_self_, (*_37938_it.alloc)._field_Next);
	_1bdae6a6b_optimizeChildHard(_self_, (*_37938_it.alloc)._field_Scope);
}



inline jule::Bool _1bdae486b_substr(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _38527_a) {
	if (((*((*(_38527_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_38527_a))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c666d3a9:;
			{
				jule::Ptr<_1bc2e58dc_SlicingExprModel> _3918_sem = (*((*(_38527_a))._field_Right))._field_Model.unsafe_cast_ptr<_1bc2e58dc_SlicingExprModel>();;
				if (_1bc5495e1_EqualModels((*((*(_38527_a))._field_Left))._field_Model, (*(_3918_sem))._field_Expr)) {
					_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bdadb8eb_MutSlicingExprModel>(_1bdadb8eb_MutSlicingExprModel{._field_Token=(*_3918_sem.alloc)._field_Token, ._field_Expr=(*_3918_sem.alloc)._field_Expr, ._field_Left=(*_3918_sem.alloc)._field_Left, ._field_Right=(*_3918_sem.alloc)._field_Right}), &__jule_any_type124));
					return true;;
				};
			}
		}
		_match_end_1c666d343:;
	};
	return false;;
}



inline jule::Bool _1bdae4bac_strAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _40530_a) {
	if ((!(_1bdb09de2_Str))) {
		return false;;
	};
	jule::Ptr<_1bc4be610_Prim> _4093_lp = _1bc4b8b9d_Prim((*((*(_40530_a))._field_Left))._field_Type.ptr());;
	if (((_4093_lp == nullptr) || (!(_1bc4c2aca_IsStr(_4093_lp.ptr()))))) {
		return false;;
	};
	return _1bdae486b_substr(_self_, _40530_a);;
}



inline jule::Bool _1bdae4eed_sliceAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _41632_a) {
	if (((!(_1bdb0a189_Slice)) || (_1bc4b9c04_Slc((*((*(_41632_a))._field_Left))._field_Type.ptr()) == nullptr))) {
		return false;;
	};
	return _1bdae486b_substr(_self_, _41632_a);;
}



inline void _1bdae52a6_optimizePostfix(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b03ad_Postfix> _42436_postfix) {
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		_1bdb07461_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(_42436_postfix))._field_Expr);
	};
	static__1bdae982c_optimizeData(&((*(_42436_postfix))._field_Expr), &((*(_self_))._field_data), _self_);
}



inline jule::Bool _1bdae55e7_cmplxAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign>* _43133_assign) {
	if ((((!(_1bdb0b94e_StdMathCmplx)) || ((*((*((*(_43133_assign))))._field_Op))._field_Id != static_cast<jule::U32>(71LLU))) || ((*(_1bcdc8b40_ProgramMeta))._field_MathCmplx == nullptr))) {
		return false;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _4357_s = _1bc4ba221_Struct((*((*((*(_43133_assign))))._field_Left))._field_Type.ptr());;
	if (((_4357_s == nullptr) || (_4357_s != (*((*(_1bcdc8b40_ProgramMeta))._field_MathCmplx))._field_Cmplx))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_43133_assign))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c68276b7:;
			{
				goto _match_end_1c6828465;
			}
		}
		else {
			_case_begin_1c68284cb:;
			{
				return false;;
			}
		}
		_match_end_1c6828465:;
	};
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _4457_fc = (*((*((*(_43133_assign))))._field_Right))._field_Model.cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31);;
	{
		auto &_match_expr{ (*(_4457_fc))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c6828c5c:;
			{
				goto _match_end_1c6829664;
			}
		}
		else {
			_case_begin_1c68296ca:;
			{
				return false;;
			}
		}
		_match_end_1c6829664:;
	};
	jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _4527_siem = (*(_4457_fc))._field_Expr.cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
	if ((!(_1bc5495e1_EqualModels((*(*((*(_43133_assign))))._field_Left.alloc)._field_Model, (*((*(_4527_siem))._field_Expr))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*(_4457_fc))._field_Func };
		
		if (_match_expr == (*((*(_1bcdc8b40_ProgramMeta))._field_MathCmplx))._field_CmplxAdd) {
			_case_begin_1c682b4bd:;
			{
				(*_4457_fc.alloc)._field_Func=(*(*(_1bcdc8b40_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxAddZ;
			}
		}
		else if (_match_expr == (*((*(_1bcdc8b40_ProgramMeta))._field_MathCmplx))._field_CmplxSub) {
			_case_begin_1c682b534:;
			{
				(*_4457_fc.alloc)._field_Func=(*(*(_1bcdc8b40_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxSubZ;
			}
		}
		else if (_match_expr == (*(*(_1bcdc8b40_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMul) {
			_case_begin_1c682b5ab:;
			{
				(*_4457_fc.alloc)._field_Func=(*(*(_1bcdc8b40_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxMulZ;
			}
		}
		else if (_match_expr == (*(*(_1bcdc8b40_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDiv) {
			_case_begin_1c682b633:;
			{
				(*_4457_fc.alloc)._field_Func=(*(*(_1bcdc8b40_ProgramMeta))._field_MathCmplx.alloc)._field_CmplxDivZ;
			}
		}
		else {
			_case_begin_1c682a643:;
			{
				return false;;
			}
		}
		_match_end_1c682b3e1:;
	};
	(*(_4527_siem))._field_Method=(*_4457_fc.alloc)._field_Func;
	_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_4457_fc, &__jule_any_type31), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)}), &__jule_any_type22));
	return true;;
}



inline void _1bdae58a0_optimizeAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0864_Assign> _47335_assign) {
	if ((((*((*(_47335_assign))._field_Op))._field_Id == static_cast<jule::U32>(71LLU)) && _1bc5495e1_EqualModels((*((*_47335_assign.alloc)._field_Left))._field_Model, (*((*_47335_assign.alloc)._field_Right))._field_Model))) {
		_1bdae29ac_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		return;;
	};
	if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
		if (_1bdb0772a_isBoundaryRiskyType((*((*(_47335_assign))._field_Left))._field_Type)) {
			_1bdb07461_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), (*(*(_47335_assign))._field_Left.alloc)._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
		if (_1bdae06e1_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_47335_assign))._field_Right))._field_Model)) {
			if (_1bdae09aa_isNilValidType((*((*_47335_assign.alloc)._field_Left))._field_Type)) {
				;
				_1bdade7de_pushVar((*(*(_self_))._field_data.alloc)._field_nils.ptr(), _1bdae0ceb_getNilVar((*(*(_47335_assign))._field_Left.alloc)._field_Model), true);
			};
		} else {
			_1bdae0328_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_47335_assign))._field_Left))._field_Model);
		};
	};
	if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
		jule::Ptr<_1bc4b64e7_Type> _4978_kind = _1bdb01eb6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_47335_assign))._field_Right))._field_Type, (*(*(_47335_assign))._field_Right.alloc)._field_Model);;
		if ((_4978_kind != nullptr)) {
			if (_1bdb01a87_isDynamicValidType((*((*_47335_assign.alloc)._field_Left))._field_Type)) {
				_1bdb00b85_pushVar((*(*(_self_))._field_data.alloc)._field_dynamic, _1bdb02307_getDynamicVar((*(*(_47335_assign))._field_Left.alloc)._field_Model), _4978_kind);
			};
		} else {
			_1bdb01779_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_47335_assign.alloc)._field_Left))._field_Model);
		};
	};
	{
		
		if (_1bdae4bac_strAssign(_self_, _47335_assign) || _1bdae4eed_sliceAssign(_self_, _47335_assign) || _1bdae55e7_cmplxAssign(_self_, &(_47335_assign))) {
			_case_begin_1c683795d:;
			{
				return;;
			}
		}
		_match_end_1c683960d:;
	};
	static__1bdae982c_optimizeData(&((*((*(_47335_assign))._field_Left))._field_Model), &((*(_self_))._field_data), _self_);
	static__1bdae982c_optimizeData(&((*((*_47335_assign.alloc)._field_Right))._field_Model), &((*_self_.alloc)._field_data), _self_);
	{
		auto &_match_expr{ (*((*(_47335_assign))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(47LLU) || _match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU) || _match_expr == static_cast<jule::U32>(45LLU) || _match_expr == static_cast<jule::U32>(46LLU) || _match_expr == static_cast<jule::U32>(40LLU) || _match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1c683d667:;
			{
				if (((!(_1bdb08ebd_Math)) || (_1bc4ba221_Struct((*(*(_47335_assign))._field_Left.alloc)._field_Type.ptr()) != nullptr))) {
					goto _match_end_1c683d5e0;
				};
				jule::U32 _5254_oldId;
				jule::Str _52511_oldKind;
				({
					jule::U32 ___jule_assign_arg = (*((*_47335_assign.alloc)._field_Op))._field_Id;
					jule::Str _1___jule_assign_arg = (*(*(_47335_assign))._field_Op.alloc)._field_Kind;
					_5254_oldId = ___jule_assign_arg;
					_52511_oldKind = _1___jule_assign_arg;
				});
				{
					auto &_match_expr{ (*((*(_47335_assign))._field_Op))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(40LLU)) {
						_case_begin_1c6842050:;
						{
							(*((*_47335_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(60LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("+", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(41LLU)) {
						_case_begin_1c6841b98:;
						{
							(*((*_47335_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(61LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("-", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(43LLU)) {
						_case_begin_1c6841c0e:;
						{
							(*(*(_47335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(63LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("/", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(44LLU)) {
						_case_begin_1c6841c75:;
						{
							(*(*(_47335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(64LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("%", 1));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(45LLU)) {
						_case_begin_1c6841cdb:;
						{
							(*(*(_47335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(46LLU)) {
						_case_begin_1c6841d52:;
						{
							(*(*(_47335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
						}
					}
					else if (_match_expr == static_cast<jule::U32>(47LLU)) {
						_case_begin_1c6841dc9:;
						{
							(*(*(_47335_assign))._field_Op.alloc)._field_Id=static_cast<jule::U32>(67LLU);
							(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("^", 1));
						}
					}
					else {
						_case_begin_1c683eb1e:;
						{
							__jule_panic_s(jule::Str::lit("opt: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/opt/scope.jule:549:5"));;
						}
					}
					_match_end_1c6841a55:;
				};
				jule::Ptr<_1bc2e1c90_BinaryExprModel> _5518_b = jule::new_ptr<_1bc2e1c90_BinaryExprModel>(_1bc2e1c90_BinaryExprModel{._field_Left=(*_47335_assign.alloc)._field_Left, ._field_Right=(*_47335_assign.alloc)._field_Right, ._field_Op=(*_47335_assign.alloc)._field_Op});;
				jule::Any _5568_model = jule::Any(_5518_b, &__jule_any_type114);;
				static__1bdae982c_optimizeData(&(_5568_model), &((*_self_.alloc)._field_data), _self_);
				if (((!__jule_any_type114_compare(_5568_model, _5518_b)) || ((*(_5518_b))._field_Op != (*_47335_assign.alloc)._field_Op))) {
					if (((*((*_47335_assign.alloc)._field_Op))._field_Id == static_cast<jule::U32>(67LLU))) {
						_1bdae29ac_removeCurrent(_self_);
						return;;
					};
					(*_47335_assign.alloc)._field_Right=jule::new_ptr<_1bc2e1795_OperandExprModel>((*(*(_47335_assign))._field_Right.alloc));
					(*_5518_b.alloc)._field_Op=jule::new_ptr<_1bc247014_Token>((*(*(_5518_b))._field_Op.alloc));
					(*((*_47335_assign.alloc)._field_Op))._field_Id=static_cast<jule::U32>(71LLU);
					(*(*(_47335_assign))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("=", 1));
					(*(*(_47335_assign))._field_Right.alloc)._field_Model=_5568_model;
					return;;
				};
				(*((*_47335_assign.alloc)._field_Op))._field_Id=_5254_oldId;
				(*(*(_47335_assign))._field_Op.alloc)._field_Kind=_52511_oldKind;
				return;;
			}
		}
		_match_end_1c683d5e0:;
	};
	if (_1bdb08bc1_Append) {
		{
			auto &_match_expr{ (*((*(_47335_assign))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type24) {
				_case_begin_1c68502d3:;
				{
					jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> _5829_m = (*((*(_47335_assign))._field_Right))._field_Model.unsafe_cast_ptr<_1bc2e8aaa_BuiltinAppendCallExprModel>();;
					if ((!(_1bdaee6bc_areSameLvalueExprModel(&((*(*(_47335_assign))._field_Left.alloc)._field_Model), &((*(_5829_m))._field_Dest))))) {
						return;;
					};
					{
						auto &_match_expr{ (*(_5829_m))._field_Elements };
						
						if (_match_expr.type == &__jule_any_type80) {
							_case_begin_1c68530a5:;
							{
								_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bdadc3be_PushToSliceExprModel>(_1bdadc3be_PushToSliceExprModel{._field_Dest=(*(_5829_m))._field_Dest, ._field_Elems=(*(_5829_m))._field_Elements.unsafe_cast_ptr<_1bc2e4149_SliceExprModel>()}), &__jule_any_type125));
							}
						}
						else {
							_case_begin_1c68520e8:;
							{
								_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bdadc798_AppendToSliceExprModel>(_1bdadc798_AppendToSliceExprModel{._field_Dest=(*(*(_47335_assign))._field_Left.alloc)._field_Model, ._field_Slice=(*(_5829_m))._field_Elements}), &__jule_any_type126));
							}
						}
						_match_end_1c6852082:;
					};
				}
			}
			_match_end_1c685025b:;
		};
	};
}



inline __jule_tuple_bool__jule_tuple_bool _1bdae5be1_tryOptimizeSwap(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _60637_assign) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	if (((((!(_1bdb0a442_Assign)) || ((*((*(_60637_assign))))._field_Left.len() != 2LL)) || ((*((*(_60637_assign))))._field_Left[0LL] == nullptr)) || ((*((*(_60637_assign))))._field_Left[1LL] == nullptr))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc2e737d_TupleExprModel> _61111_tup;;
	{
		auto &_match_expr{ (*((*(_60637_assign))))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c6670224:;
			{
				_61111_tup=(*((*(_60637_assign))))._field_Right.unsafe_cast_ptr<_1bc2e737d_TupleExprModel>();
			}
		}
		_match_end_1c667019c:;
	};
	if (((_61111_tup == nullptr) || ((*(_61111_tup))._field_Datas.len() != 2LL))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if ((_1bc5495e1_EqualModels((*((*((*(_60637_assign))))._field_Left[0LL]))._field_Model, (*((*(_61111_tup))._field_Datas[0LL]))._field_Model) && _1bc5495e1_EqualModels((*((*((*(_60637_assign))))._field_Left[1LL]))._field_Model, (*((*_61111_tup.alloc)._field_Datas[1LL]))._field_Model))) {
		_1bdae29ac_removeCurrent(_self_);
		((*_self_.alloc)._field_i)--;
		__jule_func_result.__jule_result_arg0 = true;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	if (((!(_1bc5495e1_EqualModels((*((*((*(_60637_assign))))._field_Left[0LL]))._field_Model, (*((*(_61111_tup))._field_Datas[1LL]))._field_Model))) || (!(_1bc5495e1_EqualModels((*((*((*(_60637_assign))))._field_Left[1LL]))._field_Model, (*((*(_61111_tup))._field_Datas[0LL]))._field_Model))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::Ptr<_1bdada653_SwapExprModel> _6357_model = jule::new_ptr<_1bdada653_SwapExprModel>(_1bdada653_SwapExprModel{._field_Left=(*((*(_60637_assign))))._field_Left[0LL], ._field_Right=(*((*(_60637_assign))))._field_Left[1LL]});;
	_1bdae27ae_setCurrentStmt(_self_, jule::Any(_6357_model, &__jule_any_type127));
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline void _1bdae5e99_optimizeMultiAssign(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign> _64540_assign) {
	{
		jule::Bool _6474_applied;
		jule::Bool _64713_analysis;
		({
			__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bdae5be1_tryOptimizeSwap(_self_, &(_64540_assign));
			_6474_applied = __jule_assign_result.__jule_result_arg0;
			_64713_analysis = __jule_assign_result.__jule_result_arg1;
		});
		if ((_6474_applied && (!(_64713_analysis)))) {
			return;;
		};
	};
	_1bdb02eea_dataCheckpoint _6747_checkpoint = _1bdb0413e_getCheckpoint((*(_self_))._field_data.ptr());;
	jule::Ptr<_1bc2e737d_TupleExprModel> _6767_tup = static_cast<jule::Ptr<_1bc2e737d_TupleExprModel>>(nullptr);;
	{
		auto &_match_expr{ (*(_64540_assign))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c686269c:;
			{
				_6767_tup=(*(_64540_assign))._field_Right.unsafe_cast_ptr<_1bc2e737d_TupleExprModel>();
			}
		}
		_match_end_1c6862636:;
	};
	{
		auto expr = &((*(_64540_assign))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6862c0d:;
		if (it != expr_end) {
			jule::I32 _6818_i = it - expr->begin();
			jule::Ptr<_1bc48354c_Data> _68115_l = *it;
			{
				if ((_68115_l != nullptr)) {
					if (((*(*(_self_))._field_data.alloc)._field_boundary != nullptr)) {
						if (_1bdb0772a_isBoundaryRiskyType((*_68115_l.alloc)._field_Type)) {
							_1bdb07461_possibleBoundaryRemove(&(_6747_checkpoint._field_boundary), (*_68115_l.alloc)._field_Model);
						};
					};
					if (((*(*(_self_))._field_data.alloc)._field_nils != nullptr)) {
						if (((_6767_tup != nullptr) && _1bdae06e1_isGuaranteedNonNilExpr(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*_6767_tup.alloc)._field_Datas[_6818_i]))._field_Model))) {
							if (_1bdae09aa_isNilValidType((*_68115_l.alloc)._field_Type)) {
								;
								_1bdade7de_pushVar(_6747_checkpoint._field_nils.ptr(), _1bdae0ceb_getNilVar((*_68115_l.alloc)._field_Model), true);
							};
						} else {
							_1bdae0328_possibleNilRemove(&(_6747_checkpoint._field_nils), (*_68115_l.alloc)._field_Model);
						};
					};
					if ((((*(*(_self_))._field_data.alloc)._field_dynamic != nullptr) && (_6767_tup != nullptr))) {
						jule::Ptr<_1bc4b64e7_Type> _69910_kind = _1bdb01eb6_isTypeGuaranteedDynamicData(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*_6767_tup.alloc)._field_Datas[_6818_i]))._field_Type, (*((*(_6767_tup))._field_Datas[_6818_i]))._field_Model);;
						if ((_69910_kind != nullptr)) {
							if (_1bdb01a87_isDynamicValidType((*_68115_l.alloc)._field_Type)) {
								_1bdb00b85_pushVar(_6747_checkpoint._field_dynamic, _1bdb02307_getDynamicVar((*_68115_l.alloc)._field_Model), _69910_kind);
							};
						} else {
							_1bdb01779_possibleDynamicRemove(&(_6747_checkpoint._field_dynamic), (*_68115_l.alloc)._field_Model);
						};
					};
					static__1bdae982c_optimizeData(&((*_68115_l.alloc)._field_Model), &((*_self_.alloc)._field_data), _self_);
				};
			}
			_iter_next_1c6862c0d:;
			++it;
			_6818_i++;
			goto _iter_begin_1c6862c0d;
		}
		_iter_end_1c6862c0d:;
	};
	static__1bdae982c_optimizeData(&((*_64540_assign.alloc)._field_Right), &((*_self_.alloc)._field_data), _self_);
	_1bdb0467d_loadCheckpoint((*_self_.alloc)._field_data.ptr(), _6747_checkpoint);
}



inline void _1bdae6252_optimizeRet(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3b2b1e_RetSt> _71832_r) {
	static__1bdae982c_optimizeData(&((*(_71832_r))._field_Expr), &((*(_self_))._field_data), _self_);
	if ((!(_1bdb0a6ea_Exceptional))) {
		return;;
	};
	{
		auto &_match_expr{ (*(_71832_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c686ce38:;
			{
				goto _match_end_1c686cee3;
			}
		}
		else {
			_case_begin_1c686d059:;
			{
				return;;
			}
		}
		_match_end_1c686cee3:;
	};
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _7327_fc = (*_71832_r.alloc)._field_Expr.cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31);;
	if (((((!((*((*((*(_7327_fc))._field_Func))._field_Decl))._field_Exceptional)) || ((*_7327_fc.alloc)._field_Except == nullptr)) || ((*((*_7327_fc.alloc)._field_Except))._field_Stmts.len() != 1LL)) || (!(_1bcdc35da_IsForwarded(&((*_7327_fc.alloc)._field_Except)))))) {
		return;;
	};
	_1bdae27ae_setCurrentStmt(_self_, jule::Any(jule::new_ptr<_1bdad9bc4_ExceptionalForwardingExprModel>(_1bdad9bc4_ExceptionalForwardingExprModel{._field_Expr=_7327_fc}), &__jule_any_type122));
}



inline void _1bdae650a_optimizeStmt(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Any _74233_stmt) {
	{
		auto &_match_expr{ _74233_stmt };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c687147a:;
			{
				_1bdae6a6b_optimizeChildHard(_self_, _74233_stmt.cast_ptr<_1bc3abd27_Scope>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6871205:;
			{
				_1bdae3282_optimizeData(_self_, _74233_stmt.cast_ptr<_1bc48354c_Data>(&__jule_any_type22));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c6871513:;
			{
				_1bdae353a_optimizeVar(_self_, _74233_stmt.cast_ptr<_1bc42dc12_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c68715ac:;
			{
				_1bdae37e3_optimizeConditional(_self_, _74233_stmt.cast_ptr<_1bc3ac960_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c6871623:;
			{
				_1bdae4272_optimizeRangeIter(_self_, _74233_stmt.cast_ptr<_1bc3adb5e_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c6871689:;
			{
				_1bdae452a_optimizeWhileIter(_self_, _74233_stmt.cast_ptr<_1bc3ad213_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c6871711:;
			{
				_1bdae6a6b_optimizeChildHard(_self_, (*(_74233_stmt.unsafe_cast_ptr<_1bc3acc5c_InfIter>()))._field_Scope);
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c6871788:;
			{
				_1bdae58a0_optimizeAssign(_self_, _74233_stmt.cast_ptr<_1bc3b0864_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c6871810:;
			{
				_1bdae5e99_optimizeMultiAssign(_self_, _74233_stmt.cast_ptr<_1bc3b0d1a_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c6871887:;
			{
				_1bdae3eb9_optimizeMatch(_self_, _74233_stmt.cast_ptr<_1bc3b1557_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c687190e:;
			{
				_1bdae6252_optimizeRet(_self_, _74233_stmt.cast_ptr<_1bc3b2b1e_RetSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c6871986:;
			{
				_1bdae52a6_optimizePostfix(_self_, _74233_stmt.cast_ptr<_1bc3b03ad_Postfix>(&__jule_any_type40));
			}
		}
		_match_end_1c6871326:;
	};
}



inline void _1bdae67b3_optimizeChild(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3abd27_Scope> _77234_child) {
	jule::Ptr<_1bdae1e40_scopeOptimizer> _7737_so = static__1bdae2506_new(_77234_child);;
	(*(_7737_so))._field_parent=_self_;
	(*_7737_so.alloc)._field_data=(*(_self_))._field_data;
	_1bdae6c69_optimize(_7737_so);
}



inline void _1bdae6a6b_optimizeChildHard(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_, jule::Ptr<_1bc3abd27_Scope> _80838_child) {
	_1bdb035c2_data _8117_alive = _1bdb035c2_data{._field_boundary=jule::Ptr<_1bdb0587c_boundary>(nullptr), ._field_nils=jule::Ptr<_1bdade349_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bdb006e0_dynamic>(nullptr), ._field_flags=0LL};;
	_1bdb0467d_loadCheckpoint(&_8117_alive, _1bdb0413e_getCheckpoint((*(_self_))._field_data.ptr()));
	_1bdae67b3_optimizeChild(_self_, _80838_child);
	_1bdb03da8_removeDeads(&_8117_alive, &((*_self_.alloc)._field_data));
	_1bdb0467d_loadCheckpoint((*(_self_))._field_data, _1bdb043c5_getMutCheckpoint(&_8117_alive));
}



inline void _1bdae6c69_optimize(jule::Ptr<_1bdae1e40_scopeOptimizer> _self_) {
	(*(_self_))._field_i=0LL;
	for (; ((*_self_.alloc)._field_i < (*((*_self_.alloc)._field_scope))._field_Stmts.len()); ((*_self_.alloc)._field_i)++) {
		{
			_1bdae650a_optimizeStmt(_self_, (*(*(_self_))._field_scope.alloc)._field_Stmts[(*_self_.alloc)._field_i]);
		}
	_iter_next_1c687baa1:;
	}
	_iter_end_1c687baa1:;;
}








inline jule::Bool _1bdae8e9c_exprOptimizer_eq(_1bdae8e9c_exprOptimizer *_self_, _1bdae8e9c_exprOptimizer _other_) {
	return 
		(_self_->_field_model == _other_._field_model) &&
		(_self_->_field_data == _self_->_field_data) &&
		(_self_->_field_inspector == _self_->_field_inspector) &&
		(_self_->_field_scopeOpt == _self_->_field_scopeOpt);
}

inline void static__1bdae9486_optimize(jule::Any* _2326_model) {
	static__1bdae982c_optimizeData(_2326_model, &(_1bdb02b10_emptyData), nullptr);
}



inline void static__1bdae982c_optimizeData(jule::Any* _2730_model, jule::Ptr<_1bdb035c2_data>* _2759_d, jule::Ptr<_1bdae1e40_scopeOptimizer> _2773_s) {
	if (_1bdc25370_exprEnabled) {
		jule::Ptr<_1bdae8e9c_exprOptimizer> _308_exop = jule::new_ptr<_1bdae8e9c_exprOptimizer>(_1bdae8e9c_exprOptimizer{._field_model=((jule::Ptr<jule::Any>)(_2730_model)), ._field_data=(*(_2759_d)), ._field_inspector=static__1bcdc1e8a_New(), ._field_scopeOpt=_2773_s});;
		_1bdaeddb4_do(_308_exop.ptr());
	};
}



inline jule::Bool _1bdae9b6d_selfCmpCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _4028_m) {
	if (((_1bc4b8b9d_Prim((*((*((*(_4028_m))))._field_Left))._field_Type.ptr()) != nullptr) && _1bc37cc2c_IsFloat((*(_1bc4b8b9d_Prim((*((*((*(_4028_m))))._field_Left))._field_Type)))._field_Kind))) {
		return false;;
	};
	if ((!(_1bc5495e1_EqualModels((*((*((*(_4028_m))))._field_Left))._field_Model, (*((*((*(_4028_m))))._field_Right))._field_Model)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_4028_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU) || _match_expr == static_cast<jule::U32>(53LLU) || _match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c688d013:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1bac25a27_NewBool(true), &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU) || _match_expr == static_cast<jule::U32>(69LLU) || _match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c688d09b:;
			{
				(*((*(_self_))._field_model))=jule::Any(static__1bac25a27_NewBool(false), &__jule_any_type15);
				return true;;
			}
		}
		else {
			_case_begin_1c688be02:;
			{
				return false;;
			}
		}
		_match_end_1c688cdc0:;
	};
}



inline jule::Bool _1bdae9eae_boolCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _6925_m) {
	jule::Ptr<_1bc4be610_Prim> _703_lp = _1bc4b8b9d_Prim((*((*((*(_6925_m))))._field_Left))._field_Type.ptr());;
	if (((_703_lp == nullptr) || (!(_1bc4c2844_IsBool(_703_lp.ptr()))))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_6925_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c68927ed:;
			{
				std::swap((*((*(_6925_m))))._field_Left, (*((*(_6925_m))))._field_Right);
			}
		}
		else {
			_case_begin_1c68919c8:;
			{
				{
					auto &_match_expr{ (*((*((*(_6925_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c6890cb3:;
						{
							goto _match_end_1c6892303;
						}
					}
					else {
						_case_begin_1c6892369:;
						{
							return false;;
						}
					}
					_match_end_1c6892303:;
				};
			}
		}
		_match_end_1c6891962:;
	};
	jule::Ptr<_1bac25065_Const> _877_c = (*((*((*(_6925_m))))._field_Right))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_6925_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(54LLU)) {
			_case_begin_1c6894448:;
			{
				if (_1bac26e46_ReadBool(_877_c.ptr())) {
					(*((*(_self_))._field_model))=(*((*((*(_6925_m))))._field_Left))._field_Model;
				} else {
					_1bac28530_SetBool(_877_c.ptr(), false);
					(*((*(_self_))._field_model))=jule::Any(_877_c, &__jule_any_type15);
				};
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(55LLU)) {
			_case_begin_1c68944e2:;
			{
				if (_1bac26e46_ReadBool(_877_c.ptr())) {
					_1bac28530_SetBool(_877_c, true);
					(*((*(_self_))._field_model))=jule::Any(_877_c, &__jule_any_type15);
				} else {
					(*((*(_self_))._field_model))=(*((*((*(_6925_m))))._field_Left))._field_Model;
				};
				return true;;
			}
		}
		else {
			_case_begin_1c68925bc:;
		}
		_match_end_1c68943b0:;
	};
	return false;;
}



inline jule::Bool _1bdaea300_arrayCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _12225_m) {
	jule::Ptr<_1bc4c5e30_Arr> _1237_arr = _1bc4b996d_Arr((*((*(_12225_m))._field_Left))._field_Type.ptr());;
	if (((_1237_arr == nullptr) || ((*(_1237_arr))._field_N != 0LL))) {
		return false;;
	};
	(*((*(_self_))._field_model))=jule::Any(static__1bac25a27_NewBool(true), &__jule_any_type15);
	return true;;
}



inline jule::Bool _1bdaea641_strCond(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _13424_m) {
	jule::Ptr<_1bc4be610_Prim> _1353_lp = _1bc4b8b9d_Prim((*((*((*(_13424_m))))._field_Left))._field_Type.ptr());;
	if (((_1353_lp == nullptr) || (!(_1bc4c2aca_IsStr(_1353_lp.ptr()))))) {
		return false;;
	};
	if ((((*((*((*(_13424_m))))._field_Op))._field_Id != static_cast<jule::U32>(50LLU)) && ((*(*((*(_13424_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(51LLU)))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_13424_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c60d88a2:;
			{
				std::swap((*((*(_13424_m))))._field_Left, (*((*(_13424_m))))._field_Right);
			}
		}
		else {
			_case_begin_1c60d7a6b:;
			{
				{
					auto &_match_expr{ (*((*((*(_13424_m))))._field_Right))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c60d65e7:;
						{
							goto _match_end_1c60d8396;
						}
					}
					else {
						_case_begin_1c60d840c:;
						{
							return false;;
						}
					}
					_match_end_1c60d8396:;
				};
			}
		}
		_match_end_1c60d7a05:;
	};
	jule::Ptr<_1bac25065_Const> _1557_c = (*((*((*(_13424_m))))._field_Right))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
	{
		auto &_match_expr{ (*((*((*(_13424_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c60d86a4:;
			{
				if ((_1bac271cc_ReadStr(_1557_c.ptr())).empty()) {
					jule::Any _1599_model = jule::Any(jule::new_ptr<_1bdadaa2c_EmptyCompareExprModel>(_1bdadaa2c_EmptyCompareExprModel{._field_Expr=(*((*((*(_13424_m))))._field_Left))._field_Model, ._field_Neg=false}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1599_model))))));
					goto _match_end_1c60da40e;
				};
				jule::Any _1668_model = jule::Any(jule::new_ptr<_1bdadb2d0_StrCompExprModel>(_1bdadb2d0_StrCompExprModel{._field_Left=(*((*((*(_13424_m))))._field_Left))._field_Model, ._field_Right=_1557_c, ._field_NotEq=false}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1668_model))))));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(51LLU)) {
			_case_begin_1c60da4b9:;
			{
				if ((_1bac271cc_ReadStr(_1557_c.ptr())).empty()) {
					jule::Any _1749_model = jule::Any(jule::new_ptr<_1bdadaa2c_EmptyCompareExprModel>(_1bdadaa2c_EmptyCompareExprModel{._field_Expr=(*((*((*(_13424_m))))._field_Left))._field_Model, ._field_Neg=true}), &__jule_any_type128);;
					(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1749_model))))));
					goto _match_end_1c60da40e;
				};
				jule::Any _1818_model = jule::Any(jule::new_ptr<_1bdadb2d0_StrCompExprModel>(_1bdadb2d0_StrCompExprModel{._field_Left=(*((*((*(_13424_m))))._field_Left))._field_Model, ._field_Right=_1557_c, ._field_NotEq=true}), &__jule_any_type129);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_1818_model))))));
			}
		}
		_match_end_1c60da40e:;
	};
	return true;;
}



inline jule::Bool _1bdaea982_strConcat(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _19226_m) {
	jule::Ptr<_1bc4be610_Prim> _1933_lp = _1bc4b8b9d_Prim((*((*((*(_19226_m))))._field_Left))._field_Type.ptr());;
	if (((_1933_lp == nullptr) || (!(_1bc4c2aca_IsStr(_1933_lp.ptr()))))) {
		return false;;
	};
	if (((*((*((*(_19226_m))))._field_Op))._field_Id != static_cast<jule::U32>(60LLU))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_19226_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c6906d3a:;
			{
				goto _match_end_1c6907a2d;
			}
		}
		else {
			_case_begin_1c6907a94:;
			{
				return false;;
			}
		}
		_match_end_1c6907a2d:;
	};
	jule::Ptr<_1bdada235_StrConcatExprModel> _2167_model = jule::new_ptr<_1bdada235_StrConcatExprModel>(_1bdada235_StrConcatExprModel{._field_Parts=jule::Slice<jule::Any>(nullptr)});;
	jule::Fn<void,jule::Any> _21711_step;;
	jule::Fn<void,jule::Any> *_2204__step = &(_21711_step);;
	_21711_step=jule::__new_closure<void,jule::Any>((void*)__jule_anon_1c6909854, jule::Ptr<__jule_anon_1c6909854_ctx>::make(__jule_anon_1c6909854_ctx{._2167_model=_2167_model,._2204__step=_2204__step}).as<jule::Uintptr>(), __jule_anon_1c6909854_ctx_handler);
	_21711_step(jule::Any((*(_19226_m)), &__jule_any_type114));
	jule::Any _2457_anyModel = jule::Any(_2167_model, &__jule_any_type130);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_2457_anyModel))))));
	return true;;
}



inline jule::Bool _1bdaeae38_tryNeutralElement1(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _25035_m, jule::Ptr<_1bac25065_Const> _25066_c, jule::Ptr<_1bc2e1795_OperandExprModel>* _25092_nc) {
	if (_1bac297c8_IsStr(_25066_c.ptr())) {
		if ((!(_1bdb09de2_Str))) {
			return false;;
		};
		if (((_1bac271cc_ReadStr(_25066_c.ptr())).empty() && ((*((*((*(_25035_m))))._field_Op))._field_Id == static_cast<jule::U32>(60LLU)))) {
			(*((*(_self_))._field_model))=(*((*(_25092_nc))))._field_Model;
			return true;;
		};
		return false;;
	};
	if (((!(_1bdb08ebd_Math)) || (_1bac27c16_AsF64(_25066_c.ptr()) != 0LL))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*((*(_25035_m))))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c6678c00:;
			{
				if (((*(_25092_nc)) == (*((*(_25035_m))))._field_Left)) {
					(*((*(_self_))._field_model))=(*((*(_25092_nc))))._field_Model;
					return true;;
				};
				(*((*(_self_))._field_model))=jule::Any(_25066_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c6679838:;
			{
				if (_1bc37cc2c_IsFloat((*(_1bc4b8b9d_Prim((*((*(_25092_nc))))._field_Type.ptr())))._field_Kind)) {
					goto _match_end_1c66796e5;
				};
				_1bac27ebe_SetI64(_25066_c.ptr(), 0LL);
				(*((*(_self_))._field_model))=jule::Any(_25066_c, &__jule_any_type15);
				return true;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c667989e:;
			{
				(*((*(_self_))._field_model))=(*((*(_25092_nc))))._field_Model;
				return true;;
			}
		}
		_match_end_1c66796e5:;
	};
	return false;;
}



inline jule::Bool _1bdaeb279_tryNeutralElement(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _30034_m) {
	{
		auto &_match_expr{ (*((*((*(_30034_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c667d661:;
			{
				jule::Ptr<_1bac25065_Const> _3048_c = (*((*((*(_30034_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1bac25065_Const>();;
				return _1bdaeae38_tryNeutralElement1(_self_, _30034_m, _3048_c, &((*((*(_30034_m))))._field_Right));;
			}
		}
		_match_end_1c667d5d9:;
	};
	{
		auto &_match_expr{ (*((*((*(_30034_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c667dba0:;
			{
				jule::Ptr<_1bac25065_Const> _3098_c = (*((*((*(_30034_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1bac25065_Const>();;
				return _1bdaeae38_tryNeutralElement1(_self_, _30034_m, _3098_c, &((*((*(_30034_m))))._field_Left));;
			}
		}
		_match_end_1c667db39:;
	};
	return false;;
}



inline void _1bdaeb532_checkBinaryForBoundary(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _31539_m) {
	if (((*((*(_self_))._field_data))._field_boundary == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*((*(_31539_m))))._field_Left))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c6682104:;
			{
				jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _3218_blc = (*((*((*(_31539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1bc2e8da7_BuiltinLenCallExprModel>();;
				if ((!(_1bdb079e4_isBoundaryValidType((*((*(_3218_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_31539_m))))._field_Op))._field_Id != static_cast<jule::U32>(70LLU)) && ((*(*((*(_31539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_31539_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_31539_m))))._field_Right))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1c6685404:;
							{
								jule::Ptr<_1bac25065_Const> _33310_c = jule::new_ptr<_1bac25065_Const>((*((*((*((*(_31539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1bac25065_Const>())));;
								_1bc2dc41c_Sub(_33310_c, (*(static__1bac25494_NewI64(1LL))));
								_1bdb05d22_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1bdb07cad_getBoundaryVar((*((*(_3218_blc))._field_Expr))._field_Model), jule::Any(_33310_c, &__jule_any_type15));
							}
						}
						_match_end_1c668537c:;
					};
					return;;
				};
				_1bdb05d22_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1bdb07cad_getBoundaryVar((*((*(_3218_blc))._field_Expr))._field_Model), (*((*((*(_31539_m))))._field_Right))._field_Model);
				return;;
			}
		}
		_match_end_1c668207c:;
	};
	{
		auto &_match_expr{ (*((*((*(_31539_m))))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c6682797:;
			{
				jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _3448_blc = (*((*((*(_31539_m))))._field_Right))._field_Model.unsafe_cast_ptr<_1bc2e8da7_BuiltinLenCallExprModel>();;
				if ((!(_1bdb079e4_isBoundaryValidType((*((*(_3448_blc))._field_Expr))._field_Type)))) {
					return;;
				};
				if ((((*((*((*(_31539_m))))._field_Op))._field_Id != static_cast<jule::U32>(69LLU)) && ((*(*((*(_31539_m))))._field_Op.alloc)._field_Id != static_cast<jule::U32>(50LLU)))) {
					return;;
				};
				if (((*((*((*(_31539_m))))._field_Op))._field_Id == static_cast<jule::U32>(50LLU))) {
					{
						auto &_match_expr{ (*((*((*(_31539_m))))._field_Left))._field_Model };
						
						if (_match_expr.type == &__jule_any_type15) {
							_case_begin_1c68565e7:;
							{
								jule::Ptr<_1bac25065_Const> _35610_c = jule::new_ptr<_1bac25065_Const>((*((*((*((*(_31539_m))))._field_Left))._field_Model.unsafe_cast_ptr<_1bac25065_Const>())));;
								_1bc2dc41c_Sub(_35610_c, (*(static__1bac25494_NewI64(1LL))));
								_1bdb05d22_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1bdb07cad_getBoundaryVar((*((*(_3448_blc))._field_Expr))._field_Model), jule::Any(_35610_c, &__jule_any_type15));
							}
						}
						_match_end_1c6898507:;
					};
					return;;
				};
				_1bdb05d22_pushVar((*((*(_self_))._field_data))._field_boundary.ptr(), _1bdb07cad_getBoundaryVar((*((*(_3448_blc))._field_Expr))._field_Model), (*((*((*(_31539_m))))._field_Left))._field_Model);
				return;;
			}
		}
		_match_end_1c6682720:;
	};
}



inline void _1bdaeb7da_checkBinaryForNil(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel>* _36734_m) {
	if (((*((*(_self_))._field_data))._field_nils == nullptr)) {
		return;;
	};
	jule::Uintptr _3717_var = _1bdae0ceb_getNilVar((*((*((*(_36734_m))))._field_Left))._field_Model);;
	if ((_3717_var != 0LLU)) {
		if ((!(_1bdae09aa_isNilValidType((*(*((*(_36734_m))))._field_Left.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_36734_m))))._field_Right))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1c68a018a:;
				{
					_1bdade7de_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _3717_var, ((*((*((*(_36734_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1c68a0113:;
		};
		return;;
	};
	_3717_var=_1bdae0ceb_getNilVar((*((*((*(_36734_m))))._field_Right))._field_Model);
	if ((_3717_var != 0LLU)) {
		if ((!(_1bdae09aa_isNilValidType((*(*((*(_36734_m))))._field_Right.alloc)._field_Type)))) {
			return;;
		};
		{
			auto &_match_expr{ (*((*((*(_36734_m))))._field_Left))._field_Model };
			
			if (_match_expr.type == &__jule_any_type15) {
				_case_begin_1c68a2874:;
				{
					_1bdade7de_pushVar((*((*(_self_))._field_data))._field_nils.ptr(), _3717_var, ((*((*((*(_36734_m))))._field_Op))._field_Id == static_cast<jule::U32>(51LLU)));
				}
			}
			_match_end_1c68a27ec:;
		};
		return;;
	};
}



inline void _1bdaeba93_shift(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _40121_m) {
	jule::I32 _4033_z = _1bc37486c_BitSizeOf((*(_1bc4b8b9d_Prim((*((*(_40121_m))._field_Left))._field_Type.ptr())))._field_Kind);;
	jule::U64 _4043_s = _1bac27980_AsU64((*((*_40121_m.alloc)._field_Right))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15).ptr());;
	if ((_4043_s >= static_cast<jule::U64>(_4033_z))) {
		(*((*(_self_))._field_model))=jule::Any(static__1bac2575d_NewU64(0LLU), &__jule_any_type15);
		return;;
	};
	jule::Any _4147_model = jule::Any(jule::new_ptr<_1bdadbbe8_UnsafeBinaryExprModel>(_1bdadbbe8_UnsafeBinaryExprModel{._field_Node=_40121_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4147_model))))));
}



inline void _1bdaebd4b_binary(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _41822_m) {
	if ((((*((*(_self_))._field_data))._field_flags & static_cast<jule::I32>(1LL)) != static_cast<jule::I32>(1LL))) {
		_1bdaeb532_checkBinaryForBoundary(_self_, &(_41822_m));
		_1bdaeb7da_checkBinaryForNil(_self_, &(_41822_m));
	};
	if (_1bdb09de2_Str) {
		{
			
			if (_1bdaea641_strCond(_self_, &(_41822_m)) || _1bdaea982_strConcat(_self_, &(_41822_m))) {
				_case_begin_1c6230a71:;
			}
			_match_end_1c6230961:;
		};
	};
	if (_1bdb0b014_Array) {
		if (_1bdaea300_arrayCond(_self_, _41822_m)) {
			return;;
		};
	};
	if (_1bdb09ba0_Cond) {
		{
			
			if (_1bdae9eae_boolCond(_self_, &(_41822_m)) || _1bdae9b6d_selfCmpCond(_self_, &(_41822_m))) {
				_case_begin_1c0d3aa9e:;
				{
					return;;
				}
			}
			_match_end_1c0d3a9a0:;
		};
	};
	if (_1bdaeb279_tryNeutralElement(_self_, &(_41822_m))) {
		return;;
	};
	if ((!(_1bdb08ebd_Math))) {
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _4563_lp = _1bc4b8b9d_Prim((*((*(_41822_m))._field_Left))._field_Type.ptr());;
	if ((_4563_lp == nullptr)) {
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _4603_rp = _1bc4b8b9d_Prim((*((*(_41822_m))._field_Right))._field_Type);;
	if ((_4603_rp == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_41822_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c6233843:;
			{
				if (((!(_1bc37c8db_IsInt((*(_4563_lp))._field_Kind))) || (!(_1bc5495e1_EqualModels((*(*(_41822_m))._field_Left.alloc)._field_Model, (*((*_41822_m.alloc)._field_Right))._field_Model))))) {
					goto _match_end_1c6233b51;
				};
				(*_41822_m.alloc)._field_Op=jule::new_ptr<_1bc247014_Token>((*(*(_41822_m))._field_Op.alloc));
				(*(*(_41822_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
				(*(*(_41822_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
				(*((*_41822_m.alloc)._field_Right))._field_Model=jule::Any(static__1bac2575d_NewU64(1LLU), &__jule_any_type15);
				jule::Any _4798_model = jule::Any(jule::new_ptr<_1bdadbbe8_UnsafeBinaryExprModel>(_1bdadbbe8_UnsafeBinaryExprModel{._field_Node=_41822_m}), &__jule_any_type131);;
				(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_4798_model))))));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c6233c0b:;
			{
				if (((!(_1bc37c8db_IsInt((*(_4563_lp))._field_Kind))) || (!(_1bc5495e1_EqualModels((*(*(_41822_m))._field_Left.alloc)._field_Model, (*((*_41822_m.alloc)._field_Right))._field_Model))))) {
					goto _match_end_1c6233b51;
				};
				jule::Ptr<_1bac25065_Const> _4888_c = static__1bac2575d_NewU64(0LLU);;
				(*(_4888_c))._field_Kind=(*(_4563_lp))._field_Kind;
				(*((*(_self_))._field_model))=jule::Any(_4888_c, &__jule_any_type15);
				return;;
			}
		}
		_match_end_1c6233b51:;
	};
	{
		auto &_match_expr{ (*((*(_41822_m))._field_Right))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c111ae06:;
			{
				goto _match_end_1c6234217;
			}
		}
		else {
			_case_begin_1c623427d:;
			{
				return;;
			}
		}
		_match_end_1c6234217:;
	};
	{
		auto &_match_expr{ (*((*(_41822_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c623a927:;
			{
				jule::Bool _5054_ok;
				jule::U64 _5058_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bdaee304_checkForBitShiftOpt(&((*_41822_m.alloc)._field_Left), &((*_41822_m.alloc)._field_Right));
					_5054_ok = __jule_assign_result.__jule_result_arg0;
					_5058_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5054_ok) {
					(*_41822_m.alloc)._field_Op=jule::new_ptr<_1bc247014_Token>((*(*(_41822_m))._field_Op.alloc));
					(*(*(_41822_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(56LLU);
					(*(*(_41822_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("<<", 2));
					jule::Ptr<_1bac25065_Const> _5109_c = (*((*_41822_m.alloc)._field_Right))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
					_1bac28277_SetU64(_5109_c.ptr(), _5058_x);
					_1bdaeba93_shift(_self_, _41822_m);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c623ab69:;
			{
				jule::Bool _5164_ok;
				jule::U64 _5168_x;
				({
					__jule_tuple_bool__jule_tuple_u64 __jule_assign_result = _1bdaee304_checkForBitShiftOpt(&((*_41822_m.alloc)._field_Left), &((*_41822_m.alloc)._field_Right));
					_5164_ok = __jule_assign_result.__jule_result_arg0;
					_5168_x = __jule_assign_result.__jule_result_arg1;
				});
				if (_5164_ok) {
					(*_41822_m.alloc)._field_Op=jule::new_ptr<_1bc247014_Token>((*(*(_41822_m))._field_Op.alloc));
					(*(*(_41822_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(57LLU);
					(*(*(_41822_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit(">>", 2));
					jule::Ptr<_1bac25065_Const> _5219_c = (*((*_41822_m.alloc)._field_Right))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
					_1bac28277_SetU64(_5219_c.ptr(), _5168_x);
					_1bdaeba93_shift(_self_, _41822_m);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c623abd0:;
			{
				jule::Ptr<_1bac25065_Const> _5278_c = (*((*_41822_m.alloc)._field_Right))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
				if ((_1bac27c16_AsF64(_5278_c.ptr()) == 2LL)) {
					(*_41822_m.alloc)._field_Op=jule::new_ptr<_1bc247014_Token>((*(*(_41822_m))._field_Op.alloc));
					(*(*(_41822_m))._field_Op.alloc)._field_Id=static_cast<jule::U32>(65LLU);
					(*(*(_41822_m))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("&", 1));
					_1bac27ebe_SetI64(_5278_c, 1LL);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c623a98d:;
			{
				jule::F64 _5394_s = _1bac27c16_AsF64((*((*(_41822_m))._field_Right))._field_Model.unsafe_cast_ptr<_1bac25065_Const>().ptr());;
				if ((_5394_s == 0LL)) {
					(*((*(_self_))._field_model))=(*(*(_41822_m))._field_Left.alloc)._field_Model;
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU) || _match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c623aa04:;
			{
				_1bdaeba93_shift(_self_, _41822_m);
				return;;
			}
		}
		else {
			_case_begin_1c623a3a5:;
			{
				return;;
			}
		}
		_match_end_1c623a8b1:;
	};
	jule::Any _5537_model = jule::Any(jule::new_ptr<_1bdadbbe8_UnsafeBinaryExprModel>(_1bdadbbe8_UnsafeBinaryExprModel{._field_Node=_41822_m}), &__jule_any_type131);;
	(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_5537_model))))));
}



inline void _1bdaec104_unary(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e2169_UnaryExprModel> _55721_m) {
	if ((!(_1bdb097d7_Ptr))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_55721_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c6696bb8:;
			{
				{
					auto &_match_expr{ (*((*(_55721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1c6697bdb:;
						{
							jule::Ptr<_1bc2e2169_UnaryExprModel> _5659_um = (*((*(_55721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc2e2169_UnaryExprModel>();;
							if (((*((*(_5659_um))._field_Op))._field_Id == static_cast<jule::U32>(65LLU))) {
								(*((*(_self_))._field_model))=(*((*_5659_um.alloc)._field_Expr))._field_Model;
								return;;
							};
							return;;
						}
					}
					_match_end_1c6697b64:;
				};
				if ((!(_1bdb09276_Access))) {
					return;;
				};
				if ((((*((*(_self_))._field_data))._field_nils != nullptr) && _1bdae09aa_isNilValidType((*((*(_55721_m))._field_Expr))._field_Type))) {
					jule::Uintptr _5795_var = _1bdae0ceb_getNilVar((*(*(_55721_m))._field_Expr.alloc)._field_Model);;
					if (_1bdadee71_isSafe((*((*(_self_))._field_data))._field_nils, _5795_var)) {
						jule::Any _58110_model = jule::Any(jule::new_ptr<_1bdadce6e_UnsafeDerefExprModel>(_1bdadce6e_UnsafeDerefExprModel{._field_Base=_55721_m}), &__jule_any_type132);;
						(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_58110_model))))));
						return;;
					};
					_1bdade7de_pushVar((*((*(_self_))._field_data))._field_nils, _5795_var, true);
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c6696ee8:;
			{
				{
					auto &_match_expr{ (*((*(_55721_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type7) {
						_case_begin_1c623c264:;
						{
							jule::Ptr<_1bc42dc12_Var> _5919_v = (*((*(_55721_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
							if ((*(_5919_v))._field_Reference) {
								jule::Any _59310_model = jule::Any(jule::new_ptr<_1bdadad29_RefExprModel>(_1bdadad29_RefExprModel{._field_Var=_5919_v}), &__jule_any_type133);;
								(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_59310_model))))));
							};
						}
					}
					_match_end_1c623c1ed:;
				};
			}
		}
		_match_end_1c6696e3d:;
	};
}



inline void _1bdaec3ac_structureLit(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e2a3d_StructLitExprModel> _60028_m) {
	{
		auto expr = &((*(_60028_m))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6242038:;
		if (it != expr_end) {
			jule::Ptr<_1bc2e2697_StructArgExprModel> _60115_arg = *it;
			{
				if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
					if (_1bdb0772a_isBoundaryRiskyType((*((*(_60115_arg))._field_Expr))._field_Type)) {
						_1bdb07461_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), jule::Any(_60115_arg, &__jule_any_type134));
					};
				};
				if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
					_1bdae0328_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), (*((*(_60115_arg))._field_Expr))._field_Model);
				};
				if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
					_1bdb01779_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), (*((*(_60115_arg))._field_Expr))._field_Model);
				};
			}
			_iter_next_1c6242038:;
			++it;
			goto _iter_begin_1c6242038;
		}
		_iter_end_1c6242038:;
	};
}



inline void _1bdaec665_casting(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e33bd_CastingExprModel> _61623_m) {
	jule::Bool _6173_valid = _1bdb01a87_isDynamicValidType((*(_61623_m))._field_ExprType);;
	jule::Uintptr _6183_var = _1bdb02307_getDynamicVar((*((*_61623_m.alloc)._field_Expr))._field_Model);;
	if (((_6173_valid && ((*((*(_self_))._field_data))._field_dynamic != nullptr)) && _1bdb013c2_isFits((*((*(_self_))._field_data))._field_dynamic, _6183_var, (*_61623_m.alloc)._field_Type))) {
		jule::Any _6208_model = jule::Any(jule::new_ptr<_1bdadd26b_UnsafeCastingExprModel>(_1bdadd26b_UnsafeCastingExprModel{._field_Base=_61623_m}), &__jule_any_type135);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6208_model))))));
		(*((*(_self_))._field_inspector))._field_SkipChild=true;
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_dynamic != nullptr) && _6173_valid)) {
		_1bdb00b85_pushVar((*((*(_self_))._field_data))._field_dynamic, _6183_var, (*_61623_m.alloc)._field_Type);
	};
}



inline void _1bdaec9c8_args(_1bdae8e9c_exprOptimizer* _self_, jule::Slice<jule::Ptr<_1bc300ead_ParamIns>> _63020_params, jule::Slice<jule::Any>* _63052_args) {
	{
		auto expr = _63052_args;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a25e8c:;
		if (it != expr_end) {
			jule::I32 _6318_i = it - expr->begin();
			jule::Any _63115_arg = *it;
			{
				if ((_6318_i >= _63020_params.len())) {
					goto _iter_next_1c6a25e8c;
				};
				jule::Ptr<_1bc300ead_ParamIns> _6358_p = _63020_params[_6318_i];;
				if (((*((*(_6358_p))._field_Decl))._field_Mutable && (*(*(_6358_p))._field_Decl.alloc)._field_Reference)) {
					if (((*((*(_self_))._field_data))._field_boundary != nullptr)) {
						if (_1bdb0772a_isBoundaryRiskyType((*_6358_p.alloc)._field_Type)) {
							_1bdb07461_possibleBoundaryRemove(&((*(*(_self_))._field_data.alloc)._field_boundary), _63115_arg);
						};
					};
					if (((*((*(_self_))._field_data))._field_nils != nullptr)) {
						_1bdae0328_possibleNilRemove(&((*(*(_self_))._field_data.alloc)._field_nils), _63115_arg);
					};
					if (((*((*(_self_))._field_data))._field_dynamic != nullptr)) {
						_1bdb01779_possibleDynamicRemove(&((*(*(_self_))._field_data.alloc)._field_dynamic), _63115_arg);
					};
				};
			}
			_iter_next_1c6a25e8c:;
			++it;
			_6318_i++;
			goto _iter_begin_1c6a25e8c;
		}
		_iter_end_1c6a25e8c:;
	};
}



inline void _1bdaecd3b_scope(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc3abd27_Scope>* _65522_s, jule::Bool _65539_child) {
	if ((_65539_child && ((*(_self_))._field_scopeOpt != nullptr))) {
		_1bdae6a6b_optimizeChildHard((*(_self_))._field_scopeOpt, (*(_65522_s)));
		return;;
	};
	jule::Ptr<_1bdae1e40_scopeOptimizer> _6607_scopt = static__1bdae2506_new((*(_65522_s)));;
	if (((*(_self_))._field_data != nullptr)) {
		(*(_6607_scopt))._field_data=jule::new_ptr<_1bdb035c2_data>(_1bdb035c2_data{._field_boundary=jule::Ptr<_1bdb0587c_boundary>(nullptr), ._field_nils=jule::Ptr<_1bdade349_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bdb006e0_dynamic>(nullptr), ._field_flags=0LL});
		_1bdb0467d_loadCheckpoint((*(_6607_scopt))._field_data, _1bdb0413e_getCheckpoint((*(_self_))._field_data));
	};
	_1bdae6c69_optimize(_6607_scopt);
}



inline void _1bdaed0e4_optimizeStrBuilderCall(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _67139_m) {
	;
	{
		if (((*((*(_1bcdc8b40_ProgramMeta))._field_StrBuilder))._field_Write == (*((*(_67139_m))))._field_Func)) {
			jule::Any _6789_model = jule::Any(jule::new_ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel>(_1bdad9e38_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_67139_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6789_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1bcdc8b40_ProgramMeta))._field_StrBuilder))._field_WriteByte == (*((*(_67139_m))))._field_Func)) {
			jule::Any _6789_model = jule::Any(jule::new_ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel>(_1bdad9e38_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_67139_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6789_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1bcdc8b40_ProgramMeta))._field_StrBuilder))._field_WriteRune == (*((*(_67139_m))))._field_Func)) {
			jule::Any _6789_model = jule::Any(jule::new_ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel>(_1bdad9e38_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_67139_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6789_model))))));
			return;;
		};
	};
	{
		if (((*((*(_1bcdc8b40_ProgramMeta))._field_StrBuilder))._field_WriteStr == (*((*(_67139_m))))._field_Func)) {
			jule::Any _6789_model = jule::Any(jule::new_ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel>(_1bdad9e38_FnCallIgnoreExceptionalExprModel{._field_Base=(*(_67139_m))}), &__jule_any_type136);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_6789_model))))));
			return;;
		};
	};
}



inline void _1bdaed39c_lenCall(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _68623_m) {
	if ((!(_1bdb0b4ed_Len))) {
		return;;
	};
	{
		auto &_match_expr{ (*((*(_68623_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c6a2d77a:;
			{
				goto _match_end_1c6a2ddc9;
			}
		}
		else {
			_case_begin_1c6a3709c:;
			{
				return;;
			}
		}
		_match_end_1c6a2ddc9:;
	};
	jule::Ptr<_1bc2e33bd_CastingExprModel> _6977_c = (*((*(_68623_m))._field_Expr))._field_Model.cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96);;
	jule::Ptr<_1bc4be610_Prim> _6987_prim = _1bc4b8b9d_Prim((*((*(_6977_c))._field_Expr))._field_Type.ptr());;
	if (((_6987_prim == nullptr) || (!(_1bc4c2aca_IsStr(_6987_prim.ptr()))))) {
		return;;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _7037_slc = _1bc4b9c04_Slc((*_6977_c.alloc)._field_Type.ptr());;
	if ((_7037_slc == nullptr)) {
		return;;
	};
	_6987_prim=_1bc4b8b9d_Prim((*(_7037_slc))._field_Elem.ptr());
	if ((_6987_prim == nullptr)) {
		return;;
	};
	{
		
		if (_1bc4c103a_IsU8(_6987_prim.ptr())) {
			_case_begin_1c6a3a743:;
			{
				(*_68623_m.alloc)._field_Expr=(*_6977_c.alloc)._field_Expr;
			}
		}
		else if (_1bc4c0a1d_IsI32(_6987_prim.ptr())) {
			_case_begin_1c6a3a8ec:;
			{
				jule::Ptr<_1bc302113_FnIns> _7208_func = (*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_RuneCount;;
				(*((*(_self_))._field_model))=jule::Any(jule::new_ptr<_1bc2e3c70_FnCallExprModel>(_1bc2e3c70_FnCallExprModel{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Func=_7208_func, ._field_IsCo=false, ._field_Expr=jule::Any(_7208_func, &__jule_any_type65), ._field_Args=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(*(_6977_c))._field_Expr.alloc)._field_Model; __jule_collection; }), ._field_Except=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Assigned=false}), &__jule_any_type31);
			}
		}
		_match_end_1c6a3a567:;
	};
}



inline void _1bdaed655_funcCall(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel> _72924_m) {
	_1bdaec9c8_args(_self_, (*((*(_72924_m))._field_Func))._field_Params, &((*_72924_m.alloc)._field_Args));
	if (((*_72924_m.alloc)._field_Except != nullptr)) {
		;
		_1bdaecd3b_scope(_self_, &((*_72924_m.alloc)._field_Except), true);
	};
	{
		
		if ((_1bdb0b740_StdStrings && ((*(_1bcdc8b40_ProgramMeta))._field_StrBuilder != nullptr))) {
			_case_begin_1c6a3ec86:;
			{
				_1bdaed0e4_optimizeStrBuilderCall(_self_, &(_72924_m));
			}
		}
		_match_end_1c6a3e5b0:;
	};
}



inline void _1bdaed90d_indexing(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e4600_IndexingExprModel> _74324_m) {
	if ((!(_1bdb09276_Access))) {
		return;;
	};
	jule::Bool _7483_array = (_1bc4b996d_Arr((*((*(_74324_m))._field_Expr))._field_Type.ptr()) != nullptr);;
	if ((_7483_array && _1bc483e87_IsConst((*_74324_m.alloc)._field_Index.ptr()))) {
		jule::Any _7518_model = jule::Any(jule::new_ptr<_1bdadbee5_UnsafeIndexingExprModel>(_1bdadbee5_UnsafeIndexingExprModel{._field_Node=_74324_m}), &__jule_any_type137);;
		(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7518_model))))));
		return;;
	};
	if ((((*((*(_self_))._field_data))._field_boundary != nullptr) && _1bdb079e4_isBoundaryValidType((*(*(_74324_m))._field_Expr.alloc)._field_Type))) {
		jule::Uintptr _7574_var = _1bdb07cad_getBoundaryVar((*(*(_74324_m))._field_Expr.alloc)._field_Model);;
		if (_1bdb0655e_fitsMaxSize((*((*(_self_))._field_data))._field_boundary, _7574_var, (*((*_74324_m.alloc)._field_Index))._field_Model)) {
			jule::Any _7599_model = jule::Any(jule::new_ptr<_1bdadbee5_UnsafeIndexingExprModel>(_1bdadbee5_UnsafeIndexingExprModel{._field_Node=_74324_m}), &__jule_any_type137);;
			(*((*(_self_))._field_model))=(*(((jule::Any*)((&(_7599_model))))));
			return;;
		};
		_1bdb05d22_pushVar((*((*(_self_))._field_data))._field_boundary, _7574_var, (*((*_74324_m.alloc)._field_Index))._field_Model);
	};
}



inline void _1bdaedbb6_anonFunc(_1bdae8e9c_exprOptimizer* _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _76724_m) {
	;
	_1bdaecd3b_scope(_self_, &((*((*(_76724_m))._field_Func))._field_Scope), false);
}



inline void _1bdaeddb4_do(_1bdae8e9c_exprOptimizer* _self_) {
	_1bcdc285e_Inspect((*(_self_))._field_inspector.ptr(), &((*((*(_self_))._field_model))), jule::__new_closure<void,jule::Any*>((void*)__jule_anon_1c669dc25, jule::Ptr<__jule_anon_1c669dc25_ctx>::make(__jule_anon_1c669dc25_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c669dc25_ctx_handler));
}








inline jule::Bool _1bdb0039e_dynamicVar_eq(_1bdb0039e_dynamicVar *_self_, _1bdb0039e_dynamicVar _other_) {
	return 
		(_self_->_field_var == _other_._field_var) &&
		(_self_->_field_kind == _self_->_field_kind);
}





inline void _1bdb00b85_pushVar(jule::Ptr<_1bdb006e0_dynamic> _self_, jule::Uintptr _2424_var, jule::Ptr<_1bc4b64e7_Type> _2442_kind) {
	if (((!(_1bdb0ac5b_Dynamic)) || (_2424_var == 0LLU))) {
		return;;
	};
	_2442_kind=_1bdb01eb6_isTypeGuaranteedDynamicData(&(_self_), _2442_kind, nullptr);
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6917136:;
		if (it != expr_end) {
			jule::I32 _307_i = it - expr->begin();
			{
				_1bdb0039e_dynamicVar *_319_v = &((*(_self_))._field_vars[_307_i]);;
				if (((*(_319_v))._field_var == _2424_var)) {
					(*(_319_v))._field_kind=_2442_kind;
					return;;
				};
			}
			_iter_next_1c6917136:;
			++it;
			_307_i++;
			goto _iter_begin_1c6917136;
		}
		_iter_end_1c6917136:;
	};
	{
		auto expr = &((*_self_.alloc)._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6918467:;
		if (it != expr_end) {
			jule::I32 _387_i = it - expr->begin();
			{
				_1bdb0039e_dynamicVar *_399_v = &((*_self_.alloc)._field_vars[_387_i]);;
				if (((*(_399_v))._field_var == 0LLU)) {
					({
						jule::Uintptr ___jule_assign_arg = _2424_var;
						jule::Ptr<_1bc4b64e7_Type> _1___jule_assign_arg = _2442_kind;
						(*(_399_v))._field_var = ___jule_assign_arg;
						(*(_399_v))._field_kind = _1___jule_assign_arg;
					});
					return;;
				};
			}
			_iter_next_1c6918467:;
			++it;
			_387_i++;
			goto _iter_begin_1c6918467;
		}
		_iter_end_1c6918467:;
	};
	(*_self_.alloc)._field_vars=jule::append((*_self_.alloc)._field_vars,({ auto __jule_collection = jule::Slice<_1bdb0039e_dynamicVar>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bdb0039e_dynamicVar{._field_var=_2424_var, ._field_kind=_2442_kind}; __jule_collection; }));
}



inline jule::Bool _1bdb00ec6_removeVar(_1bdb006e0_dynamic* _self_, jule::Uintptr _4925_var) {
	if ((_4925_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c691ae4d:;
			if (it != expr_end) {
				jule::I32 _518_i = it - expr->begin();
				{
					_1bdb0039e_dynamicVar *_5210_v = &((*(_self_))._field_vars[_518_i]);;
					if (((*(_5210_v))._field_var == _4925_var)) {
						(*(_5210_v))._field_var=0LLU;
						(*(_5210_v))._field_kind=nullptr;
						return true;;
					};
				}
				_iter_next_1c691ae4d:;
				++it;
				_518_i++;
				goto _iter_begin_1c691ae4d;
			}
			_iter_end_1c691ae4d:;
		};
	};
	return false;;
}



inline jule::Bool _1bdb013c2_isFits(_1bdb006e0_dynamic* _self_, jule::Uintptr _6422_var, jule::Ptr<_1bc4b64e7_Type> _6436_kind) {
	if ((_6422_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c691d00a:;
			if (it != expr_end) {
				_1bdb0039e_dynamicVar _6611_v = *it;
				{
					if ((_6611_v._field_var == _6422_var)) {
						return ((_6611_v._field_kind != nullptr) && _1bc4b6c34_Equal(_6611_v._field_kind, _6436_kind));;
					};
				}
				_iter_next_1c691d00a:;
				++it;
				goto _iter_begin_1c691d00a;
			}
			_iter_end_1c691d00a:;
		};
	};
	return false;;
}








inline jule::Bool _1bdb02eea_dataCheckpoint_eq(_1bdb02eea_dataCheckpoint *_self_, _1bdb02eea_dataCheckpoint _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic);
}






inline jule::Bool _1bdb035c2_data_eq(_1bdb035c2_data *_self_, _1bdb035c2_data _other_) {
	return 
		(_self_->_field_boundary == _other_._field_boundary) &&
		(_self_->_field_nils == _self_->_field_nils) &&
		(_self_->_field_dynamic == _self_->_field_dynamic) &&
		(_self_->_field_flags == _self_->_field_flags);
}

inline void _1bdb03da8_removeDeads(_1bdb035c2_data* _self_, jule::Ptr<_1bdb035c2_data>* _5228_other) {
	if ((((*(_self_))._field_boundary != nullptr) && ((*((*(_5228_other))))._field_boundary != nullptr))) {
		_1c691e88b__removeDeads(&((*(_self_))._field_boundary), &((*((*(_5228_other))))._field_boundary), 0LLU);
	};
	if ((((*(_self_))._field_nils != nullptr) && ((*((*(_5228_other))))._field_nils != nullptr))) {
		_1c6921728__removeDeads(&((*(_self_))._field_nils), &((*((*(_5228_other))))._field_nils), 0LLU);
	};
	if ((((*(_self_))._field_dynamic != nullptr) && ((*((*(_5228_other))))._field_dynamic != nullptr))) {
		_1c6a4a302__removeDeads(&((*(_self_))._field_dynamic), &((*((*(_5228_other))))._field_dynamic), 0LLU);
	};
}



inline _1bdb02eea_dataCheckpoint _1bdb0413e_getCheckpoint(_1bdb035c2_data* _self_) {
	_1bdb02eea_dataCheckpoint _677_c = _1bdb02eea_dataCheckpoint{._field_boundary=jule::Ptr<_1bdb0587c_boundary>(nullptr), ._field_nils=jule::Ptr<_1bdade349_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bdb006e0_dynamic>(nullptr)};;
	if (((*(_self_))._field_boundary != nullptr)) {
		_677_c._field_boundary=jule::new_ptr<_1bdb0587c_boundary>(_1bdb0587c_boundary{._field_vars=jule::Slice<_1bdb0553b_boundaryVar>(nullptr)});
		(*_677_c._field_boundary.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bdb0553b_boundaryVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bdb0553b_boundaryVar{._field_var=0, ._field_maxSize=jule::Slice<jule::Any>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_boundary.alloc)._field_vars);
		{
			auto expr = &((*_677_c._field_boundary.alloc)._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6a5025d:;
			if (it != expr_end) {
				jule::I32 _718_i = it - expr->begin();
				{
					(*(_677_c._field_boundary))._field_vars[_718_i]._field_maxSize=jule::append(({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; }),(*(_677_c._field_boundary))._field_vars[_718_i]._field_maxSize);
				}
				_iter_next_1c6a5025d:;
				++it;
				_718_i++;
				goto _iter_begin_1c6a5025d;
			}
			_iter_end_1c6a5025d:;
		};
	};
	if (((*(_self_))._field_nils != nullptr)) {
		_677_c._field_nils=jule::new_ptr<_1bdade349_nils>(_1bdade349_nils{._field_vars=jule::Slice<_1bdade008_nilVar>(nullptr)});
		(*_677_c._field_nils.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bdade008_nilVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bdade008_nilVar{._field_var=0, ._field_safe=false}; __jule_collection; }),(*(*(_self_))._field_nils.alloc)._field_vars);
	};
	if (((*(_self_))._field_dynamic != nullptr)) {
		_677_c._field_dynamic=jule::new_ptr<_1bdb006e0_dynamic>(_1bdb006e0_dynamic{._field_vars=jule::Slice<_1bdb0039e_dynamicVar>(nullptr)});
		(*_677_c._field_dynamic.alloc)._field_vars=jule::append(({ auto __jule_collection = jule::Slice<_1bdb0039e_dynamicVar>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = _1bdb0039e_dynamicVar{._field_var=0, ._field_kind=jule::Ptr<_1bc4b64e7_Type>(nullptr)}; __jule_collection; }),(*(*(_self_))._field_dynamic.alloc)._field_vars);
	};
	return _677_c;;
}



inline _1bdb02eea_dataCheckpoint _1bdb043c5_getMutCheckpoint(_1bdb035c2_data* _self_) {
	return _1bdb02eea_dataCheckpoint{._field_boundary=(*(_self_))._field_boundary, ._field_nils=(*(_self_))._field_nils, ._field_dynamic=(*(_self_))._field_dynamic};;
}



inline void _1bdb0467d_loadCheckpoint(_1bdb035c2_data* _self_, _1bdb02eea_dataCheckpoint _9534_c) {
	(*(_self_))._field_boundary=_9534_c._field_boundary;
	(*(_self_))._field_nils=_9534_c._field_nils;
	(*(_self_))._field_dynamic=_9534_c._field_dynamic;
}











inline void _1bdb05d22_pushVar(_1bdb0587c_boundary* _self_, jule::Uintptr _2523_var, jule::Any _2541_maxSize) {
	if (((!(_1bdb09276_Access)) || (_2523_var == 0LLU))) {
		return;;
	};
	if ((!(_1bdb068e4_isValidBoundaryInfo(_2541_maxSize)))) {
		return;;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6927e7c:;
		if (it != expr_end) {
			_1bdb0553b_boundaryVar _3315_v = *it;
			{
				if ((_3315_v._field_var == _2523_var)) {
					{
						auto expr = &(_3315_v._field_maxSize);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6928d07:;
						if (it != expr_end) {
							jule::I32 _359_i = it - expr->begin();
							jule::Any _3512_max = *it;
							{
								if (_1bdb07131_fitsSize(_2541_maxSize, _3512_max)) {
									_3315_v._field_maxSize[_359_i]=_2541_maxSize;
									return;;
								};
							}
							_iter_next_1c6928d07:;
							++it;
							_359_i++;
							goto _iter_begin_1c6928d07;
						}
						_iter_end_1c6928d07:;
					};
					{ jule::Slice<jule::Any> &__jule_push_dest = _3315_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_1c6927e7c:;
			++it;
			goto _iter_begin_1c6927e7c;
		}
		_iter_end_1c6927e7c:;
	};
	{
		auto expr = &((*(_self_))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c692839a:;
		if (it != expr_end) {
			_1bdb0553b_boundaryVar _4715_v = *it;
			{
				if ((_4715_v._field_var == 0LLU)) {
					_4715_v._field_var=_2523_var;
					{ jule::Slice<jule::Any> &__jule_push_dest = _4715_v._field_maxSize; __jule_push_dest.push(_2541_maxSize); };
					return;;
				};
			}
			_iter_next_1c692839a:;
			++it;
			goto _iter_begin_1c692839a;
		}
		_iter_end_1c692839a:;
	};
	{ jule::Slice<_1bdb0553b_boundaryVar> &__jule_push_dest = (*(_self_))._field_vars; __jule_push_dest.push(_1bdb0553b_boundaryVar{._field_var=_2523_var, ._field_maxSize=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _2541_maxSize; __jule_collection; })}); };
}



inline jule::Bool _1bdb06163_removeVar(_1bdb0587c_boundary* _self_, jule::Uintptr _5825_var) {
	if ((_5825_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c60e412c:;
			if (it != expr_end) {
				_1bdb0553b_boundaryVar _6016_v = *it;
				{
					if ((_6016_v._field_var == _5825_var)) {
						_6016_v._field_var=0LLU;
						(_6016_v._field_maxSize).mut_slice(0LL, 0LL);;
						return true;;
					};
				}
				_iter_next_1c60e412c:;
				++it;
				goto _iter_begin_1c60e412c;
			}
			_iter_end_1c60e412c:;
		};
	};
	return false;;
}



inline jule::Bool _1bdb0655e_fitsMaxSize(_1bdb0587c_boundary* _self_, jule::Uintptr _7227_var, jule::Any _7241_expr) {
	if ((_7227_var != 0LLU)) {
		{
			auto expr = &((*(_self_))._field_vars);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6a611a3:;
			if (it != expr_end) {
				_1bdb0553b_boundaryVar _7411_v = *it;
				{
					if ((_7411_v._field_var == _7227_var)) {
						return (_1bdb06cac_fitsMaxSize(_7411_v._field_maxSize, _7241_expr) != -1LL);;
					};
				}
				_iter_next_1c6a611a3:;
				++it;
				goto _iter_begin_1c6a611a3;
			}
			_iter_end_1c6a611a3:;
		};
	};
	return false;;
}








inline jule::Bool _1bdc25716_Optimizer_eq(_1bdc25716_Optimizer *_self_, _1bdc25716_Optimizer _other_) {
	return 
		(_self_->_field_ir == _other_._field_ir);
}

inline jule::Ptr<_1bdc25716_Optimizer> static__1bdc25bcd_New(jule::Ptr<_1bcdbd492_IR>* _2121_ir) {
	return jule::new_ptr<_1bdc25716_Optimizer>(_1bdc25716_Optimizer{._field_ir=(*(_2121_ir))});;
}



inline void _1bdc25e86_optimizeExpr(_1bdc25716_Optimizer* _self_, jule::Any* _2733_model) {
	static__1bdae9486_optimize(_2733_model);
}



inline void _1bdc2623e_optimizeGlobal(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc42dc12_Var>* _3135_v) {
	if ((!((*((*(_3135_v))))._field_Binded))) {
		_1bdc25e86_optimizeExpr(_self_, &((*((*((*((*(_3135_v))))._field_Value))._field_Data))._field_Model));
	};
}



inline void _1bdc264e7_optimizeFunction(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc2ee055_Fn>* _3737_func) {
	if ((*((*(_3737_func))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_3737_func))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c692d5e2:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _4115_ins = *it;
			{
				jule::Ptr<_1bdae1e40_scopeOptimizer> _428_so = static__1bdae2506_new((*(_4115_ins))._field_Scope);;
				_1bdae6c69_optimize(_428_so);
			}
			_iter_next_1c692d5e2:;
			++it;
			goto _iter_begin_1c692d5e2;
		}
		_iter_end_1c692d5e2:;
	};
}



inline void _1bdc267a0_optimizeStruct(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc27d26a_Struct>* _4735_s) {
	if ((*((*(_4735_s))))._field_Binded) {
		return;;
	};
	{
		auto expr = &((*((*(_4735_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c692ecb9:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _5115_ins = *it;
			{
				{
					auto expr = &((*(_5115_ins))._field_Fields);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6930759:;
					if (it != expr_end) {
						jule::Ptr<_1bc280525_FieldIns> _5216_f = *it;
						{
							if (((*(_5216_f))._field_Default != nullptr)) {
								_1bdc25e86_optimizeExpr(_self_, &((*(*(_5216_f))._field_Default.alloc)._field_Model));
							};
						}
						_iter_next_1c6930759:;
						++it;
						goto _iter_begin_1c6930759;
					}
					_iter_end_1c6930759:;
				};
				{
					auto expr = &((*_5115_ins.alloc)._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a60c30:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _5716_m = *it;
						{
							_1bdc264e7_optimizeFunction(_self_, &(_5716_m));
						}
						_iter_next_1c6a60c30:;
						++it;
						goto _iter_begin_1c6a60c30;
					}
					_iter_end_1c6a60c30:;
				};
			}
			_iter_next_1c692ecb9:;
			++it;
			goto _iter_begin_1c692ecb9;
		}
		_iter_end_1c692ecb9:;
	};
}



inline void _1bdc26a58_optimizeGlobals(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _6336_p) {
	{
		auto expr = &((*((*(_6336_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a634b3:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _6415_f = *it;
			{
				{
					auto expr = &((*(_6415_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a63ea8:;
					if (it != expr_end) {
						jule::Ptr<_1bc42dc12_Var> _6516_v = *it;
						{
							_1bdc2623e_optimizeGlobal(_self_, &(_6516_v));
						}
						_iter_next_1c6a63ea8:;
						++it;
						goto _iter_begin_1c6a63ea8;
					}
					_iter_end_1c6a63ea8:;
				};
			}
			_iter_next_1c6a634b3:;
			++it;
			goto _iter_begin_1c6a634b3;
		}
		_iter_end_1c6a634b3:;
	};
}



inline void _1bdc26d11_optimizeFunctions(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _7138_p) {
	{
		auto expr = &((*((*(_7138_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a644c5:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _7215_f = *it;
			{
				{
					auto expr = &((*(_7215_f))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a653c7:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _7316_func = *it;
						{
							_1bdc264e7_optimizeFunction(_self_, &(_7316_func));
						}
						_iter_next_1c6a653c7:;
						++it;
						goto _iter_begin_1c6a653c7;
					}
					_iter_end_1c6a653c7:;
				};
			}
			_iter_next_1c6a644c5:;
			++it;
			goto _iter_begin_1c6a644c5;
		}
		_iter_end_1c6a644c5:;
	};
}



inline void _1bdc270b9_optimizeStructs(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _7936_p) {
	{
		auto expr = &((*((*(_7936_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a658e4:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _8015_f = *it;
			{
				{
					auto expr = &((*(_8015_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a667e6:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> _8116_s = *it;
						{
							_1bdc267a0_optimizeStruct(_self_, &(_8116_s));
						}
						_iter_next_1c6a667e6:;
						++it;
						goto _iter_begin_1c6a667e6;
					}
					_iter_end_1c6a667e6:;
				};
			}
			_iter_next_1c6a658e4:;
			++it;
			goto _iter_begin_1c6a658e4;
		}
		_iter_end_1c6a658e4:;
	};
}



inline void _1bdc27372_optimizePackage(_1bdc25716_Optimizer* _self_, jule::Ptr<_1bc3e0421_Package>* _8736_p) {
	_1bdc26a58_optimizeGlobals(_self_, _8736_p);
	_1bdc26d11_optimizeFunctions(_self_, _8736_p);
	_1bdc270b9_optimizeStructs(_self_, _8736_p);
}



inline void _1bdc27570_Optimize(_1bdc25716_Optimizer* _self_) {
	_1bdc277d4_detectEnabled();
	if (_1bdb08918_Deadcode) {
		_1bdc1e116_EliminateDefines(&((*(_self_))._field_ir));
	};
	if ((_1bdc2557e_scopeEnabled || _1bdc25370_exprEnabled)) {
		{
			auto expr = &((*((*(_self_))._field_ir))._field_Used);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c66a2b19:;
			if (it != expr_end) {
				jule::Ptr<_1bc3dcb9e_ImportInfo> _10316_u = *it;
				{
					if ((!((*(_10316_u))._field_Binded))) {
						_1bdc27372_optimizePackage(_self_, &((*_10316_u.alloc)._field_Package));
					};
				}
				_iter_next_1c66a2b19:;
				++it;
				goto _iter_begin_1c66a2b19;
			}
			_iter_end_1c66a2b19:;
		};
		_1bdc27372_optimizePackage(_self_, &((*(*(_self_))._field_ir.alloc)._field_Main));
	};
	if (_1bdb08918_Deadcode) {
		_1bdc23e2e_EliminateScopes(&((*(_self_))._field_ir));
	};
}








inline jule::Bool _1bdedd0c7_AbsTime_eq(_1bdedd0c7_AbsTime *_self_, _1bdedd0c7_AbsTime _other_) {
	return 
		(_self_->_field_Day == _other_._field_Day) &&
		(_self_->_field_WeekDay == _self_->_field_WeekDay) &&
		(_self_->_field_YearDay == _self_->_field_YearDay) &&
		(_self_->_field_Month == _self_->_field_Month) &&
		(_self_->_field_Year == _self_->_field_Year) &&
		(_self_->_field_Second == _self_->_field_Second) &&
		(_self_->_field_Minute == _self_->_field_Minute) &&
		(_self_->_field_Hour == _self_->_field_Hour);
}






inline jule::Bool _1bdedd79d_Time_eq(_1bdedd79d_Time *_self_, _1bdedd79d_Time _other_) {
	return 
		(_self_->_field_sec == _other_._field_sec);
}

inline _1bdedd79d_Time static__1bdeddb88_Unix(jule::U64 _9117_sec) {
	return _1bdedd79d_Time{._field_sec=_9117_sec};;
}



inline _1bdedd79d_Time static__1bdeddd97_Now(void) {
	return static__1bdeddb88_Unix(_1bdee088d_unix());;
}



inline _1bdedd0c7_AbsTime _1bdee0580_Abs(_1bdedd79d_Time* _self_) {
	jule::U64 _1273_secs = (jule::U64)((*(_self_))._field_sec - 951868800LLU);;
	jule::U64 _1287_days = (_1273_secs / 86400LLU);;
	jule::U64 _1297_remSecs = (_1273_secs % 86400LL);;
	if ((_1297_remSecs < 0LLU)) {
		_1297_remSecs+=86400LLU;
		(_1287_days)--;
	};
	jule::U64 _1357_qcCycles = (_1287_days / 146097LLU);;
	jule::U64 _1367_remDays = (_1287_days % 146097LL);;
	if ((_1367_remDays < 0LLU)) {
		_1367_remDays+=146097LLU;
		(_1357_qcCycles)--;
	};
	jule::U64 _1427_cCycles = (_1367_remDays / 36524LLU);;
	if ((_1427_cCycles == 4LLU)) {
		(_1427_cCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1427_cCycles * 36524LLU);
	jule::U64 _1487_qCycles = (_1367_remDays / 1461LLU);;
	if ((_1487_qCycles == 25LLU)) {
		(_1487_qCycles)--;
	};
	_1367_remDays-=(jule::U64)(_1487_qCycles * 1461LLU);
	jule::U64 _1547_remYears = (_1367_remDays / 365LLU);;
	if ((_1547_remYears == 4LLU)) {
		(_1547_remYears)--;
	};
	_1367_remDays-=(jule::U64)(_1547_remYears * 365LLU);
	jule::U64 _1607_leap = static_cast<jule::U64>(0LLU);;
	if (((_1547_remYears == 0LLU) && ((_1487_qCycles > 0LLU) || (_1427_cCycles == 0LLU)))) {
		_1607_leap=1LLU;
	};
	jule::U64 _1647_yDay = (jule::U64)((jule::U64)((jule::U64)(_1367_remDays + 31LLU) + 28LLU) + _1607_leap);;
	if ((_1647_yDay >= (jule::U64)(365LLU + _1607_leap))) {
		_1647_yDay-=(jule::U64)(365LLU + _1607_leap);
	};
	jule::U64 _1697_months = static_cast<jule::U64>(0LLU);;
	for (; (_1bdedc538_mdays[static_cast<jule::I32>(_1697_months)] <= _1367_remDays); (_1697_months)++) {
		{
			_1367_remDays-=_1bdedc538_mdays[static_cast<jule::I32>(_1697_months)];
		}
	_iter_next_1c66bd519:;
	}
	_iter_end_1c66bd519:;;
	_1bdedd0c7_AbsTime _1747_t = _1bdedd0c7_AbsTime{._field_Day=0, ._field_WeekDay=0, ._field_YearDay=0, ._field_Month=0, ._field_Year=0, ._field_Second=0, ._field_Minute=0, ._field_Hour=0};;
	_1747_t._field_Year=(jule::U64)((jule::U64)((jule::U64)((jule::U64)(_1547_remYears + (jule::U64)(4LLU * _1487_qCycles)) + (jule::U64)(100LLU * _1427_cCycles)) + (jule::U64)(400LLU * _1357_qcCycles)) + 100LLU);
	_1747_t._field_Month=(jule::U64)(_1697_months + 2LLU);
	if ((_1747_t._field_Month >= 12LLU)) {
		_1747_t._field_Month-=12LLU;
		(_1747_t._field_Year)++;
	};
	_1747_t._field_Month+=1LLU;
	_1747_t._field_Year+=1900LLU;
	_1747_t._field_Day=(jule::U64)(_1367_remDays + 1LLU);
	_1747_t._field_WeekDay=((jule::U64)(3LLU + _1287_days) % 7LL);
	if ((_1747_t._field_WeekDay < 0LLU)) {
		_1747_t._field_WeekDay+=7LLU;
	};
	_1747_t._field_YearDay=_1647_yDay;
	_1747_t._field_Hour=(_1297_remSecs / 3600LLU);
	_1747_t._field_Minute=(({ jule::U64 __jule_x = _1297_remSecs; jule::U64 __jule_y = 60LLU; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) % 60LL);
	_1747_t._field_Second=(_1297_remSecs % 60LL);
	return _1747_t;;
}








inline jule::Bool _1bdc2983b_scopeCoder_eq(_1bdc2983b_scopeCoder *_self_, _1bdc2983b_scopeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc);
}

inline jule::Ptr<_1bdc2983b_scopeCoder> static__1bdc2a034_new(jule::Ptr<_1bdeeab84_ObjectCoder>* _3721_oc) {
	return jule::new_ptr<_1bdc2983b_scopeCoder>(_1bdc2983b_scopeCoder{._field_oc=(*(_3721_oc))});;
}



inline void _1c6992029_iterHead(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter>* _4429_it, jule::Bool* _4441_ref, jule::Str _4452_begin) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bdb0861b_Copy && _1bdc32c62_isCopyOptimizable(&((*((*(_4429_it))))._field_Expr)))) {
		(*(_4441_ref))=true;
		{
			auto &_match_expr{ (*((*((*(_4429_it))))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c3400da9:;
				{
					jule::Ptr<_1bc42dc12_Var> _535_v = (*((*((*(_4429_it))))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
					if ((*(_535_v))._field_Reference) {
						_1bdc44955_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
						goto _match_end_1c33ee2d6;
					};
					goto _case_begin_1c33ee34c;
				}
			}
			else {
				_case_begin_1c33ee34c:;
				{
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bdc44955_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c33ee2d6:;
		};
	} else {
		_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*((*(_4429_it))))._field_Expr))._field_Model);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto it = expr", 14));
	if ((*(_4441_ref))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto expr_end = expr", 20));
	if ((*(_4441_ref))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("end();\n", 7));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, _4452_begin);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (it != expr_end) {\n", 22));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
}



inline void _1bdc2a70a_rangeIndexIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter>* _9336_it) {
	_1a95669ea_Builder _947_sb = static__1a9567369_New(64LL);;
	static__1bdc4dcd3_iterBegin(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _963_begin = _1a956837b_Str(&_947_sb);;
	_1a9568579_Clear(&_947_sb);
	static__1bdc4e3aa_iterNext(&(_947_sb), static_cast<jule::Uintptr>((*(_9336_it))));
	jule::Str _993_next = _1a956837b_Str(&_947_sb);;
	jule::Bool _1017_ref = false;;
	_1c6992029_iterHead(_self_, _9336_it, &(_1017_ref), _963_begin);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		_1be003032_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c6ab6b32, jule::Ptr<__jule_anon_1c6ab6b32_ctx>::make(__jule_anon_1c6ab6b32_ctx{._self_=_self_,._1017_ref=_1017_ref}).as<jule::Uintptr>(), __jule_anon_1c6ab6b32_ctx_handler));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	if (((*((*(_9336_it))))._field_KeyB != nullptr)) {
		(*(*((*(_9336_it))))._field_KeyB.alloc)._field_Reference=(_1bdb0861b_Copy && _1bdc3312a_isIterCopyOptimizable(&((*((*(_9336_it))))._field_Expr), &((*((*(_9336_it))))._field_KeyB)));
		_1be003032_varInitExpr((*_self_.alloc)._field_oc, &((*((*(_9336_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c6aba98d, jule::Ptr<__jule_anon_1c6aba98d_ctx>::make(__jule_anon_1c6aba98d_ctx{._self_=_self_,._9336_it=_9336_it}).as<jule::Uintptr>(), __jule_anon_1c6aba98d_ctx_handler));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	_1bdc32008_scope(_self_, (*((*(_9336_it))))._field_Scope);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("\n", 1));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, _993_next);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("++it;\n", 6));
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((*((*(_9336_it))))._field_KeyA != nullptr)) {
		static__1bdc4d9e7_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_9336_it))))._field_KeyA);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bdeeb39e_write((*(_self_))._field_oc, _963_begin);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e0be_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_9336_it))));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc2a9b3_rangeHashmapIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter>* _16038_it) {
	_1a95669ea_Builder _1617_sb = static__1a9567369_New(64LL);;
	static__1bdc4dcd3_iterBegin(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1633_begin = _1a956837b_Str(&_1617_sb);;
	_1a9568579_Clear(&_1617_sb);
	static__1bdc4e3aa_iterNext(&(_1617_sb), static_cast<jule::Uintptr>((*(_16038_it))));
	jule::Str _1663_next = _1a956837b_Str(&_1617_sb);;
	jule::Ptr<_1bc4c52a3_Map> _1687__map = _1bc4ba73d_Map((*((*((*(_16038_it))))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1bc2810c5_StructIns> _1697_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_1687__map))._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1bc302113_FnIns> _1717_f = (*(_1bc282170_FindMethod(_1697_ins.ptr(), jule::Str::lit("iterator", 8), false)))._field_Instances[0LL];;
	jule::Ptr<_1bc2810c5_StructIns> _1737_iterator = _1bcdc7699_FindStructGenericInstance(&((*(*(_1bcdc8b40_ProgramMeta))._field_Runtime.alloc)._field_MapIterator), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_1687__map.alloc)._field_Key; (*it++) = (*_1687__map.alloc)._field_Val; __jule_collection; }));;
	jule::Ptr<_1bc302113_FnIns> _1747_nextCall = (*(_1bc282170_FindMethod(_1737_iterator.ptr(), jule::Str::lit("next", 4), false)))._field_Instances[0LL];;
	;
	;
	;
	;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1be00e093_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1737_iterator);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" it = ", 6));
	static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1717_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*((*(_16038_it))))._field_Expr.alloc)._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, _1633_begin);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1be0102a3_funcInsResult((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_1747_nextCall));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(&it);\n", 7));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__iterator_result.__jule_result_arg0", 36));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" != nullptr) {\n", 15));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((*((*(_16038_it))))._field_KeyA != nullptr)) {
		_1be003032_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c69993b6, jule::Ptr<__jule_anon_1c69993b6_ctx>::make(__jule_anon_1c69993b6_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c69993b6_ctx_handler));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	if (((*((*(_16038_it))))._field_KeyB != nullptr)) {
		_1be003032_varInitExpr((*(_self_))._field_oc, &((*((*(_16038_it))))._field_KeyB), jule::__new_closure<void>((void*)__jule_anon_1c6ac9c66, jule::Ptr<__jule_anon_1c6ac9c66_ctx>::make(__jule_anon_1c6ac9c66_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6ac9c66_ctx_handler));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	_1bdc32008_scope(_self_, (*((*(_16038_it))))._field_Scope);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, _1663_next);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bdeeb39e_write((*(_self_))._field_oc, _1633_begin);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e0be_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_16038_it))));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc2ac6b_strRuneIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdadcb72_StrRuneIter> _24132_it) {
	_1a95669ea_Builder _2427_sb = static__1a9567369_New(64LL);;
	static__1bdc4dcd3_iterBegin(&(_2427_sb), static_cast<jule::Uintptr>((*(_24132_it))._field_Base));
	jule::Str _2443_begin = _1a956837b_Str(&_2427_sb);;
	_1a9568579_Clear(&_2427_sb);
	static__1bdc4e3aa_iterNext(&(_2427_sb), static_cast<jule::Uintptr>((*_24132_it.alloc)._field_Base));
	jule::Str _2473_next = _1a956837b_Str(&_2427_sb);;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	jule::Bool _2537_ref = false;;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto expr = ", 12));
	if ((_1bdb0861b_Copy && _1bdc32c62_isCopyOptimizable(&((*_24132_it.alloc)._field_Expr)))) {
		_2537_ref=true;
		{
			auto &_match_expr{ (*((*(_24132_it))._field_Expr))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c6b85c01:;
				{
					jule::Ptr<_1bc42dc12_Var> _2595_v = (*((*(_24132_it))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
					if ((*(_2595_v))._field_Reference) {
						_1bdc44955_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
						goto _match_end_1c6b83da8;
					};
					goto _case_begin_1c6b83e1e;
				}
			}
			else {
				_case_begin_1c6b83e1e:;
				{
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bdc44955_model((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				}
			}
			_match_end_1c6b83da8:;
		};
	} else {
		_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_24132_it.alloc)._field_Expr))._field_Model);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" *it = expr", 11));
	if (_2537_ref) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("begin();\n", 9));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("const ", 6));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" *end = it + expr", 17));
	if (_2537_ref) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("len();\n", 7));
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyA != nullptr)) {
		_1be003032_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyA), jule::__new_closure<void>((void*)__jule_anon_1c6ad3599, jule::Ptr<__jule_anon_1c6ad3599_ctx>::make(__jule_anon_1c6ad3599_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6ad3599_ctx_handler));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Int", 9));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" len;\n", 6));
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_1be003032_varInitExpr((*(_self_))._field_oc, &((*(*(_24132_it))._field_Base.alloc)._field_KeyB), nullptr);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, _2443_begin);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_runeStep(it, end - it, ", 30));
	if (((*((*_24132_it.alloc)._field_Base))._field_KeyB != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
		static__1bdc4d9e7_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyB);
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", &len);\n", 9));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (it < end) {\n", 16));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdc32008_scope(_self_, (*((*_24132_it.alloc)._field_Base))._field_Scope);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, _2473_next);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it += len;\n", 11));
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((*(*(_24132_it))._field_Base.alloc)._field_KeyA != nullptr)) {
		static__1bdc4d9e7_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_24132_it))._field_Base.alloc)._field_KeyA);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("++;\n", 4));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	_1bdeeb39e_write((*(_self_))._field_oc, _2443_begin);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc2b024_ifCase(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ac245_If> _35327_i) {
	if (((*(_35327_i))._field_Expr != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_35327_i.alloc)._field_Expr);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	};
	_1bdc32008_scope(_self_, (*(_35327_i))._field_Scope);
}



inline void _1bdc2b2cc_conditional(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ac960_Conditional> _36232_c) {
	jule::Bool _3637_writed = false;;
	{
		auto expr = &((*(_36232_c))._field_Elifs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69ac495:;
		if (it != expr_end) {
			jule::Ptr<_1bc3ac245_If> _36415_elif = *it;
			{
				if ((_36415_elif == nullptr)) {
					goto _iter_next_1c69ac495;
				};
				if (_3637_writed) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
				};
				_3637_writed=true;
				_1bdc2b024_ifCase(_self_, _36415_elif);
			}
			_iter_next_1c69ac495:;
			++it;
			goto _iter_begin_1c69ac495;
		}
		_iter_end_1c69ac495:;
	};
	if (((*_36232_c.alloc)._field_Default != nullptr)) {
		if (_3637_writed) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" else ", 6));
		};
		_1bdc32008_scope(_self_, (*(*(_36232_c))._field_Default.alloc)._field_Scope);
	};
}



inline void _1bdc2b585_infIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3acc5c_InfIter> _38228_it) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("for (;;) {\n", 11));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdc32008_scope(_self_, (*(_38228_it))._field_Scope);
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e3aa_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e0be_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_38228_it));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bdc2b83d_whileIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ad213_WhileIter> _39930_it) {
	if ((((*(_39930_it))._field_Expr != nullptr) && ((*_39930_it.alloc)._field_Next == nullptr))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("while (", 7));
		_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
		if (((*(_39930_it))._field_Expr != nullptr)) {
			_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_39930_it.alloc)._field_Expr);
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
		if (((*(_39930_it))._field_Next != nullptr)) {
			_1bdc31997_st(_self_, (*_39930_it.alloc)._field_Next);
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") {", 3));
	};
	if (((*((*(_39930_it))._field_Scope))._field_Stmts.len() == 0LL)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdc32008_scope(_self_, (*(_39930_it))._field_Scope);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e3aa_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e0be_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_39930_it));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
}



inline void _1bdc2bae6_rangeIter(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adb5e_RangeIter> _43830_it) {
	{
		
		if ((_1bc4b9c04_Slc((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0ead392:;
			{
				_1bdc2a70a_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1bc4b996d_Arr((*((*(_43830_it))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c0ead051:;
			{
				_1bdc2a70a_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		else if ((_1bc4ba73d_Map((*((*(_43830_it))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1c0ead0b7:;
			{
				_1bdc2a9b3_rangeHashmapIter(_self_, &(_43830_it));
			}
		}
		else {
			_case_begin_1c0ea72c0:;
			{
				_1bdc2a70a_rangeIndexIter(_self_, &(_43830_it));
			}
		}
		_match_end_1c0eace41:;
	};
}



inline void _1bdc2bd9e_cont(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3adee4_ContSt> _45121_c) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bdc4e3aa_iterNext(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_45121_c))._field_It);
}



inline void _1bdc2c157_label(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ae874_Label> _45622_l) {
	static__1bdc4e696_label(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::Uintptr>(_45622_l));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":", 1));
}



inline void _1bdc2c410_gotoSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3aeed4_GotoSt> _46123_gt) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bdc4e696_label(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>((*(_46123_gt))._field_Label));
}



inline void _1bdc2c6b8_postfix(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b03ad_Postfix> _46628_p) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_46628_p))._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, (*_46628_p.alloc)._field_Op);
}



inline void _1bdc2c971_assignLeft(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Any* _47332_model) {
	{
		auto &_match_expr{ (*(_47332_model)) };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c6737ae4:;
			{
				jule::Ptr<_1bc2e4600_IndexingExprModel> _4768_iem = (*(_47332_model)).cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43);;
				jule::Ptr<_1bc4c52a3_Map> _4774__map = _1bc4ba73d_Map((*((*(_4768_iem))._field_Expr))._field_Type.ptr());;
				if ((_4774__map == nullptr)) {
					goto _match_end_1c6737a7d;
				};
				jule::Ptr<_1bc2810c5_StructIns> _4838_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4774__map))._field_Key; (*it++) = (*_4774__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1bc302113_FnIns> _4858_f = (*(_1bc282170_FindMethod(_4838_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_4858_f));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_4768_iem))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(").ptr(", 6));
				if ((!(_1abb45d85_Production))) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_4768_iem.alloc)._field_Token));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_4768_iem.alloc)._field_Index))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		_match_end_1c6737a7d:;
	};
	_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*(_47332_model)));
}



inline void _1bdc2cc29_shl(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _50424_a) {
	_1bdc2c971_assignLeft(_self_, &((*((*(_50424_a))._field_Left))._field_Model));
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bdc38ce0_shl((*(*(_self_))._field_oc.alloc)._field_ec, &((*_50424_a.alloc)._field_Left), &((*_50424_a.alloc)._field_Right));
}



inline void _1bdc2ced2_shr(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _51024_a) {
	_1bdc2c971_assignLeft(_self_, &((*((*(_51024_a))._field_Left))._field_Model));
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bdc39153_shr((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51024_a.alloc)._field_Left), &((*_51024_a.alloc)._field_Right));
}



inline void _1bdc2d28a_divByZeroAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _51636_a) {
	_1bdc2c971_assignLeft(_self_, &((*((*(_51636_a))._field_Left))._field_Model));
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(" = ", 3));
	_1bdc37ecb_divByZeroBinary((*(*(_self_))._field_oc.alloc)._field_ec, &((*_51636_a.alloc)._field_Op), &((*_51636_a.alloc)._field_Left), &((*_51636_a.alloc)._field_Right));
}



inline void _1bdc2d763_operatorOverloadingAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _52247_s, jule::Ptr<_1bc2e1795_OperandExprModel>* _52273_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _5238_r, jule::U32 _52336_op) {
	;
	jule::Ptr<_1bc302113_FnIns> _5257_f = _1bcdc6d91_FindOperator(_52247_s, _52336_op, false);;
	if ((_5257_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:527:4"));;
	};
	static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5257_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1bdc2c971_assignLeft(_self_, &((*((*(_52273_l))))._field_Model));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_5238_r))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc2da1b_assign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0864_Assign> _53727_a) {
	{
		auto &_match_expr{ (*((*(_53727_a))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(43LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c62543ad:;
			{
				if ((_1abb45b43_Safety && (_1bc4ba221_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1bdc2d28a_divByZeroAssign(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1c6254435:;
			{
				if ((_1bc4ba221_Struct((*((*(_53727_a))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1bdc2cc29_shl(_self_, _53727_a);
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1c625449b:;
			{
				if ((_1bc4ba221_Struct((*((*(_53727_a))._field_Left))._field_Type) == nullptr)) {
					_1bdc2ced2_shr(_self_, _53727_a);
					return;;
				};
			}
		}
		_match_end_1c62542e2:;
	};
	if ((((*((*(_53727_a))._field_Op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1bc4ba221_Struct((*((*_53727_a.alloc)._field_Left))._field_Type.ptr()) != nullptr))) {
		jule::Ptr<_1bc2810c5_StructIns> _5608_s = _1bc4ba221_Struct((*((*(_53727_a))._field_Left))._field_Type);;
		_1bdc2d763_operatorOverloadingAssign(_self_, &(_5608_s), &((*_53727_a.alloc)._field_Left), &((*_53727_a.alloc)._field_Right), (*(*(_53727_a))._field_Op.alloc)._field_Id);
		return;;
	};
	_1bdc2c971_assignLeft(_self_, &((*((*(_53727_a))._field_Left))._field_Model));
	_1bdeeb39e_write((*_self_.alloc)._field_oc, (*((*_53727_a.alloc)._field_Op))._field_Kind);
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_53727_a.alloc)._field_Right))._field_Model);
}



inline void _1bdc2dcc4_mapLookupAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _57037_a) {
	jule::Ptr<_1bc2e4600_IndexingExprModel> _5727_iem = (*((*(_57037_a))))._field_Right.cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43);;
	jule::Ptr<_1bc4c52a3_Map> _5737__map = _1bc4ba73d_Map((*((*(_5727_iem))._field_Expr))._field_Type.ptr());;
	jule::Ptr<_1bc2810c5_StructIns> _5757_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_5737__map))._field_Key; (*it++) = (*_5737__map.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1bc302113_FnIns> _5777_f = (*(_1bc282170_FindMethod(_5757_ins.ptr(), jule::Str::lit("lookup", 6), false)))._field_Instances[0LL];;
	static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_5777_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc2c971_assignLeft(_self_, &((*(*(_5727_iem))._field_Expr.alloc)._field_Model));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*_5727_iem.alloc)._field_Index))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_57037_a))))._field_Left[0LL] != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[0LL]))._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("nullptr, ", 9));
	};
	if (((*((*(_57037_a))))._field_Left[1LL] != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
		_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*((*(_57037_a))))._field_Left[1LL]))._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc2e07c_multiAssignTup(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _60236_a) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	jule::Ptr<_1bc2e737d_TupleExprModel> _6127_tup = (*((*(_60236_a))))._field_Right.cast_ptr<_1bc2e737d_TupleExprModel>(&__jule_any_type84);;
	{
		auto expr = &((*(_6127_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ba30b4:;
		if (it != expr_end) {
			jule::I32 _6148_i = it - expr->begin();
			jule::Ptr<_1bc48354c_Data> _61415_r = *it;
			{
				_1bdeebc51_indent((*(_self_))._field_oc);
				jule::Ptr<_1bc48354c_Data> _6168_l = (*((*(_60236_a))))._field_Left[_6148_i];;
				if ((_6168_l != nullptr)) {
					{
						auto &_match_expr{ (*(_6168_l))._field_Model };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1c0d40774:;
							{
								jule::Ptr<_1bc42dc12_Var> _62010_v = (*(_6168_l))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
								if ((!((*(_62010_v))._field_Reference))) {
									goto _match_end_1c0d4070d;
								};
								{
									auto expr = &((*((*(_60236_a))))._field_Decls);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c126be58:;
									if (it != expr_end) {
										jule::Ptr<_1bc42dc12_Var> _62713_dv = *it;
										{
											if ((_62010_v == _62713_dv)) {
												goto _julec_label_1c126c909;
											};
										}
										_iter_next_1c126be58:;
										++it;
										goto _iter_begin_1c126be58;
									}
									_iter_end_1c126be58:;
								};
								goto _match_end_1c0d4070d;
								_julec_label_1c126c909:;
								static__1bdc4d9e7_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _62010_v);
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = &(", 5));
								_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61415_r))._field_Model);
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
								(*((*(_60236_a))))._field_Left[_6148_i]=nullptr;
								goto _iter_next_1c6ba30b4;
							}
						}
						_match_end_1c0d4070d:;
					};
					_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_6168_l.alloc)._field_Type);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
					static__1bdc4bc48_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bdc290cc_assignArgName, static_cast<jule::Uintptr>(_6148_i));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				};
				_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_61415_r))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6ba30b4:;
			++it;
			_6148_i++;
			goto _iter_begin_1c6ba30b4;
		}
		_iter_end_1c6ba30b4:;
	};
	{
		auto expr = &((*((*(_60236_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c673ede8:;
		if (it != expr_end) {
			jule::I32 _6568_i = it - expr->begin();
			jule::Ptr<_1bc48354c_Data> _65615_l = *it;
			{
				if ((_65615_l == nullptr)) {
					goto _iter_next_1c673ede8;
				};
				_1bdeebc51_indent((*(_self_))._field_oc);
				_1bdc2c971_assignLeft(_self_, &((*(_65615_l))._field_Model));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				static__1bdc4bc48_toOut(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bdc290cc_assignArgName, static_cast<jule::Uintptr>(_6568_i));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c673ede8:;
			++it;
			_6568_i++;
			goto _iter_begin_1c673ede8;
		}
		_iter_end_1c673ede8:;
	};
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bdc2e335_multiAssignFn(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign>* _67235_a) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	jule::Ptr<_1bc2e3c70_FnCallExprModel> _6777_f = (*((*(_67235_a))))._field_Right.cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31);;
	_1be015c8c_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_6777_f))._field_Func))._field_Result));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_assign_result = ", 24));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_67235_a))))._field_Right);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	jule::Ptr<_1bc4c4703_Tuple> _6837_tup = _1bc4ba9c4_Tup((*(*(_6777_f))._field_Func.alloc)._field_Result.ptr());;
	{
		auto expr = &((*((*(_67235_a))))._field_Left);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6117dba:;
		if (it != expr_end) {
			jule::I32 _6848_i = it - expr->begin();
			jule::Ptr<_1bc48354c_Data> _68415_l = *it;
			{
				if ((_68415_l == nullptr)) {
					goto _iter_next_1c6117dba;
				};
				;
				_1bdeebc51_indent((*(_self_))._field_oc);
				_1bdc2c971_assignLeft(_self_, &((*(_68415_l))._field_Model));
				{
					
					if (_1bc4b6c34_Equal((*(_6837_tup))._field_Types[_6848_i], (*_68415_l.alloc)._field_Type)) {
						_case_begin_1c0d4081d:;
						{
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = __jule_assign_result.__jule_result_arg", 41));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_6848_i));
						}
					}
					else if (_1bcdc3a80_IsAny(&((*_68415_l.alloc)._field_Type))) {
						_case_begin_1c0d3ee5a:;
						{
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Any(__jule_assign_result.__jule_result_arg", 51));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_6848_i));
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bdeecda6_pushAnyType((*(_self_))._field_oc, (*(_6837_tup))._field_Types[_6848_i])));
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					else {
						_case_begin_1c6119240:;
						{
							if ((_1bc4ba4a7_Trait((*(_6837_tup))._field_Types[_6848_i].ptr()) != nullptr)) {
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
								jule::Ptr<_1bc309769_Trait> _70510_t1 = _1bc4ba4a7_Trait((*_68415_l.alloc)._field_Type.ptr());;
								jule::Ptr<_1bc309769_Trait> _70610_t2 = _1bc4ba4a7_Trait((*(_6837_tup))._field_Types[_6848_i].ptr());;
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_assign_result.__jule_result_arg", 38));
								_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_6848_i));
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".map(", 5));
								_1bdeed77a_pushAndWriteMaskMapper((*(_self_))._field_oc, _70510_t1, _70610_t2);
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c611a274;
							};
							jule::Ptr<_1bc309769_Trait> _7145_t = _1bc4ba4a7_Trait((*_68415_l.alloc)._field_Type.ptr());;
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = jule::Trait(__jule_assign_result.__jule_result_arg", 53));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_6848_i));
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
							static__1bdc4ca5c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _7145_t);
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bcdc6962_FindTraitTypeOffset(_7145_t, (*(_6837_tup))._field_Types[_6848_i])));
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
						}
					}
					_match_end_1c611a274:;
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6117dba:;
			++it;
			_6848_i++;
			goto _iter_begin_1c6117dba;
		}
		_iter_end_1c6117dba:;
	};
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bdc2e5dd_multiAssign(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b0d1a_MultiAssign> _73132_a) {
	{
		auto expr = &((*(_73132_a))._field_Decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6748819:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _73415_d = *it;
			{
				_1be003032_varInitExpr((*(_self_))._field_oc, &(_73415_d), nullptr);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
				_1bdeebc51_indent((*(_self_))._field_oc);
			}
			_iter_next_1c6748819:;
			++it;
			goto _iter_begin_1c6748819;
		}
		_iter_end_1c6748819:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c6749045:;
			{
				_1bdc2dcc4_mapLookupAssign(_self_, &(_73132_a));
				return;;
			}
		}
		_match_end_1c6748ece:;
	};
	{
		auto &_match_expr{ (*(_73132_a))._field_Right };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c67490cd:;
			{
				_1bdc2e07c_multiAssignTup(_self_, &(_73132_a));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c674aaa2:;
			{
				_1bdc2e335_multiAssignFn(_self_, &(_73132_a));
			}
		}
		else {
			_case_begin_1c674aa3b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:753:4"));;
			}
		}
		_match_end_1c674a9c5:;
	};
}



inline jule::Fn<void> _1bdc2e92e_matchExpr(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b1557_Match> _75730_m) {
	if ((!(_1bc483e87_IsConst((*(_75730_m))._field_Expr.ptr())))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c674d148, jule::Ptr<__jule_anon_1c674d148_ctx>::make(__jule_anon_1c674d148_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c674d148_ctx_handler);;
	};
	if (((!(_1bac29542_IsBool((*((*(_75730_m))._field_Expr))._field_Constant.ptr()))) || (!(_1bac26e46_ReadBool((*((*(_75730_m))._field_Expr))._field_Constant))))) {
		return jule::__new_closure<void>((void*)__jule_anon_1c674e479, jule::Ptr<__jule_anon_1c674e479_ctx>::make(__jule_anon_1c674e479_ctx{._self_=_self_,._75730_m=_75730_m}).as<jule::Uintptr>(), __jule_anon_1c674e479_ctx_handler);;
	};
	return nullptr;;
}



inline void _1bdc2ec92_case(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b1557_Match> _76725_m, jule::Ptr<_1bc3b2080_Case> _76746_c) {
	if ((((*(_76746_c))._field_Exprs.len() != 0LL) && (!((*(_76725_m))._field_Comptime)))) {
		if ((((*_76725_m.alloc)._field_Cases.len() > 0LL) && ((*(_76725_m))._field_Cases[0LL] == _76746_c))) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
		} else {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
		};
		{
			auto expr = &((*_76746_c.alloc)._field_Exprs);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6753714:;
			if (it != expr_end) {
				jule::I32 _7749_i = it - expr->begin();
				jule::Ptr<_1bc48354c_Data> _77416_expr = *it;
				{
					{
						
						if ((!((*_76725_m.alloc)._field_TypeMatch))) {
							_case_begin_1c112b7b8:;
							{
								jule::Fn<void> _7776_caseExpr = _1bdc2e92e_matchExpr(_self_, _76725_m);;
								if (_1bc4842c8_GoodOperand((*_76725_m.alloc)._field_Expr.ptr(), &(_77416_expr))) {
									if ((_7776_caseExpr != nullptr)) {
										_7776_caseExpr();
										_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(" == ", 4));
									};
									_1bdc3a53e_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77416_expr))._field_Model);
								} else {
									_1bdc3a53e_possibleRefExpr((*((*_self_.alloc)._field_oc))._field_ec, (*(_77416_expr))._field_Model);
									if ((_7776_caseExpr != nullptr)) {
										_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" == ", 4));
										_7776_caseExpr();
									};
								};
							}
						}
						else {
							_case_begin_1c675436e:;
							{
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_match_expr", 11));
								jule::Ptr<_1bc4b64e7_Type> _79310_tk = (*(_77416_expr))._field_Model.cast_ptr<_1bc4b64e7_Type>(&__jule_any_type87);;
								if ((_1bc4ba4a7_Trait((*((*_76725_m.alloc)._field_Expr))._field_Type.ptr()) != nullptr)) {
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".type_is(", 9));
									_1bdc36837_boolean((*(*(_self_))._field_oc.alloc)._field_ec, (_1bc4b8e34_Sptr((*(_77416_expr))._field_Type) != nullptr));
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", (const jule::Trait::Type*)&", 29));
									static__1bdc4ca5c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bc4ba4a7_Trait((*((*(_76725_m))._field_Expr))._field_Type));
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
									_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bcdc6962_FindTraitTypeOffset(_1bc4ba4a7_Trait((*((*(_76725_m))._field_Expr))._field_Type), (*_77416_expr.alloc)._field_Type)));
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								} else {
									jule::I32 _8037_j = _1bdeecda6_pushAnyType((*(_self_))._field_oc, _79310_tk);;
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".type == &__jule_any_type", 25));
									_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_8037_j));
								};
							}
						}
						_match_end_1c675425e:;
					};
					if ((((*_76746_c.alloc)._field_Exprs.len() - _7749_i) > 1LL)) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" || ", 4));
					};
				}
				_iter_next_1c6753714:;
				++it;
				_7749_i++;
				goto _iter_begin_1c6753714;
			}
			_iter_end_1c6753714:;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") ", 2));
	} else if ((((*(_76725_m))._field_Default == _76746_c) && ((*_76725_m.alloc)._field_Cases.len() != 0LL))) {
		_1bdeebc51_indent((*(_self_))._field_oc);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("else ", 5));
	};
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4ec6d_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_76746_c));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;\n", 3));
	if (((*((*(_76746_c))._field_Scope))._field_Stmts.len() > 0LL)) {
		_1bdeebc51_indent((*(_self_))._field_oc);
		_1bdc32008_scope(_self_, (*_76746_c.alloc)._field_Scope);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	};
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc3004a_matchSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b1557_Match> _83728_m) {
	if ((((*(_83728_m))._field_Cases.len() == 0LL) && ((*_83728_m.alloc)._field_Default == nullptr))) {
		return;;
	};
	if (((*(_83728_m))._field_Comptime && (((*_83728_m.alloc)._field_Default == nullptr) || ((*((*((*_83728_m.alloc)._field_Default))._field_Scope))._field_Stmts.len() == 0LL)))) {
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((!((*(_83728_m))._field_Comptime)) && (!(_1bc483e87_IsConst((*_83728_m.alloc)._field_Expr.ptr()))))) {
		if ((_1bdb0861b_Copy && _1bdc32c62_isCopyOptimizable(&((*_83728_m.alloc)._field_Expr)))) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto &_match_expr{ ", 19));
		} else {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto _match_expr{ ", 18));
		};
		_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(*(_83728_m))._field_Expr.alloc)._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" };\n", 4));
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	if (((*(_83728_m))._field_Cases.len() > 0LL)) {
		{
			auto expr = &((*_83728_m.alloc)._field_Cases);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6b035ca:;
			if (it != expr_end) {
				jule::Ptr<_1bc3b2080_Case> _86516_c = *it;
				{
					if ((_86516_c == nullptr)) {
						goto _iter_next_1c6b035ca;
					};
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1bdeebc51_indent((*(_self_))._field_oc);
					_1bdc2ec92_case(_self_, _83728_m, _86516_c);
				}
				_iter_next_1c6b035ca:;
				++it;
				goto _iter_begin_1c6b035ca;
			}
			_iter_end_1c6b035ca:;
		};
	};
	if (((*(_83728_m))._field_Default != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		_1bdc2ec92_case(_self_, _83728_m, (*_83728_m.alloc)._field_Default);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4e982_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), static_cast<jule::Uintptr>(_83728_m));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(":;", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc30303_fallSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b2778_FallSt> _89223_f) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	static__1bdc4ec6d_caseBegin(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89223_f))._field_DestCase);
}



inline void _1bdc305ab_breakSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3ae3bd_BreakSt> _89724_b) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("goto ", 5));
	if (((*(_89724_b))._field_It != 0LLU)) {
		static__1bdc4e0be_iterEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*_89724_b.alloc)._field_It);
	} else {
		static__1bdc4e982_matchEnd(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_89724_b))._field_Mtch);
	};
}



inline void _1bdc30864_setResult(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b2b1e_RetSt> _90630_r) {
	if (((*((*((*((*(_90630_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 1LL)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = ", 21));
		_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_90630_r.alloc)._field_Expr);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		_1bdeebc51_indent((*(_self_))._field_oc);
		return;;
	};
	{
		auto &_match_expr{ (*(_90630_r))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c6b0d591:;
			{
				jule::Slice<jule::Ptr<_1bc48354c_Data>> _9168_datas = (*((*(_90630_r))._field_Expr.unsafe_cast_ptr<_1bc2e737d_TupleExprModel>()))._field_Datas;;
				{
					auto expr = &(_9168_datas);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6b12298:;
					if (it != expr_end) {
						jule::I32 _9178_i = it - expr->begin();
						jule::Ptr<_1bc48354c_Data> _91711_data = *it;
						{
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_9178_i));
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_91711_data))._field_Model);
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
							_1bdeebc51_indent((*(_self_))._field_oc);
						}
						_iter_next_1c6b12298:;
						++it;
						_9178_i++;
						goto _iter_begin_1c6b12298;
					}
					_iter_end_1c6b12298:;
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c6b11220:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result = std::move(", 31));
				_1bdc44955_model((*(*(_self_))._field_oc.alloc)._field_ec, (*(_90630_r))._field_Expr);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
			}
		}
		else {
			_case_begin_1c6b10d35:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/scope.jule:930:4"));;
			}
		}
		_match_end_1c6b10cbe:;
	};
}



inline void _1bdc30b1c_retSt(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3b2b1e_RetSt> _93426_r) {
	if (_1bc2ee50b_IsVoid((*((*(_93426_r))._field_Func))._field_Decl.ptr())) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};", 31));
			return;;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return;", 7));
		return;;
	} else if (((*((*((*((*(_93426_r))._field_Func))._field_Decl))._field_Result))._field_Idents.len() == 0LL)) {
		if ((*(*((*(_93426_r))._field_Func))._field_Decl.alloc)._field_Exceptional) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
			_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_93426_r))._field_Func.alloc)._field_Result);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">{.result=", 10));
			_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
		} else {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
			_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*_93426_r.alloc)._field_Expr);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
		};
		return;;
	};
	if (((*(_93426_r))._field_Expr != nullptr)) {
		_1bdc30864_setResult(_self_, _93426_r);
	};
	if ((*((*((*(_93426_r))._field_Func))._field_Decl))._field_Exceptional) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return jule::Exceptional<", 25));
		_1be015c8c_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(*(_93426_r))._field_Func.alloc)._field_Result));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">{.result=__jule_func_result};", 30));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return __jule_func_result;", 26));
	};
}



inline void _1bdc30dc5_var(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc42dc12_Var> _97024_v) {
	if ((!((*(_97024_v))._field_Constant))) {
		_1be0032da_var((*(_self_))._field_oc, _97024_v);
	};
}



inline void _1bdc3117d_mutSlicing(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdadb8eb_MutSlicingExprModel> _97631_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*(_97631_m))._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(").mut_slice(", 12));
	if ((!(_1abb45d85_Production))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_97631_m.alloc)._field_Token));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Left);
	if (((*_97631_m.alloc)._field_Right != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*_97631_m.alloc)._field_Right);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bdc31436_swap(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdada653_SwapExprModel> _99325_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("std::swap(", 10));
	_1bdc3a53e_possibleRefExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_99325_m))._field_Left))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdc3a53e_possibleRefExpr((*((*(_self_))._field_oc))._field_ec, (*((*_99325_m.alloc)._field_Right))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc316de_exceptionalForwarding(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bdad9bc4_ExceptionalForwardingExprModel> _100142_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	_1bdc3be69_pureFuncCall((*(*(_self_))._field_oc.alloc)._field_ec, &((*(_100142_m))._field_Expr));
}



inline void _1bdc31997_st(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Any _100723_st) {
	if ((_100723_st == nullptr)) {
		return;;
	};
	{
		auto &_match_expr{ _100723_st };
		
		if (_match_expr.type == &__jule_any_type20) {
			_case_begin_1c6cdc60a:;
			{
				_1bdc32008_scope(_self_, _100723_st.cast_ptr<_1bc3abd27_Scope>(&__jule_any_type20));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c6cdc880:;
			{
				_1bdc30dc5_var(_self_, _100723_st.cast_ptr<_1bc42dc12_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c6cdc8e6:;
			{
				_1bdc44955_model((*((*_self_.alloc)._field_oc))._field_ec, (*(_100723_st.unsafe_cast_ptr<_1bc48354c_Data>()))._field_Model);
			}
		}
		else if (_match_expr.type == &__jule_any_type32) {
			_case_begin_1c6cdd166:;
			{
				_1bdc2b2cc_conditional(_self_, _100723_st.cast_ptr<_1bc3ac960_Conditional>(&__jule_any_type32));
			}
		}
		else if (_match_expr.type == &__jule_any_type33) {
			_case_begin_1c6cdd1cc:;
			{
				_1bdc2b585_infIter(_self_, _100723_st.cast_ptr<_1bc3acc5c_InfIter>(&__jule_any_type33));
			}
		}
		else if (_match_expr.type == &__jule_any_type35) {
			_case_begin_1c6cdd243:;
			{
				_1bdc2b83d_whileIter(_self_, _100723_st.cast_ptr<_1bc3ad213_WhileIter>(&__jule_any_type35));
			}
		}
		else if (_match_expr.type == &__jule_any_type37) {
			_case_begin_1c6cdd2a9:;
			{
				_1bdc2bae6_rangeIter(_self_, _100723_st.cast_ptr<_1bc3adb5e_RangeIter>(&__jule_any_type37));
			}
		}
		else if (_match_expr.type == &__jule_any_type38) {
			_case_begin_1c6cdd320:;
			{
				_1bdc2bd9e_cont(_self_, _100723_st.cast_ptr<_1bc3adee4_ContSt>(&__jule_any_type38));
			}
		}
		else if (_match_expr.type == &__jule_any_type19) {
			_case_begin_1c6cdd386:;
			{
				_1bdc2c157_label(_self_, _100723_st.cast_ptr<_1bc3ae874_Label>(&__jule_any_type19));
			}
		}
		else if (_match_expr.type == &__jule_any_type39) {
			_case_begin_1c6cdd3ec:;
			{
				_1bdc2c410_gotoSt(_self_, _100723_st.cast_ptr<_1bc3aeed4_GotoSt>(&__jule_any_type39));
			}
		}
		else if (_match_expr.type == &__jule_any_type40) {
			_case_begin_1c6cdd463:;
			{
				_1bdc2c6b8_postfix(_self_, _100723_st.cast_ptr<_1bc3b03ad_Postfix>(&__jule_any_type40));
			}
		}
		else if (_match_expr.type == &__jule_any_type41) {
			_case_begin_1c6cdd4c9:;
			{
				_1bdc2da1b_assign(_self_, _100723_st.cast_ptr<_1bc3b0864_Assign>(&__jule_any_type41));
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1c6cdd540:;
			{
				_1bdc2e5dd_multiAssign(_self_, _100723_st.cast_ptr<_1bc3b0d1a_MultiAssign>(&__jule_any_type44));
			}
		}
		else if (_match_expr.type == &__jule_any_type45) {
			_case_begin_1c6cdd5a6:;
			{
				_1bdc3004a_matchSt(_self_, _100723_st.cast_ptr<_1bc3b1557_Match>(&__jule_any_type45));
			}
		}
		else if (_match_expr.type == &__jule_any_type46) {
			_case_begin_1c6cdd61c:;
			{
				_1bdc30303_fallSt(_self_, _100723_st.cast_ptr<_1bc3b2778_FallSt>(&__jule_any_type46));
			}
		}
		else if (_match_expr.type == &__jule_any_type47) {
			_case_begin_1c6cdd694:;
			{
				_1bdc305ab_breakSt(_self_, _100723_st.cast_ptr<_1bc3ae3bd_BreakSt>(&__jule_any_type47));
			}
		}
		else if (_match_expr.type == &__jule_any_type48) {
			_case_begin_1c6cdd71b:;
			{
				_1bdc30b1c_retSt(_self_, _100723_st.cast_ptr<_1bc3b2b1e_RetSt>(&__jule_any_type48));
			}
		}
		else if (_match_expr.type == &__jule_any_type125) {
			_case_begin_1c6cdd793:;
			{
				_1bdc4217d_pushToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.cast_ptr<_1bdadc3be_PushToSliceExprModel>(&__jule_any_type125));
			}
		}
		else if (_match_expr.type == &__jule_any_type126) {
			_case_begin_1c6cdd81a:;
			{
				_1bdc42436_appendToSlice((*((*(_self_))._field_oc))._field_ec, _100723_st.cast_ptr<_1bdadc798_AppendToSliceExprModel>(&__jule_any_type126));
			}
		}
		else if (_match_expr.type == &__jule_any_type124) {
			_case_begin_1c6cdd892:;
			{
				_1bdc3117d_mutSlicing(_self_, _100723_st.cast_ptr<_1bdadb8eb_MutSlicingExprModel>(&__jule_any_type124));
			}
		}
		else if (_match_expr.type == &__jule_any_type127) {
			_case_begin_1c6cdd919:;
			{
				_1bdc31436_swap(_self_, _100723_st.cast_ptr<_1bdada653_SwapExprModel>(&__jule_any_type127));
			}
		}
		else if (_match_expr.type == &__jule_any_type122) {
			_case_begin_1c6cdd991:;
			{
				_1bdc316de_exceptionalForwarding(_self_, _100723_st.cast_ptr<_1bdad9bc4_ExceptionalForwardingExprModel>(&__jule_any_type122));
			}
		}
		else if (_match_expr.type == &__jule_any_type123) {
			_case_begin_1c6cdda18:;
			{
				_1bdc2ac6b_strRuneIter(_self_, _100723_st.cast_ptr<_1bdadcb72_StrRuneIter>(&__jule_any_type123));
			}
		}
		else {
			_case_begin_1c6cdc473:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_stmt>", 20));
			}
		}
		_match_end_1c6cdc40c:;
	};
}



inline void _1bdc31c50_scopeStmts(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3abd27_Scope>* _106332_s) {
	{
		auto expr = &((*((*(_106332_s))))._field_Stmts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c611d310:;
		if (it != expr_end) {
			jule::Any _106415_st = *it;
			{
				_1bdeebc51_indent((*(_self_))._field_oc);
				_1bdc31997_st(_self_, _106415_st);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c611d310:;
			++it;
			goto _iter_begin_1c611d310;
		}
		_iter_end_1c611d310:;
	};
}



inline void _1bdc32008_scope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc3abd27_Scope> _107226_s) {
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	if ((*(_107226_s))._field_Deferred) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__JULE_DEFER(", 13));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdc31c50_scopeStmts(_self_, &(_107226_s));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if ((*(_107226_s))._field_Deferred) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
	};
}



inline void _1bdc322b1_commonFuncScope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _108737_f) {
	if ((!(_1bc2ee50b_IsVoid((*((*(_108737_f))))._field_Decl.ptr())))) {
		jule::Ptr<_1bc4c4703_Tuple> _10898_tup = _1bc4ba9c4_Tup((*((*(_108737_f))))._field_Result.ptr());;
		if ((_10898_tup != nullptr)) {
			_1bdeebc51_indent((*(_self_))._field_oc);
			_1be0155b6_tup((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _10898_tup);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result;\n", 21));
			{
				auto expr = &((*(_10898_tup))._field_Types);
				auto it = expr->begin();
				auto expr_end = expr->end();
				_iter_begin_1c6264027:;
				if (it != expr_end) {
					jule::I32 _109410_i = it - expr->begin();
					jule::Ptr<_1bc4b64e7_Type> _109417_t = *it;
					{
						if (_1be017e6a_shouldInitialized(&(_109417_t))) {
							_1bdeebc51_indent((*(_self_))._field_oc);
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
							_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_109410_i));
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
							_1bdc45b21_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, _109417_t);
							_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
						};
					}
					_iter_next_1c6264027:;
					++it;
					_109410_i++;
					goto _iter_begin_1c6264027;
				}
				_iter_end_1c6264027:;
			};
		} else if (((*((*(*((*(_108737_f))))._field_Decl.alloc)._field_Result))._field_Idents.len() == 1LL)) {
			_1bdeebc51_indent((*(_self_))._field_oc);
			_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_108737_f))))._field_Result);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_func_result", 19));
			if (_1be017e6a_shouldInitialized(&((*((*(_108737_f))))._field_Result))) {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
				_1bdc45b21_initExpr((*(*(_self_))._field_oc.alloc)._field_ec, (*((*(_108737_f))))._field_Result);
			};
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		};
	};
	_1bdc31c50_scopeStmts(_self_, &((*((*(_108737_f))))._field_Scope));
	if (((*((*((*(_108737_f))))._field_Decl))._field_Exceptional && _1bc2ee50b_IsVoid((*((*(_108737_f))))._field_Decl))) {
		_1bdeebc51_indent((*_self_.alloc)._field_oc);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return jule::VoidExceptional{};\n", 32));
	};
}



inline void _1bdc32624_anonFuncScope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _112734_m, jule::Str _112761_ident) {
	if (((*((*(_112734_m))._field_Func))._field_Scope == nullptr)) {
		return;;
	};
	jule::Bool _11313_closure = _1bcdc3dc1_IsClosure(&(_112734_m));;
	if (_11313_closure) {
		(*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes=jule::append((*(*((*(_self_))._field_oc))._field_ec.alloc)._field_varPrefixes,({ auto __jule_collection = jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1bc42dc12_Var>>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::__new_closure<jule::Bool,jule::Ptr<_1bc42dc12_Var>>((void*)__jule_anon_1c6b30063, jule::Ptr<__jule_anon_1c6b30063_ctx>::make(__jule_anon_1c6b30063_ctx{._self_=_self_,._112734_m=_112734_m}).as<jule::Uintptr>(), __jule_anon_1c6b30063_ctx_handler); __jule_collection; }));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	if (_11313_closure) {
		_1bdeebc51_indent((*(_self_))._field_oc);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Ptr<", 10));
		_1bdeeb39e_write((*(_self_))._field_oc, _112761_ident);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_ctx> __jule_closure_ctx = __f_ctx.as<", 38));
		_1bdeeb39e_write((*(_self_))._field_oc, _112761_ident);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_ctx>();\n", 9));
	};
	_1bdc322b1_commonFuncScope(_self_, &((*(_112734_m))._field_Func));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
	if (_11313_closure) {
		((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes).mut_slice(0LL, ((*((*((*(_self_))._field_oc))._field_ec))._field_varPrefixes.len() - 1LL));;
	};
}



inline void _1bdc328cc_funcScope(jule::Ptr<_1bdc2983b_scopeCoder> _self_, jule::Ptr<_1bc302113_FnIns> _115930_f) {
	if (((*(_115930_f))._field_Scope == nullptr)) {
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdc322b1_commonFuncScope(_self_, &(_115930_f));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}







inline jule::Ptr<_1bdc35dca_exprCoder> static__1bdc362c6_new(jule::Ptr<_1bdeeab84_ObjectCoder>* _4921_oc) {
	return jule::new_ptr<_1bdc35dca_exprCoder>(_1bdc35dca_exprCoder{._field_oc=(*(_4921_oc)), ._field_varPrefixes=jule::Slice<jule::Fn<jule::Bool,jule::Ptr<_1bc42dc12_Var>>>(nullptr)});;
}



inline void _1bdc3657e_string(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const>* _5524_c) {
	jule::Str _563_content = _1bac271cc_ReadStr((*(_5524_c)).ptr());;
	if ((_563_content.len() == 0LL)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		return;;
	};
	jule::Str _613_len = _1ac596807_FmtInt(static_cast<jule::I64>(_563_content.len()), 10LL);;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("::lit(", 6));
	_1bdc468d0_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _563_content);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, _613_len);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc36837_boolean(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Bool _7024_b) {
	if (_7024_b) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("true", 4));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
	};
}



inline void _1bdc36a35_nilLit(jule::Ptr<_1bdc35dca_exprCoder> _self_) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
}



inline jule::Bool _1bdc36d76_ftoaSpecialCases(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::F64* _8234_x) {
	{
		
		if (_1ac546466_IsNaN((*(_8234_x)))) {
			_case_begin_1c69cd197:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("NAN", 3));
			}
		}
		else if (_1ac546ae8_IsInf((*(_8234_x)), 1LL)) {
			_case_begin_1c69cd241:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("INFINITY", 8));
			}
		}
		else if (_1ac546ae8_IsInf((*(_8234_x)), -1LL)) {
			_case_begin_1c69cd2b8:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("-INFINITY", 9));
			}
		}
		else {
			_case_begin_1c69cd10e:;
			{
				return false;;
			}
		}
		_match_end_1c69cceee:;
	};
	return true;;
}



inline void _1bdc3712e_float32(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const>* _9625_c) {
	jule::F64 _973_x = _1bac27c16_AsF64((*(_9625_c)).ptr());;
	if (_1bdc36d76_ftoaSpecialCases(_self_, &(_973_x))) {
		return;;
	};
	{
		
		if ((_973_x == 340282346638528860000000000000000000000.0)) {
			_case_begin_1c69d2454:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F32", 13));
			}
		}
		else if ((_973_x == -340282346638528860000000000000000000000.0)) {
			_case_begin_1c69d182c:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F32", 13));
			}
		}
		else {
			_case_begin_1c69d1497:;
			{
				_1bdc46c76_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _973_x, 32LL);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("f", 1));
			}
		}
		_match_end_1c69d1233:;
	};
}



inline void _1bdc373d7_float64(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const>* _11525_c) {
	jule::F64 _1163_x = _1bac27c16_AsF64((*(_11525_c)).ptr());;
	if (_1bdc36d76_ftoaSpecialCases(_self_, &(_1163_x))) {
		return;;
	};
	{
		
		if ((_1163_x == jule::MAX_F64)) {
			_case_begin_1c69d4c92:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::MAX_F64", 13));
			}
		}
		else if ((_1163_x == jule::MIN_F64)) {
			_case_begin_1c69d4973:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::MIN_F64", 13));
			}
		}
		else {
			_case_begin_1c69d490c:;
			{
				_1bdc46c76_ftoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1163_x, 64LL);
			}
		}
		_match_end_1c69d4698:;
	};
}



inline void _1bdc37690_constant(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bac25065_Const> _13329_c) {
	{
		
		if (_1bac297c8_IsStr(_13329_c.ptr())) {
			_case_begin_1c69d6b1d:;
			{
				_1bdc3657e_string(_self_, &(_13329_c));
			}
		}
		else if (_1bac29542_IsBool(_13329_c.ptr())) {
			_case_begin_1c69d6b84:;
			{
				_1bdc36837_boolean(_self_, _1bac26e46_ReadBool(_13329_c));
			}
		}
		else if (_1bac29a5e_IsF64(_13329_c)) {
			_case_begin_1c69d6bea:;
			{
				{
					
					if (((*_13329_c.alloc)._field_Kind == static_cast<jule::Str>(jule::Str::lit("f32", 3)))) {
						_case_begin_1c69d9637:;
						{
							_1bdc3712e_float32(_self_, &(_13329_c));
						}
					}
					else {
						_case_begin_1c69d9291:;
						{
							_1bdc373d7_float64(_self_, &(_13329_c));
						}
					}
					_match_end_1c69d9181:;
				};
			}
		}
		else if (_1bac29025_IsI64(_13329_c)) {
			_case_begin_1c69d6c61:;
			{
				_1bdc47062_itoa(&((*((*_self_.alloc)._field_oc))._field_Buf), _1bac26929_ReadI64(_13329_c));
			}
		}
		else if (_1bac292ab_IsU64(_13329_c)) {
			_case_begin_1c69d6cc7:;
			{
				_1bdc4734d_utoa(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bac26bb0_ReadU64(_13329_c));
			}
		}
		else if (_1bac29ce5_IsNil(_13329_c)) {
			_case_begin_1c69d6d3d:;
			{
				_1bdc36a35_nilLit(_self_);
			}
		}
		else {
			_case_begin_1c69d6aa7:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_constant_expression>", 35));
			}
		}
		_match_end_1c69d69a8:;
	};
}



inline void _1bdc37aad_operatorOverloadingUnary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _15746_s, jule::U32 _15767_op, jule::Any _15786_e) {
	;
	jule::Ptr<_1bc302113_FnIns> _1597_f = _1bcdc6d91_FindOperator(_15746_s, _15767_op, true);;
	if ((_1597_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: unary operator overloading is not exist, this is an implementation mistake", 79) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:161:4"));;
	};
	static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_1597_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(&", 2));
	_1bdc3a53e_possibleRefExpr(_self_, _15786_e);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc37ecb_divByZeroBinary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc247014_Token>* _16933_op, jule::Ptr<_1bc2e1795_OperandExprModel>* _16957_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _16990_r) {
	;
	;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16957_l))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_16957_l))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16990_r))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_16990_r))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; if (", 6));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" == 0) __jule_panic_s(\"runtime: divide by zero\"", 47));
	if ((!(_1abb45d85_Production))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" \"\\nlocation: ", 14));
		_1bdeeda33_locInfo((*(_self_))._field_oc, _16933_op);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); ((", 5));
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_16957_l))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	{
		auto &_match_expr{ (*((*(_16933_op))))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1c612238b:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" / ", 3));
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU) || _match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c6125dd9:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" % ", 3));
			}
		}
		_match_end_1c6125d40:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bdc386c4__unsafeBinary(jule::Ptr<_1bdc35dca_exprCoder> _self_, _1a95669ea_Builder* _20835_buf, jule::Str* _20859_l, jule::Str* _20868_r, jule::Ptr<_1bc4b64e7_Type>* _2098_lk, jule::Ptr<_1bc4b64e7_Type>* _20930_rk, jule::U32 _20947_op, jule::Str _20962_kind) {
	if ((_1bc4ba221_Struct((*(_2098_lk)).ptr()) != nullptr)) {
		jule::Ptr<_1bc2810c5_StructIns> _2128_s = _1bc4ba221_Struct((*(_2098_lk)).ptr());;
		_1bdc4799c_operatorOverloadingBinary(_20835_buf, &(_2128_s), _20859_l, _20868_r, _20947_op, _20962_kind);
		return;;
	};
	if (((_20947_op == static_cast<jule::U32>(50LLU)) || (_20947_op == static_cast<jule::U32>(51LLU)))) {
		{
			
			if (_1bcdc3a80_IsAny(_2098_lk)) {
				_case_begin_1c69e9d51:;
				{
					if (((!(_1bc4b762a_IsNil((*(_20930_rk)).ptr()))) && (!(_1bcdc3a80_IsAny(_20930_rk))))) {
						({
							auto except = _1a9567ca4_WriteByte(_20835_buf, '(');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:224:6"));
						});
						if ((_20947_op == static_cast<jule::U32>(51LLU))) {
							({
								auto except = _1a9567ca4_WriteByte(_20835_buf, '!');
								if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:226:7"));
							});
						};
						jule::I32 _2286_i = _1bdeecda6_pushAnyType((*(_self_))._field_oc, (*(_20930_rk)));;
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, jule::Str::lit("__jule_any_type", 15));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:229:6"));
							(except.result);
						});
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, _1ac596ac1_Itoa(_2286_i));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:230:6"));
							(except.result);
						});
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, jule::Str::lit("_compare(", 9));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:231:6"));
							(except.result);
						});
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, (*(_20859_l)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:232:6"));
							(except.result);
						});
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, jule::Str::lit(", ", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:233:6"));
							(except.result);
						});
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, (*(_20868_r)));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:234:6"));
							(except.result);
						});
						({
							auto except = _1a95679eb_WriteStr(_20835_buf, jule::Str::lit("))", 2));
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:235:6"));
							(except.result);
						});
						return;;
					};
				}
			}
			else if ((_1bc4b996d_Arr((*(_2098_lk)).ptr()) != nullptr)) {
				_case_begin_1c69e9dea:;
				{
					jule::Ptr<_1bc4c5e30_Arr> _2415_arr = _1bc4b996d_Arr((*(_2098_lk)).ptr());;
					jule::Ptr<_1bc302113_FnIns> _2429_ins = _1bcdc7215_FindFnGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_ArrayCmp), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_2415_arr))._field_Elem; __jule_collection; }));;
					if ((_20947_op == static_cast<jule::U32>(51LLU))) {
						({
							auto except = _1a9567ca4_WriteByte(_20835_buf, '!');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:244:6"));
						});
					};
					static__1bdc4c771_funcIns(_20835_buf, &(_2429_ins));
					({
						auto except = _1a9567ca4_WriteByte(_20835_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:247:5"));
					});
					({
						auto except = _1a95679eb_WriteStr(_20835_buf, (*(_20859_l)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:248:5"));
						(except.result);
					});
					({
						auto except = _1a95679eb_WriteStr(_20835_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:249:5"));
						(except.result);
					});
					({
						auto except = _1a95679eb_WriteStr(_20835_buf, (*(_20868_r)));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:250:5"));
						(except.result);
					});
					({
						auto except = _1a95679eb_WriteStr(_20835_buf, jule::Str::lit(".begin(), ", 10));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:251:5"));
						(except.result);
					});
					({
						auto except = _1a95679eb_WriteStr(_20835_buf, _1ac596ac1_Itoa((*_2415_arr.alloc)._field_N));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:252:5"));
						(except.result);
					});
					({
						auto except = _1a9567ca4_WriteByte(_20835_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:253:5"));
					});
					return;;
				}
			}
			_match_end_1c69e9c63:;
		};
	};
	{
		auto &_match_expr{ _20947_op };
		
		if (_match_expr == static_cast<jule::U32>(60LLU) || _match_expr == static_cast<jule::U32>(61LLU) || _match_expr == static_cast<jule::U32>(62LLU) || _match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c69edc45:;
			{
				jule::Ptr<_1bc4be610_Prim> _2614_lp = _1bc4b8b9d_Prim((*(_2098_lk)).ptr());;
				if (((_2614_lp != nullptr) && _1bc37c622_IsUnsigInt((*_2614_lp.alloc)._field_Kind))) {
					({
						auto except = _1a9567ca4_WriteByte(_20835_buf, '(');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:263:5"));
					});
					_1be00b810_prim((*((*(_self_))._field_oc))._field_tc.ptr(), _20835_buf, _2614_lp);
					({
						auto except = _1a9567ca4_WriteByte(_20835_buf, ')');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:265:5"));
					});
				};
			}
		}
		_match_end_1c69edbce:;
	};
	({
		auto except = _1a9567ca4_WriteByte(_20835_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:269:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_20835_buf, (*(_20859_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:270:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_20835_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:271:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_20835_buf, _20962_kind);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:272:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_20835_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:273:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_20835_buf, (*(_20868_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:274:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_20835_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:275:3"));
	});
}



inline void _1bdc3897c_unsafeBinary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _27833_m) {
	jule::I32 _2793_i = _1a9568810_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::U8> _2807_oldbuf = _1a9568d2c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_27833_m))._field_Left))._field_Model);
	jule::Str _2823_l = __jule_bytesToStr(_1a9568d2c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1a95690d5_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_1bdc3a53e_possibleRefExpr(_self_, (*((*_27833_m.alloc)._field_Right))._field_Model);
	jule::Str _2853_r = __jule_bytesToStr(_1a9568d2c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf).slice(_2793_i));;
	{
		_1a95690d5_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _2807_oldbuf);
	};
	_1bdc386c4__unsafeBinary(_self_, &((*(*(_self_))._field_oc.alloc)._field_Buf), &(_2823_l), &(_2853_r), &((*(*(_27833_m))._field_Left.alloc)._field_Type), &((*(*(_27833_m))._field_Right.alloc)._field_Type), (*((*_27833_m.alloc)._field_Op))._field_Id, (*(*(_27833_m))._field_Op.alloc)._field_Kind);
}



inline void _1bdc38ce0_shl(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1795_OperandExprModel>* _29025_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _29058_r) {
	;
	;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_29025_l))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29058_r))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_29058_r))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_29025_l))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bc37486c_BitSizeOf((*(_1bc4b8b9d_Prim((*((*(_29025_l))))._field_Type.ptr())))._field_Kind)));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" << ", 4));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bdc39153_shr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1795_OperandExprModel>* _31825_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _31858_r) {
	;
	;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_31825_l))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31858_r))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_31858_r))))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ((", 4));
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_31825_l))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" >= ", 4));
	_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bc37486c_BitSizeOf((*(_1bc4b8b9d_Prim((*((*(_31825_l))))._field_Type.ptr())))._field_Kind)));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ? 0 : ", 7));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_x", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" >> ", 4));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_y", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")); })", 6));
}



inline void _1bdc3940b_binary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e1c90_BinaryExprModel> _34627_m) {
	{
		auto &_match_expr{ (*((*(_34627_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(63LLU) || _match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c6e4da8a:;
			{
				if ((_1abb45b43_Safety && (_1bc4ba221_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr))) {
					_1bdc37ecb_divByZeroBinary(_self_, &((*_34627_m.alloc)._field_Op), &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c6e4db12:;
			{
				if ((_1bc4ba221_Struct((*((*(_34627_m))._field_Left))._field_Type.ptr()) == nullptr)) {
					_1bdc38ce0_shl(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c6e4db78:;
			{
				if ((_1bc4ba221_Struct((*((*(_34627_m))._field_Left))._field_Type) == nullptr)) {
					_1bdc39153_shr(_self_, &((*_34627_m.alloc)._field_Left), &((*_34627_m.alloc)._field_Right));
					return;;
				};
			}
		}
		_match_end_1c6e4d9be:;
	};
	_1bdc3897c_unsafeBinary(_self_, _34627_m);
}



inline void _1bdc396b4_var(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc42dc12_Var> _37024_m) {
	{
		auto expr = &((*(_self_))._field_varPrefixes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e53991:;
		if (it != expr_end) {
			jule::Fn<jule::Bool,jule::Ptr<_1bc42dc12_Var>> _37110_prefix = *it;
			{
				if (_37110_prefix(_37024_m)) {
					return;;
				};
			}
			_iter_next_1c6e53991:;
			++it;
			goto _iter_begin_1c6e53991;
		}
		_iter_end_1c6e53991:;
	};
	if ((*(_37024_m))._field_Binded) {
		jule::Ptr<_1bc25bd2b_Directive> _3774_d = _1bcdc56db_FindDirective(&((*_37024_m.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_3774_d != nullptr)) {
			_1bdeeb657_writeBytes((*_self_.alloc)._field_oc, _1be0086ca_concatAllParts((*_3774_d.alloc)._field_Args));
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bdc4d9e7_var(&((*((*_self_.alloc)._field_oc))._field_Buf), _37024_m);
}



inline void _1bdc3996c_structureIns(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2810c5_StructIns> _38633_m) {
	_1be00e093_structureIns((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _38633_m);
}



inline void _1bdc39c25_unary(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e2169_UnaryExprModel> _39026_m) {
	if ((_1bc4ba221_Struct((*((*(_39026_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
		jule::Ptr<_1bc2810c5_StructIns> _3938_s = _1bc4ba221_Struct((*((*(_39026_m))._field_Expr))._field_Type);;
		_1bdc37aad_operatorOverloadingUnary(_self_, &(_3938_s), (*((*_39026_m.alloc)._field_Op))._field_Id, (*(*(_39026_m))._field_Expr.alloc)._field_Model);
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39026_m))._field_Op))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c6e59ca5:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(~(", 3));
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(_39026_m))._field_Expr))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c6e5a613:;
			{
				if ((_1abb45d85_Production || (_1bc4b8e34_Sptr((*((*(_39026_m))._field_Expr))._field_Type.ptr()) == nullptr))) {
					goto _match_end_1c6e5a569;
				};
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(_39026_m))._field_Expr))._field_Model);
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".get(\"", 6));
				_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_39026_m.alloc)._field_Op));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\")", 2));
				return;;
			}
		}
		_match_end_1c6e5a569:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, (*((*(_39026_m))._field_Op))._field_Kind);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*_39026_m.alloc)._field_Expr))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bdc39ecd_structureLit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e2a3d_StructLitExprModel> _42133_m) {
	if ((*((*((*(_42133_m))._field_Strct))._field_Decl))._field_Binded) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	};
	_1bdc3996c_structureIns(_self_, (*(_42133_m))._field_Strct);
	if ((*((*((*_42133_m.alloc)._field_Strct))._field_Decl))._field_Binded) {
		_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	};
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _4327_inited = false;;
	_julec_label_1c6e63d25:;
	{
		auto expr = &((*((*_42133_m.alloc)._field_Strct))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e652cc:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> _43415_f = *it;
			{
				{
					auto expr = &((*_42133_m.alloc)._field_Args);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6e66069:;
					if (it != expr_end) {
						jule::Ptr<_1bc2e2697_StructArgExprModel> _43516_arg = *it;
						{
							if (((*(_43516_arg))._field_Field == _43415_f)) {
								if (_4327_inited) {
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
								};
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
								static__1bdc4d70b_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*(_43415_f))._field_Decl));
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
								_1bdc3a53e_possibleRefExpr(_self_, (*((*_43516_arg.alloc)._field_Expr))._field_Model);
								_4327_inited=true;
								goto _iter_next_1c6e652cc;
							};
						}
						_iter_next_1c6e66069:;
						++it;
						goto _iter_begin_1c6e66069;
					}
					_iter_end_1c6e66069:;
				};
				if ((*((*((*_42133_m.alloc)._field_Strct))._field_Decl))._field_Binded) {
					_4327_inited=false;
					goto _iter_next_1c6e652cc;
				};
				if (_4327_inited) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_4327_inited=_1bdc44c96_handleFieldByDefault(_self_, &(_43415_f));
			}
			_iter_next_1c6e652cc:;
			++it;
			goto _iter_begin_1c6e652cc;
		}
		_iter_end_1c6e652cc:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc3a286_allocStructure(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e2d3a_AllocStructLitExprModel> _46435_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1bdc3996c_structureIns(_self_, (*((*(_46435_m))._field_Lit))._field_Strct);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bdc39ecd_structureLit(_self_, (*_46435_m.alloc)._field_Lit);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc3a53e_possibleRefExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _47232_expr) {
	{
		auto &_match_expr{ _47232_expr };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c6ce94d5:;
			{
				jule::Ptr<_1bc42dc12_Var> _4754_v = _47232_expr.unsafe_cast_ptr<_1bc42dc12_Var>();;
				if ((*(_4754_v))._field_Reference) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(*(", 3));
					_1bdc44955_model(_self_, _47232_expr);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
					return;;
				};
			}
		}
		_match_end_1c6ce946e:;
	};
	_1bdc44955_model(_self_, _47232_expr);
}



inline void _1bdc3a95c_castTraitFromTrait(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e33bd_CastingExprModel>* _48640_m, jule::Ptr<_1bc309769_Trait> _48672_t1, jule::Ptr<_1bc309769_Trait> _48694_t2) {
	_1bdc3a53e_possibleRefExpr(_self_, (*((*((*(_48640_m))))._field_Expr))._field_Model);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".map(", 5));
	_1bdeed77a_pushAndWriteMaskMapper((*(_self_))._field_oc, _48672_t1, _48694_t2);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc3ac15_casting(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e33bd_CastingExprModel> _49928_m) {
	{
		
		if (_1bcdc3a80_IsAny(&((*(_49928_m))._field_Type))) {
			_case_begin_1c6cee100:;
			{
				if (_1bc4b762a_IsNil((*_49928_m.alloc)._field_ExprType.ptr())) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Any()", 11));
					return;;
				};
				if ((_1bc4b96d7_TypeEnum((*_49928_m.alloc)._field_ExprType.ptr()) != nullptr)) {
					_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
					return;;
				};
				jule::I32 _5104_i = _1bdeecda6_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_ExprType);;
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Any(", 10));
				{
					auto &_match_expr{ (*((*(_49928_m))._field_Expr))._field_Model };
					
					if (_match_expr.type == &__jule_any_type15) {
						_case_begin_1c6d00cd3:;
						{
							jule::Ptr<_1bc4be610_Prim> _5145_prim = _1bc4b8b9d_Prim((*_49928_m.alloc)._field_ExprType.ptr());;
							if (((_5145_prim != nullptr) && _1bc37c8db_IsInt((*_5145_prim.alloc)._field_Kind))) {
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
								_1be00b810_prim((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _5145_prim);
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
								_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								goto _match_end_1c6d03016;
							};
							goto _case_begin_1c6d0307c;
						}
					}
					else {
						_case_begin_1c6d0307c:;
						{
							_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
						}
					}
					_match_end_1c6d03016:;
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
				_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_5104_i));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if (_1bcdc3a80_IsAny(&((*(_49928_m))._field_ExprType))) {
			_case_begin_1c6cee199:;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
				if ((_1bc4b8e34_Sptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1bc4b8e34_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1abb45d85_Production))) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&__jule_any_type", 16));
				_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bdeecda6_pushAnyType((*(_self_))._field_oc, (*_49928_m.alloc)._field_Type)));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1bc4b91ba_Ptr((*_49928_m.alloc)._field_ExprType.ptr()) != nullptr) || (_1bc4b91ba_Ptr((*(_49928_m))._field_Type) != nullptr)) {
			_case_begin_1c6cee210:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
				_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")(", 2));
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
				return;;
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_49928_m))._field_ExprType) != nullptr)) {
			_case_begin_1c6cee276:;
			{
				if ((_1bc4ba4a7_Trait((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1bdc3a95c_castTraitFromTrait(_self_, &(_49928_m), _1bc4ba4a7_Trait((*(_49928_m))._field_Type), _1bc4ba4a7_Trait((*(_49928_m))._field_ExprType));
					return;;
				};
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
				if ((_1bc4b8e34_Sptr((*_49928_m.alloc)._field_Type.ptr()) != nullptr)) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("cast_ptr<", 9));
					_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1bc4b8e34_Sptr((*(_49928_m))._field_Type)))._field_Elem);
				} else {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("cast<", 5));
					_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
				if ((!(_1abb45d85_Production))) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_49928_m.alloc)._field_Token));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(jule::Trait::Type*)&", 21));
				static__1bdc4ca5c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bc4ba4a7_Trait((*(_49928_m))._field_ExprType));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bcdc6962_FindTraitTypeOffset(_1bc4ba4a7_Trait((*(_49928_m))._field_ExprType), (*_49928_m.alloc)._field_Type)));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_49928_m))._field_Type) != nullptr)) {
			_case_begin_1c6cee2dc:;
			{
				_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_49928_m))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", (jule::Trait::Type*)&", 23));
				static__1bdc4ca5c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), _1bc4ba4a7_Trait((*_49928_m.alloc)._field_Type.ptr()));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_mptr_data", 10));
				_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_1bcdc6962_FindTraitTypeOffset(_1bc4ba4a7_Trait((*(_49928_m))._field_Type), (*_49928_m.alloc)._field_ExprType)));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c6cede68:;
	};
	jule::Ptr<_1bc4be610_Prim> _5967_prim = _1bc4b8b9d_Prim((*(_49928_m))._field_Type.ptr());;
	if (((_5967_prim != nullptr) && _1bc4c2aca_IsStr(_5967_prim))) {
		jule::Ptr<_1bc4be610_Prim> _5988_eprim = _1bc4b8b9d_Prim((*_49928_m.alloc)._field_ExprType.ptr());;
		if (((_5988_eprim != nullptr) && (_5967_prim != nullptr))) {
			if (_1bc4c103a_IsU8(_5988_eprim)) {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromByte(", 19));
			} else {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strFromRune(", 19));
			};
			_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
		jule::Ptr<_1bc4c3b0e_Slc> _6098_slc = _1bc4b9c04_Slc((*(_49928_m))._field_ExprType);;
		if ((_6098_slc != nullptr)) {
			_5988_eprim=_1bc4b8b9d_Prim((*_6098_slc.alloc)._field_Elem.ptr());
			if (_1bc4c0a1d_IsI32(_5988_eprim.ptr())) {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_runesToStr(", 18));
			} else {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_bytesToStr(", 18));
			};
			_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_5967_prim=_1bc4b8b9d_Prim((*_49928_m.alloc)._field_ExprType.ptr());
	if (((_5967_prim != nullptr) && _1bc4c2aca_IsStr(_5967_prim))) {
		jule::Ptr<_1bc4c3b0e_Slc> _6258_slc = _1bc4b9c04_Slc((*(_49928_m))._field_Type);;
		if ((_6258_slc != nullptr)) {
			_5967_prim=_1bc4b8b9d_Prim((*_6258_slc.alloc)._field_Elem.ptr());
			if (_1bc4c0a1d_IsI32(_5967_prim.ptr())) {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToRunes(", 18));
			} else {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_strToBytes(", 18));
			};
			_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
			_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
			return;;
		};
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("static_cast<", 12));
	_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_49928_m.alloc)._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*_49928_m.alloc)._field_Expr))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc3aebd_args(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _64626_m) {
	jule::I32 _6477_j = 0LL;;
	if (((((*((*((*(_64626_m))))._field_Func))._field_Owner != nullptr) && (!((*((*(*((*(_64626_m))))._field_Func.alloc)._field_Decl))._field_Statically))) || (((*(*((*(_64626_m))))._field_Func.alloc)._field_Params.len() > 0LL) && _1bc2ecbd0_IsSelf((*((*((*((*(_64626_m))))._field_Func))._field_Params[0LL]))._field_Decl.ptr())))) {
		(_6477_j)++;
	};
	{
		auto expr = &((*((*(_64626_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ba9ad2:;
		if (it != expr_end) {
			jule::I32 _6527_i = it - expr->begin();
			jule::Any _65210_arg = *it;
			{
				jule::Ptr<_1bc300ead_ParamIns> _6534_p = (*((*((*(_64626_m))))._field_Func))._field_Params[_6477_j];;
				if ((((*(_6534_p))._field_Decl != nullptr) && (*(*(_6534_p))._field_Decl.alloc)._field_Reference)) {
					{
						auto &_match_expr{ _65210_arg };
						
						if (_match_expr.type == &__jule_any_type7) {
							_case_begin_1c6bab7c6:;
							{
								jule::Ptr<_1bc42dc12_Var> _6576_v = _65210_arg.unsafe_cast_ptr<_1bc42dc12_Var>();;
								if ((*(_6576_v))._field_Reference) {
									_1bdc44955_model(_self_, _65210_arg);
									goto _julec_label_1c0d43843;
								};
							}
						}
						_match_end_1c6bab760:;
					};
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&(", 2));
					_1bdc44955_model(_self_, _65210_arg);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
					goto _julec_label_1c0d43843;
				};
				_1bdc3a53e_possibleRefExpr(_self_, _65210_arg);
				_julec_label_1c0d43843:;
				if ((((*((*(_64626_m))))._field_Args.len() - _6527_i) > 1LL)) {
					_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
				};
				(_6477_j)++;
			}
			_iter_next_1c6ba9ad2:;
			++it;
			_6527_i++;
			goto _iter_begin_1c6ba9ad2;
		}
		_iter_end_1c6ba9ad2:;
	};
}



inline void _1bdc3b276_modelForCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _67733_expr) {
	{
		auto &_match_expr{ _67733_expr };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c6bac024:;
			{
				_1bdc3e8a6_funcIns(_self_, _67733_expr.cast_ptr<_1bc302113_FnIns>(&__jule_any_type65));
				return;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c6ba9a5a:;
			{
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _6838_ssie = _67733_expr.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>();;
				if (((*(_6838_ssie))._field_Method != nullptr)) {
					_1bdc3e8a6_funcIns(_self_, (*_6838_ssie.alloc)._field_Method);
					return;;
				};
			}
		}
		_match_end_1c6babe03:;
	};
	_1bdc3a53e_possibleRefExpr(_self_, _67733_expr);
}



inline void _1bdc3b52e_pushCallInf(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _69229_m) {
	if ((_1abb45d85_Production || (!((*((*((*(_69229_m))))._field_Func))._field_Anon)))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		return;;
	};
	if ((*((*((*(_69229_m))))._field_Func))._field_Anon) {
		{
			auto &_match_expr{ (*((*(_69229_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1c6e6ea45:;
				{
					if ((*((*((*((*((*((*(_69229_m))))._field_Expr.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>()))._field_Field))._field_Decl))._field_Owner))._field_Binded) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
						return;;
					};
				}
			}
			_match_end_1c6e6e9ce:;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".call", 5));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(\"", 2));
	_1bdeeda33_locInfo((*(_self_))._field_oc, &((*((*(_69229_m))))._field_Token));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	if (((*((*(_69229_m))))._field_Args.len() != 0LL)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	};
}



inline jule::Bool _1bdc3b870_isWrapped(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _71531_m) {
	if ((((!(_1bc3035cb_IsBuiltin((*((*(_71531_m))))._field_Func.ptr()))) && ((*((*(*((*(_71531_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1bc2ecbd0_IsSelf((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_71531_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1c6e74808:;
				{
					jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _7199_ssie = (*((*(_71531_m))))._field_Expr.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>();;
					{
						
						if (_1bc2ece66_IsRef((*((*((*((*(_71531_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()) || (_1bc4b8e34_Sptr((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1c6e765a7:;
							{
								goto _match_end_1c6e75760;
							}
						}
						else {
							_case_begin_1c6e757d7:;
							{
								if ((_1bc4ba221_Struct((*((*(_7199_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
									if ((!((*(*(_7199_ssie))._field_Expr.alloc)._field_Lvalue))) {
										_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ auto _wrap_copy = ", 21));
										_1bdc44955_model(_self_, (*(*(_7199_ssie))._field_Expr.alloc)._field_Model);
										_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
										return true;;
									};
								};
							}
						}
						_match_end_1c6e75760:;
					};
				}
			}
			_match_end_1c6e74792:;
		};
	};
	return false;;
}



inline jule::Bool _1bdc3bbb1_writeReceiver(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _73934_m) {
	jule::Bool __jule_func_result = false;
	{
		auto &_match_expr{ _73934_m };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6e7b0d4:;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(_73934_m.unsafe_cast_ptr<_1bc2e2169_UnaryExprModel>()))._field_Expr))._field_Model);
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c6e7b2e3:;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*((*((*(_73934_m.unsafe_cast_ptr<_1bdadce6e_UnsafeDerefExprModel>()))._field_Base))._field_Expr))._field_Model);
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1c6e7b27c:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:748:4"));;
			}
		}
		_match_end_1c6e7b216:;
	};
}



inline void _1bdc3be69_pureFuncCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _75234_m) {
	jule::Bool _7533_wrapped = _1bdc3b870_isWrapped(_self_, _75234_m);;
	_1bdc3b276_modelForCall(_self_, (*((*(_75234_m))))._field_Expr);
	if ((!(_1bc3035cb_IsBuiltin((*((*(_75234_m))))._field_Func.ptr())))) {
		if (((*((*(*((*(_75234_m))))._field_Func.alloc)._field_Decl))._field_Binded && ((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() > 0LL))) {
			if ((!(_1bcdc5aa4_HasDirective(&((*(*((*((*(_75234_m))))._field_Func))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("cdef", 4)))))) {
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("<", 1));
				{
					auto expr = &((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6e8065a:;
					if (it != expr_end) {
						jule::I32 _75911_i = it - expr->begin();
						jule::Ptr<_1bc4b4b11_InsGeneric> _75918_g = *it;
						{
							_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_75918_g))._field_Type);
							if ((((*(*((*(_75234_m))))._field_Func.alloc)._field_Generics.len() - _75911_i) > 1LL)) {
								_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
							};
						}
						_iter_next_1c6e8065a:;
						++it;
						_75911_i++;
						goto _iter_begin_1c6e8065a;
					}
					_iter_end_1c6e8065a:;
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">", 1));
			};
		};
	};
	_1bdc3b52e_pushCallInf(_self_, _75234_m);
	if (((*((*((*(_75234_m))))._field_Func))._field_AsAnon && (!((*(*((*(_75234_m))))._field_Func.alloc)._field_Anon)))) {
		_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("nullptr", 7));
		if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		};
	};
	if ((((!(_1bc3035cb_IsBuiltin((*((*(_75234_m))))._field_Func.ptr()))) && ((*((*(*((*(_75234_m))))._field_Func.alloc)._field_Decl))._field_Params.len() > 0LL)) && _1bc2ecbd0_IsSelf((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr()))) {
		{
			auto &_match_expr{ (*((*(_75234_m))))._field_Expr };
			
			if (_match_expr.type == &__jule_any_type101) {
				_case_begin_1c6d0404a:;
				{
					jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _7839_ssie = (*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>();;
					{
						
						if (_1bc2ece66_IsRef((*((*((*((*(_75234_m))))._field_Func))._field_Decl))._field_Params[0LL].ptr())) {
							_case_begin_1c6b623e7:;
							{
								_1bdc3bbb1_writeReceiver(_self_, (*((*(_7839_ssie))._field_Expr))._field_Model);
							}
						}
						else if ((_1bc4b8e34_Sptr((*((*(_7839_ssie))._field_Expr))._field_Type.ptr()) != nullptr)) {
							_case_begin_1c6b62cbb:;
							{
								jule::Bool _7906_safe = _1bdc3bbb1_writeReceiver(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);;
								if (_7906_safe) {
									_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".ptr(", 5));
									if ((!(_1abb45d85_Production))) {
										_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
										_1bdeeda33_locInfo((*(_self_))._field_oc, &((*((*(_75234_m))))._field_Token));
										_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
									};
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
								};
							}
						}
						else {
							_case_begin_1c6d0a617:;
							{
								if ((_1bc4ba221_Struct((*((*(_7839_ssie))._field_Expr))._field_Type) != nullptr)) {
									{
										auto &_match_expr{ (*((*(_7839_ssie))._field_Expr))._field_Model };
										
										if (_match_expr.type == &__jule_any_type7) {
											_case_begin_1c6d0ae64:;
											{
												jule::Ptr<_1bc42dc12_Var> _8048_v = (*((*(_7839_ssie))._field_Expr))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
												if ((*(_8048_v))._field_Reference) {
													goto _match_end_1c6d0b43c;
												};
												goto _case_begin_1c6d0b4a3;
											}
										}
										else {
											_case_begin_1c6d0b4a3:;
											{
												_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("&", 1));
											}
										}
										_match_end_1c6d0b43c:;
									};
								};
								if (_7533_wrapped) {
									_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_wrap_copy", 10));
								} else if ((_1bc4b91ba_Ptr((*((*(_7839_ssie))._field_Expr))._field_Type) == nullptr)) {
									_1bdc44955_model(_self_, (*(*(_7839_ssie))._field_Expr.alloc)._field_Model);
								} else {
									_1bdc3a53e_possibleRefExpr(_self_, (*((*((*(*(_7839_ssie))._field_Expr.alloc)._field_Model.cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113)))._field_Expr))._field_Model);
								};
							}
						}
						_match_end_1c6d0a590:;
					};
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			else if (_match_expr.type == &__jule_any_type100) {
				_case_begin_1c6d08c42:;
				{
					_1bdc3a53e_possibleRefExpr(_self_, (*((*((*(_75234_m))))._field_Expr.unsafe_cast_ptr<_1bc2e5e70_TraitSubIdentExprModel>()))._field_Expr);
					_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".data", 5));
					if (((*((*(_75234_m))))._field_Args.len() > 0LL)) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
			}
			_match_end_1c6d03ed4:;
		};
	};
	_1bdc3aebd_args(_self_, _75234_m);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(")", 1));
	if (_7533_wrapped) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	};
}



inline void _1bdc3c222_coFuncCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel>* _84232_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	;
	;
	jule::Str _8497_i = jule::Str();;
	if ((((*((*((*(_84232_m))))._field_Func))._field_Params.len() > 0LL) || (*(*((*(_84232_m))))._field_Func.alloc)._field_AsAnon)) {
		_8497_i=_1ac596ac1_Itoa(_1bdeec3d3_pushCoSpawn((*(_self_))._field_oc, (*((*(_84232_m))))._field_Func));
		jule::Str _8524_t = (jule::Str::lit("__jule_cospawn_argdata", 22) + _8497_i);;
		_1bdeeb39e_write((*(_self_))._field_oc, _8524_t);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" *", 2));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = new (std::nothrow) ", 22));
		_1bdeeb39e_write((*(_self_))._field_oc, _8524_t);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; if (!", 7));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") __jule_panic((", 16));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("*)\"memory allocation failed for concurrent call\", 44);\n", 55));
		_1bdeebc51_indent((*(_self_))._field_oc);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__juleCoFunc", 12));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
		_1bdc3b276_modelForCall(_self_, (*((*(_84232_m))))._field_Expr);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
		{
			auto expr = &((*(*((*(_84232_m))))._field_Func.alloc)._field_Params);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c70a1ccb:;
			if (it != expr_end) {
				jule::I32 _8748_j = it - expr->begin();
				{
					_1bdeebc51_indent((*(_self_))._field_oc);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->", 2));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__juleCoParam", 13));
					_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_8748_j));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
					_1bdc3a53e_possibleRefExpr(_self_, (*((*(_84232_m))))._field_Args[_8748_j]);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
				}
				_iter_next_1c70a1ccb:;
				++it;
				_8748_j++;
				goto _iter_begin_1c70a1ccb;
			}
			_iter_end_1c70a1ccb:;
		};
		_1bdeebc51_indent((*(_self_))._field_oc);
	};
	if (!(_8497_i).empty()) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (!", 5));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_coSpawn((void*)", 22));
	if ((_8497_i).empty()) {
		static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_84232_m))))._field_Func));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, (jule::Str::lit("__jule_cospawn_method", 21) + _8497_i));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if ((_8497_i).empty()) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("NULL", 4));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(void*)", 7));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((_8497_i).empty()) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") { delete ", 11));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_argdata", 14));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; __jule_panic((", 16));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::U8", 8));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("*)\"thread creation failed for concurrent call\", 42); }", 54));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc3c585_writeUseExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _92034_f, jule::Ptr<_1bc48354c_Data> _92055_d) {
	if ((_1bc4ba9c4_Tup((*(_92055_d))._field_Type.ptr()) == nullptr)) {
		_1bdc3a53e_possibleRefExpr(_self_, (*_92055_d.alloc)._field_Model);
		_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
		return;;
	};
	jule::Ptr<_1bc2e737d_TupleExprModel> _9267_tup = (*(_92055_d))._field_Model.cast_ptr<_1bc2e737d_TupleExprModel>(&__jule_any_type84);;
	_1be0155b6_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _1bc4ba9c4_Tup((*((*(_92034_f))))._field_Result.ptr()));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
	{
		auto expr = &((*(_9267_tup))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c70b3a57:;
		if (it != expr_end) {
			jule::I32 _9297_i = it - expr->begin();
			jule::Ptr<_1bc48354c_Data> _92910_data = *it;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
				_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_9297_i));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
				_1bdc3a53e_possibleRefExpr(_self_, (*(_92910_data))._field_Model);
				if ((((*(_9267_tup))._field_Datas.len() - _9297_i) > 1LL)) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
			}
			_iter_next_1c70b3a57:;
			++it;
			_9297_i++;
			goto _iter_begin_1c70b3a57;
		}
		_iter_end_1c70b3a57:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("};", 2));
}



inline void _1bdc3c8e8_funcCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e3c70_FnCallExprModel> _94129_m, jule::Bool _94156_ignoreExceptional) {
	if ((*(_94129_m))._field_IsCo) {
		_1bdc3c222_coFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (((_1bc3035cb_IsBuiltin((*(_94129_m))._field_Func.ptr()) || (!((*((*(*(_94129_m))._field_Func.alloc)._field_Decl))._field_Exceptional))) || (((*_94129_m.alloc)._field_Except != nullptr) && ((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() == 0LL)))) {
		_1bdc3be69_pureFuncCall(_self_, &(_94129_m));
		return;;
	};
	if (_94156_ignoreExceptional) {
		_1bdc3be69_pureFuncCall(_self_, &(_94129_m));
		if (((*((*(_94129_m))._field_Func))._field_Result != nullptr)) {
			_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".result", 7));
		};
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({\n", 3));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto except = ", 14));
	_1bdc3be69_pureFuncCall(_self_, &(_94129_m));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	if (((*(_94129_m))._field_Except != nullptr)) {
		if ((((*((*_94129_m.alloc)._field_Func))._field_Result == nullptr) || (!((*_94129_m.alloc)._field_Assigned)))) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) ", 18));
			_1bdc32008_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
		} else {
			jule::Bool _9795_forwarded = _1bcdc35da_IsForwarded(&((*_94129_m.alloc)._field_Except));;
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(except.ok()) ? (except.result) : (", 35));
			if (_9795_forwarded) {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
			};
			jule::Any _9849_stmt = (*(*(_94129_m))._field_Except.alloc)._field_Stmts[((*(*(_94129_m))._field_Except.alloc)._field_Stmts.len() - 1LL)];;
			{
				auto &_match_expr{ _9849_stmt };
				
				if (_match_expr.type == &__jule_any_type22) {
					_case_begin_1c6e8542e:;
					{
						((*((*(_94129_m))._field_Except))._field_Stmts).mut_slice(0LL, ((*((*(_94129_m))._field_Except))._field_Stmts.len() - 1LL));;
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{\n", 2));
						_1bdeeb855_addIndent((*(_self_))._field_oc);
						_1bdc31c50_scopeStmts((*(*(_self_))._field_oc.alloc)._field_sc, &((*_94129_m.alloc)._field_Except));
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1bdeebc51_indent((*(_self_))._field_oc);
						_1bdc3c585_writeUseExpr(_self_, &((*_94129_m.alloc)._field_Func), _9849_stmt.cast_ptr<_1bc48354c_Data>(&__jule_any_type22));
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
						_1bdeeba53_doneIndent((*(_self_))._field_oc);
						_1bdeebc51_indent((*(_self_))._field_oc);
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
					}
				}
				else {
					_case_begin_1c6e86892:;
					{
						_1bdc32008_scope((*(*(_self_))._field_oc.alloc)._field_sc, (*_94129_m.alloc)._field_Except);
					}
				}
				_match_end_1c6e8682b:;
			};
			if (_9795_forwarded) {
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
				_1bdc45b21_initExpr(_self_, (*((*_94129_m.alloc)._field_Func))._field_Result);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";}", 2));
			};
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");\n", 3));
		};
		_1bdeeba53_doneIndent((*(_self_))._field_oc);
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (!except.ok()) __jule_panic_s(jule::Str(\"unhandled exceptional: \") + except.error.type->to_str(except.error.data) + jule::Str(\"\\nlocation: ", 142));
		_1bdeeda33_locInfo((*(_self_))._field_oc, &((*(_94129_m))._field_Token));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"));\n", 5));
		if ((!(_1bc2ee50b_IsVoid((*((*_94129_m.alloc)._field_Func))._field_Decl.ptr())))) {
			_1bdeebc51_indent((*(_self_))._field_oc);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(except.result);\n", 17));
		};
		_1bdeeba53_doneIndent((*(_self_))._field_oc);
	};
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("})", 2));
}



inline void _1bdc3cba1_slice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e4149_SliceExprModel> _102426_m) {
	if (((*(_102426_m))._field_Elems.len() == 0LL)) {
		_1be00d1e6_asSlice((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_102426_m.alloc)._field_ElemType);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1be00d1e6_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_102426_m))._field_ElemType);
	jule::Str _10323_size = _1ac596ac1_Itoa((*_102426_m.alloc)._field_Elems.len());;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, _10323_size);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, _10323_size);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); auto ", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	{
		auto expr = &((*_102426_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e9b379:;
		if (it != expr_end) {
			jule::I32 _10427_i = it - expr->begin();
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1bdc3a53e_possibleRefExpr(_self_, (*(_102426_m))._field_Elems[_10427_i]);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c6e9b379:;
			++it;
			_10427_i++;
			goto _iter_begin_1c6e9b379;
		}
		_iter_end_1c6e9b379:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1bdc3ce59_indexing(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e4600_IndexingExprModel> _105329_m) {
	{
		auto &_match_expr{ (*((*(_105329_m))._field_Expr))._field_Model };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c6ea0207:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str::at(", 14));
				if ((!(_1abb45d85_Production))) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
					_1bdeeda33_locInfo((*(_self_))._field_oc, &((*(_105329_m))._field_Token));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				};
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("reinterpret_cast<const jule::U8*>(", 34));
				jule::Str _10644_s = _1bac271cc_ReadStr((*((*(_105329_m))._field_Expr))._field_Model.unsafe_cast_ptr<_1bac25065_Const>().ptr());;
				_1bdc468d0_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _10644_s);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("), ", 3));
				_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_10644_s.len()));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(_105329_m))._field_Index))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
				return;;
			}
		}
		_match_end_1c6ea0191:;
	};
	{
		
		if ((_1bc4ba73d_Map((*((*(_105329_m))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c626a7d1:;
			{
				jule::Ptr<_1bc4c52a3_Map> _10778__map = _1bc4ba73d_Map((*((*(_105329_m))._field_Expr))._field_Type);;
				jule::Ptr<_1bc2810c5_StructIns> _10788_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_10778__map))._field_Key; (*it++) = (*_10778__map.alloc)._field_Val; __jule_collection; }));;
				;
				jule::Ptr<_1bc302113_FnIns> _10808_f = (*(_1bc282170_FindMethod(_10788_ins.ptr(), jule::Str::lit("get", 3), false)))._field_Instances[0LL];;
				static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_10808_f));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bdc3a53e_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Index))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		else if (_1abb45d85_Production || (_1bc4b91ba_Ptr((*((*(_105329_m))._field_Expr))._field_Type.ptr()) != nullptr) || _1bcdc37b6_IsExprComesFromBind(&((*_105329_m.alloc)._field_Expr))) {
			_case_begin_1c626aa45:;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1bdc3a53e_possibleRefExpr(_self_, (*((*_105329_m.alloc)._field_Index))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c612820a:;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_105329_m))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".at(\"", 5));
				_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_105329_m.alloc)._field_Token));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
				_1bdc3a53e_possibleRefExpr(_self_, (*(*(_105329_m))._field_Index.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c6128194:;
	};
}



inline void _1bdc3d212_unsafeIndexing(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadbee5_UnsafeIndexingExprModel> _110435_m) {
	_1bdc3a53e_possibleRefExpr(_self_, (*((*((*(_110435_m))._field_Node))._field_Expr))._field_Model);
	{
		
		if (_1abb45d85_Production || (_1bc4b91ba_Ptr((*(*((*(_110435_m))._field_Node))._field_Expr.alloc)._field_Type.ptr()) != nullptr) || (_1bc4ba73d_Map((*((*((*(_110435_m))._field_Node))._field_Expr))._field_Type) != nullptr)) {
			_case_begin_1c6d1725b:;
			{
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("[", 1));
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(*(_110435_m))._field_Node.alloc)._field_Index))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("]", 1));
			}
		}
		else {
			_case_begin_1c6d0c185:;
			{
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__at(", 6));
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(*(_110435_m))._field_Node.alloc)._field_Index))._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
			}
		}
		_match_end_1c6d15864:;
	};
}



inline void _1bdc3d4ba_anonFunc(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _112129_m) {
	jule::Bool _11223_closure = _1bcdc3dc1_IsClosure(&(_112129_m));;
	jule::Str _11233_ident = _1bdeeca65_pushAnonFn((*(_self_))._field_oc, &(_112129_m));;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::__new_closure<", 20));
	_1be010616_anonFunc((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_112129_m))._field_Func);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">((void*)", 9));
	_1bdeeb39e_write((*(_self_))._field_oc, _11233_ident);
	if (_11223_closure) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", jule::Ptr<", 12));
		_1bdeeb39e_write((*(_self_))._field_oc, _11233_ident);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_ctx", 4));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">::make(", 8));
		_1bdeeb39e_write((*(_self_))._field_oc, _11233_ident);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_ctx{", 5));
		{
			auto expr = &((*_112129_m.alloc)._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6d1b958:;
			if (it != expr_end) {
				jule::I32 _11359_i = it - expr->begin();
				jule::Ptr<_1bc42dc12_Var> _113516_v = *it;
				{
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
					static__1bdc4d9e7_var(&((*(*(_self_))._field_oc.alloc)._field_Buf), _113516_v);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bdc396b4_var(_self_, _113516_v);
					if ((((*_112129_m.alloc)._field_Captured.len() - _11359_i) > 1LL)) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
					};
				}
				_iter_next_1c6d1b958:;
				++it;
				_11359_i++;
				goto _iter_begin_1c6d1b958;
			}
			_iter_end_1c6d1b958:;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}).as<jule::Uintptr>(), ", 24));
		_1bdeeb39e_write((*(_self_))._field_oc, _11233_ident);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_ctx_handler)", 13));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", nullptr, nullptr)", 19));
	};
}



inline void _1bdc3d773_mapExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e5359_MapExprModel> _115228_m) {
	jule::Ptr<_1bc2810c5_StructIns> _11537_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*((*(_115228_m))._field_Kind))._field_Key; (*it++) = (*(*(_115228_m))._field_Kind.alloc)._field_Val; __jule_collection; }));;
	;
	jule::Ptr<_1bc302113_FnIns> _11557_maker = (*(_1bc282170_FindMethod(_11537_ins.ptr(), jule::Str::lit("make", 4), true)))._field_Instances[0LL];;
	if (((*_115228_m.alloc)._field_Entries.len() == 0LL)) {
		static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_11557_maker));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	jule::Ptr<_1bc302113_FnIns> _11627_f = (*(_1bc282170_FindMethod(_11537_ins.ptr(), jule::Str::lit("set", 3), false)))._field_Instances[0LL];;
	;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ ", 3));
	_1be00d8bc_mapType((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_115228_m.alloc)._field_Kind);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" ", 1));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11557_maker));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	{
		auto expr = &((*_115228_m.alloc)._field_Entries);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d2d23e:;
		if (it != expr_end) {
			jule::Ptr<_1bc2e4e80_KeyValPairExprModel> _117215_pair = *it;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_11627_f));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				_1bdc3a53e_possibleRefExpr(_self_, (*(_117215_pair))._field_Key);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")) = ", 5));
				_1bdc3a53e_possibleRefExpr(_self_, (*_117215_pair.alloc)._field_Val);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c6d2d23e:;
			++it;
			goto _iter_begin_1c6d2d23e;
		}
		_iter_end_1c6d2d23e:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_map", 10));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
}



inline void _1bdc3da2b_slicing(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e58dc_SlicingExprModel> _118728_m) {
	_1bdc3a53e_possibleRefExpr(_self_, (*(_118728_m))._field_Expr);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".slice(", 7));
	if ((!(_1abb45d85_Production))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_118728_m.alloc)._field_Token));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\", ", 3));
	};
	_1bdc3a53e_possibleRefExpr(_self_, (*_118728_m.alloc)._field_Left);
	if (((*_118728_m.alloc)._field_Right != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bdc3a53e_possibleRefExpr(_self_, (*_118728_m.alloc)._field_Right);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc3dcd4_traitSub(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e5e70_TraitSubIdentExprModel> _120329_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("((", 2));
	static__1bdc4ca5c_traitDecl(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_120329_m))._field_Trt);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("MptrData", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("*)", 2));
	_1bdc3a53e_possibleRefExpr(_self_, (*_120329_m.alloc)._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".safe_type(", 11));
	if ((!(_1abb45d85_Production))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
		_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_120329_m.alloc)._field_Token));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))->", 4));
	static__1bdc4c485_func(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*_120329_m.alloc)._field_Method));
}



inline void _1bdc3e08c_structureSub(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _121933_m) {
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_121933_m))._field_Expr))._field_Model);
	if (((*_121933_m.alloc)._field_Field == nullptr)) {
		return;;
	};
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".", 1));
	static__1bdc4d70b_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*_121933_m.alloc)._field_Field))._field_Decl));
}



inline void _1bdc3e345_array(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e7081_ArrayExprModel> _122826_m) {
	if ((((*((*(_122826_m))._field_Kind))._field_N == 0LL) || (((*_122826_m.alloc)._field_Elems.len() == 0LL) && (!(_1be017b90_ableToInit(&((*(*(_122826_m))._field_Kind.alloc)._field_Elem))))))) {
		_1be00e406_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122826_m.alloc)._field_Kind);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	if ((((*(_122826_m))._field_Elems.len() == 2LL) && ((*(_122826_m))._field_Elems[1LL] == nullptr))) {
		_1be00e406_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*_122826_m.alloc)._field_Kind);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bdc3a53e_possibleRefExpr(_self_, (*(_122826_m))._field_Elems[0LL]);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1be00e406_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_122826_m))._field_Kind);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(); auto ", 9));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".begin(); ", 10));
	if (((*_122826_m.alloc)._field_Elems.len() != (*((*_122826_m.alloc)._field_Kind))._field_N)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("const auto ", 11));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	};
	{
		auto expr = &((*_122826_m.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6273e05:;
		if (it != expr_end) {
			jule::I32 _12617_i = it - expr->begin();
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("++) = ", 6));
				_1bdc3a53e_possibleRefExpr(_self_, (*(_122826_m))._field_Elems[_12617_i]);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
			_iter_next_1c6273e05:;
			++it;
			_12617_i++;
			goto _iter_begin_1c6273e05;
		}
		_iter_end_1c6273e05:;
	};
	if ((((*_122826_m.alloc)._field_Elems.len() != (*((*_122826_m.alloc)._field_Kind))._field_N) && _1be017b90_ableToInit(&((*(*(_122826_m))._field_Kind.alloc)._field_Elem)))) {
		_1bdc45307_fillCollectionByDefault(_self_, &((*(*(_122826_m))._field_Kind.alloc)._field_Elem));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; })", 4));
	return;;
}



inline void _1bdc3e5ed_funcInsCommon(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc302113_FnIns> _127834_m) {
	_1be010979_func((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _127834_m);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3e8a6_funcIns(_self_, _127834_m);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc3e8a6_funcIns(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc302113_FnIns> _128528_m) {
	if ((((*(_128528_m))._field_Decl != nullptr) && (*(*(_128528_m))._field_Decl.alloc)._field_Binded)) {
		jule::Ptr<_1bc25bd2b_Directive> _12874_d = _1bcdc56db_FindDirective(&((*(*(_128528_m))._field_Decl.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
		if ((_12874_d != nullptr)) {
			_1bdeeb657_writeBytes((*(_self_))._field_oc, _1be0086ca_concatAllParts((*_12874_d.alloc)._field_Args));
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("::", 2));
		};
	};
	static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_128528_m));
}



inline void _1bdc3eb5e_tuple(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e737d_TupleExprModel> _129626_m) {
	{
		auto expr = &((*(_129626_m))._field_Datas);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c70b63ea:;
		if (it != expr_end) {
			jule::I32 _12978_i = it - expr->begin();
			jule::Ptr<_1bc48354c_Data> _129715_d = *it;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*(_129715_d))._field_Model);
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(";", 1));
				if ((((*(_129626_m))._field_Datas.len() - _12978_i) > 1LL)) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n", 1));
					_1bdeebc51_indent((*(_self_))._field_oc);
				};
			}
			_iter_next_1c70b63ea:;
			++it;
			_12978_i++;
			goto _iter_begin_1c70b63ea;
		}
		_iter_end_1c70b63ea:;
	};
}



inline void _1bdc3ee17_newCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e7d51_BuiltinNewCallExprModel> _130728_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::new_ptr<", 14));
	_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_130728_m))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(", 2));
	if (((*_130728_m.alloc)._field_Init != nullptr)) {
		_1bdc3a53e_possibleRefExpr(_self_, (*_130728_m.alloc)._field_Init);
	} else if (_1be017b90_ableToInit(&((*_130728_m.alloc)._field_Type))) {
		_1bdc45b21_initExpr(_self_, (*_130728_m.alloc)._field_Type);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc401c0_printCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e767a_BuiltinPrintCallExprModel> _131930_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::print(", 12));
	jule::Ptr<_1bc302113_FnIns> _13217_f = _1bcdc7215_FindFnGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_131930_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13217_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr(_self_, (*(*(_131930_m))._field_Expr.alloc)._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bdc40478_printlnCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e7977_BuiltinPrintlnCallExprModel> _132832_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::println(", 14));
	jule::Ptr<_1bc302113_FnIns> _13307_f = _1bcdc7215_FindFnGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*((*(_132832_m))._field_Expr))._field_Type; __jule_collection; }));;
	static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_13307_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr(_self_, (*(*(_132832_m))._field_Expr.alloc)._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("))", 2));
}



inline void _1bdc40731_panicCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> _133730_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_panic_s(", 15));
	_1bdc3a53e_possibleRefExpr(_self_, (*(_133730_m))._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" + jule::Str(\"\\nlocation: ", 26));
	_1bdeeda33_locInfo((*(_self_))._field_oc, &((*_133730_m.alloc)._field_Token));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\"));", 4));
}



inline void _1bdc409d9_errorCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _134530_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("return ", 7));
	if (_1bc2ee50b_IsVoid((*((*(_134530_m))._field_Func))._field_Decl.ptr())) {
		{
			auto &_match_expr{ (*((*(_134530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c6d35ad7:;
				{
					jule::Ptr<_1bc42dc12_Var> _13505_v = (*((*(_134530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
					if (((*(_13505_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=std::move(except.error)}", 53));
						return;;
					};
				}
			}
			_match_end_1c6d35a71:;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::VoidExceptional{.error=jule::Any(", 39));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Exceptional<", 18));
		_1be015c8c_codeMut1((*((*(*(_self_))._field_oc.alloc)._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_134530_m))._field_Func))._field_Result));
		{
			auto &_match_expr{ (*((*(_134530_m))._field_Err))._field_Model };
			
			if (_match_expr.type == &__jule_any_type7) {
				_case_begin_1c6d3a12a:;
				{
					jule::Ptr<_1bc42dc12_Var> _13625_v = (*((*(_134530_m))._field_Err))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>();;
					if (((*(_13625_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">{.error=except.error}", 22));
						return;;
					};
				}
			}
			_match_end_1c6d3a0b4:;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">{.error=jule::Any(", 19));
	};
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_134530_m))._field_Err))._field_Model);
	jule::I32 _13713_i = _1bdeecda6_pushAnyType((*(_self_))._field_oc, (*(*(_134530_m))._field_Err.alloc)._field_Type);;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", &__jule_any_type", 18));
	_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_13713_i));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")}", 2));
}



inline void _1bdc40c92_copyCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e9957_BuiltinCopyCallExprModel> _137729_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::copy(", 11));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_137729_m))._field_Dest))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*_137729_m.alloc)._field_Src))._field_Model);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc4104a_lenCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _138528_m) {
	jule::Ptr<_1bc4c52a3_Map> _13867__map = _1bc4ba73d_Map((*((*(_138528_m))._field_Expr))._field_Type.ptr());;
	if ((_13867__map != nullptr)) {
		jule::Ptr<_1bc2810c5_StructIns> _13888_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*_13867__map.alloc)._field_Key; (*it++) = (*_13867__map.alloc)._field_Val; __jule_collection; }));;
		;
		jule::Ptr<_1bc302113_FnIns> _13908_f = (*(_1bc282170_FindMethod(_13888_ins.ptr(), jule::Str::lit("len", 3), false)))._field_Instances[0LL];;
		static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_13908_f));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bdc3a53e_possibleRefExpr(_self_, (*(*(_138528_m))._field_Expr.alloc)._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
		return;;
	};
	_1bdc3a53e_possibleRefExpr(_self_, (*(*(_138528_m))._field_Expr.alloc)._field_Model);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".len()", 6));
}



inline void _1bdc41303_capCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e91a4_BuiltinCapCallExprModel> _140128_m) {
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_140128_m))._field_Expr))._field_Model);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".cap()", 6));
}



inline void _1bdc415ab_deleteCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> _140631_m) {
	jule::Ptr<_1bc4c52a3_Map> _14077__map = _1bc4ba73d_Map((*((*(_140631_m))._field_Dest))._field_Type.ptr());;
	if ((_14077__map == nullptr)) {
		__jule_panic_s(jule::Str::lit("cxx: deleteCall: destination is not map", 39) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1409:4"));;
	};
	jule::Ptr<_1bc2810c5_StructIns> _14117_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_14077__map))._field_Key; (*it++) = (*_14077__map.alloc)._field_Val; __jule_collection; }));;
	;
	if (((*_140631_m.alloc)._field_Key != nullptr)) {
		jule::Ptr<_1bc302113_FnIns> _14148_f = (*(_1bc282170_FindMethod(_14117_ins.ptr(), jule::Str::lit("del", 3), false)))._field_Instances[0LL];;
		static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14148_f));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bdc3a53e_possibleRefExpr(_self_, (*(*(_140631_m))._field_Dest.alloc)._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bdc3a53e_possibleRefExpr(_self_, (*(*(_140631_m))._field_Key.alloc)._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	} else {
		jule::Ptr<_1bc302113_FnIns> _14228_f = (*(_1bc282170_FindMethod(_14117_ins.ptr(), jule::Str::lit("clear", 5), false)))._field_Instances[0LL];;
		static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &(_14228_f));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bdc3a53e_possibleRefExpr(_self_, (*(*(_140631_m))._field_Dest.alloc)._field_Model);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bdc41864_makeCallSlice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel>* _143035_m) {
	jule::Ptr<_1bc4c3b0e_Slc> _14317_slice = _1bc4b9c04_Slc((*((*(_143035_m))))._field_Type.ptr());;
	jule::Bool _14323_init = _1be017b90_ableToInit(&((*(_14317_slice))._field_Elem));;
	if (_14323_init) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	};
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_143035_m))))._field_Type);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	if (((*((*(_143035_m))))._field_Cap != nullptr)) {
		_1bdc3a53e_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Cap);
	} else {
		_1bdc3a53e_possibleRefExpr(_self_, (*((*(_143035_m))))._field_Len);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((!(_14323_init))) {
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
	_1bdc455b0_initCollection(_self_, &((*_14317_slice.alloc)._field_Elem));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1bdc41b1c_makeCallStr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel>* _145433_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str", 9));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("::alloc(", 8));
	_1bdc3a53e_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Len);
	if (((*((*(_145433_m))))._field_Cap != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
		_1bdc3a53e_possibleRefExpr(_self_, (*((*(_145433_m))))._field_Cap);
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc41dc5_makeCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> _146529_m) {
	if ((_1bc4b9c04_Slc((*(_146529_m))._field_Type.ptr()) != nullptr)) {
		_1bdc41864_makeCallSlice(_self_, &(_146529_m));
		return;;
	};
	_1bdc41b1c_makeCallStr(_self_, &(_146529_m));
}



inline void _1bdc4217d_pushToSlice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadc3be_PushToSliceExprModel> _147332_m) {
	;
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{ ", 2));
	_1be00d1e6_asSlice((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_147332_m))._field_Elems))._field_ElemType);
	jule::Bool _14817_ptr = false;;
	{
		auto &_match_expr{ (*(_147332_m))._field_Dest };
		
		if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c70d3439:;
			{
				jule::Ptr<_1bc2e2169_UnaryExprModel> _14858_u = (*(_147332_m))._field_Dest.unsafe_cast_ptr<_1bc2e2169_UnaryExprModel>();;
				if ((_1bc4b91ba_Ptr((*((*(_14858_u))._field_Expr))._field_Type.ptr()) != nullptr)) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" *__jule_push_dest = ", 21));
					_1bdc3a53e_possibleRefExpr(_self_, (*(*(_14858_u))._field_Expr.alloc)._field_Model);
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
					_14817_ptr=true;
					goto _match_end_1c70d1e2c;
				};
				goto _case_begin_1c70d1e93;
			}
		}
		else {
			_case_begin_1c70d1e93:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" &__jule_push_dest = ", 21));
				_1bdc3a53e_possibleRefExpr(_self_, (*_147332_m.alloc)._field_Dest);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("; ", 2));
			}
		}
		_match_end_1c70d1e2c:;
	};
	if (((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len() == 1LL)) {
		if (_14817_ptr) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->push(", 23));
		} else {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.push(", 22));
		};
		_1bdc3a53e_possibleRefExpr(_self_, (*((*(_147332_m))._field_Elems))._field_Elems[0LL]);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); }", 4));
		return;;
	};
	if (_14817_ptr) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest->alloc_for_append(", 35));
	} else {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest.alloc_for_append(", 34));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa((*(*(_147332_m))._field_Elems.alloc)._field_Elems.len()));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
	{
		auto expr = &((*(*(_147332_m))._field_Elems.alloc)._field_Elems);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c613ddd0:;
		if (it != expr_end) {
			jule::Any _151915_e = *it;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_push_dest", 16));
				if (_14817_ptr) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("->__push(", 9));
				} else {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".__push(", 8));
				};
				_1bdc3a53e_possibleRefExpr(_self_, _151915_e);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c613ddd0:;
			++it;
			goto _iter_begin_1c613ddd0;
		}
		_iter_end_1c613ddd0:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc42436_appendToSlice(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadc798_AppendToSliceExprModel> _153334_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr(_self_, (*(_153334_m))._field_Dest);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(").append(", 9));
	_1bdc3a53e_possibleRefExpr(_self_, (*_153334_m.alloc)._field_Slice);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(");", 2));
}



inline void _1bdc426de_appendCall(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> _154131_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::append(", 13));
	_1bdc3a53e_possibleRefExpr(_self_, (*(_154131_m))._field_Dest);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(",", 1));
	_1bdc3a53e_possibleRefExpr(_self_, (*_154131_m.alloc)._field_Elements);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc42997_sizeof(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ea12d_SizeofExprModel> _154927_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("sizeof(", 7));
	_1bdc3a53e_possibleRefExpr(_self_, (*(_154927_m))._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc42c50_alignof(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ea7d2_AlignofExprModel> _155528_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("alignof(", 8));
	_1bdc3a53e_possibleRefExpr(_self_, (*(_155528_m))._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
}



inline void _1bdc43008_runeLit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ea9be_RuneExprModel> _156124_m) {
	if (((*(_156124_m))._field_Code <= 127LL)) {
		({
			auto except = _1a9567ca4_WriteByte(&(*((*(_self_))._field_oc))._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1563:4"));
		});
		jule::Str _15648_b = _1bdc462b4_sbtoa(static_cast<jule::U8>((*_156124_m.alloc)._field_Code));;
		if (_15648_b.equal("'", 1)) {
			({
				auto except = _1a9567ca4_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\\');
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1566:5"));
			});
		};
		({
			auto except = _1a95679eb_WriteStr(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15648_b);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1568:4"));
			(except.result);
		});
		({
			auto except = _1a9567ca4_WriteByte(&(*(*(_self_))._field_oc.alloc)._field_Buf, '\'');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1569:4"));
		});
		return;;
	};
	_1bdc47062_itoa(&((*((*(_self_))._field_oc))._field_Buf), static_cast<jule::I64>((*(_156124_m))._field_Code));
}



inline void _1bdc432b1_structureStatic(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2e6ba7_StructStaticIdentExprModel> _157536_m) {
	static__1bdc4c771_funcIns(&((*((*(_self_))._field_oc))._field_Buf), &((*(_157536_m))._field_Method));
}



inline void _1bdc43569_backendEmit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2ead43_BackendEmitExprModel> _157932_m) {
	if (((*(_157932_m))._field_Exprs.len() == 0LL)) {
		_1bdeeb39e_write((*(_self_))._field_oc, (*_157932_m.alloc)._field_Code);
		return;;
	};
	jule::I32 _15843_n = _1a9568810_Len(&(*((*(_self_))._field_oc))._field_Buf);;
	jule::Slice<jule::Any> _15857_args = ({ auto __jule_collection = jule::Slice<jule::Any>::alloc((*(_157932_m))._field_Exprs.len(), (*(_157932_m))._field_Exprs.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });;
	{
		auto expr = &((*_157932_m.alloc)._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d4021d:;
		if (it != expr_end) {
			jule::I32 _15868_i = it - expr->begin();
			jule::Any _158615_expr = *it;
			{
				_1bdc3a53e_possibleRefExpr(_self_, _158615_expr);
				jule::Slice<jule::U8> _15888_buf = _1a9568d2c_Buf(&(*(*(_self_))._field_oc.alloc)._field_Buf);;
				_15857_args[_15868_i]=jule::Any(__jule_bytesToStr(_15888_buf.slice(_15843_n)), &__jule_any_type5);
				{
					_1a95690d5_SetBuf(&(*(*(_self_))._field_oc.alloc)._field_Buf, _15888_buf.slice(0LL, _15843_n));
				};
			}
			_iter_next_1c6d4021d:;
			++it;
			_15868_i++;
			goto _iter_begin_1c6d4021d;
		}
		_iter_end_1c6d4021d:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, _1bc537ea3_Format((*_157932_m.alloc)._field_Code, _15857_args));
}



inline void _1bdc43822_free(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2eb140_FreeExprModel> _159525_m) {
	_1bdc3a53e_possibleRefExpr(_self_, (*(_159525_m))._field_Expr);
	if (_1abb4577a_RC) {
		_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".dealloc()", 10));
		return;;
	};
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".__free()", 9));
}



inline void _1bdc43aca_strComp(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadb2d0_StrCompExprModel> _160428_m) {
	if ((*(_160428_m))._field_NotEq) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(!", 2));
	};
	jule::Str _16083_s = _1bac271cc_ReadStr((*(_160428_m))._field_Right.ptr());;
	_1bdc3a53e_possibleRefExpr(_self_, (*_160428_m.alloc)._field_Left);
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".equal(", 7));
	_1bdc468d0_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), _16083_s);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_16083_s.len()));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	if ((*_160428_m.alloc)._field_NotEq) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(")", 1));
	};
}



inline void _1bdc43d83_emptyCompare(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadaa2c_EmptyCompareExprModel> _162033_m) {
	if ((*(_162033_m))._field_Neg) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("!", 1));
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
	_1bdc3a53e_possibleRefExpr(_self_, (*(_162033_m))._field_Expr);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(").empty()", 9));
}



inline void _1bdc4413b_unsafeDeref(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadce6e_UnsafeDerefExprModel> _162932_m) {
	{
		
		if ((_1bc4b8e34_Sptr((*((*((*(_162932_m))._field_Base))._field_Expr))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c6bbc012:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(*", 2));
				_1bdc3a53e_possibleRefExpr(_self_, (*(*((*(_162932_m))._field_Base))._field_Expr.alloc)._field_Model);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".alloc)", 7));
			}
		}
		else {
			_case_begin_1c6bbbb49:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1636:4"));;
			}
		}
		_match_end_1c6bbba39:;
	};
}



inline void _1bdc443e4_unsafeCasting(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdadd26b_UnsafeCastingExprModel> _164034_m) {
	{
		
		if (_1bcdc3a80_IsAny(&((*((*(_164034_m))._field_Base))._field_ExprType))) {
			_case_begin_1c6bbebe6:;
			{
				_1bdc3a53e_possibleRefExpr(_self_, (*((*(*(_164034_m))._field_Base.alloc)._field_Expr))._field_Model);
				if ((_1bc4b8e34_Sptr((*(*(_164034_m))._field_Base.alloc)._field_Type.ptr()) != nullptr)) {
					_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast_ptr<", 17));
					_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_1bc4b8e34_Sptr((*((*(_164034_m))._field_Base))._field_Type)))._field_Elem);
				} else {
					_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(".unsafe_cast<", 13));
					_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(*(_164034_m))._field_Base.alloc)._field_Type);
				};
				_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit(">()", 3));
			}
		}
		else {
			_case_begin_1c6bbe82d:;
			{
				__jule_panic_s(jule::Str::lit("cxx: implementation mistake, this panic call should be unreachable", 66) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1653:4"));;
			}
		}
		_match_end_1c6bbe740:;
	};
}



inline void _1bdc4469c_strConcat(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bdada235_StrConcatExprModel> _165730_m) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ jule::Int size = 0; ", 23));
	{
		auto expr = &((*(_165730_m))._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c61500de:;
		if (it != expr_end) {
			jule::I32 _16597_i = it - expr->begin();
			jule::Any _165910_p = *it;
			{
				jule::Str _16604_ident = (jule::Str::lit("part", 4) + _1ac596ac1_Itoa(_16597_i));;
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str ", 10));
				_1bdeeb39e_write((*(_self_))._field_oc, _16604_ident);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = std::move(", 13));
				_1bdc3a53e_possibleRefExpr(_self_, _165910_p);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); size += ", 11));
				_1bdeeb39e_write((*(_self_))._field_oc, _16604_ident);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".len(); ", 8));
			}
			_iter_next_1c61500de:;
			++it;
			_16597_i++;
			goto _iter_begin_1c61500de;
		}
		_iter_end_1c61500de:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Slice<jule::U8> buf; buf.alloc_new(0, size); ", 51));
	{
		auto expr = &((*_165730_m.alloc)._field_Parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c627b4d4:;
		if (it != expr_end) {
			jule::I32 _16707_i = it - expr->begin();
			{
				jule::Str _16714_ident = (jule::Str::lit("part", 4) + _1ac596ac1_Itoa(_16707_i));;
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("buf.append(", 11));
				_1bdeeb39e_write((*(_self_))._field_oc, _16714_ident);
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("); ", 3));
			}
			_iter_next_1c627b4d4:;
			++it;
			_16707_i++;
			goto _iter_begin_1c627b4d4;
		}
		_iter_end_1c627b4d4:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); })", 128));
}



inline void _1bdc44955_model(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Any _167926_m) {
	{
		auto &_match_expr{ _167926_m };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c627ca35:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, _167926_m.cast<jule::Str>(&__jule_any_type5));
			}
		}
		else if (_match_expr.type == &__jule_any_type138) {
			_case_begin_1c627ea9d:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, (*(_167926_m.unsafe_cast_ptr<jule::Str>())));
			}
		}
		else if (_match_expr.type == &__jule_any_type87) {
			_case_begin_1c627eb14:;
			{
				_1be010cdc_kind((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _167926_m.cast_ptr<_1bc4b64e7_Type>(&__jule_any_type87));
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c627eb7a:;
			{
				_1bdc37690_constant(_self_, _167926_m.cast_ptr<_1bac25065_Const>(&__jule_any_type15));
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c627ebe1:;
			{
				_1bdc396b4_var(_self_, _167926_m.cast_ptr<_1bc42dc12_Var>(&__jule_any_type7));
			}
		}
		else if (_match_expr.type == &__jule_any_type64) {
			_case_begin_1c627ec57:;
			{
				_1bdc3996c_structureIns(_self_, _167926_m.cast_ptr<_1bc2810c5_StructIns>(&__jule_any_type64));
			}
		}
		else if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c627ecbd:;
			{
				_1bdc3e5ed_funcInsCommon(_self_, _167926_m.cast_ptr<_1bc302113_FnIns>(&__jule_any_type65));
			}
		}
		else if (_match_expr.type == &__jule_any_type131) {
			_case_begin_1c628094a:;
			{
				_1bdc3897c_unsafeBinary(_self_, (*(_167926_m.unsafe_cast_ptr<_1bdadbbe8_UnsafeBinaryExprModel>()))._field_Node);
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c62809b1:;
			{
				_1bdc3940b_binary(_self_, _167926_m.cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114));
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6280a27:;
			{
				_1bdc39c25_unary(_self_, _167926_m.cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113));
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c6280a8d:;
			{
				_1bdc39ecd_structureLit(_self_, _167926_m.cast_ptr<_1bc2e2a3d_StructLitExprModel>(&__jule_any_type98));
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c6280b04:;
			{
				_1bdc3a286_allocStructure(_self_, _167926_m.cast_ptr<_1bc2e2d3a_AllocStructLitExprModel>(&__jule_any_type115));
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c6280b6a:;
			{
				_1bdc3ac15_casting(_self_, _167926_m.cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96));
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c6280bd1:;
			{
				_1bdc3c8e8_funcCall(_self_, _167926_m.cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31), false);
			}
		}
		else if (_match_expr.type == &__jule_any_type80) {
			_case_begin_1c6280c47:;
			{
				_1bdc3cba1_slice(_self_, _167926_m.cast_ptr<_1bc2e4149_SliceExprModel>(&__jule_any_type80));
			}
		}
		else if (_match_expr.type == &__jule_any_type88) {
			_case_begin_1c6280cbe:;
			{
				_1bdc3e345_array(_self_, _167926_m.cast_ptr<_1bc2e7081_ArrayExprModel>(&__jule_any_type88));
			}
		}
		else if (_match_expr.type == &__jule_any_type137) {
			_case_begin_1c6280d46:;
			{
				_1bdc3d212_unsafeIndexing(_self_, _167926_m.cast_ptr<_1bdadbee5_UnsafeIndexingExprModel>(&__jule_any_type137));
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c6280dbd:;
			{
				_1bdc3ce59_indexing(_self_, _167926_m.cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43));
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c6280e45:;
			{
				_1bdc3d4ba_anonFunc(_self_, _167926_m.cast_ptr<_1bc2e4aa6_AnonFnExprModel>(&__jule_any_type103));
			}
		}
		else if (_match_expr.type == &__jule_any_type102) {
			_case_begin_1c6280ebc:;
			{
				_1bdc3d773_mapExpr(_self_, _167926_m.cast_ptr<_1bc2e5359_MapExprModel>(&__jule_any_type102));
			}
		}
		else if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c6281044:;
			{
				_1bdc3da2b_slicing(_self_, _167926_m.cast_ptr<_1bc2e58dc_SlicingExprModel>(&__jule_any_type95));
			}
		}
		else if (_match_expr.type == &__jule_any_type100) {
			_case_begin_1c62810bb:;
			{
				_1bdc3dcd4_traitSub(_self_, _167926_m.cast_ptr<_1bc2e5e70_TraitSubIdentExprModel>(&__jule_any_type100));
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c6281143:;
			{
				_1bdc3e08c_structureSub(_self_, _167926_m.cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101));
			}
		}
		else if (_match_expr.type == &__jule_any_type84) {
			_case_begin_1c62811ba:;
			{
				_1bdc3eb5e_tuple(_self_, _167926_m.cast_ptr<_1bc2e737d_TupleExprModel>(&__jule_any_type84));
			}
		}
		else if (_match_expr.type == &__jule_any_type25) {
			_case_begin_1c6281242:;
			{
				_1bdc401c0_printCall(_self_, _167926_m.cast_ptr<_1bc2e767a_BuiltinPrintCallExprModel>(&__jule_any_type25));
			}
		}
		else if (_match_expr.type == &__jule_any_type26) {
			_case_begin_1c62812b9:;
			{
				_1bdc40478_printlnCall(_self_, _167926_m.cast_ptr<_1bc2e7977_BuiltinPrintlnCallExprModel>(&__jule_any_type26));
			}
		}
		else if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c6281341:;
			{
				_1bdc3ee17_newCall(_self_, _167926_m.cast_ptr<_1bc2e7d51_BuiltinNewCallExprModel>(&__jule_any_type116));
			}
		}
		else if (_match_expr.type == &__jule_any_type27) {
			_case_begin_1c62813b8:;
			{
				_1bdc40731_panicCall(_self_, _167926_m.cast_ptr<_1bc2e822a_BuiltinPanicCallExprModel>(&__jule_any_type27));
			}
		}
		else if (_match_expr.type == &__jule_any_type21) {
			_case_begin_1c6281440:;
			{
				_1bdc409d9_errorCall(_self_, _167926_m.cast_ptr<_1bc2e9d31_BuiltinErrorCallExprModel>(&__jule_any_type21));
			}
		}
		else if (_match_expr.type == &__jule_any_type117) {
			_case_begin_1c62814b7:;
			{
				_1bdc41dc5_makeCall(_self_, _167926_m.cast_ptr<_1bc2e86d1_BuiltinMakeCallExprModel>(&__jule_any_type117));
			}
		}
		else if (_match_expr.type == &__jule_any_type24) {
			_case_begin_1c628153e:;
			{
				_1bdc426de_appendCall(_self_, _167926_m.cast_ptr<_1bc2e8aaa_BuiltinAppendCallExprModel>(&__jule_any_type24));
			}
		}
		else if (_match_expr.type == &__jule_any_type28) {
			_case_begin_1c62815b6:;
			{
				_1bdc40c92_copyCall(_self_, _167926_m.cast_ptr<_1bc2e9957_BuiltinCopyCallExprModel>(&__jule_any_type28));
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c628163d:;
			{
				_1bdc4104a_lenCall(_self_, _167926_m.cast_ptr<_1bc2e8da7_BuiltinLenCallExprModel>(&__jule_any_type118));
			}
		}
		else if (_match_expr.type == &__jule_any_type119) {
			_case_begin_1c62816b5:;
			{
				_1bdc41303_capCall(_self_, _167926_m.cast_ptr<_1bc2e91a4_BuiltinCapCallExprModel>(&__jule_any_type119));
			}
		}
		else if (_match_expr.type == &__jule_any_type29) {
			_case_begin_1c628173c:;
			{
				_1bdc415ab_deleteCall(_self_, _167926_m.cast_ptr<_1bc2e957d_BuiltinDeleteCallExprModel>(&__jule_any_type29));
			}
		}
		else if (_match_expr.type == &__jule_any_type120) {
			_case_begin_1c62817b4:;
			{
				_1bdc42997_sizeof(_self_, _167926_m.cast_ptr<_1bc2ea12d_SizeofExprModel>(&__jule_any_type120));
			}
		}
		else if (_match_expr.type == &__jule_any_type121) {
			_case_begin_1c628183b:;
			{
				_1bdc42c50_alignof(_self_, _167926_m.cast_ptr<_1bc2ea7d2_AlignofExprModel>(&__jule_any_type121));
			}
		}
		else if (_match_expr.type == &__jule_any_type86) {
			_case_begin_1c62818b3:;
			{
				_1bdc43008_runeLit(_self_, _167926_m.cast_ptr<_1bc2ea9be_RuneExprModel>(&__jule_any_type86));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c628193a:;
			{
				_1bdc432b1_structureStatic(_self_, _167926_m.cast_ptr<_1bc2e6ba7_StructStaticIdentExprModel>(&__jule_any_type99));
			}
		}
		else if (_match_expr.type == &__jule_any_type23) {
			_case_begin_1c62819b2:;
			{
				_1bdc43569_backendEmit(_self_, _167926_m.cast_ptr<_1bc2ead43_BackendEmitExprModel>(&__jule_any_type23));
			}
		}
		else if (_match_expr.type == &__jule_any_type30) {
			_case_begin_1c6281a39:;
			{
				_1bdc43822_free(_self_, _167926_m.cast_ptr<_1bc2eb140_FreeExprModel>(&__jule_any_type30));
			}
		}
		else if (_match_expr.type == &__jule_any_type129) {
			_case_begin_1c6281ab1:;
			{
				_1bdc43aca_strComp(_self_, _167926_m.cast_ptr<_1bdadb2d0_StrCompExprModel>(&__jule_any_type129));
			}
		}
		else if (_match_expr.type == &__jule_any_type133) {
			_case_begin_1c6281b38:;
			{
				_1bdc396b4_var(_self_, (*(_167926_m.unsafe_cast_ptr<_1bdadad29_RefExprModel>()))._field_Var);
			}
		}
		else if (_match_expr.type == &__jule_any_type128) {
			_case_begin_1c6281bb0:;
			{
				_1bdc43d83_emptyCompare(_self_, _167926_m.cast_ptr<_1bdadaa2c_EmptyCompareExprModel>(&__jule_any_type128));
			}
		}
		else if (_match_expr.type == &__jule_any_type132) {
			_case_begin_1c6281c37:;
			{
				_1bdc4413b_unsafeDeref(_self_, _167926_m.cast_ptr<_1bdadce6e_UnsafeDerefExprModel>(&__jule_any_type132));
			}
		}
		else if (_match_expr.type == &__jule_any_type135) {
			_case_begin_1c6281cae:;
			{
				_1bdc443e4_unsafeCasting(_self_, _167926_m.cast_ptr<_1bdadd26b_UnsafeCastingExprModel>(&__jule_any_type135));
			}
		}
		else if (_match_expr.type == &__jule_any_type136) {
			_case_begin_1c6281d36:;
			{
				_1bdc3c8e8_funcCall(_self_, (*(_167926_m.unsafe_cast_ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel>()))._field_Base, true);
			}
		}
		else if (_match_expr.type == &__jule_any_type130) {
			_case_begin_1c6281dad:;
			{
				_1bdc4469c_strConcat(_self_, _167926_m.cast_ptr<_1bdada235_StrConcatExprModel>(&__jule_any_type130));
			}
		}
		else {
			_case_begin_1c627ea37:;
			{
				_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("<unimplemented_expression_model>", 32));
			}
		}
		_match_end_1c627e9c1:;
	};
}



inline jule::Bool _1bdc44c96_handleFieldByDefault(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc280525_FieldIns>* _178342_f) {
	jule::Bool __jule_func_result = false;
	if (((*((*(_178342_f))))._field_Default != nullptr)) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
		static__1bdc4d70b_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178342_f))))._field_Decl));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
		_1bdc3a53e_possibleRefExpr(_self_, (*(*((*(_178342_f))))._field_Default.alloc)._field_Model);
		__jule_func_result = true;
		return __jule_func_result;;
	};
	if ((!(_1be017b90_ableToInit(&((*((*(_178342_f))))._field_Type))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".", 1));
	static__1bdc4d70b_field(&((*(*(_self_))._field_oc.alloc)._field_Buf), &((*((*(_178342_f))))._field_Decl));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
	_1bdc45b21_initExpr(_self_, (*((*(_178342_f))))._field_Type);
	__jule_func_result = true;
	return __jule_func_result;;
}



inline void _1bdc4504e_initStructLit(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _180435_s) {
	if ((*((*((*(_180435_s))))._field_Decl))._field_Binded) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(", 1));
		_1bdc3996c_structureIns(_self_, (*(_180435_s)));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("){}", 3));
		return;;
	};
	_1bdc3996c_structureIns(_self_, (*(_180435_s)));
	_1bdeeb39e_write((*_self_.alloc)._field_oc, jule::Str::lit("{", 1));
	jule::Bool _18137_inited = false;;
	{
		auto expr = &((*((*(_180435_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d6ec86:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> _181415_f = *it;
			{
				if (_18137_inited) {
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
				};
				_18137_inited=_1bdc44c96_handleFieldByDefault(_self_, &(_181415_f));
			}
			_iter_next_1c6d6ec86:;
			++it;
			goto _iter_begin_1c6d6ec86;
		}
		_iter_end_1c6d6ec86:;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
}



inline void _1bdc45307_fillCollectionByDefault(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4b64e7_Type>* _182645_elem) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("for (; ", 7));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" < ", 3));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_end; ++", 8));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") *", 3));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdc45b21_initExpr(_self_, (*(_182645_elem)));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";", 1));
}



inline void _1bdc455b0_initCollection(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4b64e7_Type>* _184136_elem) {
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto ", 5));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("it", 2));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" = ", 3));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".begin(); const auto ", 21));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("_end = ", 7));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_collection", 17));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".end(); ", 8));
	_1bdc45307_fillCollectionByDefault(_self_, _184136_elem);
}



inline void _1bdc45868_initArray(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4c5e30_Arr>* _185531_arr) {
	if (((*((*(_185531_arr))))._field_N == 0LL)) {
		_1be00e406_array((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185531_arr)));
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
		return;;
	};
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("({ auto __jule_collection = ", 28));
	_1be00e406_array((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), (*(_185531_arr)));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(); ", 4));
	_1bdc455b0_initCollection(_self_, &((*((*(_185531_arr))))._field_Elem));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" __jule_collection; })", 22));
}



inline void _1bdc45b21_initExpr(jule::Ptr<_1bdc35dca_exprCoder> _self_, jule::Ptr<_1bc4b64e7_Type> _186929_t) {
	if (_1bc4b83ea_NilCompatible(_186929_t.ptr())) {
		if ((_1bc4ba73d_Map(_186929_t) != nullptr)) {
			_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186929_t);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{}", 2));
			return;;
		};
		if ((_1bc4b91ba_Ptr(_186929_t.ptr()) != nullptr)) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("nullptr", 7));
		} else {
			_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186929_t);
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(nullptr)", 9));
		};
		return;;
	};
	jule::Ptr<_1bc4c4703_Tuple> _18847_tup = _1bc4ba9c4_Tup(_186929_t.ptr());;
	if ((_18847_tup != nullptr)) {
		_1be0155b6_tup((*((*((*(_self_))._field_oc))._field_tc))._field_rc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _18847_tup);
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("{", 1));
		{
			auto expr = &((*(_18847_tup))._field_Types);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c6d8575d:;
			if (it != expr_end) {
				jule::I32 _18889_i = it - expr->begin();
				jule::Ptr<_1bc4b64e7_Type> _188816_tt = *it;
				{
					if ((!(_1be017e6a_shouldInitialized(&(_188816_tt))))) {
						goto _iter_next_1c6d8575d;
					};
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(".__jule_result_arg", 18));
					_1bdeeb39e_write((*(_self_))._field_oc, _1ac596ac1_Itoa(_18889_i));
					_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("=", 1));
					_1bdc45b21_initExpr(_self_, _188816_tt);
					if ((((*(_18847_tup))._field_Types.len() - _18889_i) > 1LL)) {
						_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(", ", 2));
					};
				}
				_iter_next_1c6d8575d:;
				++it;
				_18889_i++;
				goto _iter_begin_1c6d8575d;
			}
			_iter_end_1c6d8575d:;
		};
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}", 1));
		return;;
	};
	jule::Ptr<_1bc30be20_Enum> _19037_enm = _1bc4b9451_Enum(_186929_t);;
	if ((_19037_enm != nullptr)) {
		_1bdc44955_model(_self_, (*((*((*((*_19037_enm.alloc)._field_Items[0LL]))._field_Value))._field_Data))._field_Model);
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _19083_prim = _1bc4b8b9d_Prim(_186929_t);;
	if ((_19083_prim != nullptr)) {
		if (_1bc37ceb3_IsNum((*_19083_prim.alloc)._field_Kind)) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("0", 1));
		} else if (_1bc4c2844_IsBool(_19083_prim)) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("false", 5));
		} else if (_1bc4c2aca_IsStr(_19083_prim)) {
			_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::Str()", 11));
		};
		return;;
	};
	if ((_1bc4b996d_Arr(_186929_t) != nullptr)) {
		jule::Ptr<_1bc4c5e30_Arr> _19208_arr = _1bc4b996d_Arr(_186929_t);;
		_1bdc45868_initArray(_self_, &(_19208_arr));
		return;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _19247_s = _1bc4ba221_Struct(_186929_t);;
	if ((_19247_s != nullptr)) {
		_1bdc4504e_initStructLit(_self_, &(_19247_s));
		return;;
	};
	_1be010cdc_kind((*((*(_self_))._field_oc))._field_tc.ptr(), &((*(*(_self_))._field_oc.alloc)._field_Buf), _186929_t);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("()", 2));
}








inline jule::Bool _1bdc48717_TestCoder_eq(_1bdc48717_TestCoder *_self_, _1bdc48717_TestCoder _other_) {
	return 
		(_self_->_field_t == _other_._field_t) &&
		(_self_->_field_tmReset == _self_->_field_tmReset) &&
		(_self_->_field_tmFailed == _self_->_field_tmFailed) &&
		(_self_->_field_tmSkipped == _self_->_field_tmSkipped) &&
		(_self_->_field_oc == _self_->_field_oc);
}

inline jule::Ptr<_1bdc48717_TestCoder> static__1bdc48bbd_New(jule::Ptr<_1bdeeab84_ObjectCoder>* _2021_oc) {
	return jule::new_ptr<_1bdc48717_TestCoder>(_1bdc48717_TestCoder{._field_t=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_tmReset=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_tmFailed=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_tmSkipped=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_oc=(*(_2021_oc))});;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bdc48e54_findTestingPackage(jule::Ptr<_1bdc48717_TestCoder> _self_) {
	{
		auto expr = &((*((*((*(_self_))._field_oc))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d91208:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _2715_imp = *it;
			{
				if ((*(_2715_imp))._field_LinkPath.equal("std/testing", 11)) {
					return _2715_imp;;
				};
			}
			_iter_next_1c6d91208:;
			++it;
			goto _iter_begin_1c6d91208;
		}
		_iter_end_1c6d91208:;
	};
	return nullptr;;
}



inline void _1bdc4920c_appendTest(jule::Ptr<_1bdc48717_TestCoder> _self_, jule::Ptr<_1bc302113_FnIns> _3531_f) {
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdc49949_callTmReset(_self_);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(";\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str(\">>> TEST RUNNING: \" ", 50));
	_1bdc468d0_cstrLit(&((*(*(_self_))._field_oc.alloc)._field_Buf), (*((*(_3531_f))._field_Decl))._field_Ident);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" \"\\n\").fake_slice());\n", 22));
	_1bdeebc51_indent((*(_self_))._field_oc);
	static__1bdc4c771_funcIns(&((*(*(_self_))._field_oc.alloc)._field_Buf), &(_3531_f));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(_t);\n", 6));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("post_test();\n", 13));
}



inline void _1bdc494b5_appendPackageTests(jule::Ptr<_1bdc48717_TestCoder> _self_, jule::Ptr<_1bc3e0421_Package>* _5040_p) {
	{
		auto expr = &((*((*(_5040_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6d979d4:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _5115_file = *it;
			{
				{
					auto expr = &((*(_5115_file))._field_Funcs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6d984eb:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _5216_f = *it;
						{
							if (_1bcdc5aa4_HasDirective(&((*(_5216_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4)))) {
								_1bdc4920c_appendTest(_self_, (*_5216_f.alloc)._field_Instances[0LL]);
							};
						}
						_iter_next_1c6d984eb:;
						++it;
						goto _iter_begin_1c6d984eb;
					}
					_iter_end_1c6d984eb:;
				};
			}
			_iter_next_1c6d979d4:;
			++it;
			goto _iter_begin_1c6d979d4;
		}
		_iter_end_1c6d979d4:;
	};
}



inline jule::Bool _1bdc4974b_readyTestingPackage(jule::Ptr<_1bdc48717_TestCoder> _self_) {
	jule::Ptr<_1bc3dcb9e_ImportInfo> _617_p = _1bdc48e54_findTestingPackage(_self_);;
	if ((_617_p == nullptr)) {
		return false;;
	};
	;
	(*_self_.alloc)._field_t=(*(_1bc3dddae_FindStruct(_617_p.ptr(), jule::Str::lit("T", 1), false)))._field_Instances[0LL];
	;
	(*_self_.alloc)._field_tmReset=_1bc282170_FindMethod((*_self_.alloc)._field_t.ptr(), jule::Str::lit("reset", 5), false);
	(*_self_.alloc)._field_tmFailed=_1bc282170_FindMethod((*(_self_))._field_t, jule::Str::lit("Failed", 6), false);
	(*_self_.alloc)._field_tmSkipped=_1bc282170_FindMethod((*(_self_))._field_t, jule::Str::lit("Skipped", 7), false);
	return true;;
}



inline void _1bdc49949_callTmReset(jule::Ptr<_1bdc48717_TestCoder> _self_) {
	static__1bdc4c485_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmReset));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bdc49b47_callTmFailed(jule::Ptr<_1bdc48717_TestCoder> _self_) {
	static__1bdc4c485_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmFailed));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bdc49d45_callTmSkipped(jule::Ptr<_1bdc48717_TestCoder> _self_) {
	static__1bdc4c485_func(&((*((*(_self_))._field_oc))._field_Buf), &((*_self_.alloc)._field_tmSkipped));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("(_t)", 4));
}



inline void _1bdc4a043_Serialize(jule::Ptr<_1bdc48717_TestCoder> _self_) {
	_1be008147_serializeHead((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\nvoid test_point(void) {\n", 25));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	if ((!(_1bdc4974b_readyTestingPackage(_self_)))) {
		_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
		_1bdeeba53_doneIndent((*(_self_))._field_oc);
		_1be007432_end((*(_self_))._field_oc);
		return;;
	};
	_1a95669ea_Builder _1097_tb = static__1a9567369_New(40LL);;
	_1be00e093_structureIns((*(*(_self_))._field_oc.alloc)._field_tc.ptr(), &(_1097_tb), (*_self_.alloc)._field_t);
	_1be00bed6_asSptr((*((*(_self_))._field_oc))._field_tc, &((*(*(_self_))._field_oc.alloc)._field_Buf), _1a9568d2c_Buf(&_1097_tb));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(" _t = jule::new_ptr<", 20));
	_1bdeeb657_writeBytes((*(_self_))._field_oc, _1a9568d2c_Buf(&_1097_tb));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(">(); _t.ref = nullptr;\n", 23));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("jule::U64 total = 0, failed = 0, skipped = 0;\n", 46));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("auto post_test = [&](void) {\n", 29));
	_1bdeeb855_addIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("++total;\n", 9));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (", 4));
	_1bdc49b47_callTmFailed(_self_);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") { ++failed; __jule_writeStdout(jule::Str::lit(\"    [*] FAILED\\n\", 16).fake_slice()); }\n", 89));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("else if (", 9));
	_1bdc49d45_callTmSkipped(_self_);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit(") { ++skipped; __jule_writeStdout(jule::Str::lit(\"    [*] SKIPPED\\n\", 17).fake_slice()); }\n", 91));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("else { __jule_writeStdout(jule::Str::lit(\"    [*] PASSED\\n\", 16).fake_slice()); }\n", 82));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("};\n", 3));
	_1bdc494b5_appendPackageTests(_self_, &((*((*(*(_self_))._field_oc.alloc)._field_ir))._field_Main));
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("\n\n", 2));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\ntotal tests: \", 14).fake_slice());\n", 72));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total).fake_slice());\n", 57));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" skipped: \", 10).fake_slice());\n", 67));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(skipped).fake_slice());\n", 59));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" failed: \", 9).fake_slice());\n", 65));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(failed).fake_slice());\n", 58));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\" pass: \", 7).fake_slice());\n", 63));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(__jule_u64ToStr(total-failed-skipped).fake_slice());\n", 72));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("__jule_writeStdout(jule::Str::lit(\"\\n\", 1).fake_slice());\n", 58));
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("if (failed != 0) std::exit(1);\n", 31));
	_1bdeeba53_doneIndent((*(_self_))._field_oc);
	_1bdeebc51_indent((*(_self_))._field_oc);
	_1bdeeb39e_write((*(_self_))._field_oc, jule::Str::lit("}\n", 2));
	_1be007432_end((*(_self_))._field_oc);
}








inline jule::Bool _1bdc4b363_identCoder_eq(_1bdc4b363_identCoder *_self_, _1bdc4b363_identCoder _other_) { return true; }

inline void static__1bdc4b8a2_writeIdentTo(_1a95669ea_Builder* _2630_buf, jule::Str* _2654_ident) {
	{
		auto expr = _2654_ident;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6db9a39:;
		if (it != expr_end) {
			jule::U8 *_2710_b = it;
			{
				if (((*(_2710_b)) >= 128LLU)) {
					goto _julec_label_1c6db9dbe;
				};
			}
			_iter_next_1c6db9a39:;
			++it;
			goto _iter_begin_1c6db9a39;
		}
		_iter_end_1c6db9a39:;
	};
	({
		auto except = _1a95679eb_WriteStr(_2630_buf, (*(_2654_ident)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:34:3"));
		(except.result);
	});
	return;;
	_julec_label_1c6db9dbe:;
	{
		auto expr = _2654_ident;
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _3710_r;
		_iter_begin_1c6dbaa5c:;
		__jule_runeStep(it, end - it, &_3710_r, &len);
		if (it < end) {
			{
				if ((_3710_r < 128LL)) {
					({
						auto except = _1a9567ca4_WriteByte(_2630_buf, static_cast<jule::U8>(_3710_r));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:41:5"));
					});
					goto _iter_next_1c6dbaa5c;
				};
				({
					auto except = _1a95679eb_WriteStr(_2630_buf, _1ac596807_FmtInt(static_cast<jule::I64>(_3710_r), 15LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:45:4"));
					(except.result);
				});
			}
			_iter_next_1c6dbaa5c:;
			it += len;
			goto _iter_begin_1c6dbaa5c;
		}
	};
}



inline void static__1bdc4bc48_toOut(_1a95669ea_Builder* _5423_buf, jule::Str _5446_ident, jule::Uintptr _5458_addr) {
	({
		auto except = _1a9567ca4_WriteByte(_5423_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:55:3"));
	});
	if ((_5458_addr != 0LLU)) {
		({
			auto except = _1a95679eb_WriteStr(_5423_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_5458_addr), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:57:4"));
			(except.result);
		});
		({
			auto except = _1a9567ca4_WriteByte(_5423_buf, '_');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:58:4"));
		});
	};
	static__1bdc4b8a2_writeIdentTo(_5423_buf, &(_5446_ident));
}



inline void static__1bdc4c199_toLocal(_1a95669ea_Builder* _6925_buf, jule::I32 _6948_row, jule::I32 _6958_col, jule::Str* _6969_ident) {
	({
		auto except = _1a9567ca4_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:70:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_6925_buf, _1ac596ac1_Itoa(_6948_row));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:71:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_6925_buf, _1ac596ac1_Itoa(_6958_col));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:72:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_6925_buf, '_');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:73:3"));
	});
	static__1bdc4b8a2_writeIdentTo(_6925_buf, _6969_ident);
}



inline void static__1bdc4c485_func(_1a95669ea_Builder* _7722_buf, jule::Ptr<_1bc2ee055_Fn>* _7750_f) {
	{
		
		if ((*((*(_7750_f))))._field_Binded) {
			_case_begin_1c6dbecd6:;
			{
				({
					auto except = _1a95679eb_WriteStr(_7722_buf, (*((*(_7750_f))))._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:80:4"));
					(except.result);
				});
				return;;
			}
		}
		else if (_1bc2ee792_IsMethod((*(_7750_f)).ptr())) {
			_case_begin_1c6dbed80:;
			{
				if ((*((*(_7750_f))))._field_Statically) {
					({
						auto except = _1a95679eb_WriteStr(_7722_buf, jule::Str::lit("static_", 7));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:84:5"));
						(except.result);
					});
				};
			}
		}
		_match_end_1c6dbebb5:;
	};
	jule::Ptr<_1bc25bd2b_Directive> _873_export = _1bcdc56db_FindDirective(&((*((*(_7750_f))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
	if ((_873_export != nullptr)) {
		({
			auto except = _1a95679eb_WriteStr(_7722_buf, (*((*_873_export.alloc)._field_Args[0LL]))._field_Kind);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:89:4"));
			(except.result);
		});
		return;;
	};
	static__1bdc4bc48_toOut(_7722_buf, (*((*(_7750_f))))._field_Ident, static_cast<jule::Uintptr>((*(_7750_f))));
}



inline void static__1bdc4c771_funcIns(_1a95669ea_Builder* _9525_buf, jule::Ptr<_1bc302113_FnIns>* _9553_f) {
	if (_1bc3035cb_IsBuiltin((*(_9553_f)).ptr())) {
		({
			auto except = _1a95679eb_WriteStr(_9525_buf, jule::Str::lit("jule::", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:99:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:100:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*((*(_9553_f))))._field_Decl))._field_Binded || ((*((*(_9553_f))))._field_Generics.len() == 0LL))) {
		static__1bdc4c485_func(_9525_buf, &((*((*(_9553_f))))._field_Decl));
		return;;
	};
	static__1bdc4bc48_toOut(_9525_buf, (*((*((*(_9553_f))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_9553_f))));
}



inline void static__1bdc4ca5c_traitDecl(_1a95669ea_Builder* _11027_buf, jule::Ptr<_1bc309769_Trait> _11050_t) {
	static__1bdc4bc48_toOut(_11027_buf, (*(_11050_t))._field_Ident, static_cast<jule::Uintptr>(_11050_t));
}



inline void static__1bdc4cd48_param(_1a95669ea_Builder* _11423_buf, jule::Ptr<_1bc2ec581_Param>* _11447_p) {
	if ((_1bc249bb5_IsAnonIdent((*((*(_11447_p))))._field_Ident) || _1bc2498eb_IsIgnoreIdent((*((*(_11447_p))))._field_Ident))) {
		return;;
	};
	if (_1bc2ecbd0_IsSelf((*(_11447_p)).ptr())) {
		({
			auto except = _1a95679eb_WriteStr(_11423_buf, jule::Str::lit("_self_", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:119:4"));
			(except.result);
		});
		return;;
	};
	if (((*((*(_11447_p))))._field_Token == nullptr)) {
		static__1bdc4c199_toLocal(_11423_buf, 0LL, 0LL, &((*((*(_11447_p))))._field_Ident));
		return;;
	};
	static__1bdc4c199_toLocal(_11423_buf, (*((*((*(_11447_p))))._field_Token))._field_Row, (*(*((*(_11447_p))))._field_Token.alloc)._field_Column, &((*((*(_11447_p))))._field_Ident));
}



inline void static__1bdc4d134_structure(_1a95669ea_Builder* _12927_buf, jule::Ptr<_1bc27d26a_Struct>* _12951_s) {
	if ((*((*(_12951_s))))._field_Binded) {
		if ((!(_1bcdc5aa4_HasDirective(&((*((*(_12951_s))))._field_Directives), static_cast<jule::Str>(jule::Str::lit("typedef", 7)))))) {
			({
				auto except = _1a95679eb_WriteStr(_12927_buf, jule::Str::lit("struct ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:132:5"));
				(except.result);
			});
		};
		({
			auto except = _1a95679eb_WriteStr(_12927_buf, (*((*(_12951_s))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:134:4"));
			(except.result);
		});
		return;;
	};
	static__1bdc4bc48_toOut(_12927_buf, (*((*(_12951_s))))._field_Ident, static_cast<jule::Uintptr>((*(_12951_s))));
}



inline void static__1bdc4d420_structureIns(_1a95669ea_Builder* _14030_buf, jule::Ptr<_1bc2810c5_StructIns>* _14054_s) {
	if (((*((*((*(_14054_s))))._field_Decl))._field_Binded || ((*((*(_14054_s))))._field_Generics.len() == 0LL))) {
		static__1bdc4d134_structure(_14030_buf, &((*((*(_14054_s))))._field_Decl));
		return;;
	};
	static__1bdc4bc48_toOut(_14030_buf, (*((*((*(_14054_s))))._field_Decl))._field_Ident, static_cast<jule::Uintptr>((*(_14054_s))));
}



inline void static__1bdc4d70b_field(_1a95669ea_Builder* _14823_buf, jule::Ptr<_1bc27a377_Field>* _14847_f) {
	if ((*((*((*(_14847_f))))._field_Owner))._field_Binded) {
		({
			auto except = _1a95679eb_WriteStr(_14823_buf, (*((*(_14847_f))))._field_Ident);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:150:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a95679eb_WriteStr(_14823_buf, jule::Str::lit("_field_", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:153:3"));
		(except.result);
	});
	static__1bdc4b8a2_writeIdentTo(_14823_buf, &((*((*(_14847_f))))._field_Ident));
}



inline void static__1bdc4d9e7_var(_1a95669ea_Builder* _15821_buf, jule::Ptr<_1bc42dc12_Var> _15848_v) {
	{
		
		if ((*(_15848_v))._field_Binded) {
			_case_begin_1c1270687:;
			{
				({
					auto except = _1a95679eb_WriteStr(_15821_buf, (*_15848_v.alloc)._field_Ident);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:161:4"));
					(except.result);
				});
			}
		}
		else if (((*(_15848_v))._field_Ident == static_cast<jule::Str>(jule::Str::lit("error", 5)))) {
			_case_begin_1c12703e0:;
			{
				({
					auto except = _1a95679eb_WriteStr(_15821_buf, jule::Str::lit("except.error", 12));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:163:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Ident == static_cast<jule::Str>(jule::Str::lit("self", 4)))) {
			_case_begin_1c1270a3e:;
			{
				({
					auto except = _1a95679eb_WriteStr(_15821_buf, jule::Str::lit("_self_", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:165:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder == -1LL)) {
			_case_begin_1c1270aa5:;
			{
				({
					auto except = _1a95679eb_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result", 18));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:169:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_RetOrder >= 0LL)) {
			_case_begin_1c1270b1b:;
			{
				({
					auto except = _1a95679eb_WriteStr(_15821_buf, jule::Str::lit("__jule_func_result.__jule_result_arg", 36));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:171:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(_15821_buf, _1ac596ac1_Itoa((*_15848_v.alloc)._field_RetOrder));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:172:4"));
					(except.result);
				});
			}
		}
		else if (((*_15848_v.alloc)._field_Scope != nullptr)) {
			_case_begin_1c1270b82:;
			{
				static__1bdc4c199_toLocal(_15821_buf, (*((*_15848_v.alloc)._field_Token))._field_Row, (*(*(_15848_v))._field_Token.alloc)._field_Column, &((*_15848_v.alloc)._field_Ident));
			}
		}
		else {
			_case_begin_1c628529b:;
			{
				jule::Ptr<_1bc25bd2b_Directive> _1764_export = _1bcdc56db_FindDirective(&((*_15848_v.alloc)._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)));;
				if ((_1764_export != nullptr)) {
					({
						auto except = _1a95679eb_WriteStr(_15821_buf, (*((*_1764_export.alloc)._field_Args[0LL]))._field_Kind);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:178:5"));
						(except.result);
					});
					return;;
				};
				static__1bdc4bc48_toOut(_15821_buf, (*_15848_v.alloc)._field_Ident, static_cast<jule::Uintptr>(_15848_v));
			}
		}
		_match_end_1c628518b:;
	};
}



inline void static__1bdc4dcd3_iterBegin(_1a95669ea_Builder* _18527_buf, jule::Uintptr _18550_it) {
	({
		auto except = _1a95679eb_WriteStr(_18527_buf, jule::Str::lit("_iter_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:186:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_18527_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_18550_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:187:3"));
		(except.result);
	});
}



inline void static__1bdc4e0be_iterEnd(_1a95669ea_Builder* _19025_buf, jule::Uintptr _19048_it) {
	({
		auto except = _1a95679eb_WriteStr(_19025_buf, jule::Str::lit("_iter_end_", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:191:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_19025_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_19048_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:192:3"));
		(except.result);
	});
}



inline void static__1bdc4e3aa_iterNext(_1a95669ea_Builder* _19526_buf, jule::Uintptr _19549_it) {
	({
		auto except = _1a95679eb_WriteStr(_19526_buf, jule::Str::lit("_iter_next_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:196:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_19526_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_19549_it), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:197:3"));
		(except.result);
	});
}



inline void static__1bdc4e696_label(_1a95669ea_Builder* _20023_buf, jule::Uintptr _20046_u) {
	({
		auto except = _1a95679eb_WriteStr(_20023_buf, jule::Str::lit("_julec_label_", 13));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:201:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_20023_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_20046_u), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:202:3"));
		(except.result);
	});
}



inline void static__1bdc4e982_matchEnd(_1a95669ea_Builder* _20526_buf, jule::Uintptr _20549_m) {
	({
		auto except = _1a95679eb_WriteStr(_20526_buf, jule::Str::lit("_match_end_", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:206:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_20526_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_20549_m), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:207:3"));
		(except.result);
	});
}



inline void static__1bdc4ec6d_caseBegin(_1a95669ea_Builder* _21027_buf, jule::Uintptr _21050_c) {
	({
		auto except = _1a95679eb_WriteStr(_21027_buf, jule::Str::lit("_case_begin_", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:211:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_21027_buf, _1ac59643e_FmtUint(static_cast<jule::U64>(_21050_c), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/ident.jule:212:3"));
		(except.result);
	});
}








inline jule::Bool _1bdee83ce_SerializationInfo_eq(_1bdee83ce_SerializationInfo *_self_, _1bdee83ce_SerializationInfo _other_) {
	return 
		(_self_->_field_Compiler == _other_._field_Compiler) &&
		(_self_->_field_CompilerCommand == _self_->_field_CompilerCommand);
}






inline jule::Bool _1bdee87ec_traitCast_eq(_1bdee87ec_traitCast *_self_, _1bdee87ec_traitCast _other_) {
	return 
		(_self_->_field_t1 == _other_._field_t1) &&
		(_self_->_field_t2 == _self_->_field_t2);
}






inline jule::Bool _1bdee8bc6_anonHash_eq(_1bdee8bc6_anonHash *_self_, _1bdee8bc6_anonHash _other_) {
	return 
		(_self_->_field_expr == _other_._field_expr) &&
		(_self_->_field_ident == _self_->_field_ident);
}










inline jule::Bool _1bdee93e1_metadata_eq(_1bdee93e1_metadata *_self_, _1bdee93e1_metadata _other_) {
	return 
		(_self_->_field_concurrent == _other_._field_concurrent);
}





inline jule::Ptr<_1bdeeab84_ObjectCoder> static__1bdeeb0e6_New(jule::Ptr<_1bcdbd492_IR>* _12021_ir, _1bdee83ce_SerializationInfo _12035_info) {
	jule::Ptr<_1bdeeab84_ObjectCoder> _1217_oc = jule::new_ptr<_1bdeeab84_ObjectCoder>(_1bdeeab84_ObjectCoder{._field_Buf=_1a95669ea_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_resultDecls=_1a95669ea_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anyObj=_1a95669ea_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_anonObj=_1a95669ea_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_deallocObj=_1a95669ea_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_coSpawnObj=_1a95669ea_Builder{._field_buf=jule::Slice<jule::U8>(nullptr)}, ._field_ir=(*(_12021_ir)), ._field_info=_12035_info, ._field_anons=jule::Slice<jule::Ptr<_1bdee8bc6_anonHash>>(nullptr), ._field_deallocated=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr), ._field_indentBuffer=jule::Slice<jule::U8>(nullptr), ._field_resultMap=static__1c6947ae5_make(), ._field_anyTypeMap=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr), ._field_traitCastMap=jule::Slice<_1bdee87ec_traitCast>(nullptr), ._field_coSpawnMap=jule::Slice<jule::Ptr<_1bc302113_FnIns>>(nullptr), ._field_traitMap=jule::Slice<jule::Ptr<_1bdee90e4_traitHash>>(nullptr), ._field_traitMetMap=static__1c6a863b5_make(), ._field_ec=jule::Ptr<_1bdc35dca_exprCoder>(nullptr), ._field_sc=jule::Ptr<_1bdc2983b_scopeCoder>(nullptr), ._field_tc=jule::Ptr<_1be00aad9_typeCoder>(nullptr), ._field_headPos=0, ._field_declPos=0, ._field_wrapPos=0, ._field_meta=_1bdee93e1_metadata{._field_concurrent=false}});;
	(*(_1217_oc))._field_ec=static__1bdc362c6_new(&(_1217_oc));
	(*(_1217_oc))._field_sc=static__1bdc2a034_new(&(_1217_oc));
	(*(_1217_oc))._field_tc=static__1be00b139_new(&(_1217_oc));
	return _1217_oc;;
}



inline void _1bdeeb39e_write(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Str _13322_s) {
	({
		auto except = _1a95679eb_WriteStr(&(*(_self_))._field_Buf, _13322_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:134:3"));
		(except.result);
	});
}



inline void _1bdeeb657_writeBytes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Slice<jule::U8> _13727_b) {
	({
		auto except = _1a95676aa_Write(&(*(_self_))._field_Buf, _13727_b);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:138:3"));
		(except.result);
	});
}



inline void _1bdeeb855_addIndent(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	(*(_self_))._field_indentBuffer=jule::append((*_self_.alloc)._field_indentBuffer,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = 9LLU; __jule_collection; }));
}



inline void _1bdeeba53_doneIndent(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	((*(_self_))._field_indentBuffer).mut_slice(0LL, ((*(_self_))._field_indentBuffer.len() - 1LL));;
}



inline void _1bdeebc51_indent(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	({
		auto except = _1a95676aa_Write(&(*(_self_))._field_Buf, (*_self_.alloc)._field_indentBuffer);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:153:3"));
		(except.result);
	});
}



inline jule::I32 _1bdeec092_findAnyType(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc4b64e7_Type>* _15633_t) {
	{
		auto expr = &((*(_self_))._field_anyTypeMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dde2bc:;
		if (it != expr_end) {
			jule::I32 _1578_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> _15715_at = *it;
			{
				if (_1bc4b6c34_Equal(_15715_at, (*(_15633_t)))) {
					return _1578_i;;
				};
			}
			_iter_next_1c6dde2bc:;
			++it;
			_1578_i++;
			goto _iter_begin_1c6dde2bc;
		}
		_iter_end_1c6dde2bc:;
	};
	return -1LL;;
}



inline jule::I32 _1bdeec3d3_pushCoSpawn(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns> _16532_f) {
	{
		auto expr = &((*(_self_))._field_coSpawnMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ddee05:;
		if (it != expr_end) {
			jule::I32 _1667_i = it - expr->begin();
			jule::Ptr<_1bc302113_FnIns> _16610_sf = *it;
			{
				if (((*(_16610_sf))._field_Params.len() == (*(_16532_f))._field_Params.len())) {
					{
						auto expr = &((*_16610_sf.alloc)._field_Params);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6de1940:;
						if (it != expr_end) {
							jule::I32 _1689_j = it - expr->begin();
							jule::Ptr<_1bc300ead_ParamIns> *_16812_sp = it;
							{
								if ((!(_1bc4b6c34_Equal((*((*(_16812_sp))))._field_Type, (*((*(_16610_sf))._field_Params[_1689_j]))._field_Type)))) {
									goto _iter_end_1c6de1940;
								};
							}
							_iter_next_1c6de1940:;
							++it;
							_1689_j++;
							goto _iter_begin_1c6de1940;
						}
						_iter_end_1c6de1940:;
					};
					return _1667_i;;
				};
			}
			_iter_next_1c6ddee05:;
			++it;
			_1667_i++;
			goto _iter_begin_1c6ddee05;
		}
		_iter_end_1c6ddee05:;
	};
	jule::I32 _1763_i = (*_self_.alloc)._field_coSpawnMap.len();;
	jule::Str _1773_is = _1ac596ac1_Itoa(_1763_i);;
	(*_self_.alloc)._field_coSpawnMap=jule::append((*_self_.alloc)._field_coSpawnMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc302113_FnIns>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _16532_f; __jule_collection; }));
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:179:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:180:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:181:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("{\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:182:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:185:3"));
	});
	_1be010979_func((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_coSpawnObj), _16532_f);
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:187:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:188:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:189:3"));
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:190:3"));
	});
	{
		auto expr = &((*(_16532_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6de6ba9:;
		if (it != expr_end) {
			jule::I32 _1938_j = it - expr->begin();
			jule::Ptr<_1bc300ead_ParamIns> _19315_p = *it;
			{
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:194:4"));
				});
				_1be010cdc_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_coSpawnObj), (*(_19315_p))._field_Type);
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:196:4"));
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:197:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1ac596ac1_Itoa(_1938_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:198:4"));
					(except.result);
				});
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:199:4"));
				});
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:200:4"));
				});
			}
			_iter_next_1c6de6ba9:;
			++it;
			_1938_j++;
			goto _iter_begin_1c6de6ba9;
		}
		_iter_end_1c6de6ba9:;
	};
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '}');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:202:3"));
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:203:3"));
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:204:3"));
	});
	{
		
		if ((_1abb3e873_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c6debcd0:;
			{
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("unsigned long ", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:208:4"));
					(except.result);
				});
			}
		}
		else if (_1a957a2e4_IsUnix(_1abb3e873_OS)) {
			_case_begin_1c6debdac:;
			{
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("void *", 6));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:210:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c6de3b40:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:212:4"));;
			}
		}
		_match_end_1c6deb719:;
	};
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_method", 21));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:214:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:215:3"));
		(except.result);
	});
	;
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(void *", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:217:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:218:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param) {\n", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:219:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:220:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:221:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:222:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" *", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:223:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:224:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(" = (", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:225:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_cospawn_argdata", 22));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:226:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1773_is);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:227:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("*)", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:228:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:229:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("_param;\n", 8));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:230:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:231:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:232:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:233:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoFunc", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:234:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("(", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:235:3"));
		(except.result);
	});
	{
		auto expr = &((*_16532_f.alloc)._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e04799:;
		if (it != expr_end) {
			jule::I32 _2387_j = it - expr->begin();
			{
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:239:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("->", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:240:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__juleCoParam", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:241:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, _1ac596ac1_Itoa(_2387_j));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:242:4"));
					(except.result);
				});
				if ((((*_16532_f.alloc)._field_Params.len() - _2387_j) > 1LL)) {
					({
						auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:244:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c6e04799:;
			++it;
			_2387_j++;
			goto _iter_begin_1c6e04799;
		}
		_iter_end_1c6e04799:;
	};
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(");\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:247:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:249:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("delete ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:250:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("__jule_argdata", 14));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:251:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit(";\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:252:3"));
		(except.result);
	});
	{
		
		if ((_1abb3e873_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
			_case_begin_1c6e08d64:;
			{
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:255:4"));
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return 0;\n", 10));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:256:4"));
					(except.result);
				});
			}
		}
		else if (_1a957a2e4_IsUnix(_1abb3e873_OS)) {
			_case_begin_1c6e08e41:;
			{
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_coSpawnObj, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:258:4"));
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("return NULL;\n", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:259:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c6dedc6b:;
			{
				__jule_panic_s(jule::Str::lit("cxx: pushCoSpawn: unimeplemented operating system for return type", 65) + jule::Str("\nlocation: julec/obj/cxx/object.jule:261:4"));;
			}
		}
		_match_end_1c6e0899b:;
	};
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_coSpawnObj, jule::Str::lit("}\n", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:263:3"));
		(except.result);
	});
	return _1763_i;;
}



inline jule::I32 _1bdeec724_pushDealloc(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc4b64e7_Type> _26832_t) {
	{
		auto expr = &((*(_self_))._field_deallocated);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e0b3c7:;
		if (it != expr_end) {
			jule::I32 _2697_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> _26910_dt = *it;
			{
				if (_1bc4b6c34_Equal(_26910_dt, _26832_t)) {
					return _2697_i;;
				};
			}
			_iter_next_1c6e0b3c7:;
			++it;
			_2697_i++;
			goto _iter_begin_1c6e0b3c7;
		}
		_iter_end_1c6e0b3c7:;
	};
	jule::I32 _2743_i = (*_self_.alloc)._field_deallocated.len();;
	(*_self_.alloc)._field_deallocated=jule::append((*_self_.alloc)._field_deallocated,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _26832_t; __jule_collection; }));
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("void __jule_type_deallocator", 28));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:276:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_deallocObj, _1ac596ac1_Itoa(_2743_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:277:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit("(jule::Ptr<jule::Uintptr> &alloc) noexcept { alloc.__as<", 56));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:278:3"));
		(except.result);
	});
	_1be010cdc_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_deallocObj), _26832_t);
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_deallocObj, jule::Str::lit(">().dealloc(); }\n", 17));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:280:3"));
		(except.result);
	});
	return _2743_i;;
}



inline jule::Str _1bdeeca65_pushAnonFn(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _28432_m) {
	jule::Str __jule_func_result;
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*((*(_28432_m))))._field_Func))._field_CalledCo);
	jule::Bool _2873_closure = _1bcdc3dc1_IsClosure(_28432_m);;
	if (_2873_closure) {
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("struct ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:290:4"));
			(except.result);
		});
		jule::I32 _2914_l = _1a9568810_Len(&(*_self_.alloc)._field_anonObj);;
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("__jule_anon_", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:292:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:293:4"));
			(except.result);
		});
		__jule_func_result=__jule_bytesToStr(_1a9568d2c_Buf(&(*_self_.alloc)._field_anonObj).slice(_2914_l));
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx{\n", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:295:4"));
			(except.result);
		});
		{
			auto expr = &((*((*(_28432_m))))._field_Captured);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c70d204d:;
			if (it != expr_end) {
				jule::Ptr<_1bc42dc12_Var> _29616_v = *it;
				{
					({
						auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_anonObj, 9LLU);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:297:5"));
					});
					_1be010cdc_kind((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_anonObj), (*((*(_29616_v))._field_TypeSym))._field_Type);
					({
						auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_anonObj, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:299:5"));
					});
					if ((*_29616_v.alloc)._field_Reference) {
						({
							auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_anonObj, '*');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:301:6"));
						});
					};
					static__1bdc4d9e7_var(&((*_self_.alloc)._field_anonObj), _29616_v);
					({
						auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit(";\n", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:304:5"));
						(except.result);
					});
				}
				_iter_next_1c70d204d:;
				++it;
				goto _iter_begin_1c70d204d;
			}
			_iter_end_1c70d204d:;
		};
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("};\n", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:306:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("static void ", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:309:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:310:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx_handler(jule::Ptr<jule::Uintptr> &ptr) { ptr.__as<", 55));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:311:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, __jule_func_result);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:312:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anonObj, jule::Str::lit("_ctx>().dealloc(); }\n", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:313:4"));
			(except.result);
		});
	} else {
		__jule_func_result=jule::Str::lit("__jule_anon", 11);
		__jule_func_result+=_1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*((*(_28432_m))))._field_Func)), 15LL);
	};
	(*_self_.alloc)._field_anons=jule::append((*_self_.alloc)._field_anons,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bdee8bc6_anonHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bdee8bc6_anonHash>(_1bdee8bc6_anonHash{._field_expr=(*(_28432_m)), ._field_ident=__jule_func_result}); __jule_collection; }));
	_1be00364d_anonFuncInsDecl(_self_, _28432_m, __jule_func_result);
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_anonObj, '\n');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:322:3"));
	});
	return __jule_func_result;;
}



inline jule::I32 _1bdeecda6_pushAnyType(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc4b64e7_Type> _32632_t) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=_1bdeec092_findAnyType(_self_, &(_32632_t));
	if ((__jule_func_result != -1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result=(*_self_.alloc)._field_anyTypeMap.len();
	(*_self_.alloc)._field_anyTypeMap=jule::append((*_self_.alloc)._field_anyTypeMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));
	jule::Str _3333_si = _1ac596ac1_Itoa(__jule_func_result);;
	if ((_1bc4b8e34_Sptr(_32632_t.ptr()) != nullptr)) {
		_1a95669ea_Builder _3358_elemKind = static__1a9567369_New(40LL);;
		_1be010cdc_kind((*_self_.alloc)._field_tc.ptr(), &(_3358_elemKind), (*(_1bc4b8e34_Sptr(_32632_t)))._field_Elem);
		jule::I32 _3394_di = _1bdeec724_pushDealloc(_self_, (*(_1bc4b8e34_Sptr(_32632_t)))._field_Elem);;
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:342:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:343:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:344:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:345:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _1ac596ac1_Itoa(_3394_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:346:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_ptrEqual, .to_str=__jule_ptrToStr};\n", 49));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:347:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:350:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:351:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_compare(const jule::Any &any, const ", 37));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:352:4"));
			(except.result);
		});
		_1be00bed6_asSptr((*(_self_))._field_tc, &((*_self_.alloc)._field_anyObj), _1a9568d2c_Buf(&_3358_elemKind));
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" &other) { return any.type == &__jule_any_type", 46));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:354:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:355:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" && __jule_ptrEqual(any.data.alloc, other.alloc); }\n", 52));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:356:4"));
			(except.result);
		});
	} else {
		_1a95669ea_Builder _3588_kindB = static__1a9567369_New(40LL);;
		_1be010cdc_kind((*_self_.alloc)._field_tc.ptr(), &(_3588_kindB), _32632_t);
		jule::Str _3604_kind = _1a956837b_Str(&_3588_kindB);;
		jule::I32 _3634_di = _1bdeec724_pushDealloc(_self_, _32632_t);;
		jule::Str _3688_lmodel = jule::Str::lit("*reinterpret_cast<", 18);;
		_3688_lmodel+=_3604_kind;
		_3688_lmodel+=jule::Str::lit("*>(", 3);
		jule::Str _3718_rmodel = _3688_lmodel;;
		_3718_rmodel+=jule::Str::lit("other)", 6);
		_3688_lmodel+=jule::Str::lit("alloc)", 6);
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Bool __jule_any_type", 26));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:375:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:376:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq(void *alloc, void *other) noexcept { ", 41));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:377:4"));
			(except.result);
		});
		if (_1bc4b7b47_Comparable(_32632_t.ptr())) {
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("return ", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:379:5"));
				(except.result);
			});
			_1bdc386c4__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_anyObj), &(_3688_lmodel), &(_3718_rmodel), &(_32632_t), &(_32632_t), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; }\n", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:381:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_panic((", 14));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:383:5"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::U8", 8));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:384:5"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*)\"runtime: comparing uncomparable type \" \"", 43));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:385:5"));
				(except.result);
			});
			jule::I32 _3869_n = _1a9568810_Len(&(*_self_.alloc)._field_anyObj);;
			_1bdc465a0_cstrBytes(&((*_self_.alloc)._field_anyObj), _1bc4b68e3_Str(_32632_t.ptr()));
			_3869_n=(_1a9568810_Len(&(*_self_.alloc)._field_anyObj) - _3869_n);
			_3869_n+=37LL;
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("\", ", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:390:5"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _1ac596ac1_Itoa(_3869_n));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:391:5"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("); return false; }\n", 19));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:392:5"));
				(except.result);
			});
		};
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("jule::Str __jule_any_type", 25));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:396:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:397:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str(void *alloc) noexcept { return ", 39));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:398:4"));
			(except.result);
		});
		jule::Ptr<_1bc302113_FnIns> _3998_f = _1bcdc7215_FindFnGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_ToStr), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _32632_t; __jule_collection; }));;
		static__1bdc4c771_funcIns(&((*_self_.alloc)._field_anyObj), &(_3998_f));
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(*reinterpret_cast<", 19));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:401:4"));
			(except.result);
		});
		if ((_1bc4b91ba_Ptr(_32632_t.ptr()) == nullptr)) {
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("const ", 6));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:403:5"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:404:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3604_kind);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:406:5"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("* const", 7));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:407:5"));
				(except.result);
			});
		};
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("*>(alloc)); }\n", 14));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:409:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("struct jule::Any::Type ", 23));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:412:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("__jule_any_type", 15));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:413:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:414:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("{.dealloc=__jule_type_deallocator", 33));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:415:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _1ac596ac1_Itoa(_3634_di));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:416:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(", .eq=__jule_any_type", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:417:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:418:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_eq, .to_str=__jule_any_type", 28));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:419:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _3333_si);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:420:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_to_str};\n", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:421:4"));
			(except.result);
		});
	};
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline void _1bdeed15e_pushResultIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _42635_f) {
	jule::Str _4273_s = __jule_bytesToStr(_1be01609a_code((*((*(_self_))._field_tc))._field_rc.ptr(), &((*((*(_42635_f))))._field_Result)));;
	jule::Bool _4286_ok;
	_1c69482aa_lookup((*_self_.alloc)._field_resultMap, _4273_s, nullptr, &(_4286_ok));
	if (_4286_ok) {
		return;;
	};
	(*_1c6948563_set(((*_self_.alloc)._field_resultMap).ptr(), _4273_s))=false;
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("struct ", 7));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:433:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, _4273_s);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:434:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(" {\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:435:3"));
		(except.result);
	});
	{
		auto expr = &((*(_1bc4ba9c4_Tup((*((*(_42635_f))))._field_Result.ptr())))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e20e7a:;
		if (it != expr_end) {
			jule::I32 _4368_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> _43615_t = *it;
			{
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_resultDecls, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:437:4"));
				});
				_1be010cdc_kind((*(_self_))._field_tc, &((*_self_.alloc)._field_resultDecls), _43615_t);
				({
					auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_resultDecls, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:439:4"));
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("__jule_result_arg", 17));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:440:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, _1ac596ac1_Itoa(_4368_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:441:4"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit(";\n", 2));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:442:4"));
					(except.result);
				});
			}
			_iter_next_1c6e20e7a:;
			++it;
			_4368_i++;
			goto _iter_begin_1c6e20e7a;
		}
		_iter_end_1c6e20e7a:;
	};
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_resultDecls, jule::Str::lit("};\n", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:444:3"));
		(except.result);
	});
}



inline void _1bdeed417_pushResult(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _44732_f) {
	if ((_1bc2ee50b_IsVoid((*(_44732_f)).ptr()) || ((*((*((*(_44732_f))))._field_Result))._field_Idents.len() <= 1LL))) {
		return;;
	};
	jule::I32 _4517_n = (*((*(_44732_f))))._field_Instances.len();;
	if (((*((*(_44732_f))))._field_Generics.len() == 0LL)) {
		_4517_n=1LL;
	};
	{
		auto expr = (*((*(_44732_f))))._field_Instances.slice(0LL, _4517_n);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c6e260b2:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _45515_ins = *it;
			{
				_1bdeed15e_pushResultIns(_self_, &(_45515_ins));
			}
			_iter_next_1c6e260b2:;
			++it;
			goto _iter_begin_1c6e260b2;
		}
		_iter_end_1c6e260b2:;
	};
}



inline void _1bdeed77a_pushAndWriteMaskMapper(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc309769_Trait> _46043_t1, jule::Ptr<_1bc309769_Trait> _46065_t2) {
	_1a95669ea_Builder _4617_ident = static__1a9567369_New(32LL);;
	({
		auto except = _1a95679eb_WriteStr(&_4617_ident, jule::Str::lit("__jule_trait_offset_mapper_", 27));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:462:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_4617_ident, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46065_t2)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:463:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_4617_ident, jule::Str::lit("_to_", 4));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:464:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_4617_ident, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_46043_t1)), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:465:3"));
		(except.result);
	});
	({
		auto except = _1a95676aa_Write(&(*(_self_))._field_Buf, _1a9568d2c_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:466:3"));
		(except.result);
	});
	{
		auto expr = &((*_self_.alloc)._field_traitCastMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e28dc8:;
		if (it != expr_end) {
			_1bdee87ec_traitCast _46910_m = *it;
			{
				if (((_46910_m._field_t1 == _46043_t1) && (_46910_m._field_t2 == _46065_t2))) {
					return;;
				};
			}
			_iter_next_1c6e28dc8:;
			++it;
			goto _iter_begin_1c6e28dc8;
		}
		_iter_end_1c6e28dc8:;
	};
	(*_self_.alloc)._field_traitCastMap=jule::append((*_self_.alloc)._field_traitCastMap,({ auto __jule_collection = jule::Slice<_1bdee87ec_traitCast>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1bdee87ec_traitCast{._field_t1=_46043_t1, ._field_t2=_46065_t2}; __jule_collection; }));
	;
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("void *", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:479:3"));
		(except.result);
	});
	({
		auto except = _1a95676aa_Write(&(*_self_.alloc)._field_anyObj, _1a9568d2c_Buf(&_4617_ident));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:480:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("(const void *data) noexcept { ", 30));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:481:3"));
		(except.result);
	});
	_1a95669ea_Builder _4837_t1Ident = static__1a9567369_New(16LL);;
	_1a95669ea_Builder _4847_t2Ident = static__1a9567369_New(16LL);;
	static__1bdc4ca5c_traitDecl(&(_4837_t1Ident), _46043_t1);
	static__1bdc4ca5c_traitDecl(&(_4847_t2Ident), _46065_t2);
	{
		auto expr = &((*(_46043_t1))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6e29549:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _48815_s1 = *it;
			{
				{
					auto expr = &((*(_46065_t2))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6e2d592:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> _48911_s2 = *it;
						{
							if ((_48815_s1 == _48911_s2)) {
								{
									auto expr = &((*(_48815_s1))._field_Instances);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c6e2e51b:;
									if (it != expr_end) {
										jule::Ptr<_1bc2810c5_StructIns> _49118_s1i = *it;
										{
											jule::I32 _4927_i1 = _1bcdc65dd_FindTraitTypeOffsetS(_46043_t1, _49118_s1i);;
											jule::I32 _4937_i2 = _1bcdc65dd_FindTraitTypeOffsetS(_46065_t2, _49118_s1i);;
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("if (data == &", 13));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:494:7"));
												(except.result);
											});
											({
												auto except = _1a95676aa_Write(&(*_self_.alloc)._field_anyObj, _1a9568d2c_Buf(&_4847_t2Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:495:7"));
												(except.result);
											});
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:496:7"));
												(except.result);
											});
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _1ac596ac1_Itoa(_4937_i2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:497:7"));
												(except.result);
											});
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(") return &", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:498:7"));
												(except.result);
											});
											({
												auto except = _1a95676aa_Write(&(*_self_.alloc)._field_anyObj, _1a9568d2c_Buf(&_4837_t1Ident));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:499:7"));
												(except.result);
											});
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("_mptr_data", 10));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:500:7"));
												(except.result);
											});
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, _1ac596ac1_Itoa(_4927_i1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:501:7"));
												(except.result);
											});
											({
												auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit("; ", 2));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:502:7"));
												(except.result);
											});
										}
										_iter_next_1c6e2e51b:;
										++it;
										goto _iter_begin_1c6e2e51b;
									}
									_iter_end_1c6e2e51b:;
								};
							};
						}
						_iter_next_1c6e2d592:;
						++it;
						goto _iter_begin_1c6e2d592;
					}
					_iter_end_1c6e2d592:;
				};
			}
			_iter_next_1c6e29549:;
			++it;
			goto _iter_begin_1c6e29549;
		}
		_iter_end_1c6e29549:;
	};
	({
		auto except = _1a95679eb_WriteStr(&(*_self_.alloc)._field_anyObj, jule::Str::lit(" __jule_panic_s(\"trait casting failed because of an implementation mistake, this is a JuleC bug\"); return nullptr; }\n", 117));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:507:3"));
		(except.result);
	});
}



inline void _1bdeeda33_locInfo(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc247014_Token>* _51125_t) {
	jule::Str *_5124_loc = &((*((*((*(_51125_t))))._field_File))._field_Path);;
	if (_1abb45d85_Production) {
		{
			
			if (_1abb2d9c7_HasPrefix((*(_5124_loc)), _1abb3dc7e_PathStdlib)) {
				_case_begin_1c6e34a2c:;
				{
					_1bdc465a0_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)).slice((_1abb3ae57_Dir(_1abb3dc7e_PathStdlib).len() + 1LL)));
				}
			}
			else if (_1abb2d9c7_HasPrefix((*(_5124_loc)), (*((*(_self_))._field_ir))._field_Root)) {
				_case_begin_1c6e34b09:;
				{
					_1bdc465a0_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5124_loc)).slice((_1abb3ae57_Dir((*(*(_self_))._field_ir.alloc)._field_Root).len() + 1LL)));
				}
			}
			else {
				_case_begin_1c6e34664:;
				{
					_1bdc465a0_cstrBytes(&((*_self_.alloc)._field_Buf), (*(_5124_loc)));
				}
			}
			_match_end_1c6e34587:;
		};
	} else {
		_1bdc465a0_cstrBytes(&((*(_self_))._field_Buf), (*(_5124_loc)));
	};
	_1bdeeb39e_write(_self_, jule::Str::lit(":", 1));
	_1bdeeb39e_write(_self_, _1ac596ac1_Itoa((*((*(_51125_t))))._field_Row));
	_1bdeeb39e_write(_self_, jule::Str::lit(":", 1));
	_1bdeeb39e_write(_self_, _1ac596ac1_Itoa((*((*(_51125_t))))._field_Column));
}



inline void _1bdeedc31_head(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bdedd79d_Time _5383_time = static__1bdeddd97_Now();;
	_1bdedd0c7_AbsTime _5393_abs = _1bdee0580_Abs(&_5383_time);;
	_1bdeeb39e_write(_self_, jule::Str::lit("// Auto generated by JuleC.\n", 28));
	_1bdeeb39e_write(_self_, jule::Str::lit("// JuleC version: ", 18));
	_1bdeeb39e_write(_self_, jule::Str::lit("jule0.1.1 @master", 17));
	_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
	_1bdeeb39e_write(_self_, jule::Str::lit("// Date: ", 9));
	_1bdeeb39e_write(_self_, _1ac59643e_FmtUint(_5393_abs._field_Day, 10LL));
	_1bdeeb39e_write(_self_, jule::Str::lit("/", 1));
	_1bdeeb39e_write(_self_, _1ac59643e_FmtUint(_5393_abs._field_Month, 10LL));
	_1bdeeb39e_write(_self_, jule::Str::lit("/", 1));
	_1bdeeb39e_write(_self_, _1ac59643e_FmtUint(_5393_abs._field_Year, 10LL));
	_1bdeeb39e_write(_self_, jule::Str::lit(" (DD/MM/YYYY) UTC\n//\n// Recomended Compile Command;\n// ", 55));
	_1bdeeb39e_write(_self_, (*_self_.alloc)._field_info._field_Compiler);
	_1bdeeb39e_write(_self_, jule::Str::lit(" ", 1));
	_1bdeeb39e_write(_self_, (*_self_.alloc)._field_info._field_CompilerCommand);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	if (_1abb45d85_Production) {
		_1bdeeb39e_write(_self_, jule::Str::lit("#define __JULE_ENABLE__PRODUCTION\n", 34));
	};
	if ((!(_1abb4577a_RC))) {
		_1bdeeb39e_write(_self_, jule::Str::lit("#define __JULE_DISABLE__REFERENCE_COUNTING\n", 43));
	};
	if ((!(_1abb45b43_Safety))) {
		_1bdeeb39e_write(_self_, jule::Str::lit("#define __JULE_DISABLE__SAFETY\n", 31));
	};
	_1bdeeded9_links(_self_, true);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n#include \"", 12));
	_1bdeeb39e_write(_self_, _1abb3e5ba_PathApi);
	_1bdeeb39e_write(_self_, jule::Str::lit("\"\n\n", 3));
	_1bdeeded9_links(_self_, false);
}



inline void _1bdeeded9_links(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Bool _57822_std) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c720cc7d:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _57910_used = *it;
			{
				{
					
					if ((!((*(_57910_used))._field_Binded))) {
						_case_begin_1c720db4c:;
						{
							goto _iter_next_1c720cc7d;
						}
					}
					else if (_1a982c82c_IsStdHeaderPath((*(_57910_used))._field_Path)) {
						_case_begin_1c720dbd5:;
						{
							if ((!(_57822_std))) {
								goto _iter_next_1c720cc7d;
							};
							_1bdeeb39e_write(_self_, jule::Str::lit("#include ", 9));
							_1bdeeb39e_write(_self_, (*_57910_used.alloc)._field_Path);
							_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
						}
					}
					else if (_1a982cb07_IsValidHeaderExt(_1abb3a4ea_Ext((*_57910_used.alloc)._field_Path))) {
						_case_begin_1c720dc4b:;
						{
							if (_57822_std) {
								goto _iter_next_1c720cc7d;
							};
							_1bdeeb39e_write(_self_, jule::Str::lit("#include \"", 10));
							_1bdeeb39e_write(_self_, (*_57910_used.alloc)._field_Path);
							_1bdeeb39e_write(_self_, jule::Str::lit("\"\n", 2));
						}
					}
					_match_end_1c720d9e8:;
				};
			}
			_iter_next_1c720cc7d:;
			++it;
			goto _iter_begin_1c720cc7d;
		}
		_iter_end_1c720cc7d:;
	};
}



inline void _1bdeee292_prepareStructure(_1bdeeab84_ObjectCoder* _self_, jule::Ptr<_1bc27d26a_Struct>* _60137_s) {
	{
		auto expr = &((*((*(_60137_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c720cbe5:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _60215_ins = *it;
			{
				{
					auto expr = &((*(_60215_ins))._field_Methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c72128dc:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _60316_m = *it;
						{
							if ((*(_60316_m))._field_Statically) {
								goto _iter_next_1c72128dc;
							};
							{
								auto expr = &((*(_60316_m))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c7213536:;
								if (it != expr_end) {
									jule::Ptr<_1bc302113_FnIns> _60717_mins = *it;
									{
										jule::Ptr<_1bc300ead_ParamIns> _60810_p = (*(_60717_mins))._field_Params[0LL];;
										_1a95669ea_Builder _60910_kind = static__1a9567369_New(40LL);;
										_1be010cdc_kind((*(_self_))._field_tc.ptr(), &(_60910_kind), (*(_60810_p))._field_Type);
										if ((!(_1bc2ece66_IsRef((*_60810_p.alloc)._field_Decl.ptr())))) {
											({
												auto except = _1a95679eb_WriteStr(&_60910_kind, jule::Str::lit("*", 1));
												if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:612:7"));
												(except.result);
											});
										};
										(*_60810_p.alloc)._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1be009eb2_customType>(_1be009eb2_customType{._field_kind=_1a956837b_Str(&_60910_kind)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data29)});
									}
									_iter_next_1c7213536:;
									++it;
									goto _iter_begin_1c7213536;
								}
								_iter_end_1c7213536:;
							};
						}
						_iter_next_1c72128dc:;
						++it;
						goto _iter_begin_1c72128dc;
					}
					_iter_end_1c72128dc:;
				};
			}
			_iter_next_1c720cbe5:;
			++it;
			goto _iter_begin_1c720cbe5;
		}
		_iter_end_1c720cbe5:;
	};
}



inline void _1bdeee490_prepareStructures(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c720c72d:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _62515_s = *it;
			{
				if (((*(_62515_s))._field_Token != nullptr)) {
					_1bdeee292_prepareStructure(_self_.ptr(), &(_62515_s));
				};
			}
			_iter_next_1c720c72d:;
			++it;
			goto _iter_begin_1c720c72d;
		}
		_iter_end_1c720c72d:;
	};
}



inline void _1bdeee748_structurePlainDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc27d26a_Struct>* _63240_s) {
	{
		auto expr = &((*((*(_63240_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7216e74:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _63315_ins = *it;
			{
				_1bdeeb39e_write(_self_, jule::Str::lit("struct ", 7));
				static__1bdc4d420_structureIns(&((*_self_.alloc)._field_Buf), &(_63315_ins));
				_1bdeeb39e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c7216e74:;
			++it;
			goto _iter_begin_1c7216e74;
		}
		_iter_end_1c7216e74:;
	};
}



inline void _1bdeee946_structurePlainDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72191a7:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _64115_s = *it;
			{
				if (((*(_64115_s))._field_Token != nullptr)) {
					_1bdeee748_structurePlainDecl(_self_, &(_64115_s));
				};
			}
			_iter_next_1c72191a7:;
			++it;
			goto _iter_begin_1c72191a7;
		}
		_iter_end_1c72191a7:;
	};
}



inline void _1bdeeebee_fieldDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc280525_FieldIns>* _64831_f) {
	_1be010cdc_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_64831_f))))._field_Type);
	_1bdeeb39e_write(_self_, jule::Str::lit(" ", 1));
	static__1bdc4d70b_field(&((*_self_.alloc)._field_Buf), &((*((*(_64831_f))))._field_Decl));
	_1bdeeb39e_write(_self_, jule::Str::lit(";", 1));
}



inline void _1be00011c_structureOperatorEq(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Str _65536_ident, jule::Ptr<_1bc2810c5_StructIns>* _65553_s, jule::Bool _65574_decl) {
	if ((!(_1be008ca2_defaultEq(_65553_s)))) {
		return;;
	};
	_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
	if (_1bdb0952e_Inline) {
		_1bdeeb39e_write(_self_, jule::Str::lit("inline ", 7));
	};
	_1bdeeb39e_write(_self_, jule::Str::lit("jule::Bool ", 11));
	_1bdeeb39e_write(_self_, _65536_ident);
	_1bdeeb39e_write(_self_, jule::Str::lit("_eq", 3));
	_1bdeeb39e_write(_self_, jule::Str::lit("(", 1));
	_1bdeeb39e_write(_self_, _65536_ident);
	_1bdeeb39e_write(_self_, jule::Str::lit(" *_self_, ", 10));
	_1bdeeb39e_write(_self_, _65536_ident);
	_1bdeeb39e_write(_self_, jule::Str::lit(" _other_)", 9));
	if (_65574_decl) {
		_1bdeeb39e_write(_self_, jule::Str::lit(";\n\n", 3));
		return;;
	};
	_1bdeeb39e_write(_self_, jule::Str::lit(" {", 2));
	if (((*((*(_65553_s))))._field_Fields.len() == 0LL)) {
		_1bdeeb39e_write(_self_, jule::Str::lit(" return true; }\n\n", 17));
		return;;
	};
	_1bdeeb855_addIndent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
	_1bdeebc51_indent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("return ", 7));
	_1bdeeb855_addIndent(_self_);
	jule::Bool _6867_writed = false;;
	jule::Str _6897_lmodel = jule::Str::lit("_self_->", 8);;
	jule::Str _6907_rmodel = jule::Str::lit("_other_.", 8);;
	{
		auto expr = &((*((*(_65553_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7223ee7:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> _69215_f = *it;
			{
				jule::Ptr<_1bc2810c5_StructIns> _6944_strct = _1bc4ba221_Struct((*(_69215_f))._field_Type.ptr());;
				if ((((_6944_strct != nullptr) && ((*_6944_strct.alloc)._field_Decl != nullptr)) && (*(*(_6944_strct))._field_Decl.alloc)._field_Binded)) {
					goto _iter_next_1c7223ee7;
				};
				if (_6867_writed) {
					_1bdeeb39e_write(_self_, jule::Str::lit(" &&", 3));
				};
				_6867_writed=true;
				_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
				_1bdeebc51_indent(_self_);
				_1a95669ea_Builder _7058_fIdent = static__1a9567369_New((*((*_69215_f.alloc)._field_Decl))._field_Ident.len());;
				static__1bdc4d70b_field(&(_7058_fIdent), &((*_69215_f.alloc)._field_Decl));
				_6897_lmodel+=_1c3060e48_BytesStr(_1a9568d2c_Buf(&_7058_fIdent));
				_6907_rmodel+=_1c3060e48_BytesStr(_1a9568d2c_Buf(&_7058_fIdent));
				_1bdc386c4__unsafeBinary((*_self_.alloc)._field_ec, &((*_self_.alloc)._field_Buf), &(_6897_lmodel), &(_6907_rmodel), &((*_69215_f.alloc)._field_Type), &((*_69215_f.alloc)._field_Type), static_cast<jule::U32>(50LLU), static_cast<jule::Str>(jule::Str::lit("==", 2)));
				(_6897_lmodel).mut_slice(0LL, (_6897_lmodel.len() - _1a9568810_Len(&_7058_fIdent)));;
				_6907_rmodel=_6897_lmodel.slice(0LL, (_6907_rmodel.len() - _1a9568810_Len(&_7058_fIdent)));
			}
			_iter_next_1c7223ee7:;
			++it;
			goto _iter_begin_1c7223ee7;
		}
		_iter_end_1c7223ee7:;
	};
	_1bdeeba53_doneIndent(_self_);
	if ((!(_6867_writed))) {
		_1bdeeb39e_write(_self_, jule::Str::lit("true", 4));
	};
	_1bdeeb39e_write(_self_, jule::Str::lit(";\n", 2));
	_1bdeeba53_doneIndent(_self_);
	_1bdeebc51_indent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("}\n\n", 3));
}



inline void _1be000480_structureOperators(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _72340_s, jule::Bool _72361_decl) {
	_1a95669ea_Builder _7247_sb = static__1a9567369_New(40LL);;
	static__1bdc4d420_structureIns(&(_7247_sb), _72340_s);
	jule::Str _7263_ident = _1a956837b_Str(&_7247_sb);;
	_1be00011c_structureOperatorEq(_self_, _7263_ident, _72340_s, _72361_decl);
}



inline void _1be000738_structureInsDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _73238_s) {
	{
		auto expr = &((*((*(_73238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c722d342:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _73315_m = *it;
			{
				if (_1be0089d8_isHeadDecl(&(_73315_m))) {
					_1be001a8b_funcDecl(_self_, &(_73315_m), false);
				};
			}
			_iter_next_1c722d342:;
			++it;
			goto _iter_begin_1c722d342;
		}
		_iter_end_1c722d342:;
	};
	_1bdeeb39e_write(_self_, jule::Str::lit("struct ", 7));
	static__1bdc4d420_structureIns(&((*_self_.alloc)._field_Buf), _73238_s);
	_1bdeeb39e_write(_self_, jule::Str::lit(" {\n", 3));
	_1bdeeb855_addIndent(_self_);
	{
		auto expr = &((*((*(_73238_s))))._field_Fields);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c722ec4a:;
		if (it != expr_end) {
			jule::Ptr<_1bc280525_FieldIns> _74415_f = *it;
			{
				_1bdeebc51_indent(_self_);
				_1bdeeebee_fieldDecl(_self_, &(_74415_f));
				_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
			}
			_iter_next_1c722ec4a:;
			++it;
			goto _iter_begin_1c722ec4a;
		}
		_iter_end_1c722ec4a:;
	};
	_1bdeeba53_doneIndent(_self_);
	_1bdeebc51_indent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("};", 2));
	;
	_1be000480_structureOperators(_self_, _73238_s, true);
}



inline void _1be0009e1_structureDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc27d26a_Struct>* _75835_s) {
	{
		auto expr = &((*((*(_75835_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7232c4d:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _75915_ins = *it;
			{
				_1be000738_structureInsDecl(_self_, &(_75915_ins));
			}
			_iter_next_1c7232c4d:;
			++it;
			goto _iter_begin_1c7232c4d;
		}
		_iter_end_1c7232c4d:;
	};
}



inline void _1be000bde_structureDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7233ac8:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _76515_s = *it;
			{
				if (((*(_76515_s))._field_Token != nullptr)) {
					_1be0009e1_structureDecl(_self_, &(_76515_s));
					_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
				};
			}
			_iter_next_1c7233ac8:;
			++it;
			goto _iter_begin_1c7233ac8;
		}
		_iter_end_1c7233ac8:;
	};
}



inline void _1be000ddc_structureMethodDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7234524:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _77415_s = *it;
			{
				if (((*(_77415_s))._field_Token != nullptr)) {
					{
						auto expr = &((*_77415_s.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c72366be:;
						if (it != expr_end) {
							jule::Ptr<_1bc2810c5_StructIns> _77617_ins = *it;
							{
								{
									auto expr = &((*(_77617_ins))._field_Methods);
									auto it = expr->begin();
									auto expr_end = expr->end();
									_iter_begin_1c72371a3:;
									if (it != expr_end) {
										jule::Ptr<_1bc2ee055_Fn> _77718_m = *it;
										{
											if ((!(_1be0089d8_isHeadDecl(&(_77718_m))))) {
												_1bdeed417_pushResult(_self_, &(_77718_m));
												_1be001a8b_funcDecl(_self_, &(_77718_m), false);
											};
										}
										_iter_next_1c72371a3:;
										++it;
										goto _iter_begin_1c72371a3;
									}
									_iter_end_1c72371a3:;
								};
							}
							_iter_next_1c72366be:;
							++it;
							goto _iter_begin_1c72366be;
						}
						_iter_end_1c72366be:;
					};
				};
			}
			_iter_next_1c7234524:;
			++it;
			goto _iter_begin_1c7234524;
		}
		_iter_end_1c7234524:;
	};
}



inline void _1be0013b5_funcHead(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _79230_buf, jule::Ptr<_1bc302113_FnIns>* _79258_f, jule::Bool _79275_ptr, jule::Str _79286_ident) {
	if ((((!(_79275_ptr)) && _1bdb0952e_Inline) && (!(_1bc2eea28_IsEntryPoint((*((*(_79258_f))))._field_Decl.ptr()))))) {
		({
			auto except = _1a95679eb_WriteStr(_79230_buf, jule::Str::lit("inline ", 7));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:794:4"));
			(except.result);
		});
	};
	_1be0102a3_funcInsResult((*(_self_))._field_tc.ptr(), _79230_buf, _79258_f);
	if (_79275_ptr) {
		({
			auto except = _1a95679eb_WriteStr(_79230_buf, jule::Str::lit("(*", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:798:4"));
			(except.result);
		});
		static__1bdc4c771_funcIns(_79230_buf, _79258_f);
		({
			auto except = _1a9567ca4_WriteByte(_79230_buf, ')');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:800:4"));
		});
	} else {
		({
			auto except = _1a9567ca4_WriteByte(_79230_buf, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:802:4"));
		});
		if ((_79286_ident).empty()) {
			static__1bdc4c771_funcIns(_79230_buf, _79258_f);
		} else {
			({
				auto except = _1a95679eb_WriteStr(_79230_buf, _79286_ident);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:806:5"));
				(except.result);
			});
		};
	};
}



inline void _1be001728_funcDeclIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns>* _81133_f, jule::Bool _81150_ptr) {
	(*(_self_))._field_meta._field_concurrent=((*_self_.alloc)._field_meta._field_concurrent || (*((*(_81133_f))))._field_CalledCo);
	_1bdeebc51_indent(_self_);
	_1be0013b5_funcHead(_self_, &((*_self_.alloc)._field_Buf), _81133_f, _81150_ptr, jule::Str());
	_1be002bbe_paramsIns(_self_, &((*_self_.alloc)._field_Buf), _81133_f);
	_1bdeeb39e_write(_self_, jule::Str::lit(";\n", 2));
}



inline void _1be001a8b_funcDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _81930_f, jule::Bool _81944_ptr) {
	{
		auto expr = &((*((*(_81930_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c723dbe3:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _82015_c = *it;
			{
				_1be001728_funcDeclIns(_self_, &(_82015_c), _81944_ptr);
			}
			_iter_next_1c723dbe3:;
			++it;
			goto _iter_begin_1c723dbe3;
		}
		_iter_end_1c723dbe3:;
	};
}



inline void _1be001d44_funcDeclTrait(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _82535_f) {
	{
		auto expr = &((*((*(_82535_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c723eb39:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _82615_c = *it;
			{
				jule::Ptr<_1bc4b64e7_Type> _8278_k = (*((*(_82615_c))._field_Params[0LL]))._field_Type;;
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_1bdee8104_generalGCPtr;
				_1be001728_funcDeclIns(_self_, &(_82615_c), true);
				(*((*(_82615_c))._field_Params[0LL]))._field_Type=_8278_k;
			}
			_iter_next_1c723eb39:;
			++it;
			goto _iter_begin_1c723eb39;
		}
		_iter_end_1c723eb39:;
	};
}



inline void _1be002042_funcDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bcdc0de0_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1bc3e0421_Package>*>((void*)__jule_anon_1c7242851, jule::Ptr<__jule_anon_1c7242851_ctx>::make(__jule_anon_1c7242851_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c7242851_ctx_handler));
}



inline void _1be0022ea_traitDataTypeMethods(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bdee90e4_traitHash>* _84742_hash) {
	{
		auto expr = &((*((*(_84742_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c724419e:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _84815_m = *it;
			{
				jule::Ptr<_1bc302113_FnIns> _8498_ins = (*(_84815_m))._field_Instances[0LL];;
				{
					auto expr = (*(_8498_ins))._field_Params.slice(1LL);
					auto it = expr.begin();
					auto expr_end = expr.end();
					_iter_begin_1c7246beb:;
					if (it != expr_end) {
						jule::I32 _8509_i = it - expr.begin();
						jule::Ptr<_1bc300ead_ParamIns> _85016_ip = *it;
						{
							if (_1bc249bb5_IsAnonIdent((*((*(_85016_ip))._field_Decl))._field_Ident)) {
								(*(*(_85016_ip))._field_Decl.alloc)._field_Ident=(jule::Str::lit("_", 1) + _1ac596ac1_Itoa(_8509_i));
							};
						}
						_iter_next_1c7246beb:;
						++it;
						_8509_i++;
						goto _iter_begin_1c7246beb;
					}
					_iter_end_1c7246beb:;
				};
				_1bdeed417_pushResult(_self_, &(_84815_m));
				_1be001d44_funcDeclTrait(_self_, &(_84815_m));
			}
			_iter_next_1c724419e:;
			++it;
			goto _iter_begin_1c724419e;
		}
		_iter_end_1c724419e:;
	};
}



inline void _1be0024e8_traitDataTypes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7245e09:;
		if (it != expr_end) {
			jule::Ptr<_1bdee90e4_traitHash> _86115_hash = *it;
			{
				_1bdeeb39e_write(_self_, jule::Str::lit("struct ", 7));
				static__1bdc4ca5c_traitDecl(&((*_self_.alloc)._field_Buf), (*(_86115_hash))._field_traitDecl);
				_1bdeeb39e_write(_self_, jule::Str::lit("MptrData {\n", 11));
				_1bdeeb855_addIndent(_self_);
				_1bdeebc51_indent(_self_);
				_1bdeeb39e_write(_self_, jule::Str::lit("void (*dealloc)(jule::Ptr<jule::Uintptr>&);\n", 44));
				_1be0022ea_traitDataTypeMethods(_self_, &(_86115_hash));
				_1bdeeba53_doneIndent(_self_);
				_1bdeebc51_indent(_self_);
				_1bdeeb39e_write(_self_, jule::Str::lit("};\n\n", 4));
			}
			_iter_next_1c7245e09:;
			++it;
			goto _iter_begin_1c7245e09;
		}
		_iter_end_1c7245e09:;
	};
}



inline void _1be00285b_paramIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _87530_buf, jule::Ptr<_1bc300ead_ParamIns>* _87558_p) {
	_1be00eacc_paramIns((*(_self_))._field_tc.ptr(), _87530_buf, _87558_p);
	({
		auto except = _1a9567ca4_WriteByte(_87530_buf, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:877:3"));
	});
	static__1bdc4cd48_param(_87530_buf, &((*((*(_87558_p))))._field_Decl));
}



inline void _1be002bbe_paramsIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _88131_buf, jule::Ptr<_1bc302113_FnIns>* _88159_f) {
	if (((!((*((*(_88159_f))))._field_AsAnon)) && ((*((*(_88159_f))))._field_Params.len() == 0LL))) {
		({
			auto except = _1a95679eb_WriteStr(_88131_buf, jule::Str::lit("(void)", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:883:4"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a9567ca4_WriteByte(_88131_buf, '(');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:886:3"));
	});
	if ((*((*(_88159_f))))._field_AsAnon) {
		({
			auto except = _1a95679eb_WriteStr(_88131_buf, jule::Str::lit("jule::Ptr<jule::Uintptr> __f_ctx", 32));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:888:4"));
			(except.result);
		});
		if (((*((*(_88159_f))))._field_Params.len() > 0LL)) {
			({
				auto except = _1a95679eb_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:890:5"));
				(except.result);
			});
		};
	};
	{
		auto expr = &((*((*(_88159_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c7250276:;
		if (it != expr_end) {
			jule::I32 _8938_i = it - expr->begin();
			jule::Ptr<_1bc300ead_ParamIns> _89315_p = *it;
			{
				_1be00285b_paramIns(_self_, _88131_buf, &(_89315_p));
				if ((((*((*(_88159_f))))._field_Params.len() - _8938_i) > 1LL)) {
					({
						auto except = _1a95679eb_WriteStr(_88131_buf, jule::Str::lit(", ", 2));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:896:5"));
						(except.result);
					});
				};
			}
			_iter_next_1c7250276:;
			++it;
			_8938_i++;
			goto _iter_begin_1c7250276;
		}
		_iter_end_1c7250276:;
	};
	({
		auto except = _1a9567ca4_WriteByte(_88131_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:899:3"));
	});
}



inline void _1be003032_varInitExpr(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc42dc12_Var>* _90233_v, jule::Fn<void> _90248_init) {
	if ((*((*(_90233_v))))._field_Statically) {
		_1bdeeb39e_write(_self_, jule::Str::lit("static ", 7));
	};
	_1be010cdc_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*((*(_90233_v))))._field_TypeSym))._field_Type);
	_1bdeeb39e_write(_self_, jule::Str::lit(" ", 1));
	if ((*((*(_90233_v))))._field_Reference) {
		_1bdeeb39e_write(_self_, jule::Str::lit("*", 1));
	};
	static__1bdc4d9e7_var(&((*_self_.alloc)._field_Buf), (*(_90233_v)));
	if ((_90248_init != nullptr)) {
		_1bdeeb39e_write(_self_, jule::Str::lit(" = ", 3));
		_90248_init();
	};
	_1bdeeb39e_write(_self_, jule::Str::lit(";", 1));
}



inline void _1be0032da_var(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc42dc12_Var> _92024_v) {
	if (_1bc2498eb_IsIgnoreIdent((*(_92024_v))._field_Ident)) {
		return;;
	};
	if ((((*(_92024_v))._field_Value != nullptr) && ((*(*(_92024_v))._field_Value.alloc)._field_Expr != nullptr))) {
		if (((*((*(*(_92024_v))._field_Value.alloc)._field_Data))._field_Model != nullptr)) {
			if ((*_92024_v.alloc)._field_Reference) {
				_1be003032_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c7257635, jule::Ptr<__jule_anon_1c7257635_ctx>::make(__jule_anon_1c7257635_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1c7257635_ctx_handler));
			} else {
				_1be003032_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c7259725, jule::Ptr<__jule_anon_1c7259725_ctx>::make(__jule_anon_1c7259725_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1c7259725_ctx_handler));
			};
			return;;
		};
		_1be003032_varInitExpr(_self_, &(_92024_v), nullptr);
		return;;
	};
	if ((*(_92024_v))._field_Reference) {
		_1be003032_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c725be31, jule::Ptr<__jule_anon_1c725be31_ctx>::make(__jule_anon_1c725be31_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c725be31_ctx_handler));
		return;;
	};
	if (_1be017e6a_shouldInitialized(&((*((*(_92024_v))._field_TypeSym))._field_Type))) {
		_1be003032_varInitExpr(_self_, &(_92024_v), jule::__new_closure<void>((void*)__jule_anon_1c725d0ca, jule::Ptr<__jule_anon_1c725d0ca_ctx>::make(__jule_anon_1c725d0ca_ctx{._self_=_self_,._92024_v=_92024_v}).as<jule::Uintptr>(), __jule_anon_1c725d0ca_ctx_handler));
		return;;
	};
	_1be003032_varInitExpr(_self_, &(_92024_v), nullptr);
}



inline void _1be00364d_anonFuncInsDecl(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _95137_m, jule::Str _95164_ident) {
	_1be0013b5_funcHead(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func), false, _95164_ident);
	_1be002bbe_paramsIns(_self_, &((*_self_.alloc)._field_anonObj), &((*((*(_95137_m))))._field_Func));
	({
		auto except = _1a9567ca4_WriteByte(&(*_self_.alloc)._field_anonObj, ';');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:954:3"));
	});
}



inline void _1be0039b1_anonFuncIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _95733_m, jule::Str _95760_ident) {
	_1be0013b5_funcHead(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func), false, _95760_ident);
	_1be002bbe_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &((*((*(_95733_m))))._field_Func));
	_1bdeeb39e_write(_self_, jule::Str::lit(" ", 1));
	_1bdc32624_anonFuncScope((*_self_.alloc)._field_sc, (*(_95733_m)), _95760_ident);
	if (((*((*((*(_95733_m))))._field_Func))._field_Scope != nullptr)) {
		_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1be003d24_funcIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc302113_FnIns> _96728_f, jule::Str _96745_ident) {
	_1be0013b5_funcHead(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f), false, _96745_ident);
	_1be002bbe_paramsIns(_self_, &((*_self_.alloc)._field_Buf), &(_96728_f));
	_1bdeeb39e_write(_self_, jule::Str::lit(" ", 1));
	_1bdc328cc_funcScope((*_self_.alloc)._field_sc, _96728_f);
	if (((*(_96728_f))._field_Scope != nullptr)) {
		_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	};
}



inline void _1be0040cc_func(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _97726_f) {
	{
		auto expr = &((*((*(_97726_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6156876:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _97815_ins = *it;
			{
				_1be003d24_funcIns(_self_, _97815_ins, jule::Str());
			}
			_iter_next_1c6156876:;
			++it;
			goto _iter_begin_1c6156876;
		}
		_iter_end_1c6156876:;
	};
}



inline void _1be004440_funcTrait(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _98327_s, jule::Ptr<_1bc302113_FnIns>* _98353_f) {
	(*((*(_98353_f))))._field_Scope=nullptr;
	_1a95669ea_Builder _9867_nident = static__1a9567369_New(30LL);;
	({
		auto except = _1a95679eb_WriteStr(&_9867_nident, jule::Str::lit("__jule_trait_method_", 20));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:987:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_9867_nident, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98353_f)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:988:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_9867_nident, jule::Str::lit("_", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:989:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(&_9867_nident, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>((*(_98327_s)))), 15LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:990:3"));
		(except.result);
	});
	jule::Ptr<_1bc4b64e7_Type> _9927_k = (*((*((*(_98353_f))))._field_Params[0LL]))._field_Type;;
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_1bdee8104_generalGCPtr;
	_1be003d24_funcIns(_self_, (*(_98353_f)), _1a956837b_Str(&_9867_nident));
	(*((*((*(_98353_f))))._field_Params[0LL]))._field_Type=_9927_k;
}



inline __jule_tuple_x_1bc302113_FnIns__jule_tuple_bool _1be004781_findTraitMetMap(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2ee055_Fn>* _99837_m) {
	__jule_tuple_x_1bc302113_FnIns__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Ptr<_1bc302113_FnIns> _9997_mins = (*((*(_99837_m))))._field_Instances[0LL];;
	{
		_1c11211d6_mapIterator it = _1c6a874e8_iterator((*(_self_))._field_traitMetMap);
		_iter_begin_1c7268778:;
		__jule_tuple_px_1bc302113_FnIns__jule_tuple_psuintptr __iterator_result = _1c11218bd_next(&it);
		if (__iterator_result.__jule_result_arg0 != nullptr) {
			jule::Ptr<_1bc302113_FnIns> _100012_f = *__iterator_result.__jule_result_arg0;
			{
				if (((((*((*(_100012_f))._field_Decl))._field_Public == (*((*(_99837_m))))._field_Public) && ((*(*(_100012_f))._field_Decl.alloc)._field_Ident == (*((*(_99837_m))))._field_Ident)) && _1bc302c6d_EqualFn(_100012_f, &(_9997_mins)))) {
					__jule_func_result.__jule_result_arg0 = _100012_f;
					__jule_func_result.__jule_result_arg1 = true;
					return __jule_func_result;;
				};
			}
			_iter_next_1c7268778:;
			goto _iter_begin_1c7268778;
		}
		_iter_end_1c7268778:;
	};
	__jule_func_result.__jule_result_arg0 = _9997_mins;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline void _1be004ae4_traitWrapper(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc309769_Trait>* _101034_t, jule::Ptr<_1bc2ee055_Fn>* _101056_m) {
	_julec_label_1c726aea6:;
	{
		auto expr = &((*((*(_101034_t))))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c726b160:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _101215_imp = *it;
			{
				jule::Ptr<_1bc302113_FnIns> _10138_mepf;
				jule::Bool _101314_exist;
				({
					__jule_tuple_x_1bc302113_FnIns__jule_tuple_bool __jule_assign_result = _1be004781_findTraitMetMap(_self_, _101056_m);
					_10138_mepf = __jule_assign_result.__jule_result_arg0;
					_101314_exist = __jule_assign_result.__jule_result_arg1;
				});
				if (_101314_exist) {
					jule::Slice<jule::Uintptr> _10169_vals = _1c6a86bce_get((*(_self_))._field_traitMetMap, _10138_mepf);;
					{
						auto expr = &(_10169_vals);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c726d1c8:;
						if (it != expr_end) {
							jule::Uintptr _101712_val = *it;
							{
								if ((_101712_val == static_cast<jule::Uintptr>(_101215_imp))) {
									goto _iter_next_1c726b160;
								};
							}
							_iter_next_1c726d1c8:;
							++it;
							goto _iter_begin_1c726d1c8;
						}
						_iter_end_1c726d1c8:;
					};
					(*_1c6a86d33_set(((*_self_.alloc)._field_traitMetMap).ptr(), _10138_mepf))=jule::append(_10169_vals,({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				} else {
					(*_1c6a86d33_set(((*(_self_))._field_traitMetMap).ptr(), _10138_mepf))=jule::append(({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(0LL, 0LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }),({ auto __jule_collection = jule::Slice<jule::Uintptr>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Uintptr>(_101215_imp); __jule_collection; }));
				};
				{
					auto expr = &((*(_101215_imp))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6eb9e9c:;
					if (it != expr_end) {
						jule::Ptr<_1bc2810c5_StructIns> _102716_ins = *it;
						{
							_1be004440_funcTrait(_self_, &(_102716_ins), &(_10138_mepf));
							;
							jule::Ptr<_1bc2ee055_Fn> _10319_sm = _1bc282170_FindMethod(_102716_ins.ptr(), (*((*(_101056_m))))._field_Ident, false);;
							if (((_10319_sm == nullptr) || ((*(_10319_sm))._field_Instances.len() == 0LL))) {
								return;;
							};
							_1bdeeb855_addIndent(_self_);
							_1bdeeb39e_write(_self_, jule::Str::lit("{\n", 2));
							_1bdeebc51_indent(_self_);
							if (((*((*(_101056_m))))._field_Exceptional || (!(_1bc2ee50b_IsVoid((*(_101056_m)).ptr()))))) {
								_1bdeeb39e_write(_self_, jule::Str::lit("return ", 7));
							};
							static__1bdc4c485_func(&((*_self_.alloc)._field_Buf), &(_10319_sm));
							_1bdeeb39e_write(_self_, jule::Str::lit("(", 1));
							_1bdeeb39e_write(_self_, jule::Str::lit("_self_.as<", 10));
							_1be00e093_structureIns((*_self_.alloc)._field_tc.ptr(), &((*_self_.alloc)._field_Buf), _102716_ins);
							_1bdeeb39e_write(_self_, jule::Str::lit(">()", 3));
							jule::Bool _10485_ptr = (!(_1bc2ece66_IsRef((*((*(_101056_m))))._field_Params[0LL].ptr())));;
							if (_10485_ptr) {
								_1bdeeb39e_write(_self_, jule::Str::lit(".alloc", 6));
							};
							{
								auto expr = (*((*(_101056_m))))._field_Params.slice(1LL);
								auto it = expr.begin();
								auto expr_end = expr.end();
								_iter_begin_1c6ec5ace:;
								if (it != expr_end) {
									jule::Ptr<_1bc2ec581_Param> _105212_mp = *it;
									{
										_1bdeeb39e_write(_self_, jule::Str::lit(", ", 2));
										static__1bdc4cd48_param(&((*_self_.alloc)._field_Buf), &(_105212_mp));
									}
									_iter_next_1c6ec5ace:;
									++it;
									goto _iter_begin_1c6ec5ace;
								}
								_iter_end_1c6ec5ace:;
							};
							_1bdeeb39e_write(_self_, jule::Str::lit(");\n}\n", 5));
							_1bdeeba53_doneIndent(_self_);
						}
						_iter_next_1c6eb9e9c:;
						++it;
						goto _iter_begin_1c6eb9e9c;
					}
					_iter_end_1c6eb9e9c:;
				};
			}
			_iter_next_1c726b160:;
			++it;
			goto _iter_begin_1c726b160;
		}
		_iter_end_1c726b160:;
	};
}



inline void _1be004ce2_traitWrappers(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ec76c4:;
		if (it != expr_end) {
			jule::Ptr<_1bdee90e4_traitHash> _106315_hash = *it;
			{
				if (((*((*(_106315_hash))._field_traitDecl))._field_Implemented.len() == 0LL)) {
					goto _iter_next_1c6ec76c4;
				};
				{
					auto expr = &((*(_106315_hash))._field_methods);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6ec8a27:;
					if (it != expr_end) {
						jule::Ptr<_1bc2ee055_Fn> _106716_m = *it;
						{
							_1be004ae4_traitWrapper(_self_, &((*(_106315_hash))._field_traitDecl), &(_106716_m));
						}
						_iter_next_1c6ec8a27:;
						++it;
						goto _iter_begin_1c6ec8a27;
					}
					_iter_end_1c6ec8a27:;
				};
			}
			_iter_next_1c6ec76c4:;
			++it;
			goto _iter_begin_1c6ec76c4;
		}
		_iter_end_1c6ec76c4:;
	};
}



inline void _1be005155_traitDataMethods(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bdee90e4_traitHash>* _107438_hash, jule::Ptr<_1bc2810c5_StructIns> _107456_s) {
	{
		auto expr = &((*((*(_107438_hash))))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ec92b9:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _107515_m = *it;
			{
				_1bdeebc51_indent(_self_);
				_1bdeeb39e_write(_self_, jule::Str::lit(".", 1));
				static__1bdc4c485_func(&((*_self_.alloc)._field_Buf), &(_107515_m));
				_1bdeeb39e_write(_self_, jule::Str::lit("=__jule_trait_method_", 21));
				jule::Ptr<_1bc302113_FnIns> _10804_mepf;
				jule::Bool _108010_exist;
				({
					__jule_tuple_x_1bc302113_FnIns__jule_tuple_bool __jule_assign_result = _1be004781_findTraitMetMap(_self_, &(_107515_m));
					_10804_mepf = __jule_assign_result.__jule_result_arg0;
					_108010_exist = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_108010_exist))) {
					__jule_panic_s(jule::Str::lit("cxx: implementation mistake, [traitDataMethods] could not found MepMap record", 77) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1082:5"));;
				};
				_1bdeeb39e_write(_self_, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_10804_mepf)), 15LL));
				_1bdeeb39e_write(_self_, jule::Str::lit("_", 1));
				_1bdeeb39e_write(_self_, _1ac59643e_FmtUint(static_cast<jule::U64>(static_cast<jule::Uintptr>(_107456_s)), 15LL));
				_1bdeeb39e_write(_self_, jule::Str::lit(",\n", 2));
			}
			_iter_next_1c6ec92b9:;
			++it;
			goto _iter_begin_1c6ec92b9;
		}
		_iter_end_1c6ec92b9:;
	};
}



inline void _1be005573_traitData(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bdee90e4_traitHash>* _109231_hash, jule::I32 _109249_i, jule::Ptr<_1bc2810c5_StructIns>* _109262_s) {
	_1a95669ea_Builder _10937_ident = static__1a9567369_New((*((*((*(_109231_hash))))._field_traitDecl))._field_Ident.len());;
	static__1bdc4ca5c_traitDecl(&(_10937_ident), (*((*(_109231_hash))))._field_traitDecl);
	_1bdeeb39e_write(_self_, jule::Str::lit("static ", 7));
	_1bdeeb657_writeBytes(_self_, _1a9568d2c_Buf(&_10937_ident));
	_1bdeeb39e_write(_self_, jule::Str::lit("MptrData ", 9));
	_1bdeeb657_writeBytes(_self_, _1a9568d2c_Buf(&_10937_ident));
	_1bdeeb39e_write(_self_, jule::Str::lit("_mptr_data", 10));
	_1bdeeb39e_write(_self_, _1ac596ac1_Itoa(_109249_i));
	_1bdeeb39e_write(_self_, jule::Str::lit(" {\n", 3));
	_1bdeeb855_addIndent(_self_);
	_1bdeebc51_indent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit(".dealloc=__jule_type_deallocator", 32));
	_1bdeeb39e_write(_self_, _1ac596ac1_Itoa(_1bdeec724_pushDealloc(_self_, jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_109262_s)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)}))));
	_1bdeeb39e_write(_self_, jule::Str::lit(",\n", 2));
	_1be005155_traitDataMethods(_self_, _109231_hash, (*(_109262_s)));
	_1bdeeba53_doneIndent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("};\n", 3));
}



inline void _1be005771_traitDatas(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*(_self_))._field_traitMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ed3e72:;
		if (it != expr_end) {
			jule::Ptr<_1bdee90e4_traitHash> _111415_hash = *it;
			{
				jule::I32 _11158_i = 0LL;;
				{
					auto expr = &((*((*(_111415_hash))._field_traitDecl))._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6ed4e1d:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> _111616_s = *it;
						{
							{
								auto expr = &((*(_111616_s))._field_Instances);
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c6ed5a45:;
								if (it != expr_end) {
									jule::Ptr<_1bc2810c5_StructIns> _111717_ins = *it;
									{
										_1be005573_traitData(_self_, &(_111415_hash), _11158_i, &(_111717_ins));
										(_11158_i)++;
									}
									_iter_next_1c6ed5a45:;
									++it;
									goto _iter_begin_1c6ed5a45;
								}
								_iter_end_1c6ed5a45:;
							};
						}
						_iter_next_1c6ed4e1d:;
						++it;
						goto _iter_begin_1c6ed4e1d;
					}
					_iter_end_1c6ed4e1d:;
				};
			}
			_iter_next_1c6ed3e72:;
			++it;
			goto _iter_begin_1c6ed3e72;
		}
		_iter_end_1c6ed3e72:;
	};
}



inline void _1be00596e_globalDecls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ed60d9:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _112615_v = *it;
			{
				_1be010cdc_kind((*(_self_))._field_tc.ptr(), &((*_self_.alloc)._field_Buf), (*((*(_112615_v))._field_TypeSym))._field_Type);
				_1bdeeb39e_write(_self_, jule::Str::lit(" ", 1));
				static__1bdc4d9e7_var(&((*_self_.alloc)._field_Buf), _112615_v);
				_1bdeeb39e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6ed60d9:;
			++it;
			goto _iter_begin_1c6ed60d9;
		}
		_iter_end_1c6ed60d9:;
	};
}



inline void _1be005b6c_decls(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bdeee946_structurePlainDecls(_self_);
	_1be000bde_structureDecls(_self_);
	(*_self_.alloc)._field_headPos=_1a9568810_Len(&(*_self_.alloc)._field_Buf);
	_1be000ddc_structureMethodDecls(_self_);
	_1be002042_funcDecls(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	_1be0024e8_traitDataTypes(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_wrapPos=_1a9568810_Len(&(*_self_.alloc)._field_Buf);
	_1be004ce2_traitWrappers(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	_1be005771_traitDatas(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	(*_self_.alloc)._field_declPos=_1a9568810_Len(&(*_self_.alloc)._field_Buf);
	_1be00596e_globalDecls(_self_);
}



inline void _1be005e25_structureMethods(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _115238_s) {
	{
		auto expr = &((*((*(_115238_s))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6edcd16:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _115315_f = *it;
			{
				_1be0040cc_func(_self_, &(_115315_f));
				_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c6edcd16:;
			++it;
			goto _iter_begin_1c6edcd16;
		}
		_iter_end_1c6edcd16:;
	};
}



inline void _1be0061cd_structureIns(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc2810c5_StructIns>* _115934_s) {
	;
	_1be000480_structureOperators(_self_, _115934_s, false);
	_1be005e25_structureMethods(_self_, _115934_s);
}



inline void _1be006486_structure(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc27d26a_Struct>* _116531_s) {
	{
		auto expr = &((*((*(_116531_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ee02e1:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _116615_ins = *it;
			{
				_1be0061cd_structureIns(_self_, &(_116615_ins));
				_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
			}
			_iter_next_1c6ee02e1:;
			++it;
			goto _iter_begin_1c6ee02e1;
		}
		_iter_end_1c6ee02e1:;
	};
}



inline void _1be006684_structures(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Structs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ee0a3e:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _117315_s = *it;
			{
				if (((*(_117315_s))._field_Token != nullptr)) {
					_1be006486_structure(_self_, &(_117315_s));
					_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c6ee0a3e:;
			++it;
			goto _iter_begin_1c6ee0a3e;
		}
		_iter_end_1c6ee0a3e:;
	};
}



inline void _1be006882_funcs(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bcdc0de0_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1bc3e0421_Package>*>((void*)__jule_anon_1c6ee3657, jule::Ptr<__jule_anon_1c6ee3657_ctx>::make(__jule_anon_1c6ee3657_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6ee3657_ctx_handler));
}



inline void _1be006b3a_pushInit(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc3e0421_Package>* _120430_pkg) {
	_1bcdc1143_IterFiles(_120430_pkg, jule::__new_closure<void,jule::Ptr<_1bc305358_SymTab>*>((void*)__jule_anon_1c6ee4acb, jule::Ptr<__jule_anon_1c6ee4acb_ctx>::make(__jule_anon_1c6ee4acb_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c6ee4acb_ctx_handler));
}



inline void _1be006d38_anonHashes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_julec_label_1c6ee9460:;
	jule::Slice<jule::Ptr<_1bdee8bc6_anonHash>> _12217_anons = (*(_self_))._field_anons;;
	(*_self_.alloc)._field_anons=nullptr;
	{
		auto expr = &(_12217_anons);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ee94a4:;
		if (it != expr_end) {
			jule::Ptr<_1bdee8bc6_anonHash> _122315_h = *it;
			{
				_1be0039b1_anonFuncIns(_self_, &((*(_122315_h))._field_expr), (*_122315_h.alloc)._field_ident);
			}
			_iter_next_1c6ee94a4:;
			++it;
			goto _iter_begin_1c6ee94a4;
		}
		_iter_end_1c6ee94a4:;
	};
	if (((*_self_.alloc)._field_anons.len() > 0LL)) {
		goto _julec_label_1c6ee9460;
	};
}



inline void _1be007036_initGlobals(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	{
		auto expr = &((*((*(_self_))._field_ir))._field_Ordered._field_Globals);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6eec562:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _123215_v = *it;
			{
				({
					auto except = _1a9567ca4_WriteByte(&(*(_self_))._field_Buf, 9LLU);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1233:4"));
				});
				static__1bdc4d9e7_var(&((*_self_.alloc)._field_Buf), _123215_v);
				_1bdeeb39e_write(_self_, jule::Str::lit(" = ", 3));
				_1bdc44955_model((*_self_.alloc)._field_ec, (*((*((*(_123215_v))._field_Value))._field_Data))._field_Model);
				_1bdeeb39e_write(_self_, jule::Str::lit(";\n", 2));
			}
			_iter_next_1c6eec562:;
			++it;
			goto _iter_begin_1c6eec562;
		}
		_iter_end_1c6eec562:;
	};
}



inline void _1be007234_initCaller(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bdeeb39e_write(_self_, jule::Str::lit("void __jule_call_initializers(void) {\n", 38));
	_1bdeeb855_addIndent(_self_);
	_1bcdc0de0_IterPackages(&((*_self_.alloc)._field_ir), jule::__new_closure<void,jule::Ptr<_1bc3e0421_Package>*>((void*)__jule_anon_1c7001016, jule::Ptr<__jule_anon_1c7001016_ctx>::make(__jule_anon_1c7001016_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c7001016_ctx_handler));
	_1bdeeba53_doneIndent(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n}", 2));
}



inline void _1be007432_end(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bdeeb39e_write(_self_, jule::Str::lit("int main(int argc, char *argv[], char *envp[]) {", 48));
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	_1be007036_initGlobals(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\t__jule_argc = static_cast<jule::Int>(argc);\n\t__jule_argv = reinterpret_cast<jule::U8**>(argv);\n\t__jule_envp = reinterpret_cast<jule::U8**>(envp);\n\n\t__jule_call_initializers();\n\t", 179));
	if (_1abb454c2_Test) {
		_1bdeeb39e_write(_self_, jule::Str::lit("test_point();", 13));
	} else {
		static__1bdc4c485_func(&((*_self_.alloc)._field_Buf), &((*(_1bcdc8b40_ProgramMeta))._field_EntryPoint));
		_1bdeeb39e_write(_self_, jule::Str::lit("();", 3));
	};
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n\treturn EXIT_SUCCESS;\n}", 25));
}



inline void _1be0076da_buildTraitHash(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, jule::Ptr<_1bc309769_Trait>* _127636_t) {
	jule::Ptr<_1bdee90e4_traitHash> _12777_hash = jule::new_ptr<_1bdee90e4_traitHash>(_1bdee90e4_traitHash{._field_traitDecl=(*(_127636_t)), ._field_methods=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ee055_Fn>>::alloc(0LL, (*((*(_127636_t))))._field_Methods.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc2ee055_Fn>(nullptr); __jule_collection; })});;
	_1bcdc142e_IterTraitMethods(_127636_t, jule::__new_closure<void,jule::Ptr<_1bc2ee055_Fn>*>((void*)__jule_anon_1c6bc9a36, jule::Ptr<__jule_anon_1c6bc9a36_ctx>::make(__jule_anon_1c6bc9a36_ctx{._12777_hash=_12777_hash}).as<jule::Uintptr>(), __jule_anon_1c6bc9a36_ctx_handler));
	(*(_self_))._field_traitMap=jule::append((*_self_.alloc)._field_traitMap,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bdee90e4_traitHash>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _12777_hash; __jule_collection; }));
}



inline void _1be0078d8_buildTraitHashes(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1bcdc0de0_IterPackages(&((*(_self_))._field_ir), jule::__new_closure<void,jule::Ptr<_1bc3e0421_Package>*>((void*)__jule_anon_1c7003ab8, jule::Ptr<__jule_anon_1c7003ab8_ctx>::make(__jule_anon_1c7003ab8_ctx{._self_=_self_}).as<jule::Uintptr>(), __jule_anon_1c7003ab8_ctx_handler));
}



inline void _1be007c4b_insertBuf(jule::Ptr<_1bdeeab84_ObjectCoder> _self_, _1a95669ea_Builder* _130631_buf, jule::I32 _130654_pos) {
	if ((_1a9568810_Len(_130631_buf) > 0LL)) {
		jule::Slice<jule::U8> _13088_ibuf = _1a9568d2c_Buf(&(*(_self_))._field_Buf);;
		_13088_ibuf=_1c70072e7_Insert(_13088_ibuf, _130654_pos, _1a9568d2c_Buf(_130631_buf));
		{
			_1a95690d5_SetBuf(&(*_self_.alloc)._field_Buf, _13088_ibuf);
		};
	};
}



inline void _1be007e49_implementRC(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	if ((*(_self_))._field_meta._field_concurrent) {
		_1be003d24_funcIns(_self_, (*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_RCAddAtomic, jule::Str::lit("__jule_RCAdd", 12));
		_1be003d24_funcIns(_self_, (*(*(_1bcdc8b40_ProgramMeta))._field_Runtime.alloc)._field_RCLoadAtomic, jule::Str::lit("__jule_RCLoad", 13));
		_1be003d24_funcIns(_self_, (*(*(_1bcdc8b40_ProgramMeta))._field_Runtime.alloc)._field_RCDropAtomic, jule::Str::lit("__jule_RCDrop", 13));
	} else {
		_1be003d24_funcIns(_self_, (*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_RCAdd, jule::Str());
		_1be003d24_funcIns(_self_, (*(*(_1bcdc8b40_ProgramMeta))._field_Runtime.alloc)._field_RCLoad, jule::Str());
		_1be003d24_funcIns(_self_, (*(*(_1bcdc8b40_ProgramMeta))._field_Runtime.alloc)._field_RCDrop, jule::Str());
	};
}



inline void _1be008147_serializeHead(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1be0078d8_buildTraitHashes(_self_);
	_1bdeee490_prepareStructures(_self_);
	_1bdeedc31_head(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
	_1be005b6c_decls(_self_);
	_1be007c4b_insertBuf(_self_, &((*_self_.alloc)._field_resultDecls), (*_self_.alloc)._field_headPos);
	(*_self_.alloc)._field_wrapPos+=_1a9568810_Len(&(*_self_.alloc)._field_resultDecls);
	(*_self_.alloc)._field_declPos+=_1a9568810_Len(&(*_self_.alloc)._field_resultDecls);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n", 1));
	_1be006684_structures(_self_);
	_1be006882_funcs(_self_);
	_1be007234_initCaller(_self_);
	_1bdeeb39e_write(_self_, jule::Str::lit("\n\n", 2));
	_1be006d38_anonHashes(_self_);
	_1be007e49_implementRC(_self_);
	_1be007c4b_insertBuf(_self_, &((*_self_.alloc)._field_deallocObj), (*_self_.alloc)._field_wrapPos);
	(*_self_.alloc)._field_wrapPos+=_1a9568810_Len(&(*_self_.alloc)._field_deallocObj);
	(*_self_.alloc)._field_declPos+=_1a9568810_Len(&(*_self_.alloc)._field_deallocObj);
	_1be007c4b_insertBuf(_self_, &((*_self_.alloc)._field_anyObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a9568810_Len(&(*_self_.alloc)._field_anyObj);
	_1be007c4b_insertBuf(_self_, &((*_self_.alloc)._field_anonObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a9568810_Len(&(*_self_.alloc)._field_anonObj);
	_1be007c4b_insertBuf(_self_, &((*_self_.alloc)._field_coSpawnObj), (*_self_.alloc)._field_declPos);
	(*_self_.alloc)._field_declPos+=_1a9568810_Len(&(*_self_.alloc)._field_coSpawnObj);
}



inline void _1be008345_Serialize(jule::Ptr<_1bdeeab84_ObjectCoder> _self_) {
	_1be008147_serializeHead(_self_);
	_1be007432_end(_self_);
}








inline jule::Bool _1be009eb2_customType_eq(_1be009eb2_customType *_self_, _1be009eb2_customType _other_) {
	return 
		(_self_->_field_kind == _other_._field_kind);
}

inline jule::Str _1be00a39c_Str(_1be009eb2_customType* _self_) {
	return (*(_self_))._field_kind;;
}



inline jule::Bool _1be00a6dd_Equal(jule::Ptr<_1be009eb2_customType> _self_, jule::Ptr<_1bc4b64e7_Type> _2518_k) {
	return false;;
}








inline jule::Bool _1be00aad9_typeCoder_eq(_1be00aad9_typeCoder *_self_, _1be00aad9_typeCoder _other_) {
	return 
		(_self_->_field_oc == _other_._field_oc) &&
		(_self_->_field_rc == _self_->_field_rc);
}

inline jule::Ptr<_1be00aad9_typeCoder> static__1be00b139_new(jule::Ptr<_1bdeeab84_ObjectCoder>* _5021_oc) {
	jule::Ptr<_1be00aad9_typeCoder> _517_tc = jule::new_ptr<_1be00aad9_typeCoder>(_1be00aad9_typeCoder{._field_oc=(*(_5021_oc)), ._field_rc=jule::Ptr<_1be0136c4_resultCoder>(nullptr)});;
	(*(_517_tc))._field_rc=static__1be013bd0_new(&(_517_tc));
	return _517_tc;;
}



inline void _1be00b49c_toType(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _5727_buf, jule::Str _5754_id) {
	if ((_5754_id != static_cast<jule::Str>(jule::Str::lit("uintptr", 7)))) {
		_5754_id=_1bc3745a3_RealKindOf(_5754_id);
	};
	({
		auto except = _1a95679eb_WriteStr(_5727_buf, jule::Str::lit("jule::", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:61:3"));
		(except.result);
	});
	if (((97LL <= _5754_id[0LL]) && (_5754_id[0LL] <= 122LLU))) {
		({
			auto except = _1a9567ca4_WriteByte(_5727_buf, (jule::U8)(_5754_id[0LL] - 32LLU));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:63:4"));
		});
	} else {
		({
			auto except = _1a9567ca4_WriteByte(_5727_buf, _5754_id[0LL]);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:65:4"));
		});
	};
	({
		auto except = _1a95679eb_WriteStr(_5727_buf, _5754_id.slice(1LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:67:3"));
		(except.result);
	});
}



inline void _1be00b810_prim(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _7125_buf, jule::Ptr<_1bc4be610_Prim> _7148_p) {
	_1be00b49c_toType(_self_, _7125_buf, (*(_7148_p))._field_Kind);
}



inline void _1be00bb73_tuple(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _7626_buf, jule::Ptr<_1bc4c4703_Tuple> _7653_t) {
	({
		auto except = _1a95679eb_WriteStr(_7626_buf, jule::Str::lit("std::tuple<", 11));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:77:3"));
		(except.result);
	});
	{
		auto expr = &((*(_7653_t))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c702c8d3:;
		if (it != expr_end) {
			jule::I32 _788_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> _7815_tk = *it;
			{
				_1be010cdc_kind(_self_, _7626_buf, _7815_tk);
				if ((((*(_7653_t))._field_Types.len() - _788_i) > 1LL)) {
					({
						auto except = _1a9567ca4_WriteByte(_7626_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:81:5"));
					});
				};
			}
			_iter_next_1c702c8d3:;
			++it;
			_788_i++;
			goto _iter_begin_1c702c8d3;
		}
		_iter_end_1c702c8d3:;
	};
	({
		auto except = _1a9567ca4_WriteByte(_7626_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:84:3"));
	});
}



inline void _1be00bed6_asSptr(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _8827_buf, jule::Slice<jule::U8> _8850_elem) {
	({
		auto except = _1a95679eb_WriteStr(_8827_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:89:3"));
		(except.result);
	});
	({
		auto except = _1a95676aa_Write(_8827_buf, _8850_elem);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:90:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_8827_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:91:3"));
	});
}



inline void _1be00c349_sptr(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _9525_buf, jule::Ptr<_1bc4c313b_Sptr> _9552_sptr) {
	({
		auto except = _1a95679eb_WriteStr(_9525_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:96:3"));
		(except.result);
	});
	_1be010cdc_kind(_self_, _9525_buf, (*(_9552_sptr))._field_Elem);
	({
		auto except = _1a9567ca4_WriteByte(_9525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:98:3"));
	});
}



inline void _1be00c6ac_ptr(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _10224_buf, jule::Ptr<_1bc4c6903_Ptr> _10251_p) {
	;
	if (_1bc4c7470_IsUnsafe(_10251_p.ptr())) {
		({
			auto except = _1a95679eb_WriteStr(_10224_buf, jule::Str::lit("void*", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:105:4"));
			(except.result);
		});
	} else {
		_1be010cdc_kind(_self_, _10224_buf, (*(_10251_p))._field_Elem);
		({
			auto except = _1a95679eb_WriteStr(_10224_buf, jule::Str::lit("*", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:108:4"));
			(except.result);
		});
	};
}



inline void _1be00ca20_enumDecl(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _11329_buf, jule::Ptr<_1bc30be20_Enum> _11356_e) {
	_1be010cdc_kind(_self_, _11329_buf, (*((*(_11356_e))._field_TypeSym))._field_Type);
}



inline void _1be00cd83_typeEnumDecl(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _11833_buf, jule::Ptr<_1bc30d62a_TypeEnum> _11860_e) {
	({
		auto except = _1a95679eb_WriteStr(_11833_buf, jule::Str::lit("jule::Any", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:119:3"));
		(except.result);
	});
}



inline void _1be00d1e6_asSlice(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _12228_buf, jule::Ptr<_1bc4b64e7_Type> _12255_elem) {
	({
		auto except = _1a95679eb_WriteStr(_12228_buf, jule::Str::lit("jule::Slice<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:123:3"));
		(except.result);
	});
	_1be010cdc_kind(_self_, _12228_buf, _12255_elem);
	({
		auto except = _1a9567ca4_WriteByte(_12228_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:125:3"));
	});
}



inline void _1be00d559_slice(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _12926_buf, jule::Ptr<_1bc4c3b0e_Slc> _12953_s) {
	_1be00d1e6_asSlice(_self_, _12926_buf, (*(_12953_s))._field_Elem);
}



inline void _1be00d8bc_mapType(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _13428_buf, jule::Ptr<_1bc4c52a3_Map> _13455_m) {
	jule::Ptr<_1bc2810c5_StructIns> _1357_ins = _1bcdc7699_FindStructGenericInstance(&((*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map), ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_13455_m))._field_Key; (*it++) = (*_13455_m.alloc)._field_Val; __jule_collection; }));;
	({
		auto except = _1a95679eb_WriteStr(_13428_buf, jule::Str::lit("jule::Ptr<", 10));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:136:3"));
		(except.result);
	});
	static__1bdc4d420_structureIns(_13428_buf, &(_1357_ins));
	({
		auto except = _1a95679eb_WriteStr(_13428_buf, jule::Str::lit(">", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:138:3"));
		(except.result);
	});
}



inline void _1be00e093_structureIns(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _14733_buf, jule::Ptr<_1bc2810c5_StructIns> _14760_s) {
	if ((!((*((*(_14760_s))._field_Decl))._field_Binded))) {
		static__1bdc4d420_structureIns(_14733_buf, &(_14760_s));
		return;;
	};
	jule::Ptr<_1bc25bd2b_Directive> _1523_d = _1bcdc56db_FindDirective(&((*((*(_14760_s))._field_Decl))._field_Directives), static_cast<jule::Str>(jule::Str::lit("namespace", 9)));;
	if ((_1523_d != nullptr)) {
		({
			auto except = _1a95676aa_Write(_14733_buf, _1be0086ca_concatAllParts((*_1523_d.alloc)._field_Args));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:154:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_14733_buf, jule::Str::lit("::", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:155:4"));
			(except.result);
		});
	};
	static__1bdc4d420_structureIns(_14733_buf, &(_14760_s));
	if (((*_14760_s.alloc)._field_Generics.len() > 0LL)) {
		({
			auto except = _1a9567ca4_WriteByte(_14733_buf, '<');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:159:4"));
		});
		{
			auto expr = &((*_14760_s.alloc)._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c703a5a0:;
			if (it != expr_end) {
				jule::I32 _1609_i = it - expr->begin();
				jule::Ptr<_1bc4b4b11_InsGeneric> _16016_g = *it;
				{
					_1be010cdc_kind(_self_, _14733_buf, (*(_16016_g))._field_Type);
					if ((((*_14760_s.alloc)._field_Generics.len() - _1609_i) > 1LL)) {
						({
							auto except = _1a9567ca4_WriteByte(_14733_buf, ',');
							if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:163:6"));
						});
					};
				}
				_iter_next_1c703a5a0:;
				++it;
				_1609_i++;
				goto _iter_begin_1c703a5a0;
			}
			_iter_end_1c703a5a0:;
		};
		({
			auto except = _1a9567ca4_WriteByte(_14733_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:166:4"));
		});
	};
}



inline void _1be00e406_array(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _17126_buf, jule::Ptr<_1bc4c5e30_Arr> _17153_a) {
	({
		auto except = _1a95679eb_WriteStr(_17126_buf, jule::Str::lit("jule::Array<", 12));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:172:3"));
		(except.result);
	});
	_1be010cdc_kind(_self_, _17126_buf, (*(_17153_a))._field_Elem);
	({
		auto except = _1a9567ca4_WriteByte(_17126_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:174:3"));
	});
	({
		auto except = _1a95679eb_WriteStr(_17126_buf, _1ac596ac1_Itoa((*_17153_a.alloc)._field_N));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:175:3"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_17126_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:176:3"));
	});
}



inline void _1be00eacc_paramIns(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _19429_buf, jule::Ptr<_1bc300ead_ParamIns>* _19457_p) {
	if ((*((*((*(_19457_p))))._field_Decl))._field_Variadic) {
		({
			auto except = _1a95679eb_WriteStr(_19429_buf, jule::Str::lit("jule::Slice<", 12));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:196:4"));
			(except.result);
		});
		_1be010cdc_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
		({
			auto except = _1a9567ca4_WriteByte(_19429_buf, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:198:4"));
		});
	} else {
		_1be010cdc_kind(_self_, _19429_buf, (*((*(_19457_p))))._field_Type);
	};
	if ((*((*((*(_19457_p))))._field_Decl))._field_Reference) {
		({
			auto except = _1a9567ca4_WriteByte(_19429_buf, '*');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:203:4"));
		});
	};
}



inline void _1be0102a3_funcInsResult(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _22634_s, jule::Ptr<_1bc302113_FnIns>* _22660_f) {
	if (_1bc2ee50b_IsVoid((*((*(_22660_f))))._field_Decl.ptr())) {
		if ((*(*((*(_22660_f))))._field_Decl.alloc)._field_Exceptional) {
			({
				auto except = _1a95679eb_WriteStr(_22634_s, jule::Str::lit("jule::VoidExceptional", 21));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:229:5"));
				(except.result);
			});
		} else {
			({
				auto except = _1a95679eb_WriteStr(_22634_s, jule::Str::lit("void", 4));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:231:5"));
				(except.result);
			});
		};
		return;;
	};
	if ((*((*((*(_22660_f))))._field_Decl))._field_Exceptional) {
		({
			auto except = _1a95679eb_WriteStr(_22634_s, jule::Str::lit("jule::Exceptional<", 18));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:236:4"));
			(except.result);
		});
		_1be015c8c_codeMut1((*(_self_))._field_rc.ptr(), _22634_s, &((*((*(_22660_f))))._field_Result));
		({
			auto except = _1a9567ca4_WriteByte(_22634_s, '>');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:238:4"));
		});
		return;;
	};
	_1be015c8c_codeMut1((*(_self_))._field_rc.ptr(), _22634_s, &((*((*(_22660_f))))._field_Result));
}



inline void _1be010616_anonFunc(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _24429_buf, jule::Ptr<_1bc302113_FnIns> _24456_f) {
	if ((((*(_24456_f))._field_Result != nullptr) && (_1bc4ba9c4_Tup((*(_24456_f))._field_Result) != nullptr))) {
		_1bdeed15e_pushResultIns((*(_self_))._field_oc, &(_24456_f));
	};
	_1be0102a3_funcInsResult(_self_, _24429_buf, &(_24456_f));
	if (((*(_24456_f))._field_Params.len() == 0LL)) {
		return;;
	};
	({
		auto except = _1a9567ca4_WriteByte(_24429_buf, ',');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:252:3"));
	});
	{
		auto expr = &((*(_24456_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6296b09:;
		if (it != expr_end) {
			jule::I32 _2538_i = it - expr->begin();
			jule::Ptr<_1bc300ead_ParamIns> _25315_param = *it;
			{
				if (_1bc2ecbd0_IsSelf((*(_25315_param))._field_Decl.ptr())) {
					goto _iter_next_1c6296b09;
				};
				_1be00eacc_paramIns(_self_, _24429_buf, &(_25315_param));
				if ((((*(_24456_f))._field_Params.len() - _2538_i) > 1LL)) {
					({
						auto except = _1a9567ca4_WriteByte(_24429_buf, ',');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:259:5"));
					});
				};
			}
			_iter_next_1c6296b09:;
			++it;
			_2538_i++;
			goto _iter_begin_1c6296b09;
		}
		_iter_end_1c6296b09:;
	};
}



inline void _1be010979_func(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _26525_buf, jule::Ptr<_1bc302113_FnIns> _26552_f) {
	({
		auto except = _1a95679eb_WriteStr(_26525_buf, jule::Str::lit("jule::Fn<", 9));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:266:3"));
		(except.result);
	});
	_1be010616_anonFunc(_self_, _26525_buf, _26552_f);
	({
		auto except = _1a9567ca4_WriteByte(_26525_buf, '>');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:268:3"));
	});
}



inline void _1be010cdc_kind(_1be00aad9_typeCoder* _self_, _1a95669ea_Builder* _27225_buf, jule::Ptr<_1bc4b64e7_Type> _27252_k) {
	{
		
		if ((_1bc4ba221_Struct(_27252_k.ptr()) != nullptr)) {
			_case_begin_1c629a14b:;
			{
				_1be00e093_structureIns(_self_, _27225_buf, _1bc4ba221_Struct(_27252_k));
				return;;
			}
		}
		else if (_1bc4b7394_Binded(_27252_k.ptr())) {
			_case_begin_1c629a1e5:;
			{
				({
					auto except = _1a95679eb_WriteStr(_27225_buf, (*_27252_k.alloc)._field_BindIdent);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:281:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1bc4b8b9d_Prim(_27252_k) != nullptr)) {
			_case_begin_1c629a25b:;
			{
				_1be00b810_prim(_self_, _27225_buf, _1bc4b8b9d_Prim(_27252_k));
				return;;
			}
		}
		else if ((_1bc4ba9c4_Tup(_27252_k) != nullptr)) {
			_case_begin_1c629a2c2:;
			{
				_1be00bb73_tuple(_self_, _27225_buf, _1bc4ba9c4_Tup(_27252_k));
				return;;
			}
		}
		else if ((_1bc4b8e34_Sptr(_27252_k) != nullptr)) {
			_case_begin_1c629a338:;
			{
				_1be00c349_sptr(_self_, _27225_buf, _1bc4b8e34_Sptr(_27252_k));
				return;;
			}
		}
		else if ((_1bc4b91ba_Ptr(_27252_k) != nullptr)) {
			_case_begin_1c629a3b0:;
			{
				_1be00c6ac_ptr(_self_, _27225_buf, _1bc4b91ba_Ptr(_27252_k));
				return;;
			}
		}
		else if ((_1bc4b9451_Enum(_27252_k) != nullptr)) {
			_case_begin_1c629a437:;
			{
				_1be00ca20_enumDecl(_self_, _27225_buf, _1bc4b9451_Enum(_27252_k));
				return;;
			}
		}
		else if ((_1bc4b96d7_TypeEnum(_27252_k) != nullptr)) {
			_case_begin_1c629a4ae:;
			{
				_1be00cd83_typeEnumDecl(_self_, _27225_buf, _1bc4b96d7_TypeEnum(_27252_k));
				return;;
			}
		}
		else if ((_1bc4b9c04_Slc(_27252_k) != nullptr)) {
			_case_begin_1c629a536:;
			{
				_1be00d559_slice(_self_, _27225_buf, _1bc4b9c04_Slc(_27252_k));
				return;;
			}
		}
		else if ((_1bc4ba73d_Map(_27252_k) != nullptr)) {
			_case_begin_1c629a5ad:;
			{
				_1be00d8bc_mapType(_self_, _27225_buf, _1bc4ba73d_Map(_27252_k));
				return;;
			}
		}
		else if ((_1bc4ba4a7_Trait(_27252_k) != nullptr)) {
			_case_begin_1c629a635:;
			{
				({
					auto except = _1a95679eb_WriteStr(_27225_buf, jule::Str::lit("jule::Trait", 11));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:308:4"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_1bc4b996d_Arr(_27252_k) != nullptr)) {
			_case_begin_1c629a6ac:;
			{
				_1be00e406_array(_self_, _27225_buf, _1bc4b996d_Arr(_27252_k));
				return;;
			}
		}
		else if ((_1bc4b9e8a_Fn(_27252_k) != nullptr)) {
			_case_begin_1c629a734:;
			{
				_1be010979_func(_self_, _27225_buf, _1bc4b9e8a_Fn(_27252_k));
				return;;
			}
		}
		_match_end_1c6299e5e:;
	};
	{
		auto &_match_expr{ (*(_27252_k))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data29)) {
			_case_begin_1c629a7bc:;
			{
				({
					auto except = _1a95679eb_WriteStr(_27225_buf, (*((*(_27252_k))._field_Kind.cast_ptr<_1be009eb2_customType>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data29)))._field_kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:319:4"));
					(except.result);
				});
			}
		}
		else {
			_case_begin_1c62a3eac:;
			{
				({
					auto except = _1a95679eb_WriteStr(_27225_buf, jule::Str::lit("[<unimplemented_type_kind>]", 27));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:321:4"));
					(except.result);
				});
			}
		}
		_match_end_1c62a3e46:;
	};
}








inline jule::Bool _1be0136c4_resultCoder_eq(_1be0136c4_resultCoder *_self_, _1be0136c4_resultCoder _other_) {
	return 
		(_self_->_field_tc == _other_._field_tc);
}

inline jule::Ptr<_1be0136c4_resultCoder> static__1be013bd0_new(jule::Ptr<_1be00aad9_typeCoder>* _34021_tc) {
	return jule::new_ptr<_1be0136c4_resultCoder>(_1be0136c4_resultCoder{._field_tc=(*(_34021_tc))});;
}



inline void _1be014043_ptr(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _34424_s, jule::Ptr<_1bc4c6903_Ptr> _34449_p) {
	({
		auto except = _1a95679eb_WriteStr(_34424_s, jule::Str::lit("p", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:345:3"));
		(except.result);
	});
	_1be015929_codeMut(_self_, _34424_s, &((*(_34449_p))._field_Elem));
}



inline void _1be0143a6_sptr(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _34925_s, jule::Ptr<_1bc4c313b_Sptr> _34950_p) {
	({
		auto except = _1a95679eb_WriteStr(_34925_s, jule::Str::lit("x", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:350:3"));
		(except.result);
	});
	_1be015929_codeMut(_self_, _34925_s, &((*(_34950_p))._field_Elem));
}



inline void _1be014719_mapType(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _35428_s, jule::Ptr<_1bc4c52a3_Map> _35453_p) {
	({
		auto except = _1a95679eb_WriteStr(_35428_s, jule::Str::lit("m", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:355:3"));
		(except.result);
	});
	_1be015929_codeMut(_self_, _35428_s, &((*(_35453_p))._field_Key));
	_1be015929_codeMut(_self_, _35428_s, &((*_35453_p.alloc)._field_Val));
}



inline void _1be014a7c_slice(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _36026_s, jule::Ptr<_1bc4c3b0e_Slc> _36051_slc) {
	({
		auto except = _1a95679eb_WriteStr(_36026_s, jule::Str::lit("s", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:361:3"));
		(except.result);
	});
	_1be015929_codeMut(_self_, _36026_s, &((*(_36051_slc))._field_Elem));
}



inline void _1be014de0_arr(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _36524_s, jule::Ptr<_1bc4c5e30_Arr> _36549_arr) {
	({
		auto except = _1a95679eb_WriteStr(_36524_s, jule::Str::lit("a", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:366:3"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_36524_s, _1ac596807_FmtInt(static_cast<jule::I64>((*(_36549_arr))._field_N), 16LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:367:3"));
		(except.result);
	});
	_1be015929_codeMut(_self_, _36524_s, &((*_36549_arr.alloc)._field_Elem));
}



inline void _1be015253_func(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _37125_s, jule::Ptr<_1bc302113_FnIns> _37150_f) {
	({
		auto except = _1a95679eb_WriteStr(_37125_s, jule::Str::lit("f", 1));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:372:3"));
		(except.result);
	});
	{
		auto expr = &((*(_37150_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62ab69b:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> _37315_p = *it;
			{
				if ((*((*(_37315_p))._field_Decl))._field_Reference) {
					({
						auto except = _1a95679eb_WriteStr(_37125_s, jule::Str::lit("r", 1));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:375:5"));
						(except.result);
					});
				};
				_1be015929_codeMut(_self_, _37125_s, &((*(_37315_p))._field_Type));
			}
			_iter_next_1c62ab69b:;
			++it;
			goto _iter_begin_1c62ab69b;
		}
		_iter_end_1c62ab69b:;
	};
	if (((*_37150_f.alloc)._field_Result != nullptr)) {
		_1be015929_codeMut(_self_, _37125_s, &((*_37150_f.alloc)._field_Result));
	};
}



inline void _1be0155b6_tup(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _38424_s, jule::Ptr<_1bc4c4703_Tuple> _38449_tup) {
	{
		auto expr = &((*(_38449_tup))._field_Types);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c62adb21:;
		if (it != expr_end) {
			jule::Ptr<_1bc4b64e7_Type> _38515_t = *it;
			{
				({
					auto except = _1a95679eb_WriteStr(_38424_s, jule::Str::lit("__jule_tuple_", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:386:4"));
					(except.result);
				});
				_1be015929_codeMut(_self_, _38424_s, &(_38515_t));
			}
			_iter_next_1c62adb21:;
			++it;
			goto _iter_begin_1c62adb21;
		}
		_iter_end_1c62adb21:;
	};
}



inline void _1be015929_codeMut(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _39128_s, jule::Ptr<_1bc4b64e7_Type>* _39154_t) {
	if (_1bc4b7394_Binded((*(_39154_t)).ptr())) {
		({
			auto except = _1a95679eb_WriteStr(_39128_s, jule::Str::lit("b", 1));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:400:4"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_39128_s, (*((*(_39154_t))))._field_BindIdent);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:401:4"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*((*(_39154_t))))._field_Kind };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28)) {
			_case_begin_1c62b02b5:;
			{
				_1be014043_ptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4c6903_Ptr>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data28));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)) {
			_case_begin_1c62b1294:;
			{
				_1be0143a6_sptr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4c313b_Sptr>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data26)) {
			_case_begin_1c62b0e20:;
			{
				_1be014719_mapType(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4c52a3_Map>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data26));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24)) {
			_case_begin_1c62b0e86:;
			{
				_1be014a7c_slice(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4c3b0e_Slc>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27)) {
			_case_begin_1c62b0eec:;
			{
				_1be014de0_arr(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4c5e30_Arr>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data27));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)) {
			_case_begin_1c62b1063:;
			{
				_1be015253_func(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc302113_FnIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3)) {
			_case_begin_1c62b14d6:;
			{
				jule::Ptr<_1bc30be20_Enum> _4184_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc30be20_Enum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3);;
				static__1bdc4bc48_toOut(_39128_s, (*(_4184_te))._field_Ident, static_cast<jule::Uintptr>(_4184_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4)) {
			_case_begin_1c62b154c:;
			{
				jule::Ptr<_1bc30d62a_TypeEnum> _4214_te = (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc30d62a_TypeEnum>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data4);;
				static__1bdc4bc48_toOut(_39128_s, (*(_4214_te))._field_Ident, static_cast<jule::Uintptr>(_4214_te));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)) {
			_case_begin_1c62b15b3:;
			{
				jule::Ptr<_1bc2810c5_StructIns> _4248_si = (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc2810c5_StructIns>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0);;
				static__1bdc4d420_structureIns(_39128_s, &(_4248_si));
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data2)) {
			_case_begin_1c62b1629:;
			{
				jule::Ptr<_1bc309769_Trait> _4278_trt = (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc309769_Trait>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data2);;
				static__1bdc4ca5c_traitDecl(_39128_s, _4278_trt);
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)) {
			_case_begin_1c62b16a1:;
			{
				({
					auto except = _1a95679eb_WriteStr(_39128_s, (*((*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4be610_Prim>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/type.jule:430:4"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data25)) {
			_case_begin_1c62b1728:;
			{
				_1be0155b6_tup(_self_, _39128_s, (*((*(_39154_t))))._field_Kind.cast_ptr<_1bc4c4703_Tuple>((jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data25));
			}
		}
		else {
			_case_begin_1c62b0da9:;
			{
				__jule_panic_s(jule::Str::lit("cxx: this panic call should be unreachable", 42) + jule::Str("\nlocation: julec/obj/cxx/type.jule:434:4"));;
			}
		}
		_match_end_1c62b0d43:;
	};
}



inline void _1be015c8c_codeMut1(_1be0136c4_resultCoder* _self_, _1a95669ea_Builder* _43829_s, jule::Ptr<_1bc4b64e7_Type>* _43855_t) {
	jule::Ptr<_1bc4c4703_Tuple> _4397_tup = _1bc4ba9c4_Tup((*(_43855_t)).ptr());;
	if ((_4397_tup != nullptr)) {
		_1be0155b6_tup(_self_, _43829_s, _4397_tup);
	} else {
		_1be010cdc_kind((*(_self_))._field_tc.ptr(), _43829_s, (*(_43855_t)));
	};
}



inline jule::Slice<jule::U8> _1be01609a_code(_1be0136c4_resultCoder* _self_, jule::Ptr<_1bc4b64e7_Type>* _44725_t) {
	_1a95669ea_Builder _4487_s = static__1a9567369_New(20LL);;
	_1be015929_codeMut(_self_, &(_4487_s), _44725_t);
	return _1a9568d2c_Buf(&_4487_s);;
}








inline jule::Bool _1c6bd2368_Flag_eq(_1c6bd2368_Flag *_self_, _1c6bd2368_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c6bd2654_Name(_1c6bd2368_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6bd2797_What(_1c6bd2368_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6bd28da_Reset(_1c6bd2368_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6bd2a2d_Short(_1c6bd2368_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c6bd5beb_Flag_eq(_1c6bd5beb_Flag *_self_, _1c6bd5beb_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c6bd5877_Name(_1c6bd5beb_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6bd5ed7_What(_1c6bd5beb_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6bd612a_Reset(_1c6bd5beb_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6bd626d_Short(_1c6bd5beb_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c6bd9408_Flag_eq(_1c6bd9408_Flag *_self_, _1c6bd9408_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c6bd9084_Name(_1c6bd9408_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6bd96e4_What(_1c6bd9408_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6bd9837_Reset(_1c6bd9408_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6bd997a_Short(_1c6bd9408_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c6bdcb59_Flag_eq(_1c6bdcb59_Flag *_self_, _1c6bdcb59_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c6bdc7d5_Name(_1c6bdcb59_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6bdce45_What(_1c6bdcb59_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6bdd088_Reset(_1c6bdcb59_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6bdd1cb_Short(_1c6bdcb59_Flag* _self_) {
	return (*(_self_))._field_short;;
}






inline jule::Bool _1c6be1366_Flag_eq(_1c6be1366_Flag *_self_, _1c6be1366_Flag _other_) {
	return 
		(_self_->_field_name == _other_._field_name) &&
		(_self_->_field_short == _self_->_field_short) &&
		(_self_->_field_default == _self_->_field_default) &&
		(_self_->_field_what == _self_->_field_what) &&
		(_self_->_field_data == _self_->_field_data);
}

inline jule::Str _1c6be0ee2_Name(_1c6be1366_Flag* _self_) {
	return (*(_self_))._field_name;;
}



inline jule::Str _1c6be1652_What(_1c6be1366_Flag* _self_) {
	return (*(_self_))._field_what;;
}



inline void _1c6be1795_Reset(_1c6be1366_Flag* _self_) {
	(*((*(_self_))._field_data))=(*(_self_))._field_default;
}



inline jule::I32 _1c6be18d8_Short(_1c6be1366_Flag* _self_) {
	return (*(_self_))._field_short;;
}







inline jule::Ptr<_1be0a7724_FlagSet> static__1be0a7a43_New(void) {
	return jule::new_ptr<_1be0a7724_FlagSet>(_1be0a7724_FlagSet{._field_flags=({ auto __jule_collection = jule::Slice<jule::Trait>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Trait(nullptr); __jule_collection; })});;
}



inline jule::Trait _1be0a7ee9_FindFlag(_1be0a7724_FlagSet* _self_, jule::Str _7124_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6beb371:;
		if (it != expr_end) {
			jule::Trait _7215_flag = *it;
			{
				if ((((_1be0a5b51_CommonFlagMptrData*)_7215_flag.safe_type())->_1bcdd5be6_Name(_7215_flag.data) == _7124_name)) {
					return _7215_flag;;
				};
			}
			_iter_next_1c6beb371:;
			++it;
			goto _iter_begin_1c6beb371;
		}
		_iter_end_1c6beb371:;
	};
	return nullptr;;
}



inline jule::Trait _1be0a833a_FindFlagShort(_1be0a7724_FlagSet* _self_, jule::I32 _8129_name) {
	{
		auto expr = &((*(_self_))._field_flags);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6beb915:;
		if (it != expr_end) {
			jule::Trait _8215_flag = *it;
			{
				if ((((_1be0a5b51_CommonFlagMptrData*)_8215_flag.safe_type())->_1bcdd5d39_Short(_8215_flag.data) == _8129_name)) {
					return _8215_flag;;
				};
			}
			_iter_next_1c6beb915:;
			++it;
			goto _iter_begin_1c6beb915;
		}
		_iter_end_1c6beb915:;
	};
	return nullptr;;
}



inline jule::Exceptional<jule::Slice<jule::Str>> _1be0a8912_Parse(_1be0a7724_FlagSet* _self_, jule::Slice<jule::Str> _11521_args) {
	_1be0aa1d8_argParser _1167_ap = _1be0aa1d8_argParser{._field_set=(*(_self_)), ._field_args=_11521_args, ._field_content=jule::Slice<jule::Str>(nullptr), ._field_i=0};;
	({
		auto except = _1be0ab717_parse(&_1167_ap);
		if (!except.ok()) {
			return jule::Exceptional<jule::Slice<jule::Str>>{.error=except.error};
		}
	});
	return jule::Exceptional<jule::Slice<jule::Str>>{.result=_1167_ap._field_content};;
}



inline jule::Ptr<_1c6be1366_Flag> _1c70800b7_addFlagCommon(_1be0a7724_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1be0a7ee9_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1be0a833a_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c6be1366_Flag> _1407_flag = jule::new_ptr<_1c6be1366_Flag>(_1c6be1366_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=jule::Str(), ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Str>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data4)); };
	return _1407_flag;;
}

inline jule::Ptr<_1c6bdcb59_Flag> _1c708918c_addFlagCommon(_1be0a7724_FlagSet* _self_, jule::Str _13132_name, jule::I32 _13143_short, jule::Str _13156_what) {
	if ((_1be0a7ee9_FindFlag(_self_, _13132_name) != nullptr)) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this name: ", 58) + _13132_name) + jule::Str("\nlocation: std/flag/flag.jule:133:4"));;
	};
	if (((_13143_short != 0LL) && (_1be0a833a_FindFlagShort(_self_, _13143_short) != nullptr))) {
		__jule_panic_s((jule::Str::lit("flag: FlagSet.Add[T]: flag is already exist in this short name: ", 64) + __jule_strFromRune(_13143_short)) + jule::Str("\nlocation: std/flag/flag.jule:137:4"));;
	};
	jule::Ptr<_1c6bdcb59_Flag> _1407_flag = jule::new_ptr<_1c6bdcb59_Flag>(_1c6bdcb59_Flag{._field_name=_13132_name, ._field_short=_13143_short, ._field_default=false, ._field_what=_13156_what, ._field_data=jule::Ptr<jule::Bool>(nullptr)});;
	{ jule::Slice<jule::Trait> &__jule_push_dest = (*(_self_))._field_flags; __jule_push_dest.push(jule::Trait(_1407_flag, (jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data3)); };
	return _1407_flag;;
}



inline void _1c707c889_AddVar(_1be0a7724_FlagSet* _self_, jule::Ptr<jule::Str> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c6be1366_Flag> _1717_flag = _1c70800b7_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}

inline void _1c70869a3_AddVar(_1be0a7724_FlagSet* _self_, jule::Ptr<jule::Bool> _16759_var, jule::Str _16768_name, jule::I32 _16779_short, jule::Str _16792_what) {
	if ((_16759_var == nullptr)) {
		__jule_panic_s(jule::Str::lit("flag: FlatSet.AddVar[T]: variable is nil", 40) + jule::Str("\nlocation: std/flag/flag.jule:169:4"));;
	};
	jule::Ptr<_1c6bdcb59_Flag> _1717_flag = _1c708918c_addFlagCommon(_self_, _16768_name, _16779_short, _16792_what);;
	(*(_1717_flag))._field_default=(*(_16759_var));
	(*_1717_flag.alloc)._field_data=_16759_var;
}







inline __jule_tuple_i64__jule_tuple_bool _1c6c04137_parseInteger(_1be0aa1d8_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c6c06aeb:;
			{
				__jule_func_result.__jule_result_arg0 = 0LL;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1abb2d9c7_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c6c06dd7:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1abb2d9c7_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c6c06799:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1abb2d9c7_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c6c06810:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c6c06876:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c6c06733:;
			{
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c6c06623:;
	};
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool _1c6c0bc11_parseInteger(_1be0aa1d8_argParser* _self_, jule::Str* _18528_s, jule::Fn<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32> _18536_parser) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	{
		
		if (((*(_18528_s))).empty()) {
			_case_begin_1c6c0e75d:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = false;
				return __jule_func_result;;
			}
		}
		else if (_1abb2d9c7_HasPrefix((*(_18528_s)), jule::Str::lit("0x", 2))) {
			_case_begin_1c6c0ea49:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 16LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1abb2d9c7_HasPrefix((*(_18528_s)), jule::Str::lit("0b", 2))) {
			_case_begin_1c6c0e40b:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 2LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (_1abb2d9c7_HasPrefix((*(_18528_s)), jule::Str::lit("0o", 2))) {
			_case_begin_1c6c0e472:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(2LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else if (((*(_18528_s))[0LL] == '0')) {
			_case_begin_1c6c0e4d8:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)).slice(1LL), 8LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		else {
			_case_begin_1c6c0e395:;
			{
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _18536_parser((*(_18528_s)), 10LL);
					__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
					__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
				});
			}
		}
		_match_end_1c6c0e285:;
	};
	return __jule_func_result;;
}



inline jule::Str _1be0aaa35_getData(_1be0aa1d8_argParser* _self_) {
	if ((((*(_self_))._field_i + 1LL) >= (*(_self_))._field_args.len())) {
		return jule::Str();;
	};
	((*(_self_))._field_i)++;
	return (*(_self_))._field_args[(*(_self_))._field_i];;
}



inline jule::VoidExceptional _1be0aacaa_processFlag(_1be0aa1d8_argParser* _self_, jule::Trait* _21232_flag) {
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data3)) {
			_case_begin_1c6c012dd:;
			{
				jule::Ptr<_1c6bdcb59_Flag> _2158_bf = (*(_21232_flag)).cast_ptr<_1c6bdcb59_Flag>((jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data3);;
				(*((*(_2158_bf))._field_data))=(!((*_2158_bf.alloc)._field_default));
				return jule::VoidExceptional{};;
			}
		}
		_match_end_1c6c01277:;
	};
	jule::Str _2203_data = _1be0aaa35_getData(_self_);;
	if ((_2203_data).empty()) {
		return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1be0a5b51_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bcdd5be6_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression missing", 20)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
	};
	{
		auto &_match_expr{ (*(_21232_flag)) };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data0)) {
			_case_begin_1c6c031e1:;
			{
				jule::Ptr<_1c6bd2368_Flag> _2278_intf = (*(_21232_flag)).cast_ptr<_1c6bd2368_Flag>((jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data0);;
				jule::Bool _22818_ok;
				({
					__jule_tuple_i64__jule_tuple_bool __jule_assign_result = _1c6c04137_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_i64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1c6c07b74, nullptr, nullptr));
					(*((*(_2278_intf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_22818_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_22818_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1be0a5b51_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bcdd5be6_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid signed integer", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data1)) {
			_case_begin_1c6c02b4c:;
			{
				jule::Ptr<_1c6bd5beb_Flag> _2358_uintf = (*(_21232_flag)).cast_ptr<_1c6bd5beb_Flag>((jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data1);;
				jule::Bool _23619_ok;
				({
					__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1c6c0bc11_parseInteger(_self_, &(_2203_data), jule::__new_closure<__jule_tuple_u64__jule_tuple_bool,jule::Str,jule::I32>((void*)__jule_anon1c6c107d6, nullptr, nullptr));
					(*((*(_2358_uintf))._field_data)) = __jule_assign_result.__jule_result_arg0;
					_23619_ok = __jule_assign_result.__jule_result_arg1;
				});
				if ((!(_23619_ok))) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1be0a5b51_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bcdd5be6_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid unsigned integer", 43)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data2)) {
			_case_begin_1c6c03257:;
			{
				jule::Ptr<_1c6bd9408_Flag> _2438_ff = (*(_21232_flag)).cast_ptr<_1c6bd9408_Flag>((jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data2);;
				(*((*(_2438_ff))._field_data))=({
					auto except = _1ac586d25_ParseFloat(_2203_data, 64LL);
					(except.ok()) ? (except.result) : ({{

						return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("--", 2)); size += part0.len(); jule::Str part1 = std::move(((_1be0a5b51_CommonFlagMptrData*)(*(_21232_flag)).safe_type())->_1bcdd5be6_Name((*(_21232_flag)).data)); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(": expression must be valid floating-point", 41)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
					} 0;});
				});
			}
		}
		else if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data4)) {
			_case_begin_1c6c032bd:;
			{
				(*((*((*(_21232_flag)).cast_ptr<_1c6be1366_Flag>((jule::Trait::Type*)&_1be0a5b51_CommonFlag_mptr_data4)))._field_data))=_2203_data;
			}
		}
		_match_end_1c6c02982:;
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1be0ab063_singleDash(_1be0aa1d8_argParser* _self_, jule::Str* _25227_arg) {
	if (((*(_25227_arg)).len() == 1LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_25227_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	{
		auto expr = (*(_25227_arg)).slice(1LL);
		jule::U8 *it = expr.begin();
		const jule::U8 *end = it + expr.len();
		jule::Int len;
		jule::I32 _25710_r;
		_iter_begin_1c6c16358:;
		__jule_runeStep(it, end - it, &_25710_r, &len);
		if (it < end) {
			{
				jule::Trait _2588_flag = _1be0a833a_FindFlagShort(&(*(_self_))._field_set, _25710_r);;
				if ((_2588_flag == nullptr)) {
					return jule::VoidExceptional{.error=jule::Any(({ jule::Int size = 0; jule::Str part0 = std::move((*(_25227_arg))); size += part0.len(); jule::Str part1 = std::move(jule::Str::lit(": flag is not exist: ", 21)); size += part1.len(); jule::Str part2 = std::move(__jule_strFromRune(_25710_r)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); }), &__jule_any_type5)};
				};
				({
					auto except = _1be0aacaa_processFlag(_self_, &(_2588_flag));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
			}
			_iter_next_1c6c16358:;
			it += len;
			goto _iter_begin_1c6c16358;
		}
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1be0ab31b_doubleDash(_1be0aa1d8_argParser* _self_, jule::Str* _26627_arg) {
	if (((*(_26627_arg)).len() == 2LL)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": missing argument", 18)), &__jule_any_type5)};
	};
	jule::Trait _2707_flag = _1be0a7ee9_FindFlag(&(*(_self_))._field_set, (*(_26627_arg)).slice(2LL));;
	if ((_2707_flag == nullptr)) {
		return jule::VoidExceptional{.error=jule::Any(((*(_26627_arg)) + jule::Str::lit(": flag is not exist", 19)), &__jule_any_type5)};
	};
	return _1be0aacaa_processFlag(_self_, &(_2707_flag));
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1be0ab519_tryArg(_1be0aa1d8_argParser* _self_) {
	jule::Str _2783_arg = (*(_self_))._field_args[(*(_self_))._field_i];;
	if (((*(_self_))._field_args.len() == 0LL)) {
		return jule::VoidExceptional{};;
	};
	if ((_2783_arg[0LL] == '-')) {
		if (((_2783_arg.len() > 1LL) && (_2783_arg[1LL] == '-'))) {
			({
				auto except = _1be0ab31b_doubleDash(_self_, &(_2783_arg));
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
			return jule::VoidExceptional{};;
		};
		({
			auto except = _1be0ab063_singleDash(_self_, &(_2783_arg));
			if (!except.ok()) {
				return jule::VoidExceptional{.error=std::move(except.error)};
			}
		});
		return jule::VoidExceptional{};;
	};
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_self_))._field_content; __jule_push_dest.push(_2783_arg); };
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional _1be0ab717_parse(_1be0aa1d8_argParser* _self_) {
	for (; ((*(_self_))._field_i < (*(_self_))._field_args.len()); ((*(_self_))._field_i)++) {
		{
			({
				auto except = _1be0ab519_tryArg(_self_);
				if (!except.ok()) {
					return jule::VoidExceptional{.error=std::move(except.error)};
				}
			});
		}
	_iter_next_1c6c1ad85:;
	}
	_iter_end_1c6c1ad85:;;
	return jule::VoidExceptional{};
}








inline jule::Bool _1a9c2b05a_Dir_eq(_1a9c2b05a_Dir *_self_, _1a9c2b05a_Dir _other_) {
	return 
		(_self_->_field_Name == _other_._field_Name) &&
		_1a9cc3e6b_Stat_eq(&_self_->_field_Stat, _self_->_field_Stat);
}

inline jule::Exceptional<jule::Slice<_1a9c2b05a_Dir>> static__1abb3d168_Read(jule::Str _1117_path) {
	jule::Slice<_1a9c2b05a_Dir> __jule_func_result;
	jule::Slice<jule::U8> _123_s = _1c2ee99d6_StrToBytes(_1117_path);;
	DIR* _137_dir = _1c300a068_Opendir((&(_123_s[0LL])));;
	if ((_137_dir == nullptr)) {
		return jule::Exceptional<jule::Slice<_1a9c2b05a_Dir>>{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	for (;;) {
		{
			struct dirent* _184_dirent = _1c300a244_Readdir(_137_dir);;
			if ((_184_dirent == nullptr)) {
				goto _iter_end_1c00ee979;
			};
			jule::Str _224_name = _1c2ee9750_BytePtrToStr(((jule::U8*)((*(_184_dirent)).d_name)));;
			_1a9cc3e6b_Stat _238_stat = ({
				auto except = static__1a9c2d0a1_Of(_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1117_path; (*it++) = _224_name; __jule_collection; })));
				(except.ok()) ? (except.result) : ({{

					return jule::Exceptional<jule::Slice<_1a9c2b05a_Dir>>{.error=except.error};
				} _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};});
			});;
			{ jule::Slice<_1a9c2b05a_Dir> &__jule_push_dest = __jule_func_result; __jule_push_dest.push(_1a9c2b05a_Dir{._field_Name=_224_name, ._field_Stat=_238_stat}); };
		}
	_iter_next_1c00ee979:;
	}
	_iter_end_1c00ee979:;;
	_1c300a4db_Closedir(_137_dir);
	return jule::Exceptional<jule::Slice<_1a9c2b05a_Dir>>{.result=__jule_func_result};;
}



inline jule::VoidExceptional static__1abb3d366_Create(jule::Str _3419_path) {
	jule::Slice<jule::U8> _383_s = _1c2ee99d6_StrToBytes(_3419_path);;
	if ((_1c300ade3_Mkdir((&(_383_s[0LL])), 448LL) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}



inline jule::VoidExceptional static__1abb3d597_Remove(jule::Str _4519_path) {
	jule::Slice<jule::U8> _463_s = _1c2ee99d6_StrToBytes(_4519_path);;
	if ((_1c300b1ac_Rmdir((&(_463_s[0LL]))) != 0LL)) {
		return jule::VoidExceptional{.error=jule::Any(_1a9cd8711_getLastFsError(), &__jule_any_type0)};
	};
	return jule::VoidExceptional{};
}







inline jule::Ptr<_1a9c2bb82_Cmd> static__1a9c2c0d3_New(jule::Str _3516_path) {
	return jule::new_ptr<_1a9c2bb82_Cmd>(_1a9c2bb82_Cmd{._field_attrs=_1a9cc1d04_cmdAttrs{._field_pid=-1LL}, ._field_path=_3516_path, ._field_Args=jule::Slice<jule::Str>(nullptr), ._field_Env=jule::Slice<jule::Str>(nullptr)});;
}



inline jule::VoidExceptional _1a9c2c2d1_Spawn(_1a9c2bb82_Cmd* _self_) {
	return _1a9cc2aa2_spawn(_self_);
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a9c2c765_Wait(_1a9c2bb82_Cmd* _self_) {
	return _1a9cc3036_wait(_self_);
}



inline jule::VoidExceptional _1a9cc2aa2_spawn(_1a9c2bb82_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid != -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is already spawned", 35) + jule::Str("\nlocation: std/os/cmd_unix.jule:84:4"));;
	};
	jule::Str _863_path = (*(_self_))._field_path;;
	jule::Array<signed,2> _877_pipe;;
	if ((pipe((&(_877_pipe[0LL]))) == -1LL)) {
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type139)};
	};
	jule::I32 _913_pipe0 = static_cast<jule::I32>(_877_pipe[0LL]);;
	jule::I32 _923_pipe1 = static_cast<jule::I32>(_877_pipe[1LL]);;
	if ((_1c3008e46_Fcntl(_923_pipe1, F_SETFD, (fcntl(_923_pipe1, F_GETFD) | FD_CLOEXEC)) == -1LL)) {
		_1c304390e_Close(_913_pipe0);
		_1c304390e_Close(_923_pipe1);
		return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type139)};
	};
	(*(_self_))._field_attrs._field_pid=fork();
	{
		auto &_match_expr{ (*(_self_))._field_attrs._field_pid };
		
		if (_match_expr == -1LL) {
			_case_begin_1c010e439:;
			{
				return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(3LL), &__jule_any_type139)};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c010e2e6:;
			{
				_1c304390e_Close(_913_pipe0);
				jule::Slice<jule::Str> _1048_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(1LL, (1LL + (*(_self_))._field_Args.len())); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
				_1048_args[0LL]=_863_path;
				(_1048_args).append((*(_self_))._field_Args);;
				({
					auto except = _1a9cc281b_setenv(&((*(_self_))._field_Env));
					if (!except.ok()) {
						return jule::VoidExceptional{.error=std::move(except.error)};
					}
				});
				_1a9cc25da_execvp(&(_863_path), &(_1048_args));
				jule::Str _1094_code = _1a9c81247_Itoa(_1c174a337_GetLastErrno());;
				{
					_1c3043cb6_Write(_923_pipe1, (&(_1094_code[0LL])), static_cast<jule::U32>(_1094_code.len()));
				};
				_1c304390e_Close(_923_pipe1);
				_1a9cd29e6_Exit(1LL);
			}
		}
		else {
			_case_begin_1c0109d2a:;
			{
				_1c304390e_Close(_923_pipe1);
				jule::Array<jule::U8,16> _11512_buf = ({ auto __jule_collection = jule::Array<jule::U8,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
				jule::I32 _1164_n = _1c3043535_Read(_913_pipe0, (&(_11512_buf[0LL])), static_cast<jule::U32>(16LLU));;
				_1c304390e_Close(_913_pipe0);
				if ((_1164_n != 0LL)) {
					(*(_self_))._field_attrs._field_pid=-1LL;
					jule::I32 _1205_code;
					({
						__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1a9c77826_AtoiBp((&(_11512_buf[0LL])), _1164_n);
						_1205_code = __jule_assign_result.__jule_result_arg0;
					});
					return jule::VoidExceptional{.error=jule::Any(_1a9cc33bb_cmdErrorFromCode(_1205_code), &__jule_any_type139)};
				};
			}
		}
		_match_end_1c010c965:;
	};
	return jule::VoidExceptional{};
}



inline jule::Exceptional<jule::I32> _1a9cc3036_wait(_1a9c2bb82_Cmd* _self_) {
	if (((*(_self_))._field_attrs._field_pid == -1LL)) {
		__jule_panic_s(jule::Str::lit("process: command is not spawned", 31) + jule::Str("\nlocation: std/os/cmd_unix.jule:138:4"));;
	};
	jule::I32 _1407_stat = 0LL;;
	{
		if ((waitpid((*(_self_))._field_attrs._field_pid, ((signed*)((&(_1407_stat)))), 0LL) == -1LL)) {
			return jule::Exceptional<jule::I32>{.error=jule::Any(_1a9cc35ca_getLastCmdError(), &__jule_any_type139)};
		};
	};
	(*(_self_))._field_attrs._field_pid=-1LL;
	return jule::Exceptional<jule::I32>{.result=WEXITSTATUS(_1407_stat)};;
}







inline __jule_tuple_x_1bcdbd492_IR__jule_tuple_s_1a9575ca1_Log static__1bcdbd96a_Build(jule::Str _3018_path, jule::I32 _3029_flags) {
	__jule_tuple_x_1bcdbd492_IR__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	jule::Ptr<_1bcdbaa44_Importer> _317_importer = static__1bcdbae73_New(_1bcdc041c_buildCompileInfo());;
	;
	jule::Slice<jule::Ptr<_1bc25aa50_AST>> _337_files;
	jule::Slice<_1a9575ca1_Log> _3318_logs;
	({
		__jule_tuple_sx_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcdbc45d_ImportPackage(_317_importer.ptr(), _3018_path, true);
		_337_files = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Str _373_root = _3018_path;;
	if ((_337_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc25aa50_AST> _457_firstFile = _337_files[0LL];;
	_1bcdc06c5_pushRuntimeToAST(&(_457_firstFile));
	jule::Ptr<_1bc3e0421_Package> _487_pkg;
	({
		__jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bc4d7c44_AnalyzePackage(_337_files, jule::Trait(_317_importer, (jule::Trait::Type*)&_1bc3d9b9b_Importer_mptr_data0), _3029_flags);
		_487_pkg = __jule_assign_result.__jule_result_arg0;
		_3318_logs = __jule_assign_result.__jule_result_arg1;
	});
	if ((_3318_logs.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = _3318_logs;
		return __jule_func_result;;
	};
	jule::Ptr<_1bcdbd492_IR> _537_ir = jule::new_ptr<_1bcdbd492_IR>(_1bcdbd492_IR{._field_Root=_373_root, ._field_Passes=jule::Slice<jule::Str>(nullptr), ._field_Main=_487_pkg, ._field_Runtime=jule::Ptr<_1bc3dcb9e_ImportInfo>(nullptr), ._field_Used=_1bcdbb209_AllPackages(_317_importer.ptr()), ._field_Ordered=_1bcdcc34c_OrderedDefines{._field_Structs=jule::Slice<jule::Ptr<_1bc27d26a_Struct>>(nullptr), ._field_Globals=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)}});;
	(*(_537_ir))._field_Passes=_1bcdc020d_getAllUniquePasses(&((*_537_ir.alloc)._field_Main), (*_537_ir.alloc)._field_Used);
	(*_537_ir.alloc)._field_Runtime=(*((*(_487_pkg))._field_Files[0LL]))._field_Imports[0LL];
	__jule_func_result.__jule_result_arg0 = _537_ir;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline void _1bcdbde54_appendStructs(_1bcdbd492_IR* _self_, jule::Ptr<_1bc3e0421_Package>* _6830_p, jule::Slice<jule::Ptr<_1bc27d26a_Struct>>* _6854_buffer) {
	{
		auto expr = &((*((*(_6830_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65e9610:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _6915_f = *it;
			{
				{
					auto expr = &((*(_6915_f))._field_Structs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c675a9b3:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> _7016_s = *it;
						{
							if ((!((*(_7016_s))._field_Binded))) {
								{ jule::Slice<jule::Ptr<_1bc27d26a_Struct>> &__jule_push_dest = (*(_6854_buffer)); __jule_push_dest.push(_7016_s); };
							};
						}
						_iter_next_1c675a9b3:;
						++it;
						goto _iter_begin_1c675a9b3;
					}
					_iter_end_1c675a9b3:;
				};
			}
			_iter_next_1c65e9610:;
			++it;
			goto _iter_begin_1c65e9610;
		}
		_iter_end_1c65e9610:;
	};
}



inline jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _1bcdbe1da_GetAllStructures(_1bcdbd492_IR* _self_) {
	jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _8111_buffer = nullptr;;
	_1bcdbde54_appendStructs(_self_, &((*(_self_))._field_Main), &(_8111_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c675bb18:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _8315_u = *it;
			{
				if ((!((*(_8315_u))._field_Binded))) {
					_1bcdbde54_appendStructs(_self_, &((*_8315_u.alloc)._field_Package), &(_8111_buffer));
				};
			}
			_iter_next_1c675bb18:;
			++it;
			goto _iter_begin_1c675bb18;
		}
		_iter_end_1c675bb18:;
	};
	return _8111_buffer;;
}



inline void _1bcdbe54d_appendGlobals(_1bcdbd492_IR* _self_, jule::Ptr<_1bc3e0421_Package>* _9130_p, jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _9154_buffer) {
	{
		auto expr = &((*((*(_9130_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c675d268:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _9215_f = *it;
			{
				{
					auto expr = &((*(_9215_f))._field_Vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c675dc5d:;
					if (it != expr_end) {
						jule::Ptr<_1bc42dc12_Var> _9316_v = *it;
						{
							if (((((*(_9316_v))._field_Token != nullptr) && (!((*_9316_v.alloc)._field_Binded))) && (!((*_9316_v.alloc)._field_Constant)))) {
								{ jule::Slice<jule::Ptr<_1bc42dc12_Var>> &__jule_push_dest = (*(_9154_buffer)); __jule_push_dest.push(_9316_v); };
							};
						}
						_iter_next_1c675dc5d:;
						++it;
						goto _iter_begin_1c675dc5d;
					}
					_iter_end_1c675dc5d:;
				};
			}
			_iter_next_1c675d268:;
			++it;
			goto _iter_begin_1c675d268;
		}
		_iter_end_1c675d268:;
	};
}



inline jule::Slice<jule::Ptr<_1bc42dc12_Var>> _1bcdbe7d4_GetAllGlobals(_1bcdbd492_IR* _self_) {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _10411_buffer = nullptr;;
	_1bcdbe54d_appendGlobals(_self_, &((*(_self_))._field_Main), &(_10411_buffer));
	{
		auto expr = &((*(_self_))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67605de:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _10615_u = *it;
			{
				if ((!((*(_10615_u))._field_Binded))) {
					_1bcdbe54d_appendGlobals(_self_, &((*_10615_u.alloc)._field_Package), &(_10411_buffer));
				};
			}
			_iter_next_1c67605de:;
			++it;
			goto _iter_begin_1c67605de;
		}
		_iter_end_1c67605de:;
	};
	return _10411_buffer;;
}



inline void _1bcdbe9d2_Order(_1bcdbd492_IR* _self_) {
	(*(_self_))._field_Ordered._field_Globals=_1bcdbe7d4_GetAllGlobals(_self_);
	(*(_self_))._field_Ordered._field_Structs=_1bcdbe1da_GetAllStructures(_self_);
	_1c67621e5_order((*(_self_))._field_Ordered._field_Globals);
	_1c6762cc8_order((*(_self_))._field_Ordered._field_Structs);
}







inline void _1c17a029e_Free(void* _4520_ptr) {
	free(_4520_ptr);
}



inline jule::Str _1c2ee9750_BytePtrToStr(jule::U8* _6524_s) {
	if ((_6524_s == nullptr)) {
		return jule::Str();;
	};
	jule::I32 _696_n = 0LL;;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {};
	};
	if ((_696_n == 0LL)) {
		return jule::Str();;
	};
	jule::Slice<jule::U8> _776_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_696_n, _696_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_696_n=0LL;
	{
		for (; (_6524_s[_696_n] != 0LLU); (_696_n)++) {
			{
				_776_buf[_696_n]=_6524_s[_696_n];
			}
		_iter_next_1be0d450e:;
		}
		_iter_end_1be0d450e:;;
	};
	return __jule_bytesToStr(_776_buf);;
}



inline jule::Slice<jule::U8> _1c2ee99d6_StrToBytes(jule::Str _9015_s) {
	{
		auto expr = &(_9015_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be0d4a09:;
		if (it != expr_end) {
			jule::I32 _916_i = it - expr->begin();
			jule::U8 *_919_b = it;
			{
				if (((*(_919_b)) == 0LLU)) {
					jule::Slice<jule::U8> _938_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_916_i + 1LL), (_916_i + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
					jule::copy(_938_bytes, _9015_s.slice(0LL, _938_bytes.len()));
					return _938_bytes;;
				};
			}
			_iter_next_1be0d4a09:;
			++it;
			_916_i++;
			goto _iter_begin_1be0d4a09;
		}
		_iter_end_1be0d4a09:;
	};
	jule::Slice<jule::U8> _986_bytes = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc((_9015_s.len() + 1LL), (_9015_s.len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_986_bytes, _9015_s);
	return _986_bytes;;
}



inline jule::I32 _1c174a337_GetLastErrno(void) {
	return errno;;
}



inline jule::I32 _1c3008e46_Fcntl(jule::I32 _5510_handle, jule::I32 _5523_cmd, jule::I32 _5533_arg) {
	return fcntl(_5510_handle, _5523_cmd, _5533_arg);;
}



inline jule::I32 _1c30092ba_Stat(jule::U8* _6016_path, struct stat* _6033_stat) {
	return stat(((char*)(_6016_path)), _6033_stat);;
}



inline jule::I32 _1c30096e9_Open(jule::U8* _6516_path, jule::I32 _6529_flag, jule::I32 _6540_mode) {
	return open(((char*)(_6516_path)), _6529_flag, _6540_mode);;
}



inline jule::U8* _1c3009a6d_Getcwd(jule::U8* _7118_buff, jule::U32 _7131_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_7118_buff)), _7131_bufflen)));;
}



inline DIR* _1c300a068_Opendir(jule::U8* _7619_path) {
	return opendir(((char*)(_7619_path)));;
}



inline struct dirent* _1c300a244_Readdir(DIR* _7923_dir) {
	return readdir(_7923_dir);;
}



inline jule::I32 _1c300a4db_Closedir(DIR* _8224_dir) {
	return closedir(_8224_dir);;
}



inline jule::I32 _1c300ade3_Mkdir(jule::U8* _9117_path, jule::I32 _9130_mode) {
	return mkdir(((char*)(_9117_path)), _9130_mode);;
}



inline jule::I32 _1c300b1ac_Rmdir(jule::U8* _9617_path) {
	return rmdir(((char*)(_9617_path)));;
}



inline jule::I32 _1c300b476_Unlink(jule::U8* _9918_path) {
	return unlink(((char*)(_9918_path)));;
}



inline jule::I32 _1c3043535_Read(jule::I32 _2016_handle, void* _2033_buff, jule::U32 _2048_n) {
	return read(_2016_handle, _2033_buff, _2048_n);;
}



inline jule::I32 _1c304390e_Close(jule::I32 _2510_handle) {
	return close(_2510_handle);;
}



inline jule::I32 _1c3043cb6_Write(jule::I32 _2817_handle, void* _2830_buff, jule::U32 _2845_n) {
	return write(_2817_handle, _2830_buff, _2845_n);;
}



inline void _1c3043ee7_Exit(jule::I32 _339_code) {
	exit(_339_code);
}



inline jule::Str _1c3049a03_Str(jule::U8* _108_b, jule::I32 _1018_n) {
	jule::Str _116_s = jule::Str();;
	{
		_116_s.buffer = jule::Ptr<jule::U8>::make(_108_b, nullptr);
		_116_s._len = _1018_n;
		_116_s._slice = _108_b;
	};
	return _116_s;;
}



inline jule::Slice<jule::U8> _1be141ba9_Slice(jule::U8* _2216_e, jule::I32 _2226_len, jule::I32 _2236_cap) {
	jule::Slice<jule::U8> _236_buf = static_cast<jule::Slice<jule::U8>>(nullptr);;
	{
		_236_buf.data = jule::Ptr<jule::U8>::make(_2216_e, nullptr);
		_236_buf._len = _2226_len;
		_236_buf._cap = _2236_cap;
		_236_buf._slice = _2216_e;
	};
	return _236_buf;;
}



inline jule::Slice<jule::U8> _1c3060bb2_StrBytes(jule::Str _4013_s) {
	if ((_4013_s.len() == 0LL)) {
		return nullptr;;
	};
	return _1be141ba9_Slice((&(_4013_s[0LL])), _4013_s.len(), _4013_s.len());;
}



inline jule::Str _1c3060e48_BytesStr(jule::Slice<jule::U8> _4913_b) {
	if ((_4913_b.len() == 0LL)) {
		return jule::Str();;
	};
	return _1c3049a03_Str((&(_4913_b[0LL])), _4913_b.len());;
}



inline jule::Str _1c3061212_StrFromBytes(jule::Slice<jule::U8> _5717_b) {
	return (*(((jule::Str*)((&(_5717_b))))));;
}



inline __jule_tuple_i32__jule_tuple_int _1a952db16_DecodeRune(jule::Slice<jule::U8> _18215_p) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_18215_p.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _1862_p0 = _18215_p[0LL];;
	jule::U8 _1872_x = _1a952c87e_first[static_cast<jule::I32>(_1862_p0)];;
	if ((_1872_x >= 240LLU)) {
		jule::I32 _1923_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_1872_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_18215_p[0LL]) & (~(_1923_mask))) | (65533LL & _1923_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _1952_sz = static_cast<jule::I32>((_1872_x & 7LLU));;
	_1a952ce34_acceptRange _1962_accept = _1a952d2ca_acceptRanges[static_cast<jule::I32>((_1872_x >> 4LLU))];;
	if ((_18215_p.len() < _1952_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2002_b1 = _18215_p[1LL];;
	if (((_2002_b1 < _1962_accept._field_lo) || (_1962_accept._field_hi < _2002_b1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_1862_p0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2002_b1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2072_b2 = _18215_p[2LL];;
	if (((_2072_b2 < 128LLU) || (191LL < _2072_b2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_1952_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_1862_p0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2072_b2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2142_b3 = _18215_p[3LL];;
	if (((_2142_b3 < 128LLU) || (191LL < _2142_b3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_1862_p0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2002_b1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2072_b2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2142_b3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a952de57_DecodeRuneStr(jule::Str _22918_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_22918_s.len() < 1LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::U8 _2332_s0 = _22918_s[0LL];;
	jule::U8 _2342_x = _1a952c87e_first[static_cast<jule::I32>(_2332_s0)];;
	if ((_2342_x >= 240LLU)) {
		jule::I32 _2393_mask = (({ jule::I32 __jule_x = static_cast<jule::I32>(_2342_x); jule::I32 __jule_y = 31LL; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 31LL);;
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>(_22918_s[0LL]) & (~(_2393_mask))) | (65533LL & _2393_mask));
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _2422_sz = static_cast<jule::I32>((_2342_x & 7LLU));;
	_1a952ce34_acceptRange _2432_accept = _1a952d2ca_acceptRanges[static_cast<jule::I32>((_2342_x >> 4LLU))];;
	if ((_22918_s.len() < _2422_sz)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::U8 _2472_s1 = _22918_s[1LL];;
	if (((_2472_s1 < _2432_accept._field_lo) || (_2432_accept._field_hi < _2472_s1))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 2LL)) {
		__jule_func_result.__jule_result_arg0 = ((static_cast<jule::I32>((_2332_s0 & 31LLU)) << 6LL) | static_cast<jule::I32>((_2472_s1 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 2LL;
		return __jule_func_result;;
	};
	jule::U8 _2542_s2 = _22918_s[2LL];;
	if (((_2542_s2 < 128LLU) || (191LL < _2542_s2))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	if ((_2422_sz <= 3LL)) {
		__jule_func_result.__jule_result_arg0 = (((static_cast<jule::I32>((_2332_s0 & 15LLU)) << 12LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2542_s2 & 63LLU)));
		__jule_func_result.__jule_result_arg1 = 3LL;
		return __jule_func_result;;
	};
	jule::U8 _2612_s3 = _22918_s[3LL];;
	if (((_2612_s3 < 128LLU) || (191LL < _2612_s3))) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = ((((static_cast<jule::I32>((_2332_s0 & 7LLU)) << 18LL) | (static_cast<jule::I32>((_2472_s1 & 63LLU)) << 12LL)) | (static_cast<jule::I32>((_2542_s2 & 63LLU)) << 6LL)) | static_cast<jule::I32>((_2612_s3 & 63LLU)));
	__jule_func_result.__jule_result_arg1 = 4LL;
	return __jule_func_result;;
}



inline __jule_tuple_i32__jule_tuple_int _1a952e4a7_DecodeLastRuneStr(jule::Str _31722_s) {
	__jule_tuple_i32__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	if ((_31722_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		return __jule_func_result;;
	};
	jule::I32 _3212_end = _31722_s.len();;
	jule::I32 _3226_start = (_3212_end - 1LL);;
	__jule_func_result.__jule_result_arg0=static_cast<jule::I32>(_31722_s[_3226_start]);
	if ((__jule_func_result.__jule_result_arg0 < 128LL)) {
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	jule::I32 _3306_lim = (_3212_end - 4LL);;
	if ((_3306_lim < 0LL)) {
		_3306_lim=0LL;
	};
	(_3226_start)--;
	for (; (_3226_start >= _3306_lim); (_3226_start)--) {
		{
			if (_1a9530bc3_RuneStart(_31722_s[_3226_start])) {
				goto _iter_end_1be181831;
			};
		}
	_iter_next_1be181831:;
	}
	_iter_end_1be181831:;;
	if ((_3226_start < 0LL)) {
		_3226_start=0LL;
	};
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_31722_s.slice(_3226_start, _3212_end));
		__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3226_start + __jule_func_result.__jule_result_arg1) != _3212_end)) {
		__jule_func_result.__jule_result_arg0 = 65533LL;
		__jule_func_result.__jule_result_arg1 = 1LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	return __jule_func_result;;
}



inline jule::Slice<jule::U8> _1a9530002_AppendRune(jule::Slice<jule::U8> _40519_p, jule::I32 _40530_r) {
	if ((_40530_r <= 127LL)) {
		return jule::append(_40519_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U8>(_40530_r); __jule_collection; }));;
	};
	return _1a9530376_appendRuneNonASCII(_40519_p, _40530_r);;
}



inline jule::Slice<jule::U8> _1a9530376_appendRuneNonASCII(jule::Slice<jule::U8> _41227_p, jule::I32 _41242_r) {
	jule::U32 _4142_i = static_cast<jule::U32>(_41242_r);;
	{
		
		if ((_4142_i <= 2047LLU)) {
			_case_begin_1be191ec3:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (192LL | static_cast<jule::U8>((_41242_r >> 6LL))); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else if ((_4142_i > 1114111LLU) || ((55296LL <= _4142_i) && (_4142_i <= 57343LLU))) {
			_case_begin_1be190b81:;
			{
				_41242_r=128LL;
				goto _case_begin_1be190be7;
			}
		}
		else if ((_4142_i <= 65535LLU)) {
			_case_begin_1be190be7:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = (224LL | static_cast<jule::U8>((_41242_r >> 12LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		else {
			_case_begin_1be190422:;
			{
				return jule::append(_41227_p,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = (240LL | static_cast<jule::U8>((_41242_r >> 18LL))); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 12LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>((_41242_r >> 6LL)) & 63LLU)); (*it++) = (128LL | (static_cast<jule::U8>(_41242_r) & 63LLU)); __jule_collection; }));;
			}
		}
		_match_end_1be19039a:;
	};
}



inline jule::I32 _1a9530909_RuneCountStr(jule::Str _47317_s) {
	jule::I32 __jule_func_result = 0;
	jule::I32 _4746_i = 0LL;;
	for (; (_4746_i < _47317_s.len()); (__jule_func_result)++) {
		{
			jule::U8 _4767_c = _47317_s[_4746_i];;
			if ((_4767_c < 128LLU)) {
				(_4746_i)++;
				goto _iter_next_1be19a2d9;
			};
			jule::U8 _4823_x = _1a952c87e_first[static_cast<jule::I32>(_4767_c)];;
			if ((_4823_x == 241LLU)) {
				(_4746_i)++;
				goto _iter_next_1be19a2d9;
			};
			jule::I32 _4877_size = static_cast<jule::I32>((_4823_x & 7LLU));;
			if (((_4746_i + _4877_size) > _47317_s.len())) {
				(_4746_i)++;
				goto _iter_next_1be19a2d9;
			};
			_1a952ce34_acceptRange _4923_accept = _1a952d2ca_acceptRanges[static_cast<jule::I32>((_4823_x >> 4LLU))];;
			_4767_c=_47317_s[(_4746_i + 1LL)];
			if (((_4767_c < _4923_accept._field_lo) || (_4923_accept._field_hi < _4767_c))) {
				_4877_size=1LL;
			} else if ((_4877_size == 2LL)) {
			} else {
				_4767_c=_47317_s[(_4746_i + 2LL)];
				if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
					_4877_size=1LL;
				} else if ((_4877_size == 3LL)) {
				} else {
					_4767_c=_47317_s[(_4746_i + 3LL)];
					if (((_4767_c < 128LLU) || (191LL < _4767_c))) {
						_4877_size=1LL;
					};
				};
			};
			_4746_i+=_4877_size;
		}
	_iter_next_1be19a2d9:;
	}
	_iter_end_1be19a2d9:;;
	__jule_func_result = __jule_func_result;
	return __jule_func_result;;
}



inline jule::Bool _1a9530bc3_RuneStart(jule::U8 _51714_b) {
	return ((_51714_b & 192LLU) != 128LLU);;
}



inline jule::I32 _1a9784124_LeadingZeros64(jule::U64 _5919_x) {
	return (64LL - _1a978b9ab_Len64(_5919_x));;
}



inline jule::I32 _1a978506a_TrailingZeros(jule::U32 _8118_x) {
	{
		return _1a9785950_TrailingZeros32(static_cast<jule::U32>(_8118_x));;
	};
}



inline jule::I32 _1a9785950_TrailingZeros32(jule::U32 _10320_x) {
	if ((_10320_x == 0LLU)) {
		return 32LL;;
	};
	return static_cast<jule::I32>(_1a978471d__DE_BRUIJN32_TAB[static_cast<jule::I32>(((jule::U32)((_10320_x & (-(_10320_x))) * 125613361LLU) >> 27LLU))]);;
}



inline jule::I32 _1a9785c19_TrailingZeros64(jule::U64 _11220_x) {
	if ((_11220_x == 0LLU)) {
		return 64LL;;
	};
	return static_cast<jule::I32>(_1a9784d06__DE_BRUIJN64_TAB[static_cast<jule::I32>(((jule::U64)((_11220_x & (-(_11220_x))) * 285870213051353865LLU) >> 58LLU))]);;
}



inline jule::I32 _1a978b6e2_Len32(jule::U32 _35014_x) {
	jule::I32 __jule_func_result = 0;
	if ((_35014_x >= 65536LLU)) {
		_35014_x=(_35014_x >> 16LLU);
		__jule_func_result=16LL;
	};
	if ((_35014_x >= 256LLU)) {
		_35014_x=(_35014_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_35014_x))));
	return __jule_func_result;;
}



inline jule::I32 _1a978b9ab_Len64(jule::U64 _36414_x) {
	jule::I32 __jule_func_result = 0;
	if ((_36414_x >= 4294967296LLU)) {
		_36414_x=(_36414_x >> 32LLU);
		__jule_func_result=32LL;
	};
	if ((_36414_x >= 65536LLU)) {
		_36414_x=(_36414_x >> 16LLU);
		__jule_func_result+=16LL;
	};
	if ((_36414_x >= 256LLU)) {
		_36414_x=(_36414_x >> 8LLU);
		__jule_func_result+=8LL;
	};
	__jule_func_result = (__jule_func_result + static_cast<jule::I32>(jule::Str::at(reinterpret_cast<const jule::U8*>("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"), 256, static_cast<jule::I32>(_36414_x))));
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a978c748_Add64(jule::U64 _41310_x, jule::U64 _41318_y, jule::U64 _41326_carry) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)(_41310_x + _41318_y) + _41326_carry);
	__jule_func_result.__jule_result_arg1=(((_41310_x & _41318_y) | ((_41310_x | _41318_y) & (~(__jule_func_result.__jule_result_arg0)))) >> 63LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_u64 _1a978e052_Mul64(jule::U64 _49710_x, jule::U64 _49718_y) {
	__jule_tuple_u64__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _4992_x0 = (_49710_x & 4294967295LLU);;
	jule::U64 _5002_x1 = (_49710_x >> 32LLU);;
	jule::U64 _5012_y0 = (_49718_y & 4294967295LLU);;
	jule::U64 _5022_y1 = (_49718_y >> 32LLU);;
	jule::U64 _5032_w0 = (jule::U64)(_4992_x0 * _5012_y0);;
	jule::U64 _5042_t = (jule::U64)((jule::U64)(_5002_x1 * _5012_y0) + (_5032_w0 >> 32LLU));;
	jule::U64 _5056_w1 = (_5042_t & 4294967295LLU);;
	jule::U64 _5062_w2 = (_5042_t >> 32LLU);;
	_5056_w1+=(jule::U64)(_4992_x0 * _5022_y1);
	__jule_func_result.__jule_result_arg0=(jule::U64)((jule::U64)((jule::U64)(_5002_x1 * _5022_y1) + _5062_w2) + (_5056_w1 >> 32LLU));
	__jule_func_result.__jule_result_arg1=(jule::U64)(_49710_x * _49718_y);
	return __jule_func_result;;
}



inline jule::Bool __jule_coSpawn(void* _1319_func, void* _1334_args) {
	return _1a9535810__coSpawn(_1319_func, _1334_args);;
}



inline jule::U64 _1dae50eda_f64bits(jule::F64 _612_f) {
	return (*(((jule::U64*)((&(_612_f))))));;
}



inline jule::I32 _1dae9a100_randInt(jule::U64 _716_seed, jule::I32 _727_max) {
	;
	;
	;
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	_716_seed=(jule::U64)((jule::U64)(_716_seed * 1103515245LLU) + 12345LLU);
	_716_seed=(_716_seed & 9223372036854775807LLU);
	_716_seed+=(jule::U64)(_716_seed * (_716_seed >> 8LLU));
	jule::I64 _162_p1 = static_cast<jule::I64>((_716_seed & 9223372036854775807LLU));;
	jule::U32 _172_p2 = static_cast<jule::U32>(_162_p1);;
	return ({ jule::I32 __jule_x = static_cast<jule::I32>((({ jule::U32 __jule_x = _172_p2; jule::U32 __jule_y = 1LLU; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) >> 1LLU)); jule::I32 __jule_y = _727_max; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x % __jule_y)); });;
}



inline jule::Bool _1be356eac_arrayCmp(jule::Str* _1020_a1, jule::Str* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Str* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1be358c17:;
	}
	_iter_end_1be358c17:;;
	return true;;
}

inline jule::Bool _1be3a556b_arrayCmp(jule::I32* _1020_a1, jule::I32* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::I32* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1be3a6c65:;
	}
	_iter_end_1be3a6c65:;;
	return true;;
}

inline jule::Bool _1c04de154_arrayCmp(jule::U8* _1020_a1, jule::U8* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::U8* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c04e0809:;
	}
	_iter_end_1c04e0809:;;
	return true;;
}

inline jule::Bool _1c694a06a_arrayCmp(jule::Bool* _1020_a1, jule::Bool* _1032_a2, jule::I32 _1040_n) {
	if ((_1040_n == 0LL)) {
		return true;;
	};
	jule::Bool* _142_end = (_1020_a1 + _1040_n);;
	while ((_1020_a1 < _142_end)) {
		{
			if (((*(_1020_a1)) != (*(_1032_a2)))) {
				return false;;
			};
			(_1020_a1)++;
			(_1032_a2)++;
		}
	_iter_next_1c694bc81:;
	}
	_iter_end_1c694bc81:;;
	return true;;
}



inline jule::Bool __jule_ptrEqual(void* _1313_a, void* _1325_b) {
	return (_1313_a == _1325_b);;
}



inline void _1c304854b__handleRW(jule::Slice<jule::U8>* _1615_b) {
	if (((*(_1615_b)).len() > 1073741824LL)) {
		{
			((*((&((*(_1615_b))))))).mut_slice(0LL, 1073741824LLU);;
		};
	};
}



inline jule::I32 __jule_writeStdout(jule::Slice<jule::U8> _2516_buf) {
	if ((_2516_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1a9533940_handleRW(&(_2516_buf));
	return _1c3043cb6_Write(static_cast<jule::I32>(_1c30081cb_STDOUT), (&(_2516_buf[0LL])), static_cast<jule::U32>(_2516_buf.len()));;
}



inline jule::I32 __jule_writeStderr(jule::Slice<jule::U8> _3616_buf) {
	if ((_3616_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1a9533940_handleRW(&(_3616_buf));
	return _1c3043cb6_Write(static_cast<jule::I32>(_1c30084b7_STDERR), (&(_3616_buf[0LL])), static_cast<jule::U32>(_3616_buf.len()));;
}



inline jule::I32 __jule_readStdin(jule::Slice<jule::U8> _4718_buf) {
	if ((_4718_buf.len() == 0LL)) {
		return 0LL;;
	};
	_1a9533940_handleRW(&(_4718_buf));
	return _1c3043cb6_Write(static_cast<jule::I32>(_1c3007d9b_STDIN), (&(_4718_buf[0LL])), static_cast<jule::U32>(_4718_buf.len()));;
}



inline void __jule_panic(jule::U8* _1318_m, jule::I32 _1328_n) {
	__jule_writeStderr(_1c3060bb2_StrBytes(jule::Str::lit("panic: ", 7)));
	__jule_writeStderr(_1be141ba9_Slice(_1318_m, _1328_n, _1328_n));
	__jule_writeStderr(_1c3060bb2_StrBytes(jule::Str::lit("\n", 1)));
	_1c3043ee7_Exit(2LL);
}



inline jule::U32 _1be27e3ce_atomicLoad(jule::U32* _3525_p, jule::I32 _3532_mo) {
	jule::U32 _3610_tmp = 0;;
	__atomic_load(_3525_p, (&(_3610_tmp)), _3532_mo);
	return _3610_tmp;;
}



inline jule::U32 _1be27e599_atomicAdd(jule::U32* _4628_p, jule::U32 _4635_delta, jule::I32 _4645_mo) {
	jule::U32 __jule_func_result = 0;
	__jule_func_result = __atomic_fetch_add(_4628_p, _4635_delta, _4645_mo);
	return __jule_func_result;;
}



inline jule::Str _1c30685d2_executable(void) {
	jule::Slice<jule::U8> _146_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(4096LL, 4096LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::Str _152_p = jule::Str::lit("/proc/self/exe", 14);;
	jule::I32 _162_n = readlink(((char*)((&(_152_p[0LL])))), ((char*)((&(_146_buf[0LL])))), _146_buf.len());;
	if ((_162_n != -1LL)) {
		(_146_buf).mut_slice(0LL, _162_n);;
		return _1c3061212_StrFromBytes(_146_buf);;
	};
	__jule_panic_s(jule::Str::lit("runtime: executable path read error", 35) + jule::Str("\nlocation: std/runtime/env_linux.jule:21:2"));;
}



inline jule::U32* __jule_RCNew(void) {
	;
	;
	jule::U32* _256_p = ((jule::U32*)(malloc(4LLU)));;
	if ((_256_p == nullptr)) {
		__jule_panic_s(jule::Str::lit("runtime: memory allocation failed for reference counting data", 61) + jule::Str("\nlocation: std/runtime/rc.jule:27:3"));;
	};
	{
		(*(_256_p))=1LLU;
	};
	return _256_p;;
}



inline jule::U32 __jule_RCLoadAtomic(jule::U32* _4625_p) {
	return _1be27e3ce_atomicLoad(_4625_p, 5LL);;
}



inline void __jule_RCAddAtomic(jule::U32* _6328_p) {
	_1be27e599_atomicAdd(_6328_p, 1LLU, 5LL);
}



inline jule::Bool __jule_RCDropAtomic(jule::U32* _8429_p) {
	return (_1be27e599_atomicAdd(_8429_p, jule::MAX_U64, 5LL) > 1LLU);;
}



inline void __jule_RCFree(jule::U32* _9219_p) {
	free(_9219_p);
}



inline jule::Str __jule_ptrToStr(void* _1113_p) {
	if ((_1113_p == nullptr)) {
		return jule::Str::lit("<nil>", 5);;
	};
	;
	jule::Slice<jule::U8> _166_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 12LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	(_166_buf).append(jule::Str::lit("0x", 2));;
	jule::Uintptr _186_z = ((jule::Uintptr)(_1113_p));;
	while ((_186_z > 0LLU)) {
		{
			{ jule::Slice<jule::U8> &__jule_push_dest = _166_buf; __jule_push_dest.push(jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdef"), 16, static_cast<jule::I32>((_186_z % 16LL)))); };
			_186_z=(_186_z >> 4LLU);
		}
	_iter_next_1be285ade:;
	}
	_iter_end_1be285ade:;;
	jule::I32 _236_i = 0LL;;
	for (; (_236_i < (_166_buf.len() >> 1LL)); (_236_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _166_buf[((_166_buf.len() - _236_i) - 1LL)];
				jule::U8 _1___jule_assign_arg = _166_buf[(_236_i + 2LL)];
				_166_buf[(_236_i + 2LL)] = ___jule_assign_arg;
				_166_buf[((_166_buf.len() - _236_i) - 1LL)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1be28632b:;
	}
	_iter_end_1be28632b:;;
	return _1c3061212_StrFromBytes(_166_buf);;
}



inline jule::Str __jule_boolToStr(jule::Bool _3214_b) {
	if (_3214_b) {
		return jule::Str::lit("true", 4);;
	};
	return jule::Str::lit("false", 5);;
}



inline jule::Str __jule_i64ToStr(jule::I64 _4113_x) {
	if ((_4113_x < 0LL)) {
		return (jule::Str::lit("-", 1) + __jule_u64ToStr(static_cast<jule::U64>((-(_4113_x)))));;
	};
	return __jule_u64ToStr(static_cast<jule::U64>(_4113_x));;
}



inline jule::Str __jule_u64ToStr(jule::U64 _5017_x) {
	jule::Slice<jule::U8> _516_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _522_n = _1c3072641_u64ToBuf(_516_buf, _5017_x);;
	(_516_buf).mut_slice(0LL, _522_n);;
	return _1c3061212_StrFromBytes(_516_buf);;
}



inline jule::I32 _1c3072641_u64ToBuf(jule::Slice<jule::U8> _5917_buf, jule::U64 _5934_x) {
	if ((_5934_x == 0LLU)) {
		_5917_buf[0LL]='0';
		return 1LL;;
	};
	jule::I32 _646_i = 0LL;;
	while ((_5934_x >= 10LLU)) {
		{
			jule::U64 _663_q = (_5934_x / 10LLU);;
			_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)((jule::U64)('0' + _5934_x) - (jule::U64)(_663_q * 10LLU)));
			(_646_i)++;
			_5934_x=_663_q;
		}
	_iter_next_1be28b30e:;
	}
	_iter_end_1be28b30e:;;
	jule::I32 _722_n = (_646_i + 1LL);;
	_5917_buf[_646_i]=static_cast<jule::U8>((jule::U64)('0' + _5934_x));
	_1c30737da_rev(_5917_buf.slice(0LL, _722_n));
	return _722_n;;
}



inline jule::Str __jule_f64ToStr(jule::F64 _8017_f) {
	;
	;
	jule::U64 _832_bits = _1dae50eda_f64bits(_8017_f);;
	jule::Bool _842_neg = ((_832_bits >> 63LLU) != 0LLU);;
	jule::I32 _852_exp = (static_cast<jule::I32>((_832_bits >> 52LLU)) & static_cast<jule::I32>(2047LL));;
	jule::U64 _862_mant = (_832_bits & 4503599627370495LLU);;
	if ((_852_exp == 2047LL)) {
		{
			
			if ((_862_mant != 0LLU)) {
				_case_begin_1be291ce8:;
				{
					return jule::Str::lit("NaN", 3);;
				}
			}
			else if (_842_neg) {
				_case_begin_1be291ab7:;
				{
					return jule::Str::lit("-Inf", 4);;
				}
			}
			else {
				_case_begin_1be28e60e:;
				{
					return jule::Str::lit("+Inf", 4);;
				}
			}
			_match_end_1be2915bc:;
		};
	};
	;
	jule::I32 _1032_n = 26LL;;
	jule::Slice<jule::U8> _1046_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_1032_n, _1032_n); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1056_j = 0LL;;
	if (_842_neg) {
		_1046_buf[0LL]='-';
		(_1056_j)++;
		_8017_f=(-(_8017_f));
	};
	jule::U64 _1122_intPart = static_cast<jule::U64>(_8017_f);;
	_1056_j+=_1c3072641_u64ToBuf(_1046_buf.slice(_1056_j), _1122_intPart);
	_1046_buf[_1056_j]='.';
	jule::F64 _1166_fracPart = (_8017_f - static_cast<jule::F64>(_1122_intPart));;
	jule::I32 _1176_i = 0LL;;
	for (; (_1176_i < 4LL); (_1176_i)++) {
		{
			_1166_fracPart*=10LL;
			jule::I32 _1203_digit = static_cast<jule::I32>(_1166_fracPart);;
			(_1056_j)++;
			_1046_buf[_1056_j]=static_cast<jule::U8>(('0' + _1203_digit));
			_1166_fracPart-=static_cast<jule::F64>(_1203_digit);
		}
	_iter_next_1be294cb8:;
	}
	_iter_end_1be294cb8:;;
	for (; (_1056_j >= 0LL); (_1056_j)--) {
		{
			if ((_1046_buf[_1056_j] != '0')) {
				goto _iter_end_1be296061;
			};
		}
	_iter_next_1be296061:;
	}
	_iter_end_1be296061:;;
	if ((_1046_buf[_1056_j] != '.')) {
		(_1056_j)++;
	};
	(_1046_buf).mut_slice(0LL, _1056_j);;
	return _1c3061212_StrFromBytes(_1046_buf);;
}



inline jule::Str _1c704dc67_arrToStr(jule::Slice<jule::U8> _14216_x) {
	jule::Slice<jule::U8> _1436_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push('['); };
	{
		auto expr = &(_14216_x);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c705042d:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::U8 *_1459_z = it;
			{
				if ((_1456_i > 0LL)) {
					(_1436_buf).append(jule::Str::lit(", ", 2));;
				};
				(_1436_buf).append(_1be311120_toStr((*(_1459_z))));;
			}
			_iter_next_1c705042d:;
			++it;
			_1456_i++;
			goto _iter_begin_1c705042d;
		}
		_iter_end_1c705042d:;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1436_buf; __jule_push_dest.push(']'); };
	return _1c3061212_StrFromBytes(_1436_buf);;
}



inline jule::Str _1c7043a70_structToStr(_1a95669ea_Builder _17519_x) {
	;
	;
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		{
			
{
				_case_begin_1c7046b3e:;
				{
					;
					{
						
{
							_case_begin_1c7047cc7:;
							{
								;
								;
							}
						}
						_match_end_1c70479a8:;
					};
				}
			}
			_match_end_1c70461d2:;
		};
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	{
		;
	};
	jule::Slice<jule::U8> _1966_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('{'); };
	{
		;
		{
			
{
				_case_begin_1c7049ba8:;
				{
					(_1966_buf).append(_1c704a48e_toStr(_17519_x._field_buf));;
				}
			}
			_match_end_1c7049b0e:;
		};
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _1966_buf; __jule_push_dest.push('}'); };
	return _1c3061212_StrFromBytes(_1966_buf);;
}



inline jule::Str _1be2ea35c_toStr(jule::Any _21613_x) {
	;
	{
		
{
			_case_begin_1be2eb58e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be2eb4a1:;
	};
	{
		
{
			_case_begin_1be2ebaab:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
				return _21613_x.type->to_str(_21613_x.data.alloc);;
			}
		}
		_match_end_1be2eb946:;
	};
}

inline jule::Str _1be2ec53a_toStr(jule::Str _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be2ed77d:;
			{
				return _21613_x;;
			}
		}
		_match_end_1be2ed717:;
	};
}

inline jule::Str _1be2ecc88_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be3012b9:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1be3011cb:;
	};
}

inline jule::Str _1be3029e6_toStr(jule::I8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be303c4a:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1be303b5c:;
	};
}

inline jule::Str _1be30072a_toStr(jule::I16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be3066cb:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1be3065dd:;
	};
}

inline jule::Str _1be307e08_toStr(jule::I32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be3091e5:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1be309107:;
	};
}

inline jule::Str _1be30a8de_toStr(jule::I64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be30bc0e:;
			{
				return __jule_i64ToStr(static_cast<jule::I64>(_21613_x));;
			}
		}
		_match_end_1be30bb21:;
	};
}

inline jule::Str _1be30d43b_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be30e717:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1be30e5a2:;
	};
}

inline jule::Str _1be30ae50_toStr(jule::Uintptr _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be311b59:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1be3119e4:;
	};
}

inline jule::Str _1be311120_toStr(jule::U8 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be31409b:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1be313e36:;
	};
}

inline jule::Str _1be313562_toStr(jule::U16 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be3164dd:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1be316378:;
	};
}

inline jule::Str _1be3159a4_toStr(jule::U32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be318930:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1be3187ba:;
	};
}

inline jule::Str _1be317de6_toStr(jule::U64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be31aeb5:;
			{
				return __jule_u64ToStr(static_cast<jule::U64>(_21613_x));;
			}
		}
		_match_end_1be31ad50:;
	};
}

inline jule::Str _1be31b2c3_toStr(jule::F32 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be31d4c3:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1be31d2d6:;
	};
}

inline jule::Str _1be31b647_toStr(jule::F64 _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be32054c:;
			{
				return __jule_f64ToStr(static_cast<jule::F64>(_21613_x));;
			}
		}
		_match_end_1be320393:;
	};
}

inline jule::Str _1be3082d2_toStr(jule::Bool _21613_x) {
	;
	;
	{
		
{
			_case_begin_1be3223ea:;
			{
				return __jule_boolToStr(_21613_x);;
			}
		}
		_match_end_1be322175:;
	};
}

inline jule::Str _1c00ed7d0_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c01002c6:;
			{
				return _1be2ecc88_toStr(_21613_x);;
			}
		}
		_match_end_1c00eebcc:;
	};
}

inline jule::Str _1c0107cb2_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c01097a8:;
			{
				return _1be2ecc88_toStr(_21613_x);;
			}
		}
		_match_end_1c01091ae:;
	};
}

inline jule::Str _1c013c313_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c013dd3c:;
			{
				return _1be2ecc88_toStr(_21613_x);;
			}
		}
		_match_end_1c013d743:;
	};
}

inline jule::Str _1c057d5bc_toStr(jule::I32 _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c05800b3:;
			{
				return _1be2ecc88_toStr(_21613_x);;
			}
		}
		_match_end_1c057e9b9:;
	};
}

inline jule::Str _1c0c0157a_toStr(jule::Ptr<_1bc42dc12_Var> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c02768:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c0267a:;
	};
	;
	{
		
{
			_case_begin_1c0c03219:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c02dd9:;
	};
}

inline jule::Str _1c0c03b21_toStr(jule::Ptr<_1bc4b5705_TypeAlias> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c060da:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c05eec:;
	};
	;
	{
		
{
			_case_begin_1c0c06a8b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c0675b:;
	};
}

inline jule::Str _1c0c075b4_toStr(jule::Ptr<_1bc27d26a_Struct> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c099c3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c098d5:;
	};
	;
	{
		
{
			_case_begin_1c0c0a474:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c0a144:;
	};
}

inline jule::Str _1c0c0ad7b_toStr(jule::Ptr<_1bc2ee055_Fn> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c0d345:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c0d257:;
	};
	;
	{
		
{
			_case_begin_1c0c0dce6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c0d9b6:;
	};
}

inline jule::Str _1c0c0e940_toStr(jule::Ptr<_1bc309769_Trait> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c11e09:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c11d1b:;
	};
	;
	{
		
{
			_case_begin_1c0c128aa:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c1257a:;
	};
}

inline jule::Str _1c0c13009_toStr(jule::Ptr<_1bc30be20_Enum> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c154b2:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c153c4:;
	};
	;
	{
		
{
			_case_begin_1c0c15e63:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c15b33:;
	};
}

inline jule::Str _1c0c165b2_toStr(jule::Ptr<_1bc30d62a_TypeEnum> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c1898d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c188b1:;
	};
	;
	{
		
{
			_case_begin_1c0c1943e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c19120:;
	};
}

inline jule::Str _1c0c34adb_toStr(jule::Ptr<_1bc27a377_Field> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c35cc9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c35bdb:;
	};
	;
	{
		
{
			_case_begin_1c0c3677a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c3644a:;
	};
}

inline jule::Str _1c0c46bca_toStr(jule::Ptr<_1bac25065_Const> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c47db8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c47cca:;
	};
	;
	{
		
{
			_case_begin_1c0c48869:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c48539:;
	};
}

inline jule::Str _1bbc94358_toStr(jule::Ptr<_1bc30b3b4_EnumItem> _21613_x) {
	;
	{
		
{
			_case_begin_1bbc95535:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bbc95447:;
	};
	;
	{
		
{
			_case_begin_1bbc95e70:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bbc9635a:;
	};
}

inline jule::Str _1bbca5cd7_toStr(jule::Ptr<_1bc2ec581_Param> _21613_x) {
	;
	{
		
{
			_case_begin_1bbca78dd:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bbca7800:;
	};
	;
	{
		
{
			_case_begin_1bbca838e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bbca805e:;
	};
}

inline jule::Str _1ad07d92b_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c0d2e3bc:;
			{
				return _1be2ec53a_toStr(_21613_x);;
			}
		}
		_match_end_1c0d2e0c0:;
	};
}

inline jule::Str _1ad1224c5_toStr(jule::Ptr<_1bc25d019_IdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1ad123680:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad123592:;
	};
	;
	{
		
{
			_case_begin_1ad124131:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad123d01:;
	};
}

inline jule::Str _1ad1397a6_toStr(jule::Ptr<_1bc2e737d_TupleExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ad13a730:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad13a642:;
	};
	;
	{
		
{
			_case_begin_1ad13b1d1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad13ada1:;
	};
}

inline jule::Str _1ad13bbb5_toStr(jule::Ptr<_1bc262837_TupleExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad13e59c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad13e4ae:;
	};
	;
	{
		
{
			_case_begin_1ad14004d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad13ec1d:;
	};
}

inline jule::Str _1ad14baa4_toStr(jule::Ptr<_1bc26b3ac_AssignSt> _21613_x) {
	;
	{
		
{
			_case_begin_1ad14cba4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad14cab6:;
	};
	;
	{
		
{
			_case_begin_1ad14d655:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad14d325:;
	};
}

inline jule::Str _1ad14eb51_toStr(jule::Ptr<_1bc261c43_Expr> _21613_x) {
	;
	{
		
{
			_case_begin_1ad150d1c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad14e733:;
	};
	;
	{
		
{
			_case_begin_1ad151c85:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad15148d:;
	};
}

inline jule::Str _1ad14e227_toStr(jule::Ptr<_1bc3b03ad_Postfix> _21613_x) {
	;
	{
		
{
			_case_begin_1ad15420a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad15412d:;
	};
	;
	{
		
{
			_case_begin_1ad154bab:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad15488c:;
	};
}

inline jule::Str _1ad154a68_toStr(jule::Ptr<_1bc3b0864_Assign> _21613_x) {
	;
	{
		
{
			_case_begin_1ad155a03:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad155915:;
	};
	;
	{
		
{
			_case_begin_1ad157780:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad15743e:;
	};
}

inline jule::Str _1ad15213c_toStr(jule::Ptr<_1bc3b0d1a_MultiAssign> _21613_x) {
	;
	{
		
{
			_case_begin_1ad1585c7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad1584d9:;
	};
	;
	{
		
{
			_case_begin_1ad15a354:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad15a013:;
	};
}

inline jule::Str _1ad15a255_toStr(jule::Ptr<_1bc48354c_Data> _21613_x) {
	;
	{
		
{
			_case_begin_1ad15b322:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad15b234:;
	};
	;
	{
		
{
			_case_begin_1ad15d115:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad15cc6e:;
	};
}

inline jule::Str _1ad15d8a7_toStr(jule::Ptr<_1bc2e3c70_FnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1ad160d2c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad160c3e:;
	};
	;
	{
		
{
			_case_begin_1ad1617cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad16149d:;
	};
}

inline jule::Str _1ad1904cc_toStr(jule::Ptr<_1bc3ae874_Label> _21613_x) {
	;
	{
		
{
			_case_begin_1ad191687:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1ad191599:;
	};
	;
	{
		
{
			_case_begin_1ad192138:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1ad191d08:;
	};
}

inline jule::Str _1c110167d_toStr(jule::Ptr<_1bc3abd27_Scope> _21613_x) {
	;
	{
		
{
			_case_begin_1c110286b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c110277d:;
	};
	;
	{
		
{
			_case_begin_1c0a9d339:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0aa05e4:;
	};
}

inline jule::Str _1c0c76a84_toStr(jule::Ptr<_1bc2e9d31_BuiltinErrorCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0c77bea:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c77b0c:;
	};
	;
	{
		
{
			_case_begin_1c0c7869b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0c7836b:;
	};
}

inline jule::Str _1c04043cc_toStr(jule::Ptr<_1bc2ead43_BackendEmitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c04053bc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04052ce:;
	};
	;
	{
		
{
			_case_begin_1c0405d6d:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0405a3d:;
	};
}

inline jule::Str _1c0404597_toStr(jule::Ptr<_1bc2e8aaa_BuiltinAppendCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0406e3a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0406d4c:;
	};
	;
	{
		
{
			_case_begin_1bd53917e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd5396e0:;
	};
}

inline jule::Str _1c0c7b58e_toStr(jule::Ptr<_1bc2e767a_BuiltinPrintCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd539756:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0c7c66c:;
	};
	;
	{
		
{
			_case_begin_1bd53b192:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd53ad51:;
	};
}

inline jule::Str _1bd53a647_toStr(jule::Ptr<_1bc2e7977_BuiltinPrintlnCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd53ca45:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd53a328:;
	};
	;
	{
		
{
			_case_begin_1bd53d9ad:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd53d1b6:;
	};
}

inline jule::Str _1bd53b901_toStr(jule::Ptr<_1bc2e822a_BuiltinPanicCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd53dded:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd53dd10:;
	};
	;
	{
		
{
			_case_begin_1bd541582:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd53dedb:;
	};
}

inline jule::Str _1bd54261b_toStr(jule::Ptr<_1bc2e9957_BuiltinCopyCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd541e12:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd541d24:;
	};
	;
	{
		
{
			_case_begin_1bd544156:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd542000:;
	};
}

inline jule::Str _1bd540e77_toStr(jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd5449d6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5448e8:;
	};
	;
	{
		
{
			_case_begin_1bd546c2a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd544ac4:;
	};
}

inline jule::Str _1bd543b39_toStr(jule::Ptr<_1bc2eb140_FreeExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1bd5475bb:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5474cd:;
	};
	;
	{
		
{
			_case_begin_1bd5493ae:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd549018:;
	};
}

inline jule::Str _1bd55275d_toStr(jule::Ptr<_1bc3ac960_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1bd55394b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd55385d:;
	};
	;
	{
		
{
			_case_begin_1bd5543ec:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd5540bc:;
	};
}

inline jule::Str _1bd55d13c_toStr(jule::Ptr<_1bc3acc5c_InfIter> _21613_x) {
	;
	{
		
{
			_case_begin_1bd55e32a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd55e23c:;
	};
	;
	{
		
{
			_case_begin_1bd55eccb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd55e99b:;
	};
}

inline jule::Str _1bd563e9a_toStr(jule::Ptr<_1bc3ad213_WhileIter> _21613_x) {
	;
	{
		
{
			_case_begin_1bd565188:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd56509a:;
	};
	;
	{
		
{
			_case_begin_1bd565b39:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd565809:;
	};
}

inline jule::Str _1bd58b313_toStr(jule::Ptr<_1bc3adb5e_RangeIter> _21613_x) {
	;
	{
		
{
			_case_begin_1bd58c501:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd58c413:;
	};
	;
	{
		
{
			_case_begin_1bd58cea2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd58cb72:;
	};
}

inline jule::Str _1bd59ae27_toStr(jule::Ptr<_1bc271cca_WhileKind> _21613_x) {
	;
	{
		
{
			_case_begin_1bd59c0c1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd59bed3:;
	};
	;
	{
		
{
			_case_begin_1bd59ca72:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd59c742:;
	};
}

inline jule::Str _1bd59da95_toStr(jule::Ptr<_1bc2726d2_RangeKind> _21613_x) {
	;
	{
		
{
			_case_begin_1bd5a0e2c:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bd5a0d3e:;
	};
	;
	{
		
{
			_case_begin_1bd5a18cd:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bd5a159d:;
	};
}

inline jule::Str _1c0c827c6_toStr(jule::Ptr<_1bc3adee4_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1bbd2ace6:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bbd2ac19:;
	};
	;
	{
		
{
			_case_begin_1bbd2b797:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bbd2b478:;
	};
}

inline jule::Str _1bbd33c88_toStr(jule::Ptr<_1bc3aeed4_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1bbd34e76:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bbd34d88:;
	};
	;
	{
		
{
			_case_begin_1bbd35927:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bbd355e7:;
	};
}

inline jule::Str _1c040e2d8_toStr(jule::Ptr<_1bc26355d_IdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c0410482:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0410394:;
	};
	;
	{
		
{
			_case_begin_1c0410e33:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0410b03:;
	};
}

inline jule::Str _1c0424694_toStr(jule::Ptr<_1bc2e4600_IndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0425871:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0425783:;
	};
	;
	{
		
{
			_case_begin_1c0426322:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0425ee2:;
	};
}

inline jule::Str _1c0ca3165_toStr(jule::Ptr<_1bc3b1557_Match> _21613_x) {
	;
	{
		
{
			_case_begin_1c0ca4353:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0ca4265:;
	};
	;
	{
		
{
			_case_begin_1c0ca4d04:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0ca49c4:;
	};
}

inline jule::Str _1c0cb7201_toStr(jule::Ptr<_1bc3b2778_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1c0cb8be7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0cb8b09:;
	};
	;
	{
		
{
			_case_begin_1c0cb9698:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0cb9368:;
	};
}

inline jule::Str _1c0cd32b6_toStr(jule::Ptr<_1bc3ae3bd_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1c0cd44a4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0cd43b6:;
	};
	;
	{
		
{
			_case_begin_1c0cd4e55:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0cd4b25:;
	};
}

inline jule::Str _1bbd6985c_toStr(jule::Ptr<_1bc3b2b1e_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1bbd6aa4a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1bbd6a95c:;
	};
	;
	{
		
{
			_case_begin_1bbd6b4eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1bbd6b1bb:;
	};
}

inline jule::Str _1be0431e8_toStr(jule::Ptr<_1bc26ca0c_ScopeTree> _21613_x) {
	;
	{
		
{
			_case_begin_1be0443a3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0442b5:;
	};
	;
	{
		
{
			_case_begin_1be044d54:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be044a24:;
	};
}

inline jule::Str _1be0434a1_toStr(jule::Ptr<_1bc270856_VarDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be047593:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be0474a5:;
	};
	;
	{
		
{
			_case_begin_1be048044:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be047c14:;
	};
}

inline jule::Str _1be04872b_toStr(jule::Ptr<_1bc274508_TypeAliasDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1be04a783:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be04a695:;
	};
	;
	{
		
{
			_case_begin_1be04b234:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be04ae04:;
	};
}

inline jule::Str _1be04c0ae_toStr(jule::Ptr<_1bc273cbb_Conditional> _21613_x) {
	;
	{
		
{
			_case_begin_1be04e49b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be04e3ad:;
	};
	;
	{
		
{
			_case_begin_1be04ee4c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be04eb1c:;
	};
}

inline jule::Str _1be0511e5_toStr(jule::Ptr<_1bc2714a0_Iter> _21613_x) {
	;
	{
		
{
			_case_begin_1be05268b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be05259d:;
	};
	;
	{
		
{
			_case_begin_1be05313c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be052d0c:;
	};
}

inline jule::Str _1be05378b_toStr(jule::Ptr<_1bc272e85_ContSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be05587b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be05578d:;
	};
	;
	{
		
{
			_case_begin_1be05632c:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be055eec:;
	};
}

inline jule::Str _1be050854_toStr(jule::Ptr<_1bc269ee3_LabelSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be05752b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be05743d:;
	};
	;
	{
		
{
			_case_begin_1be0592a8:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be058e78:;
	};
}

inline jule::Str _1be05697b_toStr(jule::Ptr<_1bc26a3bc_GotoSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be05b9e7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be05b909:;
	};
	;
	{
		
{
			_case_begin_1be05c498:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be05c168:;
	};
}

inline jule::Str _1be05d0ae_toStr(jule::Ptr<_1bc2752c8_MatchCase> _21613_x) {
	;
	{
		
{
			_case_begin_1be06048a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be06039c:;
	};
	;
	{
		
{
			_case_begin_1be060e3b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be060b0b:;
	};
}

inline jule::Str _1be06158a_toStr(jule::Ptr<_1bc26a6b9_FallSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be06367a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be06358c:;
	};
	;
	{
		
{
			_case_begin_1be06412b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be063ceb:;
	};
}

inline jule::Str _1be0653c4_toStr(jule::Ptr<_1bc272aab_BreakSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be06686a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be06677c:;
	};
	;
	{
		
{
			_case_begin_1be06731b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be066edb:;
	};
}

inline jule::Str _1be06796a_toStr(jule::Ptr<_1bc270c30_RetSt> _21613_x) {
	;
	{
		
{
			_case_begin_1be069a5a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be06996c:;
	};
	;
	{
		
{
			_case_begin_1be06a50b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1be06a1cb:;
	};
}

inline jule::Str _1be06b7a4_toStr(jule::Ptr<_1bc262617_UseExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1be06cc4a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1be06cb5c:;
	};
	;
	{
		
{
			_case_begin_1c10eceb5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c11035a3:;
	};
}

inline jule::Str _1c31d4d14_toStr(jule::Ptr<_1bc2793ba_Impl> _21613_x) {
	;
	{
		
{
			_case_begin_1c31d5ebe:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c31d5dd1:;
	};
	;
	{
		
{
			_case_begin_1c31d6970:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c31d6640:;
	};
}

inline jule::Str _1c31d98eb_toStr(jule::Ptr<_1bc27851d_StructDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c31da963:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c31da875:;
	};
	;
	{
		
{
			_case_begin_1c31db414:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c31db0d4:;
	};
}

inline jule::Str _1be06d92c_toStr(jule::Ptr<_1bc26e69b_FnDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c0b00138:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0a54d6d:;
	};
	;
	{
		
{
			_case_begin_1c0cd573b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0cd35a2:;
	};
}

inline jule::Str _1c0cd771b_toStr(jule::Ptr<_1bc278c5a_TraitDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c0cd8750:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0cd8662:;
	};
	;
	{
		
{
			_case_begin_1c0cd9201:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0cd8dc1:;
	};
}

inline jule::Str _1c0cdc4ce_toStr(jule::Ptr<_1bc2768c3_EnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c0cdd524:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0cdd436:;
	};
	;
	{
		
{
			_case_begin_1c0cddec5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0cddb95:;
	};
}

inline jule::Str _1c13b899a_toStr(jule::Ptr<_1bc27785d_TypeEnumDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c13b9a9a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c13b99ac:;
	};
	;
	{
		
{
			_case_begin_1c13ba54b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c13ba21b:;
	};
}

inline jule::Str _1c0d0abb2_toStr(jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0d0c004:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0d0be16:;
	};
	;
	{
		
{
			_case_begin_1c0d0c9a5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0d0c675:;
	};
}

inline jule::Str _1c13c3774_toStr(jule::Ptr<_1bc2e2169_UnaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c13c5ab7:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c13c59c9:;
	};
	;
	{
		
{
			_case_begin_1c13c6568:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c13c6238:;
	};
}

inline jule::Str _1c3216263_toStr(jule::Ptr<_1bc302113_FnIns> _21613_x) {
	;
	{
		
{
			_case_begin_1c3217451:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3217363:;
	};
	;
	{
		
{
			_case_begin_1c3217e02:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3217ac2:;
	};
}

inline jule::Str _1c049d1bd_toStr(jule::Ptr<_1bc260428_MapTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c049e378:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c049e28a:;
	};
	;
	{
		
{
			_case_begin_1c049ed29:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c049e9e9:;
	};
}

inline jule::Str _1c04a1a84_toStr(jule::Ptr<_1bc25e13b_TupleTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c04a2c3e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04a2b51:;
	};
	;
	{
		
{
			_case_begin_1c04a33c1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c04a2bb7:;
	};
}

inline jule::Str _1c04abe24_toStr(jule::Ptr<_1bc25ebca_ArrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c04ad0e0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04ad002:;
	};
	;
	{
		
{
			_case_begin_1c35a8c43:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c35aa827:;
	};
}

inline jule::Str _1c35b1124_toStr(jule::Ptr<_1bc25dd3e_SlcTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c35b22e0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c35b2202:;
	};
	;
	{
		
{
			_case_begin_1c35b2c91:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c35b2961:;
	};
}

inline jule::Str _1c04b1775_toStr(jule::Ptr<_1bc25e438_PtrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c04b2941:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04b2853:;
	};
	;
	{
		
{
			_case_begin_1c32c2a28:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0b2c4d9:;
	};
}

inline jule::Str _1c32c7d6e_toStr(jule::Ptr<_1bc25d9a9_SptrTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c32c903a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c32c8e4c:;
	};
	;
	{
		
{
			_case_begin_1c35ade57:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c35b0321:;
	};
}

inline jule::Str _1c36c815e_toStr(jule::Ptr<_1bc2641c9_VariadicExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c36c9292:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c36c91a4:;
	};
	;
	{
		
{
			_case_begin_1c36c9c43:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c36c9913:;
	};
}

inline jule::Str _1c36cdde0_toStr(jule::Ptr<_1bc2e4149_SliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c36d0b06:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c36d0a18:;
	};
	;
	{
		
{
			_case_begin_1c36d15a7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c36d1277:;
	};
}

inline jule::Str _1c36e8e0a_toStr(jule::Ptr<_1bc266462_FieldExprPair> _21613_x) {
	;
	{
		
{
			_case_begin_1c36ea0b5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c36e9ec7:;
	};
	;
	{
		
{
			_case_begin_1c36eaa66:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c36ea736:;
	};
}

inline jule::Str _1c370292a_toStr(jule::Ptr<_1bc267a6d_KeyValPair> _21613_x) {
	;
	{
		
{
			_case_begin_1c3703ad5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c37039e7:;
	};
	;
	{
		
{
			_case_begin_1c3704586:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3704256:;
	};
}

inline jule::Str _1c34403c1_toStr(jule::Ptr<_1bc26596c_FnCallExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c344157b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c344148d:;
	};
	;
	{
		
{
			_case_begin_1c04b2ec4:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c04b20a0:;
	};
}

inline jule::Str _1c32e6464_toStr(jule::Ptr<_1bc2e2d3a_AllocStructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c32ea468:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c32ea37a:;
	};
	;
	{
		
{
			_case_begin_1c32eae19:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c32eaad9:;
	};
}

inline jule::Str _1c330893d_toStr(jule::Ptr<_1bc2e33bd_CastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3309b2b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3309a3d:;
	};
	;
	{
		
{
			_case_begin_1c330a5cc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c330a29c:;
	};
}

inline jule::Str _1c04c836e_toStr(jule::Ptr<_1bc2e6ba7_StructStaticIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c04c9480:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c04c9392:;
	};
	;
	{
		
{
			_case_begin_1c382de63:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c382db33:;
	};
}

inline jule::Str _1c3318c8e_toStr(jule::Ptr<_1bc264d56_SubIdentExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c331b2e1:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c331b203:;
	};
	;
	{
		
{
			_case_begin_1c331bc92:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c331b962:;
	};
}

inline jule::Str _1c382ee53_toStr(jule::Ptr<_1bc2e2a3d_StructLitExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c383110d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3831020:;
	};
	;
	{
		
{
			_case_begin_1c35e8007:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c35e3354:;
	};
}

inline jule::Str _1c14b8b77_toStr(jule::Ptr<_1bc2ea9be_RuneExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c14b9d65:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c14b9c77:;
	};
	;
	{
		
{
			_case_begin_1c14ba816:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c14ba4d6:;
	};
}

inline jule::Str _1c14d070a_toStr(jule::Ptr<_1bc2810c5_StructIns> _21613_x) {
	;
	{
		
{
			_case_begin_1c14d18e8:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c14d180a:;
	};
	;
	{
		
{
			_case_begin_1c14d2399:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c14d2069:;
	};
}

inline jule::Str _1c39996a5_toStr(jule::Ptr<_1bc4b64e7_Type> _21613_x) {
	;
	{
		
{
			_case_begin_1c399a83d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c399a750:;
	};
	;
	{
		
{
			_case_begin_1c399b2de:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c399aeae:;
	};
}

inline jule::Str _1c345ba4c_toStr(jule::Ptr<_1bc2e7081_ArrayExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c345cc3a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c345cb4c:;
	};
	;
	{
		
{
			_case_begin_1c345d6db:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c345d3ab:;
	};
}

inline jule::Str _1c110e955_toStr(jule::Ptr<_1bc25d2d3_SubIdentTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c375ea42:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c375e965:;
	};
	;
	{
		
{
			_case_begin_1c37604e3:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c37601b3:;
	};
}

inline jule::Str _1c37634d5_toStr(jule::Ptr<_1bc263d00_UnaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c376467e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3764591:;
	};
	;
	{
		
{
			_case_begin_1c3765130:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3764d00:;
	};
}

inline jule::Str _1c376c8eb_toStr(jule::Ptr<_1bc25c90e_TypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c376ce90:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c376cda2:;
	};
	;
	{
		
{
			_case_begin_1c376d941:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c376d611:;
	};
}

inline jule::Str _1c377116e_toStr(jule::Ptr<_1bc26497c_NamespaceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c37749ad:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c37748c0:;
	};
	;
	{
		
{
			_case_begin_1c377545e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c377512e:;
	};
}

inline jule::Str _1c3778cc0_toStr(jule::Ptr<_1bc25d6ac_NamespaceTypeDecl> _21613_x) {
	;
	{
		
{
			_case_begin_1c3779ead:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3779dc0:;
	};
	;
	{
		
{
			_case_begin_1c377a95e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c377a62e:;
	};
}

inline jule::Str _1c333401d_toStr(jule::Ptr<_1bc2e58dc_SlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3473129:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c347306e:;
	};
	;
	{
		
{
			_case_begin_1c3474092:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3473437:;
	};
}

inline jule::Str _1c36476b6_toStr(jule::Ptr<_1bc268299_SliceExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c386e910:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c386e822:;
	};
	;
	{
		
{
			_case_begin_1c38703b1:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3870081:;
	};
}

inline jule::Str _1c3474ed8_toStr(jule::Ptr<_1bc2e5e70_TraitSubIdentExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3477c88:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3477b9a:;
	};
	;
	{
		
{
			_case_begin_1c09a1a56:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c099ea10:;
	};
}

inline jule::Str _1c33678c0_toStr(jule::Ptr<_1bc2e5359_MapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0e9adc9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0e9acdb:;
	};
	;
	{
		
{
			_case_begin_1c38b8294:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c38b800d:;
	};
}

inline jule::Str _1c38c5081_toStr(jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c38c626e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c38c6181:;
	};
	;
	{
		
{
			_case_begin_1c38c6c20:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c38c68e0:;
	};
}

inline jule::Str _1c33682c7_toStr(jule::Ptr<_1bc26200c_RangeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c3369383:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3369295:;
	};
	;
	{
		
{
			_case_begin_1c3369d34:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3369a04:;
	};
}

inline jule::Str _1c336b0dd_toStr(jule::Ptr<_1bc262bcd_LitExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c336cc5a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c336cb6c:;
	};
	;
	{
		
{
			_case_begin_1c336d70b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c336d3cb:;
	};
}

inline jule::Str _1c336ec07_toStr(jule::Ptr<_1bc2630a7_UnsafeExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c33727dc:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c33726ee:;
	};
	;
	{
		
{
			_case_begin_1c125edd5:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c125e9ea:;
	};
}

inline jule::Str _1c0d35c0e_toStr(jule::Ptr<_1bc268c06_IndexingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c0d3801e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0d37e31:;
	};
	;
	{
		
{
			_case_begin_1c39d84a2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c39d7ea7:;
	};
}

inline jule::Str _1c39d82b5_toStr(jule::Ptr<_1bc269366_SlicingExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c39dadde:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c39dad01:;
	};
	;
	{
		
{
			_case_begin_1c0e9ba9a:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c0e98cb7:;
	};
}

inline jule::Str _1c38c898b_toStr(jule::Ptr<_1bc2645a3_CastExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c38c769e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c38c75b1:;
	};
	;
	{
		
{
			_case_begin_1c367c553:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c367bd49:;
	};
}

inline jule::Str _1c38c545a_toStr(jule::Ptr<_1bc266c8c_StructLit> _21613_x) {
	;
	{
		
{
			_case_begin_1c367d510:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c367be59:;
	};
	;
	{
		
{
			_case_begin_1c38ca828:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c38ca372:;
	};
}

inline jule::Str _1c36805cd_toStr(jule::Ptr<_1bc267243_BraceLit> _21613_x) {
	;
	{
		
{
			_case_begin_1c3373b73:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3373a85:;
	};
	;
	{
		
{
			_case_begin_1c3681b73:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3681601:;
	};
}

inline jule::Str _1c38cba27_toStr(jule::Ptr<_1bc26530c_BinaryExpr> _21613_x) {
	;
	{
		
{
			_case_begin_1c38cd2ed:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c38cd210:;
	};
	;
	{
		
{
			_case_begin_1c38cdc9e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c38cd96e:;
	};
}

inline jule::Str _1c3538cc2_toStr(jule::Ptr<_1bc2e1c90_BinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3539eb0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3539dc2:;
	};
	;
	{
		
{
			_case_begin_1c353a961:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c353a631:;
	};
}

inline jule::Str _1c5e9d190_toStr(jule::Ptr<_1bc2e7d51_BuiltinNewCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c5e9e37d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c5e9e290:;
	};
	;
	{
		
{
			_case_begin_1c5e9ed2e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c5e9e9ee:;
	};
}

inline jule::Str _1c5eb422d_toStr(jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c5eb541b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c5eb532d:;
	};
	;
	{
		
{
			_case_begin_1c5eb5dbc:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c5eb5a8c:;
	};
}

inline jule::Str _1c3a4131d_toStr(jule::Ptr<_1bc2e8da7_BuiltinLenCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3a4250b:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3a4241d:;
	};
	;
	{
		
{
			_case_begin_1c3a42eac:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3a42b7c:;
	};
}

inline jule::Str _1c3a5b0e6_toStr(jule::Ptr<_1bc2e91a4_BuiltinCapCallExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3a5c2d4:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3a5c1e6:;
	};
	;
	{
		
{
			_case_begin_1c3a5cc85:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c3a5c955:;
	};
}

inline jule::Str _1c60801c8_toStr(jule::Ptr<_1bc2ea12d_SizeofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c3959c5e:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c3959b2c:;
	};
	;
	{
		
{
			_case_begin_1c395abc7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c395a3d0:;
	};
}

inline jule::Str _1c5eb7297_toStr(jule::Ptr<_1bc2ea7d2_AlignofExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c5eb8551:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c5eb8474:;
	};
	;
	{
		
{
			_case_begin_1c5eb9002:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c5eb8bc2:;
	};
}

inline jule::Str _1c67d5257_toStr(jule::Ptr<_1bdad9bc4_ExceptionalForwardingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c60d0448:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c60d1a10:;
	};
	;
	{
		
{
			_case_begin_1c67d6a61:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c67d64de:;
	};
}

inline jule::Str _1c6817377_toStr(jule::Ptr<_1bdadcb72_StrRuneIter> _21613_x) {
	;
	{
		
{
			_case_begin_1c6818565:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c6818477:;
	};
	;
	{
		
{
			_case_begin_1c6819016:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6818bd6:;
	};
}

inline jule::Str _1c681c558_toStr(jule::Ptr<_1bdadb8eb_MutSlicingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c681d746:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c681d658:;
	};
	;
	{
		
{
			_case_begin_1c681e1e7:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c681ddb7:;
	};
}

inline jule::Str _1c685345c_toStr(jule::Ptr<_1bdadc798_AppendToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c685464a:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c685455c:;
	};
	;
	{
		
{
			_case_begin_1c68550eb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6854cbb:;
	};
}

inline jule::Str _1c6855c89_toStr(jule::Ptr<_1bdadc3be_PushToSliceExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c6858253:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c6858165:;
	};
	;
	{
		
{
			_case_begin_1c6858c04:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c68588c4:;
	};
}

inline jule::Str _1c685ca60_toStr(jule::Ptr<_1bdada653_SwapExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c685dc4d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c685db60:;
	};
	;
	{
		
{
			_case_begin_1c685e6ee:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c685e3be:;
	};
}

inline jule::Str _1c60dbeb0_toStr(jule::Ptr<_1bdadaa2c_EmptyCompareExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c60dd19d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c60dd0b0:;
	};
	;
	{
		
{
			_case_begin_1c60ddb4e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c60dd81e:;
	};
}

inline jule::Str _1c68eda02_toStr(jule::Ptr<_1bdadb2d0_StrCompExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c68eebe0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c68eeb02:;
	};
	;
	{
		
{
			_case_begin_1c6900691:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6900361:;
	};
}

inline jule::Str _1c33db845_toStr(jule::Ptr<_1bdada235_StrConcatExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c33e57e9:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c33e570b:;
	};
	;
	{
		
{
			_case_begin_1c6674beb:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6670554:;
	};
}

inline jule::Str _1c68a6988_toStr(jule::Ptr<_1bdadbbe8_UnsafeBinaryExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c68a7b65:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c68a7a77:;
	};
	;
	{
		
{
			_case_begin_1c622c96e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6228dbb:;
	};
}

inline jule::Str _1c669b805_toStr(jule::Ptr<_1bdadce6e_UnsafeDerefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c1119d7d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c1119c6d:;
	};
	;
	{
		
{
			_case_begin_1c6909ba6:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c690a0e6:;
	};
}

inline jule::Str _1c624117a_toStr(jule::Ptr<_1bdadad29_RefExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c0d3baa0:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c0d3b9b2:;
	};
	;
	{
		
{
			_case_begin_1c60c9bb2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c60dd236:;
	};
}

inline jule::Str _1c68a8847_toStr(jule::Ptr<_1bc2e2697_StructArgExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c68a8e41:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c68a8d53:;
	};
	;
	{
		
{
			_case_begin_1c68a98e2:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c68a95c3:;
	};
}

inline jule::Str _1c68b051e_toStr(jule::Ptr<_1bdadd26b_UnsafeCastingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c68b0be5:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c68b09d6:;
	};
	;
	{
		
{
			_case_begin_1c6a2210e:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c68b1377:;
	};
}

inline jule::Str _1c6a2edec_toStr(jule::Ptr<_1bdad9e38_FnCallIgnoreExceptionalExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c6a310da:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c6a30eec:;
	};
	;
	{
		
{
			_case_begin_1c6a31a8b:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6a3175b:;
	};
}

inline jule::Str _1c6a426e5_toStr(jule::Ptr<_1bdadbee5_UnsafeIndexingExprModel> _21613_x) {
	;
	{
		
{
			_case_begin_1c6a438d3:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c6a437e5:;
	};
	;
	{
		
{
			_case_begin_1c6a44384:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6a44054:;
	};
}

inline jule::Str _1c6bc55c0_toStr(jule::Ptr<jule::Str> _21613_x) {
	;
	{
		
{
			_case_begin_1c6d4e12d:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c6d4e040:;
	};
	;
	{
		
{
			_case_begin_1c6d4eace:;
			{
				return __jule_ptrToStr(((void*)(static_cast<jule::Uintptr>(_21613_x))));;
			}
		}
		_match_end_1c6d4e79e:;
	};
}

inline jule::Str _1c703da9d_toStr(_1a95669ea_Builder _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c7041ead:;
			{
				return _1c7043a70_structToStr(_21613_x);;
			}
		}
		_match_end_1c7041a3a:;
	};
}

inline jule::Str _1c704a48e_toStr(jule::Slice<jule::U8> _21613_x) {
	;
	{
		
{
			_case_begin_1c704b836:;
			{
				if ((_21613_x == nullptr)) {
					return jule::Str::lit("<nil>", 5);;
				};
			}
		}
		_match_end_1c704b627:;
	};
	;
	{
		
{
			_case_begin_1c704c194:;
			{
				return _1c704dc67_arrToStr(_21613_x);;
			}
		}
		_match_end_1c704beb8:;
	};
}

inline jule::Str _1c70422cc_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c7042893:;
			{
				return _1be2ec53a_toStr(_21613_x);;
			}
		}
		_match_end_1c7042b7e:;
	};
}

inline jule::Str _1c70529a2_toStr(jule::Str _21613_x) {
	;
	;
	;
	{
		
{
			_case_begin_1c7053de3:;
			{
				return _1be2ec53a_toStr(_21613_x);;
			}
		}
		_match_end_1c70538d7:;
	};
}



inline void _1c30737da_rev(jule::Slice<jule::U8> _26912_b) {
	jule::I32 _2706_i = 0LL;;
	for (; (_2706_i < (_26912_b.len() >> 1LL)); (_2706_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = _26912_b[((_26912_b.len() - 1LL) - _2706_i)];
				jule::U8 _1___jule_assign_arg = _26912_b[_2706_i];
				_26912_b[_2706_i] = ___jule_assign_arg;
				_26912_b[((_26912_b.len() - 1LL) - _2706_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1be297419:;
	}
	_iter_end_1be297419:;;
}



inline jule::I32 __jule_compareStr(jule::Str* _1016_a, jule::Str* _1025_b) {
	jule::I32 _116_l = (*(_1016_a)).len();;
	if (((*(_1025_b)).len() < _116_l)) {
		_116_l=(*(_1025_b)).len();
	};
	jule::I32 _156_i = 0LL;;
	for (; (_156_i < _116_l); (_156_i)++) {
		{
			jule::U8 _173_c1;
			jule::U8 _177_c2;
			({
				jule::U8 ___jule_assign_arg = (*(_1016_a))[_156_i];
				jule::U8 _1___jule_assign_arg = (*(_1025_b))[_156_i];
				_173_c1 = ___jule_assign_arg;
				_177_c2 = _1___jule_assign_arg;
			});
			if ((_173_c1 < _177_c2)) {
				return -1LL;;
			};
			if ((_173_c1 > _177_c2)) {
				return 1LL;;
			};
		}
	_iter_next_1be298ddd:;
	}
	_iter_end_1be298ddd:;;
	if (((*(_1016_a)).len() < (*(_1025_b)).len())) {
		return -1LL;;
	};
	if (((*(_1016_a)).len() > (*(_1025_b)).len())) {
		return 1LL;;
	};
	return 0LL;;
}



inline jule::Str __jule_bytesToStr(jule::Slice<jule::U8> _3615_bytes) {
	jule::Slice<jule::U8> _376_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_3615_bytes.len(), _3615_bytes.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_376_buf, _3615_bytes);
	return _1c3061212_StrFromBytes(_376_buf);;
}



inline jule::Str __jule_runesToStr(jule::Slice<jule::I32> _4415_runes) {
	jule::Slice<jule::U8> _456_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, (_4415_runes.len() << 2LLU)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	{
		auto expr = &(_4415_runes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be29cbe4:;
		if (it != expr_end) {
			jule::I32 *_469_r = it;
			{
				_456_buf=_1a9530002_AppendRune(_456_buf, (*(_469_r)));
			}
			_iter_next_1be29cbe4:;
			++it;
			goto _iter_begin_1be29cbe4;
		}
		_iter_end_1be29cbe4:;
	};
	return _1c3061212_StrFromBytes(_456_buf);;
}



inline jule::Slice<jule::I32> __jule_strToRunes(jule::Str _5415_s) {
	jule::Slice<jule::I32> _556_buf = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(0LL, _1a9530909_RuneCountStr(_5415_s)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _566_n = 0LL;;
	while ((_566_n < _5415_s.len())) {
		{
			jule::I32 _583_r;
			jule::I32 _586_len;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_5415_s.slice(_566_n));
				_583_r = __jule_assign_result.__jule_result_arg0;
				_586_len = __jule_assign_result.__jule_result_arg1;
			});
			_566_n+=_586_len;
			{ jule::Slice<jule::I32> &__jule_push_dest = _556_buf; __jule_push_dest.push(_583_r); };
		}
	_iter_next_1be29dde3:;
	}
	_iter_end_1be29dde3:;;
	return _556_buf;;
}



inline jule::Slice<jule::U8> __jule_strToBytes(jule::Str _6715_s) {
	jule::Slice<jule::U8> _686_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(_6715_s.len(), _6715_s.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::copy(_686_buf, _6715_s);
	return _686_buf;;
}



inline jule::Str __jule_strFromByte(jule::U8 _7516_b) {
	jule::Slice<jule::U8> _766_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_766_buf[0LL]=_7516_b;
	return _1c3061212_StrFromBytes(_766_buf);;
}



inline jule::Str __jule_strFromRune(jule::I32 _8316_r) {
	jule::Slice<jule::U8> _846_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, 4LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_846_buf=_1a9530002_AppendRune(_846_buf, _8316_r);
	return _1c3061212_StrFromBytes(_846_buf);;
}



inline void __jule_runeStep(jule::U8* _9420_s, jule::I32 _9430_n, jule::I32* _9442_r, jule::I32* _9456_outLen) {
	jule::Slice<jule::U8> _952_buf = _1be141ba9_Slice(_9420_s, _9430_n, _9430_n);;
	if ((_9442_r != nullptr)) {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune(_952_buf);
			(*(_9442_r)) = __jule_assign_result.__jule_result_arg0;
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune(_952_buf);
			(*(_9456_outLen)) = __jule_assign_result.__jule_result_arg1;
		});
	};
}



inline jule::I32 __jule_runeCount(jule::Str _10514_s) {
	return _1a9530909_RuneCountStr(_10514_s);;
}



inline void _1a9533940_handleRW(jule::Slice<jule::U8>* _814_b) {
	_1c304854b__handleRW(_814_b);
}



inline jule::Slice<jule::Str> _1a9533e4b_args(void) {
	jule::Slice<jule::Str> _86_args = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(__jule_argc, __jule_argc); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	{
		auto expr = &(_86_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2a49ed:;
		if (it != expr_end) {
			jule::I32 _96_i = it - expr->begin();
			{
				{
					jule::U8* _118_arg = __jule_argv[_96_i];;
					_86_args[_96_i]=_1c3049a03_Str(_118_arg, _1a95344e0_strlen(_118_arg));
				};
			}
			_iter_next_1be2a49ed:;
			++it;
			_96_i++;
			goto _iter_begin_1be2a49ed;
		}
		_iter_end_1be2a49ed:;
	};
	return _86_args;;
}



inline jule::I32 _1a95344e0_strlen(jule::U8* _3122_p) {
	jule::I32 __jule_func_result = 0;
	for (; ((*(_3122_p)) != 0LLU); (_3122_p)++) {
		{
			(__jule_func_result)++;
		}
	_iter_next_1be2a6857:;
	}
	_iter_end_1be2a6857:;;
	return __jule_func_result;;
}



inline jule::Bool _1a9535810__coSpawn(void* _1520_func, void* _1535_args) {
	pthread_t _166_t;;
	if ((pthread_create((&(_166_t)), nullptr, (void*(*)(void*))(_1520_func), _1535_args) != 0LL)) {
		return false;;
	};
	pthread_detach(_166_t);
	return true;;
}



inline jule::U64 _1a96a3d57_hash128to64(_1a96a39a0_u128 _4316_sum) {
	;
	jule::U64 _456_a = (jule::U64)((_4316_sum._field_lo ^ _4316_sum._field_hi) * 11376068507788127593LLU);;
	_456_a^=(_456_a >> 47LLU);
	jule::U64 _476_b = (jule::U64)((_4316_sum._field_hi ^ _456_a) * 11376068507788127593LLU);;
	_476_b^=(_476_b >> 47LLU);
	_476_b*=11376068507788127593LLU;
	return _476_b;;
}



inline jule::U64 _1a96a4165_fetch64(jule::Slice<jule::U8> _5312_bytes) {
	return static__1a96a0309_DecodeU64(_5312_bytes);;
}



inline jule::U32 _1a96a442e_fetch32(jule::Slice<jule::U8> _5412_bytes) {
	return static__1a969e8d0_DecodeU32(_5412_bytes);;
}



inline jule::U64 _1a96a4770_shiftMix(jule::U64 _5513_z) {
	return (_5513_z ^ (_5513_z >> 47LLU));;
}



inline jule::U64 _1a96a4ab1_hashLen16(jule::U64 _5614_u, jule::U64 _5622_v) {
	return _1a96a3d57_hash128to64(_1a96a39a0_u128{._field_hi=_5614_u, ._field_lo=_5622_v});;
}



inline jule::U64 _1a96a4e35_rotate64(jule::U64 _5813_val, jule::U32 _5823_shift) {
	if ((_5823_shift != 0LLU)) {
		return (({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = _5823_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) | ({ jule::U64 __jule_x = _5813_val; jule::U32 __jule_y = (jule::U32)(64LLU - _5823_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));;
	};
	return _5813_val;;
}



inline jule::U64 _1a96a5364_hashLen16_3(jule::U64 _6616_u, jule::U64 _6624_v, jule::U64 _6632_mul) {
	jule::U64 _676_a = (jule::U64)((_6616_u ^ _6624_v) * _6632_mul);;
	_676_a^=(_676_a >> 47LLU);
	jule::U64 _696_b = (jule::U64)((_6624_v ^ _676_a) * _6632_mul);;
	_696_b^=(_696_b >> 47LLU);
	_696_b*=_6632_mul;
	return _696_b;;
}



inline jule::U64 _1a96a57e8_hashLen0to16(jule::Slice<jule::U8> _7517_bytes, jule::I32 _7532_n) {
	if ((_7532_n >= 8LL)) {
		jule::U64 _773_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _783_a = (jule::U64)(_1a96a4165_fetch64(_7517_bytes) + 11160318154034397263LLU);;
		jule::U64 _793_b = _1a96a4165_fetch64(_7517_bytes.slice((_7532_n - 8LL)));;
		jule::U64 _803_c = (jule::U64)((jule::U64)(_1a96a4e35_rotate64(_793_b, 37LLU) * _773_mul) + _783_a);;
		jule::U64 _813_d = (jule::U64)((jule::U64)(_1a96a4e35_rotate64(_783_a, 25LLU) + _793_b) * _773_mul);;
		return _1a96a5364_hashLen16_3(_803_c, _813_d, _773_mul);;
	};
	if ((_7532_n >= 4LL)) {
		jule::U64 _863_mul = (jule::U64)(11160318154034397263LLU + (jule::U64)(static_cast<jule::U64>(_7532_n) << 1LLU));;
		jule::U64 _873_a = static_cast<jule::U64>(_1a96a442e_fetch32(_7517_bytes));;
		return _1a96a5364_hashLen16_3((jule::U64)(static_cast<jule::U64>(_7532_n) + (jule::U64)(_873_a << 3LLU)), static_cast<jule::U64>(_1a96a442e_fetch32(_7517_bytes.slice((_7532_n - 4LL)))), _863_mul);;
	};
	if ((_7532_n > 0LL)) {
		jule::U8 _923_a = static_cast<jule::U8>(_7517_bytes[0LL]);;
		jule::U8 _933_b = static_cast<jule::U8>(_7517_bytes[(_7532_n >> 1LL)]);;
		jule::U8 _943_c = static_cast<jule::U8>(_7517_bytes[(_7532_n - 1LL)]);;
		jule::U32 _953_y = (jule::U32)(static_cast<jule::U32>(_923_a) + (jule::U32)(static_cast<jule::U32>(_933_b) << 8LLU));;
		jule::I32 _963_z = (_7532_n + (static_cast<jule::I32>(_943_c) << 2LL));;
		return (jule::U64)(_1a96a4770_shiftMix(((jule::U64)(static_cast<jule::U64>(_953_y) * 11160318154034397263LLU) ^ (jule::U64)(static_cast<jule::U64>(_963_z) * 14097894508562428199LLU))) * 11160318154034397263LLU);;
	};
	return 11160318154034397263LLU;;
}



inline _1a96a39a0_u128 _1a96a5ba0_hashMurmur(jule::Slice<jule::U8> _10319_bytes, jule::I32 _10334_n, _1a96a39a0_u128 _10342_seed) {
	jule::U64 _1046_a = _10342_seed._field_lo;;
	jule::U64 _1056_b = _10342_seed._field_hi;;
	jule::U64 _1066_c = static_cast<jule::U64>(0LLU);;
	jule::U64 _1076_d = static_cast<jule::U64>(0LLU);;
	jule::I32 _1086_l = (_10334_n - 16LL);;
	if ((_1086_l <= 0LL)) {
		_1046_a=(jule::U64)(_1a96a4770_shiftMix((jule::U64)(_1046_a * 13011662864482103923LLU)) * 13011662864482103923LLU);
		_1066_c=(jule::U64)((jule::U64)(_1056_b * 13011662864482103923LLU) + _1a96a57e8_hashLen0to16(_10319_bytes, _10334_n));
		if ((_10334_n >= 8LL)) {
			_1076_d=_1a96a4770_shiftMix((jule::U64)(_1046_a + _1a96a4165_fetch64(_10319_bytes)));
		} else {
			_1076_d=_1a96a4770_shiftMix((jule::U64)(_1046_a + _1066_c));
		};
	} else {
		_1066_c=_1a96a4ab1_hashLen16((jule::U64)(_1a96a4165_fetch64(_10319_bytes.slice((_10334_n - 8LL))) + 13011662864482103923LLU), _1046_a);
		_1076_d=_1a96a4ab1_hashLen16((jule::U64)(_1056_b + static_cast<jule::U64>(_10334_n)), (jule::U64)(_1066_c + _1a96a4165_fetch64(_10319_bytes.slice((_10334_n - 16LL)))));
		_1046_a+=_1076_d;
		for (;;) {
			{
				_1046_a^=(jule::U64)(_1a96a4770_shiftMix((jule::U64)(_1a96a4165_fetch64(_10319_bytes) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1046_a*=13011662864482103923LLU;
				_1056_b^=_1046_a;
				_1066_c^=(jule::U64)(_1a96a4770_shiftMix((jule::U64)(_1a96a4165_fetch64(_10319_bytes.slice(8LL)) * 13011662864482103923LLU)) * 13011662864482103923LLU);
				_1066_c*=13011662864482103923LLU;
				_1076_d^=_1066_c;
				(_10319_bytes).mut_slice(16LL);;
				_1086_l-=16LL;
				if ((_1086_l <= 0LL)) {
					goto _iter_end_1be2bca27;
				};
			}
		_iter_next_1be2bca27:;
		}
		_iter_end_1be2bca27:;;
	};
	_1046_a=_1a96a4ab1_hashLen16(_1046_a, _1066_c);
	_1056_b=_1a96a4ab1_hashLen16(_1076_d, _1056_b);
	return _1a96a39a0_u128{._field_hi=(_1046_a ^ _1056_b), ._field_lo=_1a96a4ab1_hashLen16(_1056_b, _1046_a)};;
}



inline _1a96a39a0_u128 _1a96a62ee_weakHashLen32WithSeeds(jule::U64 _14527_w, jule::U64 _14535_x, jule::U64 _14543_y, jule::U64 _14551_z, jule::U64 _14563_a, jule::U64 _14575_b) {
	_14563_a+=_14527_w;
	_14575_b=_1a96a4e35_rotate64((jule::U64)((jule::U64)(_14575_b + _14563_a) + _14551_z), 21LLU);
	jule::U64 _1482_c = _14563_a;;
	_14563_a+=_14535_x;
	_14563_a+=_14543_y;
	_14575_b+=_1a96a4e35_rotate64(_14563_a, 44LLU);
	return _1a96a39a0_u128{._field_hi=(jule::U64)(_14563_a + _14551_z), ._field_lo=(jule::U64)(_14575_b + _1482_c)};;
}



inline _1a96a39a0_u128 _1a96a672d_weakHashLen32WithSeeds_3(jule::Slice<jule::U8> _15529_bytes, jule::U64 _15544_a, jule::U64 _15552_b) {
	return _1a96a62ee_weakHashLen32WithSeeds(_1a96a4165_fetch64(_15529_bytes), _1a96a4165_fetch64(_15529_bytes.slice(8LL)), _1a96a4165_fetch64(_15529_bytes.slice(16LL)), _1a96a4165_fetch64(_15529_bytes.slice(24LL)), _15544_a, _15552_b);;
}



inline _1a96a39a0_u128 _1a96a6b5c_hashWithSeed(jule::Slice<jule::U8> _16021_bytes, jule::I32 _16040_n, _1a96a39a0_u128 _16048_seed) {
	if ((_16040_n < 128LL)) {
		return _1a96a5ba0_hashMurmur(_16021_bytes, _16040_n, _16048_seed);;
	};
	jule::I32 _1642_rn = _16040_n;;
	jule::Slice<jule::U8> _1652_t = _16021_bytes;;
	_1a96a39a0_u128 _16910_v = _1a96a39a0_u128{._field_hi=0, ._field_lo=0};;
	_1a96a39a0_u128 _17010_w = _1a96a39a0_u128{._field_hi=0, ._field_lo=0};;
	jule::U64 _1716_x = _16048_seed._field_lo;;
	jule::U64 _1726_y = _16048_seed._field_hi;;
	jule::U64 _1736_z = (jule::U64)(static_cast<jule::U64>(_16040_n) * 13011662864482103923LLU);;
	_16910_v._field_lo=(jule::U64)((jule::U64)(_1a96a4e35_rotate64((_1726_y ^ 13011662864482103923LLU), 49LLU) * 13011662864482103923LLU) + _1a96a4165_fetch64(_16021_bytes));
	_16910_v._field_hi=(jule::U64)((jule::U64)(_1a96a4e35_rotate64(_16910_v._field_lo, 42LLU) * 13011662864482103923LLU) + _1a96a4165_fetch64(_16021_bytes.slice(8LL)));
	_17010_w._field_lo=(jule::U64)((jule::U64)(_1a96a4e35_rotate64((jule::U64)(_1726_y + _1736_z), 35LLU) * 13011662864482103923LLU) + _1716_x);
	_17010_w._field_hi=(jule::U64)(_1a96a4e35_rotate64((jule::U64)(_1716_x + _1a96a4165_fetch64(_16021_bytes.slice(88LL))), 53LLU) * 13011662864482103923LLU);
	for (;;) {
		{
			_1716_x=(jule::U64)(_1a96a4e35_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1a96a4165_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1a96a4e35_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1a96a4165_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1a96a4165_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1a96a4e35_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1a96a672d_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1a96a672d_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1a96a4165_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_1716_x=(jule::U64)(_1a96a4e35_rotate64((jule::U64)((jule::U64)((jule::U64)(_1716_x + _1726_y) + _16910_v._field_lo) + _1a96a4165_fetch64(_16021_bytes.slice(8LL))), 37LLU) * 13011662864482103923LLU);
			_1726_y=(jule::U64)(_1a96a4e35_rotate64((jule::U64)((jule::U64)(_1726_y + _16910_v._field_hi) + _1a96a4165_fetch64(_16021_bytes.slice(48LL))), 42LLU) * 13011662864482103923LLU);
			_1716_x^=_17010_w._field_hi;
			_1726_y+=(jule::U64)(_16910_v._field_lo + _1a96a4165_fetch64(_16021_bytes.slice(40LL)));
			_1736_z=(jule::U64)(_1a96a4e35_rotate64((jule::U64)(_1736_z + _17010_w._field_lo), 33LLU) * 13011662864482103923LLU);
			_16910_v=_1a96a672d_weakHashLen32WithSeeds_3(_16021_bytes, (jule::U64)(_16910_v._field_hi * 13011662864482103923LLU), (jule::U64)(_1716_x + _17010_w._field_lo));
			_17010_w=_1a96a672d_weakHashLen32WithSeeds_3(_16021_bytes.slice(32LL), (jule::U64)(_1736_z + _17010_w._field_hi), (jule::U64)(_1726_y + _1a96a4165_fetch64(_16021_bytes.slice(16LL))));
			std::swap(_1736_z, _1716_x);
			(_16021_bytes).mut_slice(64LL);;
			_16040_n-=128LL;
			if ((_16040_n < 128LL)) {
				goto _iter_end_1be2c61d4;
			};
		}
	_iter_next_1be2c61d4:;
	}
	_iter_end_1be2c61d4:;;
	_1716_x+=(jule::U64)(_1a96a4e35_rotate64((jule::U64)(_16910_v._field_lo + _1736_z), 49LLU) * 14097894508562428199LLU);
	_1726_y=(jule::U64)((jule::U64)(_1726_y * 14097894508562428199LLU) + _1a96a4e35_rotate64(_17010_w._field_hi, 37LLU));
	_1736_z=(jule::U64)((jule::U64)(_1736_z * 14097894508562428199LLU) + _1a96a4e35_rotate64(_17010_w._field_lo, 27LLU));
	_17010_w._field_lo*=9LLU;
	_16910_v._field_lo*=14097894508562428199LLU;
	jule::I32 _21310_tailDone = 0LL;;
	while ((_21310_tailDone < _16040_n)) {
		{
			_21310_tailDone+=32LL;
			_1726_y=(jule::U64)((jule::U64)(_1a96a4e35_rotate64((jule::U64)(_1716_x + _1726_y), 42LLU) * 14097894508562428199LLU) + _16910_v._field_hi);
			_17010_w._field_lo+=_1a96a4165_fetch64(_1652_t.slice(((_1642_rn - _21310_tailDone) + 16LL)));
			_1716_x=(jule::U64)((jule::U64)(_1716_x * 14097894508562428199LLU) + _17010_w._field_lo);
			_1736_z+=(jule::U64)(_17010_w._field_hi + _1a96a4165_fetch64(_1652_t.slice((_1642_rn - _21310_tailDone))));
			_17010_w._field_hi+=_16910_v._field_lo;
			_16910_v=_1a96a672d_weakHashLen32WithSeeds_3(_1652_t.slice((_1642_rn - _21310_tailDone)), (jule::U64)(_16910_v._field_lo + _1736_z), _16910_v._field_hi);
			_16910_v._field_lo*=14097894508562428199LLU;
		}
	_iter_next_1be2d1dc1:;
	}
	_iter_end_1be2d1dc1:;;
	_1716_x=_1a96a4ab1_hashLen16(_1716_x, _16910_v._field_lo);
	_1726_y=_1a96a4ab1_hashLen16((jule::U64)(_1726_y + _1736_z), _17010_w._field_lo);
	return _1a96a39a0_u128{._field_hi=(jule::U64)(_1a96a4ab1_hashLen16((jule::U64)(_1716_x + _16910_v._field_hi), _17010_w._field_hi) + _1726_y), ._field_lo=_1a96a4ab1_hashLen16((jule::U64)(_1716_x + _17010_w._field_hi), (jule::U64)(_1726_y + _16910_v._field_hi))};;
}



inline jule::U64 _1a96a6e26_hash(jule::Slice<jule::U8> _23413_bytes) {
	_1a96a39a0_u128 _2356_sum = _1a96a39a0_u128{._field_hi=0, ._field_lo=0};;
	if ((_23413_bytes.len() > 16LL)) {
		_2356_sum=_1a96a6b5c_hashWithSeed(_23413_bytes.slice(16LL), (_23413_bytes.len() - 16LL), _1a96a39a0_u128{._field_hi=_1a96a4165_fetch64(_23413_bytes), ._field_lo=(jule::U64)(_1a96a4165_fetch64(_23413_bytes.slice(8LL)) + 14097894508562428199LLU)});
	} else {
		_2356_sum=_1a96a6b5c_hashWithSeed(_23413_bytes, _23413_bytes.len(), _1a96a39a0_u128{._field_hi=14097894508562428199LLU, ._field_lo=13011662864482103923LLU});
	};
	return _1a96a3d57_hash128to64(_2356_sum);;
}



inline jule::U64 _1a97936c7_metaMatchH2(jule::Array<jule::I8,8>* _5523_m, jule::I8 _5537_h) {
	return _1a97940e0_hasZeroByte((_1a9794376_castU64(_5523_m) ^ (jule::U64)(72340172838076673LLU * static_cast<jule::U64>(_5537_h))));;
}



inline jule::U64 _1a97939d5_metaMatchEmpty(jule::Array<jule::I8,8>* _6026_m) {
	return _1a97940e0_hasZeroByte((_1a9794376_castU64(_6026_m) ^ 9259542123273814144LLU));;
}



inline jule::U32 _1a9793c9e_nextMatch(jule::U64* _6419_b) {
	jule::U32 _652_s = static_cast<jule::U32>(_1a9785c19_TrailingZeros64(static_cast<jule::U64>((*(_6419_b)))));;
	(*(_6419_b))&=(~(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = _652_s; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })));
	return (_652_s >> 3LLU);;
}



inline jule::U64 _1a97940e0_hasZeroByte(jule::U64 _7016_x) {
	return static_cast<jule::U64>((((jule::U64)(_7016_x - 72340172838076673LLU) & (~(_7016_x))) & 9259542123273814144LLU));;
}



inline jule::U64 _1a9794376_castU64(jule::Array<jule::I8,8>* _7419_m) {
	return (*(((jule::U64*)(_7419_m))));;
}



inline jule::I32 _1a9794640_numGroups(jule::I32 _7914_n) {
	jule::I32 __jule_func_result = 0;
	__jule_func_result=(((_7914_n + 4LL) - 1LL) >> 2LLU);
	if ((__jule_func_result == 0LL)) {
		__jule_func_result=1LL;
	};
	return __jule_func_result;;
}



inline jule::Array<jule::I8,8> _1a979484e_newEmptyMetadata(void) {
	jule::Array<jule::I8,8> __jule_func_result = ({ auto __jule_collection = jule::Array<jule::I8,8>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
	{
		auto expr = &(__jule_func_result);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be2db86a:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			{
				__jule_func_result[_886_i]=-128LL;
			}
			_iter_next_1be2db86a:;
			++it;
			_886_i++;
			goto _iter_begin_1be2db86a;
		}
		_iter_end_1be2db86a:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_i8 _1a9794c28_splitHash(jule::U64 _9414_h) {
	__jule_tuple_u64__jule_tuple_i8 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U64>(((_9414_h & 18446744073709551488LLU) >> 7LLU));
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I8>((_9414_h & 127LLU));
	return __jule_func_result;;
}



inline jule::U32 _1a9795025_probeStart(jule::U64 _9815_hi, jule::I32 _9823_groups) {
	return _1a9795399_fastModN(static_cast<jule::U32>(_9815_hi), static_cast<jule::U32>(_9823_groups));;
}



inline jule::U32 _1a9795399_fastModN(jule::U32 _10313_x, jule::U32 _10321_n) {
	return static_cast<jule::U32>(((jule::U64)(static_cast<jule::U64>(_10313_x) * static_cast<jule::U64>(_10321_n)) >> 32LLU));;
}



inline __jule_tuple_int__jule_tuple_bool _1a9c77826_AtoiBp(jule::U8* _722_b, jule::I32 _736_n) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::Bool _86_neg = ((*(_722_b)) == '-');;
	if (_86_neg) {
		if ((_736_n == 1LL)) {
			return __jule_func_result;;
		};
		(_736_n)--;
		(_722_b)++;
	};
	for (; (_736_n > 0LL); (_736_n)--) {
		{
			if ((('0' <= (*(_722_b))) && ((*(_722_b)) <= '9'))) {
				__jule_func_result.__jule_result_arg0*=10LL;
				__jule_func_result.__jule_result_arg0+=static_cast<jule::I32>((jule::U8)((*(_722_b)) - '0'));
			} else {
				return __jule_func_result;;
			};
			(_722_b)++;
		}
	_iter_next_1be3324b5:;
	}
	_iter_end_1be3324b5:;;
	__jule_func_result.__jule_result_arg1=true;
	if (_86_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	return __jule_func_result;;
}



inline jule::Str _1a9c81247_Itoa(jule::I32 _89_x) {
	if ((_89_x < 0LL)) {
		return (jule::Str::lit("-", 1) + _1a9c8149a_Utoa(static_cast<jule::U32>((-(_89_x)))));;
	};
	return _1a9c8149a_Utoa(static_cast<jule::U32>(_89_x));;
}



inline jule::Str _1a9c8149a_Utoa(jule::U32 _1613_x) {
	if ((_1613_x == 0LLU)) {
		return jule::Str::lit("0", 1);;
	};
	jule::Slice<jule::U8> _206_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(20LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _216_i = 0LL;;
	while ((_1613_x >= 10LLU)) {
		{
			jule::U32 _233_q = (_1613_x / 10LLU);;
			_206_buf[_216_i]=static_cast<jule::U8>((jule::U32)((jule::U32)('0' + _1613_x) - (jule::U32)(_233_q * 10LLU)));
			(_216_i)++;
			_1613_x=_233_q;
		}
	_iter_next_1be339005:;
	}
	_iter_end_1be339005:;;
	_206_buf[_216_i]=static_cast<jule::U8>((jule::U32)('0' + _1613_x));
	(_206_buf).mut_slice(0LL, (_216_i + 1LL));;
	_1a9c816cb_rev(&(_206_buf));
	return _1c3061212_StrFromBytes(_206_buf);;
}



inline void _1a9c816cb_rev(jule::Slice<jule::U8>* _3513_b) {
	jule::I32 _366_i = 0LL;;
	for (; (_366_i < ((*(_3513_b)).len() >> 1LL)); (_366_i)++) {
		{
			({
				jule::U8 ___jule_assign_arg = (*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)];
				jule::U8 _1___jule_assign_arg = (*(_3513_b))[_366_i];
				(*(_3513_b))[_366_i] = ___jule_assign_arg;
				(*(_3513_b))[(((*(_3513_b)).len() - 1LL) - _366_i)] = _1___jule_assign_arg;
			});
		}
	_iter_next_1be33cb0d:;
	}
	_iter_end_1be33cb0d:;;
}



inline jule::I32 _1a9cbd1a7_findLastByte(jule::U8* _4517_begin, jule::U8* _4535_end, jule::U8 _4547_b) {
	jule::U8* _466_it = _4535_end;;
	for (; (_466_it >= _4517_begin); (_466_it)--) {
		{
			{
				if (((*(_466_it)) == _4547_b)) {
					return ((jule::I32)((_466_it - _4517_begin)));;
				};
			};
		}
	_iter_next_1be34ac3c:;
	}
	_iter_end_1be34ac3c:;;
	return -1LL;;
}



inline jule::I32 _1a9cbd85b_FindByteStr(jule::Str _6816_s, jule::U8 _6824_b) {
	{
		auto expr = &(_6816_s);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1be34b105:;
		if (it != expr_end) {
			jule::I32 _706_i = it - expr->begin();
			jule::U8 *_709_se = it;
			{
				if (((*(_709_se)) == _6824_b)) {
					return _706_i;;
				};
			}
			_iter_next_1be34b105:;
			++it;
			_706_i++;
			goto _iter_begin_1be34b105;
		}
		_iter_end_1be34b105:;
	};
	return -1LL;;
}



inline jule::I32 _1a9cbdbd0_FindLastByteStr(jule::Str _7920_s, jule::U8 _7928_b) {
	if ((_7920_s.len() == 0LL)) {
		return -1LL;;
	};
	return _1a9cbd1a7_findLastByte((&(_7920_s[0LL])), (&(_7920_s[(_7920_s.len() - 1LL)])), _7928_b);;
}



inline jule::Str _1a9cce790_Getwd(void) {
	jule::U8* _96_buf = _1c3009a6d_Getcwd(nullptr, 0LLU);;
	if ((_96_buf == nullptr)) {
		return jule::Str();;
	};
	jule::Str _132_pwd = _1c2ee9750_BytePtrToStr(_96_buf);;
	{
		_1c17a029e_Free(_96_buf);
	};
	return _132_pwd;;
}



inline jule::Bool _1a98e9c4b_IsLetter(jule::I32 _7613_r) {
	if ((static_cast<jule::U32>(_7613_r) <= 255LLU)) {
		return ((_1abb235e3__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_7613_r))] & 96LLU) != 0LLU);;
	};
	return _1abb2c113_isExcludingLatin(_1a9903c22_Letter, _7613_r);;
}



inline jule::Bool _1abb2b486_is16(jule::Slice<_1abb296e8_Range16> _1919_ranges, jule::U16 _19128_r) {
	if (((_1919_ranges.len() <= 18LL) || (_19128_r <= 255LLU))) {
		{
			auto expr = &(_1919_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c003c19c:;
			if (it != expr_end) {
				jule::I32 _1937_i = it - expr->begin();
				{
					_1abb296e8_Range16* _1944_range = (&(_1919_ranges[_1937_i]));;
					{
						if ((_19128_r < (*(_1944_range))._field_Lo)) {
							return false;;
						};
						if ((_19128_r <= (*(_1944_range))._field_Hi)) {
							return (((*(_1944_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_1944_range))._field_Lo); jule::U16 __jule_y = (*(_1944_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1c003c19c:;
				++it;
				_1937_i++;
				goto _iter_begin_1c003c19c;
			}
			_iter_end_1c003c19c:;
		};
		return false;;
	};
	jule::I32 _2086_lo = 0LL;;
	jule::I32 _2096_hi = _1919_ranges.len();;
	while ((_2086_lo < _2096_hi)) {
		{
			jule::I32 _2113_m = (_2086_lo + ((_2096_hi - _2086_lo) >> 1LLU));;
			_1abb296e8_Range16* _2123_range = (&(_1919_ranges[_2113_m]));;
			{
				if ((((*(_2123_range))._field_Lo <= _19128_r) && (_19128_r <= (*(_2123_range))._field_Hi))) {
					return (((*(_2123_range))._field_Stride == 1LLU) || (({ jule::U16 __jule_x = (jule::U16)(_19128_r - (*(_2123_range))._field_Lo); jule::U16 __jule_y = (*(_2123_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U16)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_19128_r < (*(_2123_range))._field_Lo)) {
					_2096_hi=_2113_m;
				} else {
					_2086_lo=(_2113_m + 1LL);
				};
			};
		}
	_iter_next_1c003ae37:;
	}
	_iter_end_1c003ae37:;;
	return false;;
}



inline jule::Bool _1abb2b80a_is32(jule::Slice<_1abb29c26_Range32> _2289_ranges, jule::U32 _22828_r) {
	if ((_2289_ranges.len() <= 18LL)) {
		{
			auto expr = &(_2289_ranges);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c00437be:;
			if (it != expr_end) {
				jule::I32 _2307_i = it - expr->begin();
				{
					_1abb29c26_Range32* _2314_range = (&(_2289_ranges[_2307_i]));;
					{
						if ((_22828_r < (*(_2314_range))._field_Lo)) {
							return false;;
						};
						if ((_22828_r <= (*(_2314_range))._field_Hi)) {
							return (((*(_2314_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2314_range))._field_Lo); jule::U32 __jule_y = (*(_2314_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
						};
					};
				}
				_iter_next_1c00437be:;
				++it;
				_2307_i++;
				goto _iter_begin_1c00437be;
			}
			_iter_end_1c00437be:;
		};
		return false;;
	};
	jule::I32 _2456_lo = 0LL;;
	jule::I32 _2466_hi = _2289_ranges.len();;
	while ((_2456_lo < _2466_hi)) {
		{
			jule::I32 _2483_m = (_2456_lo + ((_2466_hi - _2456_lo) >> 1LLU));;
			_1abb29c26_Range32* _2493_range = (&(_2289_ranges[_2483_m]));;
			{
				if ((((*(_2493_range))._field_Lo <= _22828_r) && (_22828_r <= (*(_2493_range))._field_Hi))) {
					return (((*(_2493_range))._field_Stride == 1LLU) || (({ jule::U32 __jule_x = (jule::U32)(_22828_r - (*(_2493_range))._field_Lo); jule::U32 __jule_y = (*(_2493_range))._field_Stride; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) == 0LLU));;
				};
				if ((_22828_r < (*(_2493_range))._field_Lo)) {
					_2466_hi=_2483_m;
				} else {
					_2456_lo=(_2483_m + 1LL);
				};
			};
		}
	_iter_next_1c0040205:;
	}
	_iter_end_1c0040205:;;
	return false;;
}



inline jule::Bool _1abb2c113_isExcludingLatin(jule::Ptr<_1abb2a199_RangeTable> _27821_rangeTab, jule::I32 _27844_r) {
	{
		jule::Slice<_1abb296e8_Range16> *_2804_R16 = &((*(_27821_rangeTab))._field_R16);;
		jule::I32 _2823_off = (*_27821_rangeTab.alloc)._field_LatinOffset;;
		if ((((*(_2804_R16)).len() > _2823_off) && (static_cast<jule::U32>(_27844_r) <= static_cast<jule::U32>((*(_2804_R16))[((*(_2804_R16)).len() - 1LL)]._field_Hi)))) {
			return _1abb2b486_is16((*(_2804_R16)).slice(_2823_off), static_cast<jule::U16>(_27844_r));;
		};
	};
	jule::Slice<_1abb29c26_Range32> *_2873_R32 = &((*(_27821_rangeTab))._field_R32);;
	if ((((*(_2873_R32)).len() > 0LL) && (_27844_r >= static_cast<jule::I32>((*(_2873_R32))[0LL]._field_Lo)))) {
		return _1abb2b80a_is32((*(_2873_R32)), static_cast<jule::U32>(_27844_r));;
	};
	return false;;
}



inline jule::Bool _1abb2c355_IsUpper(jule::I32 _29512_r) {
	if ((static_cast<jule::U32>(_29512_r) <= 255LLU)) {
		return ((_1abb235e3__PROPERTIES[static_cast<jule::I32>(static_cast<jule::U8>(_29512_r))] & 96LLU) == 32LLU);;
	};
	return _1abb2c113_isExcludingLatin(_1a9909ee2_Upper, _29512_r);;
}



inline jule::I32 _1abb2ca4d_convertCase(jule::I32 _31316_case, jule::I32 _31327_r, jule::Ptr<_1abb29242_CaseRange> _31336_cr) {
	jule::I32 _3142_delta = (*(_31336_cr))._field_Delta[_31316_case];;
	if ((_3142_delta > 1114111LL)) {
		return (static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo) + (((_31327_r - static_cast<jule::I32>((*_31336_cr.alloc)._field_Lo)) & -2LL) | static_cast<jule::I32>((_31316_case & 1LL))));;
	};
	return (_31327_r + _3142_delta);;
}



inline jule::Ptr<_1abb29242_CaseRange> _1abb2cdc2_lookupCaseRange(jule::I32 _33320_r, jule::Slice<_1abb29242_CaseRange> _33329_caseRange) {
	jule::I32 _3356_lo = 0LL;;
	jule::I32 _3366_hi = _33329_caseRange.len();;
	while ((_3356_lo < _3366_hi)) {
		{
			jule::I32 _3383_m = static_cast<jule::I32>((static_cast<jule::U32>((_3356_lo + _3366_hi)) >> 1LLU));;
			jule::Ptr<_1abb29242_CaseRange> _3397_cr = ((jule::Ptr<_1abb29242_CaseRange>)((&(_33329_caseRange[_3383_m]))));;
			if (((static_cast<jule::I32>((*(_3397_cr))._field_Lo) <= _33320_r) && (_33320_r <= static_cast<jule::I32>((*_3397_cr.alloc)._field_Hi)))) {
				return _3397_cr;;
			};
			if ((_33320_r < static_cast<jule::I32>((*(_3397_cr))._field_Lo))) {
				_3366_hi=_3383_m;
			} else {
				_3356_lo=(_3383_m + 1LL);
			};
		}
	_iter_next_1c0054c86:;
	}
	_iter_end_1c0054c86:;;
	return nullptr;;
}



inline jule::I32 _1abb2d18b_SimpleFold(jule::I32 _37015_r) {
	if (((_37015_r < 0LL) || (_37015_r > 1114111LL))) {
		return _37015_r;;
	};
	if ((static_cast<jule::I32>(_37015_r) < 128LL)) {
		return static_cast<jule::I32>(_1abb253c5_asciiFold[_37015_r]);;
	};
	jule::I32 _3806_lo = 0LL;;
	jule::I32 _3816_hi = _1abb256b1_caseOrbit.len();;
	while ((_3806_lo < _3816_hi)) {
		{
			jule::I32 _3833_m = static_cast<jule::I32>((static_cast<jule::U32>((_3806_lo + _3816_hi)) >> 1LLU));;
			if ((static_cast<jule::I32>(_1abb256b1_caseOrbit[_3833_m]._field_from) < _37015_r)) {
				_3806_lo=(_3833_m + 1LL);
			} else {
				_3816_hi=_3833_m;
			};
		}
	_iter_next_1c00590dc:;
	}
	_iter_end_1c00590dc:;;
	if (((_3806_lo < _1abb256b1_caseOrbit.len()) && (static_cast<jule::I32>(_1abb256b1_caseOrbit[_3806_lo]._field_from) == _37015_r))) {
		return static_cast<jule::I32>(_1abb256b1_caseOrbit[_3806_lo]._field_to);;
	};
	jule::Ptr<_1abb29242_CaseRange> _3972_cr = _1abb2cdc2_lookupCaseRange(_37015_r, _1abb2301b_CaseRanges);;
	if ((_3972_cr != nullptr)) {
		jule::I32 _3993_l = _1abb2ca4d_convertCase(1LL, _37015_r, _3972_cr);;
		if ((_3993_l != _37015_r)) {
			return _3993_l;;
		};
		return _1abb2ca4d_convertCase(0LL, _37015_r, _3972_cr);;
	};
	return _37015_r;;
}



inline jule::Str _1abb2d60e_Repeat(jule::Str _1111_s, jule::I32 _1123_n) {
	if ((_1123_n <= 0LL)) {
		return jule::Str();;
	};
	if ((_1111_s.len() > ({ jule::I32 __jule_x = 2147483647LL; jule::I32 __jule_y = _1123_n; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }))) {
		__jule_panic_s(jule::Str::lit("strings: repeat: integer buffer size overflow", 45) + jule::Str("\nlocation: std/strings/strings.jule:16:3"));;
	};
	_1a95669ea_Builder _186_ss = static__1a9567369_New((_1111_s.len() * _1123_n));;
	for (; (_1123_n > 0LL); (_1123_n)--) {
		{
			({
				auto except = _1a95679eb_WriteStr(&_186_ss, _1111_s);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:20:3"));
				(except.result);
			});
		}
	_iter_next_1c006d189:;
	}
	_iter_end_1c006d189:;;
	return _1a956837b_Str(&_186_ss);;
}



inline jule::Bool _1abb2d9c7_HasPrefix(jule::Str _2614_s, jule::Str _2622_sub) {
	return ((_2614_s.len() >= _2622_sub.len()) && (_2614_s.slice(0LL, _2622_sub.len()) == _2622_sub));;
}



inline jule::Bool _1abb2dd4b_HasSuffix(jule::Str _3114_s, jule::Str _3122_sub) {
	return ((_3114_s.len() >= _3122_sub.len()) && (_3114_s.slice((_3114_s.len() - _3122_sub.len())) == _3122_sub));;
}



inline jule::I32 _1abb2e302_FindAt(jule::Str _3911_s, jule::Str _3919_sub, jule::I32 _3933_i) {
	if ((((_3933_i < 0LL) || (_3911_s.len() < _3919_sub.len())) || (_3919_sub.len() == 0LL))) {
		return -1LL;;
	};
	for (; (_3933_i < _3911_s.len()); (_3933_i)++) {
		{
			if (_1abb2d9c7_HasPrefix(_3911_s.slice(_3933_i), _3919_sub)) {
				return _3933_i;;
			};
		}
	_iter_next_1c0071d4c:;
	}
	_iter_end_1c0071d4c:;;
	return -1LL;;
}



inline jule::I32 _1abb2e643_Find(jule::Str _549_s, jule::Str _5417_sub) {
	return _1abb2e302_FindAt(_549_s, _5417_sub, 0LL);;
}



inline jule::I32 _1abb2ea72_FindLastAt(jule::Str _6215_s, jule::Str _6223_sub, jule::I32 _6233_i) {
	jule::I32 _636_j = ((_6233_i - _6223_sub.len()) + 1LL);;
	if (((((_6223_sub.len() == 0LL) || (_6233_i < 0LL)) || (_6233_i >= _6215_s.len())) || (_636_j < 0LL))) {
		return -1LL;;
	};
	_julec_label_1c00740a2:;
	for (; (_636_j >= 0LL); (_636_j)--) {
		{
			jule::I32 _697_k = _636_j;;
			jule::I32 _707_z = 0LL;;
			for (; (_707_z < _6223_sub.len()); ({
				jule::I32 ___jule_assign_arg = (_697_k + 1LL);
				jule::I32 _1___jule_assign_arg = (_707_z + 1LL);
				_697_k = ___jule_assign_arg;
				_707_z = _1___jule_assign_arg;
			})) {
				{
					if ((_6215_s[_697_k] != _6223_sub[_707_z])) {
						goto _iter_next_1c00738ba;
					};
				}
			_iter_next_1c0075823:;
			}
			_iter_end_1c0075823:;;
			return _636_j;;
		}
	_iter_next_1c00738ba:;
	}
	_iter_end_1c00738ba:;;
	return -1LL;;
}



inline jule::I32 _1abb2ede6_FindLast(jule::Str _8413_s, jule::Str _8421_sub) {
	return _1abb2ea72_FindLastAt(_8413_s, _8421_sub, (_8413_s.len() - 1LL));;
}



inline jule::I32 _1abb316cd_FindLastByte(jule::Str _14817_s, jule::U8 _14825_b) {
	return _1a9cbdbd0_FindLastByteStr(_14817_s, _14825_b);;
}



inline jule::I32 _1abb31a52_FindRune(jule::Str _15513_s, jule::I32 _15521_r) {
	jule::I32 _1566_i = 0LL;;
	while ((_1566_i < _15513_s.len())) {
		{
			jule::I32 _1583_br;
			jule::I32 _1587_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_15513_s.slice(_1566_i));
				_1583_br = __jule_assign_result.__jule_result_arg0;
				_1587_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_15521_r == _1583_br)) {
				return _1566_i;;
			};
			_1566_i+=_1587_n;
		}
	_iter_next_1c007c97e:;
	}
	_iter_end_1c007c97e:;;
	return -1LL;;
}



inline jule::I32 _1abb3247b_FindAny(jule::Str _18512_s, jule::Str _18520_runes) {
	jule::I32 _1866_i = 0LL;;
	while ((_1866_i < _18512_s.len())) {
		{
			jule::I32 _1883_r;
			jule::I32 _1886_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_18512_s.slice(_1866_i));
				_1883_r = __jule_assign_result.__jule_result_arg0;
				_1886_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1abb31a52_FindRune(_18520_runes, _1883_r) != -1LL)) {
				return _1866_i;;
			};
			_1866_i+=_1886_n;
		}
	_iter_next_1c0080c90:;
	}
	_iter_end_1c0080c90:;;
	return -1LL;;
}



inline jule::Slice<jule::Str> _1abb32b1e_Split(jule::Str _21510_s, jule::Str _21518_sub, jule::I32 _21532_n) {
	jule::I32 _2166_cap = _21532_n;;
	if ((_21532_n < 0LL)) {
		_2166_cap=16LLU;
	};
	jule::Slice<jule::Str> _2206_parts = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(0LL, _2166_cap); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Str(); __jule_collection; });;
	if ((_21532_n == 0LL)) {
		return _2206_parts;;
	};
	if ((_21532_n < 0LL)) {
		_21532_n=_21510_s.len();
	};
	jule::I32 _2276_i = 0LL;;
	for (; (_21532_n > 0LL); (_21532_n)--) {
		{
			jule::I32 _2293_j = _1abb2e302_FindAt(_21510_s, _21518_sub, _2276_i);;
			if ((_2293_j == -1LL)) {
				goto _iter_end_1c0085ea4;
			};
			{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i, _2293_j)); };
			_2276_i=(_2293_j + _21518_sub.len());
		}
	_iter_next_1c0085ea4:;
	}
	_iter_end_1c0085ea4:;;
	if (((_21532_n > 0LL) && (_2276_i < _21510_s.len()))) {
		{ jule::Slice<jule::Str> &__jule_push_dest = _2206_parts; __jule_push_dest.push(_21510_s.slice(_2276_i)); };
	};
	return _2206_parts;;
}



inline jule::Slice<jule::Str> _1abb32e93_SplitAll(jule::Str _24413_s, jule::Str _24421_sub) {
	return _1abb32b1e_Split(_24413_s, _24421_sub, -1LL);;
}



inline jule::Bool _1abb33317_Contains(jule::Str _24913_s, jule::Str _24921_sub) {
	return (_1abb2e302_FindAt(_24913_s, _24921_sub, 0LL) != -1LL);;
}



inline jule::Bool _1abb33d84_ContainsAny(jule::Str _26416_s, jule::Str _26424_runes) {
	return (_1abb3247b_FindAny(_26416_s, _26424_runes) != -1LL);;
}



inline jule::I32 _1abb34208_Count(jule::Str _27010_s, jule::Str _27018_sub) {
	if ((_27018_sub.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _2746_n = 0LL;;
	jule::I32 _2756_i = 0LL;;
	for (;;) {
		{
			jule::I32 _2773_j = _1abb2e302_FindAt(_27010_s, _27018_sub, _2756_i);;
			if ((_2773_j == -1LL)) {
				goto _iter_end_1c008b163;
			};
			(_2746_n)++;
			_2756_i=(_2773_j + _27018_sub.len());
		}
	_iter_next_1c008b163:;
	}
	_iter_end_1c008b163:;;
	return _2746_n;;
}



inline jule::Str _1abb346e2_Replace(jule::Str _29012_s, jule::Str _29020_sub, jule::Str _29030_new, jule::I32 _29044_n) {
	if (((_29044_n == 0LL) || (_29020_sub == _29030_new))) {
		return _29012_s;;
	};
	jule::I32 _2952_m = _1abb34208_Count(_29012_s, _29020_sub);;
	if ((_2952_m == 0LL)) {
		return _29012_s;;
	};
	if (((_29044_n < 0LL) || (_2952_m < _29044_n))) {
		_29044_n=_2952_m;
	};
	_1a95669ea_Builder _3036_ss = static__1a9567369_New(((_29012_s.len() + (_29044_n * (_29030_new.len() - _29020_sub.len()))) + 1LL));;
	jule::I32 _3046_i = 0LL;;
	for (; (_29044_n > 0LL); (_29044_n)--) {
		{
			jule::I32 _3063_j = _1abb2e302_FindAt(_29012_s, _29020_sub, _3046_i);;
			if ((_3063_j == -1LL)) {
				goto _iter_end_1c008ec49;
			};
			({
				auto except = _1a95679eb_WriteStr(&_3036_ss, _29012_s.slice(_3046_i, _3063_j));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:310:3"));
				(except.result);
			});
			({
				auto except = _1a95679eb_WriteStr(&_3036_ss, _29030_new);
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:311:3"));
				(except.result);
			});
			_3046_i=(_3063_j + _29020_sub.len());
		}
	_iter_next_1c008ec49:;
	}
	_iter_end_1c008ec49:;;
	({
		auto except = _1a95679eb_WriteStr(&_3036_ss, _29012_s.slice(_3046_i));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:314:2"));
		(except.result);
	});
	return _1a956837b_Str(&_3036_ss);;
}



inline jule::Str _1abb34b21_ReplaceAll(jule::Str _32015_s, jule::Str _32023_sub, jule::Str _32033_new) {
	return _1abb346e2_Replace(_32015_s, _32023_sub, _32033_new, -1LL);;
}



inline jule::Str _1abb3589c_TrimLeft(jule::Str _35317_s, jule::Str _35325_cutset) {
	jule::I32 _3546_i = 0LL;;
	while ((_3546_i < _35317_s.len())) {
		{
			jule::I32 _3563_r;
			jule::I32 _3566_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_35317_s.slice(_3546_i));
				_3563_r = __jule_assign_result.__jule_result_arg0;
				_3566_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1abb31a52_FindRune(_35325_cutset, _3563_r) == -1LL)) {
				return _35317_s.slice(_3546_i);;
			};
			_3546_i+=_3566_n;
		}
	_iter_next_1c00954d0:;
	}
	_iter_end_1c00954d0:;;
	return jule::Str();;
}



inline jule::Str _1abb35c21_TrimRight(jule::Str _36714_s, jule::Str _36722_cutset) {
	jule::I32 _3686_i = _36714_s.len();;
	while ((_3686_i > 0LL)) {
		{
			jule::I32 _3703_r;
			jule::I32 _3706_n;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952e4a7_DecodeLastRuneStr(_36714_s.slice(0LL, _3686_i));
				_3703_r = __jule_assign_result.__jule_result_arg0;
				_3706_n = __jule_assign_result.__jule_result_arg1;
			});
			if ((_1abb31a52_FindRune(_36722_cutset, _3703_r) == -1LL)) {
				return _36714_s.slice(0LL, _3686_i);;
			};
			_3686_i-=_3706_n;
		}
	_iter_next_1c00970e7:;
	}
	_iter_end_1c00970e7:;;
	return jule::Str();;
}



inline jule::Str _1abb3632b_Trim(jule::Str _3819_s, jule::Str _38117_cutset) {
	return _1abb3589c_TrimLeft(_1abb35c21_TrimRight(_3819_s, _38117_cutset), _38117_cutset);;
}



inline jule::Str _1abb3665b_Join(jule::Slice<jule::Str> _3879_parts, jule::Str _38723_sep) {
	{
		auto _match_expr{ _3879_parts.len() };
		
		if (_match_expr == 0LL) {
			_case_begin_1c00989cd:;
			{
				return jule::Str();;
			}
		}
		else if (_match_expr == 1LL) {
			_case_begin_1c00991e8:;
			{
				return _3879_parts[0LL];;
			}
		}
		_match_end_1c0099160:;
	};
	jule::I32 _3946_n = 0LL;;
	{
		auto expr = &(_3879_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00992a3:;
		if (it != expr_end) {
			jule::Str *_3959_part = it;
			{
				_3946_n+=(*(_3959_part)).len();
				(_3946_n)++;
			}
			_iter_next_1c00992a3:;
			++it;
			goto _iter_begin_1c00992a3;
		}
		_iter_end_1c00992a3:;
	};
	_1a95669ea_Builder _3996_s = static__1a9567369_New((_3946_n + 1LL));;
	({
		auto except = _1a95679eb_WriteStr(&_3996_s, _3879_parts[0LL]);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:400:2"));
		(except.result);
	});
	{
		auto expr = _3879_parts.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c009b1ea:;
		if (it != expr_end) {
			jule::Str *_4019_part = it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_3996_s, _38723_sep);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:402:3"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&_3996_s, (*(_4019_part)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/strings/strings.jule:403:3"));
					(except.result);
				});
			}
			_iter_next_1c009b1ea:;
			++it;
			goto _iter_begin_1c009b1ea;
		}
		_iter_end_1c009b1ea:;
	};
	return _1a956837b_Str(&_3996_s);;
}



inline jule::Bool _1abb37d33_EqualFold(jule::Str _5518_s, jule::Str _5530_t) {
	jule::I32 _576_i = 0LL;;
	for (; ((_576_i < _5518_s.len()) && (_576_i < _5530_t.len())); (_576_i)++) {
		{
			jule::U8 _597_sr = _5518_s[_576_i];;
			jule::U8 _607_tr = _5530_t[_576_i];;
			if (((_597_sr | _607_tr) >= 128LLU)) {
				goto _julec_label_1c009c11e;
			};
			if ((_607_tr == _597_sr)) {
				goto _iter_next_1c009e0bb;
			};
			if ((_607_tr < _597_sr)) {
				std::swap(_607_tr, _597_sr);
			};
			if (((('A' <= _597_sr) && (_597_sr <= 'Z')) && (_607_tr == (jule::U8)((jule::U8)(_597_sr + 'a') - 'A')))) {
				goto _iter_next_1c009e0bb;
			};
			return false;;
		}
	_iter_next_1c009e0bb:;
	}
	_iter_end_1c009e0bb:;;
	return (_5518_s.len() == _5530_t.len());;
	_julec_label_1c009c11e:;
	(_5518_s).mut_slice(_576_i);;
	(_5530_t).mut_slice(_576_i);;
	{
		auto expr = &(_5518_s);
		jule::U8 *it = expr->begin();
		const jule::U8 *end = it + expr->len();
		jule::Int len;
		jule::I32 _8614_sr;
		_iter_begin_1c00a2344:;
		__jule_runeStep(it, end - it, &_8614_sr, &len);
		if (it < end) {
			{
				if ((_5530_t.len() == 0LL)) {
					return false;;
				};
				jule::I32 _9311_tr = 0;;
				if ((_5530_t[0LL] < 128LLU)) {
					({
						jule::I32 ___jule_assign_arg = static_cast<jule::I32>(_5530_t[0LL]);
						jule::Str _1___jule_assign_arg = _5530_t.slice(1LL);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				} else {
					jule::I32 _974_r;
					jule::I32 _977_size;
					({
						__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_5530_t);
						_974_r = __jule_assign_result.__jule_result_arg0;
						_977_size = __jule_assign_result.__jule_result_arg1;
					});
					({
						jule::I32 ___jule_assign_arg = _974_r;
						jule::Str _1___jule_assign_arg = _5530_t.slice(_977_size);
						_9311_tr = ___jule_assign_arg;
						_5530_t = _1___jule_assign_arg;
					});
				};
				if ((_9311_tr == _8614_sr)) {
					goto _iter_next_1c00a2344;
				};
				if ((_9311_tr < _8614_sr)) {
					std::swap(_9311_tr, _8614_sr);
				};
				if ((_9311_tr < 128LL)) {
					if (((('A' <= _8614_sr) && (_8614_sr <= 'Z')) && (_9311_tr == ((_8614_sr + 'a') - 'A')))) {
						goto _iter_next_1c00a2344;
					};
					return false;;
				};
				jule::I32 _1237_r = _1abb2d18b_SimpleFold(_8614_sr);;
				while (((_1237_r != _8614_sr) && (_1237_r < _9311_tr))) {
					{
						_1237_r=_1abb2d18b_SimpleFold(_1237_r);
					}
				_iter_next_1c00a2ac5:;
				}
				_iter_end_1c00a2ac5:;;
				if ((_1237_r == _9311_tr)) {
					goto _iter_next_1c00a2344;
				};
				return false;;
			}
			_iter_next_1c00a2344:;
			it += len;
			goto _iter_begin_1c00a2344;
		}
	};
	return (_5530_t.len() == 0LL);;
}



inline jule::Str _1abb3984b_Clean(jule::Str _10914_path) {
	jule::Str _1102_originalPath = _10914_path;;
	jule::I32 _1112_volLen = _1abb3c61d_volumeNameLen(_10914_path);;
	(_10914_path).mut_slice(_1112_volLen);;
	if ((_10914_path).empty()) {
		if ((((_1112_volLen > 1LL) && _1abb3c046_IsPathSep(_1102_originalPath[0LL])) && _1abb3c046_IsPathSep(_1102_originalPath[1LL]))) {
			return _1abb39e23_FromSlash(_1102_originalPath);;
		};
		return (_1102_originalPath + jule::Str::lit(".", 1));;
	};
	jule::Bool _1202_rooted = _1abb3c046_IsPathSep(_10914_path[0LL]);;
	jule::I32 _1272_n = _10914_path.len();;
	_1abb389b0_lazyBuff _1286_out = _1abb389b0_lazyBuff{._field_path=_10914_path, ._field_buff=jule::Slice<jule::U8>(nullptr), ._field_w=0, ._field_volAndPath=_1102_originalPath, ._field_volLen=_1112_volLen};;
	jule::I32 _1336_r;
	jule::I32 _13313_dotdot;
	({
		jule::I32 ___jule_assign_arg = 0LL;
		jule::I32 _1___jule_assign_arg = 0LL;
		_1336_r = ___jule_assign_arg;
		_13313_dotdot = _1___jule_assign_arg;
	});
	if (_1202_rooted) {
		_1abb39230_append(&_1286_out, 47LLU);
		({
			jule::I32 ___jule_assign_arg = 1LL;
			jule::I32 _1___jule_assign_arg = 1LL;
			_1336_r = ___jule_assign_arg;
			_13313_dotdot = _1___jule_assign_arg;
		});
	};
	while ((_1336_r < _1272_n)) {
		{
			{
				
				if (_1abb3c046_IsPathSep(_10914_path[_1336_r])) {
					_case_begin_1c00b9c41:;
					{
						(_1336_r)++;
					}
				}
				else if (((_10914_path[_1336_r] == '.') && (((_1336_r + 1LL) == _1272_n) || _1abb3c046_IsPathSep(_10914_path[(_1336_r + 1LL)])))) {
					_case_begin_1c00b79ca:;
					{
						(_1336_r)++;
					}
				}
				else if ((((_10914_path[_1336_r] == '.') && (_10914_path[(_1336_r + 1LL)] == '.')) && (((_1336_r + 2LL) == _1272_n) || _1abb3c046_IsPathSep(_10914_path[(_1336_r + 2LL)])))) {
					_case_begin_1c00b7a41:;
					{
						_1336_r+=2LL;
						{
							
							if ((_1286_out._field_w > _13313_dotdot)) {
								_case_begin_1c00bdd00:;
								{
									(_1286_out._field_w)--;
									while (((_1286_out._field_w > _13313_dotdot) && (!(_1abb3c046_IsPathSep(_1abb38e77_index(&_1286_out, _1286_out._field_w)))))) {
										{
											(_1286_out._field_w)--;
										}
									_iter_next_1c00be6a2:;
									}
									_iter_end_1c00be6a2:;;
								}
							}
							else if ((!(_1202_rooted))) {
								_case_begin_1c00bdd99:;
								{
									if ((_1286_out._field_w > 0LL)) {
										_1abb39230_append(&_1286_out, 47LLU);
									};
									_1abb39230_append(&_1286_out, '.');
									_1abb39230_append(&_1286_out, '.');
									_13313_dotdot=_1286_out._field_w;
								}
							}
							_match_end_1c00bd98c:;
						};
					}
				}
				else {
					_case_begin_1c00b7964:;
					{
						if (((_1202_rooted && (_1286_out._field_w != 1LL)) || ((!(_1202_rooted)) && (_1286_out._field_w != 0LL)))) {
							_1abb39230_append(&_1286_out, 47LLU);
						};
						;
						for (; ((_1336_r < _1272_n) && (!(_1abb3c046_IsPathSep(_10914_path[_1336_r])))); (_1336_r)++) {
							{
								_1abb39230_append(&_1286_out, _10914_path[_1336_r]);
							}
						_iter_next_1c00ba945:;
						}
						_iter_end_1c00ba945:;;
					}
				}
				_match_end_1c00b78a9:;
			};
		}
	_iter_next_1c00b7854:;
	}
	_iter_end_1c00b7854:;;
	if ((_1286_out._field_w == 0LL)) {
		_1abb39230_append(&_1286_out, '.');
	};
	return _1abb39e23_FromSlash(_1abb394b6_string(&_1286_out));;
}



inline jule::Str _1abb39e23_FromSlash(jule::Str _21214_path) {
	{
		return _21214_path;;
	};
}



inline jule::Str _1abb3a264_Join(jule::Slice<jule::Str> _2269_elem) {
	return _1abb3cbe5_join(_2269_elem);;
}



inline jule::Str _1abb3a4ea_Ext(jule::Str _2318_path) {
	jule::I32 _2326_i = (_2318_path.len() - 1LL);;
	for (; ((_2326_i >= 0LL) && (!(_1abb3c046_IsPathSep(_2318_path[_2326_i])))); (_2326_i)--) {
		{
			if ((_2318_path[_2326_i] == '.')) {
				return _2318_path.slice(_2326_i);;
			};
		}
	_iter_next_1c00c2e8b:;
	}
	_iter_end_1c00c2e8b:;;
	return jule::Str();;
}



inline __jule_tuple_str__jule_tuple_bool _1abb3a7b4_Abs(jule::Str _2468_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result = std::move(_1abb3c95e_abs(_2468_path));
return __jule_func_result;;
}



inline jule::Str _1abb3aa7d_Base(jule::Str _25213_path) {
	if ((_25213_path).empty()) {
		return jule::Str::lit(".", 1);;
	};
	while (((_25213_path.len() > 0LL) && _1abb3c046_IsPathSep(_25213_path[(_25213_path.len() - 1LL)]))) {
		{
			(_25213_path).mut_slice(0LL, (_25213_path.len() - 1LL));;
		}
	_iter_next_1c00c4333:;
	}
	_iter_end_1c00c4333:;;
	(_25213_path).mut_slice(_1abb3b199_VolumeName(_25213_path).len());;
	jule::I32 _2636_i = (_25213_path.len() - 1LL);;
	while (((_2636_i >= 0LL) && (!(_1abb3c046_IsPathSep(_25213_path[_2636_i]))))) {
		{
			(_2636_i)--;
		}
	_iter_next_1c00c4ae7:;
	}
	_iter_end_1c00c4ae7:;;
	if ((_2636_i >= 0LL)) {
		(_25213_path).mut_slice((_2636_i + 1LL));;
	};
	if ((_25213_path).empty()) {
		return jule::Str::lit("/", 1);;
	};
	return _25213_path;;
}



inline jule::Str _1abb3ae57_Dir(jule::Str _2838_path) {
	jule::Str _2842_vol = _1abb3b199_VolumeName(_2838_path);;
	jule::I32 _2856_i = (_2838_path.len() - 1LL);;
	while (((_2856_i >= _2842_vol.len()) && (!(_1abb3c046_IsPathSep(_2838_path[_2856_i]))))) {
		{
			(_2856_i)--;
		}
	_iter_next_1c00c7bd8:;
	}
	_iter_end_1c00c7bd8:;;
	jule::Str _2892_dir = _1abb3984b_Clean(_2838_path.slice(_2842_vol.len(), (_2856_i + 1LL)));;
	if ((_2892_dir.equal(".", 1) && (_2842_vol.len() > 2LL))) {
		return _2842_vol;;
	};
	return (_2842_vol + _2892_dir);;
}



inline jule::Str _1abb3b199_VolumeName(jule::Str _30115_path) {
	return _1abb39e23_FromSlash(_30115_path.slice(0LL, _1abb3c61d_volumeNameLen(_30115_path)));;
}



inline jule::Bool _1abb3c046_IsPathSep(jule::U8 _4814_c) {
	return (47LL == _4814_c);;
}



inline jule::Bool _1abb3c354_IsAbs(jule::Str _5310_path) {
	return _1abb2d9c7_HasPrefix(_5310_path, jule::Str::lit("/", 1));;
}



inline jule::I32 _1abb3c61d_volumeNameLen(jule::Str _5918_path) {
	return 0LL;;
}



inline __jule_tuple_str__jule_tuple_bool _1abb3c95e_abs(jule::Str _638_path) {
	__jule_tuple_str__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	if (_1abb3c354_IsAbs(_638_path)) {
		__jule_func_result.__jule_result_arg0 = _1abb3984b_Clean(_638_path);
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	jule::Str _672_wd = _1a9cce790_Getwd();;
	if ((_672_wd).empty()) {
		__jule_func_result.__jule_result_arg0 = jule::Str();
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1abb3cbe5_join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _672_wd; (*it++) = _638_path; __jule_collection; }));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::Str _1abb3cbe5_join(jule::Slice<jule::Str> _749_elem) {
	{
		auto expr = &(_749_elem);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c00d143e:;
		if (it != expr_end) {
			jule::I32 _756_i = it - expr->begin();
			jule::Str *_759_e = it;
			{
				if (!((*(_759_e))).empty()) {
					return _1abb3984b_Clean(_1abb3665b_Join(_749_elem.slice(_756_i), jule::Str::lit("/", 1)));;
				};
			}
			_iter_next_1c00d143e:;
			++it;
			_756_i++;
			goto _iter_begin_1c00d143e;
		}
		_iter_end_1c00d143e:;
	};
	return jule::Str();;
}



inline jule::Slice<char*> _1a9cc2266_strSliceToCstrSlice(jule::Slice<jule::Str>* _3625_s, jule::Slice<jule::Slice<jule::U8>>* _3640_bargs) {
	jule::Slice<char*> _376_cs = ({ auto __jule_collection = jule::Slice<char*>::alloc(((*(_3625_s)).len() + 1LL), ((*(_3625_s)).len() + 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = nullptr; __jule_collection; });;
	(*(_3640_bargs))=({ auto __jule_collection = jule::Slice<jule::Slice<jule::U8>>::alloc((*(_3625_s)).len(), (*(_3625_s)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Slice<jule::U8>(nullptr); __jule_collection; });
	{
		auto expr = _3625_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c012a433:;
		if (it != expr_end) {
			jule::I32 _396_i = it - expr->begin();
			jule::Str *_399_arg = it;
			{
				jule::Slice<jule::U8> _407_barg = _1c2ee99d6_StrToBytes((*(_399_arg)));;
				(*(_3640_bargs))[_396_i]=_407_barg;
				_376_cs[_396_i]=((char*)((&(_407_barg[0LL]))));
			}
			_iter_next_1c012a433:;
			++it;
			_396_i++;
			goto _iter_begin_1c012a433;
		}
		_iter_end_1c012a433:;
	};
	_376_cs[(_376_cs.len() - 1LL)]=nullptr;
	return _376_cs;;
}



inline jule::I32 _1a9cc25da_execvp(jule::Str* _4812_file, jule::Slice<jule::Str>* _4824_argv) {
	jule::Slice<jule::Slice<jule::U8>> _496_bargs = static_cast<jule::Slice<jule::Slice<jule::U8>>>(nullptr);;
	jule::Slice<char*> _502_cargv = _1a9cc2266_strSliceToCstrSlice(_4824_argv, &(_496_bargs));;
	jule::Slice<jule::U8> _512_s = _1c2ee99d6_StrToBytes((*(_4812_file)));;
	{
		return execvp(((char*)((&(_512_s[0LL])))), (char*const*)(&(_502_cargv[0LL])));;
	};
}



inline jule::VoidExceptional _1a9cc281b_setenv(jule::Slice<jule::Str>* _5712_envv) {
	;
	{
		auto expr = _5712_envv;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c012e69b:;
		if (it != expr_end) {
			jule::Str *_599_env = it;
			{
				jule::I32 _603_i = _1a9cbd85b_FindByteStr((*(_599_env)), '=');;
				if ((_603_i == -1LL)) {
					return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
				};
				{
					jule::Slice<jule::U8> _654_key = _1c2ee99d6_StrToBytes((*(_599_env)).slice(0LL, _603_i));;
					if ((((*(_599_env)).len() - _603_i) == 1LL)) {
						jule::Str _675_val = jule::Str::lit("\x00", 1);;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_675_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
						};
					} else {
						jule::Slice<jule::U8> _725_val = _1c2ee99d6_StrToBytes((*(_599_env)).slice((_603_i + 1LL)));;
						if ((setenv(((char*)((&(_654_key[0LL])))), ((char*)((&(_725_val[0LL])))), 1LL) == -1LL)) {
							return jule::VoidExceptional{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type139)};
						};
					};
				};
			}
			_iter_next_1c012e69b:;
			++it;
			goto _iter_begin_1c012e69b;
		}
		_iter_end_1c012e69b:;
	};
	return jule::VoidExceptional{};
}



inline jule::I32 _1a9cc33bb_cmdErrorFromCode(jule::I32 _15121_code) {
	{
		auto &_match_expr{ _15121_code };
		
		if (_match_expr == 13LL) {
			_case_begin_1c012ec1d:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c012e987:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else {
			_case_begin_1c012d821:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		_match_end_1c01342b6:;
	};
}



inline jule::I32 _1a9cc35ca_getLastCmdError(void) {
	return _1a9cc33bb_cmdErrorFromCode(_1c174a337_GetLastErrno());;
}



inline void _1a9cd29e6_Exit(jule::I32 _119_code) {
	_1c3043ee7_Exit(_119_code);
}



inline jule::Str _1a9cd2c5a_Executable(void) {
	return _1c30685d2_executable();;
}



inline jule::Slice<jule::Str> _1a9cd2e25_Args(void) {
	return _1a9533e4b_args();;
}



inline jule::Exceptional<jule::Str> _1a9cd3387_Getwd(void) {
	jule::Str _332_wd = _1a9cce790_Getwd();;
	if ((_332_wd).empty()) {
		return jule::Exceptional<jule::Str>{.error=jule::Any(_1a9cd8c1c_getLastOsError(), &__jule_any_type140)};
	};
	return jule::Exceptional<jule::Str>{.result=_332_wd};;
}



inline jule::I32 _1a9cd8711_getLastFsError(void) {
	jule::I32 _412_err = _1c174a337_GetLastErrno();;
	{
		auto &_match_expr{ _412_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c0150ea3:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c0150da4:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c01507cc:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c0150843:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c01508a9:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c0150931:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 75LL) {
			_case_begin_1c01509a8:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else if (_match_expr == 9LL) {
			_case_begin_1c0150a30:;
			{
				return static_cast<jule::I32>(7LL);;
			}
		}
		else if (_match_expr == 24LL) {
			_case_begin_1c015114b:;
			{
				return static_cast<jule::I32>(8LL);;
			}
		}
		else if (_match_expr == 23LL) {
			_case_begin_1c01511c3:;
			{
				return static_cast<jule::I32>(9LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c015124a:;
			{
				return static_cast<jule::I32>(10LL);;
			}
		}
		else if (_match_expr == 17LL) {
			_case_begin_1c01512c2:;
			{
				return static_cast<jule::I32>(11LL);;
			}
		}
		else if (_match_expr == 4LL) {
			_case_begin_1c0151349:;
			{
				return static_cast<jule::I32>(12LL);;
			}
		}
		else if (_match_expr == 22LL) {
			_case_begin_1c01513c1:;
			{
				return static_cast<jule::I32>(13LL);;
			}
		}
		else if (_match_expr == 21LL) {
			_case_begin_1c0151448:;
			{
				return static_cast<jule::I32>(14LL);;
			}
		}
		else if (_match_expr == 63LL) {
			_case_begin_1c01514c0:;
			{
				return static_cast<jule::I32>(15LL);;
			}
		}
		else if (_match_expr == 28LL) {
			_case_begin_1c0151547:;
			{
				return static_cast<jule::I32>(16LL);;
			}
		}
		else if (_match_expr == 6LL) {
			_case_begin_1c01515be:;
			{
				return static_cast<jule::I32>(17LL);;
			}
		}
		else if (_match_expr == 30LL) {
			_case_begin_1c0151646:;
			{
				return static_cast<jule::I32>(18LL);;
			}
		}
		else if (_match_expr == 11LL) {
			_case_begin_1c01516bd:;
			{
				return static_cast<jule::I32>(19LL);;
			}
		}
		else if (_match_expr == 26LL || _match_expr == 16LL) {
			_case_begin_1c0151745:;
			{
				return static_cast<jule::I32>(20LL);;
			}
		}
		else if (_match_expr == 27LL) {
			_case_begin_1c01517bc:;
			{
				return static_cast<jule::I32>(21LL);;
			}
		}
		else if (_match_expr == 32LL) {
			_case_begin_1c0151844:;
			{
				return static_cast<jule::I32>(22LL);;
			}
		}
		else if (_match_expr == 34LL) {
			_case_begin_1c01518bb:;
			{
				return static_cast<jule::I32>(23LL);;
			}
		}
		else if (_match_expr == 29LL) {
			_case_begin_1c0151943:;
			{
				return static_cast<jule::I32>(24LL);;
			}
		}
		else if (_match_expr == 105LL) {
			_case_begin_1c01519ba:;
			{
				return static_cast<jule::I32>(25LL);;
			}
		}
		else if (_match_expr == 74LL) {
			_case_begin_1c0151a42:;
			{
				return static_cast<jule::I32>(26LL);;
			}
		}
		else if (_match_expr == 39LL) {
			_case_begin_1c0151ab9:;
			{
				return static_cast<jule::I32>(27LL);;
			}
		}
		else {
			_case_begin_1c0150656:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1c0150766:;
	};
}



inline jule::I32 _1a9cd8c1c_getLastOsError(void) {
	jule::I32 _92_err = _1c174a337_GetLastErrno();;
	{
		auto &_match_expr{ _92_err };
		
		if (_match_expr == 13LL) {
			_case_begin_1c0159561:;
			{
				return static_cast<jule::I32>(0LL);;
			}
		}
		else if (_match_expr == 5LL) {
			_case_begin_1c0158eab:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		else if (_match_expr == 40LL) {
			_case_begin_1c0159033:;
			{
				return static_cast<jule::I32>(2LL);;
			}
		}
		else if (_match_expr == 36LL) {
			_case_begin_1c01590aa:;
			{
				return static_cast<jule::I32>(3LL);;
			}
		}
		else if (_match_expr == 2LL) {
			_case_begin_1c0159132:;
			{
				return static_cast<jule::I32>(4LL);;
			}
		}
		else if (_match_expr == 20LL) {
			_case_begin_1c0159253:;
			{
				return static_cast<jule::I32>(5LL);;
			}
		}
		else if (_match_expr == 12LL) {
			_case_begin_1c01592b9:;
			{
				return static_cast<jule::I32>(6LL);;
			}
		}
		else {
			_case_begin_1c0158807:;
			{
				return static_cast<jule::I32>(1LL);;
			}
		}
		_match_end_1c0151b52:;
	};
}



inline jule::Bool _1a982c82c_IsStdHeaderPath(jule::Str _2620_p) {
	return ((_2620_p[0LL] == '<') && (_2620_p[(_2620_p.len() - 1LL)] == '>'));;
}



inline jule::Bool _1a982cb07_IsValidHeaderExt(jule::Str _3121_ext) {
	{
		auto expr = &(_1a979e2a4_CppHeaderExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c017a95b:;
		if (it != expr_end) {
			jule::Str *_329_validExt = it;
			{
				if ((_3121_ext == (*(_329_validExt)))) {
					return true;;
				};
			}
			_iter_next_1c017a95b:;
			++it;
			goto _iter_begin_1c017a95b;
		}
		_iter_end_1c017a95b:;
	};
	return false;;
}



inline jule::Bool _1a982cdc1_IsValidCppExt(jule::Str _4118_ext) {
	if (_4118_ext.equal(".c", 2)) {
		return true;;
	};
	{
		auto expr = &(_1a979e392_CppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c017c364:;
		if (it != expr_end) {
			jule::Str *_459_e = it;
			{
				if ((_4118_ext == (*(_459_e)))) {
					return true;;
				};
			}
			_iter_next_1c017c364:;
			++it;
			goto _iter_begin_1c017c364;
		}
		_iter_end_1c017c364:;
	};
	{
		auto expr = &(_1a982c673_ObjectiveCppExts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c017cd26:;
		if (it != expr_end) {
			jule::Str *_509_e = it;
			{
				if ((_4118_ext == (*(_509_e)))) {
					return true;;
				};
			}
			_iter_next_1c017cd26:;
			++it;
			goto _iter_begin_1c017cd26;
		}
		_iter_end_1c017cd26:;
	};
	return false;;
}



inline jule::Str _1a9576213_Logf(jule::Str _3229_fmt, jule::Slice<jule::Any> _32222_args) {
	return _1a9576ba3_applyFmt(_3229_fmt, _32222_args);;
}



inline jule::Str _1a9576521_argToStr(jule::Any _32613_arg) {
	{
		auto &_match_expr{ _32613_arg };
		
		if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c017c809:;
			{
				return _32613_arg.unsafe_cast<jule::Str>();;
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1c017dcb1:;
			{
				return __jule_strFromByte(_32613_arg.unsafe_cast<jule::U8>());;
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c017dd27:;
			{
				return __jule_strFromRune(_32613_arg.unsafe_cast<jule::I32>());;
			}
		}
		else {
			_case_begin_1c017dc4a:;
			{
				return jule::Str::lit("<fmt?>", 6);;
			}
		}
		_match_end_1c017dbd4:;
	};
}



inline jule::I32 _1a95767da_findNextFmt(jule::Str _33916_fmt) {
	{
		auto expr = &(_33916_fmt);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c017ec3a:;
		if (it != expr_end) {
			jule::I32 _3406_i = it - expr->begin();
			jule::U8 *_3409_b = it;
			{
				if (((*(_3409_b)) == '@')) {
					return _3406_i;;
				};
			}
			_iter_next_1c017ec3a:;
			++it;
			_3406_i++;
			goto _iter_begin_1c017ec3a;
		}
		_iter_end_1c017ec3a:;
	};
	return -1LL;;
}



inline jule::Str _1a9576ba3_applyFmt(jule::Str _34817_fmt, jule::Slice<jule::Any> _34827_args) {
	_1a95669ea_Builder _3496_s = static__1a9567369_New(32LL);;
	{
		auto expr = &(_34827_args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0181577:;
		if (it != expr_end) {
			jule::Any *_3509_arg = it;
			{
				jule::I32 _3513_i = _1a95767da_findNextFmt(_34817_fmt);;
				if ((_3513_i == -1LL)) {
					goto _iter_end_1c0181577;
				};
				({
					auto except = _1a95679eb_WriteStr(&_3496_s, _34817_fmt.slice(0LL, _3513_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:355:3"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&_3496_s, _1a9576521_argToStr((*(_3509_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:356:3"));
					(except.result);
				});
				(_34817_fmt).mut_slice((_3513_i + 1LL));;
			}
			_iter_next_1c0181577:;
			++it;
			goto _iter_begin_1c0181577;
		}
		_iter_end_1c0181577:;
	};
	({
		auto except = _1a95679eb_WriteStr(&_3496_s, _34817_fmt);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/build/log.jule:359:2"));
		(except.result);
	});
	return _1a956837b_Str(&_3496_s);;
}



inline jule::Bool _1a9577b4e_IsTopDirective(jule::Str _2319_directive) {
	return ((_2319_directive == static_cast<jule::Str>(jule::Str::lit("pass", 4))) || (_2319_directive == static_cast<jule::Str>(jule::Str::lit("build", 5))));;
}



inline jule::Bool _1a95790b2_IsWindows(jule::Str _3714_os) {
	return (_3714_os == static_cast<jule::Str>(jule::Str::lit("windows", 7)));;
}



inline jule::Bool _1a95793c0_IsDarwin(jule::Str _4013_os) {
	return (_4013_os == static_cast<jule::Str>(jule::Str::lit("darwin", 6)));;
}



inline jule::Bool _1a9579689_IsLinux(jule::Str _4312_os) {
	return (_4312_os == static_cast<jule::Str>(jule::Str::lit("linux", 5)));;
}



inline jule::Bool _1a95799ca_IsI386(jule::Str _4611_arch) {
	return (_4611_arch == static_cast<jule::Str>(jule::Str::lit("i386", 4)));;
}



inline jule::Bool _1a9579c61_IsAmd64(jule::Str _4912_arch) {
	return (_4912_arch == static_cast<jule::Str>(jule::Str::lit("amd64", 5)));;
}



inline jule::Bool _1a957a02a_IsArm64(jule::Str _5212_arch) {
	return (_5212_arch == static_cast<jule::Str>(jule::Str::lit("arm64", 5)));;
}



inline jule::Bool _1a957a2e4_IsUnix(jule::Str _5511_os) {
	return (_1a95793c0_IsDarwin(_5511_os) || _1a9579689_IsLinux(_5511_os));;
}



inline jule::Bool _1a957a6bd_Is32Bit(jule::Str _5812_arch) {
	return _1a95799ca_IsI386(_5812_arch);;
}



inline jule::Bool _1a957a910_Is64Bit(jule::Str _6112_arch) {
	return (_1a9579c61_IsAmd64(_6112_arch) || _1a957a02a_IsArm64(_6112_arch));;
}



inline void _1abb3ec6e_init(void) {
	jule::Str _256_path = _1a9cd2c5a_Executable();;
	if ((_256_path).empty()) {
		__jule_panic_s(jule::Str::lit("build: executable file cannot found", 35) + jule::Str("\nlocation: std/jule/build/env.jule:27:3"));;
	};
	{
		_1abb3e2bd_PathWd=({
			auto except = _1a9cd3387_Getwd();
			(except.ok()) ? (except.result) : ({{
				__jule_panic_s(jule::Str::lit("build: working directory path cannot found", 42) + jule::Str("\nlocation: std/jule/build/env.jule:33:4"));;
				return;;
			} jule::Str();});
		});
		_1abb3e015_PathExec=_1abb3ae57_Dir(_256_path);
		_1abb3dc7e_PathStdlib=_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(3, 3); auto it = __jule_collection.begin(); (*it++) = _1abb3e015_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("std", 3); __jule_collection; }));
		_1abb3e5ba_PathApi=_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(4, 4); auto it = __jule_collection.begin(); (*it++) = _1abb3e015_PathExec; (*it++) = jule::Str::lit("..", 2); (*it++) = jule::Str::lit("api", 3); (*it++) = jule::Str::lit("jule.hpp", 8); __jule_collection; }));
	};
}



inline jule::U32 _1ac53cc65_F32Bits(jule::F32 _4112_f) {
	return (*(((jule::U32*)((&(_4112_f))))));;
}



inline jule::F32 _1ac53d073_F32FromBits(jule::U32 _4716_b) {
	return (*(((jule::F32*)((&(_4716_b))))));;
}



inline jule::U64 _1ac53d33c_F64Bits(jule::F64 _5212_f) {
	return (*(((jule::U64*)((&(_5212_f))))));;
}



inline jule::F64 _1ac53d67d_F64FromBits(jule::U64 _5816_b) {
	return (*(((jule::F64*)((&(_5816_b))))));;
}



inline __jule_tuple_f64__jule_tuple_int _1ac540be1_Frexp(jule::F64 _4714_f) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	{
		
		if ((_4714_f == 0LL)) {
			_case_begin_1c0204056:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		else if (_1ac546ae8_IsInf(_4714_f, 0LL) || _1ac546466_IsNaN(_4714_f)) {
			_case_begin_1c0204100:;
			{
				__jule_func_result.__jule_result_arg0 = _4714_f;
				__jule_func_result.__jule_result_arg1 = 0LL;
				return __jule_func_result;;
			}
		}
		_match_end_1c0203e68:;
	};
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ac546db2_normalize(_4714_f);
		_4714_f = __jule_assign_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _566_x = _1ac53d33c_F64Bits(_4714_f);;
	__jule_func_result.__jule_result_arg1+=((static_cast<jule::I32>(((_566_x >> 52LLU) & 2047LLU)) - 1023LL) + 1LL);
	_566_x=(_566_x & 9227875636482146303LLU);
	_566_x|=4602678819172646912LLU;
	__jule_func_result.__jule_result_arg0=_1ac53d67d_F64FromBits(_566_x);
	return __jule_func_result;;
}



inline jule::F64 _1ac546158_NaN(void) {
	return _1ac53d67d_F64FromBits(9221120237041090561LLU);;
}



inline jule::Bool _1ac546466_IsNaN(jule::F64 _5210_f) {
	return (_5210_f != _5210_f);;
}



inline jule::F64 _1ac546730_Inf(jule::I32 _618_sign) {
	if ((_618_sign >= 0LL)) {
		return _1ac53d67d_F64FromBits(9218868437227405312LLU);;
	};
	return _1ac53d67d_F64FromBits(18442240474082181120LLU);;
}



inline jule::Bool _1ac546ae8_IsInf(jule::F64 _7210_f, jule::I32 _7218_sign) {
	return (((_7218_sign >= 0LL) && (_7210_f > jule::MAX_F64)) || ((_7218_sign <= 0LL) && (_7210_f < jule::MIN_F64)));;
}



inline __jule_tuple_f64__jule_tuple_int _1ac546db2_normalize(jule::F64 _8214_x) {
	__jule_tuple_f64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	if ((_1ac54926b_Abs(_8214_x) < 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022250738585072014)) {
		__jule_func_result.__jule_result_arg0 = (_8214_x * 4503599627370496LLU);
		__jule_func_result.__jule_result_arg1 = -52LL;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _8214_x;
	__jule_func_result.__jule_result_arg1 = 0LL;
	return __jule_func_result;;
}



inline jule::F64 _1ac548886_Log(jule::F64 _1118_x) {
	;
	;
	;
	;
	;
	;
	;
	;
	;
	{
		
		if (_1ac546466_IsNaN(_1118_x) || _1ac546ae8_IsInf(_1118_x, 1LL)) {
			_case_begin_1c0245185:;
			{
				return _1118_x;;
			}
		}
		else if ((_1118_x < 0LL)) {
			_case_begin_1c024522e:;
			{
				return _1ac546158_NaN();;
			}
		}
		else if ((_1118_x == 0LL)) {
			_case_begin_1c0245295:;
			{
				return _1ac546730_Inf(-1LL);;
			}
		}
		_match_end_1c02450b9:;
	};
	jule::F64 _1336_f1;
	jule::I32 _13314_ki;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ac540be1_Frexp(_1118_x);
		_1336_f1 = __jule_assign_result.__jule_result_arg0;
		_13314_ki = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1336_f1 < 0.7071067811865476)) {
		_1336_f1*=2LL;
		(_13314_ki)--;
	};
	jule::F64 _1382_f = (_1336_f1 - 1LL);;
	jule::F64 _1392_k = static_cast<jule::F64>(_13314_ki);;
	jule::F64 _1422_s = ({ jule::F64 __jule_x = _1382_f; jule::F64 __jule_y = (2LL + _1382_f); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });;
	jule::F64 _1432_s2 = (_1422_s * _1422_s);;
	jule::F64 _1442_s4 = (_1432_s2 * _1432_s2);;
	jule::F64 _1452_t1 = (_1432_s2 * (0.6666666666666735 + (_1442_s4 * (0.2857142874366239 + (_1442_s4 * (0.1818357216161805 + (_1442_s4 * 0.14798198605116586)))))));;
	jule::F64 _1462_t2 = (_1442_s4 * (0.3999999999940942 + (_1442_s4 * (0.22222198432149784 + (_1442_s4 * 0.15313837699209373)))));;
	jule::F64 _1472_R = (_1452_t1 + _1462_t2);;
	jule::F64 _1482_hfsq = ((0.5 * _1382_f) * _1382_f);;
	return ((_1392_k * 0.6931471803691238) - ((_1482_hfsq - ((_1422_s * (_1482_hfsq + _1472_R)) + (_1392_k * 0.00000000019082149292705877))) - _1382_f));;
}



inline jule::F64 _1ac54926b_Abs(jule::F64 _438_x) {
	return _1ac53d67d_F64FromBits((_1ac53d33c_F64Bits(_438_x) & 9223372036854775807LLU));;
}



inline __jule_tuple_f64__jule_tuple_f64 _1ac550cde_Modf(jule::F64 _449_f) {
	__jule_tuple_f64__jule_tuple_f64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::F64 _462_absF = _1ac54926b_Abs(_449_f);;
	jule::F64 _476_i = 0LL;;
	if ((_462_absF > 4503599627370496LL)) {
		_476_i=_449_f;
	} else {
		_476_i=(_462_absF + 4503599627370496LL);
		_476_i-=4503599627370496LL;
		while ((_476_i > _462_absF)) {
			{
				(_476_i)--;
			}
		_iter_next_1c02a7d1e:;
		}
		_iter_end_1c02a7d1e:;;
		if ((_449_f < 0LL)) {
			_476_i=(-(_476_i));
		};
	};
	__jule_func_result.__jule_result_arg0 = _476_i;
	__jule_func_result.__jule_result_arg1 = (_449_f - _476_i);
	return __jule_func_result;;
}



inline jule::F64 _1ac5515e7_Log2(jule::F64 _449_x) {
	jule::F64 _452_frac;
	jule::I32 _458_exp;
	({
		__jule_tuple_f64__jule_tuple_int __jule_assign_result = _1ac540be1_Frexp(_449_x);
		_452_frac = __jule_assign_result.__jule_result_arg0;
		_458_exp = __jule_assign_result.__jule_result_arg1;
	});
	if ((_452_frac == 0.5)) {
		return static_cast<jule::F64>((_458_exp - 1LL));;
	};
	return ((_1ac548886_Log(_452_frac) * 1.4426950408889634) + static_cast<jule::F64>(_458_exp));;
}



inline jule::Str _1ac57a1d1_FmtFloat(jule::F64 _7913_f, jule::U8 _7921_fmt, jule::I32 _7932_prec, jule::I32 _7943_bitSize) {
	return _1c3061212_StrFromBytes(_1ac57a7b9_genericFtoa(({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _1ac57db74_max(((_7932_prec + 4LL) + 1LL), 25LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), _7913_f, _7921_fmt, _7932_prec, _7943_bitSize));;
}



inline jule::Slice<jule::U8> _1ac57a7b9_genericFtoa(jule::Slice<jule::U8> _8720_dst, jule::F64 _8733_val, jule::U8 _8743_fmt, jule::I32 _8758_prec, jule::I32 _8769_bitSize) {
	jule::U64 _886_bits = static_cast<jule::U64>(0LLU);;
	jule::Ptr<_1ac579004_floatInfo> _8910_flt = nullptr;;
	{
		auto &_match_expr{ _8769_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c0583e52:;
			{
				_886_bits=static_cast<jule::U64>(_1ac53cc65_F32Bits(static_cast<jule::F32>(_8733_val)));
				_8910_flt=((jule::Ptr<_1ac579004_floatInfo>)((&(_1ac5793bc_f32info))));
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c0583b88:;
			{
				_886_bits=_1ac53d33c_F64Bits(_8733_val);
				_8910_flt=((jule::Ptr<_1ac579004_floatInfo>)((&(_1ac5796b9_f64info))));
			}
		}
		else {
			_case_begin_1c0582945:;
			{
				__jule_panic_s(jule::Str::lit("conv: illegal bitSize", 21) + jule::Str("\nlocation: std/conv/ftoa.jule:98:3"));;
			}
		}
		_match_end_1c0583814:;
	};
	jule::Bool _1012_neg = (({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (jule::U32)((*(_8910_flt))._field_expbits + (*_8910_flt.alloc)._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU);;
	jule::I32 _1026_exp = (static_cast<jule::I32>(({ jule::U64 __jule_x = _886_bits; jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); })) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)));;
	jule::U64 _1036_mant = (_886_bits & (jule::U64)(({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	{
		auto &_match_expr{ _1026_exp };
		
		if (_match_expr == static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*_8910_flt.alloc)._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL))) {
			_case_begin_1c0587c9c:;
			{
				{
					
					if ((_1036_mant != 0LLU)) {
						_case_begin_1c05894da:;
						{
							return jule::append(_8720_dst,jule::Str::lit("nan", 3));;
						}
					}
					else if (_1012_neg) {
						_case_begin_1c05895c8:;
						{
							return jule::append(_8720_dst,jule::Str::lit("-inf", 4));;
						}
					}
					else {
						_case_begin_1c0588d69:;
						{
							return jule::append(_8720_dst,jule::Str::lit("+inf", 4));;
						}
					}
					_match_end_1c0588c59:;
				};
			}
		}
		else if (_match_expr == 0LL) {
			_case_begin_1c0587d8a:;
			{
				(_1026_exp)++;
			}
		}
		else {
			_case_begin_1c0586e55:;
			{
				_1036_mant|=({ jule::U64 __jule_x = static_cast<jule::U64>(1LLU); jule::U32 __jule_y = (*_8910_flt.alloc)._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
			}
		}
		_match_end_1c05870ed:;
	};
	_1026_exp+=(*_8910_flt.alloc)._field_bias;
	if ((_8743_fmt == 'b')) {
		return _1ac57cce9_fmtB(_8720_dst, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	if (((_8743_fmt == 'x') || (_8743_fmt == 'X'))) {
		return _1ac57d47b_fmtX(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	;
	_1ac579b4d_decimalSlice _1376_digs = _1ac579b4d_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1386_ok = false;;
	jule::Bool _1402_shortest = (_8758_prec < 0LL);;
	if (_1402_shortest) {
		_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(32LL, 32LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
		_1ac588909_ryuFtoaShortest(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), &((*(_8910_flt))));
		_1386_ok=true;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c058c268:;
				{
					_8758_prec=_1ac57db74_max((_1376_digs._field_nd - 1LL), 0LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c058d27a:;
				{
					_8758_prec=_1ac57db74_max((_1376_digs._field_nd - _1376_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c058d2e1:;
				{
					_8758_prec=_1376_digs._field_nd;
				}
			}
			_match_end_1c058c488:;
		};
	} else if ((_8743_fmt != 'f')) {
		jule::I32 _1577_digits = _8758_prec;;
		{
			auto &_match_expr{ _8743_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c059027c:;
				{
					(_1577_digits)++;
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0590348:;
				{
					if ((_8758_prec == 0LL)) {
						_8758_prec=1LL;
					};
					_1577_digits=_8758_prec;
				}
			}
			else {
				_case_begin_1c058ecd7:;
				{
					_1577_digits=1LL;
				}
			}
			_match_end_1c058ede7:;
		};
		if (((_8769_bitSize == 32LL) && (_1577_digits <= 9LL))) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1ac587650_ryuFtoaFixed32(&(_1376_digs), static_cast<jule::U32>(_1036_mant), (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		} else if ((_1577_digits <= 18LL)) {
			_1376_digs._field_d=({ auto __jule_collection = jule::Slice<jule::U8>::alloc(24LL, 24LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });
			_1ac587ae5_ryuFtoaFixed64(&(_1376_digs), _1036_mant, (_1026_exp - static_cast<jule::I32>((*_8910_flt.alloc)._field_mantbits)), _1577_digits);
			_1386_ok=true;
		};
	};
	if ((!(_1386_ok))) {
		return _1ac57aec3_bigFtoa(_8720_dst, _8758_prec, _8743_fmt, _1012_neg, _1036_mant, _1026_exp, &((*(_8910_flt))));;
	};
	return _1ac57b699_fmtDigits(_8720_dst, _1402_shortest, _1012_neg, _1376_digs, _8758_prec, _8743_fmt);;
}



inline jule::Slice<jule::U8> _1ac57aec3_bigFtoa(jule::Slice<jule::U8> _18716_dst, jule::I32 _18733_prec, jule::U8 _18744_fmt, jule::Bool _18755_neg, jule::U64 _1882_mant, jule::I32 _18813_exp, _1ac579004_floatInfo* _18824_flt) {
	_1ac59254a_decimal _1896_d = _1ac59254a_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1ac592935_assign(&_1896_d, _1882_mant);
	_1ac592bdd_shift(&_1896_d, (_18813_exp - static_cast<jule::I32>((*(_18824_flt))._field_mantbits)));
	_1ac579b4d_decimalSlice _1926_digs = _1ac579b4d_decimalSlice{._field_d=jule::Slice<jule::U8>(nullptr), ._field_nd=0, ._field_dp=0, ._field_neg=false};;
	jule::Bool _1932_shortest = (_18733_prec < 0LL);;
	if (_1932_shortest) {
		_1ac57bab7_roundShortest(&(_1896_d), _1882_mant, _18813_exp, _18824_flt);
		_1926_digs=_1ac579b4d_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c059620b:;
				{
					_18733_prec=(_1926_digs._field_nd - 1LL);
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c059700e:;
				{
					_18733_prec=_1ac57db74_max((_1926_digs._field_nd - _1926_digs._field_dp), 0LL);
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c0597075:;
				{
					_18733_prec=_1926_digs._field_nd;
				}
			}
			_match_end_1c0596d77:;
		};
	} else {
		{
			auto &_match_expr{ _18744_fmt };
			
			if (_match_expr == 'e' || _match_expr == 'E') {
				_case_begin_1c0595e31:;
				{
					_1ac593507_round(&_1896_d, (_18733_prec + 1LL));
				}
			}
			else if (_match_expr == 'f') {
				_case_begin_1c0595e97:;
				{
					_1ac593507_round(&_1896_d, (_1896_d._field_dp + _18733_prec));
				}
			}
			else if (_match_expr == 'g' || _match_expr == 'G') {
				_case_begin_1c059600d:;
				{
					if ((_18733_prec == 0LL)) {
						_18733_prec=1LL;
					};
					_1ac593507_round(&_1896_d, _18733_prec);
				}
			}
			_match_end_1c0598560:;
		};
		_1926_digs=_1ac579b4d_decimalSlice{._field_d=_1896_d._field_d.slice(0LL), ._field_nd=_1896_d._field_nd, ._field_dp=_1896_d._field_dp, ._field_neg=false};
	};
	return _1ac57b699_fmtDigits(_18716_dst, _1932_shortest, _18755_neg, _1926_digs, _18733_prec, _18744_fmt);;
}



inline jule::Slice<jule::U8> _1ac57b699_fmtDigits(jule::Slice<jule::U8> _22418_dst, jule::Bool _22431_shortest, jule::Bool _22447_neg, _1ac579b4d_decimalSlice _2252_digs, jule::I32 _22526_prec, jule::U8 _22537_fmt) {
	{
		auto &_match_expr{ _22537_fmt };
		
		if (_match_expr == 'e' || _match_expr == 'E') {
			_case_begin_1c059b6ea:;
			{
				return _1ac57c15b_fmtE(_22418_dst, _22447_neg, _2252_digs, _22526_prec, _22537_fmt);;
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c059b761:;
			{
				return _1ac57c645_fmtF(_22418_dst, _22447_neg, _2252_digs, _22526_prec);;
			}
		}
		else if (_match_expr == 'g' || _match_expr == 'G') {
			_case_begin_1c059b7c7:;
			{
				jule::I32 _2337_eprec = _22526_prec;;
				if (((_2337_eprec > _2252_digs._field_nd) && (_2252_digs._field_nd >= _2252_digs._field_dp))) {
					_2337_eprec=_2252_digs._field_nd;
				};
				if (_22431_shortest) {
					_2337_eprec=6LL;
				};
				jule::I32 _2433_exp = (_2252_digs._field_dp - 1LL);;
				if (((_2433_exp < -4LL) || (_2433_exp >= _2337_eprec))) {
					if ((_22526_prec > _2252_digs._field_nd)) {
						_22526_prec=_2252_digs._field_nd;
					};
					return _1ac57c15b_fmtE(_22418_dst, _22447_neg, _2252_digs, (_22526_prec - 1LL), (jule::U8)((jule::U8)(_22537_fmt + 'e') - 'g'));;
				};
				if ((_22526_prec > _2252_digs._field_dp)) {
					_22526_prec=_2252_digs._field_nd;
				};
				return _1ac57c645_fmtF(_22418_dst, _22447_neg, _2252_digs, _1ac57db74_max((_22526_prec - _2252_digs._field_dp), 0LL));;
			}
		}
		_match_end_1c059b640:;
	};
	return jule::append(_22418_dst,({ auto __jule_collection = jule::Slice<jule::U8>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = '%'; (*it++) = _22537_fmt; __jule_collection; }));;
}



inline void _1ac57bab7_roundShortest(_1ac59254a_decimal* _26223_d, jule::U64 _26235_mant, jule::I32 _26246_exp, _1ac579004_floatInfo* _26257_flt) {
	if ((_26235_mant == 0LLU)) {
		(*(_26223_d))._field_nd=0LL;
		return;;
	};
	jule::I32 _2832_minexp = ((*(_26257_flt))._field_bias + 1LL);;
	if (((_26246_exp > _2832_minexp) && ((332LL * ((*(_26223_d))._field_dp - (*(_26223_d))._field_nd)) >= (100LL * (_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)))))) {
		return;;
	};
	_1ac59254a_decimal _2926_upper = _1ac59254a_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1ac592935_assign(&_2926_upper, (jule::U64)((jule::U64)(_26235_mant << 1LLU) + 1LLU));
	_1ac592bdd_shift(&_2926_upper, ((_26246_exp - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::U64 _3026_mantlo = static_cast<jule::U64>(0LLU);;
	jule::I32 _3036_explo = 0LL;;
	if (((_26235_mant > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_26257_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_26246_exp == _2832_minexp))) {
		_3026_mantlo=(jule::U64)(_26235_mant - 1LLU);
		_3036_explo=_26246_exp;
	} else {
		_3026_mantlo=(jule::U64)((jule::U64)(_26235_mant << 1LLU) - 1LLU);
		_3036_explo=(_26246_exp - 1LL);
	};
	_1ac59254a_decimal _3116_lower = _1ac59254a_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	_1ac592935_assign(&_3116_lower, (jule::U64)((jule::U64)(_3026_mantlo << 1LLU) + 1LLU));
	_1ac592bdd_shift(&_3116_lower, ((_3036_explo - static_cast<jule::I32>((*(_26257_flt))._field_mantbits)) - 1LL));
	jule::Bool _3182_inclusive = ((_26235_mant & 1LL) == 0LLU);;
	jule::U8 _3316_upperdelta = static_cast<jule::U8>(0LLU);;
	jule::I32 _3356_ui = 0LL;;
	for (; ; (_3356_ui)++) {
		{
			jule::I32 _3403_mi = ((_3356_ui - _2926_upper._field_dp) + (*(_26223_d))._field_dp);;
			if ((_3403_mi >= (*(_26223_d))._field_nd)) {
				goto _iter_end_1c05a7904;
			};
			jule::I32 _3443_li = ((_3356_ui - _2926_upper._field_dp) + _3116_lower._field_dp);;
			jule::U8 _3457_l = static_cast<jule::U8>(48LLU);;
			if (((_3443_li >= 0LL) && (_3443_li < _3116_lower._field_nd))) {
				_3457_l=_3116_lower._field_d[_3443_li];
			};
			jule::U8 _3497_m = static_cast<jule::U8>(48LLU);;
			if ((_3403_mi >= 0LL)) {
				_3497_m=(*(_26223_d))._field_d[_3403_mi];
			};
			jule::U8 _3537_u = static_cast<jule::U8>(48LLU);;
			if ((_3356_ui < _2926_upper._field_nd)) {
				_3537_u=_2926_upper._field_d[_3356_ui];
			};
			jule::Bool _3613_okdown = ((_3457_l != _3497_m) || (_3182_inclusive && ((_3443_li + 1LL) == _3116_lower._field_nd)));;
			{
				
				if (((_3316_upperdelta == 0LLU) && ((jule::U8)(_3497_m + 1LLU) < _3537_u))) {
					_case_begin_1c05ac6a6:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				else if (((_3316_upperdelta == 0LLU) && (_3497_m != _3537_u))) {
					_case_begin_1c05ac750:;
					{
						_3316_upperdelta=1LLU;
					}
				}
				else if (((_3316_upperdelta == 1LLU) && ((_3497_m != '9') || (_3537_u != '0')))) {
					_case_begin_1c05ac7b6:;
					{
						_3316_upperdelta=2LLU;
					}
				}
				_match_end_1c05ac5c9:;
			};
			jule::Bool _3823_okup = ((_3316_upperdelta > 0LLU) && ((_3182_inclusive || (_3316_upperdelta > 1LLU)) || ((_3356_ui + 1LL) < _2926_upper._field_nd)));;
			{
				
				if ((_3613_okdown && _3823_okup)) {
					_case_begin_1c05b016a:;
					{
						_1ac593507_round(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3613_okdown) {
					_case_begin_1c05b0214:;
					{
						_1ac592e96_roundDown(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				else if (_3823_okup) {
					_case_begin_1c05b027a:;
					{
						_1ac59324e_roundUp(_26223_d, (_3403_mi + 1LL));
						return;;
					}
				}
				_match_end_1c05ac82c:;
			};
		}
	_iter_next_1c05a7904:;
	}
	_iter_end_1c05a7904:;;
}



inline jule::Slice<jule::U8> _1ac57c15b_fmtE(jule::Slice<jule::U8> _40113_dst, jule::Bool _40126_neg, _1ac579b4d_decimalSlice _40137_d, jule::I32 _40154_prec, jule::U8 _40165_fmt) {
	if (_40126_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('-'); };
	};
	jule::U8 _4086_ch = '0';;
	if ((_40137_d._field_nd != 0LL)) {
		_4086_ch=_40137_d._field_d[0LL];
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	if ((_40154_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('.'); };
		jule::I32 _4177_i = 1LL;;
		jule::I32 _4183_m = _1ac57d800_min(_40137_d._field_nd, (_40154_prec + 1LL));;
		if ((_4177_i < _4183_m)) {
			(_40113_dst).append(_40137_d._field_d.slice(_4177_i, _4183_m));;
			_4177_i=_4183_m;
		};
		for (; (_4177_i <= _40154_prec); (_4177_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c05b415d:;
		}
		_iter_end_1c05b415d:;;
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_40165_fmt); };
	jule::I32 _4306_exp = (_40137_d._field_dp - 1LL);;
	if ((_40137_d._field_nd == 0LL)) {
		_4306_exp=0LL;
	};
	if ((_4306_exp < 0LL)) {
		_4086_ch='-';
		_4306_exp=(-(_4306_exp));
	} else {
		_4086_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.push(_4086_ch); };
	{
		
		if ((_4306_exp < 10LL)) {
			_case_begin_1c05b6847:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push('0'); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>(_4306_exp) + '0')); };
			}
		}
		else if ((_4306_exp < 100LL)) {
			_case_begin_1c05b6a01:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1c05b62b4:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _40113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _4306_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_4306_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1c05b6160:;
	};
	return _40113_dst;;
}



inline jule::Slice<jule::U8> _1ac57c645_fmtF(jule::Slice<jule::U8> _45613_dst, jule::Bool _45626_neg, _1ac579b4d_decimalSlice _45637_d, jule::I32 _45654_prec) {
	if (_45626_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('-'); };
	};
	if ((_45637_d._field_dp > 0LL)) {
		jule::I32 _4647_m = _1ac57d800_min(_45637_d._field_nd, _45637_d._field_dp);;
		(_45613_dst).append(_45637_d._field_d.slice(0LL, _4647_m));;
		for (; (_4647_m < _45637_d._field_dp); (_4647_m)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
			}
		_iter_next_1c05ba61a:;
		}
		_iter_end_1c05ba61a:;;
	} else {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('0'); };
	};
	if ((_45654_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push('.'); };
		jule::I32 _4757_i = 0LL;;
		for (; (_4757_i < _45654_prec); (_4757_i)++) {
			{
				jule::U8 _4778_ch = static_cast<jule::U8>(48LLU);;
				jule::I32 _4784_j = (_45637_d._field_dp + _4757_i);;
				if (((0LL <= _4784_j) && (_4784_j < _45637_d._field_nd))) {
					_4778_ch=_45637_d._field_d[_4784_j];
				};
				{ jule::Slice<jule::U8> &__jule_push_dest = _45613_dst; __jule_push_dest.push(_4778_ch); };
			}
		_iter_next_1c05bb929:;
		}
		_iter_end_1c05bb929:;;
	};
	return _45613_dst;;
}



inline jule::Slice<jule::U8> _1ac57cce9_fmtB(jule::Slice<jule::U8> _48913_dst, jule::Bool _48926_neg, jule::U64 _48937_mant, jule::I32 _48952_exp, _1ac579004_floatInfo* _48963_flt) {
	if (_48926_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('-'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ac59773c_fmtBits(_48913_dst, _48937_mant, 10LL, false, true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('p'); };
	_48952_exp-=static_cast<jule::I32>((*(_48963_flt))._field_mantbits);
	if ((_48952_exp >= 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _48913_dst; __jule_push_dest.push('+'); };
	};
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ac59773c_fmtBits(_48913_dst, static_cast<jule::U64>(_48952_exp), 10LL, (_48952_exp < 0LL), true);
		_48913_dst = __jule_assign_result.__jule_result_arg0;
	});
	return _48913_dst;;
}



inline jule::Slice<jule::U8> _1ac57d47b_fmtX(jule::Slice<jule::U8> _51113_dst, jule::I32 _51126_prec, jule::U8 _51137_fmt, jule::Bool _51148_neg, jule::U64 _5126_mant, jule::I32 _51221_exp, _1ac579004_floatInfo* _51232_flt) {
	if ((_5126_mant == 0LLU)) {
		_51221_exp=0LL;
	};
	_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - (*(_51232_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	while (((_5126_mant != 0LLU) && ((_5126_mant & 1152921504606846976LLU) == 0LLU))) {
		{
			_5126_mant=(jule::U64)(_5126_mant << 1LLU);
			(_51221_exp)--;
		}
	_iter_next_1c05c1720:;
	}
	_iter_end_1c05c1720:;;
	if (((_51126_prec >= 0LL) && (_51126_prec < 15LL))) {
		jule::U32 _5263_shift = static_cast<jule::U32>((_51126_prec << 2LLU));;
		jule::U64 _5273_extra = (({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = _5263_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) & 1152921504606846975LLU);;
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		if (((_5273_extra | (_5126_mant & 1LLU)) > 576460752303423488LLU)) {
			(_5126_mant)++;
		};
		_5126_mant = ({ jule::U64 __jule_x = _5126_mant; jule::U32 __jule_y = (jule::U32)(60LLU - _5263_shift); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		if (((_5126_mant & 2305843009213693952LLU) != 0LLU)) {
			_5126_mant=(_5126_mant >> 1LLU);
			(_51221_exp)++;
		};
	};
	jule::Str _5406_hex = jule::Str();;
	if ((_51137_fmt == 'X')) {
		_5406_hex=jule::Str::lit("0123456789ABCDEF", 16);
	} else {
		_5406_hex=jule::Str::lit("0123456789abcdef", 16);
	};
	if (_51148_neg) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('-'); };
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push('0'); __jule_push_dest.__push(_51137_fmt); __jule_push_dest.__push((jule::U8)('0' + static_cast<jule::U8>(((_5126_mant >> 60LLU) & 1LLU)))); };
	_5126_mant=(jule::U64)(_5126_mant << 4LLU);
	if (((_51126_prec < 0LL) && (_5126_mant != 0LLU))) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		while ((_5126_mant != 0LLU)) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1c05c6b43:;
		}
		_iter_end_1c05c6b43:;;
	} else if ((_51126_prec > 0LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push('.'); };
		jule::I32 _5637_i = 0LL;;
		for (; (_5637_i < _51126_prec); (_5637_i)++) {
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5406_hex[static_cast<jule::I32>(((_5126_mant >> 60LLU) & 15LLU))]); };
				_5126_mant=(jule::U64)(_5126_mant << 4LLU);
			}
		_iter_next_1c05c86b1:;
		}
		_iter_end_1c05c86b1:;;
	};
	jule::U8 _5716_ch = static_cast<jule::U8>(80LLU);;
	if ((_51137_fmt == _1ac57e812_lower(_51137_fmt))) {
		_5716_ch='p';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	if ((_51221_exp < 0LL)) {
		_5716_ch='-';
		_51221_exp=(-(_51221_exp));
	} else {
		_5716_ch='+';
	};
	{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.push(_5716_ch); };
	{
		
		if ((_51221_exp < 100LL)) {
			_case_begin_1c05c5a43:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(2); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else if ((_51221_exp < 1000LL)) {
			_case_begin_1c05cb164:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(3); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 100LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		else {
			_case_begin_1c05ca7a1:;
			{
				{ jule::Slice<jule::U8> &__jule_push_dest = _51113_dst; __jule_push_dest.alloc_for_append(4); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp / 1000LL)) + '0')); __jule_push_dest.__push((jule::U8)((static_cast<jule::U8>(({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); })) % 10LL) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((({ jule::I32 __jule_x = _51221_exp; jule::I32 __jule_y = 10LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::I32)(__jule_x / __jule_y)); }) % 10LL)) + '0')); __jule_push_dest.__push((jule::U8)(static_cast<jule::U8>((_51221_exp % 10LL)) + '0')); };
			}
		}
		_match_end_1c05ca619:;
	};
	return _51113_dst;;
}



inline jule::I32 _1ac57d800_min(jule::I32 _5968_a, jule::I32 _59616_b) {
	if ((_5968_a < _59616_b)) {
		return _5968_a;;
	};
	return _59616_b;;
}



inline jule::I32 _1ac57db74_max(jule::I32 _6038_a, jule::I32 _60316_b) {
	if ((_6038_a > _60316_b)) {
		return _6038_a;;
	};
	return _60316_b;;
}



inline jule::U8 _1ac57e812_lower(jule::U8 _4710_c) {
	return (_4710_c | 32LL);;
}



inline __jule_tuple_u64__jule_tuple__1ab8d26e3_ConvError _1ac57ec85_parseUint(jule::Str* _5119_s, jule::I32 _5131_base, jule::I32 _5146_bitSize) {
	__jule_tuple_u64__jule_tuple__1ab8d26e3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	if (((*(_5119_s))).empty()) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	{
		
		if (((2LL <= _5131_base) && (_5131_base <= 36LL))) {
			_case_begin_1c05d18ea:;
		}
		else if ((_5131_base == 0LL)) {
			_case_begin_1c05d182e:;
			{
				_5131_base=10LL;
				if (((*(_5119_s))[0LL] == '0')) {
					{
						
						if ((((*(_5119_s)).len() >= 3LL) && (_1ac57e812_lower((*(_5119_s))[1LL]) == 'b'))) {
							_case_begin_1c05d339c:;
							{
								_5131_base=2LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ac57e812_lower((*(_5119_s))[1LL]) == 'o'))) {
							_case_begin_1c05d348a:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else if ((((*(_5119_s)).len() >= 3LL) && (_1ac57e812_lower((*(_5119_s))[1LL]) == 'x'))) {
							_case_begin_1c05d304a:;
							{
								_5131_base=16LL;
								((*(_5119_s))).mut_slice(2LL);;
							}
						}
						else {
							_case_begin_1c05d2ed4:;
							{
								_5131_base=8LL;
								((*(_5119_s))).mut_slice(1LL);;
							}
						}
						_match_end_1c05d2e07:;
					};
				};
			}
		}
		else {
			_case_begin_1c05d0c4b:;
			{
				__jule_func_result.__jule_result_arg0 = 0LLU;
				__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(3LL);
				return __jule_func_result;;
			}
		}
		_match_end_1c05d12ce:;
	};
	if ((_5146_bitSize == 0LL)) {
		_5146_bitSize=32LL;
	} else if (((_5146_bitSize < 0LL) || (_5146_bitSize > 64LL))) {
		__jule_func_result.__jule_result_arg0 = 0LLU;
		__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(4LL);
		return __jule_func_result;;
	};
	jule::U64 _906_cutoff = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5131_base };
		
		if (_match_expr == 10LL) {
			_case_begin_1c05d73b2:;
			{
				_906_cutoff=1844674407370955265LLU;
			}
		}
		else if (_match_expr == 16LL) {
			_case_begin_1c05d7093:;
			{
				_906_cutoff=1152921504606846977LLU;
			}
		}
		else {
			_case_begin_1c05d25ee:;
			{
				_906_cutoff=(jule::U64)(({ jule::U64 __jule_x = jule::MAX_U64; jule::U64 __jule_y = static_cast<jule::U64>(_5131_base); if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); }) + 1LLU);
			}
		}
		_match_end_1c05d702c:;
	};
	jule::U64 _1006_maxVal = static_cast<jule::U64>(0LLU);;
	{
		auto &_match_expr{ _5146_bitSize };
		
		if (_match_expr == 32LL) {
			_case_begin_1c05d7109:;
			{
				_1006_maxVal=4294967295LLU;
			}
		}
		else if (_match_expr == 64LL) {
			_case_begin_1c05d2ab6:;
			{
				_1006_maxVal=jule::MAX_U64;
			}
		}
		_match_end_1c05d8506:;
	};
	jule::U64 _1086_n = static_cast<jule::U64>(0LLU);;
	{
		auto expr = _5119_s;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c05d94a2:;
		if (it != expr_end) {
			jule::U8 _1099_c = *it;
			{
				jule::U8 _1107_d = static_cast<jule::U8>(0LLU);;
				{
					
					if ((('0' <= _1099_c) && (_1099_c <= '9'))) {
						_case_begin_1c05da805:;
						{
							_1107_d=(jule::U8)(_1099_c - '0');
						}
					}
					else if ((('a' <= _1ac57e812_lower(_1099_c)) && (_1ac57e812_lower(_1099_c) <= 'z'))) {
						_case_begin_1c05da739:;
						{
							_1107_d=(jule::U8)((jule::U8)(_1ac57e812_lower(_1099_c) - 'a') + 10LLU);
						}
					}
					else if ((_1099_c == '_')) {
						_case_begin_1c05da32c:;
						{
							goto _iter_next_1c05d94a2;
						}
					}
					else {
						_case_begin_1c05da2b6:;
						{
							__jule_func_result.__jule_result_arg0 = 0LLU;
							__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
							return __jule_func_result;;
						}
					}
					_match_end_1c05da23e:;
				};
				if ((_1107_d >= static_cast<jule::U8>(_5131_base))) {
					__jule_func_result.__jule_result_arg0 = 0LLU;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(2LL);
					return __jule_func_result;;
				};
				if ((_1086_n >= _906_cutoff)) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n*=static_cast<jule::U64>(_5131_base);
				jule::U64 _1323_n1 = (jule::U64)(_1086_n + static_cast<jule::U64>(_1107_d));;
				if (((_1323_n1 < _1086_n) || (_1323_n1 > _1006_maxVal))) {
					__jule_func_result.__jule_result_arg0 = _1006_maxVal;
					__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(1LL);
					return __jule_func_result;;
				};
				_1086_n=_1323_n1;
			}
			_iter_next_1c05d94a2:;
			++it;
			goto _iter_begin_1c05d94a2;
		}
		_iter_end_1c05d94a2:;
	};
	__jule_func_result.__jule_result_arg0 = _1086_n;
	__jule_func_result.__jule_result_arg1 = static_cast<jule::I32>(0LL);
	return __jule_func_result;;
}



inline jule::Exceptional<jule::U64> _1ac5801b4_ParseUint(jule::Str _14618_s, jule::I32 _14630_base, jule::I32 _14645_bitSize) {
	jule::U64 _1472_un;
	jule::I32 _1476_err;
	({
		__jule_tuple_u64__jule_tuple__1ab8d26e3_ConvError __jule_assign_result = _1ac57ec85_parseUint(&(_14618_s), _14630_base, _14645_bitSize);
		_1472_un = __jule_assign_result.__jule_result_arg0;
		_1476_err = __jule_assign_result.__jule_result_arg1;
	});
	if ((_1476_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::U64>{.error=jule::Any(_1476_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::U64>{.result=_1472_un};;
}



inline jule::Exceptional<jule::I64> _1ac58066a_ParseInt(jule::Str _17217_s, jule::I32 _17225_base, jule::I32 _17240_bitSize) {
	if ((_17217_s).empty()) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	jule::Bool _1786_neg = false;;
	if ((_17217_s[0LL] == '+')) {
		(_17217_s).mut_slice(1LL);;
	} else if ((_17217_s[0LL] == '-')) {
		_1786_neg=true;
		(_17217_s).mut_slice(1LL);;
	};
	jule::U64 _1876_un;
	jule::I32 _18710_err;
	({
		__jule_tuple_u64__jule_tuple__1ab8d26e3_ConvError __jule_assign_result = _1ac57ec85_parseUint(&(_17217_s), _17225_base, _17240_bitSize);
		_1876_un = __jule_assign_result.__jule_result_arg0;
		_18710_err = __jule_assign_result.__jule_result_arg1;
	});
	if (((_18710_err != static_cast<jule::I32>(0LL)) && (_18710_err != static_cast<jule::I32>(1LL)))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(_18710_err, &__jule_any_type142)};
	};
	if ((_17240_bitSize == 0LL)) {
		_17240_bitSize=32LL;
	};
	jule::U64 _1962_cutoff = static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = static_cast<jule::U32>((_17240_bitSize - 1LL)); ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));;
	if (((!(_1786_neg)) && (_1876_un >= _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	if ((_1786_neg && (_1876_un > _1962_cutoff))) {
		return jule::Exceptional<jule::I64>{.error=jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type142)};
	};
	jule::I64 _2036_n = static_cast<jule::I64>(_1876_un);;
	if (_1786_neg) {
		_2036_n=(-(_2036_n));
	};
	return jule::Exceptional<jule::I64>{.result=_2036_n};;
}



inline __jule_tuple_f64__jule_tuple_bool _1ac581308_eiselLemire64(jule::U64 _4122_man, jule::I32 _4132_exp10, jule::Bool _4144_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_4122_man == 0LLU)) {
		if (_4144_neg) {
			__jule_func_result.__jule_result_arg0=_1ac53d67d_F64FromBits(9223372036854775808LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_4132_exp10 < -348LL) || (347LL < _4132_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _572_clz = _1a9784124_LeadingZeros64(_4122_man);;
	_4122_man = ({ jule::U64 __jule_x = _4122_man; jule::U32 __jule_y = static_cast<jule::U32>(_572_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _606_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _4132_exp10) >> 16LL) + 64LL) + 1023LL)) - static_cast<jule::U64>(_572_clz));;
	jule::U64 _636_xHi;
	jule::U64 _6315_xLo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(_4122_man, _1ac5820d9_detailedPowsOfTen[(_4132_exp10 - -348LL)][1LL]);
		_636_xHi = __jule_assign_result.__jule_result_arg0;
		_6315_xLo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_636_xHi & 511LLU) == 511LLU) && ((jule::U64)(_6315_xLo + _4122_man) < _4122_man))) {
		jule::U64 _673_yHi;
		jule::U64 _678_yLo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(_4122_man, _1ac5820d9_detailedPowsOfTen[(_4132_exp10 - -348LL)][0LL]);
			_673_yHi = __jule_assign_result.__jule_result_arg0;
			_678_yLo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _687_mergedHi;
		jule::U64 _6817_mergedLo;
		({
			jule::U64 ___jule_assign_arg = _636_xHi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_6315_xLo + _673_yHi);
			_687_mergedHi = ___jule_assign_arg;
			_6817_mergedLo = _1___jule_assign_arg;
		});
		if ((_6817_mergedLo < _6315_xLo)) {
			(_687_mergedHi)++;
		};
		if (((((_687_mergedHi & 511LLU) == 511LLU) && ((jule::U64)(_6817_mergedLo + 1LLU) == 0LLU)) && ((jule::U64)(_678_yLo + _4122_man) < _4122_man))) {
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _687_mergedHi;
			jule::U64 _1___jule_assign_arg = _6817_mergedLo;
			_636_xHi = ___jule_assign_arg;
			_6315_xLo = _1___jule_assign_arg;
		});
	};
	jule::U64 _792_msb = (_636_xHi >> 63LLU);;
	jule::U64 _806_retMantissa = ({ jule::U64 __jule_x = _636_xHi; jule::U64 __jule_y = (jule::U64)(_792_msb + 9LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_606_retExp2-=(1LLU ^ _792_msb);
	if ((((_6315_xLo == 0LLU) && ((_636_xHi & 511LLU) == 0LLU)) && ((_806_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_806_retMantissa+=(_806_retMantissa & 1LLU);
	_806_retMantissa=(_806_retMantissa >> 1LLU);
	if (((_806_retMantissa >> 53LLU) > 0LLU)) {
		_806_retMantissa=(_806_retMantissa >> 1LLU);
		_606_retExp2+=1LLU;
	};
	if (((jule::U64)(_606_retExp2 - 1LLU) >= 2046LLU)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1036_retBits = ((jule::U64)(_606_retExp2 << 52LLU) | (_806_retMantissa & 4503599627370495LLU));;
	if (_4144_neg) {
		_1036_retBits|=9223372036854775808LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1ac53d67d_F64FromBits(_1036_retBits);
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ac5816e3_eiselLemire32(jule::U64 _11022_man, jule::I32 _11032_exp10, jule::Bool _11044_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((_11022_man == 0LLU)) {
		if (_11044_neg) {
			__jule_func_result.__jule_result_arg0=_1ac53d073_F32FromBits(2147483648LLU);
		};
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = true;
		return __jule_func_result;;
	};
	if (((_11032_exp10 < -348LL) || (347LL < _11032_exp10))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::I32 _1322_clz = _1a9784124_LeadingZeros64(_11022_man);;
	_11022_man = ({ jule::U64 __jule_x = _11022_man; jule::U32 __jule_y = static_cast<jule::U32>(_1322_clz); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	;
	jule::U64 _1356_retExp2 = (jule::U64)(static_cast<jule::U64>(((((217706LL * _11032_exp10) >> 16LL) + 64LL) + 127LL)) - static_cast<jule::U64>(_1322_clz));;
	jule::U64 _1386_x_hi;
	jule::U64 _13816_x_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(_11022_man, _1ac5820d9_detailedPowsOfTen[(_11032_exp10 - -348LL)][1LL]);
		_1386_x_hi = __jule_assign_result.__jule_result_arg0;
		_13816_x_lo = __jule_assign_result.__jule_result_arg1;
	});
	if ((((_1386_x_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_13816_x_lo + _11022_man) < _11022_man))) {
		jule::U64 _1423_y_hi;
		jule::U64 _1429_y_lo;
		({
			__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(_11022_man, _1ac5820d9_detailedPowsOfTen[(_11032_exp10 - -348LL)][0LL]);
			_1423_y_hi = __jule_assign_result.__jule_result_arg0;
			_1429_y_lo = __jule_assign_result.__jule_result_arg1;
		});
		jule::U64 _1437_merged_hi;
		jule::U64 _14318_merged_lo;
		({
			jule::U64 ___jule_assign_arg = _1386_x_hi;
			jule::U64 _1___jule_assign_arg = (jule::U64)(_13816_x_lo + _1423_y_hi);
			_1437_merged_hi = ___jule_assign_arg;
			_14318_merged_lo = _1___jule_assign_arg;
		});
		if ((_14318_merged_lo < _13816_x_lo)) {
			(_1437_merged_hi)++;
		};
		if (((((_1437_merged_hi & 274877906943LLU) == 274877906943LLU) && ((jule::U64)(_14318_merged_lo + 1LLU) == 0LLU)) && ((jule::U64)(_1429_y_lo + _11022_man) < _11022_man))) {
			__jule_func_result.__jule_result_arg0 = 0.0f;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		};
		({
			jule::U64 ___jule_assign_arg = _1437_merged_hi;
			jule::U64 _1___jule_assign_arg = _14318_merged_lo;
			_1386_x_hi = ___jule_assign_arg;
			_13816_x_lo = _1___jule_assign_arg;
		});
	};
	jule::U64 _1542_msb = (_1386_x_hi >> 63LLU);;
	jule::U64 _1556_retMantissa = ({ jule::U64 __jule_x = _1386_x_hi; jule::U64 __jule_y = (jule::U64)(_1542_msb + 38LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });;
	_1356_retExp2-=(1LLU ^ _1542_msb);
	if ((((_13816_x_lo == 0LLU) && ((_1386_x_hi & 274877906943LLU) == 0LLU)) && ((_1556_retMantissa & 3LLU) == 1LLU))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	_1556_retMantissa+=(_1556_retMantissa & 1LLU);
	_1556_retMantissa=(_1556_retMantissa >> 1LLU);
	if (((_1556_retMantissa >> 24LLU) > 0LLU)) {
		_1556_retMantissa=(_1556_retMantissa >> 1LLU);
		_1356_retExp2+=1LLU;
	};
	if (((jule::U64)(_1356_retExp2 - 1LLU) >= 254LLU)) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = false;
		return __jule_func_result;;
	};
	jule::U64 _1786_retBits = ((jule::U64)(_1356_retExp2 << 23LLU) | (_1556_retMantissa & 8388607LLU));;
	if (_11044_neg) {
		_1786_retBits|=2147483648LLU;
	};
	__jule_func_result.__jule_result_arg0 = _1ac53d073_F32FromBits(static_cast<jule::U32>(_1786_retBits));
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}



inline jule::I32 _1ac58341a_commonPrefixLenIgnoreCase(jule::Str _4630_s, jule::Str _4638_prefix) {
	jule::I32 _476_n = _4638_prefix.len();;
	if ((_476_n > _4630_s.len())) {
		_476_n=_4630_s.len();
	};
	jule::I32 _516_i = 0LL;;
	for (; (_516_i < _476_n); (_516_i)++) {
		{
			jule::U8 _537_c = _4630_s[_516_i];;
			if ((('A' <= _537_c) && (_537_c <= 'Z'))) {
				_537_c+=32LL;
			};
			if ((_537_c != _4638_prefix[_516_i])) {
				return _516_i;;
			};
		}
	_iter_next_1c060e4d8:;
	}
	_iter_end_1c060e4d8:;;
	return _476_n;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple_bool _1ac583728_special(jule::Str _6912_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_6912_s.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = 0LL;
		__jule_func_result.__jule_result_arg2 = false;
		return __jule_func_result;;
	};
	jule::I32 _736_sign = 1LL;;
	jule::I32 _746_nsign = 0LL;;
	{
		auto &_match_expr{ _6912_s[0LL] };
		
		if (_match_expr == '+' || _match_expr == '-') {
			_case_begin_1c0612dc1:;
			{
				if ((_6912_s[0LL] == '-')) {
					_736_sign=-1LL;
				};
				_746_nsign=1LL;
				{
					jule::Str* _838_sp = (&(_6912_s));;
					((*(_838_sp))).mut_slice(1LL);;
				};
				goto _case_begin_1c0612e48;
			}
		}
		else if (_match_expr == 'i' || _match_expr == 'I') {
			_case_begin_1c0612e48:;
			{
				jule::I32 _887_caseN = _1ac58341a_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("infinity", 8));;
				if (((3LL < _887_caseN) && (_887_caseN < 8LL))) {
					_887_caseN=3LL;
				};
				if (((_887_caseN == 3LL) || (_887_caseN == 8LL))) {
					__jule_func_result.__jule_result_arg0 = _1ac546730_Inf(_736_sign);
					__jule_func_result.__jule_result_arg1 = (_746_nsign + __jule_func_result.__jule_result_arg1);
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		else if (_match_expr == 'n' || _match_expr == 'N') {
			_case_begin_1c0612eae:;
			{
				if ((_1ac58341a_commonPrefixLenIgnoreCase(_6912_s, jule::Str::lit("NaN", 3)) == 3LL)) {
					__jule_func_result.__jule_result_arg0 = _1ac546158_NaN();
					__jule_func_result.__jule_result_arg1 = 3LL;
					__jule_func_result.__jule_result_arg2 = true;
					return __jule_func_result;;
				};
			}
		}
		_match_end_1c0612d27:;
	};
	__jule_func_result.__jule_result_arg0 = 0LL;
	__jule_func_result.__jule_result_arg1 = 0LL;
	__jule_func_result.__jule_result_arg2 = false;
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool _1ac5839e2_readFloat(jule::Str* _10815_s) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	__jule_func_result.__jule_result_arg3 = false;
	__jule_func_result.__jule_result_arg4 = false;
	__jule_func_result.__jule_result_arg5 = 0;
	__jule_func_result.__jule_result_arg6 = false;
	if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
		return __jule_func_result;;
	};
	{
		
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			_case_begin_1c06181c3:;
			{
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			_case_begin_1c06185be:;
			{
				__jule_func_result.__jule_result_arg2=true;
				(__jule_func_result.__jule_result_arg5)++;
			}
		}
		_match_end_1c061815c:;
	};
	jule::U64 _1226_base = static_cast<jule::U64>(10LLU);;
	jule::I32 _1236_maxMantDigits = 19LL;;
	jule::U8 _1246_expChar = 'e';;
	if (((((__jule_func_result.__jule_result_arg5 + 2LL) < (*(_10815_s)).len()) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '0')) && (_1ac57e812_lower((*(_10815_s))[(__jule_func_result.__jule_result_arg5 + 1LL)]) == 'x'))) {
		_1226_base=16LLU;
		_1236_maxMantDigits=16LL;
		__jule_func_result.__jule_result_arg5+=2LL;
		_1246_expChar='p';
		__jule_func_result.__jule_result_arg4=true;
	};
	jule::Bool _1326_sawdot = false;;
	jule::Bool _1336_sawdigits = false;;
	jule::I32 _1346_nd = 0LL;;
	jule::I32 _1356_ndMant = 0LL;;
	jule::I32 _1366_dp = 0LL;;
	for (; (__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()); (__jule_func_result.__jule_result_arg5)++) {
		{
			jule::U8 _1383_c = (*(_10815_s))[__jule_func_result.__jule_result_arg5];;
			{
				
				if ((_1383_c == '_')) {
					_case_begin_1c061d56e:;
					{
						goto _iter_next_1c061ca02;
					}
				}
				else if ((_1383_c == '.')) {
					_case_begin_1c061d618:;
					{
						if (_1326_sawdot) {
							goto _julec_label_1c0621b6b;
						};
						_1326_sawdot=true;
						_1366_dp=_1346_nd;
						goto _iter_next_1c061ca02;
					}
				}
				else if ((('0' <= _1383_c) && (_1383_c <= '9'))) {
					_case_begin_1c061d67e:;
					{
						_1336_sawdigits=true;
						if (((_1383_c == '0') && (_1346_nd == 0LL))) {
							(_1366_dp)--;
							goto _iter_next_1c061ca02;
						};
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=_1226_base;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)(_1383_c - '0'));
							(_1356_ndMant)++;
						} else if ((_1383_c != '0')) {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c061ca02;
					}
				}
				else if ((((_1226_base == 16LLU) && ('a' <= _1ac57e812_lower(_1383_c))) && (_1ac57e812_lower(_1383_c) <= 'f'))) {
					_case_begin_1c061d6e5:;
					{
						_1336_sawdigits=true;
						(_1346_nd)++;
						if ((_1356_ndMant < _1236_maxMantDigits)) {
							__jule_func_result.__jule_result_arg0*=16LLU;
							__jule_func_result.__jule_result_arg0+=static_cast<jule::U64>((jule::U8)((jule::U8)(_1ac57e812_lower(_1383_c) - 'a') + 10LLU));
							(_1356_ndMant)++;
						} else {
							__jule_func_result.__jule_result_arg3=true;
						};
						goto _iter_next_1c061ca02;
					}
				}
				_match_end_1c061d481:;
			};
			goto _iter_end_1c061ca02;
		}
	_iter_next_1c061ca02:;
	}
	_iter_end_1c061ca02:;;
	_julec_label_1c0621b6b:;
	if ((!(_1336_sawdigits))) {
		return __jule_func_result;;
	};
	if ((!(_1326_sawdot))) {
		_1366_dp=_1346_nd;
	};
	if ((_1226_base == 16LLU)) {
		_1366_dp*=4LL;
		_1356_ndMant*=4LL;
	};
	if (((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && (_1ac57e812_lower((*(_10815_s))[__jule_func_result.__jule_result_arg5]) == _1246_expChar))) {
		(__jule_func_result.__jule_result_arg5)++;
		if ((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len())) {
			return __jule_func_result;;
		};
		jule::I32 _2017_esign = 1LL;;
		if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '+')) {
			(__jule_func_result.__jule_result_arg5)++;
		} else if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '-')) {
			(__jule_func_result.__jule_result_arg5)++;
			_2017_esign=-1LL;
		};
		if ((((__jule_func_result.__jule_result_arg5 >= (*(_10815_s)).len()) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] < '0')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] > '9'))) {
			return __jule_func_result;;
		};
		jule::I32 _2117_e = 0LL;;
		for (; ((__jule_func_result.__jule_result_arg5 < (*(_10815_s)).len()) && ((('0' <= (*(_10815_s))[__jule_func_result.__jule_result_arg5]) && ((*(_10815_s))[__jule_func_result.__jule_result_arg5] <= '9')) || ((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_'))); (__jule_func_result.__jule_result_arg5)++) {
			{
				if (((*(_10815_s))[__jule_func_result.__jule_result_arg5] == '_')) {
					goto _iter_next_1c06258d9;
				};
				if ((_2117_e < 10000LL)) {
					_2117_e=(((_2117_e * 10LL) + static_cast<jule::I32>((*(_10815_s))[__jule_func_result.__jule_result_arg5])) - '0');
				};
			}
		_iter_next_1c06258d9:;
		}
		_iter_end_1c06258d9:;;
		_1366_dp+=(_2117_e * _2017_esign);
	} else if ((_1226_base == 16LLU)) {
		return __jule_func_result;;
	};
	if ((__jule_func_result.__jule_result_arg0 != 0LLU)) {
		__jule_func_result.__jule_result_arg1=(_1366_dp - _1356_ndMant);
	};
	__jule_func_result.__jule_result_arg6=true;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_bool _1ac58553d_atof64exact(jule::U64 _48616_mantissa, jule::I32 _48635_exp, jule::Bool _48645_neg) {
	__jule_tuple_f64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _48616_mantissa; jule::U32 __jule_y = _1ac5796b9_f64info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F64>(_48616_mantissa);
	if (_48645_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_48635_exp == 0LL)) {
			_case_begin_1c062d914:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp > 0LL) && (_48635_exp <= 37LL))) {
			_case_begin_1c062d97a:;
			{
				if ((_48635_exp > 22LL)) {
					__jule_func_result.__jule_result_arg0*=_1ac584905_f64pow10[(_48635_exp - 22LL)];
					_48635_exp=22LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 1000000000000000LL) || (__jule_func_result.__jule_result_arg0 < -1000000000000000LL))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1ac584905_f64pow10[_48635_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_48635_exp < 0LL) && (_48635_exp >= -22LL))) {
			_case_begin_1c062d9e1:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F64 __jule_x = __jule_func_result.__jule_result_arg0; jule::F64 __jule_y = _1ac584905_f64pow10[(-(_48635_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F64)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c062d826:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_bool _1ac58596c_atof32exact(jule::U64 _52016_mantissa, jule::I32 _52035_exp, jule::Bool _52049_neg) {
	__jule_tuple_f32__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if ((({ jule::U64 __jule_x = _52016_mantissa; jule::U32 __jule_y = _1ac5793bc_f32info._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0=static_cast<jule::F32>(_52016_mantissa);
	if (_52049_neg) {
		__jule_func_result.__jule_result_arg0=(-(__jule_func_result.__jule_result_arg0));
	};
	{
		
		if ((_52035_exp == 0LL)) {
			_case_begin_1c0632b7c:;
			{
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp > 0LL) && (_52035_exp <= 17LL))) {
			_case_begin_1c0632be3:;
			{
				if ((_52035_exp > 10LL)) {
					__jule_func_result.__jule_result_arg0*=_1ac584c35_f32pow10[(_52035_exp - 10LL)];
					_52035_exp=10LL;
				};
				if (((__jule_func_result.__jule_result_arg0 > 10000000.0f) || (__jule_func_result.__jule_result_arg0 < -10000000.0f))) {
					return __jule_func_result;;
				};
				__jule_func_result.__jule_result_arg0 = (__jule_func_result.__jule_result_arg0 * _1ac584c35_f32pow10[_52035_exp]);
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		else if (((_52035_exp < 0LL) && (_52035_exp >= -10LL))) {
			_case_begin_1c0632c59:;
			{
				__jule_func_result.__jule_result_arg0 = ({ jule::F32 __jule_x = __jule_func_result.__jule_result_arg0; jule::F32 __jule_y = _1ac584c35_f32pow10[(-(_52035_exp))]; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::F32)(__jule_x / __jule_y)); });
				__jule_func_result.__jule_result_arg1 = true;
				return __jule_func_result;;
			}
		}
		_match_end_1c0632a8e:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple__1ab8d26e3_ConvError _1ac586011_atofHex(_1ac579004_floatInfo* _55613_flt, jule::U64 _55633_mantissa, jule::I32 _55652_exp, jule::Bool _55662_neg, jule::Bool _55673_trunc) {
	__jule_tuple_f64__jule_tuple__1ab8d26e3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0LL;
	jule::I32 _5572_maxExp = ((static_cast<jule::I32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) + (*(_55613_flt))._field_bias) - 2LL);;
	jule::I32 _5582_minExp = ((*(_55613_flt))._field_bias + 1LL);;
	_55652_exp+=static_cast<jule::I32>((*(_55613_flt))._field_mantbits);
	while (((_55633_mantissa != 0LLU) && (({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((*(_55613_flt))._field_mantbits + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU))) {
		{
			_55633_mantissa=(jule::U64)(_55633_mantissa << 1LLU);
			(_55652_exp)--;
		}
	_iter_next_1c063b38e:;
	}
	_iter_end_1c063b38e:;;
	if (_55673_trunc) {
		_55633_mantissa|=1LLU;
	};
	while ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (jule::U32)((jule::U32)(1LLU + (*(_55613_flt))._field_mantbits) + 2LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) != 0LLU)) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1c063d66b:;
	}
	_iter_end_1c063d66b:;;
	while (((_55633_mantissa > 1LLU) && (_55652_exp < (_5582_minExp - 2LL)))) {
		{
			_55633_mantissa=((_55633_mantissa >> 1LLU) | (_55633_mantissa & 1LLU));
			(_55652_exp)++;
		}
	_iter_next_1c063da45:;
	}
	_iter_end_1c063da45:;;
	jule::U64 _5886_round = (_55633_mantissa & 3LLU);;
	_55633_mantissa=(_55633_mantissa >> 2LLU);
	_5886_round|=(_55633_mantissa & 1LLU);
	_55652_exp+=2LL;
	if ((_5886_round == 3LLU)) {
		(_55633_mantissa)++;
		if ((_55633_mantissa == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(1LLU + (*(_55613_flt))._field_mantbits); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }))) {
			_55633_mantissa=(_55633_mantissa >> 1LLU);
			(_55652_exp)++;
		};
	};
	if ((({ jule::U64 __jule_x = _55633_mantissa; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
		_55652_exp=(*(_55613_flt))._field_bias;
	};
	jule::I32 _6036_err = static_cast<jule::I32>(0LL);;
	if ((_55652_exp > _5572_maxExp)) {
		_55633_mantissa=static_cast<jule::U64>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }));
		_55652_exp=(_5572_maxExp + 1LL);
		_6036_err=static_cast<jule::I32>(1LL);
	};
	jule::U64 _6106_bits = (_55633_mantissa & (jule::U64)(({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }) - 1LLU));;
	_6106_bits|=({ jule::U64 __jule_x = static_cast<jule::U64>(((_55652_exp - (*(_55613_flt))._field_bias) & static_cast<jule::I32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL)))); jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	if (_55662_neg) {
		_6106_bits|=({ jule::U64 __jule_x = ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_55613_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }); jule::U32 __jule_y = (*(_55613_flt))._field_expbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
	};
	if (_1ac579004_floatInfo_eq(&(*(_55613_flt)), _1ac5793bc_f32info)) {
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_1ac53d073_F32FromBits(static_cast<jule::U32>(_6106_bits)));
		__jule_func_result.__jule_result_arg1 = _6036_err;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = _1ac53d67d_F64FromBits(_6106_bits);
	__jule_func_result.__jule_result_arg1 = _6036_err;
	return __jule_func_result;;
}



inline __jule_tuple_f32__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError _1ac5863da_atof32(jule::Str _62111_s) {
	__jule_tuple_f32__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6233_val;
		jule::I32 _6238__n;
		jule::Bool _62312_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac583728_special(_62111_s);
			_6233_val = __jule_assign_result.__jule_result_arg0;
			_6238__n = __jule_assign_result.__jule_result_arg1;
			_62312_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_62312_ok) {
			__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6233_val);
			__jule_func_result.__jule_result_arg1 = _6238__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6292_mantissa;
	jule::I32 _62912_exp;
	jule::Bool _62917_neg;
	jule::Bool _62922_trunc;
	jule::Bool _62929_hex;
	jule::I32 _62934__n;
	jule::Bool _62942_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5839e2_readFloat(&(_62111_s));
		_6292_mantissa = __jule_assign_result.__jule_result_arg0;
		_62912_exp = __jule_assign_result.__jule_result_arg1;
		_62917_neg = __jule_assign_result.__jule_result_arg2;
		_62922_trunc = __jule_assign_result.__jule_result_arg3;
		_62929_hex = __jule_assign_result.__jule_result_arg4;
		_62934__n = __jule_assign_result.__jule_result_arg5;
		_62942_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_62934__n;
	if ((!(_62942_ok))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_62929_hex) {
		jule::F64 _6367_ff = 0LL;;
		({
			__jule_tuple_f64__jule_tuple__1ab8d26e3_ConvError __jule_assign_result = _1ac586011_atofHex(&(_1ac5793bc_f32info), _6292_mantissa, _62912_exp, _62917_neg, _62922_trunc);
			_6367_ff = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F32>(_6367_ff);
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_62922_trunc))) {
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ac58596c_atof32exact(_6292_mantissa, _62912_exp, _62917_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_62942_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ac5816e3_eiselLemire32(_6292_mantissa, _62912_exp, _62917_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_62942_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_62942_ok) {
			if ((!(_62922_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F32 _6588_fUp = static_cast<jule::F32>(0.0f);;
			({
				__jule_tuple_f32__jule_tuple_bool __jule_assign_result = _1ac5816e3_eiselLemire32((jule::U64)(_6292_mantissa + 1LLU), _62912_exp, _62917_neg);
				_6588_fUp = __jule_assign_result.__jule_result_arg0;
				_62942_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_62942_ok && (__jule_func_result.__jule_result_arg0 == _6588_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ac59254a_decimal _6676_d = _1ac59254a_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1ac5841a7_set(&_6676_d, _1c3060bb2_StrBytes(_62111_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0.0f;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _6712_b;
	jule::Bool _6715_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ac5844e8_floatBits(&_6676_d, &(_1ac5793bc_f32info));
		_6712_b = __jule_assign_result.__jule_result_arg0;
		_6715_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1ac53d073_F32FromBits(static_cast<jule::U32>(_6712_b));
	if (_6715_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError _1ac58662c_atof64(jule::Str _67911_s) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	{
		jule::F64 _6813_val;
		jule::I32 _6818__n;
		jule::Bool _68112_ok;
		({
			__jule_tuple_f64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac583728_special(_67911_s);
			_6813_val = __jule_assign_result.__jule_result_arg0;
			_6818__n = __jule_assign_result.__jule_result_arg1;
			_68112_ok = __jule_assign_result.__jule_result_arg2;
		});
		if (_68112_ok) {
			__jule_func_result.__jule_result_arg0 = _6813_val;
			__jule_func_result.__jule_result_arg1 = _6818__n;
			__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
			return __jule_func_result;;
		};
	};
	jule::U64 _6872_mantissa;
	jule::I32 _68712_exp;
	jule::Bool _68717_neg;
	jule::Bool _68722_trunc;
	jule::Bool _68729_hex;
	jule::I32 _68734__n;
	jule::Bool _68742_ok;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool__jule_tuple_bool__jule_tuple_bool__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5839e2_readFloat(&(_67911_s));
		_6872_mantissa = __jule_assign_result.__jule_result_arg0;
		_68712_exp = __jule_assign_result.__jule_result_arg1;
		_68717_neg = __jule_assign_result.__jule_result_arg2;
		_68722_trunc = __jule_assign_result.__jule_result_arg3;
		_68729_hex = __jule_assign_result.__jule_result_arg4;
		_68734__n = __jule_assign_result.__jule_result_arg5;
		_68742_ok = __jule_assign_result.__jule_result_arg6;
	});
	__jule_func_result.__jule_result_arg1=_68734__n;
	if ((!(_68742_ok))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	if (_68729_hex) {
		({
			__jule_tuple_f64__jule_tuple__1ab8d26e3_ConvError __jule_assign_result = _1ac586011_atofHex(&(_1ac5796b9_f64info), _6872_mantissa, _68712_exp, _68717_neg, _68722_trunc);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			__jule_func_result.__jule_result_arg2 = __jule_assign_result.__jule_result_arg1;
		});
		__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
		return __jule_func_result;;
	};
	{
		if ((!(_68722_trunc))) {
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ac58553d_atof64exact(_6872_mantissa, _68712_exp, _68717_neg);
				__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if (_68742_ok) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
		({
			__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ac581308_eiselLemire64(_6872_mantissa, _68712_exp, _68717_neg);
			__jule_func_result.__jule_result_arg0 = __jule_assign_result.__jule_result_arg0;
			_68742_ok = __jule_assign_result.__jule_result_arg1;
		});
		if (_68742_ok) {
			if ((!(_68722_trunc))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
			jule::F64 _7158_fUp = 0LL;;
			({
				__jule_tuple_f64__jule_tuple_bool __jule_assign_result = _1ac581308_eiselLemire64((jule::U64)(_6872_mantissa + 1LLU), _68712_exp, _68717_neg);
				_7158_fUp = __jule_assign_result.__jule_result_arg0;
				_68742_ok = __jule_assign_result.__jule_result_arg1;
			});
			if ((_68742_ok && (__jule_func_result.__jule_result_arg0 == _7158_fUp))) {
				__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
				__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
				__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(0LL);
				return __jule_func_result;;
			};
		};
	};
	_1ac59254a_decimal _7246_d = _1ac59254a_decimal{._field_d=({ auto __jule_collection = jule::Array<jule::U8,800>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }), ._field_nd=0, ._field_dp=0, ._field_neg=false, ._field_trunc=false};;
	if ((!(_1ac5841a7_set(&_7246_d, _1c3060bb2_StrBytes(_67911_s).slice(0LL, __jule_func_result.__jule_result_arg1))))) {
		__jule_func_result.__jule_result_arg0 = 0LL;
		__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
		__jule_func_result.__jule_result_arg2 = static_cast<jule::I32>(2LL);
		return __jule_func_result;;
	};
	jule::U64 _7282_b;
	jule::Bool _7285_ovf;
	({
		__jule_tuple_u64__jule_tuple_bool __jule_assign_result = _1ac5844e8_floatBits(&_7246_d, &(_1ac5796b9_f64info));
		_7282_b = __jule_assign_result.__jule_result_arg0;
		_7285_ovf = __jule_assign_result.__jule_result_arg1;
	});
	__jule_func_result.__jule_result_arg0=_1ac53d67d_F64FromBits(_7282_b);
	if (_7285_ovf) {
		__jule_func_result.__jule_result_arg2=static_cast<jule::I32>(1LL);
	};
	__jule_func_result.__jule_result_arg0 = __jule_func_result.__jule_result_arg0;
	__jule_func_result.__jule_result_arg1 = __jule_func_result.__jule_result_arg1;
	__jule_func_result.__jule_result_arg2 = __jule_func_result.__jule_result_arg2;
	return __jule_func_result;;
}



inline __jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError _1ac5869a1_parseFloatPrefix(jule::Str* _73622_s, jule::I32 _73630_bitSize) {
	__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0LL;
	if ((_73630_bitSize == 32LL)) {
		jule::F32 _7383_f;
		jule::I32 _7386_n;
		jule::I32 _7389_err;
		({
			__jule_tuple_f32__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError __jule_assign_result = _1ac5863da_atof32((*(_73622_s)));
			_7383_f = __jule_assign_result.__jule_result_arg0;
			_7386_n = __jule_assign_result.__jule_result_arg1;
			_7389_err = __jule_assign_result.__jule_result_arg2;
		});
		__jule_func_result.__jule_result_arg0 = static_cast<jule::F64>(_7383_f);
		__jule_func_result.__jule_result_arg1 = _7386_n;
		__jule_func_result.__jule_result_arg2 = _7389_err;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1ac58662c_atof64((*(_73622_s))));
return __jule_func_result;;
}



inline jule::Exceptional<jule::F64> _1ac586d25_ParseFloat(jule::Str _76815_s, jule::I32 _76823_bitSize) {
	jule::F64 _7692_f;
	jule::I32 _7695_n;
	jule::I32 _7698_err;
	({
		__jule_tuple_f64__jule_tuple_int__jule_tuple__1ab8d26e3_ConvError __jule_assign_result = _1ac5869a1_parseFloatPrefix(&(_76815_s), _76823_bitSize);
		_7692_f = __jule_assign_result.__jule_result_arg0;
		_7695_n = __jule_assign_result.__jule_result_arg1;
		_7698_err = __jule_assign_result.__jule_result_arg2;
	});
	if (((_7695_n != _76815_s.len()) && ((_7698_err == static_cast<jule::I32>(0LL)) || (_7698_err != static_cast<jule::I32>(2LL))))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(static_cast<jule::I32>(2LL), &__jule_any_type142)};
	};
	if ((_7698_err != static_cast<jule::I32>(0LL))) {
		return jule::Exceptional<jule::F64>{.error=jule::Any(_7698_err, &__jule_any_type142)};
	};
	return jule::Exceptional<jule::F64>{.result=_7692_f};;
}



inline void _1ac587650_ryuFtoaFixed32(_1ac579b4d_decimalSlice* _4924_d, jule::U32 _4945_mant, jule::I32 _4956_exp, jule::I32 _4966_prec) {
	if ((_4966_prec < 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with negative prec", 46) + jule::Str("\nlocation: std/conv/ftoaryu.jule:51:3"));;
	};
	if ((_4966_prec > 9LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed32 called with prec > 9", 41) + jule::Str("\nlocation: std/conv/ftoaryu.jule:54:3"));;
	};
	if ((_4945_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_4924_d))._field_nd = ___jule_assign_arg;
			(*(_4924_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _626_e2 = _4956_exp;;
	jule::I32 _632_b = _1a978b6e2_Len32(_4945_mant);;
	if ((_632_b < 25LL)) {
		_4945_mant = ({ jule::U32 __jule_x = _4945_mant; jule::U32 __jule_y = static_cast<jule::U32>((25LL - _632_b)); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
		_626_e2+=(static_cast<jule::I32>(_632_b) - 25LL);
	};
	jule::I32 _742_q = (((-(_1ac588b90_mulByLog2Log10((_626_e2 + 24LL)))) + _4966_prec) - 1LL);;
	jule::Bool _796_exact = ((_742_q <= 27LL) && (_742_q >= 0LL));;
	jule::U32 _816_di;
	jule::I32 _8110_dexp2;
	jule::Bool _8121_d0;
	({
		__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5903e4_mult64bitPow10(_4945_mant, _626_e2, _742_q);
		_816_di = __jule_assign_result.__jule_result_arg0;
		_8110_dexp2 = __jule_assign_result.__jule_result_arg1;
		_8121_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_8110_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult64bitPow10", 54) + jule::Str("\nlocation: std/conv/ftoaryu.jule:83:3"));;
	};
	if ((((_742_q < 0LL) && (_742_q >= -10LL)) && _1ac590b97_divisibleByPow5(static_cast<jule::U64>(_4945_mant), (-(_742_q))))) {
		_796_exact=true;
		_8121_d0=true;
	};
	jule::U32 _942_extra = static_cast<jule::U32>((-(_8110_dexp2)));;
	jule::U32 _952_extraMask = static_cast<jule::U32>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _942_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U32 _976_dfrac = static_cast<jule::U32>(0LLU);;
	({
		jule::U32 ___jule_assign_arg = ({ jule::U32 __jule_x = _816_di; jule::U32 __jule_y = _942_extra; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });
		jule::U32 _1___jule_assign_arg = (_816_di & _952_extraMask);
		_816_di = ___jule_assign_arg;
		_976_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _996_roundUp = false;;
	if (_796_exact) {
		_996_roundUp=(((_976_dfrac > ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) || ((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && (!(_8121_d0)))) || (((_976_dfrac == ({ jule::U32 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) && _8121_d0) && ((_816_di & 1LLU) == 1LLU)));
	} else {
		_996_roundUp=(({ jule::U32 __jule_x = _976_dfrac; jule::U32 __jule_y = (jule::U32)(_942_extra - 1LLU); ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_976_dfrac != 0LLU)) {
		_8121_d0=false;
	};
	_1ac588431_formatDecimal(_4924_d, static_cast<jule::U64>(_816_di), (!(_8121_d0)), _996_roundUp, _4966_prec);
	(*(_4924_d))._field_dp-=_742_q;
}



inline void _1ac587ae5_ryuFtoaFixed64(_1ac579b4d_decimalSlice* _12124_d, jule::U64 _12145_mant, jule::I32 _12156_exp, jule::I32 _12166_prec) {
	if ((_12166_prec > 18LL)) {
		__jule_panic_s(jule::Str::lit("conv: ryuFtoaFixed64 called with prec > 18", 42) + jule::Str("\nlocation: std/conv/ftoaryu.jule:123:3"));;
	};
	if ((_12145_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_12124_d))._field_nd = ___jule_assign_arg;
			(*(_12124_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	jule::I32 _1316_e2 = _12156_exp;;
	jule::I32 _1322_b = _1a978b9ab_Len64(_12145_mant);;
	if ((_1322_b < 55LL)) {
		_12145_mant=({ jule::U64 __jule_x = _12145_mant; jule::U32 __jule_y = static_cast<jule::U32>((55LL - _1322_b)); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); });
		_1316_e2+=(static_cast<jule::I32>(_1322_b) - 55LL);
	};
	jule::I32 _1462_q = (((-(_1ac588b90_mulByLog2Log10((_1316_e2 + 54LL)))) + _12166_prec) - 1LL);;
	jule::Bool _1516_exact = ((_1462_q <= 55LL) && (_1462_q >= 0LL));;
	jule::U64 _1536_di;
	jule::I32 _15310_dexp2;
	jule::Bool _15321_d0;
	({
		__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac590823_mult128bitPow10(_12145_mant, _1316_e2, _1462_q);
		_1536_di = __jule_assign_result.__jule_result_arg0;
		_15310_dexp2 = __jule_assign_result.__jule_result_arg1;
		_15321_d0 = __jule_assign_result.__jule_result_arg2;
	});
	if ((_15310_dexp2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:155:3"));;
	};
	if ((((_1462_q < 0LL) && (_1462_q >= -22LL)) && _1ac590b97_divisibleByPow5(_12145_mant, (-(_1462_q))))) {
		_1516_exact=true;
		_15321_d0=true;
	};
	jule::U32 _1662_extra = static_cast<jule::U32>((-(_15310_dexp2)));;
	jule::U64 _1672_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _1662_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _1696_dfrac = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _1536_di; jule::U32 __jule_y = _1662_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_1536_di & _1672_extraMask);
		_1536_di = ___jule_assign_arg;
		_1696_dfrac = _1___jule_assign_arg;
	});
	jule::Bool _1716_roundUp = false;;
	if (_1516_exact) {
		_1716_roundUp=(((_1696_dfrac > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && (!(_15321_d0)))) || (((_1696_dfrac == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && _15321_d0) && ((_1536_di & 1LLU) == 1LLU)));
	} else {
		_1716_roundUp=(({ jule::U64 __jule_x = _1696_dfrac; jule::U32 __jule_y = (jule::U32)(_1662_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	if ((_1696_dfrac != 0LLU)) {
		_15321_d0=false;
	};
	_1ac588431_formatDecimal(_12124_d, _1536_di, (!(_15321_d0)), _1716_roundUp, _12166_prec);
	(*(_12124_d))._field_dp-=_1462_q;
}



inline void _1ac588431_formatDecimal(_1ac579b4d_decimalSlice* _20023_d, jule::U64 _20044_m, jule::Bool _20056_trunc, jule::Bool _20073_roundUp, jule::I32 _20088_prec) {
	jule::U64 _2012_max = _1ac587e36_u64pow10[_20088_prec];;
	jule::I32 _2026_trimmed = 0LL;;
	while ((_20044_m >= _2012_max)) {
		{
			jule::U64 _2043_a;
			jule::U64 _2046_b;
			({
				jule::U64 ___jule_assign_arg = (_20044_m / 10LLU);
				jule::U64 _1___jule_assign_arg = (_20044_m % 10LL);
				_2043_a = ___jule_assign_arg;
				_2046_b = _1___jule_assign_arg;
			});
			_20044_m=_2043_a;
			(_2026_trimmed)++;
			if ((_2046_b > 5LLU)) {
				_20073_roundUp=true;
			} else if ((_2046_b < 5LLU)) {
				_20073_roundUp=false;
			} else {
				_20073_roundUp=(_20056_trunc || ((_20044_m & 1LLU) == 1LLU));
			};
			if ((_2046_b != 0LLU)) {
				_20056_trunc=true;
			};
		}
	_iter_next_1c067399d:;
	}
	_iter_end_1c067399d:;;
	if (_20073_roundUp) {
		(_20044_m)++;
	};
	if ((_20044_m >= _2012_max)) {
		_20044_m=(_20044_m / 10LLU);
		(_2026_trimmed)++;
	};
	jule::U32 _2296_n = static_cast<jule::U32>(_20088_prec);;
	(*(_20023_d))._field_nd=static_cast<jule::I32>(_20088_prec);
	jule::U64 _2316_v = _20044_m;;
	while ((_2316_v >= 100LLU)) {
		{
			jule::U64 _2337_v1 = static_cast<jule::U64>(0LLU);;
			jule::U64 _2347_v2 = static_cast<jule::U64>(0LLU);;
			if (((_2316_v >> 32LLU) == 0LLU)) {
				({
					jule::U64 ___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) / 100LLU));
					jule::U64 _1___jule_assign_arg = static_cast<jule::U64>((static_cast<jule::U32>(_2316_v) % 100LL));
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			} else {
				({
					jule::U64 ___jule_assign_arg = (_2316_v / 100LLU);
					jule::U64 _1___jule_assign_arg = (_2316_v % 100LL);
					_2337_v1 = ___jule_assign_arg;
					_2347_v2 = _1___jule_assign_arg;
				});
			};
			_2296_n-=2LLU;
			(*(_20023_d))._field_d[static_cast<jule::I32>((jule::U32)(_2296_n + 1LLU))]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2347_v2) + 1LLU)));
			(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2347_v2)));
			_2316_v=_2337_v1;
		}
	_iter_next_1c0676b5a:;
	}
	_iter_end_1c0676b5a:;;
	if ((_2316_v > 0LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)((jule::U64)(2LL * _2316_v) + 1LLU)));
	};
	if ((_2316_v >= 10LLU)) {
		(_2296_n)--;
		(*(_20023_d))._field_d[static_cast<jule::I32>(_2296_n)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U64)(2LL * _2316_v)));
	};
	while (((*(_20023_d))._field_d[((*(_20023_d))._field_nd - 1LL)] == '0')) {
		{
			((*(_20023_d))._field_nd)--;
			(_2026_trimmed)++;
		}
	_iter_next_1c067c622:;
	}
	_iter_end_1c067c622:;;
	(*(_20023_d))._field_dp=((*(_20023_d))._field_nd + _2026_trimmed);
}



inline void _1ac588909_ryuFtoaShortest(_1ac579b4d_decimalSlice* _26125_d, jule::U64 _26146_mant, jule::I32 _26157_exp, _1ac579004_floatInfo* _26168_flt) {
	if ((_26146_mant == 0LLU)) {
		({
			jule::I32 ___jule_assign_arg = 0LL;
			jule::I32 _1___jule_assign_arg = 0LL;
			(*(_26125_d))._field_nd = ___jule_assign_arg;
			(*(_26125_d))._field_dp = _1___jule_assign_arg;
		});
		return;;
	};
	if (((_26157_exp <= 0LL) && (_1a9785c19_TrailingZeros64(_26146_mant) >= (-(_26157_exp))))) {
		_26146_mant = ({ jule::U64 __jule_x = _26146_mant; jule::U32 __jule_y = static_cast<jule::U32>((-(_26157_exp))); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		_1ac5899d7_ryuDigits(_26125_d, _26146_mant, _26146_mant, _26146_mant, true, false);
		return;;
	};
	jule::U64 _2732_ml;
	jule::U64 _2736_mc;
	jule::U64 _27310_mu;
	jule::I32 _27318_e2;
	({
		__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_assign_result = _1ac589388_computeBounds(_26146_mant, _26157_exp, _26168_flt);
		_2732_ml = __jule_assign_result.__jule_result_arg0;
		_2736_mc = __jule_assign_result.__jule_result_arg1;
		_27310_mu = __jule_assign_result.__jule_result_arg2;
		_27318_e2 = __jule_assign_result.__jule_result_arg3;
	});
	if ((_27318_e2 == 0LL)) {
		_1ac5899d7_ryuDigits(_26125_d, _2732_ml, _2736_mc, _27310_mu, true, false);
		return;;
	};
	jule::I32 _2792_q = (_1ac588b90_mulByLog2Log10((-(_27318_e2))) + 1LL);;
	jule::U64 _2836_dl = static_cast<jule::U64>(0LLU);;
	jule::U64 _2846_dc = static_cast<jule::U64>(0LLU);;
	jule::U64 _2856_du = static_cast<jule::U64>(0LLU);;
	jule::Bool _2866_dl0 = false;;
	jule::Bool _2876_dc0 = false;;
	jule::Bool _2886_du0 = false;;
	if (_1ac579004_floatInfo_eq(&(*(_26168_flt)), _1ac5793bc_f32info)) {
		jule::U32 _2907_dl32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2917_dc32 = static_cast<jule::U32>(0LLU);;
		jule::U32 _2927_du32 = static_cast<jule::U32>(0LLU);;
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5903e4_mult64bitPow10(static_cast<jule::U32>(_2732_ml), _27318_e2, _2792_q);
			_2907_dl32 = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5903e4_mult64bitPow10(static_cast<jule::U32>(_2736_mc), _27318_e2, _2792_q);
			_2917_dc32 = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac5903e4_mult64bitPow10(static_cast<jule::U32>(_27310_mu), _27318_e2, _2792_q);
			_2927_du32 = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			jule::U64 ___jule_assign_arg = static_cast<jule::U64>(_2907_dl32);
			jule::U64 _1___jule_assign_arg = static_cast<jule::U64>(_2917_dc32);
			jule::U64 _2___jule_assign_arg = static_cast<jule::U64>(_2927_du32);
			_2836_dl = ___jule_assign_arg;
			_2846_dc = _1___jule_assign_arg;
			_2856_du = _2___jule_assign_arg;
		});
	} else {
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac590823_mult128bitPow10(_2732_ml, _27318_e2, _2792_q);
			_2836_dl = __jule_assign_result.__jule_result_arg0;
			_2866_dl0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac590823_mult128bitPow10(_2736_mc, _27318_e2, _2792_q);
			_2846_dc = __jule_assign_result.__jule_result_arg0;
			_2876_dc0 = __jule_assign_result.__jule_result_arg2;
		});
		({
			__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1ac590823_mult128bitPow10(_27310_mu, _27318_e2, _2792_q);
			_2856_du = __jule_assign_result.__jule_result_arg0;
			_27318_e2 = __jule_assign_result.__jule_result_arg1;
			_2886_du0 = __jule_assign_result.__jule_result_arg2;
		});
	};
	if ((_27318_e2 >= 0LL)) {
		__jule_panic_s(jule::Str::lit("conv: not enough significant bits after mult128bitPow10", 55) + jule::Str("\nlocation: std/conv/ftoaryu.jule:303:3"));;
	};
	if ((_2792_q > 55LL)) {
		({
			jule::Bool ___jule_assign_arg = false;
			jule::Bool _1___jule_assign_arg = false;
			jule::Bool _2___jule_assign_arg = false;
			_2866_dl0 = ___jule_assign_arg;
			_2876_dc0 = _1___jule_assign_arg;
			_2886_du0 = _2___jule_assign_arg;
		});
	};
	if (((_2792_q < 0LL) && (_2792_q >= -24LL))) {
		if (_1ac590b97_divisibleByPow5(_2732_ml, (-(_2792_q)))) {
			_2866_dl0=true;
		};
		if (_1ac590b97_divisibleByPow5(_2736_mc, (-(_2792_q)))) {
			_2876_dc0=true;
		};
		if (_1ac590b97_divisibleByPow5(_27310_mu, (-(_2792_q)))) {
			_2886_du0=true;
		};
	};
	jule::U32 _3252_extra = static_cast<jule::U32>((-(_27318_e2)));;
	jule::U64 _3262_extraMask = static_cast<jule::U64>((({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _3252_extra; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); }) - 1LL));;
	jule::U64 _3286_fracl = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2836_dl; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2836_dl & _3262_extraMask);
		_2836_dl = ___jule_assign_arg;
		_3286_fracl = _1___jule_assign_arg;
	});
	jule::U64 _3306_fracc = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2846_dc; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2846_dc & _3262_extraMask);
		_2846_dc = ___jule_assign_arg;
		_3306_fracc = _1___jule_assign_arg;
	});
	jule::U64 _3326_fracu = static_cast<jule::U64>(0LLU);;
	({
		jule::U64 ___jule_assign_arg = ({ jule::U64 __jule_x = _2856_du; jule::U32 __jule_y = _3252_extra; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
		jule::U64 _1___jule_assign_arg = (_2856_du & _3262_extraMask);
		_2856_du = ___jule_assign_arg;
		_3326_fracu = _1___jule_assign_arg;
	});
	jule::Bool _3386_uok = ((!(_2886_du0)) || (_3326_fracu > 0LLU));;
	if ((_2886_du0 && (_3326_fracu == 0LLU))) {
		_3386_uok=((_26146_mant & 1LLU) == 0LLU);
	};
	if ((!(_3386_uok))) {
		(_2856_du)--;
	};
	jule::Bool _3476_cup = false;;
	if (_2876_dc0) {
		_3476_cup=((_3306_fracc > ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || ((_3306_fracc == ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) && ((_2846_dc & 1LLU) == 1LLU)));
	} else {
		_3476_cup=(({ jule::U64 __jule_x = _3306_fracc; jule::U32 __jule_y = (jule::U32)(_3252_extra - 1LLU); ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }) == 1LLU);
	};
	jule::Bool _3612_lok = ((_2866_dl0 && (_3286_fracl == 0LLU)) && ((_26146_mant & 1LLU) == 0LLU));;
	if ((!(_3612_lok))) {
		(_2836_dl)++;
	};
	jule::Bool _3662_c0 = (_2876_dc0 && (_3306_fracc == 0LLU));;
	_1ac5899d7_ryuDigits(_26125_d, _2836_dl, _2846_dc, _2856_du, _3662_c0, _3476_cup);
	(*(_26125_d))._field_dp-=_2792_q;
}



inline jule::I32 _1ac588b90_mulByLog2Log10(jule::I32 _37719_x) {
	return ((_37719_x * 78913LL) >> 18LL);;
}



inline jule::I32 _1ac588e59_mulByLog10Log2(jule::I32 _38719_x) {
	return ((_38719_x * 108853LL) >> 15LL);;
}



inline __jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int _1ac589388_computeBounds(jule::U64 _39518_mant, jule::I32 _39529_exp, _1ac579004_floatInfo* _3963_flt) {
	__jule_tuple_u64__jule_tuple_u64__jule_tuple_u64__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = 0;
	__jule_func_result.__jule_result_arg3 = 0;
	if (((_39518_mant != ({ jule::U64 __jule_x = 1LLU; jule::U32 __jule_y = (*(_3963_flt))._field_mantbits; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); })) || (_39529_exp == (((*(_3963_flt))._field_bias + 1LL) - static_cast<jule::I32>((*(_3963_flt))._field_mantbits))))) {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(2LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(2LL * _39518_mant) + 1LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 1LL);
	} else {
		({
			jule::U64 ___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) - 1LLU);
			jule::U64 _1___jule_assign_arg = (jule::U64)(4LL * _39518_mant);
			jule::U64 _2___jule_assign_arg = (jule::U64)((jule::U64)(4LL * _39518_mant) + 2LLU);
			__jule_func_result.__jule_result_arg0 = ___jule_assign_arg;
			__jule_func_result.__jule_result_arg1 = _1___jule_assign_arg;
			__jule_func_result.__jule_result_arg2 = _2___jule_assign_arg;
		});
		__jule_func_result.__jule_result_arg3=(_39529_exp - 2LL);
	};
	return __jule_func_result;;
}



inline void _1ac5899d7_ryuDigits(_1ac579b4d_decimalSlice* _40919_d, jule::U64 _40936_lower, jule::U64 _40948_central, jule::U64 _40962_upper, jule::Bool _40978_c0, jule::Bool _40992_cup) {
	jule::U32 _4106_lhi;
	jule::U32 _41011_llo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ac590e61_divmod1e9(_40936_lower);
		_4106_lhi = __jule_assign_result.__jule_result_arg0;
		_41011_llo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4112_chi;
	jule::U32 _4117_clo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ac590e61_divmod1e9(_40948_central);
		_4112_chi = __jule_assign_result.__jule_result_arg0;
		_4117_clo = __jule_assign_result.__jule_result_arg1;
	});
	jule::U32 _4122_uhi;
	jule::U32 _4127_ulo;
	({
		__jule_tuple_u32__jule_tuple_u32 __jule_assign_result = _1ac590e61_divmod1e9(_40962_upper);
		_4122_uhi = __jule_assign_result.__jule_result_arg0;
		_4127_ulo = __jule_assign_result.__jule_result_arg1;
	});
	if ((_4122_uhi == 0LLU)) {
		_1ac58eeb5_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, 8LL);
	} else if ((_4106_lhi < _4122_uhi)) {
		if ((_41011_llo != 0LLU)) {
			(_4106_lhi)++;
		};
		_40978_c0=(_40978_c0 && (_4117_clo == 0LLU));
		_40992_cup=((_4117_clo > 500000000LL) || ((_4117_clo == 500000000LL) && _40992_cup));
		_1ac58eeb5_ryuDigits32(_40919_d, _4106_lhi, _4112_chi, _4122_uhi, _40978_c0, _40992_cup, 8LL);
		(*(_40919_d))._field_dp+=9LL;
	} else {
		(*(_40919_d))._field_nd=0LL;
		jule::U32 _4287_n = static_cast<jule::U32>(9LLU);;
		jule::U32 _4297_v = _4112_chi;;
		while ((_4297_v > 0LLU)) {
			{
				jule::U32 _4314_v1;
				jule::U32 _4318_v2;
				({
					jule::U32 ___jule_assign_arg = (_4297_v / 10LLU);
					jule::U32 _1___jule_assign_arg = (_4297_v % 10LL);
					_4314_v1 = ___jule_assign_arg;
					_4318_v2 = _1___jule_assign_arg;
				});
				_4297_v=_4314_v1;
				(_4287_n)--;
				(*(_40919_d))._field_d[static_cast<jule::I32>(_4287_n)]=static_cast<jule::U8>((jule::U32)(_4318_v2 + '0'));
			}
		_iter_next_1c069a464:;
		}
		_iter_end_1c069a464:;;
		((*(_40919_d))._field_d).mut_slice(static_cast<jule::I32>(_4287_n));;
		(*(_40919_d))._field_nd=static_cast<jule::I32>((jule::U32)(9LL - _4287_n));
		_1ac58eeb5_ryuDigits32(_40919_d, _41011_llo, _4117_clo, _4127_ulo, _40978_c0, _40992_cup, ((*(_40919_d))._field_nd + 8LL));
	};
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[((*(_40919_d))._field_nd - 1LL)] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
		}
	_iter_next_1c069b09c:;
	}
	_iter_end_1c069b09c:;;
	while ((((*(_40919_d))._field_nd > 0LL) && ((*(_40919_d))._field_d[0LL] == '0'))) {
		{
			((*(_40919_d))._field_nd)--;
			((*(_40919_d))._field_dp)--;
			((*(_40919_d))._field_d).mut_slice(1LL);;
		}
	_iter_next_1c069cd4b:;
	}
	_iter_end_1c069cd4b:;;
}



inline void _1ac58eeb5_ryuDigits32(_1ac579b4d_decimalSlice* _45421_d, jule::U32 _45442_lower, jule::U32 _45458_central, jule::U32 _4556_upper, jule::Bool _45522_c0, jule::Bool _45536_cup, jule::I32 _45551_endindex) {
	if ((_4556_upper == 0LLU)) {
		(*(_45421_d))._field_dp=(_45551_endindex + 1LL);
		return;;
	};
	jule::I32 _4606_trimmed = 0LL;;
	jule::I32 _4636_cNextDigit = 0LL;;
	while ((_4556_upper > 0LLU)) {
		{
			jule::U32 _4703_l = ((jule::U32)(_45442_lower + 9LLU) / 10LLU);;
			jule::U32 _4717_c;
			jule::U32 _47114_cdigit;
			({
				jule::U32 ___jule_assign_arg = (_45458_central / 10LLU);
				jule::U32 _1___jule_assign_arg = (_45458_central % 10LL);
				_4717_c = ___jule_assign_arg;
				_47114_cdigit = _1___jule_assign_arg;
			});
			jule::U32 _4723_u = (_4556_upper / 10LLU);;
			if ((_4703_l > _4723_u)) {
				goto _iter_end_1c06a06de;
			};
			if (((_4703_l == (jule::U32)(_4717_c + 1LLU)) && (_4717_c < _4723_u))) {
				(_4717_c)++;
				_47114_cdigit=0LLU;
				_45536_cup=false;
			};
			(_4606_trimmed)++;
			_45522_c0=(_45522_c0 && (_4636_cNextDigit == 0LL));
			_4636_cNextDigit=static_cast<jule::I32>(_47114_cdigit);
			({
				jule::U32 ___jule_assign_arg = _4703_l;
				jule::U32 _1___jule_assign_arg = _4717_c;
				jule::U32 _2___jule_assign_arg = _4723_u;
				_45442_lower = ___jule_assign_arg;
				_45458_central = _1___jule_assign_arg;
				_4556_upper = _2___jule_assign_arg;
			});
		}
	_iter_next_1c06a06de:;
	}
	_iter_end_1c06a06de:;;
	if ((_4606_trimmed > 0LL)) {
		_45536_cup=(((_4636_cNextDigit > 5LL) || ((_4636_cNextDigit == 5LL) && (!(_45522_c0)))) || (((_4636_cNextDigit == 5LL) && _45522_c0) && ((_45458_central & 1LLU) == 1LLU)));
	};
	if (((_45458_central < _4556_upper) && _45536_cup)) {
		(_45458_central)++;
	};
	_45551_endindex-=_4606_trimmed;
	jule::U32 _5096_v = _45458_central;;
	jule::I32 _5106_n = _45551_endindex;;
	while ((_5106_n > (*(_45421_d))._field_nd)) {
		{
			jule::U32 _5123_v1;
			jule::U32 _5127_v2;
			({
				jule::U32 ___jule_assign_arg = (_5096_v / 100LLU);
				jule::U32 _1___jule_assign_arg = (_5096_v % 100LL);
				_5123_v1 = ___jule_assign_arg;
				_5127_v2 = _1___jule_assign_arg;
			});
			(*(_45421_d))._field_d[_5106_n]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(2LL * _5127_v2) + 1LLU)));
			(*(_45421_d))._field_d[(_5106_n - 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(2LL * _5127_v2)));
			_5106_n-=2LL;
			_5096_v=_5123_v1;
		}
	_iter_next_1c06a67a0:;
	}
	_iter_end_1c06a67a0:;;
	if ((_5106_n == (*(_45421_d))._field_nd)) {
		(*(_45421_d))._field_d[_5106_n]=static_cast<jule::U8>((jule::U32)(_5096_v + '0'));
	};
	(*(_45421_d))._field_nd=(_45551_endindex + 1LL);
	(*(_45421_d))._field_dp=((*(_45421_d))._field_nd + _4606_trimmed);
}



inline __jule_tuple_u32__jule_tuple_int__jule_tuple_bool _1ac5903e4_mult64bitPow10(jule::U32 _53419_m, jule::I32 _53431_e2, jule::I32 _53440_q) {
	__jule_tuple_u32__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_53440_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U32)(_53419_m << 6LLU);
		__jule_func_result.__jule_result_arg1 = (_53431_e2 - 6LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_53440_q < -348LL) || (347LL < _53440_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult64bitPow10: power of 10 is out of range", 49) + jule::Str("\nlocation: std/conv/ftoaryu.jule:541:3"));;
	};
	jule::U64 _5436_pow = _1ac5820d9_detailedPowsOfTen[(_53440_q - -348LL)][1LL];;
	if ((_53440_q < 0LL)) {
		_5436_pow+=1LLU;
	};
	jule::U64 _5482_hi;
	jule::U64 _5486_lo;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(static_cast<jule::U64>(_53419_m), _5436_pow);
		_5482_hi = __jule_assign_result.__jule_result_arg0;
		_5486_lo = __jule_assign_result.__jule_result_arg1;
	});
	_53431_e2+=((_1ac588e59_mulByLog10Log2(_53440_q) - 63LL) + 57LL);
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(((jule::U64)(_5482_hi << 7LLU) | (_5486_lo >> 57LLU)));
	__jule_func_result.__jule_result_arg1 = _53431_e2;
	__jule_func_result.__jule_result_arg2 = ((jule::U64)(_5486_lo << 7LLU) == 0LLU);
	return __jule_func_result;;
}



inline __jule_tuple_u64__jule_tuple_int__jule_tuple_bool _1ac590823_mult128bitPow10(jule::U64 _56220_m, jule::I32 _56232_e2, jule::I32 _56241_q) {
	__jule_tuple_u64__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	__jule_func_result.__jule_result_arg2 = false;
	if ((_56241_q == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (jule::U64)(_56220_m << 8LLU);
		__jule_func_result.__jule_result_arg1 = (_56232_e2 - 8LL);
		__jule_func_result.__jule_result_arg2 = true;
		return __jule_func_result;;
	};
	if (((_56241_q < -348LL) || (347LL < _56241_q))) {
		__jule_panic_s(jule::Str::lit("conv: mult128bitPow10: power of 10 is out of range", 50) + jule::Str("\nlocation: std/conv/ftoaryu.jule:569:3"));;
	};
	jule::Array<jule::U64,2> _5716_pow = _1ac5820d9_detailedPowsOfTen[(_56241_q - -348LL)];;
	if ((_56241_q < 0LL)) {
		_5716_pow[0LL]+=1LLU;
	};
	_56232_e2+=((_1ac588e59_mulByLog10Log2(_56241_q) - 127LL) + 119LL);
	jule::U64 _5792_l1;
	jule::U64 _5796_l0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(_56220_m, _5716_pow[0LL]);
		_5792_l1 = __jule_assign_result.__jule_result_arg0;
		_5796_l0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5806_h1;
	jule::U64 _58010_h0;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(_56220_m, _5716_pow[1LL]);
		_5806_h1 = __jule_assign_result.__jule_result_arg0;
		_58010_h0 = __jule_assign_result.__jule_result_arg1;
	});
	jule::U64 _5812_mid;
	jule::U64 _5817_carry;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978c748_Add64(_5792_l1, _58010_h0, 0LLU);
		_5812_mid = __jule_assign_result.__jule_result_arg0;
		_5817_carry = __jule_assign_result.__jule_result_arg1;
	});
	_5806_h1+=_5817_carry;
	__jule_func_result.__jule_result_arg0 = ((jule::U64)(_5806_h1 << 9LLU) | (_5812_mid >> 55LLU));
	__jule_func_result.__jule_result_arg1 = _56232_e2;
	__jule_func_result.__jule_result_arg2 = (((jule::U64)(_5812_mid << 9LLU) == 0LLU) && (_5796_l0 == 0LLU));
	return __jule_func_result;;
}



inline jule::Bool _1ac590b97_divisibleByPow5(jule::U64 _58624_m, jule::I32 _58632_k) {
	if ((_58624_m == 0LLU)) {
		return true;;
	};
	jule::I32 _5906_i = 0LL;;
	for (; (_5906_i < _58632_k); (_5906_i)++) {
		{
			if (((_58624_m % 5LL) != 0LLU)) {
				return false;;
			};
			_58624_m=(_58624_m / 5LLU);
		}
	_iter_next_1c06b4824:;
	}
	_iter_end_1c06b4824:;;
	return true;;
}



inline __jule_tuple_u32__jule_tuple_u32 _1ac590e61_divmod1e9(jule::U64 _60214_x) {
	__jule_tuple_u32__jule_tuple_u32 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = 0;
	;
	jule::U64 _6072_hi;
	({
		__jule_tuple_u64__jule_tuple_u64 __jule_assign_result = _1a978e052_Mul64(({ jule::U64 __jule_x = _60214_x; jule::U64 __jule_y = 1LLU; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }), 9903520314283042200LLU);
		_6072_hi = __jule_assign_result.__jule_result_arg0;
	});
	jule::U64 _6082_q = (_6072_hi >> 28LLU);;
	__jule_func_result.__jule_result_arg0 = static_cast<jule::U32>(_6082_q);
	__jule_func_result.__jule_result_arg1 = static_cast<jule::U32>((jule::U64)(_60214_x - (jule::U64)(_6082_q * 1000000000LL)));
	return __jule_func_result;;
}



inline void _1ac593d98_trim(_1ac59254a_decimal* _27414_a) {
	while ((((*(_27414_a))._field_nd > 0LL) && ((*(_27414_a))._field_d[((*(_27414_a))._field_nd - 1LL)] == '0'))) {
		{
			((*(_27414_a))._field_nd)--;
		}
	_iter_next_1c06b810d:;
	}
	_iter_end_1c06b810d:;;
	if (((*(_27414_a))._field_nd == 0LL)) {
		(*(_27414_a))._field_dp=0LL;
	};
}



inline void _1ac594184_rightShift(_1ac59254a_decimal* _28420_a, jule::U32 _28432_k) {
	jule::I32 _2856_r = 0LL;;
	jule::I32 _2866_w = 0LL;;
	jule::U32 _2896_n = static_cast<jule::U32>(0LLU);;
	for (; (({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU); (_2856_r)++) {
		{
			if ((_2856_r >= (*(_28420_a))._field_nd)) {
				if ((_2896_n == 0LLU)) {
					(*(_28420_a))._field_nd=0LL;
					return;;
				};
				while ((({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); }) == 0LLU)) {
					{
						_2896_n=(jule::U32)(_2896_n * 10LLU);
						(_2856_r)++;
					}
				_iter_next_1c06bae8a:;
				}
				_iter_end_1c06bae8a:;;
				goto _iter_end_1c06b98a1;
			};
			jule::U32 _3033_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3033_c) - '0');
		}
	_iter_next_1c06b98a1:;
	}
	_iter_end_1c06b98a1:;;
	(*(_28420_a))._field_dp-=(_2856_r - 1LL);
	jule::U32 _3082_mask = (jule::U32)(static_cast<jule::U32>(({ jule::I32 __jule_x = 1LL; jule::U32 __jule_y = _28432_k; ((jule::I32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); })) - 1LLU);;
	for (; (_2856_r < (*(_28420_a))._field_nd); (_2856_r)++) {
		{
			jule::U32 _3123_c = static_cast<jule::U32>((*(_28420_a))._field_d[_2856_r]);;
			jule::U32 _3133_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3133_dig + '0'));
			(_2866_w)++;
			_2896_n=(jule::U32)((jule::U32)((jule::U32)(_2896_n * 10LLU) + _3123_c) - '0');
		}
	_iter_next_1c06bc387:;
	}
	_iter_end_1c06bc387:;;
	while ((_2896_n > 0LLU)) {
		{
			jule::U32 _3223_dig = ({ jule::U32 __jule_x = _2896_n; jule::U32 __jule_y = _28432_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x >> __jule_y)); });;
			_2896_n&=_3082_mask;
			if ((_2866_w < 800LL)) {
				(*(_28420_a))._field_d[_2866_w]=static_cast<jule::U8>((jule::U32)(_3223_dig + '0'));
				(_2866_w)++;
			} else if ((_3223_dig > 0LLU)) {
				(*(_28420_a))._field_trunc=true;
			};
			_2896_n=(jule::U32)(_2896_n * 10LLU);
		}
	_iter_next_1c06be730:;
	}
	_iter_end_1c06be730:;;
	(*(_28420_a))._field_nd=_2866_w;
	_1ac593d98_trim(_28420_a);
}



inline jule::Bool _1ac59463a_prefixIsLessThan(jule::Array<jule::U8,800> _33821_b, jule::I32 _33835_end, jule::Str* _33846_s) {
	jule::I32 _3396_i = 0LL;;
	for (; (_3396_i < (*(_33846_s)).len()); (_3396_i)++) {
		{
			if ((_3396_i >= _33835_end)) {
				return true;;
			};
			if ((_33821_b[_3396_i] != (*(_33846_s))[_3396_i])) {
				return (_33821_b[_3396_i] < (*(_33846_s))[_3396_i]);;
			};
		}
	_iter_next_1c06c2469:;
	}
	_iter_end_1c06c2469:;;
	return false;;
}



inline void _1ac5948e3_leftShift(_1ac59254a_decimal* _35219_a, jule::U32 _35231_k) {
	jule::I32 _3536_delta = _1ac591e62_leftCheats[static_cast<jule::I32>(_35231_k)]._field_delta;;
	if (_1ac59463a_prefixIsLessThan((*(_35219_a))._field_d, (*(_35219_a))._field_nd, &((*((&(_1ac591e62_leftCheats[static_cast<jule::I32>(_35231_k)]._field_cutoff))))))) {
		(_3536_delta)--;
	};
	jule::I32 _3586_r = (*(_35219_a))._field_nd;;
	jule::I32 _3596_w = ((*(_35219_a))._field_nd + _3536_delta);;
	jule::U32 _3626_n = static_cast<jule::U32>(0LLU);;
	(_3586_r)--;
	for (; (_3586_r >= 0LL); (_3586_r)--) {
		{
			_3626_n+=({ jule::U32 __jule_x = (jule::U32)(static_cast<jule::U32>((*(_35219_a))._field_d[_3586_r]) - '0'); jule::U32 __jule_y = _35231_k; ((jule::U32)(__jule_y >= 32 ? 0 : __jule_x << __jule_y)); });
			jule::U32 _3663_quo = (_3626_n / 10LLU);;
			jule::U32 _3673_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3663_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3673_rem + '0'));
			} else if ((_3673_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3663_quo;
		}
	_iter_next_1c06c5989:;
	}
	_iter_end_1c06c5989:;;
	while ((_3626_n > 0LLU)) {
		{
			jule::U32 _3793_quo = (_3626_n / 10LLU);;
			jule::U32 _3803_rem = (jule::U32)(_3626_n - (jule::U32)(10LLU * _3793_quo));;
			(_3596_w)--;
			if ((_3596_w < 800LL)) {
				(*(_35219_a))._field_d[_3596_w]=static_cast<jule::U8>((jule::U32)(_3803_rem + '0'));
			} else if ((_3803_rem != 0LLU)) {
				(*(_35219_a))._field_trunc=true;
			};
			_3626_n=_3793_quo;
		}
	_iter_next_1c06c7dba:;
	}
	_iter_end_1c06c7dba:;;
	(*(_35219_a))._field_nd+=_3536_delta;
	if (((*(_35219_a))._field_nd >= 800LL)) {
		(*(_35219_a))._field_nd=800LL;
	};
	(*(_35219_a))._field_dp+=_3536_delta;
	_1ac593d98_trim(_35219_a);
}



inline jule::Bool _1ac594c67_shouldRoundUp(_1ac59254a_decimal* _39919_a, jule::I32 _39931_nd) {
	if (((_39931_nd < 0LL) || (_39931_nd >= (*(_39919_a))._field_nd))) {
		return false;;
	};
	if ((((*(_39919_a))._field_d[_39931_nd] == '5') && ((_39931_nd + 1LL) == (*(_39919_a))._field_nd))) {
		if ((*(_39919_a))._field_trunc) {
			return true;;
		};
		return ((_39931_nd > 0LL) && (((jule::U8)((*(_39919_a))._field_d[(_39931_nd - 1LL)] - '0') & 1LL) != 0LLU));;
	};
	return ((*(_39919_a))._field_d[_39931_nd] >= '5');;
}



inline jule::Str _1ac59643e_FmtUint(jule::U64 _6112_i, jule::I32 _6120_base) {
	if (((_6112_i < 100LLU) && (_6120_base == 10LL))) {
		return _1ac596e12_small(static_cast<jule::I32>(_6112_i));;
	};
	jule::Str _655_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ac59773c_fmtBits(nullptr, _6112_i, _6120_base, false, false);
		_655_s = __jule_assign_result.__jule_result_arg1;
	});
	return _655_s;;
}



inline jule::Str _1ac596807_FmtInt(jule::I64 _7211_i, jule::I32 _7219_base) {
	if ((((0LL <= _7211_i) && (_7211_i < 100LL)) && (_7219_base == 10LL))) {
		return _1ac596e12_small(static_cast<jule::I32>(_7211_i));;
	};
	jule::Str _765_s;
	({
		__jule_tuple_su8__jule_tuple_str __jule_assign_result = _1ac59773c_fmtBits(nullptr, static_cast<jule::U64>(_7211_i), _7219_base, (_7211_i < 0LL), false);
		_765_s = __jule_assign_result.__jule_result_arg1;
	});
	return _765_s;;
}



inline jule::Str _1ac596ac1_Itoa(jule::I32 _819_i) {
	return _1ac596807_FmtInt(static_cast<jule::I64>(_819_i), 10LL);;
}



inline jule::Str _1ac596e12_small(jule::I32 _8610_i) {
	if ((_8610_i < 10LL)) {
		return __jule_strFromByte(static_cast<jule::U8>(('0' + _8610_i)));;
	};
	jule::Slice<jule::U8> _906_buf = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(3LL, 3LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	_906_buf[0LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, (_8610_i << 1LL));
	_906_buf[1LL]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, ((_8610_i << 1LL) + 1LL));
	return _1c3061212_StrFromBytes(_906_buf.slice(0LL, 2LL));;
}



inline jule::Bool _1ac597198_isPowerOfTwo(jule::I32 _9617_x) {
	return ((_9617_x & (_9617_x - 1LL)) == 0LL);;
}



inline __jule_tuple_su8__jule_tuple_str _1ac59773c_fmtBits(jule::Slice<jule::U8> _10516_dst, jule::U64 _10533_u, jule::I32 _10541_base, jule::Bool _10552_neg, jule::Bool _10563_append_) {
	__jule_tuple_su8__jule_tuple_str __jule_func_result;
	if (((_10541_base < 2LL) || (_10541_base > 36LL))) {
		__jule_panic_s(jule::Str::lit("conv: illegal base", 18) + jule::Str("\nlocation: std/conv/itoa.jule:107:3"));;
	};
	jule::Slice<jule::U8> _1116_a = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(65LL, 65LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _1126_i = _1116_a.len();;
	if (_10552_neg) {
		_10533_u=(-(_10533_u));
	};
	{
		
		if ((_10541_base == 10LL)) {
			_case_begin_1c070deab:;
			{
				{
					while ((_10533_u >= 1000000000LL)) {
						{
							jule::U64 _1325_q = (_10533_u / 1000000000LL);;
							jule::U32 _1339_us = static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1325_q * 1000000000LL)));;
							jule::I32 _1349_j = 4LL;;
							for (; (_1349_j > 0LL); (_1349_j)--) {
								{
									jule::U32 _1366_is = (jule::U32)(({ jule::U32 __jule_x = _1339_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
									_1339_us=(_1339_us / 100LLU);
									_1126_i-=2LL;
									_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1366_is + 1LLU)));
									_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1366_is));
								}
							_iter_next_1c0711ad5:;
							}
							_iter_end_1c0711ad5:;;
							(_1126_i)--;
							_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)((jule::U32)(_1339_us << 1LLU) + 1LLU)));
							_10533_u=_1325_q;
						}
					_iter_next_1c071119a:;
					}
					_iter_end_1c071119a:;;
				};
				jule::U32 _1547_us = static_cast<jule::U32>(_10533_u);;
				while ((_1547_us >= 100LLU)) {
					{
						jule::U32 _1564_is = (jule::U32)(({ jule::U32 __jule_x = _1547_us; jule::U32 __jule_y = 100LL; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U32)(__jule_x % __jule_y)); }) << 1LLU);;
						_1547_us=(_1547_us / 100LLU);
						_1126_i-=2LL;
						_1116_a[(_1126_i + 1LL)]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1564_is + 1LLU)));
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1564_is));
					}
				_iter_next_1c0710e8b:;
				}
				_iter_end_1c0710e8b:;;
				jule::U32 _1643_is = (jule::U32)(_1547_us << 1LLU);;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>((jule::U32)(_1643_is + 1LLU)));
				if ((_1547_us >= 10LLU)) {
					(_1126_i)--;
					_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899"), 200, static_cast<jule::I32>(_1643_is));
				};
			}
		}
		else if (_1ac597198_isPowerOfTwo(_10541_base)) {
			_case_begin_1c070e3c9:;
			{
				jule::U32 _1793_shift = (static_cast<jule::U32>(_1a978506a_TrailingZeros(static_cast<jule::U32>(_10541_base))) & 7LLU);;
				jule::U64 _1803_b = static_cast<jule::U64>(_10541_base);;
				jule::U32 _1813_m = (jule::U32)(static_cast<jule::U32>(_10541_base) - 1LLU);;
				while ((_10533_u >= _1803_b)) {
					{
						(_1126_i)--;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>((static_cast<jule::U32>(_10533_u) & _1813_m)));
						_10533_u = ({ jule::U64 __jule_x = _10533_u; jule::U32 __jule_y = _1793_shift; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); });
					}
				_iter_next_1c0718a43:;
				}
				_iter_end_1c0718a43:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		else {
			_case_begin_1c070d43e:;
			{
				jule::U64 _1923_b = static_cast<jule::U64>(_10541_base);;
				while ((_10533_u >= _1923_b)) {
					{
						(_1126_i)--;
						jule::U64 _1984_q = ({ jule::U64 __jule_x = _10533_u; jule::U64 __jule_y = _1923_b; if (__jule_y == 0) __jule_panic_s("runtime: divide by zero"); ((jule::U64)(__jule_x / __jule_y)); });;
						_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>((jule::U64)(_10533_u - (jule::U64)(_1984_q * _1923_b)))));
						_10533_u=_1984_q;
					}
				_iter_next_1c070e1a9:;
				}
				_iter_end_1c070e1a9:;;
				(_1126_i)--;
				_1116_a[_1126_i]=jule::Str::at(reinterpret_cast<const jule::U8*>("0123456789abcdefghijklmnopqrstuvwxyz"), 36, static_cast<jule::I32>(static_cast<jule::U32>(_10533_u)));
			}
		}
		_match_end_1c070d72a:;
	};
	if (_10552_neg) {
		(_1126_i)--;
		_1116_a[_1126_i]='-';
	};
	if (_10563_append_) {
		__jule_func_result.__jule_result_arg0=jule::append(_10516_dst,_1116_a.slice(_1126_i));
		return __jule_func_result;;
	};
	jule::I32 _2172_n = jule::copy(_1116_a, _1116_a.slice(_1126_i));;
	__jule_func_result.__jule_result_arg1=_1c3061212_StrFromBytes(_1116_a.slice(0LL, _2172_n));
	return __jule_func_result;;
}



inline void _1ac598e47_Throw(jule::Str _910_msg) {
	jule::println(_1be2ec53a_toStr(_910_msg));
	_1a9cd29e6_Exit(1LL);
}



inline jule::Bool _1bc247751_IsUnaryOp(jule::U32 _33314_id) {
	{
		auto expr = &(_1bc199131_UnaryOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c077771c:;
		if (it != expr_end) {
			jule::U32 *_3349_op = it;
			{
				if ((_33314_id == (*(_3349_op)))) {
					return true;;
				};
			}
			_iter_next_1c077771c:;
			++it;
			goto _iter_begin_1c077771c;
		}
		_iter_end_1c077771c:;
	};
	return false;;
}



inline jule::Bool _1bc247a5e_IsBinOp(jule::U32 _34312_id) {
	{
		auto expr = &(_1bc19940b_BinOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c07784cb:;
		if (it != expr_end) {
			jule::U32 *_3449_op = it;
			{
				if ((_34312_id == (*(_3449_op)))) {
					return true;;
				};
			}
			_iter_next_1c07784cb:;
			++it;
			goto _iter_begin_1c07784cb;
		}
		_iter_end_1c07784cb:;
	};
	return false;;
}



inline jule::Bool _1bc248169_IsStr(jule::Str _36310_k) {
	return (!(_36310_k).empty() && ((_36310_k[0LL] == '\"') || _1bc248400_IsRawStr(_36310_k)));;
}



inline jule::Bool _1bc248400_IsRawStr(jule::Str _36613_k) {
	return (!(_36613_k).empty() && (_36613_k[0LL] == '`'));;
}



inline jule::Bool _1bc2486b9_IsRune(jule::Str _37011_k) {
	return (!(_37011_k).empty() && (_37011_k[0LL] == '\''));;
}



inline jule::Bool _1bc24909e_IsFloat(jule::Str _37912_k) {
	if (_1abb2d9c7_HasPrefix(_37912_k, jule::Str::lit("0x", 2))) {
		return _1abb33d84_ContainsAny(_37912_k, jule::Str::lit(".pP", 3));;
	};
	return _1abb33d84_ContainsAny(_37912_k, jule::Str::lit(".eE", 3));;
}



inline jule::Bool _1bc249368_IsNum(jule::Str _38710_k) {
	if ((_38710_k).empty()) {
		return false;;
	};
	jule::U8 _3922_b = _38710_k[0LL];;
	return ((_3922_b == '.') || (('0' <= _3922_b) && (_3922_b <= '9')));;
}



inline jule::Bool _1bc2498eb_IsIgnoreIdent(jule::Str _40218_ident) {
	return (_40218_ident == static_cast<jule::Str>(jule::Str::lit("_", 1)));;
}



inline jule::Bool _1bc249bb5_IsAnonIdent(jule::Str _40516_ident) {
	return (_40516_ident == static_cast<jule::Str>(jule::Str::lit("<anonymous>", 11)));;
}



inline jule::Bool _1bc24a248_IsSpace(jule::I32 _41812_r) {
	{
		auto expr = &(_1bc198e22_Spaces);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0780abb:;
		if (it != expr_end) {
			jule::I32 *_4199_cr = it;
			{
				if ((_41812_r == (*(_4199_cr)))) {
					return true;;
				};
			}
			_iter_next_1c0780abb:;
			++it;
			goto _iter_begin_1c0780abb;
		}
		_iter_end_1c0780abb:;
	};
	return false;;
}



inline jule::Bool _1bc24a743_IsLetter(jule::I32 _42813_r) {
	return _1a98e9c4b_IsLetter(_42813_r);;
}



inline jule::Bool _1bc24abb6_IsKeyword(jule::Str _44814_s) {
	{
		auto expr = &(_1bc2502c5_keywords);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c07818e1:;
		if (it != expr_end) {
			_1bc24edda_kindPair *_4499_op = it;
			{
				if ((_44814_s == (*(_4499_op))._field_kind)) {
					return true;;
				};
			}
			_iter_next_1c07818e1:;
			++it;
			goto _iter_begin_1c07818e1;
		}
		_iter_end_1c07818e1:;
	};
	return false;;
}



inline jule::Bool _1bc24ae80_IsDecimal(jule::I32 _45814_r) {
	return (('0' <= _45814_r) && (_45814_r <= '9'));;
}



inline jule::Bool _1bc24b249_IsBinary(jule::I32 _46113_r) {
	return ((_46113_r == '0') || (_46113_r == '1'));;
}



inline jule::Bool _1bc24b513_IsOctal(jule::I32 _46412_r) {
	return (('0' <= _46412_r) && (_46412_r <= '7'));;
}



inline jule::Bool _1bc24b7cc_IsHex(jule::I32 _46710_r) {
	{
		
		if ((('0' <= _46710_r) && (_46710_r <= '9'))) {
			_case_begin_1c0784a9d:;
			{
				return true;;
			}
		}
		else if ((('a' <= _46710_r) && (_46710_r <= 'f'))) {
			_case_begin_1c0784b47:;
			{
				return true;;
			}
		}
		else if ((('A' <= _46710_r) && (_46710_r <= 'F'))) {
			_case_begin_1c0784bbe:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c0783591:;
			{
				return false;;
			}
		}
		_match_end_1c07843c7:;
	};
}



inline jule::Bool _1bc24ba96_IsAssign(jule::U32 _48213_id) {
	return ((((((((_48213_id == static_cast<jule::U32>(1LLU)) || (_48213_id == static_cast<jule::U32>(27LLU))) || (_48213_id == static_cast<jule::U32>(30LLU))) || (_48213_id == static_cast<jule::U32>(32LLU))) || (_48213_id == static_cast<jule::U32>(24LLU))) || (_48213_id == static_cast<jule::U32>(74LLU))) || (_48213_id == static_cast<jule::U32>(62LLU))) || (_48213_id == static_cast<jule::U32>(65LLU)));;
}



inline jule::Bool _1bc24bd60_IsPostfixOp(jule::U32 _49416_id) {
	{
		auto expr = &(_1bc2414e7_PostfixOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0787e03:;
		if (it != expr_end) {
			jule::U32 *_4959_op = it;
			{
				if ((_49416_id == (*(_4959_op)))) {
					return true;;
				};
			}
			_iter_next_1c0787e03:;
			++it;
			goto _iter_begin_1c0787e03;
		}
		_iter_end_1c0787e03:;
	};
	return false;;
}



inline jule::Bool _1bc24c129_IsAssignOp(jule::U32 _50415_id) {
	if (_1bc24bd60_IsPostfixOp(_50415_id)) {
		return true;;
	};
	{
		auto expr = &(_1bc2417d3_AssignOps);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0788e04:;
		if (it != expr_end) {
			jule::U32 *_5089_op = it;
			{
				if ((_50415_id == (*(_5089_op)))) {
					return true;;
				};
			}
			_iter_next_1c0788e04:;
			++it;
			goto _iter_begin_1c0788e04;
		}
		_iter_end_1c0788e04:;
	};
	return false;;
}



inline _1a9575ca1_Log _1bc250b44_makeErr(jule::I32 _10112_row, jule::I32 _10122_col, jule::Ptr<_1bc24cab9_Fileset>* _10133_f, jule::Str _10146_fmt, jule::Slice<jule::Any> _10166_args) {
	return _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_10112_row, ._field_Column=_10122_col, ._field_Path=(*((*(_10133_f))))._field_Path, ._field_Text=_1a9576213_Logf(_10146_fmt, _10166_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Bool _1bc25100c_bytesHasPrefix(jule::Slice<jule::U8>* _11120_bytes, jule::Str _11135_prefix) {
	if (((*(_11120_bytes)).len() < _11135_prefix.len())) {
		return false;;
	};
	{
		auto expr = &(_11135_prefix);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0799398:;
		if (it != expr_end) {
			jule::I32 _1156_i = it - expr->begin();
			{
				if (((*(_11120_bytes))[_1156_i] != _11135_prefix[_1156_i])) {
					return false;;
				};
			}
			_iter_next_1c0799398:;
			++it;
			_1156_i++;
			goto _iter_begin_1c0799398;
		}
		_iter_end_1c0799398:;
	};
	return true;;
}



inline jule::Str _1bc251381_floatFmtE(jule::Slice<jule::U8>* _12315_txt, jule::I32 _12332_i) {
	jule::Str __jule_func_result;
	(_12332_i)++;
	if ((_12332_i >= (*(_12315_txt)).len())) {
		return __jule_func_result;;
	};
	jule::U8 _1296_b = (*(_12315_txt))[_12332_i];;
	if ((_1296_b == '_')) {
		return __jule_func_result;;
	};
	if (((_1296_b == '+') || (_1296_b == '-'))) {
		(_12332_i)++;
		if ((_12332_i >= (*(_12315_txt)).len())) {
			return __jule_func_result;;
		};
		if (((*(_12315_txt))[_12332_i] == '_')) {
			return __jule_func_result;;
		};
	};
	jule::I32 _1432_first = _12332_i;;
	for (; (_12332_i < (*(_12315_txt)).len()); (_12332_i)++) {
		{
			_1296_b=(*(_12315_txt))[_12332_i];
			if (((_1296_b != '_') && (!(_1bc24ae80_IsDecimal(static_cast<jule::I32>(_1296_b)))))) {
				goto _iter_end_1c079c6a9;
			};
		}
	_iter_next_1c079c6a9:;
	}
	_iter_end_1c079c6a9:;;
	if ((_12332_i == _1432_first)) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_12315_txt)).slice(0LL, _12332_i));
	return __jule_func_result;;
}



inline jule::Str _1bc251749_floatFmtP(jule::Slice<jule::U8>* _15715_txt, jule::I32 _15728_i) {
	return _1bc251381_floatFmtE(_15715_txt, _15728_i);;
}



inline jule::Str _1bc251abd_floatFmtDotnp(jule::Slice<jule::U8>* _16119_txt, jule::I32 _16136_i) {
	if (((*(_16119_txt))[_16136_i] != '.')) {
		return jule::Str();;
	};
	(_16136_i)++;
	_julec_label_1c079e821:;
	for (; (_16136_i < (*(_16119_txt)).len()); (_16136_i)++) {
		{
			jule::U8 _1693_b = (*(_16119_txt))[_16136_i];;
			{
				
				if ((_1693_b == '_') || _1bc24ae80_IsDecimal(static_cast<jule::I32>(_1693_b))) {
					_case_begin_1c07a0316:;
					{
						goto _iter_next_1c079dd4d;
					}
				}
				else if (_1bc25344e_isFloatFmtP(_1693_b, _16136_i)) {
					_case_begin_1c07a03b0:;
					{
						return _1bc251749_floatFmtP(_16119_txt, _16136_i);;
					}
				}
				else {
					_case_begin_1c07a028e:;
					{
						goto _iter_end_1c079dd4d;
					}
				}
				_match_end_1c07a0228:;
			};
		}
	_iter_next_1c079dd4d:;
	}
	_iter_end_1c079dd4d:;;
	return jule::Str();;
}



inline jule::Str _1bc251e42_floatFmtDotfp(jule::Slice<jule::U8>* _18219_txt, jule::I32 _18236_i) {
	_18236_i+=2LL;
	return _1bc251381_floatFmtE(_18219_txt, _18236_i);;
}



inline jule::Str _1bc2522b6_floatFmtDotp(jule::Slice<jule::U8>* _18718_txt, jule::I32 _18735_i) {
	(_18735_i)++;
	return _1bc251381_floatFmtE(_18718_txt, _18735_i);;
}



inline jule::Str _1bc25274a_floatNum(jule::Slice<jule::U8>* _19214_txt, jule::I32 _19231_i) {
	jule::Str __jule_func_result;
	(_19231_i)++;
	if ((_19231_i >= (*(_19214_txt)).len())) {
		__jule_func_result = _1c3061212_StrFromBytes((*(_19214_txt)));
		return __jule_func_result;;
	};
	if (((*(_19214_txt))[_19231_i] == '_')) {
		(_19231_i)--;
		__jule_func_result = _1c3061212_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
		return __jule_func_result;;
	};
	for (; (_19231_i < (*(_19214_txt)).len()); (_19231_i)++) {
		{
			jule::U8 _2023_b = (*(_19214_txt))[_19231_i];;
			if (((_19231_i > 1LL) && ((_2023_b == 'e') || (_2023_b == 'E')))) {
				__jule_func_result = _1bc251381_floatFmtE(_19214_txt, _19231_i);
				return __jule_func_result;;
			};
			if (((_2023_b != '_') && (!(_1bc24ae80_IsDecimal(static_cast<jule::I32>(_2023_b)))))) {
				goto _iter_end_1c07a3061;
			};
		}
	_iter_next_1c07a3061:;
	}
	_iter_end_1c07a3061:;;
	if ((_19231_i == 1LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_19214_txt)).slice(0LL, _19231_i));
	return __jule_func_result;;
}



inline jule::Str _1bc25298c_commonNum(jule::Slice<jule::U8>* _21715_txt) {
	jule::Str __jule_func_result;
	jule::I32 _2186_i = 0LL;;
	_julec_label_1c07a52d8:;
	for (; (_2186_i < (*(_21715_txt)).len()); (_2186_i)++) {
		{
			jule::U8 _2213_b = (*(_21715_txt))[_2186_i];;
			{
				
				if ((_2213_b == '.')) {
					_case_begin_1c07a6053:;
					{
						__jule_func_result = _1bc25274a_floatNum(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((_2213_b == '_')) {
					_case_begin_1c07a60ec:;
					{
						goto _iter_next_1c07a542b;
					}
				}
				else if (_1bc2530ca_isFloatFmtE(_2213_b, _2186_i)) {
					_case_begin_1c07a6163:;
					{
						__jule_func_result = _1bc251381_floatFmtE(_21715_txt, _2186_i);
						return __jule_func_result;;
					}
				}
				else if ((!(_1bc24ae80_IsDecimal(static_cast<jule::I32>(_2213_b))))) {
					_case_begin_1c07a61c9:;
					{
						goto _iter_end_1c07a542b;
					}
				}
				_match_end_1c07a5e76:;
			};
		}
	_iter_next_1c07a542b:;
	}
	_iter_end_1c07a542b:;;
	if ((_2186_i == 0LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_21715_txt)).slice(0LL, _2186_i));
	return __jule_func_result;;
}



inline jule::Str _1bc252c56_binaryNum(jule::Slice<jule::U8>* _24015_txt) {
	jule::Str __jule_func_result;
	if ((!(_1bc25100c_bytesHasPrefix(_24015_txt, jule::Str::lit("0b", 2))))) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_24015_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _2496_i = 2LL;;
	for (; (_2496_i < (*(_24015_txt)).len()); (_2496_i)++) {
		{
			if ((((*(_24015_txt))[_2496_i] != '_') && (!(_1bc24b249_IsBinary(static_cast<jule::I32>((*(_24015_txt))[_2496_i])))))) {
				goto _iter_end_1c07a8a06;
			};
		}
	_iter_next_1c07a8a06:;
	}
	_iter_end_1c07a8a06:;;
	if ((_2496_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_24015_txt)).slice(0LL, _2496_i));
	return __jule_func_result;;
}



inline jule::Bool _1bc2530ca_isFloatFmtE(jule::U8 _26216_b, jule::I32 _26225_i) {
	return ((_26225_i > 0LL) && ((_26216_b == 'e') || (_26216_b == 'E')));;
}



inline jule::Bool _1bc25344e_isFloatFmtP(jule::U8 _26616_b, jule::I32 _26625_i) {
	return ((_26625_i > 0LL) && ((_26616_b == 'p') || (_26616_b == 'P')));;
}



inline jule::Bool _1bc2537c3_isFloatFmtDotnp(jule::Slice<jule::U8>* _27021_txt, jule::I32 _27038_i) {
	if (((*(_27021_txt))[_27038_i] != '.')) {
		return false;;
	};
	(_27038_i)++;
	_julec_label_1c07ab641:;
	for (; (_27038_i < (*(_27021_txt)).len()); (_27038_i)++) {
		{
			jule::U8 _2773_b = (*(_27021_txt))[_27038_i];;
			{
				
				if ((_2773_b == '_') || _1bc24ae80_IsDecimal(static_cast<jule::I32>(_2773_b))) {
					_case_begin_1c07ac6a8:;
					{
						goto _iter_next_1c07ab4dc;
					}
				}
				else if (_1bc25344e_isFloatFmtP(_2773_b, _27038_i)) {
					_case_begin_1c07ac752:;
					{
						return true;;
					}
				}
				else {
					_case_begin_1c07ac631:;
					{
						goto _iter_end_1c07ab4dc;
					}
				}
				_match_end_1c07ac5ba:;
			};
		}
	_iter_next_1c07ab4dc:;
	}
	_iter_end_1c07ab4dc:;;
	return false;;
}



inline jule::Bool _1bc253b47_isFloatFmtDotp(jule::Slice<jule::U8>* _29120_txt, jule::I32 _29133_i) {
	{
		
		if (((*(_29120_txt)).len() < 3LL)) {
			_case_begin_1c07ad7db:;
			{
				goto _case_begin_1c07abe05;
			}
		}
		else if (((*(_29120_txt))[_29133_i] != '.')) {
			_case_begin_1c07abe05:;
			{
				goto _case_begin_1c07ad874;
			}
		}
		else if ((((*(_29120_txt))[(_29133_i + 1LL)] != 'p') && ((*(_29120_txt))[(_29133_i + 1LL)] != 'P'))) {
			_case_begin_1c07ad874:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c07abd5b:;
			{
				return true;;
			}
		}
		_match_end_1c07abc7e:;
	};
}



inline jule::Bool _1bc253ebb_isFloatFmtDotfp(jule::Slice<jule::U8>* _30421_txt, jule::I32 _30434_i) {
	{
		
		if (((*(_30421_txt)).len() < 4LL)) {
			_case_begin_1c07b0414:;
			{
				goto _case_begin_1c07b047a;
			}
		}
		else if (((*(_30421_txt))[_30434_i] != '.')) {
			_case_begin_1c07b047a:;
			{
				goto _case_begin_1c07b04e1;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 1LL)] != 'f') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'F'))) {
			_case_begin_1c07b04e1:;
			{
				goto _case_begin_1c07b0568;
			}
		}
		else if ((((*(_30421_txt))[(_30434_i + 2LL)] != 'p') && ((*(_30421_txt))[(_30434_i + 1LL)] != 'P'))) {
			_case_begin_1c07b0568:;
			{
				return false;;
			}
		}
		else {
			_case_begin_1c07b0348:;
			{
				return true;;
			}
		}
		_match_end_1c07aede7:;
	};
}



inline jule::Str _1bc2544b6_octalNum(jule::Slice<jule::U8>* _31914_txt) {
	jule::Str __jule_func_result;
	if (((*(_31914_txt))[0LL] != '0')) {
		__jule_func_result = jule::Str();
		return __jule_func_result;;
	};
	if (((*(_31914_txt)).len() < 2LL)) {
		return __jule_func_result;;
	};
	jule::I32 _3276_octalStart = 1LL;;
	jule::Bool _3296_o = false;;
	if (((*(_31914_txt))[1LL] == 'o')) {
		if (((*(_31914_txt)).len() < 3LL)) {
			return __jule_func_result;;
		};
		(_3276_octalStart)++;
		_3296_o=true;
	};
	jule::I32 _3386_i = _3276_octalStart;;
	for (; (_3386_i < (*(_31914_txt)).len()); (_3386_i)++) {
		{
			jule::U8 _3403_b = (*(_31914_txt))[_3386_i];;
			if ((_3403_b == '.')) {
				if (_3296_o) {
					__jule_func_result = jule::Str();
					return __jule_func_result;;
				};
				__jule_func_result = _1bc25274a_floatNum(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (_1bc2530ca_isFloatFmtE(_3403_b, _3386_i)) {
				__jule_func_result = _1bc251381_floatFmtE(_31914_txt, _3386_i);
				return __jule_func_result;;
			};
			if (((_3403_b != '_') && (!(_1bc24b513_IsOctal(static_cast<jule::I32>(_3403_b)))))) {
				goto _iter_end_1c07b49bd;
			};
		}
	_iter_next_1c07b49bd:;
	}
	_iter_end_1c07b49bd:;;
	if ((_3386_i == _3276_octalStart)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_31914_txt)).slice(0LL, _3386_i));
	return __jule_func_result;;
}



inline jule::Str _1bc254692_hexNum(jule::Slice<jule::U8>* _36112_txt) {
	jule::Str __jule_func_result;
	if (((*(_36112_txt)).len() < 3LL)) {
		return __jule_func_result;;
	};
	if ((((*(_36112_txt))[0LL] != '0') || (((*(_36112_txt))[1LL] != 'x') && ((*(_36112_txt))[1LL] != 'X')))) {
		return __jule_func_result;;
	};
	;
	jule::I32 _3706_i = 2LL;;
	_julec_label_1c07b8681:;
	for (; (_3706_i < (*(_36112_txt)).len()); (_3706_i)++) {
		{
			jule::U8 _3733_b = (*(_36112_txt))[_3706_i];;
			{
				
				if (_1bc253b47_isFloatFmtDotp(_36112_txt, _3706_i)) {
					_case_begin_1c07b92ec:;
					{
						__jule_func_result = _1bc2522b6_floatFmtDotp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1bc253ebb_isFloatFmtDotfp(_36112_txt, _3706_i)) {
					_case_begin_1c07b9396:;
					{
						__jule_func_result = _1bc251e42_floatFmtDotfp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1bc25344e_isFloatFmtP(_3733_b, _3706_i)) {
					_case_begin_1c07b940c:;
					{
						__jule_func_result = _1bc251749_floatFmtP(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (_1bc2537c3_isFloatFmtDotnp(_36112_txt, _3706_i)) {
					_case_begin_1c07b9473:;
					{
						__jule_func_result = _1bc251abd_floatFmtDotnp(_36112_txt, _3706_i);
						return __jule_func_result;;
					}
				}
				else if (((_3733_b != '_') && (!(_1bc24b7cc_IsHex(static_cast<jule::I32>(_3733_b)))))) {
					_case_begin_1c07b94d9:;
					{
						goto _iter_end_1c07b872a;
					}
				}
				_match_end_1c07b920e:;
			};
		}
	_iter_next_1c07b872a:;
	}
	_iter_end_1c07b872a:;;
	if ((_3706_i == 2LL)) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_36112_txt)).slice(0LL, _3706_i));
	return __jule_func_result;;
}



inline jule::Str _1bc2549e4_hexEscape(jule::Slice<jule::U8>* _39415_txt, jule::I32 _39428_n) {
	jule::Str __jule_func_result;
	if (((*(_39415_txt)).len() < _39428_n)) {
		return __jule_func_result;;
	};
	;
	jule::I32 _4006_i = 2LL;;
	for (; (_4006_i < _39428_n); (_4006_i)++) {
		{
			if ((!(_1bc24b7cc_IsHex(static_cast<jule::I32>((*(_39415_txt))[_4006_i]))))) {
				return __jule_func_result;;
			};
		}
	_iter_next_1c07bad7b:;
	}
	_iter_end_1c07bad7b:;;
	__jule_func_result=_1c3061212_StrFromBytes((*(_39415_txt)).slice(0LL, _39428_n));
	return __jule_func_result;;
}



inline jule::Str _1bc254cad_bigUnicodePointEscape(jule::Slice<jule::U8>* _41227_txt) {
	return _1bc2549e4_hexEscape(_41227_txt, 10LL);;
}



inline jule::Str _1bc255077_littleUnicodePointEscape(jule::Slice<jule::U8>* _41730_txt) {
	return _1bc2549e4_hexEscape(_41730_txt, 6LL);;
}



inline jule::Str _1bc255341_hexByteEscape(jule::Slice<jule::U8>* _42219_txt) {
	return _1bc2549e4_hexEscape(_42219_txt, 4LL);;
}



inline jule::Str _1bc25560a_byteEscape(jule::Slice<jule::U8>* _42716_txt) {
	jule::Str __jule_func_result;
	if (((*(_42716_txt)).len() < 4LL)) {
		return __jule_func_result;;
	};
	if ((((!(_1bc24b513_IsOctal(static_cast<jule::I32>((*(_42716_txt))[1LL])))) || (!(_1bc24b513_IsOctal(static_cast<jule::I32>((*(_42716_txt))[2LL]))))) || (!(_1bc24b513_IsOctal(static_cast<jule::I32>((*(_42716_txt))[3LL])))))) {
		return __jule_func_result;;
	};
	__jule_func_result = _1c3061212_StrFromBytes((*(_42716_txt)).slice(0LL, 4LL));
	return __jule_func_result;;
}



inline jule::Slice<_1a9575ca1_Log> _1bc25a5ee_Lex(jule::Ptr<_1bc24cab9_Fileset> _80712_f, jule::I32 _80725_mode) {
	if ((_80712_f == nullptr)) {
		return nullptr;;
	};
	_1bc255d7a_lex _8126_lex = _1bc255d7a_lex{._field_mode=_80725_mode, ._field_tokens=jule::Slice<jule::Ptr<_1bc247014_Token>>(nullptr), ._field_file=_80712_f, ._field_pos=0LL, ._field_column=0, ._field_row=-1LL, ._field_errors=jule::Slice<_1a9575ca1_Log>(nullptr)};;
	_1bc258bc4_newLine(&_8126_lex);
	_1bc2569a2_lex(&_8126_lex);
	if ((_8126_lex._field_errors.len() > 0LL)) {
		return _8126_lex._field_errors;;
	};
	(*(_80712_f))._field_Tokens=_8126_lex._field_tokens;
	return nullptr;;
}



inline void _1bc2de3a8_lshiftUnsig(_1bac25065_Const* _58821_c, _1bac25065_Const* _58832_x) {
	jule::U64 _5892_l = _1bac27980_AsU64(_58821_c);;
	jule::U64 _5902_r = _1bac27980_AsU64(_58832_x);;
	_1bac28277_SetU64(_58821_c, ({ jule::U64 __jule_x = _5892_l; jule::U64 __jule_y = _5902_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x << __jule_y)); }));
}



inline void _1bc2de6d8_rshiftUnsig(_1bac25065_Const* _59421_c, _1bac25065_Const* _59432_x) {
	jule::U64 _5952_l = _1bac27980_AsU64(_59421_c);;
	jule::U64 _5962_r = _1bac27980_AsU64(_59432_x);;
	_1bac28277_SetU64(_59421_c, ({ jule::U64 __jule_x = _5952_l; jule::U64 __jule_y = _5962_r; ((jule::U64)(__jule_y >= 64 ? 0 : __jule_x >> __jule_y)); }));
}



inline jule::Str _1bc3745a3_RealKindOf(jule::Str _4515_kind) {
	{
		auto &_match_expr{ _4515_kind };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3))) {
			_case_begin_1c08b2a99:;
			{
				return _1bc373abe_SysInt;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1c08b64c6:;
			{
				return _1bc373d77_SysUint;;
			}
		}
		else {
			_case_begin_1c08b35a0:;
			{
				return _4515_kind;;
			}
		}
		_match_end_1c08b6707:;
	};
}



inline jule::I32 _1bc37486c_BitSizeOf(jule::Str _5914_k) {
	{
		auto &_match_expr{ _5914_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1c08b7494:;
			{
				return 8LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1c08b7906:;
			{
				return 16LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1c08b796c:;
			{
				return 32LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1c08b750a:;
			{
				return 64LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("uint", 4)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("int", 3)) || _match_expr == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))) {
			_case_begin_1c08b7571:;
			{
				return _1bc37385a_BitSize;;
			}
		}
		else {
			_case_begin_1c08b7818:;
			{
				return -1LL;;
			}
		}
		_match_end_1c08b73d9:;
	};
}



inline jule::Str _1bc374bad_IntFromBits(jule::I32 _8716_bits) {
	{
		auto &_match_expr{ _8716_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c08ba8e8:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c08ba6ea:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c08ba761:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c08ba95e:;
			{
				return static_cast<jule::Str>(jule::Str::lit("i64", 3));;
			}
		}
		else {
			_case_begin_1c08ba60c:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c08ba1de:;
	};
}



inline jule::Str _1bc374e44_UintFromBits(jule::I32 _10517_bits) {
	{
		auto &_match_expr{ _10517_bits };
		
		if (_match_expr == 8LLU) {
			_case_begin_1c08bc1ad:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u8", 2));;
			}
		}
		else if (_match_expr == 16LLU) {
			_case_begin_1c08bc224:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u16", 3));;
			}
		}
		else if (_match_expr == 32LLU) {
			_case_begin_1c08bc28a:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c08bc301:;
			{
				return static_cast<jule::Str>(jule::Str::lit("u64", 3));;
			}
		}
		else {
			_case_begin_1c08ba9d6:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c08bbcc3:;
	};
}



inline jule::Str _1bc37520d_FloatFromBits(jule::I32 _12318_bits) {
	{
		auto &_match_expr{ _12318_bits };
		
		if (_match_expr == 32LLU) {
			_case_begin_1c08bdbc6:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f32", 3));;
			}
		}
		else if (_match_expr == 64LLU) {
			_case_begin_1c08bd995:;
			{
				return static_cast<jule::Str>(jule::Str::lit("f64", 3));;
			}
		}
		else {
			_case_begin_1c08bacd3:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c08bd588:;
	};
}



inline jule::Bool _1bc375d13_CheckBitFloat(jule::Str _15118_val, jule::I32 _15128_bit) {
	({
		auto except = _1ac586d25_ParseFloat(_15118_val, _15128_bit);
		(except.ok()) ? (except.result) : ({{
			return false;;
		} 0;});
	});
	return true;;
}



inline jule::I32 _1bc3760cc_BitSizeOfFloat(jule::F64 _16119_x) {
	{
		
		if (((-340282346638528860000000000000000000000.0 <= _16119_x) && (_16119_x <= 340282346638528860000000000000000000000.0))) {
			_case_begin_1c08c3b10:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c08c2e61:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c08c2d95:;
	};
}



inline jule::I32 _1bc376396_BitSizeOfInt(jule::I64 _17717_x) {
	{
		
		if (((-128LL <= _17717_x) && (_17717_x <= 127LL))) {
			_case_begin_1c08c4858:;
			{
				return 8LLU;;
			}
		}
		else if (((-32768LL <= _17717_x) && (_17717_x <= 32767LL))) {
			_case_begin_1c08c3da7:;
			{
				return 16LLU;;
			}
		}
		else if (((-2147483648LL <= _17717_x) && (_17717_x <= 2147483647LL))) {
			_case_begin_1c08c3e1d:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c08c3d30:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c08c444b:;
	};
}



inline jule::I32 _1bc376660_BitSizeOfUint(jule::U64 _19718_x) {
	{
		
		if ((_19718_x <= 255LLU)) {
			_case_begin_1c08c6409:;
			{
				return 8LLU;;
			}
		}
		else if ((_19718_x <= 65535LLU)) {
			_case_begin_1c08c55e5:;
			{
				return 16LLU;;
			}
		}
		else if ((_19718_x <= 4294967295LLU)) {
			_case_begin_1c08c565b:;
			{
				return 32LLU;;
			}
		}
		else {
			_case_begin_1c08c557e:;
			{
				return 64LLU;;
			}
		}
		_match_end_1c08c59d0:;
	};
}



inline void _1bc376808_UpdateTarget(void) {
	{
		{
			auto &_match_expr{ _1abb3eb2b_Arch };
			
			if (_match_expr == jule::Str::lit("arm64", 5) || _match_expr == jule::Str::lit("amd64", 5)) {
				_case_begin_1c08c6d33:;
				{
					_1bc37385a_BitSize=64LLU;
					_1bc373abe_SysInt=static_cast<jule::Str>(jule::Str::lit("i64", 3));
					_1bc373d77_SysUint=static_cast<jule::Str>(jule::Str::lit("u64", 3));
				}
			}
			else if (_match_expr == jule::Str::lit("i386", 4)) {
				_case_begin_1c08c7460:;
				{
					_1bc37385a_BitSize=32LLU;
					_1bc373abe_SysInt=static_cast<jule::Str>(jule::Str::lit("i32", 3));
					_1bc373d77_SysUint=static_cast<jule::Str>(jule::Str::lit("u32", 3));
				}
			}
			_match_end_1c08c7372:;
		};
	};
}



inline void _1bc37697e_init(void) {
	_1bc376808_UpdateTarget();
}



inline jule::I64 _1bc37a543_MinI(jule::Str _6113_k) {
	_6113_k=_1bc3745a3_RealKindOf(_6113_k);
	{
		auto &_match_expr{ _6113_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1c08c98d5:;
			{
				return -128LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1c08c9be3:;
			{
				return -32768LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1c08c9c59:;
			{
				return -2147483648LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1c08c9cc0:;
			{
				return jule::MIN_I64;;
			}
		}
		else {
			_case_begin_1c08c678e:;
			{
				return 0LL;;
			}
		}
		_match_end_1c08c685a:;
	};
}



inline jule::I64 _1bc37a851_MaxI(jule::Str _7913_k) {
	_7913_k=_1bc3745a3_RealKindOf(_7913_k);
	{
		auto &_match_expr{ _7913_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i8", 2))) {
			_case_begin_1c08cb310:;
			{
				return 127LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i16", 3))) {
			_case_begin_1c08cb673:;
			{
				return 32767LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i32", 3))) {
			_case_begin_1c08cb6ea:;
			{
				return 2147483647LL;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i64", 3))) {
			_case_begin_1c08cb772:;
			{
				return jule::MAX_I64;;
			}
		}
		else {
			_case_begin_1c08cac6b:;
			{
				return 0LL;;
			}
		}
		_match_end_1c08cac05:;
	};
}



inline jule::U64 _1bc37ab1a_MaxU(jule::Str _9713_k) {
	_9713_k=_1bc3745a3_RealKindOf(_9713_k);
	{
		auto &_match_expr{ _9713_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u8", 2))) {
			_case_begin_1c08ccc90:;
			{
				return 255LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u16", 3))) {
			_case_begin_1c08cd103:;
			{
				return 65535LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u32", 3))) {
			_case_begin_1c08cd17a:;
			{
				return 4294967295LLU;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("u64", 3))) {
			_case_begin_1c08cd202:;
			{
				return jule::MAX_U64;;
			}
		}
		else {
			_case_begin_1c08cc6eb:;
			{
				return 0LLU;;
			}
		}
		_match_end_1c08cc685:;
	};
}



inline jule::F64 _1bc37ae5b_Min(jule::Str _11512_k) {
	_11512_k=_1bc3745a3_RealKindOf(_11512_k);
	jule::I64 _1172_i = _1bc37a543_MinI(_11512_k);;
	if ((_1172_i != 0LL)) {
		return static_cast<jule::F64>(_1172_i);;
	};
	{
		auto &_match_expr{ _11512_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1c08d07cb:;
			{
				return -340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1c08cec2b:;
			{
				return jule::MIN_F64;;
			}
		}
		else {
			_case_begin_1c08cee90:;
			{
				return 0LL;;
			}
		}
		_match_end_1c08cebb5:;
	};
}



inline jule::F64 _1bc37b1e2_Max(jule::Str _13312_k) {
	_13312_k=_1bc3745a3_RealKindOf(_13312_k);
	jule::I64 _1352_i = _1bc37a851_MaxI(_13312_k);;
	if ((_1352_i != 0LL)) {
		return static_cast<jule::F64>(_1352_i);;
	};
	jule::U64 _1392_u = _1bc37ab1a_MaxU(_13312_k);;
	if ((_1392_u != 0LLU)) {
		return static_cast<jule::F64>(_1392_u);;
	};
	{
		auto &_match_expr{ _13312_k };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f32", 3))) {
			_case_begin_1c08d2cd9:;
			{
				return 340282346638528860000000000000000000000.0;;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("f64", 3))) {
			_case_begin_1c08d21b2:;
			{
				return jule::MAX_F64;;
			}
		}
		else {
			_case_begin_1c08d249d:;
			{
				return 0LL;;
			}
		}
		_match_end_1c08d214b:;
	};
}



inline jule::Bool _1bc37c314_IsSigInt(jule::Str _2717_k) {
	return (((((_2717_k == static_cast<jule::Str>(jule::Str::lit("i8", 2))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i16", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i32", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("i64", 3)))) || (_2717_k == static_cast<jule::Str>(jule::Str::lit("int", 3))));;
}



inline jule::Bool _1bc37c622_IsUnsigInt(jule::Str _3619_k) {
	return ((((((_3619_k == static_cast<jule::Str>(jule::Str::lit("u8", 2))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u16", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u32", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("u64", 3)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uint", 4)))) || (_3619_k == static_cast<jule::Str>(jule::Str::lit("uintptr", 7))));;
}



inline jule::Bool _1bc37c8db_IsInt(jule::Str _4610_k) {
	return (_1bc37c314_IsSigInt(_4610_k) || _1bc37c622_IsUnsigInt(_4610_k));;
}



inline jule::Bool _1bc37cc2c_IsFloat(jule::Str _5112_k) {
	return ((_5112_k == static_cast<jule::Str>(jule::Str::lit("f32", 3))) || (_5112_k == static_cast<jule::Str>(jule::Str::lit("f64", 3))));;
}



inline jule::Bool _1bc37ceb3_IsNum(jule::Str _5610_k) {
	return (_1bc37c8db_IsInt(_5610_k) || _1bc37cc2c_IsFloat(_5610_k));;
}



inline jule::Bool _1bc37d27c_IsSigNum(jule::Str _6113_k) {
	return (_1bc37c314_IsSigInt(_6113_k) || _1bc37cc2c_IsFloat(_6113_k));;
}



inline jule::Bool _1bc4063b0_FindModuleFile(jule::Slice<_1a9c2b05a_Dir>* _1420_dirents) {
	{
		auto expr = _1420_dirents;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08d8bad:;
		if (it != expr_end) {
			_1a9c2b05a_Dir *_159_d = it;
			{
				if (((!(_1a9cc4378_IsDir(&(*(_159_d))._field_Stat))) && (*(_159_d))._field_Name.equal("jule.mod", 8))) {
					return true;;
				};
			}
			_iter_next_1c08d8bad:;
			++it;
			goto _iter_begin_1c08d8bad;
		}
		_iter_end_1c08d8bad:;
	};
	return false;;
}



inline jule::Str _1bc40668a_FindModuleFileDeep(jule::Str _2627_path) {
	for (;;) {
		{
			jule::Slice<_1a9c2b05a_Dir> _287_dirents = ({
				auto except = static__1abb3d168_Read(_2627_path);
				(except.ok()) ? (except.result) : ({{
					goto _iter_end_1c08d8b7a;
				} jule::Slice<_1a9c2b05a_Dir>(nullptr);});
			});;
			jule::Bool _323_exist = _1bc4063b0_FindModuleFile(&(_287_dirents));;
			if (_323_exist) {
				return _2627_path;;
			};
			jule::I32 _373_n = _2627_path.len();;
			_2627_path=_1abb3ae57_Dir(_2627_path);
			if ((_2627_path.len() == _373_n)) {
				goto _iter_end_1c08d8b7a;
			};
		}
	_iter_next_1c08d8b7a:;
	}
	_iter_end_1c08d8b7a:;;
	return jule::Str();;
}



inline jule::Slice<_1a9575ca1_Log> _1bc406954_CheckModuleFile(jule::Str* _4821_path) {
	jule::Slice<jule::U8> _492_bytes = ({
		auto except = static__1a9c31bcb_Read(_1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = (*(_4821_path)); (*it++) = jule::Str::lit("jule.mod", 8); __jule_collection; })));
		(except.ok()) ? (except.result) : ({{
			return ({ auto __jule_collection = jule::Slice<_1a9575ca1_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file could not checked because of a problem", 50), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
		} jule::Slice<jule::U8>(nullptr);});
	});;
	jule::Str _552_s = _1abb3632b_Trim(_1c3060e48_BytesStr(_492_bytes), jule::Str::lit(" \n\r\t\v", 5));;
	if ((_552_s.len() != 0LL)) {
		return ({ auto __jule_collection = jule::Slice<_1a9575ca1_Log>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(0LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=jule::Str::lit("module file has syntax error(s)", 31), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()}; __jule_collection; });;
	};
	return nullptr;;
}



inline jule::Bool _1bc4071e6_IsPub(jule::Str _910_ident) {
	if ((_910_ident[0LL] < 128LLU)) {
		jule::U8 _113_b = _910_ident[0LL];;
		return (('A' <= _113_b) && (_113_b <= 'Z'));;
	};
	jule::I32 _142_r;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_910_ident);
		_142_r = __jule_assign_result.__jule_result_arg0;
	});
	return _1abb2c355_IsUpper(_142_r);;
}



inline jule::Bool _1bc46a0b1_IsAscii(jule::I32 _1112_r) {
	;
	return (_1112_r <= 127LL);;
}



inline jule::I32 _1bc451a48_ToRune(jule::Str _2015_lit) {
	jule::I32 _216_r = static_cast<jule::I32>(0LL);;
	(_2015_lit).mut_slice(1LL, (_2015_lit.len() - 1LL));;
	if (((_2015_lit[0LL] == '\\') && (_2015_lit.len() > 1LL))) {
		jule::I32 _247_i = 0LL;;
		_216_r=_1bc46c932_runeFromEsqSeq(_2015_lit, &(_247_i));
	} else {
		({
			__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_2015_lit);
			_216_r = __jule_assign_result.__jule_result_arg0;
		});
	};
	return _216_r;;
}



inline jule::Str _1bc46bed6_ToRawStr(jule::Str _3613_lit) {
	if ((_3613_lit.len() == 2LL)) {
		return jule::Str();;
	};
	return _3613_lit.slice(1LL, (_3613_lit.len() - 1LL));;
}



inline jule::Str _1bc46c327_ToStr(jule::Str _4714_lit) {
	if ((_4714_lit.len() == 2LL)) {
		return jule::Str();;
	};
	jule::Bool _536_isPure = true;;
	{
		auto expr = &(_4714_lit);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c08e6193:;
		if (it != expr_end) {
			jule::U8 _549_b = *it;
			{
				if (((_549_b >= 128LLU) || (_549_b == '\\'))) {
					_536_isPure=false;
					goto _iter_end_1c08e6193;
				};
			}
			_iter_next_1c08e6193:;
			++it;
			goto _iter_begin_1c08e6193;
		}
		_iter_end_1c08e6193:;
	};
	if (_536_isPure) {
		return _4714_lit.slice(1LL, (_4714_lit.len() - 1LL));;
	};
	(_4714_lit).mut_slice(1LL, (_4714_lit.len() - 1LL));;
	jule::Slice<jule::U8> _686_s = ({ auto __jule_collection = jule::Slice<jule::U8>::alloc(0LL, _4714_lit.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; });;
	jule::I32 _696_i = 0LL;;
	while ((_696_i < _4714_lit.len())) {
		{
			jule::U8 _713_b = _4714_lit[_696_i];;
			if ((_713_b == '\\')) {
				_1bc46ccc8_strEsqSeq(&(_686_s), _4714_lit, &(_696_i));
			} else {
				jule::I32 _754_r;
				jule::I32 _757_size;
				({
					__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_4714_lit.slice(_696_i));
					_754_r = __jule_assign_result.__jule_result_arg0;
					_757_size = __jule_assign_result.__jule_result_arg1;
				});
				_696_i+=_757_size;
				_686_s=_1a9530002_AppendRune(_686_s, _754_r);
			};
		}
	_iter_next_1c08e7309:;
	}
	_iter_end_1c08e7309:;;
	return _1c3061212_StrFromBytes(_686_s);;
}



inline __jule_tuple_u8__jule_tuple_bool _1bc46c5ad_tryBtoaCommonEsq(jule::Str _8321_s) {
	__jule_tuple_u8__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	if (((_8321_s.len() < 2LL) || (_8321_s[0LL] != '\\'))) {
		return __jule_func_result;;
	};
	{
		auto &_match_expr{ _8321_s[1LL] };
		
		if (_match_expr == '\\') {
			_case_begin_1c08ea681:;
			{
				__jule_func_result.__jule_result_arg0='\\';
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c08ead8a:;
			{
				__jule_func_result.__jule_result_arg0='\'';
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c08eae01:;
			{
				__jule_func_result.__jule_result_arg0='\"';
			}
		}
		else if (_match_expr == 'a') {
			_case_begin_1c08eae67:;
			{
				__jule_func_result.__jule_result_arg0='\a';
			}
		}
		else if (_match_expr == 'b') {
			_case_begin_1c08eaecd:;
			{
				__jule_func_result.__jule_result_arg0='\b';
			}
		}
		else if (_match_expr == 'f') {
			_case_begin_1c08eb055:;
			{
				__jule_func_result.__jule_result_arg0='\f';
			}
		}
		else if (_match_expr == 'n') {
			_case_begin_1c08eb0cc:;
			{
				__jule_func_result.__jule_result_arg0='\n';
			}
		}
		else if (_match_expr == 'r') {
			_case_begin_1c08eb154:;
			{
				__jule_func_result.__jule_result_arg0='\r';
			}
		}
		else if (_match_expr == 't') {
			_case_begin_1c08eb1cb:;
			{
				__jule_func_result.__jule_result_arg0='\t';
			}
		}
		else if (_match_expr == 'v') {
			_case_begin_1c08eb253:;
			{
				__jule_func_result.__jule_result_arg0='\v';
			}
		}
		_match_end_1c08eac03:;
	};
	__jule_func_result.__jule_result_arg1=(__jule_func_result.__jule_result_arg0 != 0LLU);
	return __jule_func_result;;
}



inline jule::I32 _1bc46c932_runeFromEsqSeq(jule::Str _11319_s, jule::I32* _11332_i) {
	jule::U8 _1142_b;
	jule::Bool _1145_ok;
	({
		__jule_tuple_u8__jule_tuple_bool __jule_assign_result = _1bc46c5ad_tryBtoaCommonEsq(_11319_s.slice((*(_11332_i))));
		_1142_b = __jule_assign_result.__jule_result_arg0;
		_1145_ok = __jule_assign_result.__jule_result_arg1;
	});
	((*(_11332_i)))++;
	if (_1145_ok) {
		((*(_11332_i)))++;
		return static_cast<jule::I32>(_1142_b);;
	};
	{
		auto &_match_expr{ _11319_s[(*(_11332_i))] };
		
		if (_match_expr == 'u') {
			_case_begin_1c0905bec:;
			{
				;
				jule::I32 _1243_r = static_cast<jule::I32>(({
					auto except = _1ac5801b4_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 5LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:124:13"));
					(except.result);
				}));;
				(*(_11332_i))+=5LL;
				return _1243_r;;
			}
		}
		else if (_match_expr == 'U') {
			_case_begin_1c090600a:;
			{
				;
				jule::I32 _1293_r = static_cast<jule::I32>(({
					auto except = _1ac5801b4_ParseUint(_11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 9LL)), 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:129:13"));
					(except.result);
				}));;
				(*(_11332_i))+=9LL;
				return _1293_r;;
			}
		}
		else if (_match_expr == 'x') {
			_case_begin_1c0906082:;
			{
				;
				jule::Str _1343_seq = _11319_s.slice(((*(_11332_i)) + 1LL), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1ac5801b4_ParseUint(_1343_seq, 16LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:136:12"));
					(except.result);
				}));;
			}
		}
		else {
			_case_begin_1c0904723:;
			{
				;
				jule::Str _1393_seq = _11319_s.slice((*(_11332_i)), ((*(_11332_i)) + 3LL));;
				(*(_11332_i))+=3LL;
				return static_cast<jule::I32>(({
					auto except = _1ac5801b4_ParseUint(_1393_seq.slice(1LL), 8LL, 64LL);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/constant/lit/bytes.jule:141:12"));
					(except.result);
				}));;
			}
		}
		_match_end_1c090438d:;
	};
}



inline void _1bc46ccc8_strEsqSeq(jule::Slice<jule::U8>* _14519_buf, jule::Str _14532_s, jule::I32* _14545_i) {
	jule::I32 _1462_r = _1bc46c932_runeFromEsqSeq(_14532_s, _14545_i);;
	if ((_1462_r <= 255LL)) {
		{ jule::Slice<jule::U8> &__jule_push_dest = (*(_14519_buf)); __jule_push_dest.push(static_cast<jule::U8>(_1462_r)); };
		return;;
	};
	(*(_14519_buf))=_1a9530002_AppendRune((*(_14519_buf)), _1462_r);
}



inline jule::I32 _1bc52d2b7_findFormatPrefix(jule::Slice<jule::U8>* _1222_bytes, jule::I32 _1241_i) {
	while ((_1241_i < (*(_1222_bytes)).len())) {
		{
			jule::I32 _143_r;
			jule::I32 _146_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune((*(_1222_bytes)).slice(_1241_i));
				_143_r = __jule_assign_result.__jule_result_arg0;
				_146_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((_143_r == '{')) {
				return _1241_i;;
			};
			_1241_i+=_146_size;
		}
	_iter_next_1c090d661:;
	}
	_iter_end_1c090d661:;;
	return -1LL;;
}



inline jule::Slice<jule::U8> _1bc534d5c_getFormatRange(jule::I32* _2824_i, jule::Slice<jule::U8>* _2837_bytes) {
	jule::I32 _292_start = (*(_2824_i));;
	jule::I32 _306_braces = 0LL;;
	while (((*(_2824_i)) < (*(_2837_bytes)).len())) {
		{
			jule::I32 _323_r;
			jule::I32 _326_size;
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952db16_DecodeRune((*(_2837_bytes)).slice((*(_2824_i))));
				_323_r = __jule_assign_result.__jule_result_arg0;
				_326_size = __jule_assign_result.__jule_result_arg1;
			});
			(*(_2824_i))+=_326_size;
			{
				auto &_match_expr{ _323_r };
				
				if (_match_expr == '{') {
					_case_begin_1c0910751:;
					{
						(_306_braces)++;
					}
				}
				else if (_match_expr == '}') {
					_case_begin_1c0911367:;
					{
						(_306_braces)--;
						if ((_306_braces == 0LL)) {
							return (*(_2837_bytes)).slice(_292_start, (*(_2824_i)));;
						};
					}
				}
				_match_end_1c09111be:;
			};
		}
	_iter_next_1c0910366:;
	}
	_iter_end_1c0910366:;;
	return nullptr;;
}



inline void _1bc535148_FmtByDefault(_1a95669ea_Builder* _4822_buf, jule::Any* _4846_arg) {
	if (((*(_4846_arg)) == nullptr)) {
		({
			auto except = _1a95679eb_WriteStr(_4822_buf, jule::Str::lit("<nil>", 5));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:50:3"));
			(except.result);
		});
		return;;
	};
	{
		auto &_match_expr{ (*(_4846_arg)) };
		
		if (_match_expr.type == &__jule_any_type143) {
			_case_begin_1c0910630:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac57a1d1_FmtFloat(static_cast<jule::F64>((*(_4846_arg)).cast<jule::F32>(&__jule_any_type143)), 'g', -1LL, 32LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:55:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type6) {
			_case_begin_1c09131e3:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac57a1d1_FmtFloat((*(_4846_arg)).cast<jule::F64>(&__jule_any_type6), 'g', -1LL, 64LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:57:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type144) {
			_case_begin_1c0913259:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac596807_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I8>(&__jule_any_type144)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:59:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type145) {
			_case_begin_1c09132c0:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac596807_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I16>(&__jule_any_type145)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:61:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type1) {
			_case_begin_1c0913336:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac596807_FmtInt(static_cast<jule::I64>((*(_4846_arg)).cast<jule::I32>(&__jule_any_type1)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:63:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type2) {
			_case_begin_1c0912962:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac596807_FmtInt((*(_4846_arg)).cast<jule::I64>(&__jule_any_type2), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:65:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type141) {
			_case_begin_1c09129d9:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac59643e_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U8>(&__jule_any_type141)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:67:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type146) {
			_case_begin_1c0912a61:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac59643e_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U16>(&__jule_any_type146)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:69:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type147) {
			_case_begin_1c091359a:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac59643e_FmtUint(static_cast<jule::U64>((*(_4846_arg)).cast<jule::U32>(&__jule_any_type147)), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:71:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type3) {
			_case_begin_1c0913611:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1ac59643e_FmtUint((*(_4846_arg)).cast<jule::U64>(&__jule_any_type3), 10LL));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:73:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type5) {
			_case_begin_1c0913677:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, (*(_4846_arg)).cast<jule::Str>(&__jule_any_type5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:75:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr.type == &__jule_any_type4) {
			_case_begin_1c09136dd:;
			{
				if ((*(_4846_arg)).cast<jule::Bool>(&__jule_any_type4)) {
					({
						auto except = _1a95679eb_WriteStr(_4822_buf, jule::Str::lit("true", 4));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:78:4"));
						(except.result);
					});
				} else {
					({
						auto except = _1a95679eb_WriteStr(_4822_buf, jule::Str::lit("false", 5));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:80:4"));
						(except.result);
					});
				};
			}
		}
		else {
			_case_begin_1c09123bd:;
			{
				({
					auto except = _1a95679eb_WriteStr(_4822_buf, _1be2ea35c_toStr((*(_4846_arg))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:83:3"));
					(except.result);
				});
			}
		}
		_match_end_1c0912357:;
	};
}



inline void _1bc535566_applyFmtByDefault(_1a95669ea_Builder* _8727_buf, jule::I32* _8755_j, jule::Slice<jule::Any> _8763_args) {
	jule::Any _882_arg = _8763_args[(*(_8755_j))];;
	((*(_8755_j)))++;
	_1bc535148_FmtByDefault(_8727_buf, &(_882_arg));
}



inline void _1bc535984_applyFmt(jule::Slice<jule::U8>* _9518_fmt, _1a95669ea_Builder* _9536_buf, jule::I32* _9564_j, jule::Slice<jule::Any> _9572_args) {
	if (((*(_9518_fmt)).len() == 2LL)) {
		_1bc535566_applyFmtByDefault(_9536_buf, _9564_j, _9572_args);
		return;;
	};
	if (((((((*(_9518_fmt)).len() == 4LL) && ((*(_9518_fmt))[0LL] == '{')) && ((*(_9518_fmt))[1LL] == '{')) && ((*(_9518_fmt))[2LL] == '}')) && ((*(_9518_fmt))[3LL] == '}'))) {
		({
			auto except = _1a95679eb_WriteStr(_9536_buf, jule::Str::lit("{}", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:107:3"));
			(except.result);
		});
		return;;
	};
	({
		auto except = _1a95676aa_Write(_9536_buf, (*(_9518_fmt)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:110:2"));
		(except.result);
	});
}



inline jule::Slice<jule::U8> _1bc535d08_Format(jule::Str _11611_fmt, jule::Slice<jule::Any> _11621_args) {
	jule::Slice<jule::U8> _1176_fmtBytes = _1c3060bb2_StrBytes(_11611_fmt);;
	if ((_11621_args.len() == 0LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1216_i = _1bc52d2b7_findFormatPrefix(&(_1176_fmtBytes), 0LL);;
	if ((_1216_i == -1LL)) {
		return _1176_fmtBytes;;
	};
	jule::I32 _1256_j = 0LL;;
	jule::I32 _1266_last = 0LL;;
	_1a95669ea_Builder _1276_buf = static__1a9567369_New(_11611_fmt.len());;
	for (; (_1216_i != -1LL); _1216_i=_1bc52d2b7_findFormatPrefix(&(_1176_fmtBytes), _1216_i)) {
		{
			({
				auto except = _1a95676aa_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last, _1216_i));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:129:3"));
				(except.result);
			});
			jule::Slice<jule::U8> _1307_format = _1bc534d5c_getFormatRange(&(_1216_i), &(_1176_fmtBytes));;
			if ((_1307_format == nullptr)) {
				goto _iter_next_1c09206d9;
			};
			_1bc535984_applyFmt(&(_1307_format), &(_1276_buf), &(_1256_j), _11621_args);
			if ((_1256_j >= _11621_args.len())) {
				({
					auto except = _1a95676aa_Write(&_1276_buf, _1176_fmtBytes.slice(_1216_i));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:136:4"));
					(except.result);
				});
				_1266_last=_1176_fmtBytes.len();
				goto _iter_end_1c09206d9;
			};
			_1266_last=_1216_i;
		}
	_iter_next_1c09206d9:;
	}
	_iter_end_1c09206d9:;;
	if ((_1266_last < _1176_fmtBytes.len())) {
		({
			auto except = _1a95676aa_Write(&_1276_buf, _1176_fmtBytes.slice(_1266_last));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/internal/fmt/format.jule:144:3"));
			(except.result);
		});
	};
	return _1a9568d2c_Buf(&_1276_buf);;
}



inline jule::Str _1bc537ea3_Format(jule::Str _3111_fmt, jule::Slice<jule::Any> _3121_args) {
	return _1c3061212_StrFromBytes(_1bc535d08_Format(_3111_fmt, _3121_args));;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bb4732c9_runtimeFindFn(jule::Ptr<_1bc3dcb9e_ImportInfo>* _1023_runtime, jule::Str _1045_ident) {
	;
	jule::Ptr<_1bc2ee055_Fn> _126_f = _1bc3de2aa_FindFn((*(_1023_runtime)).ptr(), _1045_ident, false);;
	if ((_126_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 109) + jule::Str("\nlocation: std/jule/sema/runtime.jule:14:3"));;
	};
	return _126_f;;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bb473829_runtimeFindStruct(jule::Ptr<_1bc3dcb9e_ImportInfo>* _2327_runtime, jule::Str _2349_ident) {
	;
	jule::Ptr<_1bc27d26a_Struct> _256_f = _1bc3dddae_FindStruct((*(_2327_runtime)).ptr(), _2349_ident, false);;
	if ((_256_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("sema: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 107) + jule::Str("\nlocation: std/jule/sema/runtime.jule:27:3"));;
	};
	return _256_f;;
}



inline jule::Bool _1bc3043e0_parameterUsesGenerics(jule::Ptr<_1bc300ead_ParamIns>* _39531_p, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _39546_generics) {
	if (_1bc2ecbd0_IsSelf((*((*(_39531_p))))._field_Decl.ptr())) {
		return false;;
	};
	return _1bc4d269a_kindUsesGenerics(&((*((*(_39531_p))))._field_Type), _39546_generics);;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a301b_buildAsComptimeMethodData(jule::Ptr<_1bc302113_FnIns>* _203035_f) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_203035_f)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data1)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc3a322a_findComptimePackage(jule::Ptr<_1bc409eeb_sema>* _203829_s) {
	return _1bc40a4c4_SelectPackage((*(_203829_s)).ptr(), jule::__new_closure<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>>((void*)__jule_anon1c0c2eca1, nullptr, nullptr));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a359e_buildComptimeTypeInfoData(jule::Ptr<_1bc409eeb_sema>* _204435_s, jule::Ptr<_1bc4b64e7_Type>* _204450_t) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc409869_pushComptimeTypeInfo((*((*(_204435_s))))._field_meta.ptr(), _204450_t), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data15)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc3a38e0_buildComptimeValue(jule::Ptr<_1bc48354c_Data>* _205228_d) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc39543c_comptimeValue>(_1bc39543c_comptimeValue{._field_data=(*(_205228_d))}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data16)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Str _1bc3a6717_toStrConstraints(jule::Ptr<_1bc4b4b11_InsGeneric> _14321_g) {
	_1a95669ea_Builder _1446_sb = static__1a9567369_New(128LL);;
	{
		auto expr = &((*(_14321_g))._field_Constraint);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad11196a:;
		if (it != expr_end) {
			jule::I32 _1456_i = it - expr->begin();
			jule::Ptr<_1bc4b64e7_Type> *_1459_c = it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_1446_sb, _1bc4b68e3_Str((*(_1459_c)).ptr()));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:146:3"));
					(except.result);
				});
				if ((((*(_14321_g))._field_Constraint.len() - _1456_i) > 1LL)) {
					({
						auto except = _1a95679eb_WriteStr(&_1446_sb, jule::Str::lit(" | ", 3));
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: std/jule/sema/constrait.jule:148:4"));
						(except.result);
					});
				};
			}
			_iter_next_1ad11196a:;
			++it;
			_1456_i++;
			goto _iter_begin_1ad11196a;
		}
		_iter_end_1ad11196a:;
	};
	return _1a956837b_Str(&_1446_sb);;
}



inline jule::Bool _1bc3a6ad0_matchConstraint(jule::Str* _15421_c, jule::Ptr<_1bc4b64e7_Type>* _15434_g) {
	{
		auto &_match_expr{ (*(_15421_c)) };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("signed", 6))) {
			_case_begin_1ad1137e6:;
			{
				jule::Ptr<_1bc4be610_Prim> _1573_prim = _1bc4b8b9d_Prim((*(_15434_g)).ptr());;
				if ((_1573_prim == nullptr)) {
					return false;;
				};
				return _1bc37d27c_IsSigNum((*(_1573_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unsigned", 8))) {
			_case_begin_1ad11385c:;
			{
				jule::Ptr<_1bc4be610_Prim> _1633_prim = _1bc4b8b9d_Prim((*(_15434_g)).ptr());;
				if ((_1633_prim == nullptr)) {
					return false;;
				};
				return _1bc37c622_IsUnsigInt((*(_1633_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("float", 5))) {
			_case_begin_1ad1138d4:;
			{
				jule::Ptr<_1bc4be610_Prim> _1693_prim = _1bc4b8b9d_Prim((*(_15434_g)).ptr());;
				if ((_1693_prim == nullptr)) {
					return false;;
				};
				return _1bc37cc2c_IsFloat((*(_1693_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("numeric", 7))) {
			_case_begin_1ad11395b:;
			{
				jule::Ptr<_1bc4be610_Prim> _1753_prim = _1bc4b8b9d_Prim((*(_15434_g)).ptr());;
				if ((_1753_prim == nullptr)) {
					return false;;
				};
				return _1bc37ceb3_IsNum((*(_1753_prim))._field_Kind);;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("mutable", 7))) {
			_case_begin_1ad113b48:;
			{
				return _1bc4b7dcd_Mutable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("immutable", 9))) {
			_case_begin_1ad113bae:;
			{
				return (!(_1bc4b7dcd_Mutable((*(_15434_g)).ptr())));;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("comparable", 10))) {
			_case_begin_1ad113c25:;
			{
				return _1bc4b7b47_Comparable((*(_15434_g)).ptr());;
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("ordered", 7))) {
			_case_begin_1ad113c8b:;
			{
				return _1bc4b8164_Ordered((*(_15434_g)).ptr());;
			}
		}
		else {
			_case_begin_1ad1120ca:;
			{
				return false;;
			}
		}
		_match_end_1ad112240:;
	};
}



inline jule::Bool _1bc3a6d99_isBuiltinConstraint(jule::Str* _19325_ident) {
	{
		auto expr = &(_1bc3a4acd_builtinConstraints);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad1197a8:;
		if (it != expr_end) {
			jule::Str *_1949_bc = it;
			{
				if (((*(_19325_ident)) == (*(_1949_bc)))) {
					return true;;
				};
			}
			_iter_next_1ad1197a8:;
			++it;
			goto _iter_begin_1ad1197a8;
		}
		_iter_end_1ad1197a8:;
	};
	return false;;
}



inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3a9781_newScopeCheckerBase(jule::Ptr<_1bc409eeb_sema>* _3229_s, jule::Ptr<_1bc302113_FnIns> _3243_owner) {
	return jule::new_ptr<_1bc3b448e_scopeChecker>(_1bc3b448e_scopeChecker{._field_calledFrom=jule::Ptr<_1bc247014_Token>(nullptr), ._field_s=(*(_3229_s)), ._field_owner=_3243_owner, ._field_parent=jule::Ptr<_1bc3b448e_scopeChecker>(nullptr), ._field_childIndex=0, ._field_table=jule::new_ptr<_1bc305358_SymTab>(_1bc305358_SymTab{._field_File=jule::Ptr<_1bc24cab9_Fileset>(nullptr), ._field_Passes=jule::Slice<_1bc3cc177_Pass>(nullptr), ._field_Imports=jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>>(nullptr), ._field_Vars=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr), ._field_TypeAliases=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr), ._field_Structs=jule::Slice<jule::Ptr<_1bc27d26a_Struct>>(nullptr), ._field_Funcs=jule::Slice<jule::Ptr<_1bc2ee055_Fn>>(nullptr), ._field_Traits=jule::Slice<jule::Ptr<_1bc309769_Trait>>(nullptr), ._field_Enums=jule::Slice<jule::Ptr<_1bc30be20_Enum>>(nullptr), ._field_TypeEnums=jule::Slice<jule::Ptr<_1bc30d62a_TypeEnum>>(nullptr), ._field_Impls=jule::Slice<jule::Ptr<_1bc3a7718_Impl>>(nullptr)}), ._field_scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_tree=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_result=jule::Ptr<_1bc3b349e_result>(nullptr), ._field_it=0, ._field_cse=0, ._field_captured=jule::Ptr<jule::Slice<jule::Ptr<_1bc42dc12_Var>>>(nullptr), ._field_labels=jule::Ptr<jule::Slice<jule::Ptr<_1bc3b30c5_scopeLabel>>>(nullptr), ._field_gotos=jule::Ptr<jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>>(nullptr), ._field_i=0});;
}



inline jule::Ptr<_1bc3b448e_scopeChecker> _1bc3a9b49_newScopeChecker(jule::Ptr<_1bc409eeb_sema>* _4025_s, jule::Ptr<_1bc302113_FnIns> _4039_owner) {
	jule::Ptr<_1bc3b448e_scopeChecker> _416_base = _1bc3a9781_newScopeCheckerBase(_4025_s, _4039_owner);;
	(*(_416_base))._field_labels=jule::new_ptr<jule::Slice<jule::Ptr<_1bc3b30c5_scopeLabel>>>(nullptr);
	(*_416_base.alloc)._field_gotos=jule::new_ptr<jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>>(nullptr);
	return _416_base;;
}



inline jule::Ptr<_1bc3b30c5_scopeLabel> _1bc3a9ebd_findLabelParent(jule::Str* _5021_ident, jule::Ptr<_1bc3b448e_scopeChecker> _5037_scope) {
	jule::Ptr<_1bc3b30c5_scopeLabel> _516_label = _1bc3b885b_findLabelScope(_5037_scope, _5021_ident);;
	while ((_516_label == nullptr)) {
		{
			if ((((*_5037_scope.alloc)._field_parent == nullptr) || ((*_5037_scope.alloc)._field_owner != nullptr))) {
				return nullptr;;
			};
			_5037_scope=(*(_5037_scope))._field_parent;
			_516_label=_1bc3b885b_findLabelScope(_5037_scope, _5021_ident);
		}
	_iter_next_1ad13540b:;
	}
	_iter_end_1ad13540b:;;
	return _516_label;;
}



inline jule::Slice<jule::Ptr<_1bc48354c_Data>> _1bc3aa30e_getDatasFromTupleData(jule::Ptr<_1bc48354c_Data>* _6231_d) {
	if ((_1bc4ba9c4_Tup((*((*(_6231_d))))._field_Type.ptr()) != nullptr)) {
		{
			auto &_match_expr{ (*((*(_6231_d))))._field_Model };
			
			if (_match_expr.type == &__jule_any_type84) {
				_case_begin_1ad1381ab:;
				{
					return (*((*((*(_6231_d))))._field_Model.unsafe_cast_ptr<_1bc2e737d_TupleExprModel>()))._field_Datas;;
				}
			}
			else {
				_case_begin_1ad137254:;
				{
					jule::Ptr<_1bc4c4703_Tuple> _688_t = _1bc4ba9c4_Tup((*((*(_6231_d))))._field_Type);;
					jule::Slice<jule::Ptr<_1bc48354c_Data>> _698_r = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(0LL, (*(_688_t))._field_Types.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc48354c_Data>(nullptr); __jule_collection; });;
					{
						auto expr = &((*_688_t.alloc)._field_Types);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1ad138a5d:;
						if (it != expr_end) {
							jule::Ptr<_1bc4b64e7_Type> _7016_kind = *it;
							{
								{ jule::Slice<jule::Ptr<_1bc48354c_Data>> &__jule_push_dest = _698_r; __jule_push_dest.push(jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_7016_kind, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})); };
							}
							_iter_next_1ad138a5d:;
							++it;
							goto _iter_begin_1ad138a5d;
						}
						_iter_end_1ad138a5d:;
					};
					return _698_r;;
				}
			}
			_match_end_1ad1371dd:;
		};
	} else {
		return ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc48354c_Data>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_6231_d)); __jule_collection; });;
	};
}



inline jule::Bool _1bc3aaa7e_checkMut(jule::Ptr<_1bc409eeb_sema>* _9718_s, jule::Ptr<_1bc48354c_Data>* _9729_left, jule::Ptr<_1bc48354c_Data> _9746_right, jule::Ptr<_1bc247014_Token> _9760_op) {
	jule::Bool __jule_func_result = false;
	{
		
		if ((!((*((*(_9729_left))))._field_Mutable))) {
			_case_begin_1ad14320a:;
			{
				_1bc40ce00_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("cannot assign to immutable storage", 34)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((((_9746_right != nullptr) && (!((*_9746_right.alloc)._field_Mutable))) && _1bc4b7dcd_Mutable((*_9746_right.alloc)._field_Type.ptr()))) {
			_case_begin_1ad143617:;
			{
				if ((((*(_9760_op))._field_Id != static_cast<jule::U32>(71LLU)) && (_1bc4ba221_Struct((*(_9746_right))._field_Type) != nullptr))) {
					__jule_func_result = true;
					return __jule_func_result;;
				};
				_1bc40ce00_pushErr((*(_9718_s)).ptr(), _9760_op, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_9746_right))._field_Type), &__jule_any_type5); __jule_collection; }));
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad143183:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad1430a6:;
	};
}



inline jule::Bool _1bc3ab068_checkAssign(jule::Ptr<_1bc409eeb_sema>* _11621_s, jule::Ptr<_1bc48354c_Data>* _11636_left, jule::Ptr<_1bc48354c_Data> _11653_right, jule::Ptr<_1bc247014_Token> _11667_op) {
	jule::Bool __jule_func_result = false;
	jule::Ptr<_1bc302113_FnIns> _1172_f = _1bc4b9e8a_Fn((*((*(_11636_left))))._field_Type.ptr());;
	if ((((_1172_f != nullptr) && ((*_1172_f.alloc)._field_Decl != nullptr)) && (*(*(_1172_f))._field_Decl.alloc)._field_Global)) {
		_1bc40ce00_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("type is not support assignment", 30)), jule::Slice<jule::Any>());
		__jule_func_result = false;
		return __jule_func_result;;
	};
	{
		
		if (_1bc483e87_IsConst((*(_11636_left)).ptr())) {
			_case_begin_1ad148d9d:;
			{
				_1bc40ce00_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("constants is can't assign", 25)), jule::Slice<jule::Any>());
				_1bc40d263_pushSuggestion((*(_11621_s)).ptr(), static_cast<jule::Str>(jule::Str::lit("remove constant qualifer if you need to assign", 46)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!((*((*(_11636_left))))._field_Lvalue))) {
			_case_begin_1ad148e47:;
			{
				_1bc40ce00_pushErr((*(_11621_s)).ptr(), _11667_op, static_cast<jule::Str>(jule::Str::lit("invalid expression: expected lvalue for assignment", 50)), jule::Slice<jule::Any>());
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else if ((!(_1bc3aaa7e_checkMut(_11621_s, _11636_left, _11653_right, _11667_op)))) {
			_case_begin_1ad148ebe:;
			{
				__jule_func_result = false;
				return __jule_func_result;;
			}
		}
		else {
			_case_begin_1ad148d37:;
			{
				__jule_func_result = true;
				return __jule_func_result;;
			}
		}
		_match_end_1ad148bd3:;
	};
}



inline jule::Bool _1bc3ab442_isValidAstStForNextSt(jule::Any* _13831_n) {
	{
		auto &_match_expr{ (*(_13831_n)) };
		
		if (_match_expr.type == &__jule_any_type58) {
			_case_begin_1ad141659:;
			{
				return (!((*((*(_13831_n)).cast_ptr<_1bc26b3ac_AssignSt>(&__jule_any_type58)))._field_Declarative));;
			}
		}
		else if (_match_expr.type == &__jule_any_type52) {
			_case_begin_1ad14b532:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1ad14b400:;
			{
				return false;;
			}
		}
		_match_end_1ad14b389:;
	};
}



inline jule::Bool _1bc3ab684_isValidStForNextSt(jule::Any* _14924_st) {
	{
		auto &_match_expr{ (*(_14924_st)) };
		
		if (_match_expr.type == &__jule_any_type40 || _match_expr.type == &__jule_any_type41 || _match_expr.type == &__jule_any_type44) {
			_case_begin_1ad14b598:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1ad152a66:;
			{
				{
					auto &_match_expr{ (*((*(_14924_st)).cast_ptr<_1bc48354c_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type31) {
						_case_begin_1ad15d2d0:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1ad15d027:;
						{
							return false;;
						}
					}
					_match_end_1ad15ceb1:;
				};
			}
		}
		else {
			_case_begin_1ad152d74:;
			{
				return false;;
			}
		}
		_match_end_1ad1519ee:;
	};
}



inline jule::U32 _1bc3c6bdd_removeEqFromOp(jule::U32 _216519_op) {
	{
		auto &_match_expr{ _216519_op };
		
		if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1ad15e59a:;
			{
				return static_cast<jule::U32>(60LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1ad16168a:;
			{
				return static_cast<jule::U32>(61LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1ad161701:;
			{
				return static_cast<jule::U32>(62LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1ad15e611:;
			{
				return static_cast<jule::U32>(63LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1ad15e688:;
			{
				return static_cast<jule::U32>(64LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1ad15e710:;
			{
				return static_cast<jule::U32>(56LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1ad162cda:;
			{
				return static_cast<jule::U32>(57LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1ad162d62:;
			{
				return static_cast<jule::U32>(67LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1ad162dd9:;
			{
				return static_cast<jule::U32>(65LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1ad162a76:;
			{
				return static_cast<jule::U32>(66LLU);;
			}
		}
		else {
			_case_begin_1ad16138d:;
			{
				return _216519_op;;
			}
		}
		_match_end_1ad161a64:;
	};
}



inline void _1bc3c6e1e_makeComptimeRange(jule::Ptr<_1bc48354c_Data>* _219427_d) {
	{
		
		if ((_1bc4baee1_comptimeStructFields((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad16685a:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4baee1_comptimeStructFields((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data0)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else if ((_1bc4bb50d_comptimeEnumFields((*((*(_219427_d))))._field_Type.ptr()) != nullptr)) {
			_case_begin_1ad16676c:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4bb50d_comptimeEnumFields((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data2)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else if ((_1bc4bc2cd_comptimeTypeInfos((*((*(_219427_d))))._field_Type) != nullptr)) {
			_case_begin_1ad1667d3:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4bc2cd_comptimeTypeInfos((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data4)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else if ((_1bc4bba2a_comptimeParams((*((*(_219427_d))))._field_Type) != nullptr)) {
			_case_begin_1ad15e07d:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4bba2a_comptimeParams((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data3)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else if ((_1bc4bc7ea_comptimeStatics((*((*(_219427_d))))._field_Type) != nullptr)) {
			_case_begin_1ad15e0e4:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4bc7ea_comptimeStatics((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data1)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else if ((_1bc4bd851_comptimeFiles((*((*(_219427_d))))._field_Type) != nullptr)) {
			_case_begin_1ad15e15a:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4bd851_comptimeFiles((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data5)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else if ((_1bc4bd334_comptimeDecls((*((*(_219427_d))))._field_Type) != nullptr)) {
			_case_begin_1ad166d22:;
			{
				(*((*(_219427_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc37e437_comptimeRange>(_1bc37e437_comptimeRange{._field_kind=jule::Trait(_1bc4bd334_comptimeDecls((*((*(_219427_d))))._field_Type.ptr()), (jule::Trait::Type*)&_1bc37e217_comptimeRangeKind_mptr_data6)}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data5)});
			}
		}
		else {
			_case_begin_1ad15de7e:;
			{
				(*((*(_219427_d))))._field_Decl=true;
			}
		}
		_match_end_1ad16642b:;
	};
}



inline jule::Bool _1bc3c71d8_canComptimeMatch(jule::Ptr<_1bc48354c_Data>* _221726_d) {
	if ((!(_1bc481b11_isGoodValueToInfer(_221726_d)))) {
		return false;;
	};
	return (_1bc483e87_IsConst((*(_221726_d)).ptr()) || (_1bc4bc564_comptimeTypeInfo((*((*(_221726_d))))._field_Type.ptr()) != nullptr));;
}



inline jule::Bool _1bc3c74a2_stmtIsDef(jule::Any* _222515_stmt) {
	{
		auto &_match_expr{ (*(_222515_stmt)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1ad170bd8:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type44) {
			_case_begin_1ad1732c3:;
			{
				jule::Ptr<_1bc3b0d1a_MultiAssign> _22303_ma = (*(_222515_stmt)).cast_ptr<_1bc3b0d1a_MultiAssign>(&__jule_any_type44);;
				return ((*(_22303_ma))._field_Decls.len() > 0LL);;
			}
		}
		else {
			_case_begin_1ad172d83:;
			{
				return false;;
			}
		}
		_match_end_1ad172cea:;
	};
}



inline jule::I32 _1bc3c7826_countMatchType(jule::Ptr<_1bc3b1557_Match>* _223720_m, jule::Ptr<_1bc4b64e7_Type>* _223732_t) {
	jule::I32 _22386_n = 0LL;;
	_julec_label_1ad174934:;
	{
		auto expr = &((*((*(_223720_m))))._field_Cases);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad174d63:;
		if (it != expr_end) {
			jule::Ptr<_1bc3b2080_Case> *_22409_c = it;
			{
				if (((*(_22409_c)) == nullptr)) {
					goto _iter_next_1ad174d63;
				};
				{
					auto expr = &((*((*(_22409_c))))._field_Exprs);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad175bdd:;
					if (it != expr_end) {
						jule::Ptr<_1bc48354c_Data> *_224410_expr = it;
						{
							if (((*(_224410_expr)) == nullptr)) {
								goto _iter_end_1ad174d63;
							};
							if (_1bc4b6c34_Equal((*(_223732_t)), (*((*(_224410_expr))))._field_Model.cast_ptr<_1bc4b64e7_Type>(&__jule_any_type87))) {
								(_22386_n)++;
							};
						}
						_iter_next_1ad175bdd:;
						++it;
						goto _iter_begin_1ad175bdd;
					}
					_iter_end_1ad175bdd:;
				};
			}
			_iter_next_1ad174d63:;
			++it;
			goto _iter_begin_1ad174d63;
		}
		_iter_end_1ad174d63:;
	};
	return _22386_n;;
}



inline jule::Ptr<_1bc4bdc08_TypeSym> _1bc3cc4da_buildType(jule::Ptr<_1bc25c90e_TypeDecl> _6918_t) {
	if ((_6918_t == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=_6918_t, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr)});;
}



inline jule::Ptr<_1bc4846c4_Value> _1bc3cc7e8_buildExpr(jule::Ptr<_1bc261c43_Expr> _7818_expr) {
	if ((_7818_expr == nullptr)) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=_7818_expr, ._field_Data=jule::Ptr<_1bc48354c_Data>(nullptr)});;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3ccab2_buildTypeAlias(jule::Ptr<_1bc274508_TypeAliasDecl> _8723_decl) {
	return jule::new_ptr<_1bc4b5705_TypeAlias>(_1bc4b5705_TypeAlias{._field_Scope=(*(_8723_decl))._field_Scope, ._field_Public=(*_8723_decl.alloc)._field_Public, ._field_Binded=(*_8723_decl.alloc)._field_Binded, ._field_Used=false, ._field_Generic=false, ._field_Token=(*_8723_decl.alloc)._field_Token, ._field_Ident=(*_8723_decl.alloc)._field_Ident, ._field_TypeSym=_1bc3cc4da_buildType((*_8723_decl.alloc)._field_Kind), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1bc27a377_Field> _1bc3cce03_buildField(jule::Ptr<_1bc277b27_FieldDecl> _9819_decl) {
	return jule::new_ptr<_1bc27a377_Field>(_1bc27a377_Field{._field_Owner=jule::Ptr<_1bc27d26a_Struct>(nullptr), ._field_Token=(*(_9819_decl))._field_Token, ._field_Public=(*_9819_decl.alloc)._field_Public, ._field_Mutable=(*_9819_decl.alloc)._field_Mutable, ._field_Ident=(*_9819_decl.alloc)._field_Ident, ._field_TypeSym=_1bc3cc4da_buildType((*_9819_decl.alloc)._field_Kind), ._field_Default=(*_9819_decl.alloc)._field_Default});;
}



inline jule::Slice<jule::Ptr<_1bc27a377_Field>> _1bc3cd189_buildFields(jule::Slice<jule::Ptr<_1bc277b27_FieldDecl>>* _10921_decls) {
	jule::Slice<jule::Ptr<_1bc27a377_Field>> _1106_fields = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27a377_Field>>::alloc(0LL, (*(_10921_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc27a377_Field>(nullptr); __jule_collection; });;
	{
		auto expr = _10921_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3167637:;
		if (it != expr_end) {
			jule::Ptr<_1bc277b27_FieldDecl> _11114_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc27a377_Field>> &__jule_push_dest = _1106_fields; __jule_push_dest.push(_1bc3cce03_buildField(_11114_decl)); };
			}
			_iter_next_1c3167637:;
			++it;
			goto _iter_begin_1c3167637;
		}
		_iter_end_1c3167637:;
	};
	return _1106_fields;;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc3cd453_buildStruct(jule::Ptr<_1bc27851d_StructDecl> _11720_decl) {
	return jule::new_ptr<_1bc27d26a_Struct>(_1bc27d26a_Struct{._field_sema=jule::Ptr<_1bc409eeb_sema>(nullptr), ._field_Depends=jule::Slice<jule::Ptr<_1bc27d26a_Struct>>(nullptr), ._field_Uses=jule::Slice<jule::Ptr<_1bc27d26a_Struct>>(nullptr), ._field_Token=(*(_11720_decl))._field_Token, ._field_Ident=(*_11720_decl.alloc)._field_Ident, ._field_Fields=_1bc3cd189_buildFields(&((*_11720_decl.alloc)._field_Fields)), ._field_Methods=jule::Slice<jule::Ptr<_1bc2ee055_Fn>>(nullptr), ._field_Statics=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr), ._field_Public=(*_11720_decl.alloc)._field_Public, ._field_Binded=(*_11720_decl.alloc)._field_Binded, ._field_Directives=(*_11720_decl.alloc)._field_Directives, ._field_Generics=(*_11720_decl.alloc)._field_Generics, ._field_Implements=jule::Slice<jule::Ptr<_1bc309769_Trait>>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1bc2810c5_StructIns>>(nullptr)});;
}



inline jule::Ptr<_1bc2ec581_Param> _1bc3cd71c_buildParam(jule::Ptr<_1bc26d249_ParamDecl> _12919_decl) {
	return jule::new_ptr<_1bc2ec581_Param>(_1bc2ec581_Param{._field_Token=(*(_12919_decl))._field_Token, ._field_Mutable=(*_12919_decl.alloc)._field_Mutable, ._field_Variadic=(*_12919_decl.alloc)._field_Variadic, ._field_Reference=(*_12919_decl.alloc)._field_Reference, ._field_TypeSym=_1bc3cc4da_buildType((*_12919_decl.alloc)._field_Kind), ._field_Ident=(*_12919_decl.alloc)._field_Ident});;
}



inline jule::Slice<jule::Ptr<_1bc2ec581_Param>> _1bc3cdae6_buildParams(jule::Slice<jule::Ptr<_1bc26d249_ParamDecl>>* _14021_decls) {
	jule::Slice<jule::Ptr<_1bc2ec581_Param>> _1416_params = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ec581_Param>>::alloc(0LL, (*(_14021_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc2ec581_Param>(nullptr); __jule_collection; });;
	{
		auto expr = _14021_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c316b680:;
		if (it != expr_end) {
			jule::Ptr<_1bc26d249_ParamDecl> _14214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc2ec581_Param>> &__jule_push_dest = _1416_params; __jule_push_dest.push(_1bc3cd71c_buildParam(_14214_decl)); };
			}
			_iter_next_1c316b680:;
			++it;
			goto _iter_begin_1c316b680;
		}
		_iter_end_1c316b680:;
	};
	return _1416_params;;
}



inline jule::Ptr<_1bc2ebeba_RetType> _1bc3cdd38_buildRetType(jule::Ptr<_1bc260802_RetTypeDecl> _14821_decl) {
	if ((((*(_14821_decl))._field_Idents == nullptr) && ((*_14821_decl.alloc)._field_Kind == nullptr))) {
		return nullptr;;
	};
	return jule::new_ptr<_1bc2ebeba_RetType>(_1bc2ebeba_RetType{._field_TypeSym=_1bc3cc4da_buildType((*(_14821_decl))._field_Kind), ._field_Idents=(*_14821_decl.alloc)._field_Idents});;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc3ce102_buildFunc(jule::Ptr<_1bc26e69b_FnDecl> _15818_decl) {
	return jule::new_ptr<_1bc2ee055_Fn>(_1bc2ee055_Fn{._field_sema=jule::Ptr<_1bc409eeb_sema>(nullptr), ._field_Token=(*(_15818_decl))._field_Token, ._field_Global=(*_15818_decl.alloc)._field_Global, ._field_Unsafety=(*_15818_decl.alloc)._field_Unsafety, ._field_Public=(*_15818_decl.alloc)._field_Public, ._field_Binded=(*_15818_decl.alloc)._field_Binded, ._field_Statically=(*_15818_decl.alloc)._field_Statically, ._field_Exceptional=(*_15818_decl.alloc)._field_Exceptional, ._field_Ident=(*_15818_decl.alloc)._field_Ident, ._field_Directives=(*_15818_decl.alloc)._field_Directives, ._field_Scope=(*_15818_decl.alloc)._field_Scope, ._field_Generics=(*_15818_decl.alloc)._field_Generics, ._field_Result=_1bc3cdd38_buildRetType((*_15818_decl.alloc)._field_Result), ._field_Params=_1bc3cdae6_buildParams(&((*_15818_decl.alloc)._field_Params)), ._field_Owner=jule::Ptr<_1bc27d26a_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1bc302113_FnIns>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _1bc3ce3bb_buildMethods(jule::Slice<jule::Ptr<_1bc26e69b_FnDecl>>* _17622_decls) {
	jule::Slice<jule::Ptr<_1bc2ee055_Fn>> _1776_methods = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ee055_Fn>>::alloc(0LL, (*(_17622_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc2ee055_Fn>(nullptr); __jule_collection; });;
	{
		auto expr = _17622_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c317172e:;
		if (it != expr_end) {
			jule::Ptr<_1bc26e69b_FnDecl> _17814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc2ee055_Fn>> &__jule_push_dest = _1776_methods; __jule_push_dest.push(_1bc3ce102_buildFunc(_17814_decl)); };
			}
			_iter_next_1c317172e:;
			++it;
			goto _iter_begin_1c317172e;
		}
		_iter_end_1c317172e:;
	};
	return _1776_methods;;
}



inline jule::Slice<jule::Ptr<_1bc4bdc08_TypeSym>> _1bc3ce685_buildTraitInherits(jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>* _18428_inherits) {
	jule::Slice<jule::Ptr<_1bc4bdc08_TypeSym>> _1856_symbols = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4bdc08_TypeSym>>::alloc(0LL, (*(_18428_inherits)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4bdc08_TypeSym>(nullptr); __jule_collection; });;
	{
		auto expr = _18428_inherits;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3172873:;
		if (it != expr_end) {
			jule::Ptr<_1bc25c90e_TypeDecl> _18614_it = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc4bdc08_TypeSym>> &__jule_push_dest = _1856_symbols; __jule_push_dest.push(_1bc3cc4da_buildType(_18614_it)); };
			}
			_iter_next_1c3172873:;
			++it;
			goto _iter_begin_1c3172873;
		}
		_iter_end_1c3172873:;
	};
	return _1856_symbols;;
}



inline jule::Ptr<_1bc309769_Trait> _1bc3ce94e_buildTrait(jule::Ptr<_1bc278c5a_TraitDecl> _19219_decl) {
	return jule::new_ptr<_1bc309769_Trait>(_1bc309769_Trait{._field_Token=(*(_19219_decl))._field_Token, ._field_Ident=(*_19219_decl.alloc)._field_Ident, ._field_Public=(*_19219_decl.alloc)._field_Public, ._field_Inherits=_1bc3ce685_buildTraitInherits(&((*_19219_decl.alloc)._field_Inherits)), ._field_Methods=_1bc3ce3bb_buildMethods(&((*_19219_decl.alloc)._field_Methods)), ._field_Implemented=jule::Slice<jule::Ptr<_1bc27d26a_Struct>>(nullptr)});;
}



inline jule::Ptr<_1bc30b3b4_EnumItem> _1bc3cec18_buildEnumItem(jule::Ptr<_1bc275d12_EnumItemDecl> _20222_decl) {
	return jule::new_ptr<_1bc30b3b4_EnumItem>(_1bc30b3b4_EnumItem{._field_Token=(*(_20222_decl))._field_Token, ._field_Ident=(*_20222_decl.alloc)._field_Ident, ._field_Value=_1bc3cc7e8_buildExpr((*_20222_decl.alloc)._field_Expr)});;
}



inline jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _1bc3ceed2_buildEnumItems(jule::Slice<jule::Ptr<_1bc275d12_EnumItemDecl>>* _21024_decls) {
	jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> _2116_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>>::alloc(0LL, (*(_21024_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc30b3b4_EnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _21024_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3175b2e:;
		if (it != expr_end) {
			jule::Ptr<_1bc275d12_EnumItemDecl> _21214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc30b3b4_EnumItem>> &__jule_push_dest = _2116_items; __jule_push_dest.push(_1bc3cec18_buildEnumItem(_21214_decl)); };
			}
			_iter_next_1c3175b2e:;
			++it;
			goto _iter_begin_1c3175b2e;
		}
		_iter_end_1c3175b2e:;
	};
	return _2116_items;;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc3d04cc_buildEnum(jule::Ptr<_1bc2768c3_EnumDecl> _21818_decl) {
	return jule::new_ptr<_1bc30be20_Enum>(_1bc30be20_Enum{._field_Token=(*(_21818_decl))._field_Token, ._field_Public=(*_21818_decl.alloc)._field_Public, ._field_Ident=(*_21818_decl.alloc)._field_Ident, ._field_TypeSym=_1bc3cc4da_buildType((*_21818_decl.alloc)._field_Kind), ._field_Items=_1bc3ceed2_buildEnumItems(&((*_21818_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1bc30d053_TypeEnumItem> _1bc3d06a8_buildTypeEnumItem(jule::Ptr<_1bc2771ed_TypeEnumItemDecl> _22826_decl) {
	return jule::new_ptr<_1bc30d053_TypeEnumItem>(_1bc30d053_TypeEnumItem{._field_Token=(*(_22826_decl))._field_Token, ._field_Ident=(*_22826_decl.alloc)._field_Ident, ._field_TypeSym=_1bc3cc4da_buildType((*_22826_decl.alloc)._field_Kind)});;
}



inline jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> _1bc3d0950_buildTypeEnumItems(jule::Slice<jule::Ptr<_1bc2771ed_TypeEnumItemDecl>>* _23628_decls) {
	jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> _2376_items = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>>::alloc(0LL, (*(_23628_decls)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc30d053_TypeEnumItem>(nullptr); __jule_collection; });;
	{
		auto expr = _23628_decls;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3178dda:;
		if (it != expr_end) {
			jule::Ptr<_1bc2771ed_TypeEnumItemDecl> _23814_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc30d053_TypeEnumItem>> &__jule_push_dest = _2376_items; __jule_push_dest.push(_1bc3d06a8_buildTypeEnumItem(_23814_decl)); };
			}
			_iter_next_1c3178dda:;
			++it;
			goto _iter_begin_1c3178dda;
		}
		_iter_end_1c3178dda:;
	};
	return _2376_items;;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3d0c19_buildTypeEnum(jule::Ptr<_1bc27785d_TypeEnumDecl> _24422_decl) {
	return jule::new_ptr<_1bc30d62a_TypeEnum>(_1bc30d62a_TypeEnum{._field_Token=(*(_24422_decl))._field_Token, ._field_Public=(*_24422_decl.alloc)._field_Public, ._field_Ident=(*_24422_decl.alloc)._field_Ident, ._field_Items=_1bc3d0950_buildTypeEnumItems(&((*_24422_decl.alloc)._field_Items))});;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc3d0ed3_buildVar(jule::Ptr<_1bc270856_VarDecl> _25317_decl) {
	return jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Token=(*(_25317_decl))._field_Token, ._field_Ident=(*_25317_decl.alloc)._field_Ident, ._field_Binded=(*_25317_decl.alloc)._field_Binded, ._field_Constant=(*_25317_decl.alloc)._field_Constant, ._field_Mutable=(*_25317_decl.alloc)._field_Mutable, ._field_Public=(*_25317_decl.alloc)._field_Public, ._field_Used=false, ._field_Statically=(*_25317_decl.alloc)._field_Statically, ._field_Reference=(*_25317_decl.alloc)._field_Reference, ._field_TypeSym=_1bc3cc4da_buildType((*_25317_decl.alloc)._field_Kind), ._field_Value=_1bc3cc7e8_buildExpr((*_25317_decl.alloc)._field_Expr), ._field_Refers=static__1bc3cae89_new(), ._field_Directives=(*_25317_decl.alloc)._field_Directives, ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
}



inline jule::Slice<jule::Ptr<_1bc42dc12_Var>> _1bc3d129c_buildVars(jule::Slice<jule::Ptr<_1bc270856_VarDecl>> _27018_decls) {
	jule::Slice<jule::Ptr<_1bc42dc12_Var>> _2716_vars = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc42dc12_Var>>::alloc(0LL, _27018_decls.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc42dc12_Var>(nullptr); __jule_collection; });;
	{
		auto expr = &(_27018_decls);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c317d72a:;
		if (it != expr_end) {
			jule::Ptr<_1bc270856_VarDecl> _27214_decl = *it;
			{
				{ jule::Slice<jule::Ptr<_1bc42dc12_Var>> &__jule_push_dest = _2716_vars; __jule_push_dest.push(_1bc3d0ed3_buildVar(_27214_decl)); };
			}
			_iter_next_1c317d72a:;
			++it;
			goto _iter_begin_1c317d72a;
		}
		_iter_end_1c317d72a:;
	};
	return _2716_vars;;
}



inline jule::Ptr<_1bc3a7718_Impl> _1bc3d1566_buildImpl(jule::Ptr<_1bc2793ba_Impl> _27818_decl) {
	return jule::new_ptr<_1bc3a7718_Impl>(_1bc3a7718_Impl{._field_Base=(*(_27818_decl))._field_Base, ._field_Dest=(*_27818_decl.alloc)._field_Dest, ._field_Methods=_1bc3ce3bb_buildMethods(&((*_27818_decl.alloc)._field_Methods)), ._field_Statics=_1bc3d129c_buildVars((*_27818_decl.alloc)._field_Statics)});;
}



inline jule::Bool _1bc3d7d86_isImplicitImport(jule::Ptr<_1bc3dcb9e_ImportInfo> _79121_imp) {
	return ((*((*(_79121_imp))._field_Decl))._field_Token == nullptr);;
}



inline jule::Ptr<_1bc305358_SymTab> _1bc3d9edc_findVarFileInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _4430_files, jule::Ptr<_1bc42dc12_Var>* _4449_v) {
	{
		auto expr = _4430_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce2c98:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _4514_f = *it;
			{
				if ((_1bc3078ee_findVar1(_4514_f.ptr(), _4449_v) != -1LL)) {
					return _4514_f;;
				};
			}
			_iter_next_1c0ce2c98:;
			++it;
			goto _iter_begin_1c0ce2c98;
		}
		_iter_end_1c0ce2c98:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc3da460_findVarInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _5526_files, jule::Str* _5545_ident, jule::Bool _5557_binded) {
	{
		auto expr = _5526_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce4063:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _5614_f = *it;
			{
				jule::Ptr<_1bc42dc12_Var> _577_v = _1bc305c71_FindVar(_5614_f.ptr(), (*(_5545_ident)), _5557_binded);;
				if ((_577_v != nullptr)) {
					return _577_v;;
				};
			}
			_iter_next_1c0ce4063:;
			++it;
			goto _iter_begin_1c0ce4063;
		}
		_iter_end_1c0ce4063:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc3da88e_findTypeAliasInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _6732_files, jule::Str* _6751_ident, jule::Bool _6763_binded) {
	{
		auto expr = _6732_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce45b3:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _6814_f = *it;
			{
				jule::Ptr<_1bc4b5705_TypeAlias> _697_ta = _1bc30616c_FindTypeAlias(_6814_f.ptr(), (*(_6751_ident)), _6763_binded);;
				if ((_697_ta != nullptr)) {
					return _697_ta;;
				};
			}
			_iter_next_1c0ce45b3:;
			++it;
			goto _iter_begin_1c0ce45b3;
		}
		_iter_end_1c0ce45b3:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc3dad45_findStructInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _7929_files, jule::Str* _7948_ident, jule::Bool _7960_binded) {
	{
		auto expr = _7929_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce5ae2:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _8014_f = *it;
			{
				jule::Ptr<_1bc27d26a_Struct> _817_s = _1bc306568_FindStruct(_8014_f.ptr(), (*(_7948_ident)), _7960_binded);;
				if ((_817_s != nullptr)) {
					return _817_s;;
				};
			}
			_iter_next_1c0ce5ae2:;
			++it;
			goto _iter_begin_1c0ce5ae2;
		}
		_iter_end_1c0ce5ae2:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc3db241_findFnInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _9125_files, jule::Str* _9144_ident, jule::Bool _9156_binded) {
	{
		auto expr = _9125_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce7121:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _9214_file = *it;
			{
				jule::Ptr<_1bc2ee055_Fn> _937_f = _1bc306964_FindFn(_9214_file.ptr(), (*(_9144_ident)), _9156_binded);;
				if ((_937_f != nullptr)) {
					return _937_f;;
				};
			}
			_iter_next_1c0ce7121:;
			++it;
			goto _iter_begin_1c0ce7121;
		}
		_iter_end_1c0ce7121:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc309769_Trait> _1bc3db5b5_findTraitInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _10328_files, jule::Str* _10347_ident) {
	{
		auto expr = _10328_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce9684:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _10414_f = *it;
			{
				jule::Ptr<_1bc309769_Trait> _1057_t = _1bc306ca5_FindTrait(_10414_f.ptr(), (*(_10347_ident)));;
				if ((_1057_t != nullptr)) {
					return _1057_t;;
				};
			}
			_iter_next_1c0ce9684:;
			++it;
			goto _iter_begin_1c0ce9684;
		}
		_iter_end_1c0ce9684:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc30be20_Enum> _1bc3db939_findEnumInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _11527_files, jule::Str* _11546_ident) {
	{
		auto expr = _11527_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ce9783:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _11614_f = *it;
			{
				jule::Ptr<_1bc30be20_Enum> _1177_e = _1bc3070e6_FindEnum(_11614_f.ptr(), (*(_11546_ident)));;
				if ((_1177_e != nullptr)) {
					return _1177_e;;
				};
			}
			_iter_next_1c0ce9783:;
			++it;
			goto _iter_begin_1c0ce9783;
		}
		_iter_end_1c0ce9783:;
	};
	return nullptr;;
}



inline jule::Ptr<_1bc30d62a_TypeEnum> _1bc3dbdbd_findTypeEnumInPackage(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _12731_files, jule::Str* _12750_ident) {
	{
		auto expr = _12731_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c0ceaad6:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _12814_f = *it;
			{
				jule::Ptr<_1bc30d62a_TypeEnum> _1297_e = _1bc307437_FindTypeEnum(_12814_f.ptr(), (*(_12750_ident)));;
				if ((_1297_e != nullptr)) {
					return _1297_e;;
				};
			}
			_iter_next_1c0ceaad6:;
			++it;
			goto _iter_begin_1c0ceaad6;
		}
		_iter_end_1c0ceaad6:;
	};
	return nullptr;;
}



inline jule::Bool _1bc3e28eb_isStdPackage(jule::Str* _33318_f, jule::Str _33326_p) {
	return _1abb2d9c7_HasPrefix((*(_33318_f)), _1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1abb3dc7e_PathStdlib; (*it++) = _33326_p; __jule_collection; })));;
}



inline jule::Bool _1bc4078ab_isValidModelForRef(jule::Any* _1528_m) {
	{
		auto &_match_expr{ (*(_1528_m)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c0d0a695:;
			{
				return true;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c0d0a70b:;
			{
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _207_model = (*(_1528_m)).cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_207_model))._field_Field != nullptr) && _1bc4078ab_isValidModelForRef(&((*((*_207_model.alloc)._field_Expr))._field_Model)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c0d0a772:;
			{
				jule::Ptr<_1bc2e2169_UnaryExprModel> _237_unary = (*(_1528_m)).cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113);;
				if (((*((*(_237_unary))._field_Op))._field_Id != static_cast<jule::U32>(62LLU))) {
					return false;;
				};
				if ((_1bc4b91ba_Ptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) != nullptr)) {
					return true;;
				};
				if ((_1bc4b8e34_Sptr((*((*(_237_unary))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1bc4078ab_isValidModelForRef(&((*((*(_237_unary))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c0d0a7d8:;
			{
				jule::Ptr<_1bc2e4600_IndexingExprModel> _377_indexing = (*(_1528_m)).cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43);;
				if ((_1bc4b996d_Arr((*((*(_377_indexing))._field_Expr))._field_Type.ptr()) == nullptr)) {
					return false;;
				};
				return _1bc4078ab_isValidModelForRef(&((*((*(_377_indexing))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1c0d0a288:;
			{
				return false;;
			}
		}
		_match_end_1c0d09d6a:;
	};
}



inline _1a9575ca1_Log _1bc407dd9_compilerErr(jule::Ptr<_1bc247014_Token>* _4917_token, jule::Bool _4939_line, jule::Str _4951_fmt, jule::Slice<jule::Any> _4971_args) {
	_1a9575ca1_Log _506_log = _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_4917_token))))._field_Row, ._field_Column=(*((*(_4917_token))))._field_Column, ._field_Path=(*((*((*(_4917_token))))._field_File))._field_Path, ._field_Text=_1a9576213_Logf(_4951_fmt, _4971_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
	if (_4939_line) {
		_506_log._field_Line=_1bc24e0a4_GetRow((*((*(_4917_token))))._field_File, (*((*(_4917_token))))._field_Row);
	};
	return _506_log;;
}



inline void _1bc4081c5_appendRetVars(jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _6323_dest, jule::Ptr<_1bc302113_FnIns>* _6342_f) {
	if ((_1bc2ee50b_IsVoid((*((*(_6342_f))))._field_Decl.ptr()) || ((*((*(_6342_f))))._field_Result == nullptr))) {
		return;;
	};
	jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _686_types = _1bc303345_Types((*(_6342_f)).ptr());;
	{
		auto expr = &((*((*((*((*(_6342_f))))._field_Decl))._field_Result))._field_Idents);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31e2838:;
		if (it != expr_end) {
			jule::I32 _697_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _6914_ident = *it;
			{
				if ((_1bc2498eb_IsIgnoreIdent((*(_6914_ident))._field_Kind) || _1bc249bb5_IsAnonIdent((*_6914_ident.alloc)._field_Kind))) {
					goto _iter_next_1c31e2838;
				};
				{ jule::Slice<jule::Ptr<_1bc42dc12_Var>> &__jule_push_dest = (*(_6323_dest)); __jule_push_dest.push(jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=(*((*(_6342_f))))._field_Scope, ._field_Token=_6914_ident, ._field_Ident=(*(_6914_ident))._field_Kind, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=_686_types[_697_i]}), ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=_697_i, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)})); };
			}
			_iter_next_1c31e2838:;
			++it;
			_697_i++;
			goto _iter_begin_1c31e2838;
		}
		_iter_end_1c31e2838:;
	};
	if ((((*(*((*((*(_6342_f))))._field_Decl))._field_Result.alloc)._field_Idents.len() == 1LL) && ((*(_6323_dest)).len() == 1LL))) {
		(*((*(_6323_dest))[((*(_6323_dest)).len() - 1LL)]))._field_RetOrder=-1LL;
	};
}



inline void _1bc408505_appendParamVars(jule::Slice<jule::Ptr<_1bc42dc12_Var>>* _9325_dest, jule::Ptr<_1bc302113_FnIns>* _9344_f) {
	if (((*((*(_9344_f))))._field_Params.len() == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_9344_f))))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c31e719a:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> _9814_p = *it;
			{
				if ((_1bc2498eb_IsIgnoreIdent((*((*(_9814_p))._field_Decl))._field_Ident) || _1bc249bb5_IsAnonIdent((*(*(_9814_p))._field_Decl.alloc)._field_Ident))) {
					goto _iter_next_1c31e719a;
				};
				jule::Ptr<_1bc42dc12_Var> _1037_v = jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=(*((*(_9344_f))))._field_Scope, ._field_Token=(*(*(_9814_p))._field_Decl.alloc)._field_Token, ._field_Ident=(*(*(_9814_p))._field_Decl.alloc)._field_Ident, ._field_Binded=false, ._field_Constant=false, ._field_Mutable=(*(*(_9814_p))._field_Decl.alloc)._field_Mutable, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=(*((*(_9814_p))._field_Decl))._field_Reference, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr)}), ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
				{
					
					if (_1bc2ecbd0_IsSelf((*(_9814_p))._field_Decl)) {
						_case_begin_1c31eb116:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_9344_f))))._field_Owner, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)});
							(*_1037_v.alloc)._field_Reference=(!(_1bc2ece66_IsRef((*(_9814_p))._field_Decl)));
							if (_1bc2ece66_IsRef((*(_9814_p))._field_Decl)) {
								((*(_1037_v))._field_Ident).mut_slice(1LL);;
								(*((*(*(_1037_v))._field_TypeSym.alloc)._field_Type))._field_Kind=jule::Trait(jule::new_ptr<_1bc4c313b_Sptr>(_1bc4c313b_Sptr{._field_Elem=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*((*(_1037_v))._field_TypeSym))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23);
							};
						}
					}
					else if ((*(*(_9814_p))._field_Decl.alloc)._field_Variadic) {
						_case_begin_1c31eace7:;
						{
							(*((*(_1037_v))._field_TypeSym))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c3b0e_Slc>(_1bc4c3b0e_Slc{._field_Elem=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=(*((*_9814_p.alloc)._field_Type))._field_BindIdent, ._field_Generic=false, ._field_Variadic=false, ._field_Kind=(*(*(_9814_p))._field_Type.alloc)._field_Kind})}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data24)});
						}
					}
					else {
						_case_begin_1c31eac81:;
						{
							(*(*(_1037_v))._field_TypeSym.alloc)._field_Type=(*_9814_p.alloc)._field_Type;
						}
					}
					_match_end_1c31eab4e:;
				};
				{ jule::Slice<jule::Ptr<_1bc42dc12_Var>> &__jule_push_dest = (*(_9325_dest)); __jule_push_dest.push(_1037_v); };
			}
			_iter_next_1c31e719a:;
			++it;
			goto _iter_begin_1c31e719a;
		}
		_iter_end_1c31e719a:;
	};
}



inline void _1bc4087e1_appendGenericTypeAliases(jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>* _15334_dest, jule::Ptr<_1bc302113_FnIns>* _15359_f) {
	jule::I32 _1546_size = (*((*(_15359_f))))._field_Generics.len();;
	if (((*((*((*(_15359_f))))._field_Decl))._field_Owner != nullptr)) {
		_1546_size+=(*(*((*((*(_15359_f))))._field_Decl))._field_Owner.alloc)._field_Generics.len();
	};
	if ((_1546_size == 0LL)) {
		return;;
	};
	{
		auto expr = &((*((*(_15359_f))))._field_Generics);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3204790:;
		if (it != expr_end) {
			jule::I32 _1637_i = it - expr->begin();
			jule::Ptr<_1bc4b4b11_InsGeneric> _16314_g = *it;
			{
				if ((_16314_g == nullptr)) {
					goto _iter_next_1c3204790;
				};
				jule::Ptr<_1bc269b19_GenericDecl> _1677_decl = (*((*((*(_15359_f))))._field_Decl))._field_Generics[_1637_i];;
				{ jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_1bc4b5705_TypeAlias>(_1bc4b5705_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1677_decl.alloc)._field_Token, ._field_Ident=(*(_1677_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_16314_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr)})); };
			}
			_iter_next_1c3204790:;
			++it;
			_1637_i++;
			goto _iter_begin_1c3204790;
		}
		_iter_end_1c3204790:;
	};
	if (((*((*((*(_15359_f))))._field_Decl))._field_Owner != nullptr)) {
		jule::Ptr<_1bc2810c5_StructIns> _1797_owner = (*((*(_15359_f))))._field_Owner;;
		{
			auto expr = &((*(_1797_owner))._field_Generics);
			auto it = expr->begin();
			auto expr_end = expr->end();
			_iter_begin_1c3206132:;
			if (it != expr_end) {
				jule::I32 _1808_i = it - expr->begin();
				jule::Ptr<_1bc4b4b11_InsGeneric> _18015_g = *it;
				{
					jule::Ptr<_1bc269b19_GenericDecl> _1818_decl = (*((*(_1797_owner))._field_Decl))._field_Generics[_1808_i];;
					{ jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>> &__jule_push_dest = (*(_15334_dest)); __jule_push_dest.push(jule::new_ptr<_1bc4b5705_TypeAlias>(_1bc4b5705_TypeAlias{._field_Scope=(*(*((*(_15359_f))))._field_Decl.alloc)._field_Scope, ._field_Public=false, ._field_Binded=false, ._field_Used=true, ._field_Generic=true, ._field_Token=(*_1818_decl.alloc)._field_Token, ._field_Ident=(*(_1818_decl))._field_Ident, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_18015_g))._field_Type}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr)})); };
				}
				_iter_next_1c3206132:;
				++it;
				_1808_i++;
				goto _iter_begin_1c3206132;
			}
			_iter_end_1c3206132:;
		};
	};
}



inline jule::Ptr<_1bc305358_SymTab> _1bc408b65_findFile(jule::Slice<jule::Ptr<_1bc305358_SymTab>>* _19418_files, jule::Ptr<_1bc24cab9_Fileset>* _19437_handler) {
	{
		auto expr = _19418_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c320a202:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _19514_fl = *it;
			{
				if (((*(_19514_fl))._field_File == (*(_19437_handler)))) {
					return _19514_fl;;
				};
			}
			_iter_next_1c320a202:;
			++it;
			goto _iter_begin_1c320a202;
		}
		_iter_end_1c320a202:;
	};
	return nullptr;;
}



inline void _1bc40900b_pushSuggestion(_1a9575ca1_Log* _20330_log, jule::Str _20348_fmt, jule::Slice<jule::Any> _20368_args) {
	(*(_20330_log))._field_Suggestion=_1a9576213_Logf(_20348_fmt, _20368_args);
}



inline void _1bc42bb66_pushImplemented(jule::Ptr<_1bc309769_Trait> _279824_t, jule::Ptr<_1bc27d26a_Struct>* _279840_d) {
	_julec_label_1c3209cc3:;
	{
		
		if (((*(_279824_t))._field_Implemented.len() > 0LL)) {
			_case_begin_1c320ce2a:;
			{
				{
					auto expr = &((*_279824_t.alloc)._field_Implemented);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c320d898:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> _280210_s = *it;
						{
							if ((_280210_s == (*(_279840_d)))) {
								goto _match_end_1c320c3ad;
							};
						}
						_iter_next_1c320d898:;
						++it;
						goto _iter_begin_1c320d898;
					}
					_iter_end_1c320d898:;
				};
				goto _case_begin_1c320c468;
			}
		}
		else {
			_case_begin_1c320c468:;
			{
				(*(_279824_t))._field_Implemented=jule::append((*_279824_t.alloc)._field_Implemented,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc27d26a_Struct>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_279840_d)); __jule_collection; }));
			}
		}
		_match_end_1c320c3ad:;
	};
	{
		auto expr = &((*(_279824_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c320dc61:;
		if (it != expr_end) {
			jule::Ptr<_1bc4bdc08_TypeSym> _281114_i = *it;
			{
				_1bc42bb66_pushImplemented(_1bc4ba4a7_Trait((*(_281114_i))._field_Type.ptr()), _279840_d);
			}
			_iter_next_1c320dc61:;
			++it;
			goto _iter_begin_1c320dc61;
		}
		_iter_end_1c320dc61:;
	};
}



inline void _1bc42be52_pushImplements(jule::Ptr<_1bc27d26a_Struct>* _281624_s, jule::Ptr<_1bc309769_Trait> _281640_t) {
	_julec_label_1c320c820:;
	{
		
		if (((*((*(_281624_s))))._field_Implements.len() > 0LL)) {
			_case_begin_1c32109bb:;
			{
				{
					auto expr = &((*((*(_281624_s))))._field_Implements);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c3211439:;
					if (it != expr_end) {
						jule::Ptr<_1bc309769_Trait> _282010_b = *it;
						{
							if ((_282010_b == _281640_t)) {
								goto _match_end_1c320ee60;
							};
						}
						_iter_next_1c3211439:;
						++it;
						goto _iter_begin_1c3211439;
					}
					_iter_end_1c3211439:;
				};
				goto _case_begin_1c3210009;
			}
		}
		else {
			_case_begin_1c3210009:;
			{
				{ jule::Slice<jule::Ptr<_1bc309769_Trait>> &__jule_push_dest = (*((*(_281624_s))))._field_Implements; __jule_push_dest.push(_281640_t); };
			}
		}
		_match_end_1c320ee60:;
	};
	{
		auto expr = &((*(_281640_t))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3211802:;
		if (it != expr_end) {
			jule::Ptr<_1bc4bdc08_TypeSym> _282914_i = *it;
			{
				_1bc42be52_pushImplements(_281624_s, _1bc4ba4a7_Trait((*(_282914_i))._field_Type.ptr()));
			}
			_iter_next_1c3211802:;
			++it;
			goto _iter_begin_1c3211802;
		}
		_iter_end_1c3211802:;
	};
}



inline void _1bc42c3a3_pushRuntimeToStr(jule::Ptr<_1bc409eeb_sema>* _283426_s, jule::Ptr<_1bc4b64e7_Type>* _283441_t, jule::Ptr<_1bc247014_Token>* _283456_token, jule::Ptr<_1bc3cab26_ReferenceStack> _28356_refers) {
	if ((((*((*((*(_283426_s))))._field_meta))._field_runtime == nullptr) || _1bc4b762a_IsNil((*(_283441_t)).ptr()))) {
		return;;
	};
	jule::Ptr<_1bc302113_FnIns> _28396_f = _1bc300562_instanceForce(_1bb4732c9_runtimeFindFn(&((*((*((*(_283426_s))))._field_meta))._field_runtime), static_cast<jule::Str>(jule::Str::lit("toStr", 5))));;
	(*(_28396_f))._field_Generics=jule::append((*_28396_f.alloc)._field_Generics,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::new_ptr<_1bc4b4b11_InsGeneric>(_1bc4b4b11_InsGeneric{._field_Type=(*(_283441_t)), ._field_Constraint=jule::Slice<jule::Ptr<_1bc4b64e7_Type>>(nullptr)}); __jule_collection; }));
	jule::Bool _28412_ok;
	({
		__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bc425951_checkGenericFn((*(_283426_s)), &(_28396_f), _283456_token);
		_28412_ok = __jule_assign_result.__jule_result_arg0;
	});
	if ((!(_28412_ok))) {
		__jule_panic_s(jule::Str::lit("sema: toStr evaluation failed, this is an implementation mistake", 64) + jule::Str("\nlocation: std/jule/sema/sema.jule:2843:3"));;
	};
	if ((_28356_refers != nullptr)) {
		_1bc3cb97e_Push(_28356_refers, jule::Any(_28396_f, &__jule_any_type65));
	};
}



inline jule::Bool _1bc42c66c_isValidImpAlias(jule::Str _285224_alias) {
	jule::Bool __jule_func_result = false;
	if (_1bc2498eb_IsIgnoreIdent(_285224_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	if (_1bc24abb6_IsKeyword(_285224_alias)) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	jule::I32 _28596_r;
	jule::I32 _285913_size;
	({
		__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_285224_alias);
		_28596_r = __jule_assign_result.__jule_result_arg0;
		_285913_size = __jule_assign_result.__jule_result_arg1;
	});
	if (((_28596_r != '_') && (!(_1bc24a743_IsLetter(_28596_r))))) {
		__jule_func_result = false;
		return __jule_func_result;;
	};
	for (;;) {
		{
			(_285224_alias).mut_slice(_285913_size);;
			if ((_285224_alias.len() == 0LL)) {
				goto _iter_end_1c321a575;
			};
			({
				__jule_tuple_i32__jule_tuple_int __jule_assign_result = _1a952de57_DecodeRuneStr(_285224_alias);
				_28596_r = __jule_assign_result.__jule_result_arg0;
				_285913_size = __jule_assign_result.__jule_result_arg1;
			});
			if ((((_28596_r != '_') && (!((('0' <= _28596_r) && (_28596_r <= '9'))))) && (!(_1bc24a743_IsLetter(_28596_r))))) {
				__jule_func_result = false;
				return __jule_func_result;;
			};
		}
	_iter_next_1c321a575:;
	}
	_iter_end_1c321a575:;;
	__jule_func_result = true;
	return __jule_func_result;;
}



inline jule::Bool _1bc46d427_traitHasReferenceReceiver(jule::Ptr<_1bc309769_Trait>* _1631_t) {
	{
		auto expr = &((*((*(_1631_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c11093de:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> *_179_f = it;
			{
				if ((*((*(_179_f))))._field_Statically) {
					goto _iter_next_1c11093de;
				};
				jule::Ptr<_1bc2ec581_Param> _233_p = (*((*(_179_f))))._field_Params[0LL];;
				if ((_1bc2ece66_IsRef(_233_p.ptr()) && _1bc2ecbd0_IsSelf(_233_p))) {
					return true;;
				};
			}
			_iter_next_1c11093de:;
			++it;
			goto _iter_begin_1c11093de;
		}
		_iter_end_1c11093de:;
	};
	return false;;
}



inline jule::Bool _1bc46d7e0_floatAssignable(jule::Str* _3121_kind, jule::Ptr<_1bc48354c_Data>* _3133_d) {
	jule::Str _322_value = _1ac57a1d1_FmtFloat(_1bac27c16_AsF64((*((*(_3133_d))))._field_Constant.ptr()), 'g', -1LL, 64LL);;
	return _1bc375d13_CheckBitFloat(_322_value, _1bc37486c_BitSizeOf((*(_3121_kind))));;
}



inline jule::Bool _1bc46db64_sigAssignable(jule::Str _3618_kind, jule::Ptr<_1bc48354c_Data>* _3630_d) {
	jule::F64 _372_min = _1bc37ae5b_Min(_3618_kind);;
	jule::F64 _382_max = _1bc37b1e2_Max(_3618_kind);;
	{
		
		if (_1bac29a5e_IsF64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1c0e9648a:;
			{
				jule::F64 _413_x = _1bac27463_ReadF64((*((*(_3630_d))))._field_Constant);;
				jule::F64 _423_i;
				jule::F64 _426_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ac550cde_Modf(_413_x);
					_423_i = __jule_assign_result.__jule_result_arg0;
					_426_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_426_frac != 0LL)) {
					return false;;
				};
				return ((_423_i >= _372_min) && (_423_i <= _382_max));;
			}
		}
		else if (_1bac292ab_IsU64((*((*(_3630_d))))._field_Constant.ptr())) {
			_case_begin_1c0e95e90:;
			{
				jule::F64 _483_x = _1bac27c16_AsF64((*((*(_3630_d))))._field_Constant);;
				if ((_483_x <= _382_max)) {
					return true;;
				};
			}
		}
		else if (_1bac29025_IsI64((*((*(_3630_d))))._field_Constant)) {
			_case_begin_1c0e96006:;
			{
				jule::F64 _533_x = _1bac27c16_AsF64((*((*(_3630_d))))._field_Constant);;
				return ((_372_min <= _533_x) && (_533_x <= _382_max));;
			}
		}
		_match_end_1c110cd60:;
	};
	return false;;
}



inline jule::Bool _1bc46e02c_unsigAssignable(jule::Str _5920_kind, jule::Ptr<_1bc48354c_Data>* _5932_d) {
	jule::F64 _602_max = _1bc37b1e2_Max(_5920_kind);;
	if (((*((*(_5932_d))))._field_IsRune && (_5920_kind == static_cast<jule::Str>(jule::Str::lit("u8", 2))))) {
		return _1bc46a0b1_IsAscii(static_cast<jule::I32>(_1bac26929_ReadI64((*((*(_5932_d))))._field_Constant.ptr())));;
	};
	{
		
		if (_1bac29a5e_IsF64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_1c3588dbb:;
			{
				jule::F64 _673_x = _1bac27463_ReadF64((*((*(_5932_d))))._field_Constant);;
				if ((_673_x < 0LL)) {
					return false;;
				};
				jule::F64 _713_i;
				jule::F64 _716_frac;
				({
					__jule_tuple_f64__jule_tuple_f64 __jule_assign_result = _1ac550cde_Modf(_673_x);
					_713_i = __jule_assign_result.__jule_result_arg0;
					_716_frac = __jule_assign_result.__jule_result_arg1;
				});
				if ((_716_frac != 0LL)) {
					return false;;
				};
				return (_713_i <= _602_max);;
			}
		}
		else if (_1bac292ab_IsU64((*((*(_5932_d))))._field_Constant.ptr())) {
			_case_begin_1c3588e65:;
			{
				jule::F64 _773_x = _1bac27c16_AsF64((*((*(_5932_d))))._field_Constant);;
				if ((_773_x <= _602_max)) {
					return true;;
				};
			}
		}
		else if (_1bac29025_IsI64((*((*(_5932_d))))._field_Constant)) {
			_case_begin_1c3588ecb:;
			{
				jule::F64 _823_x = _1bac27c16_AsF64((*((*(_5932_d))))._field_Constant);;
				return ((0LL <= _823_x) && (_823_x <= _602_max));;
			}
		}
		_match_end_1c358833d:;
	};
	return false;;
}



inline jule::Bool _1bc46e3a1_intAssignable(jule::Str _8818_kind, jule::Ptr<_1bc48354c_Data>* _8830_d) {
	{
		
		if (_1bc37c314_IsSigInt(_8818_kind)) {
			_case_begin_1c358ddc1:;
			{
				return _1bc46db64_sigAssignable(_8818_kind, _8830_d);;
			}
		}
		else if (_1bc37c622_IsUnsigInt(_8818_kind)) {
			_case_begin_1c358e2cd:;
			{
				return _1bc46e02c_unsigAssignable(_8818_kind, _8830_d);;
			}
		}
		else {
			_case_begin_1c358dd49:;
			{
				return false;;
			}
		}
		_match_end_1c358dc39:;
	};
}



inline void _1bc47a896_checkMutRiskOfStructLit(jule::Ptr<_1bc409eeb_sema>* _90933_s, jule::Ptr<_1bc2e2a3d_StructLitExprModel>* _90944_m) {
	{
		auto expr = &((*((*(_90944_m))))._field_Args);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c359009d:;
		if (it != expr_end) {
			jule::Ptr<_1bc2e2697_StructArgExprModel> *_9109_arg = it;
			{
				if ((*((*((*((*(_9109_arg))))._field_Field))._field_Decl))._field_Mutable) {
					goto _iter_next_1c359009d;
				};
				if (((!((*((*((*(_9109_arg))))._field_Expr))._field_Mutable)) && _1bc4b7dcd_Mutable((*(*((*(_9109_arg))))._field_Expr.alloc)._field_Type.ptr()))) {
					_1bc40ce00_pushErr((*(_90933_s)).ptr(), (*(*(_9109_arg)).alloc)._field_Token, static_cast<jule::Str>(jule::Str::lit("immutable data cannot assign to mutable storage because of @ type which is mutable", 82)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*((*(_9109_arg))))._field_Expr))._field_Type), &__jule_any_type5); __jule_collection; }));
				};
			}
			_iter_next_1c359009d:;
			++it;
			goto _iter_begin_1c359009d;
		}
		_iter_end_1c359009d:;
	};
}



inline jule::Ptr<_1bc4b64e7_Type> _1bc4817ae_lenKind(void) {
	return _1bc53a58d_primInt;;
}



inline jule::Bool _1bc481b11_isGoodValueToInfer(jule::Ptr<_1bc48354c_Data>* _141424_d) {
	return (!(_1bc48396a_IsNil((*(_141424_d)).ptr())));;
}



inline jule::Ptr<_1bc25bd2b_Directive> _1bc4acc6e_findDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _436623_directives, jule::Str _436654_d) {
	{
		auto expr = _436623_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c372ce72:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _436714_dr = *it;
			{
				if (((*((*(_436714_dr))._field_Tag))._field_Kind == _436654_d)) {
					return _436714_dr;;
				};
			}
			_iter_next_1c372ce72:;
			++it;
			goto _iter_begin_1c372ce72;
		}
		_iter_end_1c372ce72:;
	};
	return nullptr;;
}



inline jule::Any _1bc4ad137_findBuiltinsImport(jule::Str* _437524_ident, jule::Ptr<_1bc3dcb9e_ImportInfo> _437536_imp) {
	return _1bc53d8d2_findPackageBuiltinDef(&((*(_437536_imp))._field_LinkPath), _437524_ident);;
}



inline void _1bc4ad368_fitBitsize(jule::Ptr<_1bc48354c_Data>* _438420_d) {
	jule::Ptr<_1bc4be610_Prim> _43856_prim = _1bc4b8b9d_Prim((*((*(_438420_d))))._field_Type.ptr());;
	jule::I32 _43862_z = _1bc37486c_BitSizeOf(_1bc4be984_Str(_43856_prim.ptr()));;
	{
		
		if (_1bac29025_IsI64((*((*(_438420_d))))._field_Constant.ptr())) {
			_case_begin_1c37306c2:;
			{
				jule::I32 _43893_k = _1bc376396_BitSizeOfInt(_1bac26929_ReadI64((*((*(_438420_d))))._field_Constant));;
				if (((_43893_k > _43862_z) || _1bc37c622_IsUnsigInt((*_43856_prim.alloc)._field_Kind))) {
					(*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind=_1bc374bad_IntFromBits(_43893_k);
					(*((*(_438420_d))))._field_Type=(*((*(_1bc53c8e2_findBuiltinTypeAlias((*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1bac292ab_IsU64((*((*(_438420_d))))._field_Constant.ptr())) {
			_case_begin_1c3730738:;
			{
				jule::I32 _43953_k = _1bc376660_BitSizeOfUint(_1bac26bb0_ReadU64((*((*(_438420_d))))._field_Constant));;
				if (((_43953_k > _43862_z) || _1bc37c314_IsSigInt((*_43856_prim.alloc)._field_Kind))) {
					(*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind=_1bc374e44_UintFromBits(_43953_k);
					(*((*(_438420_d))))._field_Type=(*((*(_1bc53c8e2_findBuiltinTypeAlias((*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind)))._field_TypeSym))._field_Type;
				};
			}
		}
		else if (_1bac29a5e_IsF64((*((*(_438420_d))))._field_Constant)) {
			_case_begin_1c37307b0:;
			{
				if ((_43862_z == 64LLU)) {
					return;;
				};
				jule::I32 _44053_k = _1bc3760cc_BitSizeOfFloat(_1bac27463_ReadF64((*((*(_438420_d))))._field_Constant));;
				if ((_44053_k > _43862_z)) {
					(*(*((*(_438420_d))))._field_Constant.alloc)._field_Kind=_1bc37520d_FloatFromBits(_44053_k);
					(*((*(_438420_d))))._field_Type=(*(*(_1bc53c8e2_findBuiltinTypeAlias((*((*((*(_438420_d))))._field_Constant))._field_Kind)))._field_TypeSym.alloc)._field_Type;
				};
			}
		}
		_match_end_1c37305a1:;
	};
}



inline void _1bc4ad698_makeStructLitAlloc(jule::Ptr<_1bc48354c_Data>* _441328_d, jule::Ptr<_1bc2e2a3d_StructLitExprModel>* _441343_lit) {
	(*((*(_441328_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c313b_Sptr>(_1bc4c313b_Sptr{._field_Elem=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*((*(_441343_lit))))._field_Strct, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)});
	(*((*(_441328_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e2d3a_AllocStructLitExprModel>(_1bc2e2d3a_AllocStructLitExprModel{._field_Lit=(*(_441343_lit))}), &__jule_any_type115);
}



inline jule::Ptr<_1bc42dc12_Var> _1bc4ada1c_buildErrorVar(jule::Ptr<_1bc3abd27_Scope>* _442423_s, jule::Ptr<_1bc26596c_FnCallExpr>* _442439_fc) {
	return jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=(*(_442423_s)), ._field_Token=(*((*(_442439_fc))))._field_Token, ._field_Ident=jule::Str::lit("error", 5), ._field_Binded=false, ._field_Constant=false, ._field_Mutable=true, ._field_Public=false, ._field_Used=true, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(static_cast<jule::Str>(jule::Str::lit("any", 3)))))._field_TypeSym, ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)})}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
}



inline jule::Any _1bc4add91_findBuiltinsSema(jule::Str* _443922_ident, jule::Ptr<_1bc409eeb_sema> _443938_s) {
	jule::Str _44416_ppath = _1bc24d746_Dir((*((*(_443938_s))._field_file))._field_File.ptr());;
	if (_1abb2d9c7_HasPrefix(_44416_ppath, _1abb3dc7e_PathStdlib)) {
		(_44416_ppath).mut_slice(_1abb3dc7e_PathStdlib.len());;
		_44416_ppath=(jule::Str::lit("std", 3) + _1abb34b21_ReplaceAll(_44416_ppath, jule::Str::lit("/", 1), jule::Str::lit("/", 1)));
		return _1bc53d8d2_findPackageBuiltinDef(&(_44416_ppath), _443922_ident);;
	};
	return nullptr;;
}



inline jule::Bool _1bc4ae15a_isOkForShifting(jule::Ptr<_1bc48354c_Data>* _445425_d) {
	if (_1bc483e87_IsConst((*(_445425_d)).ptr())) {
		{
			
			if (_1bac29025_IsI64((*((*(_445425_d))))._field_Constant.ptr())) {
				_case_begin_1c3300b77:;
				{
					return (_1bac26929_ReadI64((*((*(_445425_d))))._field_Constant) >= 0LL);;
				}
			}
			else if (_1bac292ab_IsU64((*((*(_445425_d))))._field_Constant.ptr())) {
				_case_begin_1c3300c21:;
				{
					return true;;
				}
			}
			else if (_1bac29a5e_IsF64((*((*(_445425_d))))._field_Constant)) {
				_case_begin_1c3300c98:;
				{
					return (_1bac27463_ReadF64((*((*(_445425_d))))._field_Constant) >= 0LL);;
				}
			}
			else {
				_case_begin_1c3300ade:;
				{
					return false;;
				}
			}
			_match_end_1c3300a12:;
		};
	};
	jule::Ptr<_1bc4be610_Prim> _44672_prim = _1bc4b8b9d_Prim((*((*(_445425_d))))._field_Type.ptr());;
	return ((_44672_prim != nullptr) && _1bc37c8db_IsInt(_1bc4be984_Str(_44672_prim)));;
}



inline jule::Bool _1bc4ae534_isInstancedStruct(jule::Ptr<_1bc2810c5_StructIns> _447122_s) {
	return ((*((*(_447122_s))._field_Decl))._field_Generics.len() == (*_447122_s.alloc)._field_Generics.len());;
}



inline jule::Bool _1bc4ae831_isPtrArithmeticCompatible(jule::Ptr<_1bc48354c_Data>* _447535_l, jule::Ptr<_1bc48354c_Data>* _447550_r) {
	jule::Ptr<_1bc4c6903_Ptr> _44762_ptr = _1bc4b91ba_Ptr((*((*(_447550_r))))._field_Type.ptr());;
	if ((_44762_ptr != nullptr)) {
		return _1bc4b6c34_Equal((*(_1bc4b91ba_Ptr((*((*(_447535_l))))._field_Type)))._field_Elem, (*_44762_ptr.alloc)._field_Elem);;
	};
	if ((_1bc483e87_IsConst((*(_447550_r)).ptr()) && (*((*(_447550_r))))._field_untyped)) {
		return (_1bc46e3a1_intAssignable(static_cast<jule::Str>(jule::Str::lit("int", 3)), _447550_r) || _1bc46e3a1_intAssignable(static_cast<jule::Str>(jule::Str::lit("uint", 4)), _447550_r));;
	};
	_1bc46e88a_typeCompatibilityChecker _44856_tcc = _1bc46e88a_typeCompatibilityChecker{._field_s=jule::Ptr<_1bc409eeb_sema>(nullptr), ._field_dest=_1bc53a58d_primInt, ._field_src=(*((*(_447550_r))))._field_Type, ._field_errorToken=jule::Ptr<_1bc247014_Token>(nullptr)};;
	if (_1bc471084_check(&_44856_tcc)) {
		return true;;
	};
	_44856_tcc._field_dest=_1bc53a1c5_primUint;
	return _1bc471084_check(&_44856_tcc);;
}



inline void _1bc4aed3c_applyRuntimeToStr(jule::Ptr<_1bc409eeb_sema>* _449627_s, jule::Ptr<_1bc4b64e7_Type>* _449642_from, jule::Ptr<_1bc4b64e7_Type>* _449660_to, jule::Ptr<_1bc247014_Token>* _44977_token, jule::Ptr<_1bc3cab26_ReferenceStack> _449733_refers) {
	jule::Ptr<_1bc4be610_Prim> _44982_prim = _1bc4b8b9d_Prim((*(_449660_to)).ptr());;
	if ((_44982_prim != nullptr)) {
		if (_1bc4c2d61_IsAny(_44982_prim)) {
			_1bc42c3a3_pushRuntimeToStr(_449627_s, _449642_from, _44977_token, _449733_refers);
		};
		return;;
	};
	if ((_1bc4b96d7_TypeEnum((*(_449660_to)).ptr()) != nullptr)) {
		_1bc42c3a3_pushRuntimeToStr(_449627_s, _449642_from, _44977_token, _449733_refers);
		return;;
	};
}



inline void _1bc4b0348_applyCastKindModel(jule::Ptr<_1bc409eeb_sema>* _451128_s, jule::Ptr<_1bc48354c_Data>* _451143_d, jule::Ptr<_1bc4b64e7_Type>* _451158_t, jule::Ptr<_1bc247014_Token>* _45127_token, jule::Ptr<_1bc3cab26_ReferenceStack> _451233_refers) {
	_1bc4aed3c_applyRuntimeToStr(_451128_s, &((*((*(_451143_d))))._field_Type), _451158_t, _45127_token, _451233_refers);
	(*((*(_451143_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e33bd_CastingExprModel>(_1bc2e33bd_CastingExprModel{._field_Token=(*(_45127_token)), ._field_Expr=jule::new_ptr<_1bc48354c_Data>((*((*(_451143_d))))), ._field_Type=(*(_451158_t)), ._field_ExprType=(*((*(_451143_d))))._field_Type}), &__jule_any_type96);
}



inline void _1bc4b0854_applyCastKind(jule::Ptr<_1bc409eeb_sema>* _452223_s, jule::Ptr<_1bc48354c_Data>* _452238_d, jule::Ptr<_1bc4b64e7_Type>* _452253_t, jule::Ptr<_1bc247014_Token>* _45237_token, jule::Ptr<_1bc3cab26_ReferenceStack> _452333_refers) {
	_1bc4b0348_applyCastKindModel(_452223_s, _452238_d, _452253_t, _45237_token, _452333_refers);
	(*((*(_452238_d))))._field_Type=(*(_452253_t));
}



inline jule::Ptr<_1bc48354c_Data> _1bc4b0a63_buildVoidData(void) {
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc539306_primVoid, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Str _1bc4b104c_checkDataForIntegerIndexing(jule::Ptr<_1bc409eeb_sema>* _453437_s, jule::Ptr<_1bc48354c_Data>* _453452_d, jule::Ptr<_1bc247014_Token>* _45357_token, jule::Ptr<_1bc3cab26_ReferenceStack> _453533_refers) {
	jule::Str __jule_func_result = jule::Str();
	if (((*(_453452_d)) == nullptr)) {
		__jule_func_result = static_cast<jule::Str>(jule::Str());
		return __jule_func_result;;
	};
	{
		
		if ((_1bc4b8b9d_Prim((*((*(_453452_d))))._field_Type.ptr()) == nullptr)) {
			_case_begin_1c330d206:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if ((!(_1bc37c8db_IsInt(_1bc4be984_Str(_1bc4b8b9d_Prim((*((*(_453452_d))))._field_Type.ptr()).ptr()))))) {
			_case_begin_1c330d26c:;
			{
				__jule_func_result = static_cast<jule::Str>(jule::Str::lit("type @ is invalid for indexing", 30));
				return __jule_func_result;;
			}
		}
		else if (_1bc483e87_IsConst((*(_453452_d)).ptr())) {
			_case_begin_1c330d2d3:;
			{
				if ((_1bac27c16_AsF64((*((*(_453452_d))))._field_Constant.ptr()) < 0LL)) {
					__jule_func_result = static_cast<jule::Str>(jule::Str::lit("overflow the limit of data-type", 31));
					return __jule_func_result;;
				};
			}
		}
		else if ((_1bc4b8b9d_Prim((*((*(_453452_d))))._field_Type) == nullptr) || _1bc483e87_IsConst((*(_453452_d)).ptr()) || (_1bc3745a3_RealKindOf(_1bc4be984_Str(_1bc4b8b9d_Prim((*((*(_453452_d))))._field_Type).ptr())) != _1bc3745a3_RealKindOf(static_cast<jule::Str>(jule::Str::lit("int", 3))))) {
			_case_begin_1c330d349:;
			{
				_1bc4b0854_applyCastKind(_453437_s, _453452_d, &(_1bc53a58d_primInt), _45357_token, _453533_refers);
			}
		}
		_match_end_1c330ccd8:;
	};
	__jule_func_result = static_cast<jule::Str>(jule::Str());
	return __jule_func_result;;
}



inline void _1bc4b1558_applyCastModelByEnum(jule::Ptr<_1bc409eeb_sema>* _456030_s, jule::Ptr<_1bc48354c_Data>* _456045_d, jule::Ptr<_1bc30be20_Enum> _456059_e, jule::Ptr<_1bc247014_Token>* _45617_token, jule::Ptr<_1bc3cab26_ReferenceStack> _456133_refers) {
	if ((_456059_e == nullptr)) {
		return;;
	};
	_1bc4b0348_applyCastKindModel(_456030_s, _456045_d, &((*((*(_456059_e))._field_TypeSym))._field_Type), _45617_token, _456133_refers);
}



inline void _1bc4b1a75_castConstByType(jule::Str* _456821_t, jule::Ptr<_1bc48354c_Data>* _456834_d) {
	{
		
		if (_1bc37c314_IsSigInt((*(_456821_t)))) {
			_case_begin_1c04c4414:;
			{
				{
					auto _match_expr{ _1bc37486c_BitSizeOf(_1bc3745a3_RealKindOf((*(_456821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c04c4ed6:;
						{
							_1bac27ebe_SetI64((*((*(_456834_d))))._field_Constant.ptr(), _1bac276e9_AsI64((*((*(_456834_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c04c506e:;
						{
							_1bac27ebe_SetI64((*((*(_456834_d))))._field_Constant.ptr(), static_cast<jule::I64>(static_cast<jule::I32>(_1bac276e9_AsI64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c04c50d5:;
						{
							_1bac27ebe_SetI64((*((*(_456834_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I16>(_1bac276e9_AsI64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c04c514b:;
						{
							_1bac27ebe_SetI64((*((*(_456834_d))))._field_Constant, static_cast<jule::I64>(static_cast<jule::I8>(_1bac276e9_AsI64((*((*(_456834_d))))._field_Constant))));
						}
					}
					_match_end_1c04c4e70:;
				};
			}
		}
		else if (_1bc37c622_IsUnsigInt((*(_456821_t)))) {
			_case_begin_1c04c44ad:;
			{
				{
					auto _match_expr{ _1bc37486c_BitSizeOf(_1bc3745a3_RealKindOf((*(_456821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c3310109:;
						{
							_1bac28277_SetU64((*((*(_456834_d))))._field_Constant.ptr(), _1bac27980_AsU64((*((*(_456834_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c3310170:;
						{
							_1bac28277_SetU64((*((*(_456834_d))))._field_Constant.ptr(), static_cast<jule::U64>(static_cast<jule::U32>(_1bac27980_AsU64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 16LLU) {
						_case_begin_1c33101d6:;
						{
							_1bac28277_SetU64((*((*(_456834_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U16>(_1bac27980_AsU64((*((*(_456834_d))))._field_Constant))));
						}
					}
					else if (_match_expr == 8LLU) {
						_case_begin_1c331024c:;
						{
							_1bac28277_SetU64((*((*(_456834_d))))._field_Constant, static_cast<jule::U64>(static_cast<jule::U8>(_1bac27980_AsU64((*((*(_456834_d))))._field_Constant))));
						}
					}
					_match_end_1c331004e:;
				};
			}
		}
		else if (_1bc37cc2c_IsFloat((*(_456821_t)))) {
			_case_begin_1c04c4524:;
			{
				{
					auto _match_expr{ _1bc37486c_BitSizeOf(_1bc3745a3_RealKindOf((*(_456821_t)))) };
					
					if (_match_expr == 64LLU) {
						_case_begin_1c331144b:;
						{
							_1bac28a91_SetF64((*((*(_456834_d))))._field_Constant, _1bac27c16_AsF64((*((*(_456834_d))))._field_Constant));
						}
					}
					else if (_match_expr == 32LLU) {
						_case_begin_1c33142a6:;
						{
							_1bac28a91_SetF64((*((*(_456834_d))))._field_Constant, static_cast<jule::F64>(static_cast<jule::F32>(_1bac27c16_AsF64((*((*(_456834_d))))._field_Constant))));
						}
					}
					_match_end_1c3314240:;
				};
			}
		}
		_match_end_1c04c42b0:;
	};
}



inline void _1bc4b1c51_updateModelToGenericIns(jule::Any* _460233_m, jule::Ptr<_1bc302113_FnIns>* _460252_f) {
	{
		auto &_match_expr{ (*(_460233_m)) };
		
		if (_match_expr.type == &__jule_any_type65) {
			_case_begin_1c33165b6:;
			{
				(*(_460233_m))=jule::Any((*(_460252_f)), &__jule_any_type65);
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c330b4bd:;
			{
				(*((*(_460233_m)).cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101)))._field_Method=(*(_460252_f));
			}
		}
		else if (_match_expr.type == &__jule_any_type99) {
			_case_begin_1c331664e:;
			{
				(*((*(_460233_m)).cast_ptr<_1bc2e6ba7_StructStaticIdentExprModel>(&__jule_any_type99)))._field_Method=(*(_460252_f));
			}
		}
		_match_end_1c3316550:;
	};
}



inline jule::Bool _1bc4b20c5_pushSubIdentFromExpr(jule::Any _461329_expr, jule::Ptr<_1bc25d2d3_SubIdentTypeDecl>* _461355_t) {
	{
		auto &_match_expr{ _461329_expr };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c3317d59:;
			{
				jule::Ptr<_1bc26355d_IdentExpr> _46167_e = _461329_expr.unsafe_cast_ptr<_1bc26355d_IdentExpr>();;
				{ jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>> &__jule_push_dest = (*((*(_461355_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*(_46167_e))._field_Token, ._field_Ident=(*_46167_e.alloc)._field_Ident, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)})); };
			}
		}
		else if (_match_expr.type == &__jule_any_type89) {
			_case_begin_1c3318981:;
			{
				jule::Ptr<_1bc264d56_SubIdentExpr> _46227_e = _461329_expr.unsafe_cast_ptr<_1bc264d56_SubIdentExpr>();;
				if ((!(_1bc4b20c5_pushSubIdentFromExpr((*((*(_46227_e))._field_Expr))._field_Kind, _461355_t)))) {
					return false;;
				};
				{ jule::Slice<jule::Ptr<_1bc25d019_IdentTypeDecl>> &__jule_push_dest = (*((*(_461355_t))))._field_Idents; __jule_push_dest.push(jule::new_ptr<_1bc25d019_IdentTypeDecl>(_1bc25d019_IdentTypeDecl{._field_Token=(*(_46227_e))._field_Ident, ._field_Ident=(*((*_46227_e.alloc)._field_Ident))._field_Kind, ._field_Binded=false, ._field_Generics=jule::Slice<jule::Ptr<_1bc25c90e_TypeDecl>>(nullptr)})); };
			}
		}
		else {
			_case_begin_1c331851e:;
			{
				return false;;
			}
		}
		_match_end_1c33184a8:;
	};
	return true;;
}



inline jule::Str _1bc4b238e_constoa(jule::Ptr<_1bac25065_Const>* _463613_c) {
	{
		
		if (_1bac29025_IsI64((*(_463613_c)).ptr())) {
			_case_begin_1c331e2d3:;
			{
				return _1ac596807_FmtInt(_1bac26929_ReadI64((*(_463613_c)).ptr()), 10LL);;
			}
		}
		else if (_1bac292ab_IsU64((*(_463613_c)).ptr())) {
			_case_begin_1c331e36b:;
			{
				return _1ac59643e_FmtUint(_1bac26bb0_ReadU64((*(_463613_c)).ptr()), 10LL);;
			}
		}
		else {
			_case_begin_1c331cd92:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c331cb2d:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc4b2933_evalEnumStatic(jule::Ptr<_1bc409eeb_sema>* _464724_s, jule::Ptr<_1bc30be20_Enum>* _464739_enm, jule::Ptr<_1bc30b3b4_EnumItem>* _464756_item, jule::Ptr<_1bc247014_Token>* _46487_token, jule::Ptr<_1bc3cab26_ReferenceStack> _464833_refers) {
	jule::Ptr<_1bc48354c_Data> _46496_d = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(_464739_enm)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data3)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	if (((*(_464756_item)) != nullptr)) {
		(*(_46496_d))._field_Constant=jule::new_ptr<_1bac25065_Const>((*(*((*((*((*(_464756_item))))._field_Value))._field_Data))._field_Constant.alloc));
		(*_46496_d.alloc)._field_Model=jule::Any((*_46496_d.alloc)._field_Constant, &__jule_any_type15);
		_1bc4b1558_applyCastModelByEnum(_464724_s, &(_46496_d), (*(_464739_enm)), _46487_token, _464833_refers);
	};
	return _46496_d;;
}



inline jule::Ptr<_1bc2e2a3d_StructLitExprModel> _1bc4b2bec_isLitBased(jule::Any* _466520_m) {
	{
		auto &_match_expr{ (*(_466520_m)) };
		
		if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c382eaac:;
			{
				return (*(_466520_m)).cast_ptr<_1bc2e2a3d_StructLitExprModel>(&__jule_any_type98);;
			}
		}
		else if (_match_expr.type == &__jule_any_type115) {
			_case_begin_1c382eb23:;
			{
				return (*((*(_466520_m)).cast_ptr<_1bc2e2d3a_AllocStructLitExprModel>(&__jule_any_type115)))._field_Lit;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c382eb89:;
			{
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _46727_ssi = (*(_466520_m)).cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				return _1bc4b2bec_isLitBased(&((*((*(_46727_ssi))._field_Expr))._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c382ec00:;
			{
				jule::Ptr<_1bc2e33bd_CastingExprModel> _46757_c = (*(_466520_m)).cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96);;
				return _1bc4b2bec_isLitBased(&((*((*(_46757_c))._field_Expr))._field_Model));;
			}
		}
		else {
			_case_begin_1c382e67d:;
			{
				return nullptr;;
			}
		}
		_match_end_1c382e617:;
	};
}



inline void _1bc4b2ed8_makeImplicitDeref(jule::Ptr<_1bc48354c_Data>* _468227_d, jule::Ptr<_1bc247014_Token> _468241_baseToken) {
	jule::Ptr<_1bc2e2169_UnaryExprModel> _46836_unary = jule::new_ptr<_1bc2e2169_UnaryExprModel>(_1bc2e2169_UnaryExprModel{._field_Expr=jule::new_ptr<_1bc48354c_Data>((*((*(_468227_d))))), ._field_Op=jule::new_ptr<_1bc247014_Token>((*(_468241_baseToken)))});;
	(*((*(_46836_unary))._field_Op))._field_Id=static_cast<jule::U32>(62LLU);
	(*(*(_46836_unary))._field_Op.alloc)._field_Kind=static_cast<jule::Str>(jule::Str::lit("*", 1));
	(*((*(_468227_d))))._field_Model=jule::Any(_46836_unary, &__jule_any_type113);
}



inline void _1c3787284_updateRefer(jule::Ptr<_1bc3cab26_ReferenceStack> _469323_ref, jule::Ptr<_1bc302113_FnIns>* _469346_old, jule::Ptr<_1bc302113_FnIns>* _469359_new) {
	{
		auto expr = &((*(_469323_ref))._field_buffer);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3788b8c:;
		if (it != expr_end) {
			jule::I32 _46946_i = it - expr->begin();
			jule::Any _46949_sym = *it;
			{
				if ((jule::Any((*(_469346_old)), &__jule_any_type65) == _46949_sym)) {
					(*(_469323_ref))._field_buffer[_46946_i]=jule::Any((*(_469359_new)), &__jule_any_type65);
				};
			}
			_iter_next_1c3788b8c:;
			++it;
			_46946_i++;
			goto _iter_begin_1c3788b8c;
		}
		_iter_end_1c3788b8c:;
	};
}



inline void _1bc4b366a_makeVariadic(jule::Ptr<_1bc48354c_Data>* _470122_d, jule::Ptr<_1bc4b64e7_Type> _470136_elem) {
	(*((*(_470122_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=(*_470136_elem.alloc)._field_BindIdent, ._field_Generic=(*(_470136_elem))._field_Generic, ._field_Variadic=true, ._field_Kind=(*_470136_elem.alloc)._field_Kind});
}



inline jule::Bool _1bc4b3a99_isVarCaptured(jule::Ptr<_1bc3b448e_scopeChecker> _471518_r, jule::Ptr<_1bc3b448e_scopeChecker> _471540_s, jule::Ptr<_1bc42dc12_Var> _471558_v) {
	if (((*(_471558_v))._field_Scope == nullptr)) {
		return false;;
	};
	for (;;) {
		{
			if (((*(_471540_s))._field_scope == (*(_471558_v))._field_Scope)) {
				return false;;
			};
			if ((((*(_471540_s))._field_parent == nullptr) || (_471540_s == _471518_r))) {
				goto _iter_end_1c3602bd2;
			};
			_471540_s=(*(_471540_s))._field_parent;
		}
	_iter_next_1c3602bd2:;
	}
	_iter_end_1c3602bd2:;;
	return true;;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bc4b3e1d_findNamespace(jule::Trait _473222_lookup, jule::Str _473238_namespace) {
	return ((_1bc4d634c_LookupMptrData*)_473222_lookup.safe_type())->_1bc4d4636_SelectPackage(_473222_lookup.data, jule::__new_closure<jule::Bool,jule::Ptr<_1bc3dcb9e_ImportInfo>>((void*)__jule_anon_1c14b1224, jule::Ptr<__jule_anon_1c14b1224_ctx>::make(__jule_anon_1c14b1224_ctx{._473238_namespace=_473238_namespace}).as<jule::Uintptr>(), __jule_anon_1c14b1224_ctx_handler));;
}



inline jule::Bool _1bc4d269a_kindUsesGenerics(jule::Ptr<_1bc4b64e7_Type>* _172526_k, jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>* _172537_generics) {
	{
		auto expr = _172537_generics;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c354631d:;
		if (it != expr_end) {
			jule::Ptr<_1bc269b19_GenericDecl> *_17269_g = it;
			{
				if (static__1bc4d229e_exist(&((*((*(_17269_g))))._field_Ident), _172526_k)) {
					return true;;
				};
			}
			_iter_next_1c354631d:;
			++it;
			goto _iter_begin_1c354631d;
		}
		_iter_end_1c354631d:;
	};
	return false;;
}



inline jule::Bool _1bc4d2a63_hasDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _173522_directives, jule::Str _173553_tag) {
	{
		auto expr = _173522_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c35468c3:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _173614_dr = *it;
			{
				if (((*((*(_173614_dr))._field_Tag))._field_Kind == _173553_tag)) {
					return true;;
				};
			}
			_iter_next_1c35468c3:;
			++it;
			goto _iter_begin_1c35468c3;
		}
		_iter_end_1c35468c3:;
	};
	return false;;
}



inline jule::Bool _1bc4d2d2c_canGetPtr(jule::Ptr<_1bc48354c_Data>* _174419_d) {
	return (*((*(_174419_d))))._field_Lvalue;;
}



inline jule::Bool _1bc4d316d_isBuiltinStrConvertable(jule::Ptr<_1bc4b64e7_Type>* _174733_t) {
	return ((((!(_1bc4b78b1_Void((*(_174733_t)).ptr()))) && (_1bc4b9e8a_Fn((*(_174733_t)).ptr()) == nullptr)) && (_1bc4ba9c4_Tup((*(_174733_t)).ptr()) == nullptr)) && (!(_1bc4bac5a_comptime((*(_174733_t)).ptr()))));;
}



inline jule::Ptr<_1bc4be610_Prim> _1bc4d3404_buildPrimType(jule::Str _175118_kind) {
	return jule::new_ptr<_1bc4be610_Prim>(_1bc4be610_Prim{._field_Kind=_175118_kind});;
}



inline void _1bc4d3bc9_applyImplicitCast(jule::Ptr<_1bc409eeb_sema>* _177927_s, jule::Ptr<_1bc4b64e7_Type>* _177942_dest, jule::Ptr<_1bc48354c_Data>* _177960_d, jule::Ptr<_1bc247014_Token>* _17807_token, jule::Ptr<_1bc3cab26_ReferenceStack> _178033_refers) {
	if (_1bc4b762a_IsNil((*((*(_177960_d))))._field_Type.ptr())) {
		return;;
	};
	jule::Ptr<_1bc4be610_Prim> _17842_destPrim = _1bc4b8b9d_Prim((*(_177942_dest)).ptr());;
	if (((_17842_destPrim != nullptr) && _1bc4c2d61_IsAny(_17842_destPrim))) {
		jule::Ptr<_1bc4be610_Prim> _17863_prim = _1bc4b8b9d_Prim((*((*(_177960_d))))._field_Type.ptr());;
		if (((_17863_prim == nullptr) || (!(_1bc4c2d61_IsAny(_17863_prim.ptr()))))) {
			_1bc4b0854_applyCastKind(_177927_s, _177960_d, _177942_dest, _17807_token, _178033_refers);
		};
		return;;
	};
	jule::Ptr<_1bc309769_Trait> _17932_dt = _1bc4ba4a7_Trait((*(_177942_dest)).ptr());;
	if ((_17932_dt != nullptr)) {
		jule::Ptr<_1bc309769_Trait> _17953_bt = _1bc4ba4a7_Trait((*((*(_177960_d))))._field_Type.ptr());;
		if (((_17953_bt == nullptr) || (_17953_bt != _17932_dt))) {
			_1bc4b0348_applyCastKindModel(_177927_s, _177960_d, _177942_dest, _17807_token, _178033_refers);
			return;;
		};
	};
	if (((_1bc4b96d7_TypeEnum((*(_177942_dest)).ptr()) != nullptr) && (_1bc4b96d7_TypeEnum((*((*(_177960_d))))._field_Type.ptr()) == nullptr))) {
		_1bc4b0348_applyCastKindModel(_177927_s, _177960_d, _177942_dest, _17807_token, _178033_refers);
		return;;
	};
}



inline jule::Bool _1bc4d40a3_validTypeForXof(jule::Ptr<_1bc4b64e7_Type>* _180925_t) {
	return ((((!(_1bc4b78b1_Void((*(_180925_t)).ptr()))) && (_1bc4b9e8a_Fn((*(_180925_t)).ptr()) == nullptr)) && (_1bc4ba9c4_Tup((*(_180925_t)).ptr()) == nullptr)) && (!(_1bc4bac5a_comptime((*(_180925_t)).ptr()))));;
}



inline __jule_tuple_x_1bc305358_SymTab__jule_tuple_s_1a9575ca1_Log _1bc4d702e_buildSymbols(jule::Ptr<_1bc25aa50_AST>* _1622_ast, jule::Trait* _1643_importer, jule::Ptr<_1bc3d1b2c_symBuilder> _1667_owner) {
	__jule_tuple_x_1bc305358_SymTab__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	jule::Ptr<_1bc3d1b2c_symBuilder> _176_sb = jule::new_ptr<_1bc3d1b2c_symBuilder>(_1bc3d1b2c_symBuilder{._field_owner=_1667_owner, ._field_importer=(*(_1643_importer)), ._field_errors=jule::Slice<_1a9575ca1_Log>(nullptr), ._field_ast=(*(_1622_ast)), ._field_table=jule::Ptr<_1bc305358_SymTab>(nullptr)});;
	_1bc3d79bd_build(_176_sb);
	if (((*_176_sb.alloc)._field_errors.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*_176_sb.alloc)._field_table;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = (*_176_sb.alloc)._field_errors;
	return __jule_func_result;;
}



inline void _1bc4d735e_collectImplicitImports(jule::Ptr<_1bc409eeb_sema>* _3132_s, jule::Ptr<_1bc305358_SymTab>* _3147_file) {
	{
		auto expr = &((*((*(_3147_file))))._field_Imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3a01c07:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _3214_imp = *it;
			{
				if ((!(_1bc3d7d86_isImplicitImport(_3214_imp)))) {
					goto _iter_end_1c3a01c07;
				};
				{
					auto &_match_expr{ (*(_3214_imp))._field_LinkPath };
					
					if (_match_expr == jule::Str::lit("std/runtime", 11)) {
						_case_begin_1c3a02e6c:;
						{
							(*((*((*(_3132_s))))._field_meta))._field_runtime=_3214_imp;
						}
					}
					else {
						_case_begin_1c3a02510:;
						{
							__jule_panic_s(jule::Str::lit("sema: implementation mistake in implicit import collection, this panic call should be unreachable", 97) + jule::Str("\nlocation: std/jule/sema/analysis.jule:40:4"));;
						}
					}
					_match_end_1c3a02aa4:;
				};
			}
			_iter_next_1c3a01c07:;
			++it;
			goto _iter_begin_1c3a01c07;
		}
		_iter_end_1c3a01c07:;
	};
}



inline __jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log _1bc4d778d_analyzePackage(jule::Slice<jule::Ptr<_1bc25aa50_AST>>* _4524_files, jule::Trait* _4549_importer, jule::I32* _4570_flags) {
	__jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	jule::Slice<jule::Ptr<_1bc305358_SymTab>> _476_tables = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc305358_SymTab>>::alloc(0LL, (*(_4524_files)).len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc305358_SymTab>(nullptr); __jule_collection; });;
	{
		auto expr = _4524_files;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3a040a0:;
		if (it != expr_end) {
			jule::Ptr<_1bc25aa50_AST> _4814_f = *it;
			{
				jule::Ptr<_1bc305358_SymTab> _497_table;
				jule::Slice<_1a9575ca1_Log> _4918_errors;
				({
					__jule_tuple_x_1bc305358_SymTab__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bc4d702e_buildSymbols(&(_4814_f), _4549_importer, nullptr);
					_497_table = __jule_assign_result.__jule_result_arg0;
					_4918_errors = __jule_assign_result.__jule_result_arg1;
				});
				if ((_4918_errors.len() > 0LL)) {
					__jule_func_result.__jule_result_arg0 = nullptr;
					__jule_func_result.__jule_result_arg1 = _4918_errors;
					return __jule_func_result;;
				};
				{ jule::Slice<jule::Ptr<_1bc305358_SymTab>> &__jule_push_dest = _476_tables; __jule_push_dest.push(_497_table); };
			}
			_iter_next_1c3a040a0:;
			++it;
			goto _iter_begin_1c3a040a0;
		}
		_iter_end_1c3a040a0:;
	};
	jule::Ptr<_1bc409eeb_sema> _566_sema = jule::new_ptr<_1bc409eeb_sema>(_1bc409eeb_sema{._field_errors=jule::Slice<_1a9575ca1_Log>(nullptr), ._field_files=jule::Slice<jule::Ptr<_1bc305358_SymTab>>(nullptr), ._field_file=jule::Ptr<_1bc305358_SymTab>(nullptr), ._field_flags=(*(_4570_flags)), ._field_meta=jule::new_ptr<_1bc4093c4_commonSemaMeta>(_1bc4093c4_commonSemaMeta{._field_comptimeTypeInfos=jule::Slice<jule::Ptr<_1bc38e337_comptimeTypeInfo>>(nullptr), ._field_runtime=jule::Ptr<_1bc3dcb9e_ImportInfo>(nullptr)})});;
	jule::Ptr<_1bc305358_SymTab> _636_firstTable = _476_tables[0LL];;
	_1bc4d735e_collectImplicitImports(&(_566_sema), &(_636_firstTable));
	_1bc429d2e_check(_566_sema, &(_476_tables));
	if (((*_566_sema.alloc)._field_errors.len() > 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = (*_566_sema.alloc)._field_errors;
		return __jule_func_result;;
	};
	jule::Ptr<_1bc3e0421_Package> _716_pkg = jule::new_ptr<_1bc3e0421_Package>(_1bc3e0421_Package{._field_Files=(*_566_sema.alloc)._field_files});;
	__jule_func_result.__jule_result_arg0 = _716_pkg;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log _1bc4d7c44_AnalyzePackage(jule::Slice<jule::Ptr<_1bc25aa50_AST>> _9523_files, jule::Trait _9547_importer, jule::I32 _9567_flags) {
	__jule_tuple_x_1bc3e0421_Package__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	if ((_9523_files.len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	__jule_func_result = std::move(_1bc4d778d_analyzePackage(&(_9523_files), &(_9547_importer), &(_9567_flags)));
return __jule_func_result;;
}



inline jule::Ptr<_1bc302113_FnIns> _1bc538910_findBuiltinFunc(jule::Str* _2021_ident) {
	{
		auto &_match_expr{ (*(_2021_ident)) };
		
		if (_match_expr == jule::Str::lit("print", 5)) {
			_case_begin_1c39503a3:;
			{
				static jule::Ptr<_1bc302113_FnIns> _2314_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc53e185_builtinCallerPrint), ._field_reloaded=false});;
				return _2314_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("println", 7)) {
			_case_begin_1c0d37716:;
			{
				static jule::Ptr<_1bc302113_FnIns> _2614_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc53e5b4_builtinCallerPrintln), ._field_reloaded=false});;
				return _2614_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("new", 3)) {
			_case_begin_1c37db261:;
			{
				static jule::Ptr<_1bc302113_FnIns> _2914_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc53e9e3_builtinCallerNew), ._field_reloaded=false});;
				return _2914_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("panic", 5)) {
			_case_begin_1c37dbc45:;
			{
				static jule::Ptr<_1bc302113_FnIns> _3214_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc53ee22_builtinCallerPanic), ._field_reloaded=false});;
				return _3214_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("make", 4)) {
			_case_begin_1c37d98e1:;
			{
				static jule::Ptr<_1bc302113_FnIns> _3514_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc540351_builtinCallerMake), ._field_reloaded=false});;
				return _3514_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("append", 6)) {
			_case_begin_1c37d9957:;
			{
				static jule::Ptr<_1bc302113_FnIns> _3814_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc5409b1_builtinCallerAppend), ._field_reloaded=false});;
				return _3814_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("copy", 4)) {
			_case_begin_1c37d9c21:;
			{
				static jule::Ptr<_1bc302113_FnIns> _4114_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc5412b9_builtinCallerCopy), ._field_reloaded=false});;
				return _4114_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("len", 3)) {
			_case_begin_1c37d9c87:;
			{
				static jule::Ptr<_1bc302113_FnIns> _4414_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc54295d_builtinCallerLen), ._field_reloaded=false});;
				return _4414_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("cap", 3)) {
			_case_begin_1c37d9ced:;
			{
				static jule::Ptr<_1bc302113_FnIns> _4714_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc543211_builtinCallerCap), ._field_reloaded=false});;
				return _4714_f;;
			}
		}
		else if (_match_expr == jule::Str::lit("delete", 6)) {
			_case_begin_1c37d9d64:;
			{
				static jule::Ptr<_1bc302113_FnIns> _5014_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc543b29_builtinCallerDelete), ._field_reloaded=false});;
				return _5014_f;;
			}
		}
		else {
			_case_begin_1c0d371c7:;
			{
				return nullptr;;
			}
		}
		_match_end_1c0d3810c:;
	};
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc538beb_primTypeAlias(jule::Ptr<_1bc4b64e7_Type>* _5723_k) {
	return jule::new_ptr<_1bc4b5705_TypeAlias>(_1bc4b5705_TypeAlias{._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Public=true, ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=(*(_5723_k))}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr)});;
}



inline jule::Ptr<_1bc42dc12_Var> _1bc53c5a1_findBuiltinVar(jule::Str* _8520_ident) {
	{
		auto &_match_expr{ (*(_8520_ident)) };
		
		if (_match_expr == jule::Str::lit("nil", 3)) {
			_case_begin_1c5e7c68b:;
			{
				static jule::Ptr<_1bc42dc12_Var> _8814_v = jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=_1bc539009_primNil}), ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac262b9_NewNil()})}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
				return _8814_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("true", 4)) {
			_case_begin_1c5e7c735:;
			{
				static jule::Ptr<_1bc42dc12_Var> _10314_v = jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac25a27_NewBool(true)})}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
				return _10314_v;;
			}
		}
		else if (_match_expr == jule::Str::lit("false", 5)) {
			_case_begin_1c5e7c7ac:;
			{
				static jule::Ptr<_1bc42dc12_Var> _11614_v = jule::new_ptr<_1bc42dc12_Var>(_1bc42dc12_Var{._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Ident=jule::Str(), ._field_Binded=false, ._field_Constant=true, ._field_Mutable=false, ._field_Public=true, ._field_Used=false, ._field_Statically=false, ._field_Reference=false, ._field_TypeSym=(*(_1bc53c8e2_findBuiltinTypeAlias(jule::Str::lit("bool", 4))))._field_TypeSym, ._field_Value=jule::new_ptr<_1bc4846c4_Value>(_1bc4846c4_Value{._field_Expr=jule::Ptr<_1bc261c43_Expr>(nullptr), ._field_Data=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=static__1bac25a27_NewBool(false)})}), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_RetOrder=-2LL, ._field_Depends=jule::Slice<jule::Ptr<_1bc42dc12_Var>>(nullptr)});;
				return _11614_v;;
			}
		}
		else {
			_case_begin_1c5e56049:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5e7bdc7:;
	};
}



inline jule::Ptr<_1bc4b5705_TypeAlias> _1bc53c8e2_findBuiltinTypeAlias(jule::Str _13325_ident) {
	{
		auto &_match_expr{ _13325_ident };
		
		if (_match_expr == jule::Str::lit("any", 3)) {
			_case_begin_1c3a0976a:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _13614_t = _1bc538beb_primTypeAlias(&(_1bc5395ae_primAny));;
				return _13614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("str", 3)) {
			_case_begin_1c3a09803:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _13914_t = _1bc538beb_primTypeAlias(&(_1bc5398ab_primStr));;
				return _13914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("bool", 4)) {
			_case_begin_1c3a09869:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _14214_t = _1bc538beb_primTypeAlias(&(_1bc539b64_primBool));;
				return _14214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uintptr", 7)) {
			_case_begin_1c3a09a12:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _14514_t = _1bc538beb_primTypeAlias(&(_1bc539e1c_primUintptr));;
				return _14514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("uint", 4)) {
			_case_begin_1c3a09a78:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _14814_t = _1bc538beb_primTypeAlias(&(_1bc53a1c5_primUint));;
				return _14814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("int", 3)) {
			_case_begin_1c3a09ade:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _15114_t = _1bc538beb_primTypeAlias(&(_1bc53a58d_primInt));;
				return _15114_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i8", 2)) {
			_case_begin_1c3a09b55:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _15414_t = _1bc538beb_primTypeAlias(&(_1bc53a7d0_primI8));;
				return _15414_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i16", 3)) {
			_case_begin_1c3a09bcc:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _15714_t = _1bc538beb_primTypeAlias(&(_1bc53aa77_primI16));;
				return _15714_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("i64", 3)) {
			_case_begin_1c3a09ca9:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _16014_t = _1bc538beb_primTypeAlias(&(_1bc53b0d8_primI64));;
				return _16014_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u16", 3)) {
			_case_begin_1c3a09d31:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _16314_t = _1bc538beb_primTypeAlias(&(_1bc53b649_primU16));;
				return _16314_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u32", 3)) {
			_case_begin_1c3a09da8:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _16614_t = _1bc538beb_primTypeAlias(&(_1bc53b902_primU32));;
				return _16614_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("u64", 3)) {
			_case_begin_1c3a09e30:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _16914_t = _1bc538beb_primTypeAlias(&(_1bc53bddb_primU64));;
				return _16914_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f32", 3)) {
			_case_begin_1c3a09ea7:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _17214_t = _1bc538beb_primTypeAlias(&(_1bc53c12d_primF32));;
				return _17214_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("f64", 3)) {
			_case_begin_1c3a0a02e:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _17514_t = _1bc538beb_primTypeAlias(&(_1bc53c33c_primF64));;
				return _17514_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("byte", 4) || _match_expr == jule::Str::lit("u8", 2)) {
			_case_begin_1c3a0a0a6:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _17814_t = _1bc538beb_primTypeAlias(&(_1bc53b391_primU8));;
				return _17814_t;;
			}
		}
		else if (_match_expr == jule::Str::lit("rune", 4) || _match_expr == jule::Str::lit("i32", 3)) {
			_case_begin_1c3a0a12d:;
			{
				static jule::Ptr<_1bc4b5705_TypeAlias> _18114_t = _1bc538beb_primTypeAlias(&(_1bc53ad30_primI32));;
				return _18114_t;;
			}
		}
		else {
			_case_begin_1c3a0944b:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3a0957d:;
	};
}



inline jule::Any _1bc53cb78_findBuiltinDef(jule::Str* _18820_ident) {
	jule::Ptr<_1bc42dc12_Var> _1896_v = _1bc53c5a1_findBuiltinVar(_18820_ident);;
	if ((_1896_v != nullptr)) {
		return jule::Any(_1896_v, &__jule_any_type7);;
	};
	jule::Ptr<_1bc302113_FnIns> _1936_f = _1bc538910_findBuiltinFunc(_18820_ident);;
	if ((_1936_f != nullptr)) {
		return jule::Any(_1936_f, &__jule_any_type65);;
	};
	jule::Ptr<_1bc4b5705_TypeAlias> _1976_ta = _1bc53c8e2_findBuiltinTypeAlias((*(_18820_ident)));;
	if ((_1976_ta != nullptr)) {
		return jule::Any(_1976_ta, &__jule_any_type8);;
	};
	return nullptr;;
}



inline jule::Any _1bc53ce42_findBuiltinDefStdMem(jule::Str* _20426_ident) {
	{
		auto &_match_expr{ (*(_20426_ident)) };
		
		if (_match_expr == jule::Str::lit("SizeOf", 6)) {
			_case_begin_1c3950eec:;
			{
				static jule::Ptr<_1bc302113_FnIns> _20714_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc545cc4_builtinCallerStdMemSizeOf), ._field_reloaded=false});;
				return jule::Any(_20714_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("AlignOf", 7)) {
			_case_begin_1c3951096:;
			{
				static jule::Ptr<_1bc302113_FnIns> _21014_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc546203_builtinCallerStdMemAlignOf), ._field_reloaded=false});;
				return jule::Any(_21014_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Free", 4)) {
			_case_begin_1c395111d:;
			{
				static jule::Ptr<_1bc302113_FnIns> _21314_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc546632_builtinCallerStdMemFree), ._field_reloaded=false});;
				return jule::Any(_21314_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1c394eb55:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3950e31:;
	};
}



inline jule::Any _1bc53d20b_findBuiltinDefStdComptime(jule::Str* _22031_ident) {
	{
		auto &_match_expr{ (*(_22031_ident)) };
		
		if (_match_expr == jule::Str::lit("TypeOf", 6)) {
			_case_begin_1c5e7d307:;
			{
				static jule::Ptr<_1bc302113_FnIns> _22314_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc544058_builtinCallerStdComptimeTypeOf), ._field_reloaded=false});;
				return jule::Any(_22314_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("ValueOf", 7)) {
			_case_begin_1c5e7d538:;
			{
				static jule::Ptr<_1bc302113_FnIns> _22614_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc544487_builtinCallerStdComptimeValueOf), ._field_reloaded=false});;
				return jule::Any(_22614_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Line", 4)) {
			_case_begin_1c5e7d5b0:;
			{
				static jule::Ptr<_1bc302113_FnIns> _22914_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc5448b6_builtinCallerStdComptimeLine), ._field_reloaded=false});;
				return jule::Any(_22914_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("File", 4)) {
			_case_begin_1c5e7d37e:;
			{
				static jule::Ptr<_1bc302113_FnIns> _23214_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc545037_builtinCallerStdComptimeFile), ._field_reloaded=false});;
				return jule::Any(_23214_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("Files", 5)) {
			_case_begin_1c5e7d406:;
			{
				static jule::Ptr<_1bc302113_FnIns> _23514_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc545466_builtinCallerStdComptimeFiles), ._field_reloaded=false});;
				return jule::Any(_23514_f, &__jule_any_type65);;
			}
		}
		else if (_match_expr == jule::Str::lit("TypeAlias", 9)) {
			_case_begin_1c5e7d736:;
			{
				static jule::Ptr<_1bc302113_FnIns> _23814_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::Ptr<_1bc2ee055_Fn>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc545895_builtinCallerStdComptimeTypeAlias), ._field_reloaded=false});;
				return jule::Any(_23814_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1c5e7cceb:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5e7ce1c:;
	};
}



inline jule::Any _1bc53d5d5_findBuiltinDefStdJuleIntegrated(jule::Str* _24537_ident) {
	{
		auto &_match_expr{ (*(_24537_ident)) };
		
		if (_match_expr == jule::Str::lit("Emit", 4)) {
			_case_begin_1c5e7d9cd:;
			{
				static jule::Ptr<_1bc302113_FnIns> _24814_f = jule::new_ptr<_1bc302113_FnIns>(_1bc302113_FnIns{._field_Owner=jule::Ptr<_1bc2810c5_StructIns>(nullptr), ._field_Decl=jule::new_ptr<_1bc2ee055_Fn>(_1bc2ee055_Fn{._field_sema=jule::Ptr<_1bc409eeb_sema>(nullptr), ._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Global=false, ._field_Unsafety=false, ._field_Public=false, ._field_Binded=false, ._field_Statically=false, ._field_Exceptional=false, ._field_Ident=jule::Str(), ._field_Directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_Scope=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Generics=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc269b19_GenericDecl>>::alloc(1LL, 1LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc269b19_GenericDecl>(nullptr); __jule_collection; }), ._field_Result=jule::Ptr<_1bc2ebeba_RetType>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc2ec581_Param>>(nullptr), ._field_Owner=jule::Ptr<_1bc27d26a_Struct>(nullptr), ._field_Instances=jule::Slice<jule::Ptr<_1bc302113_FnIns>>(nullptr)}), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b4b11_InsGeneric>>(nullptr), ._field_Params=jule::Slice<jule::Ptr<_1bc300ead_ParamIns>>(nullptr), ._field_Result=jule::Ptr<_1bc4b64e7_Type>(nullptr), ._field_Scope=jule::Ptr<_1bc3abd27_Scope>(nullptr), ._field_Refers=jule::Ptr<_1bc3cab26_ReferenceStack>(nullptr), ._field_Anon=false, ._field_AsAnon=false, ._field_CalledCo=false, ._field_caller=jule::Fn<jule::Ptr<_1bc48354c_Data>,jule::Ptr<_1bc48551b_eval>*,jule::Ptr<_1bc26596c_FnCallExpr>*,jule::Ptr<_1bc48354c_Data>*>(_1bc546a61_builtinCallerStdJuleIntegratedEmit), ._field_reloaded=false});;
				return jule::Any(_24814_f, &__jule_any_type65);;
			}
		}
		else {
			_case_begin_1c5e7d7be:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5e82a15:;
	};
}



inline jule::Any _1bc53d8d2_findPackageBuiltinDef(jule::Str* _26027_linkPath, jule::Str* _26043_ident) {
	{
		auto &_match_expr{ (*(_26027_linkPath)) };
		
		if (_match_expr == jule::Str::lit("std/comptime", 12)) {
			_case_begin_1c5e8497e:;
			{
				return _1bc53d20b_findBuiltinDefStdComptime(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/mem", 7)) {
			_case_begin_1c5e84a28:;
			{
				return _1bc53ce42_findBuiltinDefStdMem(_26043_ident);;
			}
		}
		else if (_match_expr == jule::Str::lit("std/jule/integrated", 19)) {
			_case_begin_1c5e846e8:;
			{
				return _1bc53d5d5_findBuiltinDefStdJuleIntegrated(_26043_ident);;
			}
		}
		else {
			_case_begin_1c5e84198:;
			{
				return nullptr;;
			}
		}
		_match_end_1c5e82ecc:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc53dc56_builtinCallerError(jule::Ptr<_1bc48551b_eval>* _27328_e, jule::Ptr<_1bc26596c_FnCallExpr>* _27343_fc) {
	if (((*((*(_27343_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_27328_e)).ptr(), (*((*(_27343_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("err", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_27343_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_27328_e)).ptr(), (*((*((*(_27343_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("error", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _2816_expr = _1bc4a4309_evalExpr((*(_27328_e)), (*((*(_27343_fc))))._field_Args[0LL]);;
	if ((_2816_expr == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc247014_Token> _2866_token = (*((*((*(_27343_fc))))._field_Args[0LL]))._field_Token;;
	if (_1bc48396a_IsNil(_2816_expr.ptr())) {
		_1bc4859e4_pushErr((*(_27328_e)).ptr(), _2866_token, static_cast<jule::Str>(jule::Str::lit("you cannot call error function with nil", 39)), jule::Slice<jule::Any>());
	};
	;
	;
	if ((!(_1bc419b76_checkValidityForInitExpr((*((*(_27328_e))))._field_s, true, false, &(_1bc5395ae_primAny), &(_2816_expr), &(_2866_token))))) {
		return nullptr;;
	};
	_1bc4aed3c_applyRuntimeToStr(&((*((*(_27328_e))))._field_s), &((*(_2816_expr))._field_Type), &(_1bc5395ae_primAny), &(_2866_token), _1bc488a2a_getOwnerRefers((*(_27328_e)).ptr()));
	jule::Ptr<_1bc48354c_Data> _2996_d = _1bc4b0a63_buildVoidData();;
	(*(_2996_d))._field_Model=jule::Any(jule::new_ptr<_1bc2e9d31_BuiltinErrorCallExprModel>(_1bc2e9d31_BuiltinErrorCallExprModel{._field_Func=jule::Ptr<_1bc302113_FnIns>(nullptr), ._field_Err=_2816_expr}), &__jule_any_type21);
	return _2996_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc53e185_builtinCallerPrint(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _30428_e, jule::Ptr<_1bc26596c_FnCallExpr>* _30443_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_30443_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_30428_e)).ptr(), (*((*(_30443_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("v", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_30443_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_30428_e)).ptr(), (*((*((*(_30443_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("print", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc261c43_Expr> _3136_arg = (*((*(_30443_fc))))._field_Args[0LL];;
	jule::Ptr<_1bc48354c_Data> _3146_expr = _1bc4a4309_evalExpr((*(_30428_e)), _3136_arg);;
	if ((_3146_expr == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc4d316d_isBuiltinStrConvertable(&((*(_3146_expr))._field_Type))))) {
		_1bc4859e4_pushErr((*(_30428_e)).ptr(), (*(_3136_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	_1bc42c3a3_pushRuntimeToStr(&((*((*(_30428_e))))._field_s), &((*(_3146_expr))._field_Type), &((*(_3136_arg))._field_Token), _1bc488a2a_getOwnerRefers((*(_30428_e)).ptr()));
	jule::Ptr<_1bc48354c_Data> _3266_d = _1bc4b0a63_buildVoidData();;
	(*(_3266_d))._field_Model=jule::Any(jule::new_ptr<_1bc2e767a_BuiltinPrintCallExprModel>(_1bc2e767a_BuiltinPrintCallExprModel{._field_Expr=_3146_expr}), &__jule_any_type25);
	return _3266_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc53e5b4_builtinCallerPrintln(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _33130_e, jule::Ptr<_1bc26596c_FnCallExpr>* _33145_fc, jule::Ptr<_1bc48354c_Data>* _33172_d) {
	(*(_33172_d))=_1bc53e185_builtinCallerPrint(nullptr, _33130_e, _33145_fc, _33172_d);
	if (((*(_33172_d)) == nullptr)) {
		return nullptr;;
	};
	(*((*(_33172_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e7977_BuiltinPrintlnCallExprModel>(_1bc2e7977_BuiltinPrintlnCallExprModel{._field_Expr=(*((*((*(_33172_d))))._field_Model.cast_ptr<_1bc2e767a_BuiltinPrintCallExprModel>(&__jule_any_type25)))._field_Expr}), &__jule_any_type26);
	return (*(_33172_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc53e9e3_builtinCallerNew(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _34326_e, jule::Ptr<_1bc26596c_FnCallExpr>* _34341_fc, jule::Ptr<_1bc48354c_Data>* _34368_d) {
	if (((*((*(_34341_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_34326_e)).ptr(), (*((*(_34341_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_34341_fc))))._field_Args.len() > 2LL)) {
		_1bc4859e4_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("new", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _3526_t = _1bc4a3836_eval1((*(_34326_e)), (*((*(_34341_fc))))._field_Args[0LL]);;
	if ((_3526_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_3526_t))._field_Decl))) {
		_1bc4859e4_pushErr((*(_34326_e)).ptr(), (*((*((*(_34341_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	(*((*(_34368_d))))._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c313b_Sptr>(_1bc4c313b_Sptr{._field_Elem=(*(_3526_t))._field_Type}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)});
	if (((*((*(_34341_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1bc4b64e7_Type> _3697_old = (*((*(_34326_e))))._field_prefix;;
		(*((*(_34326_e))))._field_prefix=(*_3526_t.alloc)._field_Type;
		jule::Ptr<_1bc48354c_Data> _3727_init = _1bc4a4309_evalExpr((*(_34326_e)), (*((*(_34341_fc))))._field_Args[1LL]);;
		(*((*(_34326_e))))._field_prefix=_3697_old;
		if ((_3727_init != nullptr)) {
			jule::Ptr<_1bc247014_Token> _3778_token = (*((*((*(_34341_fc))))._field_Args[1LL]))._field_Token;;
			;
			_1bc419b76_checkValidityForInitExpr((*((*(_34326_e))))._field_s, (*((*(_34326_e))))._field_target._field_mutable, false, &((*_3526_t.alloc)._field_Type), &(_3727_init), &(_3778_token));
			_1bc4153e1_checkAssignType((*((*(_34326_e))))._field_s, false, &((*_3526_t.alloc)._field_Type), &(_3727_init), _3778_token, _1bc488a2a_getOwnerRefers((*(_34326_e)).ptr()));
			(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e7d51_BuiltinNewCallExprModel>(_1bc2e7d51_BuiltinNewCallExprModel{._field_Type=(*_3526_t.alloc)._field_Type, ._field_Init=(*(_3727_init))._field_Model}), &__jule_any_type116);
		};
	} else {
		(*((*(_34368_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e7d51_BuiltinNewCallExprModel>(_1bc2e7d51_BuiltinNewCallExprModel{._field_Type=(*_3526_t.alloc)._field_Type, ._field_Init=jule::Any(nullptr)}), &__jule_any_type116);
	};
	return (*(_34368_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc53ee22_builtinCallerPanic(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _39728_e, jule::Ptr<_1bc26596c_FnCallExpr>* _39743_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_39743_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_39728_e)).ptr(), (*((*(_39743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("message", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_39743_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_39728_e)).ptr(), (*((*((*(_39743_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("panic", 5), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _4066_expr = _1bc4a4309_evalExpr((*(_39728_e)), (*((*(_39743_fc))))._field_Args[0LL]);;
	if ((_4066_expr == nullptr)) {
		return nullptr;;
	};
	if (((_1bc4b8b9d_Prim((*(_4066_expr))._field_Type.ptr()) == nullptr) || (!(_1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*(_4066_expr))._field_Type).ptr()))))) {
		_1bc4859e4_pushErr((*(_39728_e)).ptr(), (*((*(_39743_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("panic function only accepts strings", 35)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc48354c_Data> _4156_d = _1bc4b0a63_buildVoidData();;
	(*(_4156_d))._field_Model=jule::Any(jule::new_ptr<_1bc2e822a_BuiltinPanicCallExprModel>(_1bc2e822a_BuiltinPanicCallExprModel{._field_Token=(*((*(_39743_fc))))._field_Token, ._field_Expr=(*(_4066_expr))._field_Model}), &__jule_any_type27);
	return _4156_d;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc540351_builtinCallerMake(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _42327_e, jule::Ptr<_1bc26596c_FnCallExpr>* _42342_fc, jule::Ptr<_1bc48354c_Data>* _42369_d) {
	if (((*((*(_42342_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_42342_fc))))._field_Args.len() == 1LL)) {
			_1bc4859e4_pushErr((*(_42327_e)).ptr(), (*((*(_42342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("size", 4), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1bc4859e4_pushErr((*(_42327_e)).ptr(), (*((*(_42342_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type, size", 10), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	} else if (((*((*(_42342_fc))))._field_Args.len() > 3LL)) {
		_1bc4859e4_pushErr((*(_42327_e)).ptr(), (*((*((*(_42342_fc))))._field_Args[3LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc48354c_Data> _4366_t = _1bc4a34e5_evalExprKind((*(_42327_e)), (*((*((*(_42342_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_4366_t == nullptr)) {
		return nullptr;;
	};
	if ((!((*(_4366_t))._field_Decl))) {
		_1bc4859e4_pushErr((*(_42327_e)).ptr(), (*((*((*(_42342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
		return nullptr;;
	} else if ((_1bc4b9c04_Slc((*(_4366_t))._field_Type.ptr()) == nullptr)) {
		_1bc4859e4_pushErr((*(_42327_e)).ptr(), (*((*((*(_42342_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_4366_t))._field_Type), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("make", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	(*((*(_42369_d))))._field_Type=(*(_4366_t))._field_Type;
	jule::Ptr<_1bc48354c_Data> _4516_lenExpr = _1bc4a4309_evalExpr(_1bc414984_evalp((*((*(_42327_e))))._field_s, (*((*(_42327_e))))._field_lookup, (*_4366_t.alloc)._field_Type), (*((*(_42342_fc))))._field_Args[1LL]);;
	if ((_4516_lenExpr == nullptr)) {
		return nullptr;;
	};
	_1bc48e79a_checkIntegerIndexingByData((*(_42327_e)).ptr(), &(_4516_lenExpr), (*((*((*(_42342_fc))))._field_Args[1LL]))._field_Token);
	jule::Ptr<_1bc2e86d1_BuiltinMakeCallExprModel> _4586_model = jule::new_ptr<_1bc2e86d1_BuiltinMakeCallExprModel>(_1bc2e86d1_BuiltinMakeCallExprModel{._field_Type=(*_4366_t.alloc)._field_Type, ._field_Len=(*(_4516_lenExpr))._field_Model, ._field_Cap=jule::Any(nullptr)});;
	(*((*(_42369_d))))._field_Model=jule::Any(_4586_model, &__jule_any_type117);
	if (((*((*(_42342_fc))))._field_Args.len() == 3LL)) {
		jule::Ptr<_1bc48354c_Data> _4647_capExpr = _1bc4a4309_evalExpr(_1bc414984_evalp((*((*(_42327_e))))._field_s, (*((*(_42327_e))))._field_lookup, (*_4366_t.alloc)._field_Type), (*((*(_42342_fc))))._field_Args[2LL]);;
		if ((_4647_capExpr == nullptr)) {
			return (*(_42369_d));;
		};
		_1bc48e79a_checkIntegerIndexingByData((*(_42327_e)).ptr(), &(_4647_capExpr), (*((*((*(_42342_fc))))._field_Args[2LL]))._field_Token);
		(*(_4586_model))._field_Cap=(*(_4647_capExpr))._field_Model;
	};
	return (*(_42369_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc5409b1_builtinCallerAppend(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _47429_e, jule::Ptr<_1bc26596c_FnCallExpr>* _47444_fc, jule::Ptr<_1bc48354c_Data>* _47471_d) {
	if (((*((*(_47444_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_47444_fc))))._field_Args.len() == 1LL)) {
			_1bc4859e4_pushErr((*(_47429_e)).ptr(), (*((*(_47444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("values", 6), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1bc4859e4_pushErr((*(_47429_e)).ptr(), (*((*(_47444_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc261c43_Expr> _4846_firstArg = (*((*(_47444_fc))))._field_Args[0LL];;
	jule::Ptr<_1bc48354c_Data> _4856_t = _1bc4a4309_evalExpr((*(_47429_e)), _4846_firstArg);;
	if ((_4856_t == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _4906_s = _1bc4b9c04_Slc((*(_4856_t))._field_Type.ptr());;
	if ((_4906_s == nullptr)) {
		_1bc4859e4_pushErr((*(_47429_e)).ptr(), (*(_4846_firstArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	;
	;
	if (_1bc419b76_checkValidityForInitExpr((*((*(_47429_e))))._field_s, true, false, &((*_4856_t.alloc)._field_Type), &(_4856_t), &((*(_4846_firstArg))._field_Token))) {
		_1bc4153e1_checkAssignType((*((*(_47429_e))))._field_s, false, &((*(_4856_t))._field_Type), &(_4856_t), (*_4846_firstArg.alloc)._field_Token, _1bc488a2a_getOwnerRefers((*(_47429_e)).ptr()));
	};
	jule::Ptr<_1bc4b64e7_Type> _5056_prefix = (*((*(_47429_e))))._field_prefix;;
	(*((*(_47429_e))))._field_prefix=(*_4856_t.alloc)._field_Type;
	__JULE_DEFER({
		(*((*(_47429_e))))._field_prefix=_5056_prefix;
	});;
	(*(_47471_d))=jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=(*_4856_t.alloc)._field_Type, ._field_Mutable=true, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});
	jule::Ptr<_1bc261c43_Expr> _5136_secondArg = (*((*(_47444_fc))))._field_Args[1LL];;
	{
		auto &_match_expr{ (*(_5136_secondArg))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type79) {
			_case_begin_1c36b9ded:;
			{
				if (((*((*(_47444_fc))))._field_Args.len() > 2LL)) {
					_1bc4859e4_pushErr((*(_47429_e)).ptr(), (*((*((*(_47444_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				jule::Ptr<_1bc48354c_Data> _5207_e1 = _1bc4a4309_evalExpr((*(_47429_e)), (*((*(_5136_secondArg))._field_Kind.unsafe_cast_ptr<_1bc2641c9_VariadicExpr>()))._field_Expr);;
				if ((_5207_e1 == nullptr)) {
					return nullptr;;
				};
				if (((_1bc4b8b9d_Prim((*(_4906_s))._field_Elem.ptr()) != nullptr) && _1bc4c103a_IsU8(_1bc4b8b9d_Prim((*(_4906_s))._field_Elem).ptr()))) {
					if (((_1bc4b8b9d_Prim((*(_5207_e1))._field_Type) != nullptr) && _1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*(_5207_e1))._field_Type).ptr()))) {
						_1bc4b366a_makeVariadic(&(_5207_e1), _1bc53b391_primU8);
						(*((*(_47471_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e8aaa_BuiltinAppendCallExprModel>(_1bc2e8aaa_BuiltinAppendCallExprModel{._field_Dest=(*_4856_t.alloc)._field_Model, ._field_Elements=(*(_5207_e1))._field_Model}), &__jule_any_type24);
						return (*(_47471_d));;
					};
				};
				if ((!(_1bc4b8917_Variadicable((*(_5207_e1))._field_Type)))) {
					_1bc4859e4_pushErr((*(_47429_e)).ptr(), (*(_5136_secondArg))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is not variadicable", 26)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_5207_e1))._field_Type), &__jule_any_type5); __jule_collection; }));
					return nullptr;;
				};
				_1bc4b366a_makeVariadic(&(_5207_e1), (*(_4906_s))._field_Elem);
				(*(*(_5207_e1))._field_Type.alloc)._field_Variadic=false;
				if (_1bc419b76_checkValidityForInitExpr((*((*(_47429_e))))._field_s, true, false, &((*_4906_s.alloc)._field_Elem), &(_5207_e1), &((*(_5136_secondArg))._field_Token))) {
					(*(*(_5207_e1))._field_Type.alloc)._field_Variadic=true;
					_1bc4153e1_checkAssignType((*((*(_47429_e))))._field_s, false, &((*_4906_s.alloc)._field_Elem), &(_5207_e1), (*_5136_secondArg.alloc)._field_Token, _1bc488a2a_getOwnerRefers((*(_47429_e)).ptr()));
				} else {
					(*(*(_5207_e1))._field_Type.alloc)._field_Variadic=true;
				};
				(*((*(_47471_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e8aaa_BuiltinAppendCallExprModel>(_1bc2e8aaa_BuiltinAppendCallExprModel{._field_Dest=(*_4856_t.alloc)._field_Model, ._field_Elements=(*(_5207_e1))._field_Model}), &__jule_any_type24);
				return (*(_47471_d));;
			}
		}
		_match_end_1c36b9d76:;
	};
	jule::Ptr<_1bc48354c_Data> _5636_e1 = _1bc4a4309_evalExpr((*(_47429_e)), _5136_secondArg);;
	if ((_5636_e1 == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc2e4149_SliceExprModel> _5686_slice = jule::new_ptr<_1bc2e4149_SliceExprModel>(_1bc2e4149_SliceExprModel{._field_ElemType=(*(_4906_s))._field_Elem, ._field_Elems=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_47444_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; })});;
	{
		auto expr = (*((*(_47444_fc))))._field_Args.slice(1LL);
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c3a2814b:;
		if (it != expr_end) {
			jule::Ptr<_1bc261c43_Expr> _57214_arg = *it;
			{
				_5636_e1=_1bc4a4309_evalExpr((*(_47429_e)), _57214_arg);
				if ((_5636_e1 == nullptr)) {
					return nullptr;;
				};
				if ((*(*(_5636_e1))._field_Type.alloc)._field_Variadic) {
					_1bc4859e4_pushErr((*(_47429_e)).ptr(), (*(_57214_arg))._field_Token, static_cast<jule::Str>(jule::Str::lit("variadic argument can't use with more argument", 46)), jule::Slice<jule::Any>());
				};
				if (_1bc419b76_checkValidityForInitExpr((*((*(_47429_e))))._field_s, true, false, &((*_4906_s.alloc)._field_Elem), &(_5636_e1), &((*(_57214_arg))._field_Token))) {
					_1bc4153e1_checkAssignType((*((*(_47429_e))))._field_s, false, &((*_4906_s.alloc)._field_Elem), &(_5636_e1), (*_57214_arg.alloc)._field_Token, _1bc488a2a_getOwnerRefers((*(_47429_e)).ptr()));
				};
				(*(_5686_slice))._field_Elems=jule::append((*_5686_slice.alloc)._field_Elems,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_5636_e1))._field_Model; __jule_collection; }));
			}
			_iter_next_1c3a2814b:;
			++it;
			goto _iter_begin_1c3a2814b;
		}
		_iter_end_1c3a2814b:;
	};
	(*((*(_47471_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e8aaa_BuiltinAppendCallExprModel>(_1bc2e8aaa_BuiltinAppendCallExprModel{._field_Dest=(*_4856_t.alloc)._field_Model, ._field_Elements=jule::Any(_5686_slice, &__jule_any_type80)}), &__jule_any_type24);
	return (*(_47471_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc540d8a_callerCopySlice(jule::Ptr<_1bc48354c_Data>* _59425_dest, jule::Ptr<_1bc48551b_eval>* _59443_e, jule::Ptr<_1bc26596c_FnCallExpr>* _59458_fc, jule::Ptr<_1bc48354c_Data>* _59485_d) {
	if ((!((*((*(_59425_dest))))._field_Mutable))) {
		_1bc4859e4_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc48354c_Data> _5996_src = _1bc4a4309_evalExpr((*(_59443_e)), (*((*(_59458_fc))))._field_Args[1LL]);;
	if ((_5996_src == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc4c3b0e_Slc> _6036_slc = _1bc4b9c04_Slc((*(_5996_src))._field_Type.ptr());;
	if ((_6036_slc != nullptr)) {
		if (((!((*_5996_src.alloc)._field_Mutable)) && _1bc4b7dcd_Mutable((*_6036_slc.alloc)._field_Elem.ptr()))) {
			_1bc4859e4_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
		};
		if ((!(_1bc4b6c34_Equal((*((*(_59425_dest))))._field_Type, (*_5996_src.alloc)._field_Type)))) {
			_1bc4859e4_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_59425_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_5996_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	} else {
		jule::Ptr<_1bc4be610_Prim> _6133_destPrim = _1bc4b8b9d_Prim((*(_1bc4b9c04_Slc((*((*(_59425_dest))))._field_Type)))._field_Elem.ptr());;
		jule::Ptr<_1bc4be610_Prim> _6143_prim = _1bc4b8b9d_Prim((*(_5996_src))._field_Type);;
		if (((((_6133_destPrim == nullptr) || (_6143_prim == nullptr)) || (!(_1bc4c2aca_IsStr(_6143_prim.ptr())))) || (!(_1bc4c103a_IsU8(_6133_destPrim.ptr()))))) {
			_1bc4859e4_pushErr((*(_59443_e)).ptr(), (*((*((*(_59458_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*((*(_59425_dest))))._field_Type), &__jule_any_type5); (*it++) = jule::Any(_1bc4b68e3_Str((*(_5996_src))._field_Type), &__jule_any_type5); __jule_collection; }));
		};
	};
	(*((*(_59485_d))))._field_Type=_1bc4817ae_lenKind();
	(*((*(_59485_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e9957_BuiltinCopyCallExprModel>(_1bc2e9957_BuiltinCopyCallExprModel{._field_Dest=(*(_59425_dest)), ._field_Src=_5996_src}), &__jule_any_type28);
	return (*(_59485_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc5412b9_builtinCallerCopy(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _62827_e, jule::Ptr<_1bc26596c_FnCallExpr>* _62842_fc, jule::Ptr<_1bc48354c_Data>* _62869_d) {
	if (((*((*(_62842_fc))))._field_Args.len() < 2LL)) {
		if (((*((*(_62842_fc))))._field_Args.len() == 1LL)) {
			_1bc4859e4_pushErr((*(_62827_e)).ptr(), (*((*(_62842_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src", 3), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		_1bc4859e4_pushErr((*(_62827_e)).ptr(), (*((*(_62842_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("src, values", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_62842_fc))))._field_Args.len() > 2LL)) {
		_1bc4859e4_pushErr((*(_62827_e)).ptr(), (*((*((*(_62842_fc))))._field_Args[2LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("copy", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _6416_dest = _1bc4a4309_evalExpr((*(_62827_e)), (*((*(_62842_fc))))._field_Args[0LL]);;
	{
		
		if ((_6416_dest == nullptr)) {
			_case_begin_1c3a3d9be:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc4b9c04_Slc((*(_6416_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3a3e7e4:;
			{
				return _1bc540d8a_callerCopySlice(&(_6416_dest), _62827_e, _62842_fc, _62869_d);;
			}
		}
		else {
			_case_begin_1c3a3d606:;
			{
				_1bc4859e4_pushErr((*(_62827_e)).ptr(), (*((*((*(_62842_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid type", 12)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c3a3b956:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc54163d_callerLenSlice(jule::Ptr<_1bc48354c_Data>* _65324_expr, jule::Ptr<_1bc48354c_Data>* _65342_d) {
	(*((*(_65342_d))))._field_Type=_1bc4817ae_lenKind();
	(*((*(_65342_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e8da7_BuiltinLenCallExprModel>(_1bc2e8da7_BuiltinLenCallExprModel{._field_Expr=(*(_65324_expr))}), &__jule_any_type118);
	return (*(_65342_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc5419b2_callerLenMap(jule::Ptr<_1bc48354c_Data>* _66122_expr, jule::Ptr<_1bc48354c_Data>* _66140_d) {
	(*((*(_66140_d))))._field_Type=_1bc4817ae_lenKind();
	(*((*(_66140_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e8da7_BuiltinLenCallExprModel>(_1bc2e8da7_BuiltinLenCallExprModel{._field_Expr=(*(_66122_expr))}), &__jule_any_type118);
	return (*(_66140_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc541d36_callerLenArr(jule::Ptr<_1bc48354c_Data>* _66922_expr, jule::Ptr<_1bc48354c_Data>* _66940_d) {
	(*((*(_66940_d))))._field_Type=_1bc4817ae_lenKind();
	(*((*(_66940_d))))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>((*(_1bc4b996d_Arr((*((*(_66922_expr))))._field_Type.ptr())))._field_N));
	(*((*(_66940_d))))._field_Model=jule::Any((*((*(_66940_d))))._field_Constant, &__jule_any_type15);
	return (*(_66940_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc5421aa_callerLenStr(jule::Ptr<_1bc48354c_Data>* _67622_expr, jule::Ptr<_1bc48354c_Data>* _67640_d) {
	(*((*(_67640_d))))._field_Type=_1bc4817ae_lenKind();
	if (_1bc483e87_IsConst((*(_67622_expr)).ptr())) {
		(*((*(_67640_d))))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_1bac271cc_ReadStr((*((*(_67622_expr))))._field_Constant.ptr()).len()));
		(*((*(_67640_d))))._field_Model=jule::Any((*((*(_67640_d))))._field_Constant, &__jule_any_type15);
	} else {
		(*((*(_67640_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e8da7_BuiltinLenCallExprModel>(_1bc2e8da7_BuiltinLenCallExprModel{._field_Expr=(*(_67622_expr))}), &__jule_any_type118);
	};
	return (*(_67640_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc54252e_callerLenComptime(jule::Ptr<_1bc48354c_Data>* _68927_d, jule::I32 _68937_n) {
	(*((*(_68927_d))))._field_Type=_1bc4817ae_lenKind();
	(*((*(_68927_d))))._field_Constant=static__1bac25494_NewI64(static_cast<jule::I64>(_68937_n));
	(*((*(_68927_d))))._field_Model=jule::Any((*((*(_68927_d))))._field_Constant, &__jule_any_type15);
	return (*(_68927_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc54295d_builtinCallerLen(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _69626_e, jule::Ptr<_1bc26596c_FnCallExpr>* _69641_fc, jule::Ptr<_1bc48354c_Data>* _69668_d) {
	if (((*((*(_69641_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_69626_e)).ptr(), (*((*(_69641_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_69641_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_69626_e)).ptr(), (*((*((*(_69641_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("len", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _7046_dest = _1bc4a3eb8_evalExpr1((*(_69626_e)), (*((*(_69641_fc))))._field_Args[0LL]);;
	{
		
		if ((_7046_dest == nullptr)) {
			_case_begin_1c3a4dbaa:;
			{
				return nullptr;;
			}
		}
		else if ((_1bc4b9c04_Slc((*(_7046_dest))._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3a4e9d0:;
			{
				return _1bc54163d_callerLenSlice(&(_7046_dest), _69668_d);;
			}
		}
		else if ((_1bc4b996d_Arr((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4ea46:;
			{
				return _1bc541d36_callerLenArr(&(_7046_dest), _69668_d);;
			}
		}
		else if ((_1bc4ba73d_Map((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4d858:;
			{
				return _1bc5419b2_callerLenMap(&(_7046_dest), _69668_d);;
			}
		}
		else if (((_1bc4b8b9d_Prim((*(_7046_dest))._field_Type) != nullptr) && _1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*(_7046_dest))._field_Type).ptr()))) {
			_case_begin_1c3a4d8be:;
			{
				return _1bc5421aa_callerLenStr(&(_7046_dest), _69668_d);;
			}
		}
		else if ((_1bc4baee1_comptimeStructFields((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4d935:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4baee1_comptimeStructFields((*(_7046_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1bc4bb50d_comptimeEnumFields((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4d99b:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4bb50d_comptimeEnumFields((*(_7046_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1bc4bc2cd_comptimeTypeInfos((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4eb34:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4bc2cd_comptimeTypeInfos((*(_7046_dest))._field_Type)))._field_types.len());;
			}
		}
		else if ((_1bc4bba2a_comptimeParams((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4eb9a:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4bba2a_comptimeParams((*(_7046_dest))._field_Type)))._field_params.len());;
			}
		}
		else if ((_1bc4bc7ea_comptimeStatics((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4ec11:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4bc7ea_comptimeStatics((*(_7046_dest))._field_Type)))._field_fields.len());;
			}
		}
		else if ((_1bc4bd851_comptimeFiles((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4ec77:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4bd851_comptimeFiles((*(_7046_dest))._field_Type)))._field_files.len());;
			}
		}
		else if ((_1bc4bd334_comptimeDecls((*(_7046_dest))._field_Type) != nullptr)) {
			_case_begin_1c3a4ecdd:;
			{
				return _1bc54252e_callerLenComptime(_69668_d, (*(_1bc4bd334_comptimeDecls((*(_7046_dest))._field_Type)))._field_decls.len());;
			}
		}
		else {
			_case_begin_1c3a4d7e2:;
			{
				_1bc4859e4_pushErr((*(_69626_e)).ptr(), (*((*((*(_69641_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c3a4bb42:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc542cd2_callerCapSlice(jule::Ptr<_1bc48354c_Data>* _73624_expr, jule::Ptr<_1bc48354c_Data>* _73642_d) {
	(*((*(_73642_d))))._field_Type=_1bc4817ae_lenKind();
	(*((*(_73642_d))))._field_Model=jule::Any(jule::new_ptr<_1bc2e91a4_BuiltinCapCallExprModel>(_1bc2e91a4_BuiltinCapCallExprModel{._field_Expr=(*(_73624_expr))}), &__jule_any_type119);
	return (*(_73642_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc543211_builtinCallerCap(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _74426_e, jule::Ptr<_1bc26596c_FnCallExpr>* _74441_fc, jule::Ptr<_1bc48354c_Data>* _74468_d) {
	if (((*((*(_74441_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_74426_e)).ptr(), (*((*(_74441_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("obj", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_74441_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_74426_e)).ptr(), (*((*((*(_74441_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("cap", 3), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _7526_dest = _1bc4a4309_evalExpr((*(_74426_e)), (*((*(_74441_fc))))._field_Args[0LL]);;
	{
		
		if ((_7526_dest == nullptr)) {
			_case_begin_1c3952b36:;
			{
				return nullptr;;
			}
		}
		else if ((*(_7526_dest))._field_Decl) {
			_case_begin_1c39511a6:;
			{
				_1bc4859e4_pushErr((*(_74426_e)).ptr(), (*((*((*(_74441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1bc4b9c04_Slc((*_7526_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c39529e3:;
			{
				return _1bc542cd2_callerCapSlice(&(_7526_dest), _74468_d);;
			}
		}
		else {
			_case_begin_1c3a621eb:;
			{
				_1bc4859e4_pushErr((*(_74426_e)).ptr(), (*((*((*(_74441_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c3a5dc53:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc5436ea_callerDeleteMap(jule::Ptr<_1bc48551b_eval>* _76725_e, jule::Ptr<_1bc26596c_FnCallExpr>* _76740_fc, jule::Ptr<_1bc48354c_Data>* _76767_expr, jule::Ptr<_1bc48354c_Data>* _76785_d) {
	if ((!((*((*(_76767_expr))))._field_Mutable))) {
		_1bc4859e4_pushErr((*(_76725_e)).ptr(), (*((*((*(_76740_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mutable operation cannot used with immutable data", 49)), jule::Slice<jule::Any>());
	};
	(*(_76785_d))=_1bc4b0a63_buildVoidData();
	jule::Ptr<_1bc2e957d_BuiltinDeleteCallExprModel> _7726_model = jule::new_ptr<_1bc2e957d_BuiltinDeleteCallExprModel>(_1bc2e957d_BuiltinDeleteCallExprModel{._field_Dest=(*(_76767_expr)), ._field_Key=jule::Ptr<_1bc48354c_Data>(nullptr)});;
	if (((*((*(_76740_fc))))._field_Args.len() == 2LL)) {
		jule::Ptr<_1bc48354c_Data> _7767_key = _1bc4a4309_evalExpr((*(_76725_e)), (*((*(_76740_fc))))._field_Args[1LL]);;
		{
			
			if ((_7767_key == nullptr)) {
				_case_begin_1c37e847c:;
				{
					return nullptr;;
				}
			}
			else if ((*(_7767_key))._field_Decl) {
				_case_begin_1c37e70d5:;
				{
					_1bc4859e4_pushErr((*(_76725_e)).ptr(), (*((*((*(_76740_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
					return nullptr;;
				}
			}
			else {
				_case_begin_1c37e706e:;
				{
					;
					jule::Ptr<_1bc4b64e7_Type> _7858_keyType = (*(_1bc4ba73d_Map((*((*(_76767_expr))))._field_Type.ptr())))._field_Key;;
					if ((!(_1bc4153e1_checkAssignType((*((*(_76725_e))))._field_s, false, &(_7858_keyType), &(_7767_key), (*((*((*(_76740_fc))))._field_Args[1LL]))._field_Token, _1bc488a2a_getOwnerRefers((*(_76725_e)).ptr()))))) {
						return nullptr;;
					};
				}
			}
			_match_end_1c37e7008:;
		};
		(*(_7726_model))._field_Key=_7767_key;
	};
	(*((*(_76785_d))))._field_Model=jule::Any(_7726_model, &__jule_any_type29);
	return (*(_76785_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc543b29_builtinCallerDelete(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _79629_e, jule::Ptr<_1bc26596c_FnCallExpr>* _79644_fc, jule::Ptr<_1bc48354c_Data>* _79671_d) {
	if (((*((*(_79644_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_79629_e)).ptr(), (*((*(_79644_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("map", 3), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_79644_fc))))._field_Args.len() > 2LL)) {
		_1bc4859e4_pushErr((*(_79629_e)).ptr(), (*((*((*(_79644_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("delete", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _8046_dest = _1bc4a4309_evalExpr((*(_79629_e)), (*((*(_79644_fc))))._field_Args[0LL]);;
	{
		
		if ((_8046_dest == nullptr)) {
			_case_begin_1c3955122:;
			{
				return nullptr;;
			}
		}
		else if ((*(_8046_dest))._field_Decl) {
			_case_begin_1c3952a59:;
			{
				_1bc4859e4_pushErr((*(_79629_e)).ptr(), (*((*((*(_79644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		else if ((_1bc4ba73d_Map((*_8046_dest.alloc)._field_Type.ptr()) != nullptr)) {
			_case_begin_1c3955188:;
			{
				return _1bc5436ea_callerDeleteMap(_79629_e, _79644_fc, &(_8046_dest), _79671_d);;
			}
		}
		else {
			_case_begin_1c37eede0:;
			{
				_1bc4859e4_pushErr((*(_79629_e)).ptr(), (*((*((*(_79644_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c37ed240:;
	};
}



inline jule::Ptr<_1bc48354c_Data> _1bc544058_builtinCallerStdComptimeTypeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _81940_e, jule::Ptr<_1bc26596c_FnCallExpr>* _81955_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_81955_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_81940_e)).ptr(), (*((*(_81955_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_81955_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _8286_d = _1bc4a34e5_evalExprKind((*(_81940_e)), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_8286_d == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bc302113_FnIns> _8322_f = _1bc4b9e8a_Fn((*(_8286_d))._field_Type.ptr());;
	if ((_8322_f != nullptr)) {
		if (_1bc3035cb_IsBuiltin(_8322_f)) {
			_1bc4859e4_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("<built-in fn>", 13), &__jule_any_type5); __jule_collection; }));
			return nullptr;;
		};
		if (((*_8322_f.alloc)._field_Generics.len() != (*((*_8322_f.alloc)._field_Decl))._field_Generics.len())) {
			_1bc4859e4_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
			return nullptr;;
		};
	};
	jule::Ptr<_1bc2810c5_StructIns> _8432_s = _1bc4ba221_Struct((*(_8286_d))._field_Type);;
	if (((_8432_s != nullptr) && ((*_8432_s.alloc)._field_Generics.len() != (*((*_8432_s.alloc)._field_Decl))._field_Generics.len()))) {
		_1bc4859e4_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type has generics and used without instantiate", 46)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	if (_1bc4bac5a_comptime((*(_8286_d))._field_Type)) {
		_1bc4859e4_pushErr((*(_81940_e)).ptr(), (*((*((*(_81955_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("comptime::TypeOf is not supports type @", 39)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_8286_d))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a359e_buildComptimeTypeInfoData(&((*((*(_81940_e))))._field_s), &((*_8286_d.alloc)._field_Type));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc544487_builtinCallerStdComptimeValueOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _85541_e, jule::Ptr<_1bc26596c_FnCallExpr>* _85556_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_85556_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_85541_e)).ptr(), (*((*(_85556_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("expr", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_85556_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_85541_e)).ptr(), (*((*((*(_85556_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _8636_d = _1bc4a4309_evalExpr((*(_85541_e)), (*((*(_85556_fc))))._field_Args[0LL]);;
	if ((_8636_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc481b11_isGoodValueToInfer(&(_8636_d))))) {
		_1bc4859e4_pushErr((*(_85541_e)).ptr(), (*((*((*(_85556_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*(_8636_d))._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("ValueOf", 7), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	return _1bc3a38e0_buildComptimeValue(&(_8636_d));;
}



inline jule::Ptr<_1bc48354c_Data> _1bc5448b6_builtinCallerStdComptimeLine(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _87538_e, jule::Ptr<_1bc26596c_FnCallExpr>* _87553_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_87553_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_87538_e)).ptr(), (*((*((*(_87553_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Line", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bac25065_Const> _8796_constant = static__1bac25494_NewI64(static_cast<jule::I64>((*((*((*(_87553_fc))))._field_Token))._field_Row));;
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc53a58d_primInt, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(_8796_constant, &__jule_any_type15), ._field_Decl=false, ._field_Constant=_8796_constant});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc545037_builtinCallerStdComptimeFile(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _88738_e, jule::Ptr<_1bc26596c_FnCallExpr>* _88753_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_88753_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_88738_e)).ptr(), (*((*((*(_88753_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("File", 4), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc399b17_comptimeFile>(_1bc399b17_comptimeFile{._field_file=(*((*((*(_88738_e))))._field_s))._field_file}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data18)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc545466_builtinCallerStdComptimeFiles(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _90039_e, jule::Ptr<_1bc26596c_FnCallExpr>* _90054_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_90054_fc))))._field_Args.len() > 0LL)) {
		_1bc4859e4_pushErr((*(_90039_e)).ptr(), (*((*((*(_90054_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Files", 5), &__jule_any_type5); __jule_collection; }));
	};
	return jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc398198_comptimeFiles>(_1bc398198_comptimeFiles{._field_files=(*((*((*(_90039_e))))._field_s))._field_files}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data17)}), ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
}



inline jule::Ptr<_1bc48354c_Data> _1bc545895_builtinCallerStdComptimeTypeAlias(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _91343_e, jule::Ptr<_1bc26596c_FnCallExpr>* _91358_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_91358_fc))))._field_Args.len() > 2LL)) {
		_1bc4859e4_pushErr((*(_91343_e)).ptr(), (*((*((*(_91358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_91358_fc))))._field_Args.len() == 0LL)) {
		_1bc4859e4_pushErr((*(_91343_e)).ptr(), (*((*(_91358_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("ident, type", 11), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_91358_fc))))._field_Args.len() == 1LL)) {
		_1bc4859e4_pushErr((*(_91343_e)).ptr(), (*((*(_91358_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	{
		auto &_match_expr{ (*((*((*(_91358_fc))))._field_Args[0LL]))._field_Kind };
		
		if (_match_expr.type == &__jule_any_type42) {
			_case_begin_1c33c5c19:;
			{
				goto _match_end_1c33c66a9;
			}
		}
		else {
			_case_begin_1c33c6731:;
			{
				_1bc4859e4_pushErr((*(_91343_e)).ptr(), (*((*((*(_91358_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
				_1bc485d57_pushSuggestion((*(_91343_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("write an identifier because identifier expected", 47)), jule::Slice<jule::Any>());
				return nullptr;;
			}
		}
		_match_end_1c33c66a9:;
	};
	jule::Ptr<_1bc247014_Token> _9346_ident = (*((*((*((*(_91358_fc))))._field_Args[0LL]))._field_Kind.cast_ptr<_1bc26355d_IdentExpr>(&__jule_any_type42)))._field_Token;;
	{
		auto &_match_expr{ (*((*(_91343_e))))._field_lookup };
		
		if (_match_expr.type_is(true, (const jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1)) {
			_case_begin_1c39571e0:;
			{
				goto _match_end_1c3956e48;
			}
		}
		else {
			_case_begin_1c3956eae:;
			{
				_1bc4859e4_pushErr((*(_91343_e)).ptr(), (*((*(_91358_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("you can call @ function in the scopes only", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("TypeAlias", 9), &__jule_any_type5); __jule_collection; }));
				return nullptr;;
			}
		}
		_match_end_1c3956e48:;
	};
	jule::Ptr<_1bc3b448e_scopeChecker> _9436_sc = (*((*(_91343_e))))._field_lookup.cast_ptr<_1bc3b448e_scopeChecker>((jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data1);;
	jule::Ptr<_1bc4b5705_TypeAlias> _9446_alias = jule::new_ptr<_1bc4b5705_TypeAlias>(_1bc4b5705_TypeAlias{._field_Scope=(*(_9436_sc))._field_tree, ._field_Public=_1bc4071e6_IsPub((*(_9346_ident))._field_Kind), ._field_Binded=false, ._field_Used=false, ._field_Generic=false, ._field_Token=_9346_ident, ._field_Ident=(*_9346_ident.alloc)._field_Kind, ._field_TypeSym=jule::new_ptr<_1bc4bdc08_TypeSym>(_1bc4bdc08_TypeSym{._field_Decl=jule::Ptr<_1bc25c90e_TypeDecl>(nullptr), ._field_Type=jule::Ptr<_1bc4b64e7_Type>(nullptr)}), ._field_Refers=jule::Slice<jule::Any>(nullptr), ._field_Generics=jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>(nullptr)});;
	jule::Ptr<_1bc48354c_Data> _9546_t = _1bc4a3836_eval1((*(_91343_e)), (*((*(_91358_fc))))._field_Args[1LL]);;
	if ((_9546_t == nullptr)) {
		return nullptr;;
	};
	if ((*(_9546_t))._field_Decl) {
		(*((*(_9446_alias))._field_TypeSym))._field_Type=(*_9546_t.alloc)._field_Type;
	} else {
		jule::Ptr<_1bc38e337_comptimeTypeInfo> _9617_cti = _1bc4bc564_comptimeTypeInfo((*(_9546_t))._field_Type.ptr());;
		if ((_9617_cti == nullptr)) {
			_1bc4859e4_pushErr((*(_91343_e)).ptr(), (*((*((*(_91358_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid syntax", 14)), jule::Slice<jule::Any>());
			_1bc485d57_pushSuggestion((*(_91343_e)).ptr(), static_cast<jule::Str>(jule::Str::lit("expected type declaration", 25)), jule::Slice<jule::Any>());
			return nullptr;;
		};
		(*((*(_9446_alias))._field_TypeSym))._field_Type=(*(_9617_cti))._field_base;
	};
	_1bc3b9609_checkTypeAlias(_9436_sc, &(_9446_alias));
	return _1bc4b0a63_buildVoidData();;
}



inline jule::Ptr<_1bc48354c_Data> _1bc545cc4_builtinCallerStdMemSizeOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _97335_e, jule::Ptr<_1bc26596c_FnCallExpr>* _97350_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<_1bc48354c_Data> _9746_result = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc53a1c5_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	if (((*((*(_97350_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_97335_e)).ptr(), (*((*(_97350_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9746_result;;
	};
	if (((*((*(_97350_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_97335_e)).ptr(), (*((*((*(_97350_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _9866_d = _1bc4a34e5_evalExprKind((*(_97335_e)), (*((*((*(_97350_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_9866_d == nullptr)) {
		return _9746_result;;
	};
	if ((!(_1bc4d40a3_validTypeForXof(&((*(_9866_d))._field_Type))))) {
		_1bc4859e4_pushErr((*(_97335_e)).ptr(), (*((*((*(_97350_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*_9866_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("SizeOf", 6), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9746_result))._field_Model=jule::Any(jule::new_ptr<_1bc2ea12d_SizeofExprModel>(_1bc2ea12d_SizeofExprModel{._field_Expr=(*(_9866_d))._field_Model}), &__jule_any_type120);
	return _9746_result;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc546203_builtinCallerStdMemAlignOf(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _99836_e, jule::Ptr<_1bc26596c_FnCallExpr>* _99851_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<_1bc48354c_Data> _9996_result = jule::new_ptr<_1bc48354c_Data>(_1bc48354c_Data{._field_untyped=false, ._field_Type=_1bc53a1c5_primUint, ._field_Mutable=false, ._field_Reference=false, ._field_Lvalue=false, ._field_IsRune=false, ._field_Model=jule::Any(nullptr), ._field_Decl=false, ._field_Constant=jule::Ptr<_1bac25065_Const>(nullptr)});;
	if (((*((*(_99851_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_99836_e)).ptr(), (*((*(_99851_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("type|expr", 9), &__jule_any_type5); __jule_collection; }));
		return _9996_result;;
	};
	if (((*((*(_99851_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_99836_e)).ptr(), (*((*((*(_99851_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _10116_d = _1bc4a34e5_evalExprKind((*(_99836_e)), (*((*((*(_99851_fc))))._field_Args[0LL]))._field_Kind);;
	if ((_10116_d == nullptr)) {
		return _9996_result;;
	};
	if ((!(_1bc4d40a3_validTypeForXof(&((*(_10116_d))._field_Type))))) {
		_1bc4859e4_pushErr((*(_99836_e)).ptr(), (*((*((*(_99851_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("type @ is invalid for function @", 32)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(_1bc4b68e3_Str((*_10116_d.alloc)._field_Type.ptr()), &__jule_any_type5); (*it++) = jule::Any(jule::Str::lit("AlignOf", 7), &__jule_any_type5); __jule_collection; }));
	};
	(*(_9996_result))._field_Model=jule::Any(jule::new_ptr<_1bc2ea7d2_AlignofExprModel>(_1bc2ea7d2_AlignofExprModel{._field_Expr=(*(_10116_d))._field_Model}), &__jule_any_type121);
	return _9996_result;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc546632_builtinCallerStdMemFree(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _102333_e, jule::Ptr<_1bc26596c_FnCallExpr>* _102348_fc, jule::Ptr<_1bc48354c_Data>* ) {
	if (((*((*(_102348_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_102333_e)).ptr(), (*((*(_102348_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("h", 1), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((*((*(_102348_fc))))._field_Args.len() > 1LL)) {
		_1bc4859e4_pushErr((*(_102333_e)).ptr(), (*((*((*(_102348_fc))))._field_Args[1LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("argument overflow: passed more argument than expected to call @", 63)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("Free", 4), &__jule_any_type5); __jule_collection; }));
	};
	jule::Ptr<_1bc48354c_Data> _10326_d = _1bc4a4309_evalExpr((*(_102333_e)), (*((*(_102348_fc))))._field_Args[0LL]);;
	if ((_10326_d == nullptr)) {
		return nullptr;;
	};
	if ((!(_1bc4b8681_GC((*(_10326_d))._field_Type.ptr())))) {
		_1bc4859e4_pushErr((*(_102333_e)).ptr(), (*((*((*(_102348_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("invalid expression", 18)), jule::Slice<jule::Any>());
	};
	jule::Ptr<_1bc48354c_Data> _10416_result = _1bc4b0a63_buildVoidData();;
	(*(_10416_result))._field_Model=jule::Any(jule::new_ptr<_1bc2eb140_FreeExprModel>(_1bc2eb140_FreeExprModel{._field_Expr=(*(_10326_d))._field_Model}), &__jule_any_type30);
	return _10416_result;;
}



inline jule::Ptr<_1bc48354c_Data> _1bc546a61_builtinCallerStdJuleIntegratedEmit(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _104644_e, jule::Ptr<_1bc26596c_FnCallExpr>* _104659_fc, jule::Ptr<_1bc48354c_Data>* _104686_d) {
	if ((!(_1bc4864d9_isUnsafe((*(_104644_e)).ptr())))) {
		_1bc4859e4_pushErr((*(_104644_e)).ptr(), (*((*(_104659_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("unsafe behaviors cannot available out of unsafe scopes", 54)), jule::Slice<jule::Any>());
	};
	if (((*((*(_104659_fc))))._field_Args.len() < 1LL)) {
		_1bc4859e4_pushErr((*(_104644_e)).ptr(), (*((*(_104659_fc))))._field_Token, static_cast<jule::Str>(jule::Str::lit("missing expression for @", 24)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(jule::Str::lit("code", 4), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	jule::Ptr<_1bc48354c_Data> _10566_argd = _1bc4a4309_evalExpr((*(_104644_e)), (*((*(_104659_fc))))._field_Args[0LL]);;
	if ((_10566_argd == nullptr)) {
		return nullptr;;
	};
	if (((_1bc4b8b9d_Prim((*(_10566_argd))._field_Type.ptr()) == nullptr) || (!(_1bc4c2aca_IsStr(_1bc4b8b9d_Prim((*(_10566_argd))._field_Type).ptr()))))) {
		_1bc4859e4_pushErr((*(_104644_e)).ptr(), (*((*((*(_104659_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("mismatched types: @ and @", 25)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = jule::Any(static_cast<jule::Str>(jule::Str::lit("str", 3)), &__jule_any_type18); (*it++) = jule::Any(_1bc4b68e3_Str((*(_10566_argd))._field_Type), &__jule_any_type5); __jule_collection; }));
		return nullptr;;
	};
	if (((!(_1bc483e87_IsConst(_10566_argd.ptr()))) || (!(_1bac297c8_IsStr((*_10566_argd.alloc)._field_Constant.ptr()))))) {
		_1bc4859e4_pushErr((*(_104644_e)).ptr(), (*((*((*(_104659_fc))))._field_Args[0LL]))._field_Token, static_cast<jule::Str>(jule::Str::lit("expressions is not constant expression", 38)), jule::Slice<jule::Any>());
		return nullptr;;
	};
	jule::Ptr<_1bc48354c_Data> _10716_r = _1bc4b0a63_buildVoidData();;
	jule::Ptr<_1bc302113_FnIns> _10736_f = _1bc4b9e8a_Fn((*((*(_104686_d))))._field_Type.ptr());;
	if (((*(_10736_f))._field_Generics.len() > 0LL)) {
		(*(_10716_r))._field_Type=(*((*(_10736_f))._field_Generics[0LL]))._field_Type;
	};
	jule::Ptr<_1bc2ead43_BackendEmitExprModel> _10786_model = jule::new_ptr<_1bc2ead43_BackendEmitExprModel>(_1bc2ead43_BackendEmitExprModel{._field_Code=_1bac271cc_ReadStr((*(_10566_argd))._field_Constant.ptr()), ._field_Exprs=jule::Slice<jule::Any>(nullptr)});;
	if (((*((*(_104659_fc))))._field_Args.len() > 1LL)) {
		(*(_10786_model))._field_Exprs=({ auto __jule_collection = jule::Slice<jule::Any>::alloc(0LL, ((*((*(_104659_fc))))._field_Args.len() - 1LL)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Any(nullptr); __jule_collection; });
		{
			auto expr = (*((*(_104659_fc))))._field_Args.slice(1LL);
			auto it = expr.begin();
			auto expr_end = expr.end();
			_iter_begin_1c5ecbb08:;
			if (it != expr_end) {
				jule::Ptr<_1bc261c43_Expr> _108415_arg = *it;
				{
					_10566_argd=_1bc4a3836_eval1((*(_104644_e)), _108415_arg);
					if ((_10566_argd == nullptr)) {
						return nullptr;;
					};
					if ((*(_10566_argd))._field_Decl) {
						(*_10786_model.alloc)._field_Exprs=jule::append((*_10786_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any((*_10566_argd.alloc)._field_Type, &__jule_any_type87); __jule_collection; }));
					} else {
						(*_10786_model.alloc)._field_Exprs=jule::append((*_10786_model.alloc)._field_Exprs,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_10566_argd))._field_Model; __jule_collection; }));
					};
				}
				_iter_next_1c5ecbb08:;
				++it;
				goto _iter_begin_1c5ecbb08;
			}
			_iter_end_1c5ecbb08:;
		};
	};
	(*(_10716_r))._field_Model=jule::Any(_10786_model, &__jule_any_type23);
	return _10716_r;;
}



inline jule::Ptr<_1bcd36e55_FileInfo> _1bcd39c6b_ParseFile(jule::Ptr<_1bc24cab9_Fileset> _2318_f) {
	if ((_2318_f == nullptr)) {
		return nullptr;;
	};
	jule::Ptr<_1bcd36e55_FileInfo> _276_finf = jule::new_ptr<_1bcd36e55_FileInfo>(_1bcd36e55_FileInfo{._field_Ast=jule::Ptr<_1bc25aa50_AST>(nullptr), ._field_Errors=jule::Slice<_1a9575ca1_Log>(nullptr)});;
	({
		__jule_tuple_x_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log __jule_assign_result = _1bcd850d5_parseFileset(_2318_f);
		(*_276_finf.alloc)._field_Ast = __jule_assign_result.__jule_result_arg0;
		(*_276_finf.alloc)._field_Errors = __jule_assign_result.__jule_result_arg1;
	});
	if (((*_276_finf.alloc)._field_Errors.len() > 0LL)) {
		(*_276_finf.alloc)._field_Ast=nullptr;
	};
	return _276_finf;;
}



inline __jule_tuple_x_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log _1bcd850d5_parseFileset(jule::Ptr<_1bc24cab9_Fileset> _5521_f) {
	__jule_tuple_x_1bc25aa50_AST__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	jule::Ptr<_1bcda5787_parser> _566_p = jule::new_ptr<_1bcda5787_parser>(_1bcda5787_parser{._field_ast=jule::Ptr<_1bc25aa50_AST>(nullptr), ._field_directives=jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>(nullptr), ._field_errors=jule::Slice<_1a9575ca1_Log>(nullptr), ._field_ep=jule::Ptr<_1bcd94ea2_exprBuilder>(nullptr)});;
	_1bcdb57b9_parse(_566_p, &(_5521_f));
	__jule_func_result.__jule_result_arg0 = (*_566_p.alloc)._field_ast;
	__jule_func_result.__jule_result_arg1 = (*_566_p.alloc)._field_errors;
	return __jule_func_result;;
}



inline jule::Ptr<_1bc26ca0c_ScopeTree> _1bcd85965_newScope(void) {
	return jule::new_ptr<_1bc26ca0c_ScopeTree>(_1bc26ca0c_ScopeTree{._field_Parent=jule::Ptr<_1bc26ca0c_ScopeTree>(nullptr), ._field_Unsafety=false, ._field_Deferred=false, ._field_Stmts=jule::Slice<_1bc26c39c_Stmt>(nullptr), ._field_End=jule::Ptr<_1bc247014_Token>(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1bcd85cea_isSt(jule::Ptr<_1bc247014_Token> _149_current, jule::Ptr<_1bc247014_Token> _1433_prev) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=(((*(_149_current))._field_Id == static_cast<jule::U32>(3LLU)) || ((*(_1433_prev))._field_Row < (*_149_current.alloc)._field_Row));
	__jule_func_result.__jule_result_arg1=((*_149_current.alloc)._field_Id == static_cast<jule::U32>(3LLU));
	return __jule_func_result;;
}



inline jule::Bool _1bcd8616e_prevIsIncompleteExpr(jule::Slice<jule::Ptr<_1bc247014_Token>>* _2026_tokens, jule::I32* _2052_i) {
	if ((((*(_2052_i)) > 1LL) && ((*((*(_2026_tokens))[((*(_2052_i)) - 2LL)]))._field_Id == static_cast<jule::U32>(19LLU)))) {
		return false;;
	};
	{
		jule::Ptr<_1bc247014_Token> _263_prev = (*(_2026_tokens))[((*(_2052_i)) - 1LL)];;
		return ((((*(_263_prev))._field_Id == static_cast<jule::U32>(17LLU)) || ((*_263_prev.alloc)._field_Id == static_cast<jule::U32>(5LLU))) || (_1bc247a5e_IsBinOp((*_263_prev.alloc)._field_Id) && ((*_263_prev.alloc)._field_Row < (*((*(_2026_tokens))[(*(_2052_i))]))._field_Row)));;
	};
}



inline __jule_tuple_int__jule_tuple_bool _1bcd86537_nextStPos(jule::Slice<jule::Ptr<_1bc247014_Token>>* _3415_tokens, jule::I32 _3440_start) {
	__jule_tuple_int__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _356_braceN = 0LL;;
	jule::I32 _366_i = _3440_start;;
	for (; (_366_i < (*(_3415_tokens)).len()); (_366_i)++) {
		{
			jule::Bool _387_ok = false;;
			jule::Bool _397_terminated = false;;
			jule::Ptr<_1bc247014_Token> _403_tok = (*(_3415_tokens))[_366_i];;
			{
				auto &_match_expr{ (*(_403_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c609ae08:;
					{
						if (((_356_braceN == 0LL) && (_366_i > _3440_start))) {
							if ((!(_1bcd8616e_prevIsIncompleteExpr(_3415_tokens, &(_366_i))))) {
								({
									__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcd85cea_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
									_387_ok = __jule_assign_result.__jule_result_arg0;
									_397_terminated = __jule_assign_result.__jule_result_arg1;
								});
								if (_387_ok) {
									goto _julec_label_1c381419b;
								};
							};
						};
						(_356_braceN)++;
						goto _iter_next_1c6099995;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c609b14a:;
					{
						(_356_braceN)--;
						if (((_356_braceN == 0LL) && ((_366_i + 1LL) < (*(_3415_tokens)).len()))) {
							({
								__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcd85cea_isSt((*(_3415_tokens))[(_366_i + 1LL)], _403_tok);
								_387_ok = __jule_assign_result.__jule_result_arg0;
								_397_terminated = __jule_assign_result.__jule_result_arg1;
							});
							if (_387_ok) {
								(_366_i)++;
								goto _julec_label_1c381419b;
							};
						};
						goto _iter_next_1c6099995;
					}
				}
				_match_end_1c609b0a1:;
			};
			if ((_356_braceN != 0LL)) {
				goto _iter_next_1c6099995;
			};
			if ((_366_i > _3440_start)) {
				if (_1bcd8616e_prevIsIncompleteExpr(_3415_tokens, &(_366_i))) {
					goto _iter_next_1c6099995;
				};
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcd85cea_isSt(_403_tok, (*(_3415_tokens))[(_366_i - 1LL)]);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			} else {
				({
					__jule_tuple_bool__jule_tuple_bool __jule_assign_result = _1bcd85cea_isSt(_403_tok, _403_tok);
					_387_ok = __jule_assign_result.__jule_result_arg0;
					_397_terminated = __jule_assign_result.__jule_result_arg1;
				});
			};
			if ((!(_387_ok))) {
				goto _iter_next_1c6099995;
			};
			_julec_label_1c381419b:;
			if (_397_terminated) {
				(_366_i)++;
			};
			__jule_func_result.__jule_result_arg0 = _366_i;
			__jule_func_result.__jule_result_arg1 = _397_terminated;
			return __jule_func_result;;
		}
	_iter_next_1c6099995:;
	}
	_iter_end_1c6099995:;;
	__jule_func_result.__jule_result_arg0 = _366_i;
	__jule_func_result.__jule_result_arg1 = false;
	return __jule_func_result;;
}



inline __jule_tuple_sx_1bc247014_Token__jule_tuple_bool _1bcd868ab_skipSt(jule::I32* _9616_i, jule::Slice<jule::Ptr<_1bc247014_Token>> _9628_tokens) {
	__jule_tuple_sx_1bc247014_Token__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg1 = false;
	jule::I32 _972_start = (*(_9616_i));;
	jule::Bool _986_terminated = false;;
	({
		__jule_tuple_int__jule_tuple_bool __jule_assign_result = _1bcd86537_nextStPos(&(_9628_tokens), _972_start);
		(*(_9616_i)) = __jule_assign_result.__jule_result_arg0;
		_986_terminated = __jule_assign_result.__jule_result_arg1;
	});
	jule::Slice<jule::Ptr<_1bc247014_Token>> _1006_stTokens = _9628_tokens.slice(_972_start, (*(_9616_i)));;
	if (_986_terminated) {
		if ((_1006_stTokens.len() == 1LL)) {
			__jule_func_result = std::move(_1bcd868ab_skipSt(_9616_i, _9628_tokens));
return __jule_func_result;;
		};
		(_1006_stTokens).mut_slice(0LL, (_1006_stTokens.len() - 1LL));;
	};
	__jule_func_result.__jule_result_arg0 = _1006_stTokens;
	__jule_func_result.__jule_result_arg1 = _986_terminated;
	return __jule_func_result;;
}



inline jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _1bcd87093_splitStmts(jule::Slice<jule::Ptr<_1bc247014_Token>>* _11720_tokens) {
	jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> _1186_stmts = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bcd86bdb_stmt>>::alloc(0LL, 20LL); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bcd86bdb_stmt>(nullptr); __jule_collection; });;
	jule::I32 _1196_pos = 0LL;;
	while ((_1196_pos < (*(_11720_tokens)).len())) {
		{
			jule::Slice<jule::Ptr<_1bc247014_Token>> _1217_stmt;
			jule::Bool _12113_terminated;
			({
				__jule_tuple_sx_1bc247014_Token__jule_tuple_bool __jule_assign_result = _1bcd868ab_skipSt(&(_1196_pos), (*(_11720_tokens)));
				_1217_stmt = __jule_assign_result.__jule_result_arg0;
				_12113_terminated = __jule_assign_result.__jule_result_arg1;
			});
			{ jule::Slice<jule::Ptr<_1bcd86bdb_stmt>> &__jule_push_dest = _1186_stmts; __jule_push_dest.push(jule::new_ptr<_1bcd86bdb_stmt>(_1bcd86bdb_stmt{._field_tokens=_1217_stmt, ._field_terminated=_12113_terminated})); };
		}
	_iter_next_1c3818821:;
	}
	_iter_end_1c3818821:;;
	return _1186_stmts;;
}



inline jule::Bool _1bcda05d9_isTypeOp(jule::U32* _87114_id) {
	return ((((*(_87114_id)) == static_cast<jule::U32>(65LLU)) || ((*(_87114_id)) == static_cast<jule::U32>(54LLU))) || ((*(_87114_id)) == static_cast<jule::U32>(62LLU)));;
}



inline jule::Bool _1bcda08e7_isTypeRange(jule::Slice<jule::Ptr<_1bc247014_Token>>* _87821_tokens) {
	jule::Bool _8796_op = false;;
	{
		auto expr = _87821_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c600ee38:;
		if (it != expr_end) {
			jule::I32 _8806_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _8809_token = *it;
			{
				if (((*(_8809_token))._field_Id == static_cast<jule::U32>(76LLU))) {
					if (_8796_op) {
						return true;;
					};
					jule::I32 _8858_rangeN = 0LL;;
					jule::Slice<jule::Ptr<_1bc247014_Token>> _8868_lTokens = (*(_87821_tokens)).slice(_8806_i);;
					{
						auto expr = &(_8868_lTokens);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6010d6d:;
						if (it != expr_end) {
							jule::Ptr<_1bc247014_Token> _88711_lToken = *it;
							{
								{
									auto &_match_expr{ (*(_88711_lToken))._field_Id };
									
									if (_match_expr == static_cast<jule::U32>(76LLU)) {
										_case_begin_1c60121c1:;
										{
											(_8858_rangeN)++;
											goto _iter_next_1c6010d6d;
										}
									}
									else if (_match_expr == static_cast<jule::U32>(77LLU)) {
										_case_begin_1c60125ab:;
										{
											(_8858_rangeN)--;
											goto _iter_next_1c6010d6d;
										}
									}
									_match_end_1c60124ac:;
								};
								if ((_8858_rangeN == 0LL)) {
									return _1bcda05d9_isTypeOp(&((*(_88711_lToken))._field_Id));;
								};
							}
							_iter_next_1c6010d6d:;
							++it;
							goto _iter_begin_1c6010d6d;
						}
						_iter_end_1c6010d6d:;
					};
					return true;;
				};
				if ((!(_1bcda05d9_isTypeOp(&((*(_8809_token))._field_Id))))) {
					return false;;
				};
				_8796_op=true;
			}
			_iter_next_1c600ee38:;
			++it;
			_8806_i++;
			goto _iter_begin_1c600ee38;
		}
		_iter_end_1c600ee38:;
	};
	return true;;
}



inline jule::Slice<jule::Ptr<_1bc247014_Token>> _1bcda0bb1_getBlockExpr(jule::Slice<jule::Ptr<_1bc247014_Token>>* _91122_tokens) {
	jule::I32 _9126_braceN = 0LL;;
	jule::I32 _9136_skipToNextBraceClose = 0LL;;
	{
		auto expr = _91122_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c601416d:;
		if (it != expr_end) {
			jule::I32 _9146_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _9149_tok = *it;
			{
				{
					auto &_match_expr{ (*(_9149_tok))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(31LLU)) {
						_case_begin_1c6015229:;
						{
							if (((((*(_91122_tokens)).len() - _9146_i) > 1LL) && ((*((*(_91122_tokens))[(_9146_i + 1LL)]))._field_Id == static_cast<jule::U32>(72LLU)))) {
								(_9136_skipToNextBraceClose)++;
							};
						}
					}
					else if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c60152b2:;
						{
							if (((_9126_braceN > 0LL) || (_9136_skipToNextBraceClose > 0LL))) {
								if ((_9136_skipToNextBraceClose > 0LL)) {
									(_9136_skipToNextBraceClose)--;
								};
								(_9126_braceN)++;
								goto _match_end_1c601515d;
							};
							return (*(_91122_tokens)).slice(0LL, _9146_i);;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c6015328:;
						{
							(_9126_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c601538e:;
						{
							(_9126_braceN)--;
						}
					}
					_match_end_1c601515d:;
				};
			}
			_iter_next_1c601416d:;
			++it;
			_9146_i++;
			goto _iter_begin_1c601416d;
		}
		_iter_end_1c601416d:;
	};
	return nullptr;;
}



inline __jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token _1bcda1079_splitDelim(jule::Slice<jule::Ptr<_1bc247014_Token>>* _94320_tokens, jule::U32 _94345_delim) {
	__jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token __jule_func_result;
	jule::I32 _9446_func = -1LL;;
	jule::I32 _9456_rangeN = 0LL;;
	jule::I32 _9466_i = 0LL;;
	for (; (_9466_i < (*(_94320_tokens)).len()); (_9466_i)++) {
		{
			jule::Ptr<_1bc247014_Token> _9483_token = (*(_94320_tokens))[_9466_i];;
			{
				auto &_match_expr{ (*(_9483_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(29LLU)) {
					_case_begin_1c6019cde:;
					{
						_9446_func=_9456_rangeN;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c6019d66:;
					{
						(_9456_rangeN)++;
						goto _iter_next_1c601876b;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c6019dcc:;
					{
						(_9456_rangeN)--;
						if ((_9446_func == _9456_rangeN)) {
							_9446_func=-1LL;
							if (((((*(_94320_tokens)).len() - _9466_i) > 1LL) && ((*((*(_94320_tokens))[(_9466_i + 1LL)]))._field_Id == static_cast<jule::U32>(8LLU)))) {
								(_9466_i)++;
								goto _iter_next_1c601876b;
							};
						};
					}
				}
				else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
					_case_begin_1c6019e43:;
					{
						(_9456_rangeN)--;
					}
				}
				_match_end_1c6019a58:;
			};
			if ((((*(_9483_token))._field_Id == _94345_delim) && (_9456_rangeN == 0LL))) {
				jule::Slice<jule::Ptr<_1bc247014_Token>> _9728_l = (*(_94320_tokens)).slice(0LL, _9466_i);;
				jule::Slice<jule::Ptr<_1bc247014_Token>> _9738_r = (*(_94320_tokens)).slice((_9466_i + 1LL));;
				__jule_func_result.__jule_result_arg0 = _9728_l;
				__jule_func_result.__jule_result_arg1 = _9738_r;
				return __jule_func_result;;
			};
		}
	_iter_next_1c601876b:;
	}
	_iter_end_1c601876b:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline jule::I32 _1bcda1343_findLowestPrecOp(jule::Slice<jule::Ptr<_1bc247014_Token>>* _98222_tokens) {
	jule::U8 _9876_prec = 255LLU;;
	jule::I32 _9886_precPos = -1LL;;
	jule::I32 _9906_braceN = 0LL;;
	jule::Bool _9916_skipToNextBraceOpen = false;;
	{
		auto expr = _98222_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c60200d0:;
		if (it != expr_end) {
			jule::I32 _9926_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> *_9929_token = it;
			{
				{
					auto &_match_expr{ (*((*(_9929_token))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU)) {
						_case_begin_1c6020e16:;
						{
							_9916_skipToNextBraceOpen=false;
							goto _case_begin_1c6020e9e;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(74LLU) || _match_expr == static_cast<jule::U32>(76LLU)) {
						_case_begin_1c6020e9e:;
						{
							(_9906_braceN)++;
							goto _iter_next_1c60200d0;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(75LLU) || _match_expr == static_cast<jule::U32>(77LLU)) {
						_case_begin_1c6021015:;
						{
							(_9906_braceN)--;
							goto _iter_next_1c60200d0;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(13LLU)) {
						_case_begin_1c602107b:;
						{
							_9916_skipToNextBraceOpen=true;
							goto _iter_next_1c60200d0;
						}
					}
					_match_end_1c6020d4a:;
				};
				{
					
					if (_9916_skipToNextBraceOpen) {
						_case_begin_1c6022830:;
						{
							goto _iter_next_1c60200d0;
						}
					}
					else if ((_9926_i == 0LL)) {
						_case_begin_1c60228b8:;
						{
							goto _iter_next_1c60200d0;
						}
					}
					else if ((_9906_braceN > 0LL)) {
						_case_begin_1c602292e:;
						{
							goto _iter_next_1c60200d0;
						}
					}
					else if ((!(_1bc247a5e_IsBinOp((*((*(_9929_token))))._field_Id)))) {
						_case_begin_1c6022995:;
						{
							goto _iter_next_1c60200d0;
						}
					}
					_match_end_1c6022643:;
				};
				jule::Ptr<_1bc247014_Token> _10213_left = (*(_98222_tokens))[(_9926_i - 1LL)];;
				if ((_1bc247751_IsUnaryOp((*(_10213_left))._field_Id) || ((*_10213_left.alloc)._field_Id == static_cast<jule::U32>(8LLU)))) {
					goto _iter_next_1c60200d0;
				};
				if (((_9926_i > 1LL) && ((*(_10213_left))._field_Id == static_cast<jule::U32>(77LLU)))) {
					jule::Ptr<_1bc247014_Token> _10294_lleft = (*(_98222_tokens))[(_9926_i - 2LL)];;
					if (((*(_10294_lleft))._field_Id == static_cast<jule::U32>(76LLU))) {
						if ((((*((*(_9929_token))))._field_Id == static_cast<jule::U32>(65LLU)) || ((*(*(_9929_token)).alloc)._field_Id == static_cast<jule::U32>(62LLU)))) {
							goto _iter_next_1c60200d0;
						};
					};
				};
				jule::U8 _10383_p = _1bc2473bb_Prec((*(_9929_token)).ptr());;
				if (((_10383_p != 0LLU) && (_10383_p <= _9876_prec))) {
					_9876_prec=_10383_p;
					_9886_precPos=_9926_i;
				};
			}
			_iter_next_1c60200d0:;
			++it;
			_9926_i++;
			goto _iter_begin_1c60200d0;
		}
		_iter_end_1c60200d0:;
	};
	return _9886_precPos;;
}



inline jule::Ptr<_1bc26355d_IdentExpr> _1bcda160c_buildIdentExpr(jule::Ptr<_1bc247014_Token>* _104724_token) {
	return jule::new_ptr<_1bc26355d_IdentExpr>(_1bc26355d_IdentExpr{._field_Token=(*(_104724_token)), ._field_Ident=(*((*(_104724_token))))._field_Kind, ._field_Binded=false});;
}



inline __jule_tuple_sx_1bc247014_Token__jule_tuple_int _1bcda18c6_getRangeExprTokens(jule::Slice<jule::Ptr<_1bc247014_Token>>* _105528_tokens) {
	__jule_tuple_sx_1bc247014_Token__jule_tuple_int __jule_func_result;
	__jule_func_result.__jule_result_arg1 = 0;
	jule::I32 _10566_rangeN = 0LL;;
	jule::I32 _10576_i = ((*(_105528_tokens)).len() - 1LL);;
	for (; (_10576_i >= 0LL); (_10576_i)--) {
		{
			jule::Ptr<_1bc247014_Token> _10593_tok = (*(_105528_tokens))[_10576_i];;
			{
				auto &_match_expr{ (*(_10593_tok))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c6029705:;
					{
						(_10566_rangeN)++;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c6029a35:;
					{
						(_10566_rangeN)--;
					}
				}
				_match_end_1c602977c:;
			};
			if ((_10566_rangeN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_105528_tokens)).slice(0LL, _10576_i);
				__jule_func_result.__jule_result_arg1 = _10566_rangeN;
				return __jule_func_result;;
			};
		}
	_iter_next_1c6028bcc:;
	}
	_iter_end_1c6028bcc:;;
	__jule_func_result.__jule_result_arg0 = nullptr;
	__jule_func_result.__jule_result_arg1 = _10566_rangeN;
	return __jule_func_result;;
}



inline jule::Bool _1bcda1ca0_isAnonFnHead(jule::Slice<jule::Ptr<_1bc247014_Token>>* _107818_tokens) {
	{
		auto &_match_expr{ (*((*(_107818_tokens))[0LL]))._field_Id };
		
		if (_match_expr == static_cast<jule::U32>(31LLU)) {
			_case_begin_1c602b152:;
			{
				if ((((*(_107818_tokens)).len() == 1LL) || ((*((*(_107818_tokens))[1LL]))._field_Id != static_cast<jule::U32>(29LLU)))) {
					goto _match_end_1c602b916;
				};
				goto _case_begin_1c602ba59;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(29LLU)) {
			_case_begin_1c602ba59:;
			{
				if (((*((*(_107818_tokens))[((*(_107818_tokens)).len() - 1LL)]))._field_Id == static_cast<jule::U32>(73LLU))) {
					goto _match_end_1c602b916;
				};
				return true;;
			}
		}
		_match_end_1c602b916:;
	};
	return false;;
}



inline jule::Bool _1bcda294e_checkAssignTokens(jule::Slice<jule::Ptr<_1bc247014_Token>>* _1623_tokens) {
	if ((((*(_1623_tokens)).len() == 0LL) || (!(_1bc24ba96_IsAssign((*((*(_1623_tokens))[0LL]))._field_Id))))) {
		return false;;
	};
	jule::I32 _206_braceN = 0LL;;
	{
		auto expr = _1623_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c649e240:;
		if (it != expr_end) {
			jule::Ptr<_1bc247014_Token> *_219_t = it;
			{
				{
					auto &_match_expr{ (*((*(_219_t))))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c649ea6a:;
						{
							(_206_braceN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c649ee11:;
						{
							(_206_braceN)--;
						}
					}
					_match_end_1c649ed12:;
				};
				{
					
					if ((_206_braceN < 0LL)) {
						_case_begin_1c64a1077:;
						{
							return false;;
						}
					}
					else if ((_206_braceN > 0LL)) {
						_case_begin_1c64a10dd:;
						{
							goto _iter_next_1c649e240;
						}
					}
					else if (_1bc24c129_IsAssignOp((*((*(_219_t))))._field_Id) || ((*(*(_219_t)).alloc)._field_Id == static_cast<jule::U32>(38LLU))) {
						_case_begin_1c64a1154:;
						{
							return true;;
						}
					}
					_match_end_1c64a1011:;
				};
			}
			_iter_next_1c649e240:;
			++it;
			goto _iter_begin_1c649e240;
		}
		_iter_end_1c649e240:;
	};
	return false;;
}



inline _1a9575ca1_Log _1bcda390b_makeErr(jule::I32 _1212_row, jule::I32 _1222_col, jule::Ptr<_1bc24cab9_Fileset>* _1233_f, jule::Str _1253_fmt, jule::Slice<jule::Any> _1273_args) {
	return _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=_1212_row, ._field_Column=_1222_col, ._field_Path=(*((*(_1233_f))))._field_Path, ._field_Text=_1a9576213_Logf(_1253_fmt, _1273_args), ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Slice<jule::Ptr<_1bc247014_Token>> _1bcda3e39_range(jule::I32* _3015_i, jule::U32 _3023_open, jule::U32 _3040_close, jule::Slice<jule::Ptr<_1bc247014_Token>>* _3063_tokens) {
	if (((*(_3015_i)) >= (*(_3063_tokens)).len())) {
		return nullptr;;
	};
	jule::Ptr<_1bc247014_Token> _342_tok = (*(_3063_tokens))[(*(_3015_i))];;
	if (((*(_342_tok))._field_Id != _3023_open)) {
		return nullptr;;
	};
	((*(_3015_i)))++;
	jule::I32 _396_rangeN = 1LL;;
	jule::I32 _402_start = (*(_3015_i));;
	for (; ((_396_rangeN != 0LL) && ((*(_3015_i)) < (*(_3063_tokens)).len())); ((*(_3015_i)))++) {
		{
			jule::Ptr<_1bc247014_Token> _423_token = (*(_3063_tokens))[(*(_3015_i))];;
			{
				auto &_match_expr{ (*(_423_token))._field_Id };
				
				if (_match_expr == _3023_open) {
					_case_begin_1c64a6159:;
					{
						(_396_rangeN)++;
					}
				}
				else if (_match_expr == _3040_close) {
					_case_begin_1c64a64bc:;
					{
						(_396_rangeN)--;
					}
				}
				_match_end_1c64a6434:;
			};
		}
	_iter_next_1c64a3c5b:;
	}
	_iter_end_1c64a3c5b:;;
	return (*(_3063_tokens)).slice(_402_start, ((*(_3015_i)) - 1LL));;
}



inline __jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token _1bcda4203_rangeLast(jule::Slice<jule::Ptr<_1bc247014_Token>>* _6019_tokens) {
	__jule_tuple_sx_1bc247014_Token__jule_tuple_sx_1bc247014_Token __jule_func_result;
	if (((*(_6019_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::U32 _642_first = (*((*(_6019_tokens))[((*(_6019_tokens)).len() - 1LL)]))._field_Id;;
	if ((((_642_first != static_cast<jule::U32>(73LLU)) && (_642_first != static_cast<jule::U32>(76LLU))) && (_642_first != static_cast<jule::U32>(75LLU)))) {
		__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _706_braceN = 0LL;;
	jule::I32 _716_i = ((*(_6019_tokens)).len() - 1LL);;
	for (; (_716_i >= 0LL); (_716_i)--) {
		{
			jule::Ptr<_1bc247014_Token> _733_token = (*(_6019_tokens))[_716_i];;
			{
				auto &_match_expr{ (*(_733_token))._field_Id };
				
				if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
					_case_begin_1c64aa339:;
					{
						(_706_braceN)++;
						goto _iter_next_1c64a9679;
					}
				}
				else if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
					_case_begin_1c64aa669:;
					{
						(_706_braceN)--;
					}
				}
				_match_end_1c64aa3b1:;
			};
			if ((_706_braceN == 0LL)) {
				__jule_func_result.__jule_result_arg0 = (*(_6019_tokens)).slice(0LL, _716_i);
				__jule_func_result.__jule_result_arg1 = (*(_6019_tokens)).slice(_716_i);
				return __jule_func_result;;
			};
		}
	_iter_next_1c64a9679:;
	}
	_iter_end_1c64a9679:;;
	__jule_func_result.__jule_result_arg0 = (*(_6019_tokens));
	__jule_func_result.__jule_result_arg1 = nullptr;
	return __jule_func_result;;
}



inline __jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log _1bcda46a9_parts(jule::Slice<jule::Ptr<_1bc247014_Token>>* _9815_tokens, jule::U32 _9840_id, jule::Bool _9855_exprMust) {
	__jule_tuple_ssx_1bc247014_Token__jule_tuple_s_1a9575ca1_Log __jule_func_result;
	if (((*(_9815_tokens)).len() == 0LL)) {
		__jule_func_result.__jule_result_arg0 = nullptr;
		__jule_func_result.__jule_result_arg1 = nullptr;
		return __jule_func_result;;
	};
	jule::I32 _1026_rangeN = 0LL;;
	jule::I32 _1036_last = 0LL;;
	{
		auto expr = _9815_tokens;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c64ac6d2:;
		if (it != expr_end) {
			jule::I32 _1046_i = it - expr->begin();
			jule::Ptr<_1bc247014_Token> _1049_token = *it;
			{
				{
					auto &_match_expr{ (*(_1049_token))._field_Id };
					
					if (_match_expr == static_cast<jule::U32>(72LLU) || _match_expr == static_cast<jule::U32>(76LLU) || _match_expr == static_cast<jule::U32>(74LLU)) {
						_case_begin_1c64ae5c4:;
						{
							(_1026_rangeN)++;
						}
					}
					else if (_match_expr == static_cast<jule::U32>(73LLU) || _match_expr == static_cast<jule::U32>(77LLU) || _match_expr == static_cast<jule::U32>(75LLU)) {
						_case_begin_1c64ae64b:;
						{
							(_1026_rangeN)--;
						}
					}
					else if (_match_expr == _9840_id) {
						_case_begin_1c64ae6b2:;
						{
							if ((_1026_rangeN > 0LL)) {
								goto _iter_next_1c64ac6d2;
							};
							if ((_9855_exprMust && ((_1046_i - _1036_last) <= 0LL))) {
								_1a9575ca1_Log _1155_err = _1bcda390b_makeErr((*(_1049_token))._field_Row, (*_1049_token.alloc)._field_Column, &((*_1049_token.alloc)._field_File), static_cast<jule::Str>(jule::Str::lit("expression missing", 18)), jule::Slice<jule::Any>());;
								{ jule::Slice<_1a9575ca1_Log> &__jule_push_dest = __jule_func_result.__jule_result_arg1; __jule_push_dest.push(_1155_err); };
							};
							{ jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last, _1046_i)); };
							_1036_last=(_1046_i + 1LL);
						}
					}
					_match_end_1c64ae508:;
				};
			}
			_iter_next_1c64ac6d2:;
			++it;
			_1046_i++;
			goto _iter_begin_1c64ac6d2;
		}
		_iter_end_1c64ac6d2:;
	};
	if ((_1036_last < (*(_9815_tokens)).len())) {
		{ jule::Slice<jule::Slice<jule::Ptr<_1bc247014_Token>>> &__jule_push_dest = __jule_func_result.__jule_result_arg0; __jule_push_dest.push((*(_9815_tokens)).slice(_1036_last)); };
	};
	return __jule_func_result;;
}



inline jule::U32 _1bcda4940_getCloseOfBrace(jule::U32 _12820_left) {
	{
		auto &_match_expr{ _12820_left };
		
		if (_match_expr == static_cast<jule::U32>(75LLU)) {
			_case_begin_1c64b2be3:;
			{
				return static_cast<jule::U32>(74LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(73LLU)) {
			_case_begin_1c64b2c59:;
			{
				return static_cast<jule::U32>(72LLU);;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(77LLU)) {
			_case_begin_1c64b2cc0:;
			{
				return static_cast<jule::U32>(76LLU);;
			}
		}
		else {
			_case_begin_1c64b084a:;
			{
				return _12820_left;;
			}
		}
		_match_end_1c64b0927:;
	};
}



inline _1a9575ca1_Log _1bcda4d6e_compilerErr(jule::Ptr<_1bc247014_Token>* _14117_token, jule::Str* _14140_fmt, jule::Slice<jule::Any> _14160_args) {
	return _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=(*((*(_14117_token))))._field_Row, ._field_Column=(*((*(_14117_token))))._field_Column, ._field_Path=(*((*((*(_14117_token))))._field_File))._field_Path, ._field_Text=_1a9576213_Logf((*(_14140_fmt)), _14160_args), ._field_Line=_1bc24e0a4_GetRow((*((*(_14117_token))))._field_File, (*((*(_14117_token))))._field_Row), ._field_Suggestion=jule::Str()};;
}



inline void _1bcda5215_pushSuggestion(_1a9575ca1_Log* _15230_log, jule::Str _15248_fmt, jule::Slice<jule::Any> _15268_args) {
	(*(_15230_log))._field_Suggestion=_1a9576213_Logf(_15248_fmt, _15268_args);
}



inline jule::Ptr<_1bc25c90e_TypeDecl> _1bcdb617c_buildVoidType(void) {
	return jule::new_ptr<_1bc25c90e_TypeDecl>(_1bc25c90e_TypeDecl{._field_Token=jule::Ptr<_1bc247014_Token>(nullptr), ._field_Kind=jule::Any(nullptr)});;
}



inline __jule_tuple_bool__jule_tuple_bool _1bc5cd796_checkOs(jule::Str _912_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _912_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("windows", 7))) {
			_case_begin_1c65687b0:;
			{
				__jule_func_result.__jule_result_arg0=_1a95790b2_IsWindows(_1abb3e873_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("darwin", 6))) {
			_case_begin_1c6568826:;
			{
				__jule_func_result.__jule_result_arg0=_1a95793c0_IsDarwin(_1abb3e873_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("linux", 5))) {
			_case_begin_1c6568491:;
			{
				__jule_func_result.__jule_result_arg0=_1a9579689_IsLinux(_1abb3e873_OS);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("unix", 4))) {
			_case_begin_1c6568507:;
			{
				__jule_func_result.__jule_result_arg0=_1a957a2e4_IsUnix(_1abb3e873_OS);
			}
		}
		else {
			_case_begin_1c6567dec:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c6568370:;
	};
	return __jule_func_result;;
}



inline __jule_tuple_bool__jule_tuple_bool _1bc5c8b04_checkArch(jule::Str _2814_arg) {
	__jule_tuple_bool__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0=false;
	__jule_func_result.__jule_result_arg1=true;
	{
		auto &_match_expr{ _2814_arg };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("i386", 4))) {
			_case_begin_1c656ad23:;
			{
				__jule_func_result.__jule_result_arg0=_1a95799ca_IsI386(_1abb3eb2b_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("amd64", 5))) {
			_case_begin_1c656ad89:;
			{
				__jule_func_result.__jule_result_arg0=_1a9579c61_IsAmd64(_1abb3eb2b_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("arm64", 5))) {
			_case_begin_1c656aa04:;
			{
				__jule_func_result.__jule_result_arg0=_1a957a02a_IsArm64(_1abb3eb2b_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x64", 3))) {
			_case_begin_1c656aa6a:;
			{
				__jule_func_result.__jule_result_arg0=_1a957a910_Is64Bit(_1abb3eb2b_Arch);
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("x32", 3))) {
			_case_begin_1c656aad1:;
			{
				__jule_func_result.__jule_result_arg0=_1a957a6bd_Is32Bit(_1abb3eb2b_Arch);
			}
		}
		else {
			_case_begin_1c656a460:;
			{
				__jule_func_result.__jule_result_arg0=true;
				__jule_func_result.__jule_result_arg1=false;
			}
		}
		_match_end_1c656a8d3:;
	};
	return __jule_func_result;;
}



inline void _1bc5e5071_setOsVars(jule::Slice<jule::Str>* _3619_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(_1abb3e873_OS); };
	if (_1a957a2e4_IsUnix(_1abb3e873_OS)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_3619_vars)); __jule_push_dest.push(jule::Str::lit("unix", 4)); };
	};
}



inline void _1bc5e52e6_setArchVars(jule::Slice<jule::Str>* _4421_vars) {
	{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(_1abb3eb2b_Arch); };
	if (_1a957a910_Is64Bit(_1abb3eb2b_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x64", 3)); };
	};
	if (_1a957a6bd_Is32Bit(_1abb3eb2b_Arch)) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_4421_vars)); __jule_push_dest.push(jule::Str::lit("x32", 3)); };
	};
}



inline void _1bc5e55d2_initVars(jule::Slice<jule::Str>* _5518_vars, _1bc5e4c52_CompileInfo* _5532_info) {
	_1bc5e5071_setOsVars(_5518_vars);
	_1bc5e52e6_setArchVars(_5518_vars);
	if ((*(_5532_info))._field_Prod) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("production", 10)); };
	};
	if ((*(_5532_info))._field_Test) {
		{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("test", 4)); };
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1c65703ee:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("clang", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1c656ed8d:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("gcc", 3)); };
			}
		}
		_match_end_1c656ed27:;
	};
	{
		auto &_match_expr{ (*(_5532_info))._field_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1c656ee37:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp14", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1c65713de:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp17", 5)); };
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1c6571455:;
			{
				{ jule::Slice<jule::Str> &__jule_push_dest = (*(_5518_vars)); __jule_push_dest.push(jule::Str::lit("cpp20", 5)); };
			}
		}
		_match_end_1c6571356:;
	};
}



inline jule::I32 _1bc5e599a_findVar(jule::Slice<jule::Str> _8412_vars, jule::Str _8425_ident) {
	if ((_8425_ident).empty()) {
		return -1LL;;
	};
	{
		auto expr = &(_8412_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65732ae:;
		if (it != expr_end) {
			jule::I32 _886_i = it - expr->begin();
			jule::Str *_889_var = it;
			{
				if (((*(_889_var)) == _8425_ident)) {
					return _886_i;;
				};
			}
			_iter_next_1c65732ae:;
			++it;
			_886_i++;
			goto _iter_begin_1c65732ae;
		}
		_iter_end_1c65732ae:;
	};
	return -1LL;;
}



inline jule::Slice<jule::U8> _1bcdba24c_readBuff(jule::Str _1713_path) {
	return ({
		auto except = static__1a9c31bcb_Read(_1713_path);
		(except.ok()) ? (except.result) : ({{
			jule::println(_1be2ec53a_toStr(jule::Str::lit("error: file cannot read", 23)));
			;
			_1a9cd29e6_Exit(1LL);
			return nullptr;;
		} jule::Slice<jule::U8>(nullptr);});
	});;
}



inline _1a9575ca1_Log _1bcdba55a_flatCompilerErr(jule::Str _2820_text) {
	return _1a9575ca1_Log{._field_Kind=static_cast<jule::I32>(1LL), ._field_Row=0, ._field_Column=0, ._field_Path=jule::Str(), ._field_Text=_2820_text, ._field_Line=jule::Str(), ._field_Suggestion=jule::Str()};;
}



inline jule::Ptr<_1bc2ee055_Fn> _1bc546d80_RuntimeFindFn(jule::Ptr<_1bc3dcb9e_ImportInfo>* _723_runtime, jule::Str _751_ident) {
	;
	jule::Ptr<_1bc2ee055_Fn> _96_f = _1bc3de2aa_FindFn((*(_723_runtime)).ptr(), _751_ident, false);;
	if ((_96_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime function is not exist, this is an implementation mistake, this panic call should be unreachable", 108) + jule::Str("\nlocation: julec/obj/runtime.jule:11:3"));;
	};
	return _96_f;;
}



inline jule::Ptr<_1bc27d26a_Struct> _1bc547248_RuntimeFindStruct(jule::Ptr<_1bc3dcb9e_ImportInfo>* _1627_runtime, jule::Str _1655_ident) {
	;
	jule::Ptr<_1bc27d26a_Struct> _186_f = _1bc3dddae_FindStruct((*(_1627_runtime)).ptr(), _1655_ident, false);;
	if ((_186_f == nullptr)) {
		__jule_panic_s(jule::Str::lit("obj: runtime struct is not exist, this is an implementation mistake, this panic call should be unreachable", 106) + jule::Str("\nlocation: julec/obj/runtime.jule:20:3"));;
	};
	return _186_f;;
}



inline jule::Uintptr _1bc547e6e_TypeData(jule::Any* _1414_m) {
	return ((jule::Uintptr)((*(((_1bc547c82_anyData*)(_1414_m))))._field_typePtr));;
}



inline jule::Bool _1bc548337_equalConst(jule::Ptr<_1bac25065_Const> _1815_l, jule::Ptr<_1bac25065_Const> _1836_r) {
	{
		
		if (_1bac29025_IsI64(_1815_l.ptr())) {
			_case_begin_1c65c41cd:;
			{
				return (_1bac29025_IsI64(_1836_r.ptr()) && (_1bac26929_ReadI64(_1815_l) == _1bac26929_ReadI64(_1836_r)));;
			}
		}
		else if (_1bac292ab_IsU64(_1815_l.ptr())) {
			_case_begin_1c65c4255:;
			{
				return (_1bac292ab_IsU64(_1836_r.ptr()) && (_1bac26bb0_ReadU64(_1815_l) == _1bac26bb0_ReadU64(_1836_r)));;
			}
		}
		else if (_1bac29a5e_IsF64(_1815_l)) {
			_case_begin_1c65c42cc:;
			{
				return (_1bac29a5e_IsF64(_1836_r) && (_1bac27463_ReadF64(_1815_l) == _1bac27463_ReadF64(_1836_r)));;
			}
		}
		else if (_1bac297c8_IsStr(_1815_l)) {
			_case_begin_1c65c4354:;
			{
				return (_1bac297c8_IsStr(_1836_r) && (_1bac271cc_ReadStr(_1815_l) == _1bac271cc_ReadStr(_1836_r)));;
			}
		}
		else if (_1bac29542_IsBool(_1815_l)) {
			_case_begin_1c65c43cb:;
			{
				return (_1bac29542_IsBool(_1836_r) && (_1bac26e46_ReadBool(_1815_l) == _1bac26e46_ReadBool(_1836_r)));;
			}
		}
		else if (_1bac29ce5_IsNil(_1815_l)) {
			_case_begin_1c65c4574:;
			{
				return _1bac29ce5_IsNil(_1836_r);;
			}
		}
		else {
			_case_begin_1c65c40e0:;
			{
				return false;;
			}
		}
		_match_end_1c65c3ee1:;
	};
}



inline jule::Bool _1bc5486ab_equalCasting(jule::Ptr<_1bc2e33bd_CastingExprModel> _3717_l, jule::Ptr<_1bc2e33bd_CastingExprModel> _3745_r) {
	if ((!(_1bc4b6c34_Equal((*(_3717_l))._field_Type, (*(_3745_r))._field_Type)))) {
		return false;;
	};
	return _1bc5495e1_EqualModels((*((*(_3717_l))._field_Expr))._field_Model, (*(*(_3745_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1bc548a74_equalUnary(jule::Ptr<_1bc2e2169_UnaryExprModel> _4415_l, jule::Ptr<_1bc2e2169_UnaryExprModel> _4441_r) {
	if ((((*((*(_4415_l))._field_Op))._field_Id != (*(*(_4441_r))._field_Op.alloc)._field_Id) || ((*(*(_4415_l))._field_Op.alloc)._field_Kind != (*(*(_4441_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return _1bc5495e1_EqualModels((*((*(_4415_l))._field_Expr))._field_Model, (*(*(_4441_r))._field_Expr.alloc)._field_Model);;
}



inline jule::Bool _1bc548de8_equalIndexing(jule::Ptr<_1bc2e4600_IndexingExprModel> _5118_l, jule::Ptr<_1bc2e4600_IndexingExprModel> _5147_r) {
	return (_1bc5495e1_EqualModels((*((*(_5118_l))._field_Expr))._field_Model, (*(*(_5147_r))._field_Expr.alloc)._field_Model) && _1bc5495e1_EqualModels((*((*_5118_l.alloc)._field_Index))._field_Model, (*(*(_5147_r))._field_Index.alloc)._field_Model));;
}



inline jule::Bool _1bc54926c_equalBinary(jule::Ptr<_1bc2e1c90_BinaryExprModel> _5616_l, jule::Ptr<_1bc2e1c90_BinaryExprModel> _5643_r) {
	if ((((*((*(_5616_l))._field_Op))._field_Id != (*(*(_5643_r))._field_Op.alloc)._field_Id) || ((*(*(_5616_l))._field_Op.alloc)._field_Kind != (*(*(_5643_r))._field_Op.alloc)._field_Kind))) {
		return false;;
	};
	return (_1bc5495e1_EqualModels((*((*(_5616_l))._field_Left))._field_Model, (*(*(_5643_r))._field_Left.alloc)._field_Model) && _1bc5495e1_EqualModels((*((*_5616_l.alloc)._field_Right))._field_Model, (*(*(_5643_r))._field_Right.alloc)._field_Model));;
}



inline jule::Bool _1bc5495e1_EqualModels(jule::Any _6716_l, jule::Any _6736_r) {
	if ((_1bc547e6e_TypeData(&(_6716_l)) != _1bc547e6e_TypeData(&(_6736_r)))) {
		return false;;
	};
	{
		auto &_match_expr{ _6716_l };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c65d3907:;
			{
				return (_6716_l.unsafe_cast_ptr<_1bc42dc12_Var>() == _6736_r.cast_ptr<_1bc42dc12_Var>(&__jule_any_type7));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c65d396d:;
			{
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _753_li = _6716_l.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>();;
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _763_ri = _6736_r.cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				return (((*(_753_li))._field_Field == (*(_763_ri))._field_Field) && _1bc5495e1_EqualModels((*((*_753_li.alloc)._field_Expr))._field_Model, (*(*(_763_ri))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c65d39e5:;
			{
				return _1bc548337_equalConst(_6716_l.cast_ptr<_1bac25065_Const>(&__jule_any_type15), _6736_r.cast_ptr<_1bac25065_Const>(&__jule_any_type15));;
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c65d35b6:;
			{
				return _1bc5486ab_equalCasting(_6716_l.cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96), _6736_r.cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c65d362c:;
			{
				return _1bc548a74_equalUnary(_6716_l.cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113), _6736_r.cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113));;
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c65d3693:;
			{
				return _1bc548de8_equalIndexing(_6716_l.cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43), _6736_r.cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c65d3709:;
			{
				return _1bc54926c_equalBinary(_6716_l.cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114), _6736_r.cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114));;
			}
		}
		else {
			_case_begin_1c65d3550:;
			{
				return false;;
			}
		}
		_match_end_1c65d2e56:;
	};
}



inline void _1bcdbed45_pushPasses(jule::Ptr<_1bc3e0421_Package>* _12320_p, jule::Slice<jule::Str>* _12344_passes) {
	{
		auto expr = &((*((*(_12320_p))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65d891d:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _12414_f = *it;
			{
				_julec_label_1c65d9611:;
				{
					auto expr = &((*(_12414_f))._field_Passes);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c65d9a51:;
					if (it != expr_end) {
						_1bc3cc177_Pass _12610_pass = *it;
						{
							if ((_12610_pass._field_Text).empty()) {
								goto _iter_next_1c65d9a51;
							};
							{
								auto expr = _12344_passes;
								auto it = expr->begin();
								auto expr_end = expr->end();
								_iter_begin_1c65da7dd:;
								if (it != expr_end) {
									jule::Str _13011_cpass = *it;
									{
										if ((_13011_cpass == _12610_pass._field_Text)) {
											goto _iter_next_1c65d9a51;
										};
									}
									_iter_next_1c65da7dd:;
									++it;
									goto _iter_begin_1c65da7dd;
								}
								_iter_end_1c65da7dd:;
							};
							{ jule::Slice<jule::Str> &__jule_push_dest = (*(_12344_passes)); __jule_push_dest.push(_12610_pass._field_Text); };
						}
						_iter_next_1c65d9a51:;
						++it;
						goto _iter_begin_1c65d9a51;
					}
					_iter_end_1c65d9a51:;
				};
			}
			_iter_next_1c65d891d:;
			++it;
			goto _iter_begin_1c65d891d;
		}
		_iter_end_1c65d891d:;
	};
}



inline jule::Slice<jule::Str> _1bcdc020d_getAllUniquePasses(jule::Ptr<_1bc3e0421_Package>* _14028_pkg, jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _14053_uses) {
	jule::Slice<jule::Str> _14110_passes = nullptr;;
	_1bcdbed45_pushPasses(_14028_pkg, &(_14110_passes));
	{
		auto expr = &(_14053_uses);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c65da07e:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _14414_u = *it;
			{
				if ((!((*(_14414_u))._field_Binded))) {
					_1bcdbed45_pushPasses(&((*_14414_u.alloc)._field_Package), &(_14110_passes));
				};
			}
			_iter_next_1c65da07e:;
			++it;
			goto _iter_begin_1c65da07e;
		}
		_iter_end_1c65da07e:;
	};
	return _14110_passes;;
}



inline _1bc5e4c52_CompileInfo _1bcdc041c_buildCompileInfo(void) {
	_1bc5e4c52_CompileInfo _1546_info = _1bc5e4c52_CompileInfo{._field_Prod=_1abb45d85_Production, ._field_Test=_1abb454c2_Test, ._field_Compiler=jule::Str::lit("clang", 5), ._field_CppStd=jule::Str::lit("cpp14", 5)};;
	{
		auto &_match_expr{ _1abb435ad_Compiler };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("clang", 5))) {
			_case_begin_1c65dc867:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("clang", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("gcc", 3))) {
			_case_begin_1c65dc9aa:;
			{
				_1546_info._field_Compiler=static_cast<jule::Str>(jule::Str::lit("gcc", 3));
			}
		}
		_match_end_1c65dc944:;
	};
	{
		auto &_match_expr{ _1abb44bb9_CppStd };
		
		if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp14", 5))) {
			_case_begin_1c65dca32:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp14", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp17", 5))) {
			_case_begin_1c65dd13c:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp17", 5));
			}
		}
		else if (_match_expr == static_cast<jule::Str>(jule::Str::lit("cpp20", 5))) {
			_case_begin_1c65dd1a3:;
			{
				_1546_info._field_CppStd=static_cast<jule::Str>(jule::Str::lit("cpp20", 5));
			}
		}
		_match_end_1c65dda88:;
	};
	return _1546_info;;
}



inline void _1bcdc06c5_pushRuntimeToAST(jule::Ptr<_1bc25aa50_AST>* _17926_f) {
	jule::Ptr<_1bc27585b_UseDecl> _1806_decl = jule::new_ptr<_1bc27585b_UseDecl>(_1bc27585b_UseDecl{._field_Token=nullptr, ._field_Path=jule::new_ptr<_1bc247014_Token>(_1bc247014_Token{._field_File=jule::Ptr<_1bc24cab9_Fileset>(nullptr), ._field_Row=0, ._field_Column=0, ._field_Kind=jule::Str::lit("\"std/runtime\"", 13), ._field_Id=static_cast<jule::U32>(4LLU)}), ._field_Alias=nullptr, ._field_Binded=false});;
	{ jule::Slice<jule::Ptr<_1bc27585b_UseDecl>> &__jule_push_dest = (*((*(_17926_f))))._field_UseDecls; __jule_push_dest.push(_1806_decl); };
	if (((*((*(_17926_f))))._field_UseDecls.len() > 1LL)) {
		(*((*(_17926_f))))._field_UseDecls[((*((*(_17926_f))))._field_UseDecls.len() - 1LL)]=(*((*(_17926_f))))._field_UseDecls[0LL];
		(*((*(_17926_f))))._field_UseDecls[0LL]=_1806_decl;
	};
}



inline void _1bcdc0de0_IterPackages(jule::Ptr<_1bcdbd492_IR>* _722_ir, jule::Fn<void,jule::Ptr<_1bc3e0421_Package>*> _731_f) {
	{
		auto expr = &((*((*(_722_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c676932e:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _814_used = *it;
			{
				if ((!((*(_814_used))._field_Binded))) {
					_731_f(&((*_814_used.alloc)._field_Package));
				};
			}
			_iter_next_1c676932e:;
			++it;
			goto _iter_begin_1c676932e;
		}
		_iter_end_1c676932e:;
	};
	_731_f(&((*((*(_722_ir))))._field_Main));
}



inline void _1bcdc1143_IterFiles(jule::Ptr<_1bc3e0421_Package>* _1619_pkg, jule::Fn<void,jule::Ptr<_1bc305358_SymTab>*> _1640_f) {
	{
		auto expr = &((*((*(_1619_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c677007c:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _1714_file = *it;
			{
				_1640_f(&(_1714_file));
			}
			_iter_next_1c677007c:;
			++it;
			goto _iter_begin_1c677007c;
		}
		_iter_end_1c677007c:;
	};
}



inline void _1bcdc142e_IterTraitMethods(jule::Ptr<_1bc309769_Trait>* _2426_t, jule::Fn<void,jule::Ptr<_1bc2ee055_Fn>*> _2443_f) {
	{
		auto expr = &((*((*(_2426_t))))._field_Methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6770c70:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _2514_m = *it;
			{
				_2443_f(&(_2514_m));
			}
			_iter_next_1c6770c70:;
			++it;
			goto _iter_begin_1c6770c70;
		}
		_iter_end_1c6770c70:;
	};
	{
		auto expr = &((*((*(_2426_t))))._field_Inherits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6771248:;
		if (it != expr_end) {
			jule::Ptr<_1bc4bdc08_TypeSym> _2814_inh = *it;
			{
				jule::Ptr<_1bc309769_Trait> _297_it = _1bc4ba4a7_Trait((*(_2814_inh))._field_Type.ptr());;
				_1bcdc142e_IterTraitMethods(&(_297_it), _2443_f);
			}
			_iter_next_1c6771248:;
			++it;
			goto _iter_begin_1c6771248;
		}
		_iter_end_1c6771248:;
	};
}



inline jule::Bool _1bcdc35da_IsForwarded(jule::Ptr<_1bc3abd27_Scope>* _1217_s) {
	jule::Any _132_last = (*((*(_1217_s))))._field_Stmts[((*((*(_1217_s))))._field_Stmts.len() - 1LL)];;
	{
		auto &_match_expr{ _132_last };
		
		if (_match_expr.type == &__jule_any_type22) {
			_case_begin_1c661ccb5:;
			{
				{
					auto &_match_expr{ (*(_132_last.cast_ptr<_1bc48354c_Data>(&__jule_any_type22)))._field_Model };
					
					if (_match_expr.type == &__jule_any_type21) {
						_case_begin_1c661d007:;
						{
							return true;;
						}
					}
					else {
						_case_begin_1c661db95:;
						{
							return false;;
						}
					}
					_match_end_1c661db2e:;
				};
			}
		}
		else {
			_case_begin_1c661ce3b:;
			{
				return true;;
			}
		}
		_match_end_1c661cdc5:;
	};
}



inline jule::Bool _1bcdc37b6_IsExprComesFromBind(jule::Ptr<_1bc48354c_Data>* _2825_d) {
	{
		auto &_match_expr{ (*((*(_2825_d))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c661e712:;
			{
				return (*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1bc42dc12_Var>()))._field_Binded;;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c661e8ee:;
			{
				return (*((*((*((*((*(_2825_d))))._field_Model.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>()))._field_Owner))._field_Decl))._field_Binded;;
			}
		}
		else {
			_case_begin_1c661d755:;
			{
				return false;;
			}
		}
		_match_end_1c661d6de:;
	};
}



inline jule::Bool _1bcdc3a80_IsAny(jule::Ptr<_1bc4b64e7_Type>* _4015_t) {
	if ((_1bc4b96d7_TypeEnum((*(_4015_t)).ptr()) != nullptr)) {
		return true;;
	};
	jule::Ptr<_1bc4be610_Prim> _442_prim = _1bc4b8b9d_Prim((*(_4015_t)).ptr());;
	return ((_442_prim != nullptr) && _1bc4c2d61_IsAny(_442_prim));;
}



inline jule::Bool _1bcdc3dc1_IsClosure(jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _4915_m) {
	return ((*((*(_4915_m))))._field_Captured.len() > 0LL);;
}



inline jule::Bool _1bcdc4157_IsOpMethod(jule::Ptr<_1bc2ee055_Fn>* _5216_m) {
	if ((((*((*(_5216_m))))._field_Generics.len() > 0LL) || ((*((*(_5216_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	jule::Ptr<_1bc302113_FnIns> _562_mi = (*((*(_5216_m))))._field_Instances[0LL];;
	;
	;
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Eq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Gt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_GtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Lt)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_LtEq)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Shl)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Shr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Add)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Sub)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Div)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Mul)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Mod)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitAnd)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitOr)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitXor)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Neg)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_Pos)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitNot)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_AddAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_SubAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_DivAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_MulAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_ModAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_ShlAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_ShrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitOrAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitAndAssign)) {
			return true;;
		};
	};
	{
		if ((_562_mi == (*((*(_562_mi))._field_Owner))._field_Operators._field_BitXorAssign)) {
			return true;;
		};
	};
	return false;;
}



inline jule::Bool _1bcdc44cb_IsTraitMethod(jule::Ptr<_1bc2810c5_StructIns>* _6823_owner, jule::Ptr<_1bc302113_FnIns>* _6849_f) {
	{
		auto expr = &((*((*((*(_6823_owner))))._field_Decl))._field_Implements);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3aa6680:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _6914_t = *it;
			{
				if ((_1bc30a44b_FindMethod(_6914_t.ptr(), (*((*((*(_6849_f))))._field_Decl))._field_Ident) != nullptr)) {
					return true;;
				};
			}
			_iter_next_1c3aa6680:;
			++it;
			goto _iter_begin_1c3aa6680;
		}
		_iter_end_1c3aa6680:;
	};
	return false;;
}



inline jule::Bool _1bcdc4850_IsStdPackage(jule::Str _8217_f, jule::Str _8225_p) {
	return _1abb2d9c7_HasPrefix(_8217_f, _1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1abb3dc7e_PathStdlib; (*it++) = _8225_p; __jule_collection; })));;
}



inline jule::Ptr<_1bc25bd2b_Directive> _1bcdc56db_FindDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _1123_directives, jule::Str _1154_tag) {
	{
		auto expr = _1123_directives;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3aa8a7d:;
		if (it != expr_end) {
			jule::Ptr<_1bc25bd2b_Directive> _1214_dr = *it;
			{
				if (((*((*(_1214_dr))._field_Tag))._field_Kind == _1154_tag)) {
					return _1214_dr;;
				};
			}
			_iter_next_1c3aa8a7d:;
			++it;
			goto _iter_begin_1c3aa8a7d;
		}
		_iter_end_1c3aa8a7d:;
	};
	return nullptr;;
}



inline jule::Bool _1bcdc5aa4_HasDirective(jule::Slice<jule::Ptr<_1bc25bd2b_Directive>>* _2118_directives, jule::Str _2149_tag) {
	return (_1bcdc56db_FindDirective(&((*((&((*(_2118_directives))))))), _2149_tag) != nullptr);;
}



inline jule::I32 _1bcdc65dd_FindTraitTypeOffsetS(jule::Ptr<_1bc309769_Trait> _3925_t, jule::Ptr<_1bc2810c5_StructIns> _3946_s) {
	if (((*(_3925_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::I32 _436_i = 0LL;;
	{
		auto expr = &((*(_3925_t))._field_Implemented);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3aac345:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> *_449_si = it;
			{
				if (((*(_3946_s))._field_Decl == (*(_449_si)))) {
					{
						auto expr = &((*((*(_449_si))))._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c3aad2be:;
						if (it != expr_end) {
							jule::Ptr<_1bc2810c5_StructIns> *_4611_ins = it;
							{
								if (((*(_4611_ins)) == _3946_s)) {
									return _436_i;;
								};
								(_436_i)++;
							}
							_iter_next_1c3aad2be:;
							++it;
							goto _iter_begin_1c3aad2be;
						}
						_iter_end_1c3aad2be:;
					};
					goto _iter_end_1c3aac345;
				} else {
					_436_i+=(*(*(_449_si)).alloc)._field_Instances.len();
				};
			}
			_iter_next_1c3aac345:;
			++it;
			goto _iter_begin_1c3aac345;
		}
		_iter_end_1c3aac345:;
	};
	return -1LL;;
}



inline jule::I32 _1bcdc6962_FindTraitTypeOffset(jule::Ptr<_1bc309769_Trait> _6224_t, jule::Ptr<_1bc4b64e7_Type> _6245_k) {
	if (((*(_6224_t))._field_Implemented.len() == 0LL)) {
		return 0LL;;
	};
	jule::Ptr<_1bc2810c5_StructIns> _6610_s = nullptr;;
	if ((_1bc4b8e34_Sptr(_6245_k.ptr()) != nullptr)) {
		_6245_k=(*(_1bc4b8e34_Sptr(_6245_k.ptr())))._field_Elem;
	};
	_6610_s=_1bc4ba221_Struct(_6245_k.ptr());
	if ((_6610_s == nullptr)) {
		return -1LL;;
	};
	return _1bcdc65dd_FindTraitTypeOffsetS(_6224_t, _6610_s);;
}



inline jule::Ptr<_1bc302113_FnIns> _1bcdc6d91_FindOperator(jule::Ptr<_1bc2810c5_StructIns>* _7822_s, jule::U32 _7843_op, jule::Bool _7858_unary) {
	{
		auto &_match_expr{ _7843_op };
		
		if (_match_expr == static_cast<jule::U32>(50LLU)) {
			_case_begin_1c3ab1c40:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Eq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(70LLU)) {
			_case_begin_1c3ab1a42:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Gt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(52LLU)) {
			_case_begin_1c3ab1aa8:;
			{
				return (*((*(_7822_s))))._field_Operators._field_GtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(69LLU)) {
			_case_begin_1c3ab1ca6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Lt;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(53LLU)) {
			_case_begin_1c3ab1d2d:;
			{
				return (*((*(_7822_s))))._field_Operators._field_LtEq;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(56LLU)) {
			_case_begin_1c3ab1da5:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shl;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(57LLU)) {
			_case_begin_1c3ab1ec6:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Shr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(60LLU)) {
			_case_begin_1c3ab203c:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Pos;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Add;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(61LLU)) {
			_case_begin_1c3ab20a3:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_Neg;;
				};
				return (*((*(_7822_s))))._field_Operators._field_Sub;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(63LLU)) {
			_case_begin_1c3ab2119:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Div;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(62LLU)) {
			_case_begin_1c3ab2180:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mul;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(64LLU)) {
			_case_begin_1c3ab2207:;
			{
				return (*((*(_7822_s))))._field_Operators._field_Mod;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(65LLU)) {
			_case_begin_1c3ab227e:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAnd;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(66LLU)) {
			_case_begin_1c3ab2306:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOr;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(67LLU)) {
			_case_begin_1c3ab237d:;
			{
				if (_7858_unary) {
					return (*((*(_7822_s))))._field_Operators._field_BitNot;;
				};
				return (*((*(_7822_s))))._field_Operators._field_BitXor;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(40LLU)) {
			_case_begin_1c3ab2405:;
			{
				return (*((*(_7822_s))))._field_Operators._field_AddAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(41LLU)) {
			_case_begin_1c3ab247c:;
			{
				return (*((*(_7822_s))))._field_Operators._field_SubAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(43LLU)) {
			_case_begin_1c3ab2504:;
			{
				return (*((*(_7822_s))))._field_Operators._field_DivAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(42LLU)) {
			_case_begin_1c3ab257b:;
			{
				return (*((*(_7822_s))))._field_Operators._field_MulAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(44LLU)) {
			_case_begin_1c3ab2603:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ModAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(45LLU)) {
			_case_begin_1c3ab267a:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShlAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(46LLU)) {
			_case_begin_1c3ab2702:;
			{
				return (*((*(_7822_s))))._field_Operators._field_ShrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(49LLU)) {
			_case_begin_1c3ab2779:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitOrAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(48LLU)) {
			_case_begin_1c3ab2801:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitAndAssign;;
			}
		}
		else if (_match_expr == static_cast<jule::U32>(47LLU)) {
			_case_begin_1c3ab2878:;
			{
				return (*((*(_7822_s))))._field_Operators._field_BitXorAssign;;
			}
		}
		else {
			_case_begin_1c3ab1679:;
			{
				return nullptr;;
			}
		}
		_match_end_1c3ab17ab:;
	};
}



inline jule::Ptr<_1bc302113_FnIns> _1bcdc7215_FindFnGenericInstance(jule::Ptr<_1bc2ee055_Fn>* _14731_f, jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _14745_generics) {
	_julec_label_1c3aba089:;
	{
		auto expr = &((*((*(_14731_f))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3abe2d0:;
		if (it != expr_end) {
			jule::Ptr<_1bc302113_FnIns> _14914_ins = *it;
			{
				{
					auto expr = &((*(_14914_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c3abec70:;
					if (it != expr_end) {
						jule::I32 _1507_i = it - expr->begin();
						{
							if ((!(_1bc4b6c34_Equal((*((*(_14914_ins))._field_Generics[_1507_i]))._field_Type, _14745_generics[_1507_i])))) {
								goto _iter_next_1c3abe2d0;
							};
						}
						_iter_next_1c3abec70:;
						++it;
						_1507_i++;
						goto _iter_begin_1c3abec70;
					}
					_iter_end_1c3abec70:;
				};
				return _14914_ins;;
			}
			_iter_next_1c3abe2d0:;
			++it;
			goto _iter_begin_1c3abe2d0;
		}
		_iter_end_1c3abe2d0:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:157:2"));;
}



inline jule::Ptr<_1bc2810c5_StructIns> _1bcdc7699_FindStructGenericInstance(jule::Ptr<_1bc27d26a_Struct>* _16335_s, jule::Slice<jule::Ptr<_1bc4b64e7_Type>> _16353_generics) {
	_julec_label_1c3abe665:;
	{
		auto expr = &((*((*(_16335_s))))._field_Instances);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3ac1304:;
		if (it != expr_end) {
			jule::Ptr<_1bc2810c5_StructIns> _16514_ins = *it;
			{
				{
					auto expr = &((*(_16514_ins))._field_Generics);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c3ac1c94:;
					if (it != expr_end) {
						jule::I32 _1667_i = it - expr->begin();
						{
							if ((!(_1bc4b6c34_Equal((*((*(_16514_ins))._field_Generics[_1667_i]))._field_Type, _16353_generics[_1667_i])))) {
								goto _iter_next_1c3ac1304;
							};
						}
						_iter_next_1c3ac1c94:;
						++it;
						_1667_i++;
						goto _iter_begin_1c3ac1c94;
					}
					_iter_end_1c3ac1c94:;
				};
				return _16514_ins;;
			}
			_iter_next_1c3ac1304:;
			++it;
			goto _iter_begin_1c3ac1304;
		}
		_iter_end_1c3ac1304:;
	};
	__jule_panic_s(jule::Str::lit("obj: generic instance lookup failed, this is an implementation mistake", 70) + jule::Str("\nlocation: julec/obj/lookup.jule:173:2"));;
}



inline jule::Ptr<_1bc3dcb9e_ImportInfo> _1bcdc7996_SelectImport(jule::Slice<jule::Ptr<_1bc3dcb9e_ImportInfo>> _17821_imports, jule::Str _17851_linkpath) {
	{
		auto expr = &(_17821_imports);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c3ac1689:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> _17914_imp = *it;
			{
				if (((*(_17914_imp))._field_LinkPath == _17851_linkpath)) {
					return _17914_imp;;
				};
			}
			_iter_next_1c3ac1689:;
			++it;
			goto _iter_begin_1c3ac1689;
		}
		_iter_end_1c3ac1689:;
	};
	return nullptr;;
}



inline jule::Bool _1c676500b_isOrdered(jule::Ptr<_1bc42dc12_Var>* _1418_t, jule::Slice<jule::Ptr<_1bc42dc12_Var>> _1425_s) {
	_julec_label_1c6766eec:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c676745e:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> *_169_d = it;
			{
				{
					
{
						_case_begin_1c6767cde:;
						{
							if ((*((*(_169_d))))._field_Constant) {
								goto _iter_next_1c676745e;
							};
						}
					}
					_match_end_1c6767c67:;
				};
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c67684c6:;
					if (it != expr_end) {
						jule::Ptr<_1bc42dc12_Var> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1c676745e;
							};
						}
						_iter_next_1c67684c6:;
						++it;
						goto _iter_begin_1c67684c6;
					}
					_iter_end_1c67684c6:;
				};
				return false;;
			}
			_iter_next_1c676745e:;
			++it;
			goto _iter_begin_1c676745e;
		}
		_iter_end_1c676745e:;
	};
	return true;;
}

inline jule::Bool _1c676ac7b_isOrdered(jule::Ptr<_1bc27d26a_Struct>* _1418_t, jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _1425_s) {
	_julec_label_1c676cc28:;
	{
		auto expr = &((*((*(_1418_t))))._field_Depends);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c676d18a:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> *_169_d = it;
			{
				;
				{
					auto expr = &(_1425_s);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c676dad6:;
					if (it != expr_end) {
						jule::Ptr<_1bc27d26a_Struct> *_2510_o = it;
						{
							if (((*(_169_d)) == (*(_2510_o)))) {
								goto _iter_next_1c676d18a;
							};
						}
						_iter_next_1c676dad6:;
						++it;
						goto _iter_begin_1c676dad6;
					}
					_iter_end_1c676dad6:;
				};
				return false;;
			}
			_iter_next_1c676d18a:;
			++it;
			goto _iter_begin_1c676d18a;
		}
		_iter_end_1c676d18a:;
	};
	return true;;
}



inline void _1c67621e5_order(jule::Slice<jule::Ptr<_1bc42dc12_Var>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1c67626ac:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1c6763449:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1bc42dc12_Var> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1c676468c:;
				if (it != expr_end) {
					jule::Ptr<_1bc42dc12_Var> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1c67639ee;
						};
					}
					_iter_next_1c676468c:;
					++it;
					goto _iter_begin_1c676468c;
				}
				_iter_end_1c676468c:;
			};
			if (_1c676500b_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1c67639ee:;
	}
	_iter_end_1c67639ee:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1c67626ac;
	};
}

inline void _1c6762cc8_order(jule::Slice<jule::Ptr<_1bc27d26a_Struct>> _3717_s) {
	jule::I32 _386_i = 0LL;;
	_julec_label_1c6762a0e:;
	jule::I32 _406_j = _386_i;;
	_julec_label_1c67679e2:;
	for (; (_406_j < _3717_s.len()); (_406_j)++) {
		{
			jule::Ptr<_1bc27d26a_Struct> _437_t = _3717_s[_406_j];;
			{
				auto expr = _3717_s.slice(0LL, _386_i);
				auto it = expr.begin();
				auto expr_end = expr.end();
				_iter_begin_1c676a40c:;
				if (it != expr_end) {
					jule::Ptr<_1bc27d26a_Struct> _4410_o = *it;
					{
						if ((_437_t == _4410_o)) {
							goto _iter_next_1c676976e;
						};
					}
					_iter_next_1c676a40c:;
					++it;
					goto _iter_begin_1c676a40c;
				}
				_iter_end_1c676a40c:;
			};
			if (_1c676ac7b_isOrdered(&(_437_t), _3717_s.slice(0LL, _386_i))) {
				if ((_386_i != _406_j)) {
					std::swap(_3717_s[_386_i], _3717_s[_406_j]);
				};
				(_386_i)++;
			};
		}
	_iter_next_1c676976e:;
	}
	_iter_end_1c676976e:;;
	if ((_386_i < _3717_s.len())) {
		goto _julec_label_1c6762a0e;
	};
}



inline void _1bdc1e116_EliminateDefines(jule::Ptr<_1bcdbd492_IR>* _36526_ir) {
	jule::Ptr<_1bdc1ae37_ObjectDeadCode> _3666_ocd = static__1bdc1b421_new(_36526_ir);;
	_1bdc1dd19_elimanate(_3666_ocd);
}



inline jule::Bool _1bdc1e424_isAllMethodsLive(jule::Ptr<_1bc27d26a_Struct> _37121_s) {
	return ((_37121_s == (*((*(_1bcdc8b40_ProgramMeta))._field_Runtime))._field_Map) || (_37121_s == (*(*(_1bcdc8b40_ProgramMeta))._field_Runtime.alloc)._field_MapIterator));;
}



inline void _1bdc23291_eliminateDeadCodeOfScope(jule::Ptr<_1bc3abd27_Scope> _21833_s) {
	jule::Slice<jule::Ptr<_1bc3ae874_Label>> _2192_labels = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3ae874_Label>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc3ae874_Label>(nullptr); __jule_collection; });;
	jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>> _2202_gotos = ({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>::alloc(0LL, 16LLU); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc3aeed4_GotoSt>(nullptr); __jule_collection; });;
	jule::Ptr<_1bdc2005c_scopeDeadCode> _2216_sdc = jule::new_ptr<_1bdc2005c_scopeDeadCode>(_1bdc2005c_scopeDeadCode{._field_parent=jule::Ptr<_1bdc2005c_scopeDeadCode>(nullptr), ._field_s=_21833_s, ._field_i=0, ._field_labels=((jule::Ptr<jule::Slice<jule::Ptr<_1bc3ae874_Label>>>)((&(_2192_labels)))), ._field_gotos=((jule::Ptr<jule::Slice<jule::Ptr<_1bc3aeed4_GotoSt>>>)((&(_2202_gotos)))), ._field_except=false});;
	{
		_1bdc22e94_optimizeStmts(_2216_sdc);
	};
}



inline void _1bdc23516_eliminateScopeFunctions(jule::Slice<jule::Ptr<_1bc2ee055_Fn>>* _23033_funcs) {
	{
		auto expr = _23033_funcs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66454b3:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _23114_func = *it;
			{
				{
					auto expr = &((*(_23114_func))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c66480a9:;
					if (it != expr_end) {
						jule::Ptr<_1bc302113_FnIns> _23215_ins = *it;
						{
							_1bdc23291_eliminateDeadCodeOfScope((*(_23215_ins))._field_Scope);
						}
						_iter_next_1c66480a9:;
						++it;
						goto _iter_begin_1c66480a9;
					}
					_iter_end_1c66480a9:;
				};
			}
			_iter_next_1c66454b3:;
			++it;
			goto _iter_begin_1c66454b3;
		}
		_iter_end_1c66454b3:;
	};
}



inline void _1bdc23747_eliminateScopeStructMethods(jule::Slice<jule::Ptr<_1bc27d26a_Struct>>* _23937_structs) {
	{
		auto expr = _23937_structs;
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c664864d:;
		if (it != expr_end) {
			jule::Ptr<_1bc27d26a_Struct> _24014_s = *it;
			{
				{
					auto expr = &((*(_24014_s))._field_Instances);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c66491a9:;
					if (it != expr_end) {
						jule::Ptr<_1bc2810c5_StructIns> _24115_ins = *it;
						{
							_1bdc23516_eliminateScopeFunctions(&((*(_24115_ins))._field_Methods));
						}
						_iter_next_1c66491a9:;
						++it;
						goto _iter_begin_1c66491a9;
					}
					_iter_end_1c66491a9:;
				};
			}
			_iter_next_1c664864d:;
			++it;
			goto _iter_begin_1c664864d;
		}
		_iter_end_1c664864d:;
	};
}



inline void _1bdc23a00_eliminateFunctionsScopePackage(jule::Ptr<_1bc3e0421_Package>* _24740_pkg) {
	{
		auto expr = &((*((*(_24740_pkg))))._field_Files);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c664974d:;
		if (it != expr_end) {
			jule::Ptr<_1bc305358_SymTab> _24814_f = *it;
			{
				_1bdc23516_eliminateScopeFunctions(&((*(_24814_f))._field_Funcs));
				_1bdc23747_eliminateScopeStructMethods(&((*_24814_f.alloc)._field_Structs));
			}
			_iter_next_1c664974d:;
			++it;
			goto _iter_begin_1c664974d;
		}
		_iter_end_1c664974d:;
	};
}



inline void _1bdc23bed_eliminateScopePackage(jule::Ptr<_1bc3e0421_Package>* _25431_pkg) {
	_1bdc23a00_eliminateFunctionsScopePackage(_25431_pkg);
}



inline void _1bdc23e2e_EliminateScopes(jule::Ptr<_1bcdbd492_IR>* _25925_ir) {
	jule::I32 _2606_i = ((*((*(_25925_ir))))._field_Used.len() - 1LL);;
	for (; (_2606_i >= 0LL); (_2606_i)--) {
		{
			jule::Ptr<_1bc3dcb9e_ImportInfo> _2627_u = (*((*(_25925_ir))))._field_Used[_2606_i];;
			if ((!((*(_2627_u))._field_Binded))) {
				_1bdc23bed_eliminateScopePackage(&((*_2627_u.alloc)._field_Package));
			};
		}
	_iter_next_1c664b5eb:;
	}
	_iter_end_1c664b5eb:;;
	_1bdc23bed_eliminateScopePackage(&((*((*(_25925_ir))))._field_Main));
}



inline void _1bdae0328_possibleNilRemove(jule::Ptr<_1bdade349_nils>* _7527_n, jule::Any _7537_m) {
	if (((*(_7527_n)) != nullptr)) {
		_1bdadeb30_removeVar((*(_7527_n)).ptr(), _1bdae0ceb_getNilVar(_7537_m));
	};
}



inline jule::Bool _1bdae06e1_isGuaranteedNonNilExpr(jule::Ptr<_1bdade349_nils>* _8132_n, jule::Any _8142_m) {
	{
		auto &_match_expr{ _8142_m };
		
		if (_match_expr.type == &__jule_any_type116) {
			_case_begin_1c60d1900:;
			{
				return true;;
			}
		}
		_match_end_1c60d1889:;
	};
	return (((*(_8132_n)) != nullptr) && _1bdadee71_isSafe((*(_8132_n)).ptr(), _1bdae0ceb_getNilVar(_8142_m)));;
}



inline jule::Bool _1bdae09aa_isNilValidType(jule::Ptr<_1bc4b64e7_Type> _8923_t) {
	return (_1bc4b8e34_Sptr(_8923_t.ptr()) != nullptr);;
}



inline jule::Uintptr _1bdae0ceb_getNilVar(jule::Any _9114_m) {
	if ((!(_1bdb09276_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _9114_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c67b7080:;
			{
				jule::Ptr<_1bc42dc12_Var> _1003_v = _9114_m.unsafe_cast_ptr<_1bc42dc12_Var>();;
				if ((!((*(_1003_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_9114_m.unsafe_cast_ptr<_1bc42dc12_Var>());;
				};
				return _1bdae0ceb_getNilVar((*((*((*(_1003_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c67b74d1:;
			{
				return static_cast<jule::Uintptr>((*(_9114_m.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		_match_end_1c67b7019:;
	};
	return 0LLU;;
}



inline jule::Bool _1bdae70ee_isConstantValidConditionalCase(jule::Ptr<_1bc3ac245_If>* _83236_i) {
	{
		auto &_match_expr{ (*((*(_83236_i))))._field_Expr };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c67bd3d8:;
			{
				jule::Ptr<_1bac25065_Const> _8353_c = (*((*(_83236_i))))._field_Expr.unsafe_cast_ptr<_1bac25065_Const>();;
				return (_1bac29542_IsBool(_8353_c.ptr()) && _1bac26e46_ReadBool(_8353_c));;
			}
		}
		_match_end_1c67c0d7a:;
	};
	return false;;
}



inline jule::Bool _1bdae740c_isUnreachableExpr(jule::Any* _84123_expr) {
	{
		auto &_match_expr{ (*(_84123_expr)) };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c67c1a7e:;
			{
				jule::Ptr<_1bac25065_Const> _8443_c = (*(_84123_expr)).cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
				return (_1bac29542_IsBool(_8443_c.ptr()) && (!(_1bac26e46_ReadBool(_8443_c))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c67c1276:;
			{
				jule::Ptr<_1bc2e1c90_BinaryExprModel> _8473_m = (*(_84123_expr)).cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114);;
				if (((*((*(_8473_m))._field_Op))._field_Id == static_cast<jule::U32>(54LLU))) {
					return (_1bdae740c_isUnreachableExpr(&((*((*_8473_m.alloc)._field_Left))._field_Model)) || _1bdae740c_isUnreachableExpr(&((*((*_8473_m.alloc)._field_Right))._field_Model)));;
				};
			}
		}
		_match_end_1c67c24ec:;
	};
	return false;;
}



inline jule::Bool _1bdae76c6_isConstantValidMatchCase(jule::Ptr<_1bc3b2080_Case>* _85630_case) {
	{
		auto expr = &((*((*(_85630_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67c5cc5:;
		if (it != expr_end) {
			jule::Ptr<_1bc48354c_Data> *_8579_expr = it;
			{
				if (((_1bc483e87_IsConst((*(_8579_expr)).ptr()) && _1bac29542_IsBool((*(*(_8579_expr)).alloc)._field_Constant.ptr())) && _1bac26e46_ReadBool((*((*(_8579_expr))))._field_Constant))) {
					return true;;
				};
			}
			_iter_next_1c67c5cc5:;
			++it;
			goto _iter_begin_1c67c5cc5;
		}
		_iter_end_1c67c5cc5:;
	};
	return false;;
}



inline jule::Bool _1bdae7a17_isUnreachableConditionalCase(jule::Ptr<_1bc3ac245_If>* _86534_i) {
	return _1bdae740c_isUnreachableExpr(&((*((*(_86534_i))))._field_Expr));;
}



inline jule::Bool _1bdae7c9d_isUnreachableMatchCase(jule::Ptr<_1bc3b2080_Case>* _86928_case) {
	{
		auto expr = &((*((*(_86928_case))))._field_Exprs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c67c7cb6:;
		if (it != expr_end) {
			jule::Ptr<_1bc48354c_Data> *_8709_expr = it;
			{
				if ((!(_1bdae740c_isUnreachableExpr(&((*((*(_8709_expr))))._field_Model))))) {
					return false;;
				};
			}
			_iter_next_1c67c7cb6:;
			++it;
			goto _iter_begin_1c67c7cb6;
		}
		_iter_end_1c67c7cb6:;
	};
	return true;;
}



inline __jule_tuple_bool__jule_tuple_u64 _1bdaee304_checkForBitShiftOpt(jule::Ptr<_1bc2e1795_OperandExprModel>* _81125_l, jule::Ptr<_1bc2e1795_OperandExprModel>* _81154_r) {
	__jule_tuple_bool__jule_tuple_u64 __jule_func_result;
	__jule_func_result.__jule_result_arg0 = false;
	__jule_func_result.__jule_result_arg1 = 0;
	if (((!(_1bc37c8db_IsInt(_1bc4b68e3_Str((*((*(_81125_l))))._field_Type.ptr())))) || (!(_1bc37c8db_IsInt(_1bc4b68e3_Str((*((*(_81154_r))))._field_Type)))))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg1=_1bac27980_AsU64((*((*(_81154_r))))._field_Model.cast_ptr<_1bac25065_Const>(&__jule_any_type15).ptr());
	if (((__jule_func_result.__jule_result_arg1 == 0LLU) || ((__jule_func_result.__jule_result_arg1 & 1LL) != 0LLU))) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	jule::F64 _8192_j = _1ac5515e7_Log2(static_cast<jule::F64>(__jule_func_result.__jule_result_arg1));;
	jule::U64 _8202_z = static_cast<jule::U64>(_8192_j);;
	if ((static_cast<jule::F64>(_8202_z) != _8192_j)) {
		__jule_func_result.__jule_result_arg0 = false;
		__jule_func_result.__jule_result_arg1 = 0LLU;
		return __jule_func_result;;
	};
	__jule_func_result.__jule_result_arg0 = true;
	__jule_func_result.__jule_result_arg1 = _8202_z;
	return __jule_func_result;;
}



inline jule::Bool _1bdaee6bc_areSameLvalueExprModel(jule::Any* _82828_l, jule::Any* _82849_r) {
	{
		auto &_match_expr{ (*(_82828_l)) };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c6882810:;
			{
				return ((*(_82849_r)) == (*(_82828_l)));;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c6882623:;
			{
				{
					auto &_match_expr{ (*(_82849_r)) };
					
					if (_match_expr.type == &__jule_any_type101) {
						_case_begin_1c68831a1:;
						{
							goto _match_end_1c6883635;
						}
					}
					else {
						_case_begin_1c688369b:;
						{
							return false;;
						}
					}
					_match_end_1c6883635:;
				};
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _8413_lsi = (*(_82828_l)).cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _8423_rsi = (*(_82849_r)).cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				if (((*(_8413_lsi))._field_Field != (*(_8423_rsi))._field_Field)) {
					return false;;
				};
				return _1bdaee6bc_areSameLvalueExprModel(&((*((*(_8413_lsi))._field_Expr))._field_Model), &((*(*(_8423_rsi))._field_Expr.alloc)._field_Model));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6882887:;
			{
				{
					auto &_match_expr{ (*(_82849_r)) };
					
					if (_match_expr.type == &__jule_any_type113) {
						_case_begin_1c6885a33:;
						{
							jule::Ptr<_1bc2e2169_UnaryExprModel> _8544_ul = (*(_82828_l)).cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113);;
							jule::Ptr<_1bc2e2169_UnaryExprModel> _8554_ur = (*(_82849_r)).cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113);;
							if ((((*((*(_8544_ul))._field_Op))._field_Id != (*(*(_8554_ur))._field_Op.alloc)._field_Id) || ((*(*(_8544_ul))._field_Op.alloc)._field_Kind != (*(*(_8554_ur))._field_Op.alloc)._field_Kind))) {
								return false;;
							};
							return _1bdaee6bc_areSameLvalueExprModel(&((*((*(_8544_ul))._field_Expr))._field_Model), &((*(*(_8554_ur))._field_Expr.alloc)._field_Model));;
						}
					}
					_match_end_1c6884e72:;
				};
			}
		}
		_match_end_1c6882799:;
	};
	return false;;
}



inline void _1bdb01779_possibleDynamicRemove(jule::Ptr<_1bdb006e0_dynamic>* _7631_d, jule::Any _7644_m) {
	if (((*(_7631_d)) != nullptr)) {
		_1bdb00ec6_removeVar((*(_7631_d)).ptr(), _1bdb02307_getDynamicVar(_7644_m));
	};
}



inline jule::Bool _1bdb01a87_isDynamicValidType(jule::Ptr<_1bc4b64e7_Type> _8227_t) {
	return _1bcdc3a80_IsAny(&(_8227_t));;
}



inline jule::Ptr<_1bc4b64e7_Type> _1bdb01eb6_isTypeGuaranteedDynamicData(jule::Ptr<_1bdb006e0_dynamic>* _8437_dy, jule::Ptr<_1bc4b64e7_Type> _8455_t, jule::Any _8475_m) {
	if (_1bc4b762a_IsNil(_8455_t.ptr())) {
		return nullptr;;
	};
	jule::Bool _882_isAny = _1bcdc3a80_IsAny(&(_8455_t));;
	if (((!(_882_isAny)) && (_1bc4ba4a7_Trait(_8455_t.ptr()) == nullptr))) {
		return _8455_t;;
	};
	if ((!(_882_isAny))) {
		return nullptr;;
	};
	{
		auto &_match_expr{ _8475_m };
		
		if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c33e67c8:;
			{
				jule::Ptr<_1bc2e33bd_CastingExprModel> _977_cem = _8475_m.unsafe_cast_ptr<_1bc2e33bd_CastingExprModel>();;
				return _1bdb01eb6_isTypeGuaranteedDynamicData(_8437_dy, (*(_977_cem))._field_ExprType, (*((*_977_cem.alloc)._field_Expr))._field_Model);;
			}
		}
		_match_end_1c33e6762:;
	};
	jule::Uintptr _1002_var = _1bdb02307_getDynamicVar(_8475_m);;
	if ((_1002_var == 0LLU)) {
		return nullptr;;
	};
	{
		auto expr = &((*((*(_8437_dy))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c33e829c:;
		if (it != expr_end) {
			_1bdb0039e_dynamicVar _10414_v = *it;
			{
				if ((_10414_v._field_var == _1002_var)) {
					return _10414_v._field_kind;;
				};
			}
			_iter_next_1c33e829c:;
			++it;
			goto _iter_begin_1c33e829c;
		}
		_iter_end_1c33e829c:;
	};
	return nullptr;;
}



inline jule::Uintptr _1bdb02307_getDynamicVar(jule::Any _11218_m) {
	if ((!(_1bdb0ac5b_Dynamic))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _11218_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c33e9776:;
			{
				jule::Ptr<_1bc42dc12_Var> _1183_v = _11218_m.unsafe_cast_ptr<_1bc42dc12_Var>();;
				if ((!((*(_1183_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_11218_m.unsafe_cast_ptr<_1bc42dc12_Var>());;
				};
				return _1bdb02307_getDynamicVar((*((*((*(_1183_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c33e9bc7:;
			{
				return static_cast<jule::Uintptr>((*(_11218_m.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c33e97ed:;
			{
				jule::Ptr<_1bc2e2169_UnaryExprModel> _1293_uem = _11218_m.unsafe_cast_ptr<_1bc2e2169_UnaryExprModel>();;
				if (((*((*(_1293_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1bdb02307_getDynamicVar((*((*_1293_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c33e9710:;
	};
	return 0LLU;;
}



inline void _1c691e88b__removeDeads(jule::Ptr<_1bdb0587c_boundary>* _3340_alive, jule::Ptr<_1bdb0587c_boundary>* _3366_other, jule::Uintptr _3391_invalid) {
	_julec_label_1c6920419:;
	{
		auto expr = &((*((*(_3340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c692141a:;
		if (it != expr_end) {
			_1bdb0553b_boundaryVar _359_v = *it;
			{
				if ((_359_v._field_var == _3391_invalid)) {
					goto _iter_next_1c692141a;
				};
				{
					auto expr = &((*((*(_3366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6922284:;
					if (it != expr_end) {
						_1bdb0553b_boundaryVar *_3910_ov = it;
						{
							if ((_359_v._field_var == (*(_3910_ov))._field_var)) {
								goto _iter_next_1c692141a;
							};
						}
						_iter_next_1c6922284:;
						++it;
						goto _iter_begin_1c6922284;
					}
					_iter_end_1c6922284:;
				};
				_1bdb06163_removeVar((*(_3340_alive)).ptr(), _359_v._field_var);
			}
			_iter_next_1c692141a:;
			++it;
			goto _iter_begin_1c692141a;
		}
		_iter_end_1c692141a:;
	};
}

inline void _1c6921728__removeDeads(jule::Ptr<_1bdade349_nils>* _3340_alive, jule::Ptr<_1bdade349_nils>* _3366_other, jule::Uintptr _3391_invalid) {
	_julec_label_1c6923906:;
	{
		auto expr = &((*((*(_3340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69248b3:;
		if (it != expr_end) {
			_1bdade008_nilVar _359_v = *it;
			{
				if ((_359_v._field_var == _3391_invalid)) {
					goto _iter_next_1c69248b3;
				};
				{
					auto expr = &((*((*(_3366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a44b59:;
					if (it != expr_end) {
						_1bdade008_nilVar *_3910_ov = it;
						{
							if ((_359_v._field_var == (*(_3910_ov))._field_var)) {
								goto _iter_next_1c69248b3;
							};
						}
						_iter_next_1c6a44b59:;
						++it;
						goto _iter_begin_1c6a44b59;
					}
					_iter_end_1c6a44b59:;
				};
				_1bdadeb30_removeVar((*(_3340_alive)).ptr(), _359_v._field_var);
			}
			_iter_next_1c69248b3:;
			++it;
			goto _iter_begin_1c69248b3;
		}
		_iter_end_1c69248b3:;
	};
}

inline void _1c6a4a302__removeDeads(jule::Ptr<_1bdb006e0_dynamic>* _3340_alive, jule::Ptr<_1bdb006e0_dynamic>* _3366_other, jule::Uintptr _3391_invalid) {
	_julec_label_1c6a4ad80:;
	{
		auto expr = &((*((*(_3340_alive))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a4bdc5:;
		if (it != expr_end) {
			_1bdb0039e_dynamicVar _359_v = *it;
			{
				if ((_359_v._field_var == _3391_invalid)) {
					goto _iter_next_1c6a4bdc5;
				};
				{
					auto expr = &((*((*(_3366_other))))._field_vars);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a4cc3e:;
					if (it != expr_end) {
						_1bdb0039e_dynamicVar *_3910_ov = it;
						{
							if ((_359_v._field_var == (*(_3910_ov))._field_var)) {
								goto _iter_next_1c6a4bdc5;
							};
						}
						_iter_next_1c6a4cc3e:;
						++it;
						goto _iter_begin_1c6a4cc3e;
					}
					_iter_end_1c6a4cc3e:;
				};
				_1bdb00ec6_removeVar((*(_3340_alive)).ptr(), _359_v._field_var);
			}
			_iter_next_1c6a4bdc5:;
			++it;
			goto _iter_begin_1c6a4bdc5;
		}
		_iter_end_1c6a4bdc5:;
	};
}



inline jule::Bool _1bdb068e4_isValidBoundaryInfo(jule::Any _8524_m) {
	return _1bdb07131_fitsSize(_8524_m, _8524_m);;
}



inline jule::I32 _1bdb06cac_fitsMaxSize(jule::Slice<jule::Any> _9016_max, jule::Any _9040_expr) {
	{
		auto expr = &(_9016_max);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a55340:;
		if (it != expr_end) {
			jule::I32 _916_i = it - expr->begin();
			jule::Any *_919_m = it;
			{
				if (_1bdb07131_fitsSize((*(_919_m)), _9040_expr)) {
					return _916_i;;
				};
			}
			_iter_next_1c6a55340:;
			++it;
			_916_i++;
			goto _iter_begin_1c6a55340;
		}
		_iter_end_1c6a55340:;
	};
	return -1LL;;
}



inline jule::Bool _1bdb07131_fitsSize(jule::Any _9913_e1, jule::Any _9934_e2) {
	if ((_1bc547e6e_TypeData(&(_9913_e1)) != _1bc547e6e_TypeData(&(_9934_e2)))) {
		return false;;
	};
	{
		auto &_match_expr{ _9913_e1 };
		
		if (_match_expr.type == &__jule_any_type15) {
			_case_begin_1c6a56ce2:;
			{
				jule::Ptr<_1bac25065_Const> _1053_exprConst = _9934_e2.cast_ptr<_1bac25065_Const>(&__jule_any_type15);;
				return ((_1bac27c16_AsF64(_1053_exprConst.ptr()) >= 0LL) && _1bc2dbc8a_GtEq(_9913_e1.unsafe_cast_ptr<_1bac25065_Const>().ptr(), (*(_1053_exprConst))));;
			}
		}
		else if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c6a56d58:;
			{
				return (_9934_e2 == _9913_e1);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c6a56dd0:;
			{
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _1103_ssi1 = _9913_e1.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>();;
				jule::Ptr<_1bc2e6811_StructSubIdentExprModel> _1113_ssi2 = _9934_e2.cast_ptr<_1bc2e6811_StructSubIdentExprModel>(&__jule_any_type101);;
				return (_1bc5495e1_EqualModels((*((*(_1103_ssi1))._field_Expr))._field_Model, (*(*(_1113_ssi2))._field_Expr.alloc)._field_Model) && ((*_1103_ssi1.alloc)._field_Field == (*(_1113_ssi2))._field_Field));;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c6a569a1:;
			{
				jule::Ptr<_1bc2e2169_UnaryExprModel> _1143_uem1 = _9913_e1.unsafe_cast_ptr<_1bc2e2169_UnaryExprModel>();;
				jule::Ptr<_1bc2e2169_UnaryExprModel> _1153_uem2 = _9934_e2.cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113);;
				if ((((*((*(_1143_uem1))._field_Op))._field_Id != static_cast<jule::U32>(62LLU)) || ((*(*(_1143_uem1))._field_Op.alloc)._field_Id != (*(*(_1153_uem2))._field_Op.alloc)._field_Id))) {
					return false;;
				};
				return _1bdb07131_fitsSize((*((*(_1143_uem1))._field_Expr))._field_Model, (*(*(_1153_uem2))._field_Expr.alloc)._field_Model);;
			}
		}
		else {
			_case_begin_1c6a5693a:;
			{
				return false;;
			}
		}
		_match_end_1c6a56561:;
	};
}



inline void _1bdb07461_possibleBoundaryRemove(jule::Ptr<_1bdb0587c_boundary>* _12532_b, jule::Any _12546_model) {
	{
		auto expr = &((*((*(_12532_b))))._field_vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6a58bc3:;
		if (it != expr_end) {
			_1bdb0553b_boundaryVar _12714_v = *it;
			{
				{
					auto expr = &(_12714_v._field_maxSize);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1c6a5ddc6:;
					if (it != expr_end) {
						jule::I32 _1287_i = it - expr->begin();
						jule::Any _12810_max = *it;
						{
							if (_1bc5495e1_EqualModels(_12810_max, _12546_model)) {
								_12714_v._field_maxSize=jule::append(_12714_v._field_maxSize.slice(0LL, _1287_i),_12714_v._field_maxSize.slice((_1287_i + 1LL)));
								goto _iter_end_1c6a5ddc6;
							};
						}
						_iter_next_1c6a5ddc6:;
						++it;
						_1287_i++;
						goto _iter_begin_1c6a5ddc6;
					}
					_iter_end_1c6a5ddc6:;
				};
			}
			_iter_next_1c6a58bc3:;
			++it;
			goto _iter_begin_1c6a58bc3;
		}
		_iter_end_1c6a58bc3:;
	};
}



inline jule::Bool _1bdb0772a_isBoundaryRiskyType(jule::Ptr<_1bc4b64e7_Type> _13728_t) {
	return (_1bc4b996d_Arr(_13728_t.ptr()) == nullptr);;
}



inline jule::Bool _1bdb079e4_isBoundaryValidType(jule::Ptr<_1bc4b64e7_Type> _14228_t) {
	return ((_1bc4b9c04_Slc(_14228_t.ptr()) != nullptr) || (_1bc4b996d_Arr(_14228_t) != nullptr));;
}



inline jule::Uintptr _1bdb07cad_getBoundaryVar(jule::Any _14419_m) {
	if ((!(_1bdb09276_Access))) {
		return 0LLU;;
	};
	{
		auto &_match_expr{ _14419_m };
		
		if (_match_expr.type == &__jule_any_type7) {
			_case_begin_1c60e2b97:;
			{
				jule::Ptr<_1bc42dc12_Var> _1503_v = _14419_m.unsafe_cast_ptr<_1bc42dc12_Var>();;
				if ((!((*(_1503_v))._field_Reference))) {
					return static_cast<jule::Uintptr>(_14419_m.unsafe_cast_ptr<_1bc42dc12_Var>());;
				};
				return _1bdb07cad_getBoundaryVar((*((*((*(_1503_v))._field_Value))._field_Data))._field_Model);;
			}
		}
		else if (_match_expr.type == &__jule_any_type101) {
			_case_begin_1c60e3109:;
			{
				return static_cast<jule::Uintptr>((*(_14419_m.unsafe_cast_ptr<_1bc2e6811_StructSubIdentExprModel>()))._field_Field);;
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c60e2c1e:;
			{
				jule::Ptr<_1bc2e2169_UnaryExprModel> _1613_uem = _14419_m.unsafe_cast_ptr<_1bc2e2169_UnaryExprModel>();;
				if (((*((*(_1613_uem))._field_Op))._field_Id == static_cast<jule::U32>(62LLU))) {
					return _1bdb07cad_getBoundaryVar((*((*_1613_uem.alloc)._field_Expr))._field_Model);;
				};
			}
		}
		_match_end_1c60e2b31:;
	};
	return 0LLU;;
}



inline void _1bdb0bb2a_PushOptLevel(jule::I32 _4117_level) {
	jule::Bool _422_l1 = (_4117_level >= static_cast<jule::I32>(1LL));;
	jule::Bool _432_l2 = (_4117_level >= static_cast<jule::I32>(2LL));;
	_1bdb0861b_Copy=_422_l1;
	_1bdb08918_Deadcode=_422_l1;
	_1bdb08bc1_Append=_422_l1;
	_1bdb08ebd_Math=_422_l1;
	_1bdb09276_Access=_422_l1;
	_1bdb0952e_Inline=_422_l1;
	_1bdb097d7_Ptr=_422_l1;
	_1bdb09ba0_Cond=_422_l1;
	_1bdb09de2_Str=_422_l1;
	_1bdb0a189_Slice=_422_l1;
	_1bdb0a442_Assign=_422_l1;
	_1bdb0a6ea_Exceptional=_422_l1;
	_1bdb0a9a3_Iter=_422_l1;
	_1bdb0ac5b_Dynamic=_422_l1;
	_1bdb0b014_Array=_422_l1;
	_1bdb0b4ed_Len=_422_l1;
	_1bdb0b740_StdStrings=_432_l2;
	_1bdb0b94e_StdMathCmplx=_432_l2;
}



inline void _1bdc277d4_detectEnabled(void) {
	_1bdc25370_exprEnabled=((((((((_1bdb0b740_StdStrings || _1bdb097d7_Ptr) || _1bdb08ebd_Math) || _1bdb09276_Access) || _1bdb09ba0_Cond) || _1bdb0b014_Array) || _1bdb09de2_Str) || _1bdb0ac5b_Dynamic) || _1bdb0b4ed_Len);
	_1bdc2557e_scopeEnabled=(((((((((_1bdb09ba0_Cond || _1bdb08bc1_Append) || _1bdb0861b_Copy) || _1bdb09de2_Str) || _1bdb0a189_Slice) || _1bdb0a442_Assign) || _1bdb0a6ea_Exceptional) || _1bdb0a9a3_Iter) || _1bdb0ac5b_Dynamic) || _1bdb0b94e_StdMathCmplx);
}



inline void _1c7012ed4_Reverse(jule::Slice<jule::U8> _7327_s) {
	{
		auto expr = _7327_s.slice(0LL, (_7327_s.len() >> 1LL));
		auto it = expr.begin();
		auto expr_end = expr.end();
		_iter_begin_1c701418e:;
		if (it != expr_end) {
			jule::I32 _746_i = it - expr.begin();
			{
				({
					jule::U8 ___jule_assign_arg = _7327_s[((_7327_s.len() - _746_i) - 1LL)];
					jule::U8 _1___jule_assign_arg = _7327_s[_746_i];
					_7327_s[_746_i] = ___jule_assign_arg;
					_7327_s[((_7327_s.len() - _746_i) - 1LL)] = _1___jule_assign_arg;
				});
			}
			_iter_next_1c701418e:;
			++it;
			_746_i++;
			goto _iter_begin_1c701418e;
		}
		_iter_end_1c701418e:;
	};
}



inline void _1c7011ae8_rotateLeft(jule::Slice<jule::U8> _4222_s, jule::I32 _4230_r) {
	_1c7012ed4_Reverse(_4222_s.slice(0LL, _4230_r));
	_1c7012ed4_Reverse(_4222_s.slice(_4230_r));
	_1c7012ed4_Reverse(_4222_s);
}



inline void _1c700d001_rotateRight(jule::Slice<jule::U8> _4823_s, jule::I32 _4831_r) {
	_1c7011ae8_rotateLeft(_4823_s, (_4823_s.len() - _4831_r));
}



inline jule::Bool _1c700b692_overlaps(jule::Slice<jule::U8> _5316_a, jule::Slice<jule::U8> _5324_b) {
	if (((_5316_a.len() == 0LL) || (_5324_b.len() == 0LL))) {
		return false;;
	};
	jule::U32 _572_elemSize = sizeof(jule::U8);;
	if ((_572_elemSize == 0LLU)) {
		return false;;
	};
	return (((&(_5316_a[0LL])) <= ((&(_5324_b[(_5324_b.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))) && ((&(_5324_b[0LL])) <= ((&(_5316_a[(_5316_a.len() - 1LL)])) + (jule::U32)(_572_elemSize - 1LLU))));;
}



inline jule::Slice<jule::U8> _1c70072e7_Insert(jule::Slice<jule::U8> _7226_s, jule::I32 _7232_i, jule::Slice<jule::U8> _7240_v) {
	_7226_s.slice(_7232_i);
	jule::I32 _752_m = _7240_v.len();;
	if ((_752_m == 0LL)) {
		return _7226_s;;
	};
	jule::I32 _792_n = _7226_s.len();;
	if ((_7232_i == _792_n)) {
		return jule::append(_7226_s,_7240_v);;
	};
	if (((_792_n + _752_m) > _7226_s.cap())) {
		jule::Slice<jule::U8> _887_s2 = jule::append(_7226_s.slice(0LL, _7232_i),({ auto __jule_collection = jule::Slice<jule::U8>::alloc(((_792_n + _752_m) - _7232_i), ((_792_n + _752_m) - _7232_i)); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = 0; __jule_collection; }));;
		jule::copy(_887_s2.slice(_7232_i), _7240_v);
		jule::copy(_887_s2.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		return _887_s2;;
	};
	(_7226_s).mut_slice(0LL, (_792_n + _752_m));;
	if ((!(_1c700b692_overlaps(_7240_v, _7226_s.slice((_7232_i + _752_m)))))) {
		jule::copy(_7226_s.slice((_7232_i + _752_m)), _7226_s.slice(_7232_i));
		jule::copy(_7226_s.slice(_7232_i), _7240_v);
		return _7226_s;;
	};
	jule::copy(_7226_s.slice(_792_n), _7240_v);
	_1c700d001_rotateRight(_7226_s.slice(_7232_i), _752_m);
	return _7226_s;;
}



inline jule::U64 _1bdee088d_unix(void) {
	return static_cast<jule::U64>(time(nullptr));;
}



inline jule::Bool _1bdc32c62_isCopyOptimizable(jule::Ptr<_1bc48354c_Data>* _117223_expr) {
	if ((!((*((*(_117223_expr))))._field_Lvalue))) {
		return false;;
	};
	{
		auto &_match_expr{ (*((*(_117223_expr))))._field_Model };
		
		if (_match_expr.type == &__jule_any_type95) {
			_case_begin_1c698d19b:;
			{
				return false;;
			}
		}
		_match_end_1c698d135:;
	};
	return true;;
}



inline jule::Bool _1bdc3312a_isIterCopyOptimizable(jule::Ptr<_1bc48354c_Data>* _118327_expr, jule::Ptr<_1bc42dc12_Var>* _118347_v) {
	if (((!((*((*(_118327_expr))))._field_Lvalue)) && (!(_1bc4b7dcd_Mutable((*((*(_118327_expr))))._field_Type.ptr()))))) {
		return true;;
	};
	return ((!((*((*(_118347_v))))._field_Mutable)) && (!((*((*(_118327_expr))))._field_Mutable)));;
}



inline jule::Bool _1bdc33559_captureVarHandling(jule::Ptr<_1bdeeab84_ObjectCoder>* _119028_oc, jule::Ptr<_1bc2e4aa6_AnonFnExprModel>* _119051_m, jule::Ptr<_1bc42dc12_Var>* _119083_v) {
	{
		auto expr = &((*((*(_119051_m))))._field_Captured);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c610501c:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _11919_cv = *it;
			{
				if ((_11919_cv == (*(_119083_v)))) {
					_1bdeeb39e_write((*(_119028_oc)), jule::Str::lit("__jule_closure_ctx.alloc->", 26));
					static__1bdc4d9e7_var(&((*((*(_119028_oc))))._field_Buf), (*(_119083_v)));
					return true;;
				};
			}
			_iter_next_1c610501c:;
			++it;
			goto _iter_begin_1c610501c;
		}
		_iter_end_1c610501c:;
	};
	return false;;
}



inline jule::Str _1bdc45ea6_decomposeCommonEsq(jule::U8 _193423_b) {
	{
		auto &_match_expr{ _193423_b };
		
		if (_match_expr == '\\') {
			_case_begin_1c69bba6a:;
			{
				return jule::Str::lit("\\\\", 2);;
			}
		}
		else if (_match_expr == '\'') {
			_case_begin_1c69bb8d3:;
			{
				return jule::Str::lit("'", 1);;
			}
		}
		else if (_match_expr == '\"') {
			_case_begin_1c69bb95a:;
			{
				return jule::Str::lit("\\\"", 2);;
			}
		}
		else if (_match_expr == '\a') {
			_case_begin_1c69bb41b:;
			{
				return jule::Str::lit("\\a", 2);;
			}
		}
		else if (_match_expr == '\b') {
			_case_begin_1c69bb493:;
			{
				return jule::Str::lit("\\b", 2);;
			}
		}
		else if (_match_expr == '\f') {
			_case_begin_1c69bb51a:;
			{
				return jule::Str::lit("\\f", 2);;
			}
		}
		else if (_match_expr == '\n') {
			_case_begin_1c69bb592:;
			{
				return jule::Str::lit("\\n", 2);;
			}
		}
		else if (_match_expr == '\r') {
			_case_begin_1c69bb619:;
			{
				return jule::Str::lit("\\r", 2);;
			}
		}
		else if (_match_expr == '\t') {
			_case_begin_1c69bbad1:;
			{
				return jule::Str::lit("\\t", 2);;
			}
		}
		else if (_match_expr == '\v') {
			_case_begin_1c69bbb47:;
			{
				return jule::Str::lit("\\v", 2);;
			}
		}
		else {
			_case_begin_1c69bb21d:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c69bb350:;
	};
}



inline jule::Str _1bdc462b4_sbtoa(jule::U8 _196110_b) {
	if ((_196110_b == 0LLU)) {
		return jule::Str::lit("\\x00", 4);;
	};
	if ((_196110_b < 128LLU)) {
		jule::Str _19663_seq = _1bdc45ea6_decomposeCommonEsq(_196110_b);;
		if (!(_19663_seq).empty()) {
			return _19663_seq;;
		};
		if (((32LL <= _196110_b) && (_196110_b <= 126LLU))) {
			return __jule_strFromByte(_196110_b);;
		};
	};
	jule::Str _19742_seq = _1ac59643e_FmtUint(static_cast<jule::U64>(_196110_b), 8LL);;
	if ((_19742_seq.len() == 2LL)) {
		return (jule::Str::lit("\\0", 2) + _19742_seq);;
	};
	return (jule::Str::lit("\\", 1) + _19742_seq);;
}



inline void _1bdc465a0_cstrBytes(_1a95669ea_Builder* _198119_s, jule::Str _198140_ctx) {
	{
		auto expr = &(_198140_ctx);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c69c0de3:;
		if (it != expr_end) {
			jule::U8 *_19829_b = it;
			{
				({
					auto except = _1a95679eb_WriteStr(_198119_s, _1bdc462b4_sbtoa((*(_19829_b))));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1983:3"));
					(except.result);
				});
			}
			_iter_next_1c69c0de3:;
			++it;
			goto _iter_begin_1c69c0de3;
		}
		_iter_end_1c69c0de3:;
	};
}



inline void _1bdc468d0_cstrLit(_1a95669ea_Builder* _198717_s, jule::Str _198738_ctx) {
	({
		auto except = _1a9567ca4_WriteByte(_198717_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1988:2"));
	});
	_1bdc465a0_cstrBytes(_198717_s, _198738_ctx);
	({
		auto except = _1a9567ca4_WriteByte(_198717_s, '\"');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:1990:2"));
	});
}



inline void _1bdc46c76_ftoa(_1a95669ea_Builder* _199314_s, jule::F64 _199335_f, jule::I32 _199343_bitsize) {
	if ((_199343_bitsize != 32LL)) {
		if ((_199335_f == static_cast<jule::F64>(static_cast<jule::I64>(_199335_f)))) {
			_1bdc47062_itoa(_199314_s, static_cast<jule::I64>(_199335_f));
			return;;
		};
		if ((_199335_f == static_cast<jule::F64>(static_cast<jule::U64>(_199335_f)))) {
			_1bdc4734d_utoa(_199314_s, static_cast<jule::U64>(_199335_f));
			return;;
		};
	};
	jule::Str _20042_m = _1ac57a1d1_FmtFloat(_199335_f, 'f', -1LL, _199343_bitsize);;
	({
		auto except = _1a95679eb_WriteStr(_199314_s, _20042_m);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2005:2"));
		(except.result);
	});
	if ((!(_1abb33317_Contains(_20042_m, jule::Str::lit(".", 1))))) {
		({
			auto except = _1a95679eb_WriteStr(_199314_s, jule::Str::lit(".0", 2));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2007:3"));
			(except.result);
		});
	};
}



inline void _1bdc47062_itoa(_1a95669ea_Builder* _201114_s, jule::I64 _201135_x) {
	{
		
		if ((_201135_x == jule::MAX_I64)) {
			_case_begin_1c69c548b:;
			{
				({
					auto except = _1a95679eb_WriteStr(_201114_s, jule::Str::lit("jule::MAX_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2014:3"));
					(except.result);
				});
				return;;
			}
		}
		else if ((_201135_x == jule::MIN_I64)) {
			_case_begin_1c69c5535:;
			{
				({
					auto except = _1a95679eb_WriteStr(_201114_s, jule::Str::lit("jule::MIN_I64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2017:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1c69c536a:;
	};
	({
		auto except = _1a95679eb_WriteStr(_201114_s, _1ac596807_FmtInt(_201135_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2021:2"));
		(except.result);
	});
	if (_1a957a910_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1a9567ca4_WriteByte(_201114_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2023:3"));
		});
	};
	({
		auto except = _1a9567ca4_WriteByte(_201114_s, 'L');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2025:2"));
	});
}



inline void _1bdc4734d_utoa(_1a95669ea_Builder* _202814_s, jule::U64 _202835_x) {
	{
		
		if ((_202835_x == jule::MAX_U64)) {
			_case_begin_1c69c7625:;
			{
				({
					auto except = _1a95679eb_WriteStr(_202814_s, jule::Str::lit("jule::MAX_U64", 13));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2031:3"));
					(except.result);
				});
				return;;
			}
		}
		_match_end_1c69c74d2:;
	};
	({
		auto except = _1a95679eb_WriteStr(_202814_s, _1ac59643e_FmtUint(_202835_x, 10LL));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2035:2"));
		(except.result);
	});
	if (_1a957a910_Is64Bit(jule::Str::lit("i386", 4))) {
		({
			auto except = _1a9567ca4_WriteByte(_202814_s, 'L');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2037:3"));
		});
	};
	({
		auto except = _1a95679eb_WriteStr(_202814_s, jule::Str::lit("LU", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2039:2"));
		(except.result);
	});
}



inline void _1bdc4799c_operatorOverloadingBinary(_1a95669ea_Builder* _204235_buf, jule::Ptr<_1bc2810c5_StructIns>* _204263_s, jule::Str* _204285_l, jule::Str* _20433_r, jule::U32 _204311_op, jule::Str _204326_kind) {
	;
	jule::Ptr<_1bc302113_FnIns> _20456_f = static_cast<jule::Ptr<_1bc302113_FnIns>>(nullptr);;
	if ((_204311_op == static_cast<jule::U32>(51LLU))) {
		_20456_f=_1bcdc6d91_FindOperator(_204263_s, static_cast<jule::U32>(50LLU), false);
		({
			auto except = _1a9567ca4_WriteByte(_204235_buf, '!');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2048:3"));
		});
	} else {
		_20456_f=_1bcdc6d91_FindOperator(_204263_s, _204311_op, false);
	};
	if ((_20456_f == nullptr)) {
		if (((_204311_op == static_cast<jule::U32>(50LLU)) || (_204311_op == static_cast<jule::U32>(51LLU)))) {
			static__1bdc4d420_structureIns(_204235_buf, _204263_s);
			({
				auto except = _1a95679eb_WriteStr(_204235_buf, jule::Str::lit("_eq", 3));
				if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2056:4"));
				(except.result);
			});
			goto _julec_label_1c6b2a7de;
		};
		__jule_panic_s(jule::Str::lit("cxx: binary operator overloading is not exist, this is an implementation mistake", 80) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2059:3"));;
	};
	static__1bdc4c771_funcIns(_204235_buf, &(_20456_f));
	_julec_label_1c6b2a7de:;
	({
		auto except = _1a95679eb_WriteStr(_204235_buf, jule::Str::lit("(&", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2063:2"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_204235_buf, (*(_204285_l)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2064:2"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_204235_buf, jule::Str::lit(", ", 2));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2065:2"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_204235_buf, (*(_20433_r)));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2066:2"));
		(except.result);
	});
	({
		auto except = _1a9567ca4_WriteByte(_204235_buf, ')');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/expr.jule:2067:2"));
	});
}



inline jule::Slice<jule::U8> _1be0086ca_concatAllParts(jule::Slice<jule::Ptr<_1bc247014_Token>> _137519_parts) {
	jule::I32 _13766_n = 0LL;;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dd555a:;
		if (it != expr_end) {
			jule::Ptr<_1bc247014_Token> *_13779_part = it;
			{
				_13766_n+=(*(*(_13779_part)).alloc)._field_Kind.len();
			}
			_iter_next_1c6dd555a:;
			++it;
			goto _iter_begin_1c6dd555a;
		}
		_iter_end_1c6dd555a:;
	};
	if ((_13766_n == 0LL)) {
		return nullptr;;
	};
	_1a95669ea_Builder _13836_s = static__1a9567369_New(_13766_n);;
	{
		auto expr = &(_137519_parts);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6dd5acc:;
		if (it != expr_end) {
			jule::Ptr<_1bc247014_Token> *_13849_p = it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_13836_s, (*((*(_13849_p))))._field_Kind);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/obj/cxx/object.jule:1385:3"));
					(except.result);
				});
			}
			_iter_next_1c6dd5acc:;
			++it;
			goto _iter_begin_1c6dd5acc;
		}
		_iter_end_1c6dd5acc:;
	};
	return _1a9568d2c_Buf(&_13836_s);;
}



inline jule::Bool _1be0089d8_isHeadDecl(jule::Ptr<_1bc2ee055_Fn>* _139120_m) {
	if ((((*((*(_139120_m))))._field_Generics.len() > 0LL) || ((*((*(_139120_m))))._field_Instances.len() == 0LL))) {
		return false;;
	};
	return _1bcdc4157_IsOpMethod(_139120_m);;
}



inline jule::Bool _1be008ca2_defaultEq(jule::Ptr<_1bc2810c5_StructIns>* _139915_s) {
	return ((*((*(_139915_s))))._field_Comparable && ((*((*(_139915_s))))._field_Operators._field_Eq == nullptr));;
}



inline jule::Bool _1be017b90_ableToInit(jule::Ptr<_1bc4b64e7_Type>* _45520_t) {
	return (!(_1bc4b7394_Binded((*(_45520_t)).ptr())));;
}



inline jule::Bool _1be017e6a_shouldInitialized(jule::Ptr<_1bc4b64e7_Type>* _46227_t) {
	if ((!(_1be017b90_ableToInit(_46227_t)))) {
		return false;;
	};
	jule::Ptr<_1bc4be610_Prim> _4662_prim = _1bc4b8b9d_Prim((*(_46227_t)).ptr());;
	if ((_4662_prim != nullptr)) {
		return ((!(_1bc4c2d61_IsAny(_4662_prim))) && (!(_1bc4c2aca_IsStr(_4662_prim))));;
	};
	{
		
		if ((_1bc4b8e34_Sptr((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c7023489:;
			{
				return false;;
			}
		}
		else if ((_1bc4ba73d_Map((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c7024215:;
			{
				return false;;
			}
		}
		else if ((_1bc4b9c04_Slc((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c7023522:;
			{
				return false;;
			}
		}
		else if ((_1bc4ba4a7_Trait((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c7023588:;
			{
				return false;;
			}
		}
		else if ((_1bc4b9e8a_Fn((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c702439c:;
			{
				return false;;
			}
		}
		else if ((_1bc4b996d_Arr((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c7024413:;
			{
				jule::Ptr<_1bc4c5e30_Arr> _4827_arr = _1bc4b996d_Arr((*(_46227_t)).ptr());;
				return _1be017b90_ableToInit(&((*(_4827_arr))._field_Elem));;
			}
		}
		else if ((_1bc4ba221_Struct((*(_46227_t)).ptr()) != nullptr)) {
			_case_begin_1c7024479:;
			{
				return true;;
			}
		}
		else {
			_case_begin_1c702338a:;
			{
				return true;;
			}
		}
		_match_end_1c7023775:;
	};
}



inline void _1abb4722c_printErrorMessage(jule::Str _3022_msg) {
	jule::println(_1be2ec53a_toStr(_3022_msg));
}



inline void _1abb474a2_help(jule::Slice<jule::Str>* _3510_args) {
	if (((*(_3510_args)).len() > 2LL)) {
		_1abb4722c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_3510_args))[2LL]));
		return;;
	};
	jule::I32 _416_max = _1abb47051_HelpMap[0LL][0LL].len();;
	{
		auto expr = &(_1abb47051_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6c2a515:;
		if (it != expr_end) {
			jule::Array<jule::Str,2> *_429_k = it;
			{
				jule::I32 _433_n = (*(_429_k))[0LL].len();;
				if ((_433_n > _416_max)) {
					_416_max=_433_n;
				};
			}
			_iter_next_1c6c2a515:;
			++it;
			goto _iter_begin_1c6c2a515;
		}
		_iter_end_1c6c2a515:;
	};
	_1a95669ea_Builder _496_s = static__1a9567369_New(32LL);;
	;
	{
		auto expr = &(_1abb47051_HelpMap);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c703ca14:;
		if (it != expr_end) {
			jule::I32 _516_i = it - expr->begin();
			jule::Array<jule::Str,2> *_519_part = it;
			{
				({
					auto except = _1a95679eb_WriteStr(&_496_s, (*(_519_part))[0LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:52:3"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&_496_s, _1abb2d60e_Repeat(jule::Str::lit(" ", 1), ((_416_max - (*(_519_part))[0LL].len()) + 5LL)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:53:3"));
					(except.result);
				});
				({
					auto except = _1a95679eb_WriteStr(&_496_s, (*(_519_part))[1LL]);
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:54:3"));
					(except.result);
				});
				if (((_516_i + 1LL) < 5LL)) {
					({
						auto except = _1a9567ca4_WriteByte(&_496_s, '\n');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/main.jule:56:4"));
					});
				};
			}
			_iter_next_1c703ca14:;
			++it;
			_516_i++;
			goto _iter_begin_1c703ca14;
		}
		_iter_end_1c703ca14:;
	};
	jule::println(_1c703da9d_toStr(_496_s));
}



inline void _1abb476d3_version(jule::Slice<jule::Str>* _6313_args) {
	if (((*(_6313_args)).len() > 2LL)) {
		_1abb4722c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_6313_args))[2LL]));
		return;;
	};
	jule::println(_1be2ec53a_toStr(jule::Str::lit("jule0.1.1 @master", 17)));
}



inline void _1abb478e2_toolDistos(void) {
	jule::print(_1be2ec53a_toStr(jule::Str::lit("supported operating systems:\n ", 30)));
	jule::print(_1c70422cc_toStr(static_cast<jule::Str>(jule::Str::lit("windows", 7))));
	jule::print(_1be2ec53a_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c70422cc_toStr(static_cast<jule::Str>(jule::Str::lit("linux", 5))));
	jule::print(_1be2ec53a_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c70422cc_toStr(static_cast<jule::Str>(jule::Str::lit("darwin", 6))));
	jule::println(_1be2ec53a_toStr(jule::Str()));
}



inline void _1abb47a57_toolDistarch(void) {
	jule::print(_1be2ec53a_toStr(jule::Str::lit("supported architects:\n ", 23)));
	jule::print(_1c70529a2_toStr(static_cast<jule::Str>(jule::Str::lit("amd64", 5))));
	jule::print(_1be2ec53a_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c70529a2_toStr(static_cast<jule::Str>(jule::Str::lit("i386", 4))));
	jule::print(_1be2ec53a_toStr(jule::Str::lit(" ", 1)));
	jule::print(_1c70529a2_toStr(static_cast<jule::Str>(jule::Str::lit("arm64", 5))));
	jule::println(_1be2ec53a_toStr(jule::Str()));
}



inline void _1abb47c55_tool(jule::Slice<jule::Str>* _9410_args) {
	if (((*(_9410_args)).len() == 2LL)) {
		jule::println(_1be2ec53a_toStr(jule::Str::lit("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107)));
		return;;
	} else if (((*(_9410_args)).len() > 3LL)) {
		_1abb4722c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_9410_args))[3LL]));
		return;;
	};
	jule::Str _1052_cmd = (*(_9410_args))[2LL];;
	{
		auto &_match_expr{ _1052_cmd };
		
		if (_match_expr == jule::Str::lit("distos", 6)) {
			_case_begin_1c7056302:;
			{
				_1abb478e2_toolDistos();
			}
		}
		else if (_match_expr == jule::Str::lit("distarch", 8)) {
			_case_begin_1c7054c4b:;
			{
				_1abb47a57_toolDistarch();
			}
		}
		else {
			_case_begin_1c7054a4d:;
			{
				_1abb4722c_printErrorMessage((jule::Str::lit("undefined command: ", 19) + _1052_cmd));
			}
		}
		_match_end_1c7054b2a:;
	};
}



inline void _1abb47e86_julenv(jule::Slice<jule::Str>* _11712_args) {
	if (((*(_11712_args)).len() > 2LL)) {
		_1abb4722c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_11712_args))[2LL]));
		return;;
	};
	jule::println(_1be2ec53a_toStr(jule::Str::lit("julec version: jule0.1.1 @master", 32)));
	jule::println(_1be2ec53a_toStr(jule::Str::lit("architecture: i386", 18)));
	jule::println(_1be2ec53a_toStr(jule::Str::lit("operating system: linux", 23)));
	jule::println(_1be2ec53a_toStr((jule::Str::lit("default compiler: ", 18) + _1abb435ad_Compiler)));
	jule::println(_1be2ec53a_toStr((jule::Str::lit("default C++ standard: ", 22) + _1abb44bb9_CppStd)));
}



inline void _1abb482c7_mod(jule::Slice<jule::Str>* _1309_args) {
	if (((*(_1309_args)).len() == 2LL)) {
		jule::println(_1be2ec53a_toStr(jule::Str::lit("command is not given, try julec mod init", 40)));
		return;;
	};
	if (((*(_1309_args)).len() > 3LL)) {
		_1abb4722c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[3LL]));
		return;;
	};
	{
		auto &_match_expr{ (*(_1309_args))[2LL] };
		
		if (_match_expr == jule::Str::lit("init", 4)) {
			_case_begin_1c7059d83:;
			{
				({
					auto except = static__1a9c32072_Write(jule::Str::lit("jule.mod", 8), jule::Slice<jule::U8>(), 432LL);
					if (!except.ok()) {
						_1abb4722c_printErrorMessage(jule::Str::lit("module could not generated because of a problem", 47));
					}
				});
			}
		}
		else {
			_case_begin_1c70591c3:;
			{
				_1abb4722c_printErrorMessage((jule::Str::lit("invalid command: ", 17) + (*(_1309_args))[2LL]));
			}
		}
		_match_end_1c70597de:;
	};
}



inline jule::Bool _1abb48519_processCommand(jule::Slice<jule::Str>* _15320_args) {
	{
		auto &_match_expr{ (*(_15320_args))[1LL] };
		
		if (_match_expr == jule::Str::lit("help", 4)) {
			_case_begin_1c705ab20:;
			{
				_1abb474a2_help(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("version", 7)) {
			_case_begin_1c705b2d5:;
			{
				_1abb476d3_version(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("tool", 4)) {
			_case_begin_1c705b34b:;
			{
				_1abb47c55_tool(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("julenv", 6)) {
			_case_begin_1c705b3b2:;
			{
				_1abb47e86_julenv(_15320_args);
			}
		}
		else if (_match_expr == jule::Str::lit("mod", 3)) {
			_case_begin_1c705b428:;
			{
				_1abb482c7_mod(_15320_args);
			}
		}
		else {
			_case_begin_1c7059965:;
			{
				return false;;
			}
		}
		_match_end_1c705a4d2:;
	};
	return true;;
}



inline void _1abb486b2_showInfo(void) {
	jule::println(_1be2ec53a_toStr(jule::Str::lit("JuleC is a tool for Jule source code and developers.\n\nCommands:\n    help          Show help\n    version       Show version\n    tool          Tools for effective Jule\n    julenv        Show information about native jule environment\n    mod           Module management\n\nCompilation:\n    julec [OPTIONS] INPUT\n", 307)));
}



void _1abb48838_main(void) {
	jule::Slice<jule::Str> _1896_args = _1a9cd2e25_Args();;
	if ((_1896_args.len() < 2LL)) {
		_1abb486b2_showInfo();
		return;;
	};
	if (_1abb48519_processCommand(&(_1896_args))) {
		return;;
	};
	_1be0b0c6b_compileCommand(&(_1896_args));
}



inline void _1be0acb8b_init(void) {
	_1abb435ad_Compiler=jule::Str::lit("clang", 5);
}



inline jule::Ptr<_1a9c30b64_File> _1be0ace55_openOutput(jule::Str* _3016_path) {
	jule::Str _312_dir = _1abb3ae57_Dir((*(_3016_path)));;
	({
		auto except = static__1a9c2d0a1_Of(_312_dir);
		if (!except.ok()) {
			({
				auto except = static__1abb3d366_Create(_312_dir);
				if (!except.ok()) {
					_1ac598e47_Throw(jule::Str::lit("a problem occurs when code generation", 37));
				}
			});
		}
	});
	return ({
		auto except = static__1a9c31912_Create((*(_3016_path)));
		(except.ok()) ? (except.result) : ({
			_1ac598e47_Throw(jule::Str::lit("a problem occurs when code generation", 37));

			nullptr;
		});
	});;
}



inline void _1be0ad0ed_clearObjects(void) {
	({
		auto except = static__1a9c2a1e1_Remove(_1be0ae253_getCompilePath());
		if (!except.ok()) {
			jule::println(_1be2ec53a_toStr(jule::Str::lit("a problem occurs when object cleaning", 37)));
			return;;
		}
	});
	static__1abb3d597_Remove(_1be0ac42c_OutDir);
}



inline void _1be0ad40b_compileIr(jule::Str _5914_compiler, jule::Str _5929_compilerCmd) {
	jule::Ptr<_1a9c2bb82_Cmd> _606_cmd = static__1a9c2c0d3_New(_5914_compiler);;
	(*(_606_cmd))._field_Args=_1abb32e93_SplitAll(_5929_compilerCmd, jule::Str::lit(" ", 1));
	({
		auto except = _1a9c2c2d1_Spawn(_606_cmd);
		if (!except.ok()) {
			{
				auto &_match_expr{ except.error };
				
				if (jule::Any(static_cast<jule::I32>(1LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1c70621dc:;
					{
						static__1abb6ab57_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of compiler path is not exist", 70));
					}
				}
				else if (jule::Any(static_cast<jule::I32>(0LL), &__jule_any_type139) == _match_expr) {
					_case_begin_1c7062330:;
					{
						static__1abb6ab57_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of permission denied", 61));
					}
				}
				else {
					_case_begin_1c7061bc0:;
					{
						static__1abb6ab57_Print(jule::Str::lit("\033[31m", 5), jule::Str::lit("back-end compiler could not used because of unknown problem", 59));
					}
				}
				_match_end_1c7061cd0:;
			};
			_1ac598e47_Throw(jule::Str());
		}
	});
	jule::I32 _732_status = ({
		auto except = _1a9c2c765_Wait(_606_cmd);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:73:12"));
		(except.result);
	});;
	if ((_732_status != 0LL)) {
		jule::Str _753_errorMessage = ({ jule::Int size = 0; jule::Str part0 = std::move(jule::Str::lit("\n>>> your backend compiler (", 28)); size += part0.len(); jule::Str part1 = std::move(_1abb435ad_Compiler); size += part1.len(); jule::Str part2 = std::move(jule::Str::lit(") reports problems\n>>> please check errors above\n>>> is this a compiler problem, please report us: https://github.com/julelang/jule/issues/new/choose", 149)); size += part2.len(); jule::Slice<jule::U8> buf; buf.alloc_new(0, size); buf.append(part0); buf.append(part1); buf.append(part2); jule::Str result; result._len = buf._len; result.buffer = std::move(buf.data); result._slice = buf._slice; std::move(result); });;
		static__1abb6ab57_Print(jule::Str::lit("\033[31m", 5), _753_errorMessage);
		_1ac598e47_Throw(jule::Str());
	};
	_1be0ad0ed_clearObjects();
}



inline jule::Bool _1be0ad6c5_isCppSourceFile(jule::Str _8620_path) {
	jule::I32 _872_offset = _1abb316cd_FindLastByte(_8620_path, '.');;
	if ((_872_offset == -1LL)) {
		return false;;
	};
	return _1a982cdc1_IsValidCppExt(_8620_path.slice(_872_offset));;
}



inline void _1be0ad906_pushCompCmdClang(_1a95669ea_Builder* _9426_cmd) {
	({
		auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("-Wno-everything ", 16));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:96:2"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:99:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1abb44bb9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c7065124:;
			{
				({
					auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:102:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c70661ad:;
			{
				({
					auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:104:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c7066224:;
			{
				({
					auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:106:3"));
					(except.result);
				});
			}
		}
		_match_end_1c7065e49:;
	};
	({
		auto except = _1a9567ca4_WriteByte(_9426_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:108:2"));
	});
	if (_1abb45d85_Production) {
		({
			auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:111:3"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("-flto ", 6));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:112:3"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:113:3"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:114:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1a95679eb_WriteStr(_9426_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:116:3"));
			(except.result);
		});
	};
}



inline void _1be0adb37_pushCompCmdGcc(_1a95669ea_Builder* _12024_cmd) {
	({
		auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("-w ", 3));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:122:2"));
		(except.result);
	});
	({
		auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("--std=", 6));
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:125:2"));
		(except.result);
	});
	{
		auto &_match_expr{ _1abb44bb9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5)) {
			_case_begin_1c70676cb:;
			{
				({
					auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("c++14", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:128:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp17", 5)) {
			_case_begin_1c70691e4:;
			{
				({
					auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("c++17", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:130:3"));
					(except.result);
				});
			}
		}
		else if (_match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c706925a:;
			{
				({
					auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("c++20", 5));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:132:3"));
					(except.result);
				});
			}
		}
		_match_end_1c7068e80:;
	};
	({
		auto except = _1a9567ca4_WriteByte(_12024_cmd, ' ');
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:134:2"));
	});
	if (_1abb45d85_Production) {
		({
			auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("-O3 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:137:3"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("-DNDEBUG ", 9));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:138:3"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("-fomit-frame-pointer ", 21));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:139:3"));
			(except.result);
		});
	} else {
		({
			auto except = _1a95679eb_WriteStr(_12024_cmd, jule::Str::lit("-O0 ", 4));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:141:3"));
			(except.result);
		});
	};
}



inline __jule_tuple_str__jule_tuple_str _1be0ae0bb_genCompileCmd(jule::Str _14618_sourcePath, jule::Ptr<_1bcdbd492_IR>* _14636_ir) {
	__jule_tuple_str__jule_tuple_str __jule_func_result;
	jule::Str *_1473_compiler = &(_1abb449aa_CompilerPath);;
	_1a95669ea_Builder _1486_cmd = static__1a9567369_New(64LL);;
	{
		auto &_match_expr{ _1abb435ad_Compiler };
		
		if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c706be50:;
			{
				_1be0adb37_pushCompCmdGcc(&(_1486_cmd));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c706c47d:;
			{
				_1be0ad906_pushCompCmdClang(&(_1486_cmd));
			}
		}
		_match_end_1c706c192:;
	};
	{
		auto expr = &((*((*(_14636_ir))))._field_Used);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c706c736:;
		if (it != expr_end) {
			jule::Ptr<_1bc3dcb9e_ImportInfo> *_1589_u = it;
			{
				if (((*((*(_1589_u))))._field_Binded && _1be0ad6c5_isCppSourceFile((*(*(_1589_u)).alloc)._field_Path))) {
					({
						auto except = _1a95679eb_WriteStr(&_1486_cmd, (*(*(_1589_u)).alloc)._field_Path);
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:160:4"));
						(except.result);
					});
					({
						auto except = _1a9567ca4_WriteByte(&_1486_cmd, ' ');
						if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:161:4"));
					});
				};
			}
			_iter_next_1c706c736:;
			++it;
			goto _iter_begin_1c706c736;
		}
		_iter_end_1c706c736:;
	};
	if (!(_1be0ac9d2_Out).empty()) {
		({
			auto except = _1a95679eb_WriteStr(&_1486_cmd, jule::Str::lit("-o ", 3));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:166:3"));
			(except.result);
		});
		({
			auto except = _1a95679eb_WriteStr(&_1486_cmd, _1be0ac9d2_Out);
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:167:3"));
			(except.result);
		});
		({
			auto except = _1a9567ca4_WriteByte(&_1486_cmd, ' ');
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:168:3"));
		});
	};
	({
		auto except = _1a95679eb_WriteStr(&_1486_cmd, _14618_sourcePath);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:170:2"));
		(except.result);
	});
	{
		auto expr = &((*((*(_14636_ir))))._field_Passes);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c70702b6:;
		if (it != expr_end) {
			jule::Str *_1739_pass = it;
			{
				({
					auto except = _1a9567ca4_WriteByte(&_1486_cmd, ' ');
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:174:3"));
				});
				({
					auto except = _1a95679eb_WriteStr(&_1486_cmd, (*(_1739_pass)));
					if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:175:3"));
					(except.result);
				});
			}
			_iter_next_1c70702b6:;
			++it;
			goto _iter_begin_1c70702b6;
		}
		_iter_end_1c70702b6:;
	};
	if ((_1abb3e873_OS == static_cast<jule::Str>(jule::Str::lit("windows", 7)))) {
		({
			auto except = _1a95679eb_WriteStr(&_1486_cmd, jule::Str::lit(" -lshell32", 10));
			if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:180:3"));
			(except.result);
		});
	};
	__jule_func_result.__jule_result_arg0 = (*(_1473_compiler));
	__jule_func_result.__jule_result_arg1 = _1a956837b_Str(&_1486_cmd);
	return __jule_func_result;;
}



inline jule::Str _1be0ae253_getCompilePath(void) {
	return _1abb3a264_Join(({ auto __jule_collection = jule::Slice<jule::Str>::alloc(2, 2); auto it = __jule_collection.begin(); (*it++) = _1be0ac42c_OutDir; (*it++) = _1be0ac729_OutName; __jule_collection; }));;
}



inline void _1be0ae484_applyTargetIndependentOptimizations(jule::Ptr<_1bcdbd492_IR>* _19245_ir) {
	jule::Ptr<_1bdc25716_Optimizer> _1936_opt = static__1bdc25bcd_New(_19245_ir);;
	_1bdc27570_Optimize(_1936_opt.ptr());
}



inline void _1be0ae62c_checkCompilerFlag(void) {
	{
		auto &_match_expr{ _1abb435ad_Compiler };
		
		if (_match_expr == jule::Str()) {
			_case_begin_1c7072b9d:;
			{
				_1ac598e47_Throw(jule::Str::lit("missing option value: --compiler", 32));
			}
		}
		else if (_match_expr == jule::Str::lit("clang", 5)) {
			_case_begin_1c70727c4:;
			{
				if ((_1abb449aa_CompilerPath).empty()) {
					_1abb449aa_CompilerPath=jule::Str::lit("clang++", 7);
				};
			}
		}
		else if (_match_expr == jule::Str::lit("gcc", 3)) {
			_case_begin_1c707283a:;
			{
				if ((_1abb449aa_CompilerPath).empty()) {
					_1abb449aa_CompilerPath=jule::Str::lit("g++", 3);
				};
			}
		}
		else {
			_case_begin_1c70722eb:;
			{
				_1ac598e47_Throw((jule::Str::lit("invalid option value for --compiler: ", 37) + _1abb435ad_Compiler));
			}
		}
		_match_end_1c707275d:;
	};
}



inline void _1be0ae83b_checkTargetArch(jule::Str _21420_arch) {
	if ((((_21420_arch != static_cast<jule::Str>(jule::Str::lit("amd64", 5))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("arm64", 5)))) && (_21420_arch != static_cast<jule::Str>(jule::Str::lit("i386", 4))))) {
		_1ac598e47_Throw((jule::Str::lit("--target: unsupported/undefined architecture: ", 46) + _21420_arch));
	};
}



inline void _1be0aea6c_checkTargetOs(jule::Str _22218_os) {
	if ((((_22218_os != static_cast<jule::Str>(jule::Str::lit("windows", 7))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("linux", 5)))) && (_22218_os != static_cast<jule::Str>(jule::Str::lit("darwin", 6))))) {
		_1ac598e47_Throw((jule::Str::lit("--target: unsupported/undefined operating system: ", 50) + _22218_os));
	};
}



inline void _1be0aec9d_checkTargetFlag(jule::Str* _23021_target) {
	if (((*(_23021_target))).empty()) {
		_1ac598e47_Throw(jule::Str::lit("missing option value: --target", 30));
	};
	jule::Slice<jule::Str> _2352_parts = _1abb32e93_SplitAll((*(_23021_target)), jule::Str::lit("-", 1));;
	if ((_2352_parts.len() != 2LL)) {
		_1ac598e47_Throw((jule::Str::lit("--target: undefined platform target format: ", 44) + (*(_23021_target))));
	};
	jule::Str _2402_os;
	jule::Str _2406_arch;
	({
		jule::Str ___jule_assign_arg = _2352_parts[0LL];
		jule::Str _1___jule_assign_arg = _2352_parts[1LL];
		_2402_os = ___jule_assign_arg;
		_2406_arch = _1___jule_assign_arg;
	});
	if ((!_2402_os.equal("native", 6))) {
		_1be0aea6c_checkTargetOs(_2402_os);
		_1abb3e873_OS=_2402_os;
	};
	if ((!_2406_arch.equal("native", 6))) {
		_1be0ae83b_checkTargetArch(_2406_arch);
		_1abb3eb2b_Arch=_2406_arch;
	};
	_1bc376808_UpdateTarget();
}



inline void _1be0aeece_checkOptFlag(jule::Str* _25318_opt) {
	if (((*(_25318_opt))).empty()) {
		_1ac598e47_Throw(jule::Str::lit("missing option value: --opt", 27));
	};
	{
		auto &_match_expr{ (*(_25318_opt)) };
		
		if (_match_expr == jule::Str::lit("L0", 2)) {
			_case_begin_1c7079ac8:;
			{
				goto _match_end_1c707929d;
			}
		}
		else if (_match_expr == jule::Str::lit("L1", 2)) {
			_case_begin_1c7079413:;
			{
				_1bdb0bb2a_PushOptLevel(static_cast<jule::I32>(1LL));
			}
		}
		else if (_match_expr == jule::Str::lit("L2", 2)) {
			_case_begin_1c7079479:;
			{
				_1bdb0bb2a_PushOptLevel(static_cast<jule::I32>(2LL));
			}
		}
		else {
			_case_begin_1c707938b:;
			{
				_1ac598e47_Throw((jule::Str::lit("--opt: invalid optimization level: ", 35) + (*(_25318_opt))));
			}
		}
		_match_end_1c707929d:;
	};
}



inline void _1be0b0397_checkCppStdFlag(void) {
	{
		auto &_match_expr{ _1abb44bb9_CppStd };
		
		if (_match_expr == jule::Str::lit("cpp14", 5) || _match_expr == jule::Str::lit("cpp17", 5) || _match_expr == jule::Str::lit("cpp20", 5)) {
			_case_begin_1c707aed6:;
			{
				goto _match_end_1c707a8dc;
			}
		}
		else {
			_case_begin_1c70797cb:;
			{
				_1ac598e47_Throw((jule::Str::lit("--cppstd: invalid cpp standard: ", 32) + _1abb44bb9_CppStd));
			}
		}
		_match_end_1c707a8dc:;
	};
}



inline jule::Slice<jule::Str> _1be0b0562_checkFlags(jule::Slice<jule::Str>* _28116_args) {
	jule::Str _2826_opt = jule::Str::lit("L0", 2);;
	jule::Str _2836_target = jule::Str::lit("native-native", 13);;
	jule::Ptr<_1be0a7724_FlagSet> _2856_fs = static__1be0a7a43_New();;
	_1c707c889_AddVar(_2856_fs.ptr(), ((jule::Ptr<jule::Str>)((&(_2826_opt)))), jule::Str::lit("opt", 3), 0LL, jule::Str::lit("Optimization level", 18));
	_1c707c889_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_2836_target)))), jule::Str::lit("target", 6), 0LL, jule::Str::lit("Target system", 13));
	_1c707c889_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1be0ac9d2_Out)))), jule::Str::lit("out", 3), 'o', jule::Str::lit("Output identifier", 17));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1abb44e61_Shadowing)))), jule::Str::lit("shadowing", 9), 0LL, jule::Str::lit("Allow shadowing", 15));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1abb45219_Transpilation)))), jule::Str::lit("transpile", 9), 't', jule::Str::lit("Transpile code", 14));
	_1c707c889_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1abb435ad_Compiler)))), jule::Str::lit("compiler", 8), 0LL, jule::Str::lit("Backend compiler", 16));
	_1c707c889_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1abb449aa_CompilerPath)))), jule::Str::lit("compiler-path", 13), 0LL, jule::Str::lit("Path of backend compiler", 24));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1abb45d85_Production)))), jule::Str::lit("production", 10), 'p', jule::Str::lit("Compile for production", 22));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1abb4577a_RC)))), jule::Str::lit("disable-rc", 10), 0LL, jule::Str::lit("Disable reference counting", 26));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1abb45b43_Safety)))), jule::Str::lit("disable-safety", 14), 0LL, jule::Str::lit("Disable safety", 14));
	_1c707c889_AddVar(_2856_fs, ((jule::Ptr<jule::Str>)((&(_1abb44bb9_CppStd)))), jule::Str::lit("cppstd", 6), 0LL, jule::Str::lit("C++ standard", 12));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0861b_Copy)))), jule::Str::lit("opt-copy", 8), 0LL, jule::Str::lit("Copy optimization", 17));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb08918_Deadcode)))), jule::Str::lit("opt-deadcode", 12), 0LL, jule::Str::lit("Deadcode optimization", 21));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb08bc1_Append)))), jule::Str::lit("opt-append", 10), 0LL, jule::Str::lit("Append optimization", 19));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb08ebd_Math)))), jule::Str::lit("opt-math", 8), 0LL, jule::Str::lit("Math optimization", 17));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb09276_Access)))), jule::Str::lit("opt-access", 10), 0LL, jule::Str::lit("Access optimization", 19));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0952e_Inline)))), jule::Str::lit("opt-inline", 10), 0LL, jule::Str::lit("Inline optimization", 19));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb097d7_Ptr)))), jule::Str::lit("opt-ptr", 7), 0LL, jule::Str::lit("Pointer optimizations", 21));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb09ba0_Cond)))), jule::Str::lit("opt-cond", 8), 0LL, jule::Str::lit("Conditional optimizations", 25));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb09de2_Str)))), jule::Str::lit("opt-str", 7), 0LL, jule::Str::lit("String optimizations", 20));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0a189_Slice)))), jule::Str::lit("opt-slice", 9), 0LL, jule::Str::lit("Slice optimizations", 19));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0a442_Assign)))), jule::Str::lit("opt-assign", 10), 0LL, jule::Str::lit("Assignment optimizations", 24));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0a6ea_Exceptional)))), jule::Str::lit("opt-exceptional", 15), 0LL, jule::Str::lit("Exceptional optimizations", 25));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0a9a3_Iter)))), jule::Str::lit("opt-iter", 8), 0LL, jule::Str::lit("Iterations optimizations", 24));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0ac5b_Dynamic)))), jule::Str::lit("opt-dynamic", 11), 0LL, jule::Str::lit("Dynamic programming optimizations", 33));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0b014_Array)))), jule::Str::lit("opt-array", 9), 0LL, jule::Str::lit("Array optimizations", 19));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0b4ed_Len)))), jule::Str::lit("opt-len", 7), 0LL, jule::Str::lit("Len optimizations", 17));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0b740_StdStrings)))), jule::Str::lit("opt-std-strings", 15), 0LL, jule::Str::lit("Special optimizations for the std/strings package", 49));
	_1c70869a3_AddVar(_2856_fs, ((jule::Ptr<jule::Bool>)((&(_1bdb0b94e_StdMathCmplx)))), jule::Str::lit("opt-std-math-cmplx", 18), 0LL, jule::Str::lit("Special optimizations for the std/math/cmplx package", 52));
	jule::Slice<jule::Str> _3176_content = ({
		auto except = _1be0a8912_Parse(_2856_fs, (*(_28116_args)));
		(except.ok()) ? (except.result) : ({
			_1ac598e47_Throw(except.error.cast<jule::Str>(&__jule_any_type5));

			nullptr;
		});
	});;
	_1be0ae62c_checkCompilerFlag();
	_1be0b0397_checkCppStdFlag();
	_1be0aec9d_checkTargetFlag(&(_2836_target));
	_1be0aeece_checkOptFlag(&(_2826_opt));
	return _3176_content;;
}



inline void _1be0b0771_setupSemaFlags(jule::I32* _33024_flags) {
	if (_1abb44e61_Shadowing) {
		(*(_33024_flags))|=static_cast<jule::I32>(1LL);
	};
}



inline jule::Ptr<_1bcdbd492_IR> _1be0b0a3a_buildIr(jule::Slice<jule::Str>* _33613_args) {
	jule::Slice<jule::Str> _3372_content = _1be0b0562_checkFlags(_33613_args);;
	jule::I32 _3396_semaFlags = static_cast<jule::I32>(0LL);;
	_1be0b0771_setupSemaFlags(&(_3396_semaFlags));
	if ((_3372_content.len() == 0LL)) {
		_1ac598e47_Throw(_1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("missing compile path", 20)), jule::Slice<jule::Any>()));
	} else if ((_3372_content.len() > 1LL)) {
		_1ac598e47_Throw((jule::Str::lit("undefined content: ", 19) + _3372_content[1LL]));
	};
	jule::Str _3476_path;
	jule::Bool _34712_ok;
	({
		__jule_tuple_str__jule_tuple_bool __jule_assign_result = _1abb3a7b4_Abs(_3372_content[0LL]);
		_3476_path = __jule_assign_result.__jule_result_arg0;
		_34712_ok = __jule_assign_result.__jule_result_arg1;
	});
	if ((!(_34712_ok))) {
		_1ac598e47_Throw(jule::Str::lit("compile path could not processed because of a problem", 53));
	};
	_1a9cc3e6b_Stat _3532_inf = ({
		auto except = static__1a9c2d0a1_Of(_1abb3dc7e_PathStdlib);
		(except.ok()) ? (except.result) : ({{
			_1ac598e47_Throw(_1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
			return nullptr;;
		} _1a9cc3e6b_Stat{._field_mode=0LL, ._field_size=0};});
	});;
	if ((!(_1a9cc4378_IsDir(&_3532_inf)))) {
		_1ac598e47_Throw(_1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("standard library directory not found", 36)), jule::Slice<jule::Any>()));
	};
	jule::Ptr<_1bcdbd492_IR> _3616_ir;
	jule::Slice<_1a9575ca1_Log> _36110_logs;
	({
		__jule_tuple_x_1bcdbd492_IR__jule_tuple_s_1a9575ca1_Log __jule_assign_result = static__1bcdbd96a_Build(_3476_path, _3396_semaFlags);
		_3616_ir = __jule_assign_result.__jule_result_arg0;
		_36110_logs = __jule_assign_result.__jule_result_arg1;
	});
	if (((_3616_ir == nullptr) && (_36110_logs == nullptr))) {
		_1ac598e47_Throw(_1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("there is no Jule source code in package: @", 42)), ({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = jule::Any(_3476_path, &__jule_any_type5); __jule_collection; })));
	};
	if ((_36110_logs != nullptr)) {
		static__1ac59851d_PrintLogs(&(_36110_logs));
		_1ac598e47_Throw(jule::Str());
	};
	return _3616_ir;;
}



inline void _1be0b0c6b_compileCommand(jule::Slice<jule::Str>* _37624_args) {
	((*(_37624_args))).mut_slice(1LL);;
	if ((*(_37624_args))[0LL].equal("test", 4)) {
		_1abb454c2_Test=true;
		((*(_37624_args))).mut_slice(1LL);;
	};
	jule::Ptr<_1bcdbd492_IR> _3826_ir = _1be0b0a3a_buildIr(_37624_args);;
	_1bcdc8b40_ProgramMeta=static__1bcdcb24c_Collect(_3826_ir);
	if ((!(_1abb454c2_Test))) {
		;
		(*(_1bcdc8b40_ProgramMeta))._field_EntryPoint=_1bc3e19d8_FindFn((*(_3826_ir))._field_Main.ptr(), jule::Str::lit("main", 4), false);
		if (((*_1bcdc8b40_ProgramMeta.alloc)._field_EntryPoint == nullptr)) {
			_1ac598e47_Throw(_1a9576213_Logf(static_cast<jule::Str>(jule::Str::lit("missing entry point: entry point (main) function is not defined", 63)), jule::Slice<jule::Any>()));
		};
	};
	_1be0ae484_applyTargetIndependentOptimizations(&(_3826_ir));
	_1bcdbe9d2_Order(_3826_ir.ptr());
	jule::Str _4002_compPath = _1be0ae253_getCompilePath();;
	jule::Str _4012_compiler;
	jule::Str _40112_compilerCmd;
	({
		__jule_tuple_str__jule_tuple_str __jule_assign_result = _1be0ae0bb_genCompileCmd(_4002_compPath, &(_3826_ir));
		_4012_compiler = __jule_assign_result.__jule_result_arg0;
		_40112_compilerCmd = __jule_assign_result.__jule_result_arg1;
	});
	jule::Ptr<_1bdeeab84_ObjectCoder> _4036_oc = static__1bdeeb0e6_New(&(_3826_ir), _1bdee83ce_SerializationInfo{._field_Compiler=_4012_compiler, ._field_CompilerCommand=_40112_compilerCmd});;
	if (_1abb454c2_Test) {
		jule::Ptr<_1bdc48717_TestCoder> _4087_tc = static__1bdc48bbd_New(&(_4036_oc));;
		_1bdc4a043_Serialize(_4087_tc);
	} else {
		_1be008345_Serialize(_4036_oc);
	};
	jule::Ptr<_1a9c30b64_File> _4146_file = _1be0ace55_openOutput(&(_4002_compPath));;
	({
		auto except = _1a9c2a675_Write(_4146_file.ptr(), _1a9568d2c_Buf(&(*(_4036_oc))._field_Buf));
		if (!except.ok()) {
			_1ac598e47_Throw(jule::Str::lit("object code could not write", 27));
		}
	});
	({
		auto except = _1a9c3287a_Close(_4146_file);
		if (!except.ok()) __jule_panic_s(jule::Str("unhandled exceptional: ") + except.error.type->to_str(except.error.data) + jule::Str("\nlocation: julec/compile.jule:418:2"));
	});
	if ((!(_1abb45219_Transpilation))) {
		_1be0ad40b_compileIr(_4012_compiler, _40112_compilerCmd);
	};
}



void __jule_call_initializers(void) {
	_1abb3ec6e_init();
	_1bc37697e_init();
	_1be0acb8b_init();

}

inline jule::Bool __jule_anon1c0bc5906(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc300ead_ParamIns> _25021_p1, jule::Ptr<_1bc300ead_ParamIns> _25036_p2) {
	if (((*((*(_25021_p1))._field_Decl))._field_Mutable != (*(*(_25036_p2))._field_Decl.alloc)._field_Mutable)) {
		return false;;
	};
	if (_1bc2ecbd0_IsSelf((*(_25021_p1))._field_Decl.ptr())) {
		if ((!(_1bc2ecbd0_IsSelf((*(_25036_p2))._field_Decl)))) {
			return false;;
		};
		if ((_1bc2ece66_IsRef((*(_25021_p1))._field_Decl) != _1bc2ece66_IsRef((*(_25036_p2))._field_Decl))) {
			return false;;
		};
		return true;;
	};
	if (((*((*(_25021_p1))._field_Decl))._field_Reference != (*(*(_25036_p2))._field_Decl.alloc)._field_Reference)) {
		return false;;
	};
	if (((*((*(_25021_p1))._field_Decl))._field_Variadic != (*(*(_25036_p2))._field_Decl.alloc)._field_Variadic)) {
		return false;;
	};
	return _1bc4b6c34_Equal((*(_25021_p1))._field_Type, (*(_25036_p2))._field_Type);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c3b43e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _6521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _6536_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c3b43e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c3b43e_ctx>();
	return _1bc380b97__Decl(__jule_closure_ctx.alloc->_self_, _6521_e, _6536_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c3d3b9(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _7221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _7236_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c3d3b9_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c3d3b9_ctx>();
	return _1bc381093__Type(__jule_closure_ctx.alloc->_self_, _7221_e, _7236_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c51e27(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _17821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _17836_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c51e27_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c51e27_ctx>();
	return _1bc383dba__Decl(__jule_closure_ctx.alloc->_self_, _17821_e, _17836_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c53da2(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _18521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _18536_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c53da2_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c53da2_ctx>();
	return _1bc3842b6__Type(__jule_closure_ctx.alloc->_self_, _18521_e, _18536_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbc98a22(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _28321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _28336_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1bbc98a22_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbc98a22_ctx>();
	return _1bc3870cc__Decl(__jule_closure_ctx.alloc->_self_, _28321_e, _28336_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c54dd6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _40221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _40236_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c54dd6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c54dd6_ctx>();
	return _1bc389e15__Decl(__jule_closure_ctx.alloc->_self_, _40221_e, _40236_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbcaddde(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _40921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _40936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1bbcaddde_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbcaddde_ctx>();
	return _1bc38a70c__Recv(__jule_closure_ctx.alloc->_self_, _40921_e, _40936_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbcb0d69(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _41621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _41636_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1bbcb0d69_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbcb0d69_ctx>();
	return _1bc38a311__Type(__jule_closure_ctx.alloc->_self_, _41621_e, _41636_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbd0b997(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _97421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _97436_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1bbd0b997_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd0b997_ctx>();
	return _1bc39016d__Decl(__jule_closure_ctx.alloc->_self_, _97421_e, _97436_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bbd0d922(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _98121_e, jule::Ptr<_1bc26596c_FnCallExpr>* _98136_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1bbd0d922_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bbd0d922_ctx>();
	return _1bc390569__Str(__jule_closure_ctx.alloc->_self_, _98121_e, _98136_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c65ca4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _98821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _98836_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c65ca4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c65ca4_ctx>();
	return _1bc390d61__Bits(__jule_closure_ctx.alloc->_self_, _98821_e, _98836_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c69329(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _99521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _99536_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c69329_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c69329_ctx>();
	return _1bc39125c__Elem(__jule_closure_ctx.alloc->_self_, _99521_e, _99536_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c6b2a4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _100221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _100236_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c6b2a4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c6b2a4_ctx>();
	return _1bc391658__Size(__jule_closure_ctx.alloc->_self_, _100221_e, _100236_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c0c6d22e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _100921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _100936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c0c6d22e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c0c6d22e_ctx>();
	return _1bc391a54__Key(__jule_closure_ctx.alloc->_self_, _100921_e, _100936_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1be0421b4(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _101621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _101636_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1be0421b4_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1be0421b4_ctx>();
	return _1bc391e50__Value(__jule_closure_ctx.alloc->_self_, _101621_e, _101636_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03de52c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _102321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _102336_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03de52c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03de52c_ctx>();
	return _1bc39234b__Fields(__jule_closure_ctx.alloc->_self_, _102321_e, _102336_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e16b6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _103021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _103036_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03e16b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03e16b6_ctx>();
	return _1bc392747__Statics(__jule_closure_ctx.alloc->_self_, _103021_e, _103036_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e3641(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _103721_e, jule::Ptr<_1bc26596c_FnCallExpr>* _103736_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03e3641_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03e3641_ctx>();
	return _1bc394d21__Params(__jule_closure_ctx.alloc->_self_, _103721_e, _103736_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e55bb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _104421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _104436_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03e55bb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03e55bb_ctx>();
	return _1bc393c32__Types(__jule_closure_ctx.alloc->_self_, _104421_e, _104436_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e7546(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _105121_e, jule::Ptr<_1bc26596c_FnCallExpr>* _105136_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03e7546_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03e7546_ctx>();
	return _1bc392b43__Binded(__jule_closure_ctx.alloc->_self_, _105121_e, _105136_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03e94c1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _105821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _105836_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03e94c1_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03e94c1_ctx>();
	return _1bc39303e__Ordered(__jule_closure_ctx.alloc->_self_, _105821_e, _105836_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10db613(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _106521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _106536_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10db613_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10db613_ctx>();
	return _1bc39343a__Comparable(__jule_closure_ctx.alloc->_self_, _106521_e, _106536_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10dd604(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _107221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _107236_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10dd604_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10dd604_ctx>();
	return _1bc393836__Mutable(__jule_closure_ctx.alloc->_self_, _107221_e, _107236_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10e057e(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _107921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _107936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10e057e_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10e057e_ctx>();
	return _1bc39412d__CanNil(__jule_closure_ctx.alloc->_self_, _107921_e, _107936_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10e2509(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _108621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _108636_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10e2509_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10e2509_ctx>();
	return _1bc394529__GC(__jule_closure_ctx.alloc->_self_, _108621_e, _108636_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10e4484(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _109321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _109336_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10e4484_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10e4484_ctx>();
	return _1bc394925__Result(__jule_closure_ctx.alloc->_self_, _109321_e, _109336_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c03eac53(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _110021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _110036_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c03eac53_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c03eac53_ctx>();
	return _1bc390965__Kind(__jule_closure_ctx.alloc->_self_, _110021_e, _110036_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c12508cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _126221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _126236_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c12508cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c12508cb_ctx>();
	return _1bc396196__Unwrap(__jule_closure_ctx.alloc->_self_, _126221_e, _126236_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c12528bc(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _126921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _126936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c12528bc_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c12528bc_ctx>();
	return _1bc396592__Type(__jule_closure_ctx.alloc->_self_, _126921_e, _126936_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c1254847(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _127621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _127636_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c1254847_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c1254847_ctx>();
	return _1bc39698d__Lvalue(__jule_closure_ctx.alloc->_self_, _127621_e, _127636_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad07e3dd(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _128321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _128336_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad07e3dd_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad07e3dd_ctx>();
	return _1bc396d89__Mutable(__jule_closure_ctx.alloc->_self_, _128321_e, _128336_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad080675(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _129021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _129036_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad080675_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad080675_ctx>();
	return _1bc397285__Const(__jule_closure_ctx.alloc->_self_, _129021_e, _129036_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad08190c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _129721_e, jule::Ptr<_1bc26596c_FnCallExpr>* _129736_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad08190c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad08190c_ctx>();
	return _1bc397681__Field(__jule_closure_ctx.alloc->_self_, _129721_e, _129736_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1bd52d3d7(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _130421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _130436_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1bd52d3d7_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd52d3d7_ctx>();
	return _1bc397a7c__Method(__jule_closure_ctx.alloc->_self_, _130421_e, _130436_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10eb920(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _142921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _142936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10eb920_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10eb920_ctx>();
	return _1bc39a82c__Path(__jule_closure_ctx.alloc->_self_, _142921_e, _142936_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1c10eda65(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _143621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _143636_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1c10eda65_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c10eda65_ctx>();
	return _1bc39ac28__Name(__jule_closure_ctx.alloc->_self_, _143621_e, _143636_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad08b120(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _144321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _144336_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad08b120_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad08b120_ctx>();
	return _1bc39b124__Dir(__jule_closure_ctx.alloc->_self_, _144321_e, _144336_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad0ea1e5(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _194921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _194936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad0ea1e5_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad0ea1e5_ctx>();
	return _1bc39ea73__Name(__jule_closure_ctx.alloc->_self_, _194921_e, _194936_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad0ec170(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _195621_e, jule::Ptr<_1bc26596c_FnCallExpr>* _195636_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad0ec170_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad0ec170_ctx>();
	return _1bc39ee6e__Public(__jule_closure_ctx.alloc->_self_, _195621_e, _195636_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad0ee0ea(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _196321_e, jule::Ptr<_1bc26596c_FnCallExpr>* _196336_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad0ee0ea_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad0ee0ea_ctx>();
	return _1bc3a036a__Binded(__jule_closure_ctx.alloc->_self_, _196321_e, _196336_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad101075(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _197021_e, jule::Ptr<_1bc26596c_FnCallExpr>* _197036_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad101075_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad101075_ctx>();
	return _1bc3a0766__Exceptional(__jule_closure_ctx.alloc->_self_, _197021_e, _197036_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad103000(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _197721_e, jule::Ptr<_1bc26596c_FnCallExpr>* _197736_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad103000_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad103000_ctx>();
	return _1bc3a0b62__Mutable(__jule_closure_ctx.alloc->_self_, _197721_e, _197736_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad104e7a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _198421_e, jule::Ptr<_1bc26596c_FnCallExpr>* _198436_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad104e7a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad104e7a_ctx>();
	return _1bc3a105d__Variadic(__jule_closure_ctx.alloc->_self_, _198421_e, _198436_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad106e05(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _199121_e, jule::Ptr<_1bc26596c_FnCallExpr>* _199136_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad106e05_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad106e05_ctx>();
	return _1bc3a1459__Reference(__jule_closure_ctx.alloc->_self_, _199121_e, _199136_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad108d80(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _199821_e, jule::Ptr<_1bc26596c_FnCallExpr>* _199836_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad108d80_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad108d80_ctx>();
	return _1bc3a1855__Params(__jule_closure_ctx.alloc->_self_, _199821_e, _199836_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad10b080(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _200521_e, jule::Ptr<_1bc26596c_FnCallExpr>* _200536_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad10b080_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad10b080_ctx>();
	return _1bc3a1c51__Fields(__jule_closure_ctx.alloc->_self_, _200521_e, _200536_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad10d00a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _201221_e, jule::Ptr<_1bc26596c_FnCallExpr>* _201236_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad10d00a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad10d00a_ctx>();
	return _1bc3a214c__Statics(__jule_closure_ctx.alloc->_self_, _201221_e, _201236_fc);;
}

inline jule::Ptr<_1bc48354c_Data> __jule_anon_1ad10ee85(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc48551b_eval>* _201921_e, jule::Ptr<_1bc26596c_FnCallExpr>* _201936_fc, jule::Ptr<_1bc48354c_Data>* ) {
	jule::Ptr<__jule_anon_1ad10ee85_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad10ee85_ctx>();
	return _1bc3a2548__Methods(__jule_closure_ctx.alloc->_self_, _201921_e, _201936_fc);;
}

inline jule::Bool __jule_anon_1ad11b25a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _6415_sema, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>* _6433_generics) {
	jule::Ptr<__jule_anon_1ad11b25a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1ad11b25a_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_self_))._field_genericsD);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1ad11c338:;
		if (it != expr_end) {
			jule::I32 _659_i = it - expr->begin();
			jule::Ptr<_1bc269b19_GenericDecl> _6516_g = *it;
			{
				jule::Ptr<_1bc4b4b11_InsGeneric> _669_generic = (*(__jule_closure_ctx.alloc->_self_))._field_generics[_659_i];;
				if ((((*(_6516_g))._field_Constraint == nullptr) || ((*((*_6516_g.alloc)._field_Constraint))._field_Mask.len() == 0LL))) {
					goto _iter_next_1ad11c338;
				};
				(*(_669_generic))._field_Constraint=({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(0LL, (*((*(_6516_g))._field_Constraint))._field_Mask.len()); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); for (; it < __jule_collection_end; ++it) *it = jule::Ptr<_1bc4b64e7_Type>(nullptr); __jule_collection; });
				{
					auto expr = &((*(*(_6516_g))._field_Constraint.alloc)._field_Mask);
					auto it = expr->begin();
					auto expr_end = expr->end();
					_iter_begin_1ad120171:;
					if (it != expr_end) {
						jule::Ptr<_1bc25c90e_TypeDecl> _7117_mask = *it;
						{
							jule::I32 _726_n = (*((*(_6415_sema))))._field_errors.len();;
							jule::Ptr<_1bc4b64e7_Type> _7310_kind = _1bc412300_buildTypeWithRefers((*(_6415_sema)), &(_7117_mask), jule::Trait((*(_6415_sema)), (jule::Trait::Type*)&_1bc4d634c_Lookup_mptr_data4), (*(_6433_generics)), nullptr);;
							if ((_7310_kind == nullptr)) {
								{
									auto &_match_expr{ (*(_7117_mask))._field_Kind };
									
									if (_match_expr.type == &__jule_any_type78) {
										_case_begin_1ad122052:;
										{
											jule::Ptr<_1bc25d019_IdentTypeDecl> _7712_itd = (*(_7117_mask))._field_Kind.unsafe_cast_ptr<_1bc25d019_IdentTypeDecl>();;
											if ((((*(_7712_itd))._field_Generics.len() == 0LL) && _1bc3a6d99_isBuiltinConstraint(&((*_7712_itd.alloc)._field_Ident)))) {
												_7310_kind=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType((*_7712_itd.alloc)._field_Ident), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
												((*((*(_6415_sema))))._field_errors).mut_slice(0LL, _726_n);;
												goto _julec_label_1ad125671;
											};
										}
									}
									_match_end_1ad121eca:;
								};
								return false;;
							};
							_julec_label_1ad125671:;
							(*_669_generic.alloc)._field_Constraint=jule::append((*_669_generic.alloc)._field_Constraint,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc4b64e7_Type>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _7310_kind; __jule_collection; }));
						}
						_iter_next_1ad120171:;
						++it;
						goto _iter_begin_1ad120171;
					}
					_iter_end_1ad120171:;
				};
			}
			_iter_next_1ad11c338:;
			++it;
			_659_i++;
			goto _iter_begin_1ad11c338;
		}
		_iter_end_1ad11c338:;
	};
	return true;;
}

inline jule::Bool __jule_anon_1c31a9910(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3dcb9e_ImportInfo> _48735_spkg) {
	jule::Ptr<__jule_anon_1c31a9910_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c31a9910_ctx>();
	return ((!(_1bc3d7d86_isImplicitImport(_48735_spkg))) && ((*((*(__jule_closure_ctx.alloc->_48628_pkg))))._field_Path == (*(_48735_spkg))._field_Path));;
}

inline jule::Bool __jule_anon_1bd5c741a(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _83442_sema) {
	jule::Ptr<__jule_anon_1bd5c741a_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1bd5c741a_ctx>();
	jule::Bool __jule_func_result = false;
	__jule_func_result=true;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_82743_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1bd5c844e:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> _83616_p = *it;
			{
				if ((!(_1bc2ecbd0_IsSelf((*(_83616_p))._field_Decl.ptr())))) {
					(*_83616_p.alloc)._field_Type=_1bc416bc8_buildNonGenericType((*(_83442_sema)), &((*((*(*(_83616_p))._field_Decl.alloc)._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
					__jule_func_result=(__jule_func_result && ((*_83616_p.alloc)._field_Type != nullptr));
				};
			}
			_iter_next_1bd5c844e:;
			++it;
			goto _iter_begin_1bd5c844e;
		}
		_iter_end_1bd5c844e:;
	};
	if ((!(_1bc2ee50b_IsVoid((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result=_1bc416bc8_buildNonGenericType((*(_83442_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_82743_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), &(__jule_closure_ctx.alloc->_82811_generics), __jule_closure_ctx.alloc->_82759_ignored);
		__jule_func_result=(__jule_func_result && ((*__jule_closure_ctx.alloc->_82743_f.alloc)._field_Result != nullptr));
	};
	return __jule_func_result;;
}

inline jule::Bool __jule_anon_1c3227197(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _93742_sema) {
	jule::Ptr<__jule_anon_1c3227197_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c3227197_ctx>();
	return __jule_closure_ctx.alloc->_93046_algo(_93742_sema, &(__jule_closure_ctx.alloc->_9357_generics));;
}

inline jule::Bool __jule_anon_1c3229b5b(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc409eeb_sema>* _95037_sema, jule::Slice<jule::Ptr<_1bc4b5705_TypeAlias>>* _95055_generics) {
	jule::Ptr<__jule_anon_1c3229b5b_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c3229b5b_ctx>();
	jule::Bool _9518_ok = true;;
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_94637_f))._field_Params);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c322b113:;
		if (it != expr_end) {
			jule::Ptr<_1bc300ead_ParamIns> _95216_p = *it;
			{
				if (_1bc2ecbd0_IsSelf((*(_95216_p))._field_Decl.ptr())) {
					if (((*(__jule_closure_ctx.alloc->_94637_f))._field_Owner == nullptr)) {
						goto _iter_next_1c322b113;
					};
					if (_1bc2ece66_IsRef((*(_95216_p))._field_Decl)) {
						(*_95216_p.alloc)._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c313b_Sptr>(_1bc4c313b_Sptr{._field_Elem=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_94637_f))._field_Owner, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)})}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)});
					} else {
						(*_95216_p.alloc)._field_Type=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait((*(__jule_closure_ctx.alloc->_94637_f))._field_Owner, (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data0)});
					};
				} else {
					(*(_95216_p))._field_Type=_1bc413950_buildTypeWithGenerics((*(_95037_sema)), &((*((*((*_95216_p.alloc)._field_Decl))._field_TypeSym))._field_Decl), (*(_95055_generics)), (*(__jule_closure_ctx.alloc->_94637_f))._field_Refers);
					if (((*_95216_p.alloc)._field_Type != nullptr)) {
						_1bc418922_checkFnParamKind(__jule_closure_ctx.alloc->_self_, &(_95216_p));
					} else {
						_9518_ok=false;
					};
				};
			}
			_iter_next_1c322b113:;
			++it;
			goto _iter_begin_1c322b113;
		}
		_iter_end_1c322b113:;
	};
	if ((!(_1bc2ee50b_IsVoid((*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Decl.ptr())))) {
		(*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Result=_1bc413950_buildTypeWithGenerics((*(_95037_sema)), &((*((*((*(*(__jule_closure_ctx.alloc->_94637_f))._field_Decl.alloc)._field_Result))._field_TypeSym))._field_Decl), (*(_95055_generics)), (*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Refers);
		_9518_ok=(((*__jule_closure_ctx.alloc->_94637_f.alloc)._field_Result != nullptr) && _9518_ok);
	};
	return _9518_ok;;
}

inline jule::Str __jule_anon1c5e18b44(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _85519_def) {
	{
		auto &_match_expr{ (*(_85519_def)) };
		
		if (_match_expr.type == &__jule_any_type8) {
			_case_begin_1c5e19c44:;
			{
				return (*((*(_85519_def)).cast_ptr<_1bc4b5705_TypeAlias>(&__jule_any_type8)))._field_Ident;;
			}
		}
		else if (_match_expr.type == &__jule_any_type9) {
			_case_begin_1c5e19a68:;
			{
				return (*((*(_85519_def)).cast_ptr<_1bc27d26a_Struct>(&__jule_any_type9)))._field_Ident;;
			}
		}
		else {
			_case_begin_1c5e19628:;
			{
				return jule::Str();;
			}
		}
		_match_end_1c5e195b2:;
	};
}

inline void __jule_anon_1c6622a67(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _19031_file) {
	jule::Ptr<__jule_anon_1c6622a67_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6622a67_ctx>();
	{
		auto expr = &((*((*(_19031_file))))._field_Vars);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c66234b3:;
		if (it != expr_end) {
			jule::Ptr<_1bc42dc12_Var> _19116_v = *it;
			{
				if (_1bcdc5aa4_HasDirective(&((*(_19116_v))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					if ((!(_1c621a5b6_isLive(__jule_closure_ctx.alloc->_self_, &(_19116_v))))) {
						_1c621dab4_pushLive(__jule_closure_ctx.alloc->_self_, _19116_v);
						_1bdc1c07b_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*_19116_v.alloc)._field_Refers));
					};
				};
			}
			_iter_next_1c66234b3:;
			++it;
			goto _iter_begin_1c66234b3;
		}
		_iter_end_1c66234b3:;
	};
	{
		auto expr = &((*((*(_19031_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c662453b:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _19916_f = *it;
			{
				if (_1bcdc5aa4_HasDirective(&((*(_19916_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("export", 6)))) {
					{
						auto expr = &((*_19916_f.alloc)._field_Instances);
						auto it = expr->begin();
						auto expr_end = expr->end();
						_iter_begin_1c6626021:;
						if (it != expr_end) {
							jule::Ptr<_1bc302113_FnIns> _20118_ins = *it;
							{
								if ((!(_1c68cdd89_isLive(__jule_closure_ctx.alloc->_self_, &(_20118_ins))))) {
									_1c68d0077_pushLive(__jule_closure_ctx.alloc->_self_, _20118_ins);
									_1bdc1c07b_setReferencesAsLive(__jule_closure_ctx.alloc->_self_, &((*(_20118_ins))._field_Refers));
								};
							}
							_iter_next_1c6626021:;
							++it;
							goto _iter_begin_1c6626021;
						}
						_iter_end_1c6626021:;
					};
				};
			}
			_iter_next_1c662453b:;
			++it;
			goto _iter_begin_1c662453b;
		}
		_iter_end_1c662453b:;
	};
}

inline void __jule_anon_1c6663008(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _2236_expr) {
	jule::Ptr<__jule_anon_1c6663008_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6663008_ctx>();
	{
		auto &_match_expr{ (*(_2236_expr)) };
		
		if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c6663954:;
			{
				jule::Ptr<_1bc2e3c70_FnCallExprModel> _259_m = (*(_2236_expr)).cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31);;
				if (((*(_259_m))._field_Except != nullptr)) {
					{
						_1bdc20832_optimizeBodyChildExceptional((*(__jule_closure_ctx.alloc->_self_))._field_s, &((*_259_m.alloc)._field_Except));
					};
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c666379a:;
			{
				jule::Ptr<_1bc2e4aa6_AnonFnExprModel> _309_m = (*(_2236_expr)).cast_ptr<_1bc2e4aa6_AnonFnExprModel>(&__jule_any_type103);;
				_1bdc23291_eliminateDeadCodeOfScope((*((*(_309_m))._field_Func))._field_Scope);
			}
		}
		_match_end_1c66638cc:;
	};
}

inline void __jule_anon_1c6909854(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any _22113_m) {
	jule::Ptr<__jule_anon_1c6909854_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6909854_ctx>();
	{
		auto &_match_expr{ _22113_m };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c690ac1d:;
			{
				{
					(*(__jule_closure_ctx.alloc->_2204__step))((*(*(_22113_m.cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114)))._field_Left.alloc)._field_Model);
				};
				{
					(*(__jule_closure_ctx.alloc->_2204__step))((*((*(_22113_m.unsafe_cast_ptr<_1bc2e1c90_BinaryExprModel>()))._field_Right))._field_Model);
				};
			}
		}
		else {
			_case_begin_1c690a2c2:;
			{
				(*__jule_closure_ctx.alloc->_2167_model.alloc)._field_Parts=jule::append((*__jule_closure_ctx.alloc->_2167_model.alloc)._field_Parts,({ auto __jule_collection = jule::Slice<jule::Any>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = _22113_m; __jule_collection; }));
			}
		}
		_match_end_1c690a25b:;
	};
}

inline void __jule_anon_1c669dc25(jule::Ptr<jule::Uintptr> __f_ctx, jule::Any* _77747_m) {
	jule::Ptr<__jule_anon_1c669dc25_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c669dc25_ctx>();
	{
		(*(__jule_closure_ctx.alloc->_self_))._field_model=((jule::Ptr<jule::Any>)(_77747_m));
	};
	{
		auto &_match_expr{ (*(_77747_m)) };
		
		if (_match_expr.type == &__jule_any_type114) {
			_case_begin_1c669e5b6:;
			{
				{
					_1bdaebd4b_binary(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e1c90_BinaryExprModel>(&__jule_any_type114));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type113) {
			_case_begin_1c669e808:;
			{
				{
					_1bdaec104_unary(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e2169_UnaryExprModel>(&__jule_any_type113));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type98) {
			_case_begin_1c669e62c:;
			{
				{
					_1bdaec3ac_structureLit(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e2a3d_StructLitExprModel>(&__jule_any_type98));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type96) {
			_case_begin_1c669e693:;
			{
				{
					_1bdaec665_casting(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e33bd_CastingExprModel>(&__jule_any_type96));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type31) {
			_case_begin_1c669e709:;
			{
				{
					_1bdaed655_funcCall(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e3c70_FnCallExprModel>(&__jule_any_type31));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type118) {
			_case_begin_1c66a0012:;
			{
				{
					_1bdaed39c_lenCall(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e8da7_BuiltinLenCallExprModel>(&__jule_any_type118));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type43) {
			_case_begin_1c66a0078:;
			{
				{
					_1bdaed90d_indexing(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e4600_IndexingExprModel>(&__jule_any_type43));
				};
			}
		}
		else if (_match_expr.type == &__jule_any_type103) {
			_case_begin_1c66a0100:;
			{
				{
					_1bdaedbb6_anonFunc(__jule_closure_ctx.alloc->_self_, (*(_77747_m)).cast_ptr<_1bc2e4aa6_AnonFnExprModel>(&__jule_any_type103));
				};
			}
		}
		_match_end_1c669e4a6:;
	};
}

inline void __jule_anon_1c6ab6b32(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6ab6b32_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6ab6b32_ctx>();
	if (__jule_closure_ctx.alloc->_1017_ref) {
		_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr->begin()", 18));
	} else {
		_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it - expr.begin()", 17));
	};
}

inline void __jule_anon_1c6aba98d(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6aba98d_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6aba98d_ctx>();
	{
		if ((*(*((*(__jule_closure_ctx.alloc->_9336_it))))._field_KeyB.alloc)._field_Reference) {
			_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("it", 2));
		} else {
			_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*it", 3));
		};
	};
}

inline void __jule_anon_1c69993b6(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c69993b6_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c69993b6_ctx>();
	_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg0", 37));
}

inline void __jule_anon_1c6ac9c66(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6ac9c66_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6ac9c66_ctx>();
	_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("*__iterator_result.__jule_result_arg1", 37));
}

inline void __jule_anon_1c6ad3599(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c6ad3599_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6ad3599_ctx>();
	_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("0", 1));
}

inline void __jule_anon_1c674d148(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c674d148_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c674d148_ctx>();
	_1bdeeb39e_write((*(__jule_closure_ctx.alloc->_self_))._field_oc, jule::Str::lit("_match_expr", 11));
}

inline void __jule_anon_1c674e479(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c674e479_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c674e479_ctx>();
	_1bdc3a53e_possibleRefExpr((*((*(__jule_closure_ctx.alloc->_self_))._field_oc))._field_ec, (*(*(__jule_closure_ctx.alloc->_75730_m))._field_Expr.alloc)._field_Model);
}

inline jule::Bool __jule_anon_1c6b30063(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc42dc12_Var> _113367_v) {
	jule::Ptr<__jule_anon_1c6b30063_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6b30063_ctx>();
	return _1bdc33559_captureVarHandling(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_oc), &(__jule_closure_ctx.alloc->_112734_m), &(_113367_v));;
}

inline void __jule_anon_1c7242851(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _83538_pkg) {
	jule::Ptr<__jule_anon_1c7242851_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c7242851_ctx>();
	_1bcdc1143_IterFiles(_83538_pkg, jule::__new_closure<void,jule::Ptr<_1bc305358_SymTab>*>((void*)__jule_anon_1c7243764, jule::Ptr<__jule_anon_1c7243764_ctx>::make(__jule_anon_1c7243764_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c7243764_ctx_handler));
}

inline void __jule_anon_1c7257635(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c7257635_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c7257635_ctx>();
	_1bdeeb39e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("&(", 2));
	_1bdc44955_model((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
	_1bdeeb39e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit(")", 1));
}

inline void __jule_anon_1c7259725(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c7259725_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c7259725_ctx>();
	_1bdc3a53e_possibleRefExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*((*(__jule_closure_ctx.alloc->_92024_v))._field_Value))._field_Data.alloc)._field_Model);
}

inline void __jule_anon_1c725be31(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c725be31_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c725be31_ctx>();
	_1bdeeb39e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("nullptr", 7));
}

inline void __jule_anon_1c725d0ca(jule::Ptr<jule::Uintptr> __f_ctx) {
	jule::Ptr<__jule_anon_1c725d0ca_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c725d0ca_ctx>();
	_1bdc45b21_initExpr((*__jule_closure_ctx.alloc->_self_.alloc)._field_ec, (*(*(__jule_closure_ctx.alloc->_92024_v))._field_TypeSym.alloc)._field_Type);
}

inline void __jule_anon_1c6ee3657(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _118238_pkg) {
	jule::Ptr<__jule_anon_1c6ee3657_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6ee3657_ctx>();
	_1bcdc1143_IterFiles(_118238_pkg, jule::__new_closure<void,jule::Ptr<_1bc305358_SymTab>*>((void*)__jule_anon_1c6ee458c, jule::Ptr<__jule_anon_1c6ee458c_ctx>::make(__jule_anon_1c6ee458c_ctx{._118238_pkg=_118238_pkg,._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c6ee458c_ctx_handler));
}

inline void __jule_anon_1c6ee4acb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _120531_file) {
	jule::Ptr<__jule_anon_1c6ee4acb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6ee4acb_ctx>();
	{
		auto expr = &((*((*(_120531_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ee8dcc:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _120616_f = *it;
			{
				if ((*(_120616_f))._field_Ident.equal("init", 4)) {
					_1bdeebc51_indent(__jule_closure_ctx.alloc->_self_);
					static__1bdc4c485_func(&((*__jule_closure_ctx.alloc->_self_.alloc)._field_Buf), &(_120616_f));
					_1bdeeb39e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("();\n", 4));
				};
			}
			_iter_next_1c6ee8dcc:;
			++it;
			goto _iter_begin_1c6ee8dcc;
		}
		_iter_end_1c6ee8dcc:;
	};
}

inline void __jule_anon_1c7001016(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _124438_pkg) {
	jule::Ptr<__jule_anon_1c7001016_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c7001016_ctx>();
	_1be006b3a_pushInit(__jule_closure_ctx.alloc->_self_, _124438_pkg);
}

inline void __jule_anon_1c6bc9a36(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc2ee055_Fn>* _128136_m) {
	jule::Ptr<__jule_anon_1c6bc9a36_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6bc9a36_ctx>();
	{
		auto expr = &((*(__jule_closure_ctx.alloc->_12777_hash))._field_methods);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6bca581:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _128311_em = *it;
			{
				if ((_128311_em == (*(_128136_m)))) {
					return;;
				};
			}
			_iter_next_1c6bca581:;
			++it;
			goto _iter_begin_1c6bca581;
		}
		_iter_end_1c6bca581:;
	};
	(*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods=jule::append((*__jule_closure_ctx.alloc->_12777_hash.alloc)._field_methods,({ auto __jule_collection = jule::Slice<jule::Ptr<_1bc2ee055_Fn>>::alloc(1, 1); auto it = __jule_collection.begin(); (*it++) = (*(_128136_m)); __jule_collection; }));
}

inline void __jule_anon_1c7003ab8(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3e0421_Package>* _129538_pkg) {
	jule::Ptr<__jule_anon_1c7003ab8_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c7003ab8_ctx>();
	_1bcdc1143_IterFiles(_129538_pkg, jule::__new_closure<void,jule::Ptr<_1bc305358_SymTab>*>((void*)__jule_anon_1c70049cb, jule::Ptr<__jule_anon_1c70049cb_ctx>::make(__jule_anon_1c70049cb_ctx{._self_=__jule_closure_ctx.alloc->_self_}).as<jule::Uintptr>(), __jule_anon_1c70049cb_ctx_handler));
}

inline __jule_tuple_i64__jule_tuple_bool __jule_anon1c6c07b74(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _22856_s, jule::I32 _22864_base) {
	__jule_tuple_i64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1ac58066a_ParseInt(_22856_s, _22864_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LL;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline __jule_tuple_u64__jule_tuple_bool __jule_anon1c6c107d6(jule::Ptr<jule::Uintptr> __f_ctx, jule::Str _23657_s, jule::I32 _23665_base) {
	__jule_tuple_u64__jule_tuple_bool __jule_func_result;
	__jule_func_result.__jule_result_arg0 = 0;
	__jule_func_result.__jule_result_arg1 = false;
	__jule_func_result.__jule_result_arg0 = ({
		auto except = _1ac5801b4_ParseUint(_23657_s, _23665_base, 64LL);
		(except.ok()) ? (except.result) : ({{
			__jule_func_result.__jule_result_arg0 = 0LLU;
			__jule_func_result.__jule_result_arg1 = false;
			return __jule_func_result;;
		} 0;});
	});
	__jule_func_result.__jule_result_arg1 = true;
	return __jule_func_result;;
}

inline jule::Bool __jule_anon1c0c2eca1(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3dcb9e_ImportInfo> _203925_pkg) {
	return (*(_203925_pkg))._field_LinkPath.equal("std/comptime", 12);;
}

inline jule::Bool __jule_anon_1c14b1224(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc3dcb9e_ImportInfo> _473330_imp) {
	jule::Ptr<__jule_anon_1c14b1224_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c14b1224_ctx>();
	return (((*(_473330_imp))._field_Alias == __jule_closure_ctx.alloc->_473238_namespace) && (!(_1bc3d7d86_isImplicitImport(_473330_imp))));;
}

inline void __jule_anon_1c7243764(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _83632_file) {
	jule::Ptr<__jule_anon_1c7243764_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c7243764_ctx>();
	{
		auto expr = &((*((*(_83632_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c72441e3:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _83717_f = *it;
			{
				if (((!((*(_83717_f))._field_Binded)) && ((*_83717_f.alloc)._field_Token != nullptr))) {
					_1bdeed417_pushResult(__jule_closure_ctx.alloc->_self_, &(_83717_f));
					_1be001a8b_funcDecl(__jule_closure_ctx.alloc->_self_, &(_83717_f), false);
				};
			}
			_iter_next_1c72441e3:;
			++it;
			goto _iter_begin_1c72441e3;
		}
		_iter_end_1c72441e3:;
	};
}

inline void __jule_anon_1c6ee458c(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _118332_file) {
	jule::Ptr<__jule_anon_1c6ee458c_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c6ee458c_ctx>();
	{
		auto expr = &((*((*(_118332_file))))._field_Funcs);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c6ee503d:;
		if (it != expr_end) {
			jule::Ptr<_1bc2ee055_Fn> _118417_f = *it;
			{
				if (((!(_1abb454c2_Test)) && _1bcdc5aa4_HasDirective(&((*(_118417_f))._field_Directives), static_cast<jule::Str>(jule::Str::lit("test", 4))))) {
					goto _iter_next_1c6ee503d;
				};
				if (((*(__jule_closure_ctx.alloc->_118238_pkg)) == (*((*((*__jule_closure_ctx.alloc->_self_.alloc)._field_ir))._field_Runtime))._field_Package)) {
					{
						auto &_match_expr{ (*(_118417_f))._field_Ident };
						
						if (_match_expr == jule::Str::lit("_RCAdd", 6) || _match_expr == jule::Str::lit("_RCLoad", 7) || _match_expr == jule::Str::lit("_RCDrop", 7)) {
							_case_begin_1c6ee6a01:;
							{
								goto _iter_next_1c6ee503d;
							}
						}
						_match_end_1c6ee6935:;
					};
				};
				if (((!((*(_118417_f))._field_Binded)) && ((*_118417_f.alloc)._field_Token != nullptr))) {
					_1be0040cc_func(__jule_closure_ctx.alloc->_self_, &(_118417_f));
					_1bdeeb39e_write(__jule_closure_ctx.alloc->_self_, jule::Str::lit("\n\n", 2));
				};
			}
			_iter_next_1c6ee503d:;
			++it;
			goto _iter_begin_1c6ee503d;
		}
		_iter_end_1c6ee503d:;
	};
}

inline void __jule_anon_1c70049cb(jule::Ptr<jule::Uintptr> __f_ctx, jule::Ptr<_1bc305358_SymTab>* _129632_file) {
	jule::Ptr<__jule_anon_1c70049cb_ctx> __jule_closure_ctx = __f_ctx.as<__jule_anon_1c70049cb_ctx>();
	{
		auto expr = &((*((*(_129632_file))))._field_Traits);
		auto it = expr->begin();
		auto expr_end = expr->end();
		_iter_begin_1c700545a:;
		if (it != expr_end) {
			jule::Ptr<_1bc309769_Trait> _129717_t = *it;
			{
				if (((*(_129717_t))._field_Token != nullptr)) {
					_1be0076da_buildTraitHash(__jule_closure_ctx.alloc->_self_, &(_129717_t));
				};
			}
			_iter_next_1c700545a:;
			++it;
			goto _iter_begin_1c700545a;
		}
		_iter_end_1c700545a:;
	};
}

inline void __jule_RCAdd(jule::U32* _5722_p) {
	(*(_5722_p))+=1LLU;
}

inline jule::U32 __jule_RCLoad(jule::U32* _4019_p) {
	return (*(_4019_p));;
}

inline jule::Bool __jule_RCDrop(jule::U32* _7523_p) {
	jule::Bool _772_alive = ((*(_7523_p)) > 1LLU);;
	(*(_7523_p))-=1LLU;
	return _772_alive;;
}

int main(int argc, char *argv[], char *envp[]) {

	_1abb47051_HelpMap = ({ auto __jule_collection = jule::Array<jule::Array<jule::Str,2>,5>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("help", 4); (*it++) = jule::Str::lit("Show help", 9); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("version", 7); (*it++) = jule::Str::lit("Show version", 12); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("tool", 4); (*it++) = jule::Str::lit("Tools for effective Jule", 24); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("julenv", 6); (*it++) = jule::Str::lit("Show information about native jule environment", 46); __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::Str,2>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit("mod", 3); (*it++) = jule::Str::lit("Module management", 17); __jule_collection; }); __jule_collection; });
	_1be0ac42c_OutDir = jule::Str::lit("dist", 4);
	_1be0ac729_OutName = jule::Str::lit("ir.cpp", 6);
	_1be0ac9d2_Out = jule::Str();
	_1c3007d9b_STDIN = 0LLU;
	_1c30081cb_STDOUT = 1LLU;
	_1c30084b7_STDERR = 2LLU;
	_1a952c87e_first = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 240LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 2LLU; (*it++) = 19LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 35LLU; (*it++) = 3LLU; (*it++) = 3LLU; (*it++) = 52LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 4LLU; (*it++) = 68LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; (*it++) = 241LLU; __jule_collection; });
	_1a952d2ca_acceptRanges = ({ auto __jule_collection = jule::Array<_1a952ce34_acceptRange,16>(); auto it = __jule_collection.begin(); const auto __jule_collection_end = __jule_collection.end(); (*it++) = _1a952ce34_acceptRange{._field_lo=128LLU, ._field_hi=191LLU}; (*it++) = _1a952ce34_acceptRange{._field_lo=160LLU, ._field_hi=191LLU}; (*it++) = _1a952ce34_acceptRange{._field_lo=128LLU, ._field_hi=159LLU}; (*it++) = _1a952ce34_acceptRange{._field_lo=144LLU, ._field_hi=191LLU}; (*it++) = _1a952ce34_acceptRange{._field_lo=128LLU, ._field_hi=143LLU}; for (; it < __jule_collection_end; ++it) *it = _1a952ce34_acceptRange{._field_lo=0, ._field_hi=0};__jule_collection; });
	_1a978471d__DE_BRUIJN32_TAB = ({ auto __jule_collection = jule::Array<jule::U8,32>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 28LLU; (*it++) = 2LLU; (*it++) = 29LLU; (*it++) = 14LLU; (*it++) = 24LLU; (*it++) = 3LLU; (*it++) = 30LLU; (*it++) = 22LLU; (*it++) = 20LLU; (*it++) = 15LLU; (*it++) = 25LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 8LLU; (*it++) = 31LLU; (*it++) = 27LLU; (*it++) = 13LLU; (*it++) = 23LLU; (*it++) = 21LLU; (*it++) = 19LLU; (*it++) = 16LLU; (*it++) = 7LLU; (*it++) = 26LLU; (*it++) = 12LLU; (*it++) = 18LLU; (*it++) = 6LLU; (*it++) = 11LLU; (*it++) = 5LLU; (*it++) = 10LLU; (*it++) = 9LLU; __jule_collection; });
	_1a9784d06__DE_BRUIJN64_TAB = ({ auto __jule_collection = jule::Array<jule::U8,64>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 56LLU; (*it++) = 2LLU; (*it++) = 57LLU; (*it++) = 49LLU; (*it++) = 28LLU; (*it++) = 3LLU; (*it++) = 61LLU; (*it++) = 58LLU; (*it++) = 42LLU; (*it++) = 50LLU; (*it++) = 38LLU; (*it++) = 29LLU; (*it++) = 17LLU; (*it++) = 4LLU; (*it++) = 62LLU; (*it++) = 47LLU; (*it++) = 59LLU; (*it++) = 36LLU; (*it++) = 45LLU; (*it++) = 43LLU; (*it++) = 51LLU; (*it++) = 22LLU; (*it++) = 53LLU; (*it++) = 39LLU; (*it++) = 33LLU; (*it++) = 30LLU; (*it++) = 24LLU; (*it++) = 18LLU; (*it++) = 12LLU; (*it++) = 5LLU; (*it++) = 63LLU; (*it++) = 55LLU; (*it++) = 48LLU; (*it++) = 27LLU; (*it++) = 60LLU; (*it++) = 41LLU; (*it++) = 37LLU; (*it++) = 16LLU; (*it++) = 46LLU; (*it++) = 35LLU; (*it++) = 44LLU; (*it++) = 21LLU; (*it++) = 52LLU; (*it++) = 32LLU; (*it++) = 23LLU; (*it++) = 11LLU; (*it++) = 54LLU; (*it++) = 26LLU; (*it++) = 40LLU; (*it++) = 15LLU; (*it++) = 34LLU; (*it++) = 20LLU; (*it++) = 31LLU; (*it++) = 10LLU; (*it++) = 25LLU; (*it++) = 14LLU; (*it++) = 19LLU; (*it++) = 9LLU; (*it++) = 13LLU; (*it++) = 8LLU; (*it++) = 7LLU; (*it++) = 6LLU; __jule_collection; });
	__jule_argc = 0LL;
	__jule_argv = nullptr;
	__jule_envp = nullptr;
	_1a98ebd2a__L = jule::new_ptr<_1abb2a199_RangeTable>(_1abb2a199_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1abb296e8_Range16>::alloc(359, 359); auto it = __jule_collection.begin(); (*it++) = _1abb296e8_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=170LLU, ._field_Hi=181LLU, ._field_Stride=11LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=186LLU, ._field_Hi=192LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=193LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=216LLU, ._field_Hi=246LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=248LLU, ._field_Hi=705LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=710LLU, ._field_Hi=721LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=736LLU, ._field_Hi=740LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=748LLU, ._field_Hi=750LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=880LLU, ._field_Hi=884LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=890LLU, ._field_Hi=893LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=895LLU, ._field_Hi=902LLU, ._field_Stride=7LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=911LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=931LLU, ._field_Hi=1013LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1015LLU, ._field_Hi=1153LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1162LLU, ._field_Hi=1327LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1369LLU, ._field_Hi=1376LLU, ._field_Stride=7LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1377LLU, ._field_Hi=1416LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1488LLU, ._field_Hi=1514LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1519LLU, ._field_Hi=1522LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1568LLU, ._field_Hi=1610LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1646LLU, ._field_Hi=1647LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1649LLU, ._field_Hi=1747LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1749LLU, ._field_Hi=1765LLU, ._field_Stride=16LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1766LLU, ._field_Hi=1774LLU, ._field_Stride=8LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1775LLU, ._field_Hi=1786LLU, ._field_Stride=11LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1787LLU, ._field_Hi=1788LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1791LLU, ._field_Hi=1808LLU, ._field_Stride=17LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1810LLU, ._field_Hi=1839LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1869LLU, ._field_Hi=1957LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1969LLU, ._field_Hi=1994LLU, ._field_Stride=25LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1995LLU, ._field_Hi=2026LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2036LLU, ._field_Hi=2037LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2042LLU, ._field_Hi=2048LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2049LLU, ._field_Hi=2069LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2074LLU, ._field_Hi=2084LLU, ._field_Stride=10LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2088LLU, ._field_Hi=2112LLU, ._field_Stride=24LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2113LLU, ._field_Hi=2136LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2144LLU, ._field_Hi=2154LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2160LLU, ._field_Hi=2183LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2185LLU, ._field_Hi=2190LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2208LLU, ._field_Hi=2249LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2308LLU, ._field_Hi=2361LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2365LLU, ._field_Hi=2384LLU, ._field_Stride=19LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2392LLU, ._field_Hi=2401LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2417LLU, ._field_Hi=2432LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2437LLU, ._field_Hi=2444LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2447LLU, ._field_Hi=2448LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2451LLU, ._field_Hi=2472LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2474LLU, ._field_Hi=2480LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2482LLU, ._field_Hi=2486LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2487LLU, ._field_Hi=2489LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2493LLU, ._field_Hi=2510LLU, ._field_Stride=17LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2524LLU, ._field_Hi=2525LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2527LLU, ._field_Hi=2529LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2544LLU, ._field_Hi=2545LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2556LLU, ._field_Hi=2565LLU, ._field_Stride=9LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2566LLU, ._field_Hi=2570LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2575LLU, ._field_Hi=2576LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2579LLU, ._field_Hi=2600LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2602LLU, ._field_Hi=2608LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2610LLU, ._field_Hi=2611LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2613LLU, ._field_Hi=2614LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2616LLU, ._field_Hi=2617LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2649LLU, ._field_Hi=2652LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2654LLU, ._field_Hi=2674LLU, ._field_Stride=20LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2675LLU, ._field_Hi=2676LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2693LLU, ._field_Hi=2701LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2703LLU, ._field_Hi=2705LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2707LLU, ._field_Hi=2728LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2730LLU, ._field_Hi=2736LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2738LLU, ._field_Hi=2739LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2741LLU, ._field_Hi=2745LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2749LLU, ._field_Hi=2768LLU, ._field_Stride=19LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2784LLU, ._field_Hi=2785LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2809LLU, ._field_Hi=2821LLU, ._field_Stride=12LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2822LLU, ._field_Hi=2828LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2831LLU, ._field_Hi=2832LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2835LLU, ._field_Hi=2856LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2858LLU, ._field_Hi=2864LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2866LLU, ._field_Hi=2867LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2869LLU, ._field_Hi=2873LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2877LLU, ._field_Hi=2908LLU, ._field_Stride=31LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2909LLU, ._field_Hi=2911LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2912LLU, ._field_Hi=2913LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2929LLU, ._field_Hi=2947LLU, ._field_Stride=18LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2949LLU, ._field_Hi=2954LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2958LLU, ._field_Hi=2960LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2962LLU, ._field_Hi=2965LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2969LLU, ._field_Hi=2970LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2972LLU, ._field_Hi=2974LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2975LLU, ._field_Hi=2979LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2980LLU, ._field_Hi=2984LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2985LLU, ._field_Hi=2986LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=2990LLU, ._field_Hi=3001LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3024LLU, ._field_Hi=3077LLU, ._field_Stride=53LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3078LLU, ._field_Hi=3084LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3086LLU, ._field_Hi=3088LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3090LLU, ._field_Hi=3112LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3114LLU, ._field_Hi=3129LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3133LLU, ._field_Hi=3160LLU, ._field_Stride=27LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3161LLU, ._field_Hi=3162LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3165LLU, ._field_Hi=3168LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3169LLU, ._field_Hi=3200LLU, ._field_Stride=31LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3205LLU, ._field_Hi=3212LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3214LLU, ._field_Hi=3216LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3218LLU, ._field_Hi=3240LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3242LLU, ._field_Hi=3251LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3253LLU, ._field_Hi=3257LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3261LLU, ._field_Hi=3293LLU, ._field_Stride=32LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3294LLU, ._field_Hi=3296LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3297LLU, ._field_Hi=3313LLU, ._field_Stride=16LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3314LLU, ._field_Hi=3332LLU, ._field_Stride=18LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3333LLU, ._field_Hi=3340LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3342LLU, ._field_Hi=3344LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3346LLU, ._field_Hi=3386LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3389LLU, ._field_Hi=3406LLU, ._field_Stride=17LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3412LLU, ._field_Hi=3414LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3423LLU, ._field_Hi=3425LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3450LLU, ._field_Hi=3455LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3461LLU, ._field_Hi=3478LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3482LLU, ._field_Hi=3505LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3507LLU, ._field_Hi=3515LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3517LLU, ._field_Hi=3520LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3521LLU, ._field_Hi=3526LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3585LLU, ._field_Hi=3632LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3634LLU, ._field_Hi=3635LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3648LLU, ._field_Hi=3654LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3713LLU, ._field_Hi=3714LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3716LLU, ._field_Hi=3718LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3719LLU, ._field_Hi=3722LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3724LLU, ._field_Hi=3747LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3749LLU, ._field_Hi=3751LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3752LLU, ._field_Hi=3760LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3762LLU, ._field_Hi=3763LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3773LLU, ._field_Hi=3776LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3777LLU, ._field_Hi=3780LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3782LLU, ._field_Hi=3804LLU, ._field_Stride=22LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3805LLU, ._field_Hi=3807LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3840LLU, ._field_Hi=3904LLU, ._field_Stride=64LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3905LLU, ._field_Hi=3911LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3913LLU, ._field_Hi=3948LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=3976LLU, ._field_Hi=3980LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4096LLU, ._field_Hi=4138LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4159LLU, ._field_Hi=4176LLU, ._field_Stride=17LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4177LLU, ._field_Hi=4181LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4186LLU, ._field_Hi=4189LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4193LLU, ._field_Hi=4197LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4198LLU, ._field_Hi=4206LLU, ._field_Stride=8LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4207LLU, ._field_Hi=4208LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4213LLU, ._field_Hi=4225LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4238LLU, ._field_Hi=4256LLU, ._field_Stride=18LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4257LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4348LLU, ._field_Hi=4680LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4682LLU, ._field_Hi=4685LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4688LLU, ._field_Hi=4694LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4696LLU, ._field_Hi=4698LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4699LLU, ._field_Hi=4701LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4704LLU, ._field_Hi=4744LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4746LLU, ._field_Hi=4749LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4752LLU, ._field_Hi=4784LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4786LLU, ._field_Hi=4789LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4792LLU, ._field_Hi=4798LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4800LLU, ._field_Hi=4802LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4803LLU, ._field_Hi=4805LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4808LLU, ._field_Hi=4822LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4824LLU, ._field_Hi=4880LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4882LLU, ._field_Hi=4885LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4888LLU, ._field_Hi=4954LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4992LLU, ._field_Hi=5007LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5121LLU, ._field_Hi=5740LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5743LLU, ._field_Hi=5759LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5761LLU, ._field_Hi=5786LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5792LLU, ._field_Hi=5866LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5873LLU, ._field_Hi=5880LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5888LLU, ._field_Hi=5905LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5919LLU, ._field_Hi=5937LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5952LLU, ._field_Hi=5969LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5984LLU, ._field_Hi=5996LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5998LLU, ._field_Hi=6000LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6016LLU, ._field_Hi=6067LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6103LLU, ._field_Hi=6108LLU, ._field_Stride=5LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6176LLU, ._field_Hi=6264LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6272LLU, ._field_Hi=6276LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6279LLU, ._field_Hi=6312LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6314LLU, ._field_Hi=6320LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6321LLU, ._field_Hi=6389LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6400LLU, ._field_Hi=6430LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6480LLU, ._field_Hi=6509LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6512LLU, ._field_Hi=6516LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6528LLU, ._field_Hi=6571LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6576LLU, ._field_Hi=6601LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6656LLU, ._field_Hi=6678LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6688LLU, ._field_Hi=6740LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6823LLU, ._field_Hi=6917LLU, ._field_Stride=94LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6918LLU, ._field_Hi=6963LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=6981LLU, ._field_Hi=6988LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7043LLU, ._field_Hi=7072LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7086LLU, ._field_Hi=7087LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7098LLU, ._field_Hi=7141LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7168LLU, ._field_Hi=7203LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7245LLU, ._field_Hi=7247LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7258LLU, ._field_Hi=7293LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7296LLU, ._field_Hi=7304LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7401LLU, ._field_Hi=7404LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7406LLU, ._field_Hi=7411LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7413LLU, ._field_Hi=7414LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7418LLU, ._field_Hi=7424LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7425LLU, ._field_Hi=7615LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7680LLU, ._field_Hi=7957LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7968LLU, ._field_Hi=8005LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8016LLU, ._field_Hi=8023LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8032LLU, ._field_Hi=8061LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8064LLU, ._field_Hi=8116LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8118LLU, ._field_Hi=8124LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8126LLU, ._field_Hi=8130LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8131LLU, ._field_Hi=8132LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8134LLU, ._field_Hi=8140LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8144LLU, ._field_Hi=8147LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8150LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8160LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8178LLU, ._field_Hi=8180LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8182LLU, ._field_Hi=8188LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8305LLU, ._field_Hi=8319LLU, ._field_Stride=14LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8336LLU, ._field_Hi=8348LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8458LLU, ._field_Hi=8467LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8495LLU, ._field_Hi=8505LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8508LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8517LLU, ._field_Hi=8521LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8526LLU, ._field_Hi=8579LLU, ._field_Stride=53LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8580LLU, ._field_Hi=11264LLU, ._field_Stride=2684LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11265LLU, ._field_Hi=11492LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11559LLU, ._field_Hi=11565LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11568LLU, ._field_Hi=11623LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11631LLU, ._field_Hi=11648LLU, ._field_Stride=17LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11649LLU, ._field_Hi=11670LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11680LLU, ._field_Hi=11686LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11688LLU, ._field_Hi=11694LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11696LLU, ._field_Hi=11702LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11704LLU, ._field_Hi=11710LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11712LLU, ._field_Hi=11718LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11720LLU, ._field_Hi=11726LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11728LLU, ._field_Hi=11734LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11736LLU, ._field_Hi=11742LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11823LLU, ._field_Hi=12293LLU, ._field_Stride=470LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12294LLU, ._field_Hi=12337LLU, ._field_Stride=43LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12338LLU, ._field_Hi=12341LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12347LLU, ._field_Hi=12348LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12353LLU, ._field_Hi=12438LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12445LLU, ._field_Hi=12447LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12449LLU, ._field_Hi=12538LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12540LLU, ._field_Hi=12543LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12549LLU, ._field_Hi=12591LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12593LLU, ._field_Hi=12686LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12704LLU, ._field_Hi=12735LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=12784LLU, ._field_Hi=12799LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=13312LLU, ._field_Hi=19903LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=19968LLU, ._field_Hi=42124LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42192LLU, ._field_Hi=42237LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42240LLU, ._field_Hi=42508LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42512LLU, ._field_Hi=42527LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42538LLU, ._field_Hi=42539LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42560LLU, ._field_Hi=42606LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42623LLU, ._field_Hi=42653LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42656LLU, ._field_Hi=42725LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42775LLU, ._field_Hi=42783LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42786LLU, ._field_Hi=42888LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42891LLU, ._field_Hi=42954LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42963LLU, ._field_Hi=42965LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42994LLU, ._field_Hi=43009LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43011LLU, ._field_Hi=43013LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43015LLU, ._field_Hi=43018LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43020LLU, ._field_Hi=43042LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43072LLU, ._field_Hi=43123LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43138LLU, ._field_Hi=43187LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43250LLU, ._field_Hi=43255LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43259LLU, ._field_Hi=43261LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43262LLU, ._field_Hi=43274LLU, ._field_Stride=12LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43275LLU, ._field_Hi=43301LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43312LLU, ._field_Hi=43334LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43360LLU, ._field_Hi=43388LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43396LLU, ._field_Hi=43442LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43471LLU, ._field_Hi=43488LLU, ._field_Stride=17LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43489LLU, ._field_Hi=43492LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43494LLU, ._field_Hi=43503LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43514LLU, ._field_Hi=43518LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43520LLU, ._field_Hi=43560LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43584LLU, ._field_Hi=43586LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43588LLU, ._field_Hi=43595LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43616LLU, ._field_Hi=43638LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43642LLU, ._field_Hi=43646LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43647LLU, ._field_Hi=43695LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43697LLU, ._field_Hi=43701LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43702LLU, ._field_Hi=43705LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43706LLU, ._field_Hi=43709LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43712LLU, ._field_Hi=43714LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43739LLU, ._field_Hi=43741LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43744LLU, ._field_Hi=43754LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43762LLU, ._field_Hi=43764LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43777LLU, ._field_Hi=43782LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43785LLU, ._field_Hi=43790LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43793LLU, ._field_Hi=43798LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43808LLU, ._field_Hi=43814LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43816LLU, ._field_Hi=43822LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43824LLU, ._field_Hi=43866LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43868LLU, ._field_Hi=43881LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=43888LLU, ._field_Hi=44002LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=44032LLU, ._field_Hi=55203LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=55216LLU, ._field_Hi=55238LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=55243LLU, ._field_Hi=55291LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=63744LLU, ._field_Hi=64109LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64112LLU, ._field_Hi=64217LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64256LLU, ._field_Hi=64262LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64275LLU, ._field_Hi=64279LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64285LLU, ._field_Hi=64287LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64288LLU, ._field_Hi=64296LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64298LLU, ._field_Hi=64310LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64312LLU, ._field_Hi=64316LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64318LLU, ._field_Hi=64320LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64321LLU, ._field_Hi=64323LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64324LLU, ._field_Hi=64326LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64327LLU, ._field_Hi=64433LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64467LLU, ._field_Hi=64829LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64848LLU, ._field_Hi=64911LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=64914LLU, ._field_Hi=64967LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65008LLU, ._field_Hi=65019LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65136LLU, ._field_Hi=65140LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65142LLU, ._field_Hi=65276LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65382LLU, ._field_Hi=65470LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65474LLU, ._field_Hi=65479LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65482LLU, ._field_Hi=65487LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65490LLU, ._field_Hi=65495LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65498LLU, ._field_Hi=65500LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1abb29c26_Range32>::alloc(264, 264); auto it = __jule_collection.begin(); (*it++) = _1abb29c26_Range32{._field_Lo=65536LLU, ._field_Hi=65547LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=65549LLU, ._field_Hi=65574LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=65576LLU, ._field_Hi=65594LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=65596LLU, ._field_Hi=65597LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=65599LLU, ._field_Hi=65613LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=65616LLU, ._field_Hi=65629LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=65664LLU, ._field_Hi=65786LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66176LLU, ._field_Hi=66204LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66208LLU, ._field_Hi=66256LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66304LLU, ._field_Hi=66335LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66349LLU, ._field_Hi=66368LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66370LLU, ._field_Hi=66377LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66384LLU, ._field_Hi=66421LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66432LLU, ._field_Hi=66461LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66464LLU, ._field_Hi=66499LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66504LLU, ._field_Hi=66511LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66560LLU, ._field_Hi=66717LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66816LLU, ._field_Hi=66855LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66864LLU, ._field_Hi=66915LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67072LLU, ._field_Hi=67382LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67392LLU, ._field_Hi=67413LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67424LLU, ._field_Hi=67431LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67456LLU, ._field_Hi=67461LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67463LLU, ._field_Hi=67504LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67506LLU, ._field_Hi=67514LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67584LLU, ._field_Hi=67589LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67592LLU, ._field_Hi=67594LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67595LLU, ._field_Hi=67637LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67639LLU, ._field_Hi=67640LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67644LLU, ._field_Hi=67647LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67648LLU, ._field_Hi=67669LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67680LLU, ._field_Hi=67702LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67712LLU, ._field_Hi=67742LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67808LLU, ._field_Hi=67826LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67828LLU, ._field_Hi=67829LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67840LLU, ._field_Hi=67861LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67872LLU, ._field_Hi=67897LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=67968LLU, ._field_Hi=68023LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68030LLU, ._field_Hi=68031LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68096LLU, ._field_Hi=68112LLU, ._field_Stride=16LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68113LLU, ._field_Hi=68115LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68117LLU, ._field_Hi=68119LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68121LLU, ._field_Hi=68149LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68192LLU, ._field_Hi=68220LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68224LLU, ._field_Hi=68252LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68288LLU, ._field_Hi=68295LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68297LLU, ._field_Hi=68324LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68352LLU, ._field_Hi=68405LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68416LLU, ._field_Hi=68437LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68448LLU, ._field_Hi=68466LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68480LLU, ._field_Hi=68497LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68608LLU, ._field_Hi=68680LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68864LLU, ._field_Hi=68899LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69248LLU, ._field_Hi=69289LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69296LLU, ._field_Hi=69297LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69376LLU, ._field_Hi=69404LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69415LLU, ._field_Hi=69424LLU, ._field_Stride=9LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69425LLU, ._field_Hi=69445LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69488LLU, ._field_Hi=69505LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69552LLU, ._field_Hi=69572LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69600LLU, ._field_Hi=69622LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69635LLU, ._field_Hi=69687LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69745LLU, ._field_Hi=69746LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69749LLU, ._field_Hi=69763LLU, ._field_Stride=14LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69764LLU, ._field_Hi=69807LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69840LLU, ._field_Hi=69864LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69891LLU, ._field_Hi=69926LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69956LLU, ._field_Hi=69959LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=69968LLU, ._field_Hi=70002LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70006LLU, ._field_Hi=70019LLU, ._field_Stride=13LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70020LLU, ._field_Hi=70066LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70081LLU, ._field_Hi=70084LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70106LLU, ._field_Hi=70108LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70144LLU, ._field_Hi=70161LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70163LLU, ._field_Hi=70187LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70207LLU, ._field_Hi=70208LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70272LLU, ._field_Hi=70278LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70280LLU, ._field_Hi=70282LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70283LLU, ._field_Hi=70285LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70287LLU, ._field_Hi=70301LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70303LLU, ._field_Hi=70312LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70320LLU, ._field_Hi=70366LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70405LLU, ._field_Hi=70412LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70415LLU, ._field_Hi=70416LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70419LLU, ._field_Hi=70440LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70442LLU, ._field_Hi=70448LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70450LLU, ._field_Hi=70451LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70453LLU, ._field_Hi=70457LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70461LLU, ._field_Hi=70480LLU, ._field_Stride=19LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70493LLU, ._field_Hi=70497LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70656LLU, ._field_Hi=70708LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70727LLU, ._field_Hi=70730LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70751LLU, ._field_Hi=70753LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70784LLU, ._field_Hi=70831LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70852LLU, ._field_Hi=70853LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=70855LLU, ._field_Hi=71040LLU, ._field_Stride=185LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71041LLU, ._field_Hi=71086LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71128LLU, ._field_Hi=71131LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71168LLU, ._field_Hi=71215LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71236LLU, ._field_Hi=71296LLU, ._field_Stride=60LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71297LLU, ._field_Hi=71338LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71352LLU, ._field_Hi=71424LLU, ._field_Stride=72LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71425LLU, ._field_Hi=71450LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71488LLU, ._field_Hi=71494LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71680LLU, ._field_Hi=71723LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71840LLU, ._field_Hi=71903LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71935LLU, ._field_Hi=71942LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71945LLU, ._field_Hi=71948LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71949LLU, ._field_Hi=71955LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71957LLU, ._field_Hi=71958LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71960LLU, ._field_Hi=71983LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71999LLU, ._field_Hi=72001LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72096LLU, ._field_Hi=72103LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72106LLU, ._field_Hi=72144LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72161LLU, ._field_Hi=72163LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72192LLU, ._field_Hi=72203LLU, ._field_Stride=11LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72204LLU, ._field_Hi=72242LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72250LLU, ._field_Hi=72272LLU, ._field_Stride=22LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72284LLU, ._field_Hi=72329LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72349LLU, ._field_Hi=72368LLU, ._field_Stride=19LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72369LLU, ._field_Hi=72440LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72704LLU, ._field_Hi=72712LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72714LLU, ._field_Hi=72750LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72768LLU, ._field_Hi=72818LLU, ._field_Stride=50LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72819LLU, ._field_Hi=72847LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72960LLU, ._field_Hi=72966LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72968LLU, ._field_Hi=72969LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=72971LLU, ._field_Hi=73008LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73030LLU, ._field_Hi=73056LLU, ._field_Stride=26LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73057LLU, ._field_Hi=73061LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73063LLU, ._field_Hi=73064LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73066LLU, ._field_Hi=73097LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73112LLU, ._field_Hi=73440LLU, ._field_Stride=328LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73441LLU, ._field_Hi=73458LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73474LLU, ._field_Hi=73476LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73477LLU, ._field_Hi=73488LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73490LLU, ._field_Hi=73523LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73648LLU, ._field_Hi=73728LLU, ._field_Stride=80LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=73729LLU, ._field_Hi=74649LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=74880LLU, ._field_Hi=75075LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=77712LLU, ._field_Hi=77808LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=77824LLU, ._field_Hi=78895LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=78913LLU, ._field_Hi=78918LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=82944LLU, ._field_Hi=83526LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=92160LLU, ._field_Hi=92728LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=92736LLU, ._field_Hi=92766LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=92784LLU, ._field_Hi=92862LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=92880LLU, ._field_Hi=92909LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=92928LLU, ._field_Hi=92975LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=92992LLU, ._field_Hi=92995LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=93027LLU, ._field_Hi=93047LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=93053LLU, ._field_Hi=93071LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=93760LLU, ._field_Hi=93823LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=93952LLU, ._field_Hi=94026LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=94032LLU, ._field_Hi=94099LLU, ._field_Stride=67LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=94100LLU, ._field_Hi=94111LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=94176LLU, ._field_Hi=94177LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=94179LLU, ._field_Hi=94208LLU, ._field_Stride=29LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=94209LLU, ._field_Hi=100343LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=100352LLU, ._field_Hi=101589LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=101632LLU, ._field_Hi=101640LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110576LLU, ._field_Hi=110579LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110581LLU, ._field_Hi=110587LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110589LLU, ._field_Hi=110590LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110592LLU, ._field_Hi=110882LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110898LLU, ._field_Hi=110928LLU, ._field_Stride=30LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110929LLU, ._field_Hi=110930LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110933LLU, ._field_Hi=110948LLU, ._field_Stride=15LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110949LLU, ._field_Hi=110951LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=110960LLU, ._field_Hi=111355LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=113664LLU, ._field_Hi=113770LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=113776LLU, ._field_Hi=113788LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=113792LLU, ._field_Hi=113800LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=113808LLU, ._field_Hi=113817LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119808LLU, ._field_Hi=119892LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119894LLU, ._field_Hi=119964LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119966LLU, ._field_Hi=119967LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119970LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119982LLU, ._field_Hi=119993LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119995LLU, ._field_Hi=119997LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119998LLU, ._field_Hi=120003LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120005LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120094LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120146LLU, ._field_Hi=120485LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120514LLU, ._field_Hi=120538LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120540LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120572LLU, ._field_Hi=120596LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120598LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120630LLU, ._field_Hi=120654LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120656LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120688LLU, ._field_Hi=120712LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120714LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120746LLU, ._field_Hi=120770LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120772LLU, ._field_Hi=120779LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=122624LLU, ._field_Hi=122654LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=122661LLU, ._field_Hi=122666LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=122928LLU, ._field_Hi=122989LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=123136LLU, ._field_Hi=123180LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=123191LLU, ._field_Hi=123197LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=123214LLU, ._field_Hi=123536LLU, ._field_Stride=322LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=123537LLU, ._field_Hi=123565LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=123584LLU, ._field_Hi=123627LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=124112LLU, ._field_Hi=124139LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=124896LLU, ._field_Hi=124902LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=124904LLU, ._field_Hi=124907LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=124909LLU, ._field_Hi=124910LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=124912LLU, ._field_Hi=124926LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=124928LLU, ._field_Hi=125124LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=125184LLU, ._field_Hi=125251LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=125259LLU, ._field_Hi=126464LLU, ._field_Stride=1205LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126465LLU, ._field_Hi=126467LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126469LLU, ._field_Hi=126495LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126497LLU, ._field_Hi=126498LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126500LLU, ._field_Hi=126503LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126505LLU, ._field_Hi=126514LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126516LLU, ._field_Hi=126519LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126521LLU, ._field_Hi=126523LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126530LLU, ._field_Hi=126535LLU, ._field_Stride=5LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126537LLU, ._field_Hi=126541LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126542LLU, ._field_Hi=126543LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126545LLU, ._field_Hi=126546LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126548LLU, ._field_Hi=126551LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126553LLU, ._field_Hi=126561LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126562LLU, ._field_Hi=126564LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126567LLU, ._field_Hi=126570LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126572LLU, ._field_Hi=126578LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126580LLU, ._field_Hi=126583LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126585LLU, ._field_Hi=126588LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126590LLU, ._field_Hi=126592LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126593LLU, ._field_Hi=126601LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126603LLU, ._field_Hi=126619LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126625LLU, ._field_Hi=126627LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126629LLU, ._field_Hi=126633LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=126635LLU, ._field_Hi=126651LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=131072LLU, ._field_Hi=173791LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=173824LLU, ._field_Hi=177977LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=177984LLU, ._field_Hi=178205LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=178208LLU, ._field_Hi=183969LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=183984LLU, ._field_Hi=191456LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=194560LLU, ._field_Hi=195101LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=196608LLU, ._field_Hi=201546LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=201552LLU, ._field_Hi=205743LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=6LL});
	_1a98ecc3d__LU = jule::new_ptr<_1abb2a199_RangeTable>(_1abb2a199_RangeTable{._field_R16=({ auto __jule_collection = jule::Slice<_1abb296e8_Range16>::alloc(109, 109); auto it = __jule_collection.begin(); (*it++) = _1abb296e8_Range16{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=256LLU, ._field_Hi=310LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=313LLU, ._field_Hi=327LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=330LLU, ._field_Hi=376LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=377LLU, ._field_Hi=381LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=385LLU, ._field_Hi=386LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=388LLU, ._field_Hi=390LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=391LLU, ._field_Hi=393LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=394LLU, ._field_Hi=395LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=398LLU, ._field_Hi=401LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=403LLU, ._field_Hi=404LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=406LLU, ._field_Hi=408LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=412LLU, ._field_Hi=413LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=415LLU, ._field_Hi=416LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=418LLU, ._field_Hi=422LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=423LLU, ._field_Hi=425LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=428LLU, ._field_Hi=430LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=431LLU, ._field_Hi=433LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=434LLU, ._field_Hi=435LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=437LLU, ._field_Hi=439LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=440LLU, ._field_Hi=444LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=452LLU, ._field_Hi=461LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=463LLU, ._field_Hi=475LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=478LLU, ._field_Hi=494LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=497LLU, ._field_Hi=500LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=502LLU, ._field_Hi=504LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=506LLU, ._field_Hi=562LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=570LLU, ._field_Hi=571LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=573LLU, ._field_Hi=574LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=577LLU, ._field_Hi=579LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=580LLU, ._field_Hi=582LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=584LLU, ._field_Hi=590LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=880LLU, ._field_Hi=882LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=886LLU, ._field_Hi=895LLU, ._field_Stride=9LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=902LLU, ._field_Hi=904LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=905LLU, ._field_Hi=906LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=908LLU, ._field_Hi=910LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=911LLU, ._field_Hi=913LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=914LLU, ._field_Hi=929LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=975LLU, ._field_Hi=978LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=979LLU, ._field_Hi=980LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=984LLU, ._field_Hi=1006LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1012LLU, ._field_Hi=1015LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1017LLU, ._field_Hi=1018LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1021LLU, ._field_Hi=1071LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1120LLU, ._field_Hi=1152LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1162LLU, ._field_Hi=1216LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1217LLU, ._field_Hi=1229LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1232LLU, ._field_Hi=1326LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=4295LLU, ._field_Hi=4301LLU, ._field_Stride=6LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=5024LLU, ._field_Hi=5109LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7680LLU, ._field_Hi=7828LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7838LLU, ._field_Hi=7934LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8025LLU, ._field_Hi=8031LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8120LLU, ._field_Hi=8123LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8152LLU, ._field_Hi=8155LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8168LLU, ._field_Hi=8172LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8184LLU, ._field_Hi=8187LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8450LLU, ._field_Hi=8455LLU, ._field_Stride=5LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8459LLU, ._field_Hi=8461LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8464LLU, ._field_Hi=8466LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8469LLU, ._field_Hi=8473LLU, ._field_Stride=4LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8474LLU, ._field_Hi=8477LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8484LLU, ._field_Hi=8490LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8491LLU, ._field_Hi=8493LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8496LLU, ._field_Hi=8499LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8510LLU, ._field_Hi=8511LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=8517LLU, ._field_Hi=8579LLU, ._field_Stride=62LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11360LLU, ._field_Hi=11362LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11363LLU, ._field_Hi=11364LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11367LLU, ._field_Hi=11373LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11374LLU, ._field_Hi=11376LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11378LLU, ._field_Hi=11381LLU, ._field_Stride=3LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11390LLU, ._field_Hi=11392LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11394LLU, ._field_Hi=11490LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11499LLU, ._field_Hi=11501LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=11506LLU, ._field_Hi=42560LLU, ._field_Stride=31054LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42562LLU, ._field_Hi=42604LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42624LLU, ._field_Hi=42650LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42786LLU, ._field_Hi=42798LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42802LLU, ._field_Hi=42862LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42873LLU, ._field_Hi=42877LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42878LLU, ._field_Hi=42886LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42891LLU, ._field_Hi=42893LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42896LLU, ._field_Hi=42898LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42902LLU, ._field_Hi=42922LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42923LLU, ._field_Hi=42926LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42928LLU, ._field_Hi=42932LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42934LLU, ._field_Hi=42948LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42949LLU, ._field_Hi=42951LLU, ._field_Stride=1LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42953LLU, ._field_Hi=42960LLU, ._field_Stride=7LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42966LLU, ._field_Hi=42968LLU, ._field_Stride=2LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=42997LLU, ._field_Hi=65313LLU, ._field_Stride=22316LLU}; (*it++) = _1abb296e8_Range16{._field_Lo=65314LLU, ._field_Hi=65338LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_R32=({ auto __jule_collection = jule::Slice<_1abb29c26_Range32>::alloc(40, 40); auto it = __jule_collection.begin(); (*it++) = _1abb29c26_Range32{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119808LLU, ._field_Hi=119833LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119860LLU, ._field_Hi=119885LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119912LLU, ._field_Hi=119937LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119964LLU, ._field_Hi=119966LLU, ._field_Stride=2LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119967LLU, ._field_Hi=119973LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119974LLU, ._field_Hi=119977LLU, ._field_Stride=3LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119978LLU, ._field_Hi=119980LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=119982LLU, ._field_Hi=119989LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120016LLU, ._field_Hi=120041LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120068LLU, ._field_Hi=120069LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120071LLU, ._field_Hi=120074LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120077LLU, ._field_Hi=120084LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120086LLU, ._field_Hi=120092LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120120LLU, ._field_Hi=120121LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120123LLU, ._field_Hi=120126LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120128LLU, ._field_Hi=120132LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120134LLU, ._field_Hi=120138LLU, ._field_Stride=4LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120139LLU, ._field_Hi=120144LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120172LLU, ._field_Hi=120197LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120224LLU, ._field_Hi=120249LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120276LLU, ._field_Hi=120301LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120328LLU, ._field_Hi=120353LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120380LLU, ._field_Hi=120405LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120432LLU, ._field_Hi=120457LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120488LLU, ._field_Hi=120512LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120546LLU, ._field_Hi=120570LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120604LLU, ._field_Hi=120628LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120662LLU, ._field_Hi=120686LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120720LLU, ._field_Hi=120744LLU, ._field_Stride=1LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=120778LLU, ._field_Hi=125184LLU, ._field_Stride=4406LLU}; (*it++) = _1abb29c26_Range32{._field_Lo=125185LLU, ._field_Hi=125217LLU, ._field_Stride=1LLU}; __jule_collection; }), ._field_LatinOffset=3LL});
	_1a9903c22_Letter = _1a98ebd2a__L;
	_1a9909ee2_Upper = _1a98ecc3d__LU;
	_1abb23307__CaseRanges = ({ auto __jule_collection = jule::Slice<_1abb29242_CaseRange>::alloc(328, 328); auto it = __jule_collection.begin(); (*it++) = _1abb29242_CaseRange{._field_Lo=65LLU, ._field_Hi=90LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=97LLU, ._field_Hi=122LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=181LLU, ._field_Hi=181LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 743LL; (*it++) = 0LL; (*it++) = 743LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=192LLU, ._field_Hi=214LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=216LLU, ._field_Hi=222LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=224LLU, ._field_Hi=246LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=248LLU, ._field_Hi=254LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=255LLU, ._field_Hi=255LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 121LL; (*it++) = 0LL; (*it++) = 121LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=256LLU, ._field_Hi=303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=304LLU, ._field_Hi=304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -199LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=305LLU, ._field_Hi=305LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -232LL; (*it++) = 0LL; (*it++) = -232LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=306LLU, ._field_Hi=311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=313LLU, ._field_Hi=328LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=330LLU, ._field_Hi=375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=376LLU, ._field_Hi=376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -121LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=377LLU, ._field_Hi=382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=383LLU, ._field_Hi=383LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -300LL; (*it++) = 0LL; (*it++) = -300LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=384LLU, ._field_Hi=384LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 195LL; (*it++) = 0LL; (*it++) = 195LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=385LLU, ._field_Hi=385LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 210LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=386LLU, ._field_Hi=389LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=390LLU, ._field_Hi=390LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 206LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=391LLU, ._field_Hi=392LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=393LLU, ._field_Hi=394LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=395LLU, ._field_Hi=396LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=398LLU, ._field_Hi=398LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 79LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=399LLU, ._field_Hi=399LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 202LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=400LLU, ._field_Hi=400LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 203LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=401LLU, ._field_Hi=402LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=403LLU, ._field_Hi=403LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 205LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=404LLU, ._field_Hi=404LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 207LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=405LLU, ._field_Hi=405LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 97LL; (*it++) = 0LL; (*it++) = 97LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=406LLU, ._field_Hi=406LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=407LLU, ._field_Hi=407LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 209LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=408LLU, ._field_Hi=409LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=410LLU, ._field_Hi=410LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 163LL; (*it++) = 0LL; (*it++) = 163LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=412LLU, ._field_Hi=412LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 211LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=413LLU, ._field_Hi=413LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 213LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=414LLU, ._field_Hi=414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=415LLU, ._field_Hi=415LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 214LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=416LLU, ._field_Hi=421LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=422LLU, ._field_Hi=422LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=423LLU, ._field_Hi=424LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=425LLU, ._field_Hi=425LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=428LLU, ._field_Hi=429LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=430LLU, ._field_Hi=430LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 218LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=431LLU, ._field_Hi=432LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=433LLU, ._field_Hi=434LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 217LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=435LLU, ._field_Hi=438LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=439LLU, ._field_Hi=439LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 219LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=440LLU, ._field_Hi=441LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=444LLU, ._field_Hi=445LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=447LLU, ._field_Hi=447LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 56LL; (*it++) = 0LL; (*it++) = 56LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=452LLU, ._field_Hi=452LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=453LLU, ._field_Hi=453LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=454LLU, ._field_Hi=454LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=455LLU, ._field_Hi=455LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=456LLU, ._field_Hi=456LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=457LLU, ._field_Hi=457LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=458LLU, ._field_Hi=458LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=459LLU, ._field_Hi=459LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=460LLU, ._field_Hi=460LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=461LLU, ._field_Hi=476LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=477LLU, ._field_Hi=477LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -79LL; (*it++) = 0LL; (*it++) = -79LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=478LLU, ._field_Hi=495LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=497LLU, ._field_Hi=497LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 2LL; (*it++) = 1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=498LLU, ._field_Hi=498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -1LL; (*it++) = 1LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=499LLU, ._field_Hi=499LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -2LL; (*it++) = 0LL; (*it++) = -1LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=500LLU, ._field_Hi=501LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=502LLU, ._field_Hi=502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -97LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=503LLU, ._field_Hi=503LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -56LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=504LLU, ._field_Hi=543LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=544LLU, ._field_Hi=544LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=546LLU, ._field_Hi=563LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=570LLU, ._field_Hi=570LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10795LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=571LLU, ._field_Hi=572LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=573LLU, ._field_Hi=573LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -163LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=574LLU, ._field_Hi=574LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 10792LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=575LLU, ._field_Hi=576LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10815LL; (*it++) = 0LL; (*it++) = 10815LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=577LLU, ._field_Hi=578LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=579LLU, ._field_Hi=579LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -195LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=580LLU, ._field_Hi=580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 69LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=581LLU, ._field_Hi=581LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 71LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=582LLU, ._field_Hi=591LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=592LLU, ._field_Hi=592LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10783LL; (*it++) = 0LL; (*it++) = 10783LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=593LLU, ._field_Hi=593LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10780LL; (*it++) = 0LL; (*it++) = 10780LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=594LLU, ._field_Hi=594LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10782LL; (*it++) = 0LL; (*it++) = 10782LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=595LLU, ._field_Hi=595LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -210LL; (*it++) = 0LL; (*it++) = -210LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=596LLU, ._field_Hi=596LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -206LL; (*it++) = 0LL; (*it++) = -206LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=598LLU, ._field_Hi=599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=601LLU, ._field_Hi=601LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -202LL; (*it++) = 0LL; (*it++) = -202LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=603LLU, ._field_Hi=603LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -203LL; (*it++) = 0LL; (*it++) = -203LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=604LLU, ._field_Hi=604LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42319LL; (*it++) = 0LL; (*it++) = 42319LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=608LLU, ._field_Hi=608LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -205LL; (*it++) = 0LL; (*it++) = -205LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=609LLU, ._field_Hi=609LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42315LL; (*it++) = 0LL; (*it++) = 42315LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=611LLU, ._field_Hi=611LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -207LL; (*it++) = 0LL; (*it++) = -207LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=613LLU, ._field_Hi=613LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42280LL; (*it++) = 0LL; (*it++) = 42280LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=614LLU, ._field_Hi=614LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=616LLU, ._field_Hi=616LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -209LL; (*it++) = 0LL; (*it++) = -209LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=617LLU, ._field_Hi=617LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=618LLU, ._field_Hi=618LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42308LL; (*it++) = 0LL; (*it++) = 42308LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=619LLU, ._field_Hi=619LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10743LL; (*it++) = 0LL; (*it++) = 10743LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=620LLU, ._field_Hi=620LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42305LL; (*it++) = 0LL; (*it++) = 42305LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=623LLU, ._field_Hi=623LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -211LL; (*it++) = 0LL; (*it++) = -211LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=625LLU, ._field_Hi=625LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10749LL; (*it++) = 0LL; (*it++) = 10749LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=626LLU, ._field_Hi=626LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -213LL; (*it++) = 0LL; (*it++) = -213LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=629LLU, ._field_Hi=629LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -214LL; (*it++) = 0LL; (*it++) = -214LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=637LLU, ._field_Hi=637LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 10727LL; (*it++) = 0LL; (*it++) = 10727LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=640LLU, ._field_Hi=640LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=642LLU, ._field_Hi=642LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42307LL; (*it++) = 0LL; (*it++) = 42307LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=643LLU, ._field_Hi=643LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=647LLU, ._field_Hi=647LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42282LL; (*it++) = 0LL; (*it++) = 42282LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=648LLU, ._field_Hi=648LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -218LL; (*it++) = 0LL; (*it++) = -218LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=649LLU, ._field_Hi=649LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -69LL; (*it++) = 0LL; (*it++) = -69LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=650LLU, ._field_Hi=651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -217LL; (*it++) = 0LL; (*it++) = -217LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=652LLU, ._field_Hi=652LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -71LL; (*it++) = 0LL; (*it++) = -71LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=658LLU, ._field_Hi=658LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -219LL; (*it++) = 0LL; (*it++) = -219LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=669LLU, ._field_Hi=669LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42261LL; (*it++) = 0LL; (*it++) = 42261LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=670LLU, ._field_Hi=670LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 42258LL; (*it++) = 0LL; (*it++) = 42258LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=837LLU, ._field_Hi=837LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 84LL; (*it++) = 0LL; (*it++) = 84LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=880LLU, ._field_Hi=883LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=886LLU, ._field_Hi=887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=891LLU, ._field_Hi=893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 130LL; (*it++) = 0LL; (*it++) = 130LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=895LLU, ._field_Hi=895LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 116LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=902LLU, ._field_Hi=902LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=904LLU, ._field_Hi=906LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 37LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=908LLU, ._field_Hi=908LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=910LLU, ._field_Hi=911LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 63LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=913LLU, ._field_Hi=929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=931LLU, ._field_Hi=939LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=940LLU, ._field_Hi=940LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38LL; (*it++) = 0LL; (*it++) = -38LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=941LLU, ._field_Hi=943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -37LL; (*it++) = 0LL; (*it++) = -37LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=945LLU, ._field_Hi=961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=962LLU, ._field_Hi=962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -31LL; (*it++) = 0LL; (*it++) = -31LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=963LLU, ._field_Hi=971LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=972LLU, ._field_Hi=972LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=973LLU, ._field_Hi=974LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -63LL; (*it++) = 0LL; (*it++) = -63LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=975LLU, ._field_Hi=975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=976LLU, ._field_Hi=976LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -62LL; (*it++) = 0LL; (*it++) = -62LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=977LLU, ._field_Hi=977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -57LL; (*it++) = 0LL; (*it++) = -57LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=981LLU, ._field_Hi=981LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -47LL; (*it++) = 0LL; (*it++) = -47LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=982LLU, ._field_Hi=982LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -54LL; (*it++) = 0LL; (*it++) = -54LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=983LLU, ._field_Hi=983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=984LLU, ._field_Hi=1007LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1008LLU, ._field_Hi=1008LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -86LL; (*it++) = 0LL; (*it++) = -86LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1009LLU, ._field_Hi=1009LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1010LLU, ._field_Hi=1010LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1011LLU, ._field_Hi=1011LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -116LL; (*it++) = 0LL; (*it++) = -116LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1012LLU, ._field_Hi=1012LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -60LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1013LLU, ._field_Hi=1013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -96LL; (*it++) = 0LL; (*it++) = -96LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1015LLU, ._field_Hi=1016LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1017LLU, ._field_Hi=1017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1018LLU, ._field_Hi=1019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1021LLU, ._field_Hi=1023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -130LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1024LLU, ._field_Hi=1039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 80LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1040LLU, ._field_Hi=1071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1072LLU, ._field_Hi=1103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1104LLU, ._field_Hi=1119LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -80LL; (*it++) = 0LL; (*it++) = -80LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1120LLU, ._field_Hi=1153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1162LLU, ._field_Hi=1215LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1216LLU, ._field_Hi=1216LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 15LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1217LLU, ._field_Hi=1230LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1231LLU, ._field_Hi=1231LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -15LL; (*it++) = 0LL; (*it++) = -15LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1232LLU, ._field_Hi=1327LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1329LLU, ._field_Hi=1366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=1377LLU, ._field_Hi=1414LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=4256LLU, ._field_Hi=4293LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=4295LLU, ._field_Hi=4295LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=4301LLU, ._field_Hi=4301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 7264LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=4304LLU, ._field_Hi=4346LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=4349LLU, ._field_Hi=4351LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3008LL; (*it++) = 0LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=5024LLU, ._field_Hi=5103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 38864LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=5104LLU, ._field_Hi=5109LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=5112LLU, ._field_Hi=5117LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -8LL; (*it++) = 0LL; (*it++) = -8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7296LLU, ._field_Hi=7296LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6254LL; (*it++) = 0LL; (*it++) = -6254LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7297LLU, ._field_Hi=7297LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6253LL; (*it++) = 0LL; (*it++) = -6253LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7298LLU, ._field_Hi=7298LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6244LL; (*it++) = 0LL; (*it++) = -6244LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7299LLU, ._field_Hi=7300LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6242LL; (*it++) = 0LL; (*it++) = -6242LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7301LLU, ._field_Hi=7301LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6243LL; (*it++) = 0LL; (*it++) = -6243LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7302LLU, ._field_Hi=7302LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6236LL; (*it++) = 0LL; (*it++) = -6236LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7303LLU, ._field_Hi=7303LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -6181LL; (*it++) = 0LL; (*it++) = -6181LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7304LLU, ._field_Hi=7304LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35266LL; (*it++) = 0LL; (*it++) = 35266LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7312LLU, ._field_Hi=7354LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7357LLU, ._field_Hi=7359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3008LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7545LLU, ._field_Hi=7545LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35332LL; (*it++) = 0LL; (*it++) = 35332LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7549LLU, ._field_Hi=7549LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 3814LL; (*it++) = 0LL; (*it++) = 3814LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7566LLU, ._field_Hi=7566LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 35384LL; (*it++) = 0LL; (*it++) = 35384LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7680LLU, ._field_Hi=7829LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7835LLU, ._field_Hi=7835LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -59LL; (*it++) = 0LL; (*it++) = -59LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7838LLU, ._field_Hi=7838LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7615LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7840LLU, ._field_Hi=7935LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7936LLU, ._field_Hi=7943LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7944LLU, ._field_Hi=7951LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7952LLU, ._field_Hi=7957LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7960LLU, ._field_Hi=7965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7968LLU, ._field_Hi=7975LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7976LLU, ._field_Hi=7983LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7984LLU, ._field_Hi=7991LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=7992LLU, ._field_Hi=7999LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8000LLU, ._field_Hi=8005LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8008LLU, ._field_Hi=8013LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8017LLU, ._field_Hi=8017LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8019LLU, ._field_Hi=8019LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8021LLU, ._field_Hi=8021LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8023LLU, ._field_Hi=8023LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8025LLU, ._field_Hi=8025LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8027LLU, ._field_Hi=8027LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8029LLU, ._field_Hi=8029LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8031LLU, ._field_Hi=8031LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8032LLU, ._field_Hi=8039LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8040LLU, ._field_Hi=8047LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8048LLU, ._field_Hi=8049LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 74LL; (*it++) = 0LL; (*it++) = 74LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8050LLU, ._field_Hi=8053LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 86LL; (*it++) = 0LL; (*it++) = 86LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8054LLU, ._field_Hi=8055LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 100LL; (*it++) = 0LL; (*it++) = 100LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8056LLU, ._field_Hi=8057LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 128LL; (*it++) = 0LL; (*it++) = 128LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8058LLU, ._field_Hi=8059LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 112LL; (*it++) = 0LL; (*it++) = 112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8060LLU, ._field_Hi=8061LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 126LL; (*it++) = 0LL; (*it++) = 126LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8064LLU, ._field_Hi=8071LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8072LLU, ._field_Hi=8079LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8080LLU, ._field_Hi=8087LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8088LLU, ._field_Hi=8095LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8096LLU, ._field_Hi=8103LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8104LLU, ._field_Hi=8111LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8112LLU, ._field_Hi=8113LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8115LLU, ._field_Hi=8115LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8120LLU, ._field_Hi=8121LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8122LLU, ._field_Hi=8123LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -74LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8124LLU, ._field_Hi=8124LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8126LLU, ._field_Hi=8126LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7205LL; (*it++) = 0LL; (*it++) = -7205LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8131LLU, ._field_Hi=8131LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8136LLU, ._field_Hi=8139LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -86LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8140LLU, ._field_Hi=8140LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8144LLU, ._field_Hi=8145LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8152LLU, ._field_Hi=8153LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8154LLU, ._field_Hi=8155LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -100LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8160LLU, ._field_Hi=8161LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 8LL; (*it++) = 0LL; (*it++) = 8LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8165LLU, ._field_Hi=8165LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 7LL; (*it++) = 0LL; (*it++) = 7LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8168LLU, ._field_Hi=8169LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8170LLU, ._field_Hi=8171LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -112LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8172LLU, ._field_Hi=8172LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8179LLU, ._field_Hi=8179LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 9LL; (*it++) = 0LL; (*it++) = 9LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8184LLU, ._field_Hi=8185LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -128LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8186LLU, ._field_Hi=8187LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -126LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8188LLU, ._field_Hi=8188LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -9LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8486LLU, ._field_Hi=8486LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -7517LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8490LLU, ._field_Hi=8490LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8383LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8491LLU, ._field_Hi=8491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -8262LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8498LLU, ._field_Hi=8498LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 28LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8526LLU, ._field_Hi=8526LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -28LL; (*it++) = 0LL; (*it++) = -28LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8544LLU, ._field_Hi=8559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 16LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8560LLU, ._field_Hi=8575LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -16LL; (*it++) = 0LL; (*it++) = -16LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=8579LLU, ._field_Hi=8580LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=9398LLU, ._field_Hi=9423LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 26LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=9424LLU, ._field_Hi=9449LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -26LL; (*it++) = 0LL; (*it++) = -26LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11264LLU, ._field_Hi=11311LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11312LLU, ._field_Hi=11359LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -48LL; (*it++) = 0LL; (*it++) = -48LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11360LLU, ._field_Hi=11361LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11362LLU, ._field_Hi=11362LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10743LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11363LLU, ._field_Hi=11363LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -3814LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11364LLU, ._field_Hi=11364LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10727LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11365LLU, ._field_Hi=11365LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10795LL; (*it++) = 0LL; (*it++) = -10795LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11366LLU, ._field_Hi=11366LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -10792LL; (*it++) = 0LL; (*it++) = -10792LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11367LLU, ._field_Hi=11372LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11373LLU, ._field_Hi=11373LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10780LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11374LLU, ._field_Hi=11374LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10749LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11375LLU, ._field_Hi=11375LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10783LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11376LLU, ._field_Hi=11376LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10782LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11378LLU, ._field_Hi=11379LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11381LLU, ._field_Hi=11382LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11390LLU, ._field_Hi=11391LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -10815LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11392LLU, ._field_Hi=11491LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11499LLU, ._field_Hi=11502LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11506LLU, ._field_Hi=11507LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11520LLU, ._field_Hi=11557LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11559LLU, ._field_Hi=11559LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=11565LLU, ._field_Hi=11565LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -7264LL; (*it++) = 0LL; (*it++) = -7264LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42560LLU, ._field_Hi=42605LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42624LLU, ._field_Hi=42651LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42786LLU, ._field_Hi=42799LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42802LLU, ._field_Hi=42863LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42873LLU, ._field_Hi=42876LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42877LLU, ._field_Hi=42877LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35332LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42878LLU, ._field_Hi=42887LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42891LLU, ._field_Hi=42892LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42893LLU, ._field_Hi=42893LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42280LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42896LLU, ._field_Hi=42899LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42900LLU, ._field_Hi=42900LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 48LL; (*it++) = 0LL; (*it++) = 48LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42902LLU, ._field_Hi=42921LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42922LLU, ._field_Hi=42922LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42923LLU, ._field_Hi=42923LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42319LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42924LLU, ._field_Hi=42924LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42315LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42925LLU, ._field_Hi=42925LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42305LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42926LLU, ._field_Hi=42926LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42308LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42928LLU, ._field_Hi=42928LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42258LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42929LLU, ._field_Hi=42929LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42282LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42930LLU, ._field_Hi=42930LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42261LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42931LLU, ._field_Hi=42931LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 928LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42932LLU, ._field_Hi=42947LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42948LLU, ._field_Hi=42948LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -48LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42949LLU, ._field_Hi=42949LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -42307LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42950LLU, ._field_Hi=42950LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = -35384LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42951LLU, ._field_Hi=42954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42960LLU, ._field_Hi=42961LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42966LLU, ._field_Hi=42969LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=42997LLU, ._field_Hi=42998LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 1114112LL; (*it++) = 1114112LL; (*it++) = 1114112LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=43859LLU, ._field_Hi=43859LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -928LL; (*it++) = 0LL; (*it++) = -928LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=43888LLU, ._field_Hi=43967LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -38864LL; (*it++) = 0LL; (*it++) = -38864LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=65313LLU, ._field_Hi=65338LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=65345LLU, ._field_Hi=65370LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66560LLU, ._field_Hi=66599LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66600LLU, ._field_Hi=66639LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66736LLU, ._field_Hi=66771LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 40LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66776LLU, ._field_Hi=66811LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -40LL; (*it++) = 0LL; (*it++) = -40LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66928LLU, ._field_Hi=66938LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66940LLU, ._field_Hi=66954LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66956LLU, ._field_Hi=66962LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66964LLU, ._field_Hi=66965LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 39LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66967LLU, ._field_Hi=66977LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66979LLU, ._field_Hi=66993LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=66995LLU, ._field_Hi=67001LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=67003LLU, ._field_Hi=67004LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -39LL; (*it++) = 0LL; (*it++) = -39LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=68736LLU, ._field_Hi=68786LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 64LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=68800LLU, ._field_Hi=68850LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -64LL; (*it++) = 0LL; (*it++) = -64LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=71840LLU, ._field_Hi=71871LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=71872LLU, ._field_Hi=71903LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=93760LLU, ._field_Hi=93791LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 32LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=93792LLU, ._field_Hi=93823LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -32LL; (*it++) = 0LL; (*it++) = -32LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=125184LLU, ._field_Hi=125217LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = 0LL; (*it++) = 34LL; (*it++) = 0LL; __jule_collection; })}; (*it++) = _1abb29242_CaseRange{._field_Lo=125218LLU, ._field_Hi=125251LLU, ._field_Delta=({ auto __jule_collection = jule::Array<jule::I32,3>(); auto it = __jule_collection.begin(); (*it++) = -34LL; (*it++) = 0LL; (*it++) = -34LL; __jule_collection; })}; __jule_collection; });
	_1abb235e3__PROPERTIES = ({ auto __jule_collection = jule::Array<jule::U8,256>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 144LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 1LLU; (*it++) = 16LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 0LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 130LLU; (*it++) = 130LLU; (*it++) = 136LLU; (*it++) = 132LLU; (*it++) = 224LLU; (*it++) = 130LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 132LLU; (*it++) = 130LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 136LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 160LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 136LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; (*it++) = 192LLU; __jule_collection; });
	_1abb253c5_asciiFold = ({ auto __jule_collection = jule::Array<jule::U16,128>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 1LLU; (*it++) = 2LLU; (*it++) = 3LLU; (*it++) = 4LLU; (*it++) = 5LLU; (*it++) = 6LLU; (*it++) = 7LLU; (*it++) = 8LLU; (*it++) = 9LLU; (*it++) = 10LLU; (*it++) = 11LLU; (*it++) = 12LLU; (*it++) = 13LLU; (*it++) = 14LLU; (*it++) = 15LLU; (*it++) = 16LLU; (*it++) = 17LLU; (*it++) = 18LLU; (*it++) = 19LLU; (*it++) = 20LLU; (*it++) = 21LLU; (*it++) = 22LLU; (*it++) = 23LLU; (*it++) = 24LLU; (*it++) = 25LLU; (*it++) = 26LLU; (*it++) = 27LLU; (*it++) = 28LLU; (*it++) = 29LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 32LLU; (*it++) = 33LLU; (*it++) = 34LLU; (*it++) = 35LLU; (*it++) = 36LLU; (*it++) = 37LLU; (*it++) = 38LLU; (*it++) = 39LLU; (*it++) = 40LLU; (*it++) = 41LLU; (*it++) = 42LLU; (*it++) = 43LLU; (*it++) = 44LLU; (*it++) = 45LLU; (*it++) = 46LLU; (*it++) = 47LLU; (*it++) = 48LLU; (*it++) = 49LLU; (*it++) = 50LLU; (*it++) = 51LLU; (*it++) = 52LLU; (*it++) = 53LLU; (*it++) = 54LLU; (*it++) = 55LLU; (*it++) = 56LLU; (*it++) = 57LLU; (*it++) = 58LLU; (*it++) = 59LLU; (*it++) = 60LLU; (*it++) = 61LLU; (*it++) = 62LLU; (*it++) = 63LLU; (*it++) = 64LLU; (*it++) = 97LLU; (*it++) = 98LLU; (*it++) = 99LLU; (*it++) = 100LLU; (*it++) = 101LLU; (*it++) = 102LLU; (*it++) = 103LLU; (*it++) = 104LLU; (*it++) = 105LLU; (*it++) = 106LLU; (*it++) = 107LLU; (*it++) = 108LLU; (*it++) = 109LLU; (*it++) = 110LLU; (*it++) = 111LLU; (*it++) = 112LLU; (*it++) = 113LLU; (*it++) = 114LLU; (*it++) = 115LLU; (*it++) = 116LLU; (*it++) = 117LLU; (*it++) = 118LLU; (*it++) = 119LLU; (*it++) = 120LLU; (*it++) = 121LLU; (*it++) = 122LLU; (*it++) = 91LLU; (*it++) = 92LLU; (*it++) = 93LLU; (*it++) = 94LLU; (*it++) = 95LLU; (*it++) = 96LLU; (*it++) = 65LLU; (*it++) = 66LLU; (*it++) = 67LLU; (*it++) = 68LLU; (*it++) = 69LLU; (*it++) = 70LLU; (*it++) = 71LLU; (*it++) = 72LLU; (*it++) = 73LLU; (*it++) = 74LLU; (*it++) = 8490LLU; (*it++) = 76LLU; (*it++) = 77LLU; (*it++) = 78LLU; (*it++) = 79LLU; (*it++) = 80LLU; (*it++) = 81LLU; (*it++) = 82LLU; (*it++) = 383LLU; (*it++) = 84LLU; (*it++) = 85LLU; (*it++) = 86LLU; (*it++) = 87LLU; (*it++) = 88LLU; (*it++) = 89LLU; (*it++) = 90LLU; (*it++) = 123LLU; (*it++) = 124LLU; (*it++) = 125LLU; (*it++) = 126LLU; (*it++) = 127LLU; __jule_collection; });
	_1abb256b1_caseOrbit = ({ auto __jule_collection = jule::Slice<_1abb28c47_foldPair>::alloc(88, 88); auto it = __jule_collection.begin(); (*it++) = _1abb28c47_foldPair{._field_from=75LLU, ._field_to=107LLU}; (*it++) = _1abb28c47_foldPair{._field_from=83LLU, ._field_to=115LLU}; (*it++) = _1abb28c47_foldPair{._field_from=107LLU, ._field_to=8490LLU}; (*it++) = _1abb28c47_foldPair{._field_from=115LLU, ._field_to=383LLU}; (*it++) = _1abb28c47_foldPair{._field_from=181LLU, ._field_to=924LLU}; (*it++) = _1abb28c47_foldPair{._field_from=197LLU, ._field_to=229LLU}; (*it++) = _1abb28c47_foldPair{._field_from=223LLU, ._field_to=7838LLU}; (*it++) = _1abb28c47_foldPair{._field_from=229LLU, ._field_to=8491LLU}; (*it++) = _1abb28c47_foldPair{._field_from=304LLU, ._field_to=304LLU}; (*it++) = _1abb28c47_foldPair{._field_from=305LLU, ._field_to=305LLU}; (*it++) = _1abb28c47_foldPair{._field_from=383LLU, ._field_to=83LLU}; (*it++) = _1abb28c47_foldPair{._field_from=452LLU, ._field_to=453LLU}; (*it++) = _1abb28c47_foldPair{._field_from=453LLU, ._field_to=454LLU}; (*it++) = _1abb28c47_foldPair{._field_from=454LLU, ._field_to=452LLU}; (*it++) = _1abb28c47_foldPair{._field_from=455LLU, ._field_to=456LLU}; (*it++) = _1abb28c47_foldPair{._field_from=456LLU, ._field_to=457LLU}; (*it++) = _1abb28c47_foldPair{._field_from=457LLU, ._field_to=455LLU}; (*it++) = _1abb28c47_foldPair{._field_from=458LLU, ._field_to=459LLU}; (*it++) = _1abb28c47_foldPair{._field_from=459LLU, ._field_to=460LLU}; (*it++) = _1abb28c47_foldPair{._field_from=460LLU, ._field_to=458LLU}; (*it++) = _1abb28c47_foldPair{._field_from=497LLU, ._field_to=498LLU}; (*it++) = _1abb28c47_foldPair{._field_from=498LLU, ._field_to=499LLU}; (*it++) = _1abb28c47_foldPair{._field_from=499LLU, ._field_to=497LLU}; (*it++) = _1abb28c47_foldPair{._field_from=837LLU, ._field_to=921LLU}; (*it++) = _1abb28c47_foldPair{._field_from=914LLU, ._field_to=946LLU}; (*it++) = _1abb28c47_foldPair{._field_from=917LLU, ._field_to=949LLU}; (*it++) = _1abb28c47_foldPair{._field_from=920LLU, ._field_to=952LLU}; (*it++) = _1abb28c47_foldPair{._field_from=921LLU, ._field_to=953LLU}; (*it++) = _1abb28c47_foldPair{._field_from=922LLU, ._field_to=954LLU}; (*it++) = _1abb28c47_foldPair{._field_from=924LLU, ._field_to=956LLU}; (*it++) = _1abb28c47_foldPair{._field_from=928LLU, ._field_to=960LLU}; (*it++) = _1abb28c47_foldPair{._field_from=929LLU, ._field_to=961LLU}; (*it++) = _1abb28c47_foldPair{._field_from=931LLU, ._field_to=962LLU}; (*it++) = _1abb28c47_foldPair{._field_from=934LLU, ._field_to=966LLU}; (*it++) = _1abb28c47_foldPair{._field_from=937LLU, ._field_to=969LLU}; (*it++) = _1abb28c47_foldPair{._field_from=946LLU, ._field_to=976LLU}; (*it++) = _1abb28c47_foldPair{._field_from=949LLU, ._field_to=1013LLU}; (*it++) = _1abb28c47_foldPair{._field_from=952LLU, ._field_to=977LLU}; (*it++) = _1abb28c47_foldPair{._field_from=953LLU, ._field_to=8126LLU}; (*it++) = _1abb28c47_foldPair{._field_from=954LLU, ._field_to=1008LLU}; (*it++) = _1abb28c47_foldPair{._field_from=956LLU, ._field_to=181LLU}; (*it++) = _1abb28c47_foldPair{._field_from=960LLU, ._field_to=982LLU}; (*it++) = _1abb28c47_foldPair{._field_from=961LLU, ._field_to=1009LLU}; (*it++) = _1abb28c47_foldPair{._field_from=962LLU, ._field_to=963LLU}; (*it++) = _1abb28c47_foldPair{._field_from=963LLU, ._field_to=931LLU}; (*it++) = _1abb28c47_foldPair{._field_from=966LLU, ._field_to=981LLU}; (*it++) = _1abb28c47_foldPair{._field_from=969LLU, ._field_to=8486LLU}; (*it++) = _1abb28c47_foldPair{._field_from=976LLU, ._field_to=914LLU}; (*it++) = _1abb28c47_foldPair{._field_from=977LLU, ._field_to=1012LLU}; (*it++) = _1abb28c47_foldPair{._field_from=981LLU, ._field_to=934LLU}; (*it++) = _1abb28c47_foldPair{._field_from=982LLU, ._field_to=928LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1008LLU, ._field_to=922LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1009LLU, ._field_to=929LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1012LLU, ._field_to=920LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1013LLU, ._field_to=917LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1042LLU, ._field_to=1074LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1044LLU, ._field_to=1076LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1054LLU, ._field_to=1086LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1057LLU, ._field_to=1089LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1058LLU, ._field_to=1090LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1066LLU, ._field_to=1098LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1074LLU, ._field_to=7296LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1076LLU, ._field_to=7297LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1086LLU, ._field_to=7298LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1089LLU, ._field_to=7299LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1090LLU, ._field_to=7300LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1098LLU, ._field_to=7302LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1122LLU, ._field_to=1123LLU}; (*it++) = _1abb28c47_foldPair{._field_from=1123LLU, ._field_to=7303LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7296LLU, ._field_to=1042LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7297LLU, ._field_to=1044LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7298LLU, ._field_to=1054LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7299LLU, ._field_to=1057LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7300LLU, ._field_to=7301LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7301LLU, ._field_to=1058LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7302LLU, ._field_to=1066LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7303LLU, ._field_to=1122LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7304LLU, ._field_to=42570LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7776LLU, ._field_to=7777LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7777LLU, ._field_to=7835LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7835LLU, ._field_to=7776LLU}; (*it++) = _1abb28c47_foldPair{._field_from=7838LLU, ._field_to=223LLU}; (*it++) = _1abb28c47_foldPair{._field_from=8126LLU, ._field_to=837LLU}; (*it++) = _1abb28c47_foldPair{._field_from=8486LLU, ._field_to=937LLU}; (*it++) = _1abb28c47_foldPair{._field_from=8490LLU, ._field_to=75LLU}; (*it++) = _1abb28c47_foldPair{._field_from=8491LLU, ._field_to=197LLU}; (*it++) = _1abb28c47_foldPair{._field_from=42570LLU, ._field_to=42571LLU}; (*it++) = _1abb28c47_foldPair{._field_from=42571LLU, ._field_to=7304LLU}; __jule_collection; });
	_1a979e2a4_CppHeaderExts = ({ auto __jule_collection = jule::Array<jule::Str,4>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".h", 2); (*it++) = jule::Str::lit(".hpp", 4); (*it++) = jule::Str::lit(".hxx", 4); (*it++) = jule::Str::lit(".hh", 3); __jule_collection; });
	_1a979e392_CppExts = ({ auto __jule_collection = jule::Array<jule::Str,3>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".cpp", 4); (*it++) = jule::Str::lit(".cc", 3); (*it++) = jule::Str::lit(".cxx", 4); __jule_collection; });
	_1a982c673_ObjectiveCppExts = ({ auto __jule_collection = jule::Array<jule::Str,1>(); auto it = __jule_collection.begin(); (*it++) = jule::Str::lit(".mm", 3); __jule_collection; });
	_1abb3dc7e_PathStdlib = jule::Str();
	_1abb3e015_PathExec = jule::Str();
	_1abb3e2bd_PathWd = jule::Str();
	_1abb3e5ba_PathApi = jule::Str();
	_1abb3e873_OS = jule::Str::lit("linux", 5);
	_1abb3eb2b_Arch = jule::Str::lit("i386", 4);
	_1abb435ad_Compiler = jule::Str();
	_1abb449aa_CompilerPath = jule::Str();
	_1abb44bb9_CppStd = jule::Str::lit("cpp17", 5);
	_1abb44e61_Shadowing = false;
	_1abb45219_Transpilation = false;
	_1abb454c2_Test = false;
	_1abb4577a_RC = true;
	_1abb45b43_Safety = true;
	_1abb45d85_Production = false;
	_1ac5793bc_f32info = _1ac579004_floatInfo{._field_mantbits=23LLU, ._field_expbits=8LLU, ._field_bias=-127LL};
	_1ac5796b9_f64info = _1ac579004_floatInfo{._field_mantbits=52LLU, ._field_expbits=11LLU, ._field_bias=-1023LL};
	_1ac5820d9_detailedPowsOfTen = ({ auto __jule_collection = jule::Array<jule::Array<jule::U64,2>,696>(); auto it = __jule_collection.begin(); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1671618768450675795LLU; (*it++) = 18054884314459144840LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1044761730281672372LLU; (*it++) = 11284302696536965525LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5917638181279478369LLU; (*it++) = 14105378370671206906LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16620419763454123769LLU; (*it++) = 17631722963339008632LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10387762352158827356LLU; (*it++) = 11019826852086880395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8373016921771146291LLU; (*it++) = 13774783565108600494LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1242899115359157055LLU; (*it++) = 17218479456385750618LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5388497965526861063LLU; (*it++) = 10761549660241094136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6735622456908576329LLU; (*it++) = 13451937075301367670LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17642900107990496220LLU; (*it++) = 16814921344126709587LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8720969558280366185LLU; (*it++) = 10509325840079193492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10901211947850457732LLU; (*it++) = 13136657300098991865LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238200953240460069LLU; (*it++) = 16420821625123739831LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18316404623416369399LLU; (*it++) = 10263013515702337394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13672133742415685941LLU; (*it++) = 12828766894627921743LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12478481159592219522LLU; (*it++) = 16035958618284902179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5493207715531443249LLU; (*it++) = 10022474136428063862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16089881681269079869LLU; (*it++) = 12528092670535079827LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15500666083158961933LLU; (*it++) = 15660115838168849784LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9687916301974351208LLU; (*it++) = 9787572398855531115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7498209359040551106LLU; (*it++) = 12234465498569413894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 149389661945913074LLU; (*it++) = 15293081873211767368LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 93368538716195671LLU; (*it++) = 9558176170757354605LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4728396691822632493LLU; (*it++) = 11947720213446693256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5910495864778290617LLU; (*it++) = 14934650266808366570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8305745933913819539LLU; (*it++) = 9334156416755229106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1158810380537498616LLU; (*it++) = 11667695520944036383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15283571030954036982LLU; (*it++) = 14584619401180045478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9881091751837770420LLU; (*it++) = 18230774251475056848LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6175682344898606512LLU; (*it++) = 11394233907171910530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16942974967978033949LLU; (*it++) = 14242792383964888162LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11955346673117766628LLU; (*it++) = 17803490479956110203LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5166248661484910190LLU; (*it++) = 11127181549972568877LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11069496845283525642LLU; (*it++) = 13908976937465711096LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13836871056604407053LLU; (*it++) = 17386221171832138870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4036358391950366504LLU; (*it++) = 10866388232395086794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14268820026792733938LLU; (*it++) = 13582985290493858492LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17836025033490917422LLU; (*it++) = 16978731613117323115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8841672636718129437LLU; (*it++) = 10611707258198326947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6440404777470273892LLU; (*it++) = 13264634072747908684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8050505971837842365LLU; (*it++) = 16580792590934885855LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11949095260039733334LLU; (*it++) = 10362995369334303659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10324683056622278764LLU; (*it++) = 12953744211667879574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682481783923072647LLU; (*it++) = 16192180264584849468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11524923151806696212LLU; (*it++) = 10120112665365530917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 571095884476206553LLU; (*it++) = 12650140831706913647LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548927910877421904LLU; (*it++) = 15812676039633642058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13704765962725776594LLU; (*it++) = 9882922524771026286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7907585416552444934LLU; (*it++) = 12353653155963782858LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 661109733835780360LLU; (*it++) = 15442066444954728573LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2719036592861056677LLU; (*it++) = 9651291528096705358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12622167777931096654LLU; (*it++) = 12064114410120881697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1942651667131707105LLU; (*it++) = 15080143012651102122LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5825843310384704845LLU; (*it++) = 9425089382906938826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16505676174835656864LLU; (*it++) = 11781361728633673532LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2185351144835019464LLU; (*it++) = 14726702160792091916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2731688931043774330LLU; (*it++) = 18408377700990114895LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624834609543440812LLU; (*it++) = 11505236063118821809LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15392729280356688919LLU; (*it++) = 14381545078898527261LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5405853545163697437LLU; (*it++) = 17976931348623159077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5684501474941004850LLU; (*it++) = 11235582092889474423LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2493940825248868159LLU; (*it++) = 14044477616111843029LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7729112049988473103LLU; (*it++) = 17555597020139803786LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9442381049670183593LLU; (*it++) = 10972248137587377366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2579604275232953683LLU; (*it++) = 13715310171984221708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3224505344041192104LLU; (*it++) = 17144137714980277135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8932844867666826921LLU; (*it++) = 10715086071862673209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15777742103010921555LLU; (*it++) = 13393857589828341511LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110491610336264040LLU; (*it++) = 16742321987285426889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2526528228819083169LLU; (*it++) = 10463951242053391806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12381532322878629770LLU; (*it++) = 13079939052566739757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1641857348316123500LLU; (*it++) = 16349923815708424697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12555375888766046947LLU; (*it++) = 10218702384817765435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11082533842530170780LLU; (*it++) = 12773377981022206794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4629795266307937667LLU; (*it++) = 15966722476277758493LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5199465050656154994LLU; (*it++) = 9979201547673599058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15722703350174969551LLU; (*it++) = 12474001934591998822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10430007150863936130LLU; (*it++) = 15592502418239998528LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6518754469289960081LLU; (*it++) = 9745314011399999080LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8148443086612450102LLU; (*it++) = 12181642514249998850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 962181821410786819LLU; (*it++) = 15227053142812498563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16742264702877599426LLU; (*it++) = 9516908214257811601LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7092772823314835570LLU; (*it++) = 11896135267822264502LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18089338065998320271LLU; (*it++) = 14870169084777830627LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8999993282035256217LLU; (*it++) = 9293855677986144142LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2026619565689294464LLU; (*it++) = 11617319597482680178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11756646493966393888LLU; (*it++) = 14521649496853350222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5472436080603216552LLU; (*it++) = 18152061871066687778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8031958568804398249LLU; (*it++) = 11345038669416679861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14651634229432885715LLU; (*it++) = 14181298336770849826LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9091170749936331336LLU; (*it++) = 17726622920963562283LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3376138709496513133LLU; (*it++) = 11079139325602226427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18055231442152805128LLU; (*it++) = 13848924157002783033LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8733981247408842698LLU; (*it++) = 17311155196253478792LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5458738279630526686LLU; (*it++) = 10819471997658424245LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11435108867965546262LLU; (*it++) = 13524339997073030306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5070514048102157020LLU; (*it++) = 16905424996341287883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 863228270850154185LLU; (*it++) = 10565890622713304927LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14914093393844856443LLU; (*it++) = 13207363278391631158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9419244705451294746LLU; (*it++) = 16509204097989538948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15110399977761835024LLU; (*it++) = 10318252561243461842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9664627935347517973LLU; (*it++) = 12897815701554327303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7469098900757009562LLU; (*it++) = 16122269626942909129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16197401859041600736LLU; (*it++) = 10076418516839318205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6411694268519837208LLU; (*it++) = 12595523146049147757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12626303854077184414LLU; (*it++) = 15744403932561434696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7891439908798240259LLU; (*it++) = 9840252457850896685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14475985904425188227LLU; (*it++) = 12300315572313620856LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18094982380531485284LLU; (*it++) = 15375394465392026070LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6697677969404790399LLU; (*it++) = 9609621540870016294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17595469498610763806LLU; (*it++) = 12012026926087520367LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17382650854836066854LLU; (*it++) = 15015033657609400459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8558313775058847832LLU; (*it++) = 9384396036005875287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6086206200396171886LLU; (*it++) = 11730495045007344109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12219443768922602761LLU; (*it++) = 14663118806259180136LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15274304711153253452LLU; (*it++) = 18328898507823975170LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14158126462898171311LLU; (*it++) = 11455561567389984481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3862600023340550427LLU; (*it++) = 14319451959237480602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14051622066030463842LLU; (*it++) = 17899314949046850752LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8782263791269039901LLU; (*it++) = 11187071843154281720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10977829739086299876LLU; (*it++) = 13983839803942852150LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4498915137003099037LLU; (*it++) = 17479799754928565188LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12035193997481712706LLU; (*it++) = 10924874846830353242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5820620459997365075LLU; (*it++) = 13656093558537941553LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11887461593424094248LLU; (*it++) = 17070116948172426941LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9735506505103752857LLU; (*it++) = 10668823092607766838LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2946011094524915263LLU; (*it++) = 13336028865759708548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3682513868156144079LLU; (*it++) = 16670036082199635685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4607414176811284001LLU; (*it++) = 10418772551374772303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1147581702586717097LLU; (*it++) = 13023465689218465379LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15269535183515560084LLU; (*it++) = 16279332111523081723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7237616480483531100LLU; (*it++) = 10174582569701926077LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13658706619031801779LLU; (*it++) = 12718228212127407596LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17073383273789752224LLU; (*it++) = 15897785265159259495LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17588393573759676996LLU; (*it++) = 9936115790724537184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3538747893490044629LLU; (*it++) = 12420144738405671481LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9035120885289943691LLU; (*it++) = 15525180923007089351LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12564479580947296663LLU; (*it++) = 9703238076879430844LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15705599476184120828LLU; (*it++) = 12129047596099288555LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15020313326802763131LLU; (*it++) = 15161309495124110694LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4776009810824339053LLU; (*it++) = 9475818434452569184LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5970012263530423816LLU; (*it++) = 11844773043065711480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7462515329413029771LLU; (*it++) = 14805966303832139350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 52386062455755702LLU; (*it++) = 9253728939895087094LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9288854614924470436LLU; (*it++) = 11567161174868858867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6999382250228200141LLU; (*it++) = 14458951468586073584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8749227812785250177LLU; (*it++) = 18073689335732591980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14691639419845557168LLU; (*it++) = 11296055834832869987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13752863256379558556LLU; (*it++) = 14120069793541087484LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17191079070474448196LLU; (*it++) = 17650087241926359355LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8438581409832836170LLU; (*it++) = 11031304526203974597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15159912780718433117LLU; (*it++) = 13789130657754968246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9726518939043265588LLU; (*it++) = 17236413322193710308LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15302446373756816800LLU; (*it++) = 10772758326371068942LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9904685930341245193LLU; (*it++) = 13465947907963836178LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3157485376071780683LLU; (*it++) = 16832434884954795223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8890957387685944783LLU; (*it++) = 10520271803096747014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1890324697752655170LLU; (*it++) = 13150339753870933768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2362905872190818963LLU; (*it++) = 16437924692338667210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6088502188546649756LLU; (*it++) = 10273702932711667006LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16833999772538088003LLU; (*it++) = 12842128665889583757LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7207441660390446292LLU; (*it++) = 16052660832361979697LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16033866083812498692LLU; (*it++) = 10032913020226237310LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10818960567910847557LLU; (*it++) = 12541141275282796638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4300328673033783639LLU; (*it++) = 15676426594103495798LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16522763475928278486LLU; (*it++) = 9797766621314684873LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6818396289628184396LLU; (*it++) = 12247208276643356092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8522995362035230495LLU; (*it++) = 15309010345804195115LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3021029092058325107LLU; (*it++) = 9568131466127621947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17611344420355070096LLU; (*it++) = 11960164332659527433LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8179122470161673908LLU; (*it++) = 14950205415824409292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14335323580705822000LLU; (*it++) = 9343878384890255807LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13307468457454889596LLU; (*it++) = 11679847981112819759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12022649553391224092LLU; (*it++) = 14599809976391024699LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10416625923311642211LLU; (*it++) = 18249762470488780874LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11122077220497164286LLU; (*it++) = 11406101544055488046LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4679224488766679549LLU; (*it++) = 14257626930069360058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15072402647813125244LLU; (*it++) = 17822033662586700072LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420251654883203278LLU; (*it++) = 11138771039116687545LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16387000587031392001LLU; (*it++) = 13923463798895859431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15872064715361852097LLU; (*it++) = 17404329748619824289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3002511419460075705LLU; (*it++) = 10877706092887390181LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8364825292752482535LLU; (*it++) = 13597132616109237726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1232659579085827361LLU; (*it++) = 16996415770136547158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14605470292210805812LLU; (*it++) = 10622759856335341973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4421779809981343554LLU; (*it++) = 13278449820419177467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 915538744049291538LLU; (*it++) = 16598062275523971834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5183897733458195115LLU; (*it++) = 10373788922202482396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6479872166822743894LLU; (*it++) = 12967236152753102995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3488154190101041964LLU; (*it++) = 16209045190941378744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2180096368813151227LLU; (*it++) = 10130653244338361715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16560178516298602746LLU; (*it++) = 12663316555422952143LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16088537126945865529LLU; (*it++) = 15829145694278690179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7749492695127472003LLU; (*it++) = 9893216058924181362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 463493832054564196LLU; (*it++) = 12366520073655226703LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14414425345350368957LLU; (*it++) = 15458150092069033378LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13620701859271368502LLU; (*it++) = 9661343807543145861LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3190819268807046916LLU; (*it++) = 12076679759428932327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17823582141290972357LLU; (*it++) = 15095849699286165408LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11139738838306857723LLU; (*it++) = 9434906062053853380LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13924673547883572154LLU; (*it++) = 11793632577567316725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3570783879572301480LLU; (*it++) = 14742040721959145907LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18298537904747540562LLU; (*it++) = 18427550902448932383LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18354115218108294707LLU; (*it++) = 11517219314030582739LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18330958004207980480LLU; (*it++) = 14396524142538228424LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4466953431550423984LLU; (*it++) = 17995655178172785531LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 486002885505321038LLU; (*it++) = 11247284486357990957LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5219189625309039202LLU; (*it++) = 14059105607947488696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6523987031636299002LLU; (*it++) = 17573882009934360870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17912549950054850588LLU; (*it++) = 10983676256208975543LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17779001419141175331LLU; (*it++) = 13729595320261219429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8388693718644305452LLU; (*it++) = 17161994150326524287LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12160462601793772764LLU; (*it++) = 10726246343954077679LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10588892233814828051LLU; (*it++) = 13407807929942597099LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8624429273841147159LLU; (*it++) = 16759759912428246374LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 778582277723329070LLU; (*it++) = 10474849945267653984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 973227847154161338LLU; (*it++) = 13093562431584567480LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1216534808942701673LLU; (*it++) = 16366953039480709350LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595392310871352257LLU; (*it++) = 10229345649675443343LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13632554370161802418LLU; (*it++) = 12786682062094304179LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12429006944274865118LLU; (*it++) = 15983352577617880224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7768129340171790699LLU; (*it++) = 9989595361011175140LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9710161675214738374LLU; (*it++) = 12486994201263968925LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16749388112445810871LLU; (*it++) = 15608742751579961156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1244995533423855986LLU; (*it++) = 9755464219737475723LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15391302472061983695LLU; (*it++) = 12194330274671844653LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5404070034795315907LLU; (*it++) = 15242912843339805817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14906758817815542202LLU; (*it++) = 9526820527087378635LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14021762503842039848LLU; (*it++) = 11908525658859223294LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8303831092947774002LLU; (*it++) = 14885657073574029118LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 578208414664970847LLU; (*it++) = 9303535670983768199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14557818573613377271LLU; (*it++) = 11629419588729710248LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18197273217016721589LLU; (*it++) = 14536774485912137810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13523219484416126178LLU; (*it++) = 18170968107390172263LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15369541205401160717LLU; (*it++) = 11356855067118857664LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 765182433041899281LLU; (*it++) = 14196068833898572081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5568164059729762005LLU; (*it++) = 17745086042373215101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5785945546544795205LLU; (*it++) = 11090678776483259438LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16455803970035769814LLU; (*it++) = 13863348470604074297LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6734696907262548556LLU; (*it++) = 17329185588255092872LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4209185567039092847LLU; (*it++) = 10830740992659433045LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9873167977226253963LLU; (*it++) = 13538426240824291306LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3118087934678041646LLU; (*it++) = 16923032801030364133LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4254647968387469981LLU; (*it++) = 10576895500643977583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 706623942056949572LLU; (*it++) = 13221119375804971979LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14718337982853350677LLU; (*it++) = 16526399219756214973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11504804248497038125LLU; (*it++) = 10328999512347634358LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5157633273766521849LLU; (*it++) = 12911249390434542948LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6447041592208152311LLU; (*it++) = 16139061738043178685LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6335244004343789146LLU; (*it++) = 10086913586276986678LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17142427042284512241LLU; (*it++) = 12608641982846233347LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16816347784428252397LLU; (*it++) = 15760802478557791684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1286845328412881940LLU; (*it++) = 9850501549098619803LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15443614715798266137LLU; (*it++) = 12313126936373274753LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5469460339465668959LLU; (*it++) = 15391408670466593442LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8030098730593431003LLU; (*it++) = 9619630419041620901LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14649309431669176658LLU; (*it++) = 12024538023802026126LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9088264752731695015LLU; (*it++) = 15030672529752532658LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10291851488884697288LLU; (*it++) = 9394170331095332911LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8253128342678483706LLU; (*it++) = 11742712913869166139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5704724409920716729LLU; (*it++) = 14678391142336457674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16354277549255671720LLU; (*it++) = 18347988927920572092LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 998051431430019017LLU; (*it++) = 11467493079950357558LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470936326142299579LLU; (*it++) = 14334366349937946947LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8476984389250486570LLU; (*it++) = 17917957937422433684LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14521487280136329914LLU; (*it++) = 11198723710889021052LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18151859100170412392LLU; (*it++) = 13998404638611276315LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18078137856785627587LLU; (*it++) = 17498005798264095394LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15910522178918405146LLU; (*it++) = 10936253623915059621LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6053094668365842720LLU; (*it++) = 13670317029893824527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2954682317029915496LLU; (*it++) = 17087896287367280659LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17987577512639554849LLU; (*it++) = 10679935179604550411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872785872372055657LLU; (*it++) = 13349918974505688014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13117610303610293764LLU; (*it++) = 16687398718132110018LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12810192458183821506LLU; (*it++) = 10429624198832568761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2177682517447613171LLU; (*it++) = 13037030248540710952LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2722103146809516464LLU; (*it++) = 16296287810675888690LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6313000485183335694LLU; (*it++) = 10185179881672430431LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3279564588051781713LLU; (*it++) = 12731474852090538039LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17934513790346890853LLU; (*it++) = 15914343565113172548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1985699082112030975LLU; (*it++) = 9946464728195732843LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16317181907922202431LLU; (*it++) = 12433080910244666053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6561419329620589327LLU; (*it++) = 15541351137805832567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11018416108653950185LLU; (*it++) = 9713344461128645354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4549648098962661924LLU; (*it++) = 12141680576410806693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298746142130715309LLU; (*it++) = 15177100720513508366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1825030320404309164LLU; (*it++) = 9485687950320942729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892973918932774359LLU; (*it++) = 11857109937901178411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4004531380238580045LLU; (*it++) = 14821387422376473014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16337890167931276240LLU; (*it++) = 9263367138985295633LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6587304654631931588LLU; (*it++) = 11579208923731619542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17457502855144690293LLU; (*it++) = 14474011154664524427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17210192550503474962LLU; (*it++) = 18092513943330655534LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6144684325637283947LLU; (*it++) = 11307821214581659709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12292541425473992838LLU; (*it++) = 14134776518227074636LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15365676781842491048LLU; (*it++) = 17668470647783843295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16521077016292638761LLU; (*it++) = 11042794154864902059LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16039660251938410547LLU; (*it++) = 13803492693581127574LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10826203278068237376LLU; (*it++) = 17254365866976409468LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989749085647424168LLU; (*it++) = 10783978666860255917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6152128301777116498LLU; (*it++) = 13479973333575319897LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12301846395648783526LLU; (*it++) = 16849966666969149871LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14606183024921571560LLU; (*it++) = 10531229166855718669LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4422670725869800738LLU; (*it++) = 13164036458569648337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10140024425764638826LLU; (*it++) = 16455045573212060421LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8643358275316593218LLU; (*it++) = 10284403483257537763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6192511825718353619LLU; (*it++) = 12855504354071922204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7740639782147942024LLU; (*it++) = 16069380442589902755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2532056854628769813LLU; (*it++) = 10043362776618689222LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12388443105140738074LLU; (*it++) = 12554203470773361527LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10873867862998534689LLU; (*it++) = 15692754338466701909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9102010423587778132LLU; (*it++) = 9807971461541688693LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15989199047912110569LLU; (*it++) = 12259964326927110866LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10763126773035362404LLU; (*it++) = 15324955408658888583LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13644483260788183358LLU; (*it++) = 9578097130411805364LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17055604075985229198LLU; (*it++) = 11972621413014756705LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7484447039699372786LLU; (*it++) = 14965776766268445882LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9289465418239495895LLU; (*it++) = 9353610478917778676LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11611831772799369869LLU; (*it++) = 11692013098647223345LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 679731660717048624LLU; (*it++) = 14615016373309029182LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10073036612751086588LLU; (*it++) = 18268770466636286477LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8601490892183123069LLU; (*it++) = 11417981541647679048LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10751863615228903837LLU; (*it++) = 14272476927059598810LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4216457482181353988LLU; (*it++) = 17840596158824498513LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14164500972431816002LLU; (*it++) = 11150372599265311570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8482254178684994195LLU; (*it++) = 13937965749081639463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5991131704928854840LLU; (*it++) = 17422457186352049329LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15273672361649004035LLU; (*it++) = 10889035741470030830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9868718415206479236LLU; (*it++) = 13611294676837538538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3112525982153323237LLU; (*it++) = 17014118346046923173LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4251171748059520975LLU; (*it++) = 10633823966279326983LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 702278666647013314LLU; (*it++) = 13292279957849158729LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5489534351736154547LLU; (*it++) = 16615349947311448411LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1125115960621402640LLU; (*it++) = 10384593717069655257LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6018080969204141204LLU; (*it++) = 12980742146337069071LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2910915193077788601LLU; (*it++) = 16225927682921336339LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17960223060169475539LLU; (*it++) = 10141204801825835211LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17838592806784456520LLU; (*it++) = 12676506002282294014LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13074868971625794843LLU; (*it++) = 15845632502852867518LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3560107088838733872LLU; (*it++) = 9903520314283042199LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18285191916330581053LLU; (*it++) = 12379400392853802748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4409745821703674700LLU; (*it++) = 15474250491067253436LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11979463175419572495LLU; (*it++) = 9671406556917033397LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1139270913992301907LLU; (*it++) = 12089258196146291747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15259146697772541096LLU; (*it++) = 15111572745182864683LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7231123676894144233LLU; (*it++) = 9444732965739290427LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4427218577690292387LLU; (*it++) = 11805916207174113034LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14757395258967641292LLU; (*it++) = 14757395258967641292LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9223372036854775808LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11529215046068469760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14411518807585587200LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 18014398509481984000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11258999068426240000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14073748835532800000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17592186044416000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10995116277760000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13743895347200000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 17179869184000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10737418240000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13421772800000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16777216000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10485760000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 13107200000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16384000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10240000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12800000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 16000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 10000000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12500000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15625000000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9765625000000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 12207031250000000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 15258789062500000000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 9536743164062500000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 11920928955078125000LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 0LLU; (*it++) = 14901161193847656250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4611686018427387904LLU; (*it++) = 9313225746154785156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5764607523034234880LLU; (*it++) = 11641532182693481445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11817445422220181504LLU; (*it++) = 14551915228366851806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5548434740920451072LLU; (*it++) = 18189894035458564758LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17302829768357445632LLU; (*it++) = 11368683772161602973LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7793479155164643328LLU; (*it++) = 14210854715202003717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14353534962383192064LLU; (*it++) = 17763568394002504646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4359273333062107136LLU; (*it++) = 11102230246251565404LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5449091666327633920LLU; (*it++) = 13877787807814456755LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2199678564482154496LLU; (*it++) = 17347234759768070944LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1374799102801346560LLU; (*it++) = 10842021724855044340LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1718498878501683200LLU; (*it++) = 13552527156068805425LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6759809616554491904LLU; (*it++) = 16940658945086006781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6530724019560251392LLU; (*it++) = 10587911840678754238LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17386777061305090048LLU; (*it++) = 13234889800848442797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7898413271349198848LLU; (*it++) = 16543612251060553497LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16465723340661719040LLU; (*it++) = 10339757656912845935LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15970468157399760896LLU; (*it++) = 12924697071141057419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15351399178322313216LLU; (*it++) = 16155871338926321774LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4982938468024057856LLU; (*it++) = 10097419586828951109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10840359103457460224LLU; (*it++) = 12621774483536188886LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4327076842467049472LLU; (*it++) = 15777218104420236108LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11927795063396681728LLU; (*it++) = 9860761315262647567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10298057810818464256LLU; (*it++) = 12325951644078309459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8260886245095692416LLU; (*it++) = 15407439555097886824LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5163053903184807760LLU; (*it++) = 9629649721936179265LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11065503397408397604LLU; (*it++) = 12037062152420224081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18443565265187884909LLU; (*it++) = 15046327690525280101LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13833071299956122020LLU; (*it++) = 9403954806578300063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12679653106517764621LLU; (*it++) = 11754943508222875079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11237880364719817872LLU; (*it++) = 14693679385278593849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 212292400617608628LLU; (*it++) = 18367099231598242312LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 132682750386005392LLU; (*it++) = 11479437019748901445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4777539456409894645LLU; (*it++) = 14349296274686126806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15195296357367144114LLU; (*it++) = 17936620343357658507LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7191217214140771119LLU; (*it++) = 11210387714598536567LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4377335499248575995LLU; (*it++) = 14012984643248170709LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10083355392488107898LLU; (*it++) = 17516230804060213386LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10913783138732455340LLU; (*it++) = 10947644252537633366LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4418856886560793367LLU; (*it++) = 13684555315672041708LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5523571108200991709LLU; (*it++) = 17105694144590052135LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10369760970266701674LLU; (*it++) = 10691058840368782584LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12962201212833377092LLU; (*it++) = 13363823550460978230LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6979379479186945558LLU; (*it++) = 16704779438076222788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13585484211346616781LLU; (*it++) = 10440487148797639242LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7758483227328495169LLU; (*it++) = 13050608935997049053LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14309790052588006865LLU; (*it++) = 16313261169996311316LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18166990819722280098LLU; (*it++) = 10195788231247694572LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4261994450943298507LLU; (*it++) = 12744735289059618216LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327493063679123134LLU; (*it++) = 15930919111324522770LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7941369183226839863LLU; (*it++) = 9956824444577826731LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5315025460606161924LLU; (*it++) = 12446030555722283414LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15867153862612478214LLU; (*it++) = 15557538194652854267LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7611128154919104931LLU; (*it++) = 9723461371658033917LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14125596212076269068LLU; (*it++) = 12154326714572542396LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17656995265095336336LLU; (*it++) = 15192908393215677995LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8729779031470891258LLU; (*it++) = 9495567745759798747LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6300537770911226168LLU; (*it++) = 11869459682199748434LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17099044250493808518LLU; (*it++) = 14836824602749685542LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6075216638131242420LLU; (*it++) = 9273015376718553464LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7594020797664053025LLU; (*it++) = 11591269220898191830LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 269153960225290473LLU; (*it++) = 14489086526122739788LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 336442450281613091LLU; (*it++) = 18111358157653424735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7127805559067090038LLU; (*it++) = 11319598848533390459LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4298070930406474644LLU; (*it++) = 14149498560666738074LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14595960699862869113LLU; (*it++) = 17686873200833422592LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9122475437414293195LLU; (*it++) = 11054295750520889120LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11403094296767866494LLU; (*it++) = 13817869688151111400LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14253867870959833118LLU; (*it++) = 17272337110188889250LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13520353437777283602LLU; (*it++) = 10795210693868055781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3065383741939440791LLU; (*it++) = 13494013367335069727LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17666787732706464701LLU; (*it++) = 16867516709168837158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6430056314514152534LLU; (*it++) = 10542197943230523224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8037570393142690668LLU; (*it++) = 13177747429038154030LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 823590954573587527LLU; (*it++) = 16472184286297692538LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5126430365035880108LLU; (*it++) = 10295115178936057836LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6408037956294850135LLU; (*it++) = 12868893973670072295LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3398361426941174765LLU; (*it++) = 16086117467087590369LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13653190937906703988LLU; (*it++) = 10053823416929743980LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17066488672383379985LLU; (*it++) = 12567279271162179975LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16721424822051837077LLU; (*it++) = 15709099088952724969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3533361486141316317LLU; (*it++) = 9818186930595453106LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13640073894531421205LLU; (*it++) = 12272733663244316382LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7826720331309500698LLU; (*it++) = 15340917079055395478LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 280014188641050032LLU; (*it++) = 9588073174409622174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9573389772656088348LLU; (*it++) = 11985091468012027717LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16578423234247498339LLU; (*it++) = 14981364335015034646LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5749828502977298558LLU; (*it++) = 9363352709384396654LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16410657665576399005LLU; (*it++) = 11704190886730495817LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6678264026688335045LLU; (*it++) = 14630238608413119772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8347830033360418806LLU; (*it++) = 18287798260516399715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2911550761636567802LLU; (*it++) = 11429873912822749822LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12862810488900485560LLU; (*it++) = 14287342391028437277LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2243455055843443238LLU; (*it++) = 17859177988785546597LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3708002419115845976LLU; (*it++) = 11161986242990966623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 23317005467419566LLU; (*it++) = 13952482803738708279LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13864204312116438170LLU; (*it++) = 17440603504673385348LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17888499731927549664LLU; (*it++) = 10900377190420865842LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13137252628054661272LLU; (*it++) = 13625471488026082303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11809879766640938686LLU; (*it++) = 17031839360032602879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14298703881791668535LLU; (*it++) = 10644899600020376799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13261693833812197764LLU; (*it++) = 13306124500025470999LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11965431273837859301LLU; (*it++) = 16632655625031838749LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9784237555362356015LLU; (*it++) = 10395409765644899218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3006924907348169211LLU; (*it++) = 12994262207056124023LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17593714189467375226LLU; (*it++) = 16242827758820155028LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1772699331562333708LLU; (*it++) = 10151767349262596893LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6827560182880305039LLU; (*it++) = 12689709186578246116LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8534450228600381299LLU; (*it++) = 15862136483222807645LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7639874402088932264LLU; (*it++) = 9913835302014254778LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 326470965756389522LLU; (*it++) = 12392294127517818473LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5019774725622874806LLU; (*it++) = 15490367659397273091LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 831516194300602802LLU; (*it++) = 9681479787123295682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10262767279730529310LLU; (*it++) = 12101849733904119602LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3605087062808385830LLU; (*it++) = 15127312167380149503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9170708441896323000LLU; (*it++) = 9454570104612593439LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6851699533943015846LLU; (*it++) = 11818212630765741799LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3952938399001381903LLU; (*it++) = 14772765788457177249LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13999801545444333449LLU; (*it++) = 9232978617785735780LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17499751931805416812LLU; (*it++) = 11541223272232169725LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8039631859474607303LLU; (*it++) = 14426529090290212157LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14661225842770647033LLU; (*it++) = 18033161362862765196LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18386638188586430203LLU; (*it++) = 11270725851789228247LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18371611717305649850LLU; (*it++) = 14088407314736535309LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9129456591349898601LLU; (*it++) = 17610509143420669137LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17235125415662156385LLU; (*it++) = 11006568214637918210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12320534732722919674LLU; (*it++) = 13758210268297397763LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10788982397476261688LLU; (*it++) = 17197762835371747204LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966486035277439363LLU; (*it++) = 10748601772107342002LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734735507242023396LLU; (*it++) = 13435752215134177503LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8806733365625141341LLU; (*it++) = 16794690268917721879LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12421737381156795194LLU; (*it++) = 10496681418073576174LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6303799689591218185LLU; (*it++) = 13120851772591970218LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17103121648843798539LLU; (*it++) = 16401064715739962772LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1466078993672598279LLU; (*it++) = 10250665447337476733LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6444284760518135752LLU; (*it++) = 12813331809171845916LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8055355950647669691LLU; (*it++) = 16016664761464807395LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2728754459941099604LLU; (*it++) = 10010415475915504622LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12634315111781150314LLU; (*it++) = 12513019344894380777LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1957835834444274180LLU; (*it++) = 15641274181117975972LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10447019433382447170LLU; (*it++) = 9775796363198734982LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3835402254873283155LLU; (*it++) = 12219745453998418728LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4794252818591603944LLU; (*it++) = 15274681817498023410LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7608094030047140369LLU; (*it++) = 9546676135936264631LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4898431519131537557LLU; (*it++) = 11933345169920330789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10734725417341809851LLU; (*it++) = 14916681462400413486LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2097517367411243253LLU; (*it++) = 9322925914000258429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7233582727691441970LLU; (*it++) = 11653657392500323036LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9041978409614302462LLU; (*it++) = 14567071740625403795LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6690786993590490174LLU; (*it++) = 18208839675781754744LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4181741870994056359LLU; (*it++) = 11380524797363596715LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 615491320315182544LLU; (*it++) = 14225655996704495894LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9992736187248753989LLU; (*it++) = 17782069995880619867LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3939617107816777291LLU; (*it++) = 11113793747425387417LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9536207403198359517LLU; (*it++) = 13892242184281734271LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7308573235570561493LLU; (*it++) = 17365302730352167839LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11485387299872682789LLU; (*it++) = 10853314206470104899LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9745048106413465582LLU; (*it++) = 13566642758087631124LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12181310133016831978LLU; (*it++) = 16958303447609538905LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 695789805494438130LLU; (*it++) = 10598939654755961816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 869737256868047663LLU; (*it++) = 13248674568444952270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10310543607939835386LLU; (*it++) = 16560843210556190337LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17973304801030866876LLU; (*it++) = 10350527006597618960LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4019886927579031980LLU; (*it++) = 12938158758247023701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9636544677901177879LLU; (*it++) = 16172698447808779626LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10634526442115624078LLU; (*it++) = 10107936529880487266LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4069786015789754290LLU; (*it++) = 12634920662350609083LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 475546501309804958LLU; (*it++) = 15793650827938261354LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4908902581746016003LLU; (*it++) = 9871031767461413346LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15359500264037295811LLU; (*it++) = 12338789709326766682LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9976003293191843956LLU; (*it++) = 15423487136658458353LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17764217104313372233LLU; (*it++) = 9639679460411536470LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12981899343536939483LLU; (*it++) = 12049599325514420588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16227374179421174354LLU; (*it++) = 15061999156893025735LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17059637889779315827LLU; (*it++) = 9413749473058141084LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2877803288514593168LLU; (*it++) = 11767186841322676356LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3597254110643241460LLU; (*it++) = 14708983551653345445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9108253656731439729LLU; (*it++) = 18386229439566681806LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1080972517029761926LLU; (*it++) = 11491393399729176129LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5962901664714590312LLU; (*it++) = 14364241749661470161LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12065313099320625794LLU; (*it++) = 17955302187076837701LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9846663696289085073LLU; (*it++) = 11222063866923023563LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7696643601933968437LLU; (*it++) = 14027579833653779454LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 397432465562684739LLU; (*it++) = 17534474792067224318LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14083453346258841674LLU; (*it++) = 10959046745042015198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8380944645968776284LLU; (*it++) = 13698808431302518998LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1252808770606194547LLU; (*it++) = 17123510539128148748LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10006377518483647400LLU; (*it++) = 10702194086955092967LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7896285879677171346LLU; (*it++) = 13377742608693866209LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14482043368023852087LLU; (*it++) = 16722178260867332761LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2133748077373825698LLU; (*it++) = 10451361413042082976LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2667185096717282123LLU; (*it++) = 13064201766302603720LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3333981370896602653LLU; (*it++) = 16330252207878254650LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6695424375237764562LLU; (*it++) = 10206407629923909156LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8369280469047205703LLU; (*it++) = 12758009537404886445LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15073286604736395033LLU; (*it++) = 15947511921756108056LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9420804127960246895LLU; (*it++) = 9967194951097567535LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7164319141522920715LLU; (*it++) = 12458993688871959419LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4343712908476262990LLU; (*it++) = 15573742111089949274LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7326506586225052273LLU; (*it++) = 9733588819431218296LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9158133232781315341LLU; (*it++) = 12166986024289022870LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2224294504121868368LLU; (*it++) = 15208732530361278588LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10613556101930943538LLU; (*it++) = 9505457831475799117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17878631145841067327LLU; (*it++) = 11881822289344748896LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3901544858591782542LLU; (*it++) = 14852277861680936121LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13967680582688333849LLU; (*it++) = 9282673663550585075LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12847914709933029407LLU; (*it++) = 11603342079438231344LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16059893387416286759LLU; (*it++) = 14504177599297789180LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1628122660560806833LLU; (*it++) = 18130221999122236476LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10240948699705280078LLU; (*it++) = 11331388749451397797LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17412871893058988002LLU; (*it++) = 14164235936814247246LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12542717829468959195LLU; (*it++) = 17705294921017809058LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12450884661845487401LLU; (*it++) = 11065809325636130661LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1728547772024695539LLU; (*it++) = 13832261657045163327LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15995742770313033136LLU; (*it++) = 17290327071306454158LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5385653213018257806LLU; (*it++) = 10806454419566533849LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11343752534700210161LLU; (*it++) = 13508068024458167311LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9568004649947874797LLU; (*it++) = 16885085030572709139LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3674159897003727796LLU; (*it++) = 10553178144107943212LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4592699871254659745LLU; (*it++) = 13191472680134929015LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1129188820640936778LLU; (*it++) = 16489340850168661269LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3011586022114279438LLU; (*it++) = 10305838031355413293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8376168546070237202LLU; (*it++) = 12882297539194266616LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10470210682587796502LLU; (*it++) = 16102871923992833270LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1932195658189984910LLU; (*it++) = 10064294952495520794LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11638616609592256945LLU; (*it++) = 12580368690619400992LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14548270761990321182LLU; (*it++) = 15725460863274251240LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9092669226243950738LLU; (*it++) = 9828413039546407025LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15977522551232326327LLU; (*it++) = 12285516299433008781LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6136845133758244197LLU; (*it++) = 15356895374291260977LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15364743254667372383LLU; (*it++) = 9598059608932038110LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9982557031479439671LLU; (*it++) = 11997574511165047638LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3254824252494523781LLU; (*it++) = 14996968138956309548LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11257637194663853171LLU; (*it++) = 9373105086847693467LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9460360474902428559LLU; (*it++) = 11716381358559616834LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2602078556773259891LLU; (*it++) = 14645476698199521043LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17087656251248738576LLU; (*it++) = 18306845872749401303LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17597314184671543466LLU; (*it++) = 11441778670468375814LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12773270693984653525LLU; (*it++) = 14302223338085469768LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15966588367480816906LLU; (*it++) = 17877779172606837210LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14590803748102898470LLU; (*it++) = 11173611982879273256LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18238504685128623088LLU; (*it++) = 13967014978599091570LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13574758819556003052LLU; (*it++) = 17458768723248864463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15401753289863583763LLU; (*it++) = 10911730452030540289LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5417133557047315992LLU; (*it++) = 13639663065038175362LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15994788983163920798LLU; (*it++) = 17049578831297719202LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14608429132904838403LLU; (*it++) = 10655986769561074501LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4425478360848884291LLU; (*it++) = 13319983461951343127LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 920161932633717460LLU; (*it++) = 16649979327439178909LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2880944217109767365LLU; (*it++) = 10406237079649486818LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12824552308241985014LLU; (*it++) = 13007796349561858522LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6807318348447705459LLU; (*it++) = 16259745436952323153LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15783789013848285672LLU; (*it++) = 10162340898095201970LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10506364230455581282LLU; (*it++) = 12702926122619002463LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8521269269642088699LLU; (*it++) = 15878657653273753079LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12243322321167387293LLU; (*it++) = 9924161033296095674LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6080780864604458308LLU; (*it++) = 12405201291620119593LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12212662099182960789LLU; (*it++) = 15506501614525149491LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5327070802775656541LLU; (*it++) = 9691563509078218432LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6658838503469570676LLU; (*it++) = 12114454386347773040LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8323548129336963345LLU; (*it++) = 15143067982934716300LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14425589617690377899LLU; (*it++) = 9464417489334197687LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13420301003685584469LLU; (*it++) = 11830521861667747109LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2940318199324816875LLU; (*it++) = 14788152327084683887LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8755227902219092403LLU; (*it++) = 9242595204427927429LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15555720896201253407LLU; (*it++) = 11553244005534909286LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10221279083396790951LLU; (*it++) = 14441555006918636608LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12776598854245988689LLU; (*it++) = 18051943758648295760LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7985374283903742931LLU; (*it++) = 11282464849155184850LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 758345818024902856LLU; (*it++) = 14103081061443981063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14782990327813292282LLU; (*it++) = 17628851326804976328LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9239368954883307676LLU; (*it++) = 11018032079253110205LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16160897212031522499LLU; (*it++) = 13772540099066387756LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1754377441329851508LLU; (*it++) = 17215675123832984696LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1096485900831157192LLU; (*it++) = 10759796952395615435LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15205665431321110202LLU; (*it++) = 13449746190494519293LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5172023733869224041LLU; (*it++) = 16812182738118149117LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5538357842881958977LLU; (*it++) = 10507614211323843198LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16146319340457224530LLU; (*it++) = 13134517764154803997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6347841120289366950LLU; (*it++) = 16418147205193504997LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6273243709394548296LLU; (*it++) = 10261342003245940623LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 3229868618315797466LLU; (*it++) = 12826677504057425779LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17872393828176910545LLU; (*it++) = 16033346880071782223LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 18087775170251650946LLU; (*it++) = 10020841800044863889LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8774660907532399971LLU; (*it++) = 12526052250056079862LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1744954097560724156LLU; (*it++) = 15657565312570099828LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10313968347830228405LLU; (*it++) = 9785978320356312392LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12892460434787785506LLU; (*it++) = 12232472900445390490LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6892203506629956075LLU; (*it++) = 15290591125556738113LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15836842237712192307LLU; (*it++) = 9556619453472961320LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 1349308723430688768LLU; (*it++) = 11945774316841201651LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 15521693959570524672LLU; (*it++) = 14932217896051502063LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16618587752372659776LLU; (*it++) = 9332636185032188789LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6938176635183661008LLU; (*it++) = 11665795231290235987LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 4061034775552188356LLU; (*it++) = 14582244039112794984LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5076293469440235445LLU; (*it++) = 18227805048890993730LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7784369436827535057LLU; (*it++) = 11392378155556871081LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14342147814461806725LLU; (*it++) = 14240472694446088851LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13315998749649870503LLU; (*it++) = 17800590868057611064LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8322499218531169064LLU; (*it++) = 11125369292536006915LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5791438004736573426LLU; (*it++) = 13906711615670008644LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7239297505920716783LLU; (*it++) = 17383389519587510805LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 6830403950414141941LLU; (*it++) = 10864618449742194253LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13149690956445065330LLU; (*it++) = 13580773062177742816LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16437113695556331663LLU; (*it++) = 16975966327722178520LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10273196059722707289LLU; (*it++) = 10609978954826361575LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8229809056225996208LLU; (*it++) = 13262473693532951969LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 14898947338709883164LLU; (*it++) = 16578092116916189961LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 2394313059052595121LLU; (*it++) = 10361307573072618726LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 12216263360670519709LLU; (*it++) = 12951634466340773407LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 10658643182410761733LLU; (*it++) = 16189543082925966759LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 13579181016647807939LLU; (*it++) = 10118464426828729224LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 16973976270809759924LLU; (*it++) = 12648080533535911530LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 11994098301657424097LLU; (*it++) = 15810100666919889413LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9802154447749584012LLU; (*it++) = 9881312916824930883LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 7641007041259592112LLU; (*it++) = 12351641146031163604LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 9551258801574490140LLU; (*it++) = 15439551432538954505LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 17498751797052526097LLU; (*it++) = 9649719645336846565LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 8038381691033493909LLU; (*it++) = 12062149556671058207LLU; __jule_collection; }); (*it++) = ({ auto __jule_collection = jule::Array<jule::U64,2>(); auto it = __jule_collection.begin(); (*it++) = 5436291095364479483LLU; (*it++) = 15077686945838822759LLU; __jule_collection; }); __jule_collection; });
	_1ac583d44_powtab = ({ auto __jule_collection = jule::Slice<jule::I32>::alloc(9, 9); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 3LL; (*it++) = 6LL; (*it++) = 9LL; (*it++) = 13LL; (*it++) = 16LL; (*it++) = 19LL; (*it++) = 23LL; (*it++) = 26LL; __jule_collection; });
	_1ac584905_f64pow10 = ({ auto __jule_collection = jule::Slice<jule::F64>::alloc(23, 23); auto it = __jule_collection.begin(); (*it++) = 1LL; (*it++) = 10LL; (*it++) = 100LL; (*it++) = 1000LL; (*it++) = 10000LL; (*it++) = 100000LL; (*it++) = 1000000LL; (*it++) = 10000000LL; (*it++) = 100000000LL; (*it++) = 1000000000LL; (*it++) = 10000000000LL; (*it++) = 100000000000LL; (*it++) = 1000000000000LL; (*it++) = 10000000000000LL; (*it++) = 100000000000000LL; (*it++) = 1000000000000000LL; (*it++) = 10000000000000000LL; (*it++) = 100000000000000000LL; (*it++) = 1000000000000000000LL; (*it++) = 10000000000000000000LLU; (*it++) = 100000000000000000000.0; (*it++) = 1000000000000000000000.0; (*it++) = 10000000000000000000000.0; __jule_collection; });
	_1ac584c35_f32pow10 = ({ auto __jule_collection = jule::Slice<jule::F32>::alloc(11, 11); auto it = __jule_collection.begin(); (*it++) = 1.0f; (*it++) = 10.0f; (*it++) = 100.0f; (*it++) = 1000.0f; (*it++) = 10000.0f; (*it++) = 100000.0f; (*it++) = 1000000.0f; (*it++) = 10000000.0f; (*it++) = 100000000.0f; (*it++) = 1000000000.0f; (*it++) = 10000000000.0f; __jule_collection; });
	_1ac587e36_u64pow10 = ({ auto __jule_collection = jule::Array<jule::U64,20>(); auto it = __jule_collection.begin(); (*it++) = 1LLU; (*it++) = 10LLU; (*it++) = 100LLU; (*it++) = 1000LLU; (*it++) = 10000LLU; (*it++) = 100000LLU; (*it++) = 1000000LLU; (*it++) = 10000000LLU; (*it++) = 100000000LLU; (*it++) = 1000000000LLU; (*it++) = 10000000000LLU; (*it++) = 100000000000LLU; (*it++) = 1000000000000LLU; (*it++) = 10000000000000LLU; (*it++) = 100000000000000LLU; (*it++) = 1000000000000000LLU; (*it++) = 10000000000000000LLU; (*it++) = 100000000000000000LLU; (*it++) = 1000000000000000000LLU; (*it++) = 10000000000000000000LLU; __jule_collection; });
	_1ac591e62_leftCheats = ({ auto __jule_collection = jule::Slice<_1ac591a33_leftCheat>::alloc(61, 61); auto it = __jule_collection.begin(); (*it++) = _1ac591a33_leftCheat{._field_delta=0LL, ._field_cutoff=jule::Str()}; (*it++) = _1ac591a33_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("5", 1)}; (*it++) = _1ac591a33_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("25", 2)}; (*it++) = _1ac591a33_leftCheat{._field_delta=1LL, ._field_cutoff=jule::Str::lit("125", 3)}; (*it++) = _1ac591a33_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("625", 3)}; (*it++) = _1ac591a33_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("3125", 4)}; (*it++) = _1ac591a33_leftCheat{._field_delta=2LL, ._field_cutoff=jule::Str::lit("15625", 5)}; (*it++) = _1ac591a33_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("78125", 5)}; (*it++) = _1ac591a33_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("390625", 6)}; (*it++) = _1ac591a33_leftCheat{._field_delta=3LL, ._field_cutoff=jule::Str::lit("1953125", 7)}; (*it++) = _1ac591a33_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("9765625", 7)}; (*it++) = _1ac591a33_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("48828125", 8)}; (*it++) = _1ac591a33_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("244140625", 9)}; (*it++) = _1ac591a33_leftCheat{._field_delta=4LL, ._field_cutoff=jule::Str::lit("1220703125", 10)}; (*it++) = _1ac591a33_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("6103515625", 10)}; (*it++) = _1ac591a33_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("30517578125", 11)}; (*it++) = _1ac591a33_leftCheat{._field_delta=5LL, ._field_cutoff=jule::Str::lit("152587890625", 12)}; (*it++) = _1ac591a33_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("762939453125", 12)}; (*it++) = _1ac591a33_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("3814697265625", 13)}; (*it++) = _1ac591a33_leftCheat{._field_delta=6LL, ._field_cutoff=jule::Str::lit("19073486328125", 14)}; (*it++) = _1ac591a33_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("95367431640625", 14)}; (*it++) = _1ac591a33_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("476837158203125", 15)}; (*it++) = _1ac591a33_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("2384185791015625", 16)}; (*it++) = _1ac591a33_leftCheat{._field_delta=7LL, ._field_cutoff=jule::Str::lit("11920928955078125", 17)}; (*it++) = _1ac591a33_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("59604644775390625", 17)}; (*it++) = _1ac591a33_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("298023223876953125", 18)}; (*it++) = _1ac591a33_leftCheat{._field_delta=8LL, ._field_cutoff=jule::Str::lit("1490116119384765625", 19)}; (*it++) = _1ac591a33_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("7450580596923828125", 19)}; (*it++) = _1ac591a33_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("37252902984619140625", 20)}; (*it++) = _1ac591a33_leftCheat{._field_delta=9LL, ._field_cutoff=jule::Str::lit("186264514923095703125", 21)}; (*it++) = _1ac591a33_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("931322574615478515625", 21)}; (*it++) = _1ac591a33_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("4656612873077392578125", 22)}; (*it++) = _1ac591a33_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("23283064365386962890625", 23)}; (*it++) = _1ac591a33_leftCheat{._field_delta=10LL, ._field_cutoff=jule::Str::lit("116415321826934814453125", 24)}; (*it++) = _1ac591a33_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("582076609134674072265625", 24)}; (*it++) = _1ac591a33_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("2910383045673370361328125", 25)}; (*it++) = _1ac591a33_leftCheat{._field_delta=11LL, ._field_cutoff=jule::Str::lit("14551915228366851806640625", 26)}; (*it++) = _1ac591a33_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("72759576141834259033203125", 26)}; (*it++) = _1ac591a33_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("363797880709171295166015625", 27)}; (*it++) = _1ac591a33_leftCheat{._field_delta=12LL, ._field_cutoff=jule::Str::lit("1818989403545856475830078125", 28)}; (*it++) = _1ac591a33_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("9094947017729282379150390625", 28)}; (*it++) = _1ac591a33_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("45474735088646411895751953125", 29)}; (*it++) = _1ac591a33_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("227373675443232059478759765625", 30)}; (*it++) = _1ac591a33_leftCheat{._field_delta=13LL, ._field_cutoff=jule::Str::lit("1136868377216160297393798828125", 31)}; (*it++) = _1ac591a33_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("5684341886080801486968994140625", 31)}; (*it++) = _1ac591a33_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("28421709430404007434844970703125", 32)}; (*it++) = _1ac591a33_leftCheat{._field_delta=14LL, ._field_cutoff=jule::Str::lit("142108547152020037174224853515625", 33)}; (*it++) = _1ac591a33_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("710542735760100185871124267578125", 33)}; (*it++) = _1ac591a33_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("3552713678800500929355621337890625", 34)}; (*it++) = _1ac591a33_leftCheat{._field_delta=15LL, ._field_cutoff=jule::Str::lit("17763568394002504646778106689453125", 35)}; (*it++) = _1ac591a33_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("88817841970012523233890533447265625", 35)}; (*it++) = _1ac591a33_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("444089209850062616169452667236328125", 36)}; (*it++) = _1ac591a33_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("2220446049250313080847263336181640625", 37)}; (*it++) = _1ac591a33_leftCheat{._field_delta=16LL, ._field_cutoff=jule::Str::lit("11102230246251565404236316680908203125", 38)}; (*it++) = _1ac591a33_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("55511151231257827021181583404541015625", 38)}; (*it++) = _1ac591a33_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("277555756156289135105907917022705078125", 39)}; (*it++) = _1ac591a33_leftCheat{._field_delta=17LL, ._field_cutoff=jule::Str::lit("1387778780781445675529539585113525390625", 40)}; (*it++) = _1ac591a33_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("6938893903907228377647697925567626953125", 40)}; (*it++) = _1ac591a33_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("34694469519536141888238489627838134765625", 41)}; (*it++) = _1ac591a33_leftCheat{._field_delta=18LL, ._field_cutoff=jule::Str::lit("173472347597680709441192448139190673828125", 42)}; (*it++) = _1ac591a33_leftCheat{._field_delta=19LL, ._field_cutoff=jule::Str::lit("867361737988403547205962240695953369140625", 42)}; __jule_collection; });
	_1bc198e22_Spaces = ({ auto __jule_collection = jule::Array<jule::I32,5>(); auto it = __jule_collection.begin(); (*it++) = ' '; (*it++) = '\t'; (*it++) = '\v'; (*it++) = '\r'; (*it++) = '\n'; __jule_collection; });
	_1bc199131_UnaryOps = ({ auto __jule_collection = jule::Array<jule::U32,6>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(68LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(65LLU); __jule_collection; });
	_1bc19940b_BinOps = ({ auto __jule_collection = jule::Array<jule::U32,18>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(60LLU); (*it++) = static_cast<jule::U32>(61LLU); (*it++) = static_cast<jule::U32>(62LLU); (*it++) = static_cast<jule::U32>(63LLU); (*it++) = static_cast<jule::U32>(64LLU); (*it++) = static_cast<jule::U32>(65LLU); (*it++) = static_cast<jule::U32>(66LLU); (*it++) = static_cast<jule::U32>(67LLU); (*it++) = static_cast<jule::U32>(56LLU); (*it++) = static_cast<jule::U32>(57LLU); (*it++) = static_cast<jule::U32>(69LLU); (*it++) = static_cast<jule::U32>(70LLU); (*it++) = static_cast<jule::U32>(53LLU); (*it++) = static_cast<jule::U32>(52LLU); (*it++) = static_cast<jule::U32>(54LLU); (*it++) = static_cast<jule::U32>(55LLU); (*it++) = static_cast<jule::U32>(50LLU); (*it++) = static_cast<jule::U32>(51LLU); __jule_collection; });
	_1bc2414e7_PostfixOps = ({ auto __jule_collection = jule::Array<jule::U32,2>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(58LLU); (*it++) = static_cast<jule::U32>(59LLU); __jule_collection; });
	_1bc2417d3_AssignOps = ({ auto __jule_collection = jule::Array<jule::U32,11>(); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::U32>(71LLU); (*it++) = static_cast<jule::U32>(40LLU); (*it++) = static_cast<jule::U32>(41LLU); (*it++) = static_cast<jule::U32>(43LLU); (*it++) = static_cast<jule::U32>(42LLU); (*it++) = static_cast<jule::U32>(44LLU); (*it++) = static_cast<jule::U32>(46LLU); (*it++) = static_cast<jule::U32>(45LLU); (*it++) = static_cast<jule::U32>(49LLU); (*it++) = static_cast<jule::U32>(48LLU); (*it++) = static_cast<jule::U32>(47LLU); __jule_collection; });
	_1bc2502c5_keywords = ({ auto __jule_collection = jule::Array<_1bc24edda_kindPair,28>(); auto it = __jule_collection.begin(); (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("const", 5)), ._field_id=static_cast<jule::U32>(6LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("ret", 3)), ._field_id=static_cast<jule::U32>(2LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("type", 4)), ._field_id=static_cast<jule::U32>(7LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("for", 3)), ._field_id=static_cast<jule::U32>(9LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("break", 5)), ._field_id=static_cast<jule::U32>(10LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("continue", 8)), ._field_id=static_cast<jule::U32>(11LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("in", 2)), ._field_id=static_cast<jule::U32>(12LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("if", 2)), ._field_id=static_cast<jule::U32>(13LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("else", 4)), ._field_id=static_cast<jule::U32>(14LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("use", 3)), ._field_id=static_cast<jule::U32>(16LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("goto", 4)), ._field_id=static_cast<jule::U32>(18LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("enum", 4)), ._field_id=static_cast<jule::U32>(20LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("struct", 6)), ._field_id=static_cast<jule::U32>(21LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("co", 2)), ._field_id=static_cast<jule::U32>(22LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("match", 5)), ._field_id=static_cast<jule::U32>(23LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("self", 4)), ._field_id=static_cast<jule::U32>(24LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("trait", 5)), ._field_id=static_cast<jule::U32>(25LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("impl", 4)), ._field_id=static_cast<jule::U32>(26LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("cpp", 3)), ._field_id=static_cast<jule::U32>(27LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fall", 4)), ._field_id=static_cast<jule::U32>(28LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("fn", 2)), ._field_id=static_cast<jule::U32>(29LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("let", 3)), ._field_id=static_cast<jule::U32>(30LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("unsafe", 6)), ._field_id=static_cast<jule::U32>(31LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("mut", 3)), ._field_id=static_cast<jule::U32>(32LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("defer", 5)), ._field_id=static_cast<jule::U32>(33LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("static", 6)), ._field_id=static_cast<jule::U32>(34LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("error", 5)), ._field_id=static_cast<jule::U32>(36LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("map", 3)), ._field_id=static_cast<jule::U32>(37LLU)}; __jule_collection; });
	_1bc250605_basicOps = ({ auto __jule_collection = jule::Array<_1bc24edda_kindPair,46>(); auto it = __jule_collection.begin(); (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("::", 2)), ._field_id=static_cast<jule::U32>(19LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":=", 2)), ._field_id=static_cast<jule::U32>(38LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(":", 1)), ._field_id=static_cast<jule::U32>(8LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(";", 1)), ._field_id=static_cast<jule::U32>(3LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(",", 1)), ._field_id=static_cast<jule::U32>(5LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("...", 3)), ._field_id=static_cast<jule::U32>(39LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(".", 1)), ._field_id=static_cast<jule::U32>(17LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+=", 2)), ._field_id=static_cast<jule::U32>(40LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-=", 2)), ._field_id=static_cast<jule::U32>(41LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*=", 2)), ._field_id=static_cast<jule::U32>(42LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/=", 2)), ._field_id=static_cast<jule::U32>(43LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%=", 2)), ._field_id=static_cast<jule::U32>(44LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<=", 3)), ._field_id=static_cast<jule::U32>(45LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>=", 3)), ._field_id=static_cast<jule::U32>(46LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^=", 2)), ._field_id=static_cast<jule::U32>(47LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&=", 2)), ._field_id=static_cast<jule::U32>(48LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|=", 2)), ._field_id=static_cast<jule::U32>(49LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("==", 2)), ._field_id=static_cast<jule::U32>(50LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!=", 2)), ._field_id=static_cast<jule::U32>(51LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">=", 2)), ._field_id=static_cast<jule::U32>(52LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<=", 2)), ._field_id=static_cast<jule::U32>(53LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&&", 2)), ._field_id=static_cast<jule::U32>(54LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("||", 2)), ._field_id=static_cast<jule::U32>(55LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<<", 2)), ._field_id=static_cast<jule::U32>(56LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">>", 2)), ._field_id=static_cast<jule::U32>(57LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("++", 2)), ._field_id=static_cast<jule::U32>(58LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("--", 2)), ._field_id=static_cast<jule::U32>(59LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("+", 1)), ._field_id=static_cast<jule::U32>(60LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("-", 1)), ._field_id=static_cast<jule::U32>(61LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("*", 1)), ._field_id=static_cast<jule::U32>(62LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("/", 1)), ._field_id=static_cast<jule::U32>(63LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("%", 1)), ._field_id=static_cast<jule::U32>(64LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("&", 1)), ._field_id=static_cast<jule::U32>(65LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("|", 1)), ._field_id=static_cast<jule::U32>(66LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("^", 1)), ._field_id=static_cast<jule::U32>(67LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("!", 1)), ._field_id=static_cast<jule::U32>(68LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("<", 1)), ._field_id=static_cast<jule::U32>(69LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(">", 1)), ._field_id=static_cast<jule::U32>(70LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("=", 1)), ._field_id=static_cast<jule::U32>(71LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("#", 1)), ._field_id=static_cast<jule::U32>(35LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("{", 1)), ._field_id=static_cast<jule::U32>(72LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("}", 1)), ._field_id=static_cast<jule::U32>(73LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("[", 1)), ._field_id=static_cast<jule::U32>(76LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("]", 1)), ._field_id=static_cast<jule::U32>(77LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit("(", 1)), ._field_id=static_cast<jule::U32>(74LLU)}; (*it++) = _1bc24edda_kindPair{._field_kind=static_cast<jule::Str>(jule::Str::lit(")", 1)), ._field_id=static_cast<jule::U32>(75LLU)}; __jule_collection; });
	_1bc37385a_BitSize = 0LL;
	_1bc373abe_SysInt = jule::Str();
	_1bc373d77_SysUint = jule::Str();
	_1bc3a4acd_builtinConstraints = ({ auto __jule_collection = jule::Slice<jule::Str>::alloc(8, 8); auto it = __jule_collection.begin(); (*it++) = static_cast<jule::Str>(jule::Str::lit("signed", 6)); (*it++) = static_cast<jule::Str>(jule::Str::lit("unsigned", 8)); (*it++) = static_cast<jule::Str>(jule::Str::lit("float", 5)); (*it++) = static_cast<jule::Str>(jule::Str::lit("numeric", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("mutable", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("immutable", 9)); (*it++) = static_cast<jule::Str>(jule::Str::lit("ordered", 7)); (*it++) = static_cast<jule::Str>(jule::Str::lit("comparable", 10)); __jule_collection; });
	_1bc539009_primNil = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=nullptr});
	_1bc539306_primVoid = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(jule::Str::lit("void", 4)), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc5395ae_primAny = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("any", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc5398ab_primStr = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("str", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc539b64_primBool = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("bool", 4))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc539e1c_primUintptr = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uintptr", 7))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53a1c5_primUint = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("uint", 4))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53a58d_primInt = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("int", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53a7d0_primI8 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i8", 2))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53aa77_primI16 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i16", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53ad30_primI32 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i32", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53b0d8_primI64 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("i64", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53b391_primU8 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u8", 2))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53b649_primU16 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u16", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53b902_primU32 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u32", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53bddb_primU64 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("u64", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53c12d_primF32 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f32", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bc53c33c_primF64 = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(_1bc4d3404_buildPrimType(static_cast<jule::Str>(jule::Str::lit("f64", 3))), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)});
	_1bcdc8b40_ProgramMeta = static_cast<jule::Ptr<_1bcdcad73_Meta>>(nullptr);
	_1bdb02b10_emptyData = jule::new_ptr<_1bdb035c2_data>(_1bdb035c2_data{._field_boundary=jule::Ptr<_1bdb0587c_boundary>(nullptr), ._field_nils=jule::Ptr<_1bdade349_nils>(nullptr), ._field_dynamic=jule::Ptr<_1bdb006e0_dynamic>(nullptr), ._field_flags=0LL});
	_1bdb0861b_Copy = false;
	_1bdb08918_Deadcode = false;
	_1bdb08bc1_Append = false;
	_1bdb08ebd_Math = false;
	_1bdb09276_Access = false;
	_1bdb0952e_Inline = false;
	_1bdb097d7_Ptr = false;
	_1bdb09ba0_Cond = false;
	_1bdb09de2_Str = false;
	_1bdb0a189_Slice = false;
	_1bdb0a442_Assign = false;
	_1bdb0a6ea_Exceptional = false;
	_1bdb0a9a3_Iter = false;
	_1bdb0ac5b_Dynamic = false;
	_1bdb0b014_Array = false;
	_1bdb0b4ed_Len = false;
	_1bdb0b740_StdStrings = false;
	_1bdb0b94e_StdMathCmplx = false;
	_1bdc25370_exprEnabled = false;
	_1bdc2557e_scopeEnabled = false;
	_1bdedc538_mdays = ({ auto __jule_collection = jule::Array<jule::U64,12>(); auto it = __jule_collection.begin(); (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 30LLU; (*it++) = 31LLU; (*it++) = 31LLU; (*it++) = 29LLU; __jule_collection; });
	_1bdc290cc_assignArgName = jule::Str::lit("__jule_assign_arg", 17);
	_1bdee8104_generalGCPtr = jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4c313b_Sptr>(_1bc4c313b_Sptr{._field_Elem=jule::new_ptr<_1bc4b64e7_Type>(_1bc4b64e7_Type{._field_BindIdent=jule::Str(), ._field_Generic=false, ._field_Variadic=false, ._field_Kind=jule::Trait(jule::new_ptr<_1bc4be610_Prim>(_1bc4be610_Prim{._field_Kind=static_cast<jule::Str>(jule::Str::lit("uintptr", 7))}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data22)})}), (jule::Trait::Type*)&_1bc4b6041_Kind_mptr_data23)});
	_1abb2301b_CaseRanges = _1abb23307__CaseRanges;

	__jule_argc = static_cast<jule::Int>(argc);
	__jule_argv = reinterpret_cast<jule::U8**>(argv);
	__jule_envp = reinterpret_cast<jule::U8**>(envp);

	__jule_call_initializers();
	_1abb48838_main();

	return EXIT_SUCCESS;
}